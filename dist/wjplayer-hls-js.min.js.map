{"version":3,"sources":["webpack:///webpack/universalModuleDefinition?5ca6","webpack:///wjplayer-hls-js.min.js","webpack:///webpack/bootstrap 3c03377bf5fd3fa8e61b?3d6f","webpack:///./src/hls-js/index.js","webpack:///./src/bundle.js?7b89","webpack:///./~/video.js/es5/video.js?addf*","webpack:///./~/video.js/es5/video.js?5e7e","webpack:///./~/global/window.js?7ff2","webpack:///./~/global/document.js?cc96","webpack:///./~/video.js/es5/setup.js?1a4e","webpack:///./~/video.js/es5/utils/dom.js?869c","webpack:///./~/video.js/es5/utils/guid.js?b2a2","webpack:///./~/video.js/es5/utils/log.js?0dcb","webpack:///./~/video.js/es5/utils/browser.js?83aa","webpack:///./~/video.js/es5/utils/obj.js?4430","webpack:///./~/tsml/tsml.js?7538","webpack:///./~/video.js/es5/utils/events.js?6857","webpack:///./~/video.js/es5/utils/stylesheet.js?56a6","webpack:///./~/video.js/es5/component.js?5748","webpack:///./~/video.js/es5/utils/fn.js?13cb","webpack:///./~/video.js/es5/utils/to-title-case.js?b1f0","webpack:///./~/video.js/es5/utils/merge-options.js?7fc3","webpack:///./~/video.js/es5/event-target.js?b705","webpack:///./~/video.js/es5/player.js?bc10","webpack:///./~/video.js/es5/utils/time-ranges.js?d78c","webpack:///./~/video.js/es5/utils/buffer.js?5c46","webpack:///./~/video.js/es5/fullscreen-api.js?9736","webpack:///./~/video.js/es5/media-error.js?9791","webpack:///./~/safe-json-parse/tuple.js?34a8","webpack:///./~/video.js/es5/tracks/text-track-list-converter.js?ab4c","webpack:///./~/video.js/es5/modal-dialog.js?8a36","webpack:///./~/video.js/es5/tech/tech.js?d5ea","webpack:///./~/video.js/es5/tracks/html-track-element.js?8212","webpack:///./~/video.js/es5/tracks/text-track.js?c9fc","webpack:///./~/video.js/es5/tracks/text-track-cue-list.js?2990","webpack:///./~/video.js/es5/tracks/track-enums.js?7b74","webpack:///./~/video.js/es5/tracks/track.js?512f","webpack:///./~/video.js/es5/utils/url.js?06c2","webpack:///./~/xhr/index.js?bbe1","webpack:///./~/is-function/index.js?207b","webpack:///./~/parse-headers/parse-headers.js?8404","webpack:///./~/trim/index.js?68a9","webpack:///./~/for-each/index.js?26e8","webpack:///./~/xtend/immutable.js?94ee","webpack:///./~/video.js/es5/tracks/html-track-element-list.js?3ff8","webpack:///./~/video.js/es5/tracks/text-track-list.js?5444","webpack:///./~/video.js/es5/tracks/track-list.js?bd7e","webpack:///./~/video.js/es5/tracks/video-track-list.js?4053","webpack:///./~/video.js/es5/tracks/audio-track-list.js?7b56","webpack:///./~/videojs-vtt.js/lib/index.js?a07f","webpack:///./~/videojs-vtt.js/lib/vtt.js?0e1e","webpack:///./~/videojs-vtt.js/lib/vttcue-extended.js?a644","webpack:///./~/videojs-vtt.js/lib/vttcue.js?7d9d","webpack:///./~/videojs-vtt.js/lib/vttregion-extended.js?f9f0","webpack:///./~/videojs-vtt.js/lib/vttregion.js?02d5","webpack:///./~/video.js/es5/tech/loader.js?ef51","webpack:///./~/video.js/es5/tech/flash.js?e11f","webpack:///./~/video.js/es5/tech/flash-rtmp.js?02bd","webpack:///./~/video.js/es5/poster-image.js?cd80","webpack:///./~/video.js/es5/clickable-component.js?b755","webpack:///./~/video.js/es5/tracks/text-track-display.js?6463","webpack:///./~/video.js/es5/loading-spinner.js?a63d","webpack:///./~/video.js/es5/big-play-button.js?72a5","webpack:///./~/video.js/es5/button.js?e12f","webpack:///./~/video.js/es5/close-button.js?9ca5","webpack:///./~/video.js/es5/control-bar/control-bar.js?7d64","webpack:///./~/video.js/es5/control-bar/play-toggle.js?8b94","webpack:///./~/video.js/es5/control-bar/time-controls/current-time-display.js?5634","webpack:///./~/video.js/es5/utils/format-time.js?94c3","webpack:///./~/video.js/es5/control-bar/time-controls/duration-display.js?6246","webpack:///./~/video.js/es5/control-bar/time-controls/time-divider.js?ff34","webpack:///./~/video.js/es5/control-bar/time-controls/remaining-time-display.js?c56a","webpack:///./~/video.js/es5/control-bar/live-display.js?dac5","webpack:///./~/video.js/es5/control-bar/progress-control/progress-control.js?d395","webpack:///./~/video.js/es5/control-bar/progress-control/seek-bar.js?bbdf","webpack:///./~/video.js/es5/slider/slider.js?7fa6","webpack:///./~/video.js/es5/utils/computed-style.js?5fb5","webpack:///./~/video.js/es5/control-bar/progress-control/load-progress-bar.js?eec9","webpack:///./~/video.js/es5/control-bar/progress-control/play-progress-bar.js?205b","webpack:///./~/video.js/es5/control-bar/progress-control/tooltip-progress-bar.js?8007","webpack:///./~/video.js/es5/control-bar/progress-control/mouse-time-display.js?c696","webpack:///./~/video.js/es5/control-bar/fullscreen-toggle.js?7567","webpack:///./~/video.js/es5/control-bar/volume-control/volume-control.js?7d2f","webpack:///./~/video.js/es5/control-bar/volume-control/volume-bar.js?e1cc","webpack:///./~/video.js/es5/control-bar/volume-control/volume-level.js?9ff2","webpack:///./~/video.js/es5/control-bar/volume-menu-button.js?1b39","webpack:///./~/video.js/es5/popup/popup.js?0d8e","webpack:///./~/video.js/es5/popup/popup-button.js?837b","webpack:///./~/video.js/es5/control-bar/mute-toggle.js?b57e","webpack:///./~/video.js/es5/control-bar/text-track-controls/chapters-button.js?0c5c","webpack:///./~/video.js/es5/control-bar/text-track-controls/text-track-button.js?dbf0","webpack:///./~/video.js/es5/control-bar/track-button.js?6856","webpack:///./~/video.js/es5/menu/menu-button.js?c7b6","webpack:///./~/video.js/es5/menu/menu.js?5299","webpack:///./~/video.js/es5/control-bar/text-track-controls/text-track-menu-item.js?017c","webpack:///./~/video.js/es5/menu/menu-item.js?48d3","webpack:///./~/video.js/es5/control-bar/text-track-controls/off-text-track-menu-item.js?ea36","webpack:///./~/video.js/es5/control-bar/text-track-controls/chapters-track-menu-item.js?4307","webpack:///./~/video.js/es5/control-bar/text-track-controls/descriptions-button.js?6a3a","webpack:///./~/video.js/es5/control-bar/text-track-controls/subtitles-button.js?3ea3","webpack:///./~/video.js/es5/control-bar/text-track-controls/captions-button.js?a34b","webpack:///./~/video.js/es5/control-bar/text-track-controls/caption-settings-menu-item.js?27f9","webpack:///./~/video.js/es5/control-bar/audio-track-controls/audio-track-button.js?bd70","webpack:///./~/video.js/es5/control-bar/audio-track-controls/audio-track-menu-item.js?b9cc","webpack:///./~/video.js/es5/control-bar/playback-rate-menu/playback-rate-menu-button.js?52ec","webpack:///./~/video.js/es5/control-bar/playback-rate-menu/playback-rate-menu-item.js?9d90","webpack:///./~/video.js/es5/control-bar/spacer-controls/custom-control-spacer.js?3639","webpack:///./~/video.js/es5/control-bar/spacer-controls/spacer.js?cc9c","webpack:///./~/video.js/es5/error-display.js?51d9","webpack:///./~/video.js/es5/tracks/text-track-settings.js?4682","webpack:///./~/video.js/es5/tech/html5.js?7715","webpack:///./~/video.js/es5/plugins.js?b98a","webpack:///./~/video.js/es5/tracks/audio-track.js?3e71","webpack:///./~/video.js/es5/tracks/video-track.js?2e9a","webpack:///./~/video.js/es5/extend.js?596b","webpack:///./~/videojs-contrib-ads/src/videojs.ads.js?be0d","webpack:///./~/videojs-ima/src/videojs.ima.js?30ba","webpack:///./~/videojs-ga/dist/videojs.ga.js?60c6","webpack:///./~/videojs-social/videojs-social.js?6870","webpack:///./~/videojs-download-button/es5/plugin.js?e629","webpack:///./src/wjplayer.js?033f","webpack:///./~/hls.js/dist/hls.js","webpack:///./~/videojs5-hlsjs-source-handler/lib/main.js","webpack:///./~/videojs5-hlsjs-source-handler/lib/videojs5-hlsjs-source-handler.js","webpack:///./~/videojs-quality-picker/lib/vjs-quality-picker.js","webpack:///./~/videojs-quality-picker/lib/quality-picker-button.js","webpack:///./~/videojs-quality-picker/lib/quality-menu.js","webpack:///./~/videojs-quality-picker/lib/quality-menu-item.js"],"names":["root","factory","exports","module","define","amd","this","modules","__webpack_require__","moduleId","installedModules","id","loaded","call","m","c","p","_interopRequireDefault","obj","__esModule","default","Object","defineProperty","value","_wjplayer","_wjplayer2","global","_interopRequireWildcard","newObj","key","prototype","hasOwnProperty","videojs","options","ready","tag","indexOf","slice","getPlayers","_log2","warn","Dom","getEl","nodeName","TypeError","player","_player2","players","playerId","hooks","forEach","hookFunction","opts","_mergeOptions3","_obj","isObject","Array","isArray","error","PlayerComponent","_component2","getComponent","__WEBPACK_AMD_DEFINE_ARRAY__","__WEBPACK_AMD_DEFINE_RESULT__","_window","Symbol","iterator","constructor","_window2","_document","_document2","_setup","setup","_stylesheet","stylesheet","_component","_eventTarget","_eventTarget2","_events","Events","_player","_plugins","_plugins2","_mergeOptions2","_fn","Fn","_textTrack","_textTrack2","_audioTrack","_audioTrack2","_videoTrack","_videoTrack2","_timeRanges","_formatTime","_formatTime2","_log","_dom","_browser","browser","_url","Url","_computedStyle","_computedStyle2","_extend","_extend2","_xhr","_xhr2","_tech","_tech2","HTMLVideoElement","isReal","createElement","hooks_","type","fn","concat","hook","removeHook","index","splice","VIDEOJS_NO_DYNAMIC_STYLE","style","$","createStyleElement","head","insertBefore","firstChild","setTextContent","autoSetupTimeout","VERSION","options_","registerComponent","name","comp","isTech","getTech","registerTech","TOUCH_ENABLED","extend","mergeOptions","bind","plugin","addLanguage","code","data","_mergeOptions","toLowerCase","languages","log","createTimeRange","createTimeRanges","formatTime","parseUrl","isCrossOrigin","EventTarget","on","one","off","trigger","xhr","TextTrack","AudioTrack","VideoTrack","isEl","isTextNode","createEl","hasClass","hasElClass","addClass","addElClass","removeClass","removeElClass","toggleClass","toggleElClass","setAttributes","setElAttributes","getAttributes","getElAttributes","emptyEl","appendContent","insertContent","computedStyle","apply","undefined","window","self","topLevel","minDoc","document","doccy","wait","vjs","setTimeout","autoSetup","hasLoaded","_windowLoaded","vids","getElementsByTagName","audios","mediaEls","length","i","e","push","_i","_e","_i2","_e2","mediaEl","getAttribute","readyState","_taggedTemplateLiteralLoose","strings","raw","isNonBlankString","str","test","throwIfWhitespace","Error","classRegExp","className","RegExp","nodeType","createQuerier","method","selector","context","querySelector","ctx","getElementById","tagName","arguments","properties","attributes","content","el","getOwnPropertyNames","propName","val","_tsml2","_templateObject","setAttribute","textContent","attrName","text","innerText","insertElFirst","child","parent","appendChild","getElData","elIdAttr","Guid","newGUID","elData","hasElData","removeElData","removeAttribute","element","classToCheck","classList","contains","classToAdd","add","trim","classToRemove","remove","split","filter","join","classToToggle","predicate","has","attrValue","knownBooleans","attrs","attrVal","attribute","blockTextSelection","body","focus","onselectstart","unblockTextSelection","findElPosition","box","getBoundingClientRect","parentNode","left","top","docEl","documentElement","clientLeft","scrollLeft","pageXOffset","clientTop","scrollTop","pageYOffset","Math","round","getPointerPosition","event","position","boxW","offsetWidth","boxH","offsetHeight","boxY","boxX","pageY","pageX","changedTouches","y","max","min","x","removeChild","normalizeContent","map","createTextNode","node","$$","_guid","_tsml","Date","getTime","logByType","args","stringify","IE_VERSION","unshift","toUpperCase","history","console","a","JSON","String","_len","_key","_len2","_key2","_len3","_key3","BACKGROUND_SIZE_SUPPORTED","IS_ANY_SAFARI","IS_SAFARI","IS_IE8","IS_CHROME","IS_EDGE","IS_FIREFOX","IS_NATIVE_ANDROID","IS_OLD_ANDROID","ANDROID_VERSION","IS_ANDROID","IOS_VERSION","IS_IOS","IS_IPOD","IS_IPHONE","IS_IPAD","USER_AGENT","navigator","userAgent","webkitVersionMap","exec","appleWebkitVersion","parseFloat","pop","match","major","minor","result","DocumentTouch","each","object","keys","reduce","initial","accum","assign","target","sources","source","_typeof","isPlain","toString","clean","s","replace","sa","_cleanUpEvents","elem","handlers","removeEventListener","dispatcher","detachEvent","disabled","_handleMultipleEvents","types","callback","fixEvent","returnTrue","returnFalse","isPropagationStopped","old","preventDefault","srcElement","relatedTarget","fromElement","toElement","returnValue","defaultPrevented","stopPropagation","cancelBubble","stopImmediatePropagation","isImmediatePropagationStopped","clientX","doc","clientY","which","charCode","keyCode","button","guid","hash","handlersCopy","n","addEventListener","attachEvent","removeType","t","elemData","ownerDocument","bubbles","targetData","func","styleSheet","cssText","_classCallCheck","instance","Constructor","_toTitleCase","_toTitleCase2","Component","play","player_","id_","name_","el_","children_","childIndex_","childNameIndex_","initChildren","reportTouchActivity","enableTouchActivity","dispose","localize","string","language","primaryCode","primaryLang","contentEl","contentEl_","children","getChildById","getChild","addChild","component","componentName","componentClassName","componentClass","ComponentClass","childNodes","refNode","childFound","compEl","_this","parentOptions","handleAdd","playerOptions","newChild","workingChildren","Tech","some","wchild","buildCSSClass","first","second","third","_this2","removeOnDispose","cleanRemover","_this3","_arguments","newFunc","sync","isReady_","readyQueue_","triggerReady","readyQueue","show","hide","lockShowing","unlockShowing","width","num","skipListeners","dimension","height","dimensions","widthOrHeight","pxIndex","parseInt","currentDimension","computedWidthOrHeight","getComputedStyle","getPropertyValue","rule","currentDimensions","currentWidth","currentHeight","emitTapEvents","touchStart","firstTouch","tapMovementThreshold","touchTimeThreshold","couldBeTap","touches","xdiff","ydiff","touchDistance","sqrt","noTap","touchTime","reportUserActivity","report","touchHolding","clearInterval","setInterval","touchEnd","timeout","timeoutId","disposeFn","clearTimeout","interval","intervalId","components_","Player","playerName","every","Boolean","props","init","subObj","create","throttle","uid","bound","last","now","throttled","toTitleCase","charAt","allowedEvents_","ael","dispatchEvent","_possibleConstructorReturn","ReferenceError","_inherits","subClass","superClass","enumerable","writable","configurable","setPrototypeOf","__proto__","_buffer","_fullscreenApi","_fullscreenApi2","_mediaError","_mediaError2","_tuple","_tuple2","_textTrackListConverter","_textTrackListConverter2","_modalDialog","_modalDialog2","_audioTrackList","_audioTrackList2","_videoTrackList","_videoTrackList2","TECH_EVENTS_RETRIGGER","_Component","getTagSettings","closest","techOrder","tagAttributes","languagesToLower","languages_","cache_","poster_","poster","controls_","controls","scrubbing_","playerOptionsCopy","plugins","isAudio","flexNotSupported_","userActive","listenForUserActivity_","handleFullscreenChange_","handleStageClick_","styleEl_","tech_","playerElIngest","playerElIngest_","hasAttribute","attr","defaultsStyleEl","nextSibling","fluid","aspectRatio","links","linkEl","item","initNetworkState_","networkState","_dimension","privDimension","parsedVal","isNaN","updateStyleEl_","bool","fluid_","ratio","aspectRatio_","_width","width_","_height","height_","techEl","idClass","videoWidth","videoHeight","ratioParts","ratioMultiplier","loadTech_","techName","unloadTech_","disposeMediaElement","techName_","techOptions","nativeControlsForTouch","techId","videoTracks","videoTracks_","textTracks","textTracks_","audioTracks","audioTracks_","autoplay","preload","loop","muted","vtt.js","currentType_","src","currentTime","startTime","TechComponent","handleTechReady_","jsonToTextTracks","textTracksJson_","handleTechLoadStart_","handleTechWaiting_","handleTechCanPlay_","handleTechCanPlayThrough_","handleTechPlaying_","handleTechEnded_","handleTechSeeking_","handleTechSeeked_","handleTechPlay_","handleTechFirstPlay_","handleTechPause_","handleTechDurationChange_","handleTechFullscreenChange_","handleTechError_","handleTechPosterChange_","handleTechTextData_","usingNativeControls","techGet_","addTechControlsListeners_","textTracksToJson","tech","safety","IWillNotUseThisInPlugins","errorText","alert","removeTechControlsListeners_","handleTechClick_","handleTechTouchStart_","handleTechTouchMove_","handleTechTouchEnd_","handleTechTap_","volume","techCall_","currentSrc","paused","hasStarted","_hasStarted","hasStarted_","starttime","pause","duration","userWasActive","isFullscreen","getCache","arg","scrubbing","isScrubbing","seconds","Infinity","remainingTime","buffered","bufferedPercent","bufferedEnd","end","percentAsDecimal","vol","_muted","supportsFullScreen","isFS","isFullscreen_","requestFullscreen","fsApi","fullscreenchange","documentFullscreenChange","fullscreenElement","enterFullWindow","exitFullscreen","exitFullWindow","isFullWindow","docOrigOverflow","overflow","fullWindowOnEscKey","canPlayType","can","j","isSupported","selectSource","_this4","techs","_ref","findFirstPassingTechSourcePair","outerArray","innerArray","tester","found","outerChoice","innerChoice","foundSourceAndTech","flip","b","finder","_ref2","canPlaySource","sourceOrder","currentTech","sourceList_","load","sourceTech","message","notSupportedMessage","reset","currentSources","currentSource","currentType","usingNativeControls_","err","error_","errorDisplay","close","errorTypes","userActivity_","userActive_","mouseInProgress","lastMoveX","lastMoveY","handleActivity","handleMouseMove","screenX","screenY","handleMouseDown","handleMouseUp","inactivityTimeout","playbackRate","rate","featuresPlaybackRate","isAudio_","remoteTextTracks","remoteTextTrackEls","addTextTrack","kind","label","addRemoteTextTrack","manualCleanup","removeRemoteTextTrack","_ref3","_ref3$track","track","language_","toJSON","tracks","createModal","_this5","modal","open","baseOptions","tagOptions","dataSetup","_safeParseTuple","hasChildNodes","childName","html5","flash","defaultVolume","playbackRates","userLanguage","rangeCheck","fnName","maxIndex","getRange","valueIndex","ranges","rangeIndex","createTimeRangesObj","start","bufferedDuration","FullscreenApi","apiMap","specApi","browserApi","MediaError","defaultMessages","status","1","2","3","4","5","errNum","SafeParseTuple","reviver","json","parse","trackToJson_","ret","acc","prop","cues","cue","endTime","trackEls","trackObjs","trackEl","addedTrack","addCue","MODAL_CLASS_NAME","ESC","ModalDialog","opened_","hasBeenOpened_","hasBeenFilled_","closeable","uncloseable","role","descEl_","description","tabIndex","aria-describedby","aria-hidden","aria-label","handleKeyPress","desc","fillAlways","fill","wasPlaying_","opened","temporary","closeable_","temp","controlText","fillWith","parentEl","nextSiblingEl","empty","content_","createTrackHelper","addTrack_","_htmlTrackElement","_htmlTrackElement2","_htmlTrackElementList","_htmlTrackElementList2","_textTrackList","_textTrackList2","featuresProgressEvents","manualProgressOn","featuresTimeupdateEvents","manualTimeUpdatesOn","nativeCaptions","featuresNativeTextTracks","emulateTextTracks","autoRemoteTextTracks_","initTextTrackListeners","initTrackListeners","onDurationChange","manualProgress","trackProgress","manualProgressOff","stopTrackingProgress","progressInterval","numBufferedPercent","bufferedPercent_","duration_","manualTimeUpdates","trackCurrentTime","stopTrackingCurrentTime","manualTimeUpdatesOff","currentTimeInterval","manuallyTriggered","clearTracks","list","removeTrack_","cleanupAutoTextTracks","played","setCurrentTime","textTrackListChanges","trackTypes","trackListChanges","addWebVttScript_","WebVTT","_ret","vtt","k","v","script","onload","onerror","remoteTracks","handleAddTrack","handleRemoveTrack","updateDisplay","textTracksChanges","mode","remoteTextTracks_","remoteTextTrackEls_","createRemoteTextTrack","htmlTrackElement","addTrackElement_","trackElement","getTrackElementByTrack_","removeTrackElement_","setPoster","techs_","featuresVolumeControl","featuresFullscreenResize","withSourceHandlers","_Tech","registerSourceHandler","handler","sourceHandlers","selectSourceHandler","canHandleSource","srcObj","sh","deferrable","originalFn","sourceHandler_","setSource","nativeSourceHandler","disposeSourceHandler","currentSource_","firstLoadStartListener_","successiveLoadStartListener_","handleSource","NONE","LOADING","LOADED","ERROR","HTMLTrackElement","_EventTarget","srclang","get","_textTrackCueList","_textTrackCueList2","_trackEnums","_track","_track2","parseCues","srcContent","parser","Parser","vttjs","StringDecoder","errors","oncue","onparsingerror","onflush","groupCollapsed","groupEnd","flush","loadTrack","uri","crossOrigin","cors","response","responseBody","loaded_","loadHandler","_Track","_ret2","settings","TextTrackKind","TextTrackMode","default_","tt","cues_","activeCues_","activeCues","changed","timeupdateHandler","set","newMode","ct","active","l","setCues_","removeCue","_removeCue","removed","cuechange","TextTrackCueList","length_","oldLength","defineProp","getCueById","VideoTrackKind","alternative","captions","main","sign","subtitles","commentary","AudioTrackKind","descriptions","main-desc","translation","chapters","metadata","hidden","showing","Track","trackProps","_loop","getFileExtension","getAbsoluteURL","url","href","addToBody","host","protocol","div","innerHTML","details","path","splitPathRe","pathParts","winLoc","location","urlInfo","srcProtocol","forEachArray","array","isEmpty","initParams","params","isFunction","xtend","createXHR","_createXHR","readystatechange","loadFunc","getBody","responseText","getXml","isJson","errorFunc","evt","timeoutTimer","statusCode","failureResponse","aborted","useXDR","headers","rawRequest","getAllResponseHeaders","parseHeaders","called","XDomainRequest","XMLHttpRequest","onreadystatechange","onprogress","ontimeout","username","password","withCredentials","abort","setRequestHeader","responseType","beforeSend","send","responseXML","firefoxBugTakenEffect","noop","confirm","prompt","row","right","forEachString","forEachObject","len","HtmlTrackElementList","trackElements","trackElements_","trackElement_","_trackList","_trackList2","TextTrackList","_TrackList","_prop","TrackList","tracks_","rtrack","getTrackById","change","addtrack","removetrack","disableOthers","selected","VideoTrackList","changing_","addTrack","removeTrack","enabled","AudioTrackList","VTTCue","VTTRegion","ParsingError","errorData","parseTimeStamp","input","computeSeconds","h","f","Settings","values","_objCreate","parseOptions","keyValueDelim","groupDelim","groups","kv","parseCue","regionList","consumeTimeStamp","ts","Errors","BadTimeStamp","oInput","consumeCueSettings","region","alt","vals","vals0","integer","percent","vertical","line","lineAlign","snapToLines","size","align","middle","positionAlign","skipWhitespace","substr","parseContent","nextToken","consume","unescape1","ESCAPE","unescape","shouldAdd","current","NEEDS_PARENT","localName","annotation","TAG_NAME","TAG_ANNOTATION","rootDiv","tagStack","createProcessingInstruction","determineBidi","cueDiv","pushNodes","nodeStack","nextTextNode","charCodeAt","strongRTLChars","computeLinePos","textTrackList","mediaElement","trackList","count","StyleBox","CueStyleBox","styleOptions","isIE8","color","backgroundColor","styles","bottom","display","writingMode","unicodeBidi","applyStyles","textAlign","font","whiteSpace","direction","stylesunicodeBidi","textPos","formatStyle","move","BoxPosition","lh","offsetTop","rects","getClientRects","lineHeight","moveBoxToLinePosition","styleBox","containerBox","boxPositions","findBestPosition","axis","bestPosition","specifiedPosition","percentage","overlapsOppositeAxis","within","overlapsAny","intersectPercentage","boxPosition","linePos","step","maxPosition","initialAxis","abs","ceil","reverse","calculatedPercentage","toCSSCompatValues","F","o","BadSignature","dflt","defaultKey","&amp;","&lt;","&gt;","&lrm;","&rlm;","&nbsp;","u","ruby","rt","lang","unit","toMove","overlaps","b2","boxes","container","intersectArea","reference","getSimpleBoxPosition","decode","decodeURIComponent","encodeURIComponent","convertCueToDOMTree","cuetext","FONT_SIZE_PERCENT","FONT_STYLE","CUE_BACKGROUND_PADDING","processCues","overlay","shouldCompute","hasBeenReset","displayState","paddedOverlay","margin","fontSize","decoder","state","buffer","TextDecoder","reportOrThrowError","collectNextLine","pos","parseRegion","xy","anchor","lines","regionAnchorX","regionAnchorY","viewportAnchorX","viewportAnchorY","scroll","onregion","parseHeader","stream","alreadyCollectedLine","hasSubstring","fromJSON","findDirectionSetting","dir","directionSetting","findAlignSetting","alignSetting","cobj","baseObj","_id","_pauseOnExit","_startTime","_endTime","_text","_region","_vertical","_snapToLines","_line","_lineAlign","_position","_positionAlign","_size","_align","setting","SyntaxError","autoKeyword","","lr","rl","getCueAsHTML","findScrollSetting","scrollSetting","isValidPercentValue","_lines","_regionAnchorX","_regionAnchorY","_viewportAnchorX","_viewportAnchorY","_scroll","defineProperties","up","MediaLoader","_createSetter","attrUpper","_api","vjs_setProperty","_createGetter","vjs_getProperty","_flashRtmp","_flashRtmp2","Flash","onReady","onEvent","onError","lastSeekTarget_","swf","ver","objId","flashVars","readyFunction","eventProxyFunction","errorEventProxyFunction","wmode","bgcolor","class","embed","ended","vjs_play","vjs_pause","_src","setSrc","vjs_src","seeking","time","seekable","NaN","vjs_load","enterFullScreen","_readWrite","_readOnly","version","formats","guessMimeType","ext","video/flv","video/x-flv","video/mp4","video/m4v","currSwf","checkReady","swfID","eventName","ActiveXObject","GetVariable","mimeTypes","enabledPlugin","getEmbedCode","objTag","flashVarsString","paramsString","attrsString","movie","flashvars","allowScriptAccess","allowNetworking","FlashRtmpDecorator","streamingFormats","rtmp/mp4","rtmp/flv","streamFromParts","connection","streamToParts","parts","connEnd","search","streamBegin","lastIndexOf","substring","isStreamingType","srcType","RTMP_RE","isStreamingSrc","rtmpSourceHandler","srcParts","setRtmpConnection","setRtmpStream","_clickableComponent","_clickableComponent2","PosterImage","_ClickableComponent","update","fallbackImg_","backgroundImage","handleClick","ClickableComponent","enable","aria-live","tabIndex_","createControlTextEl","controlTextEl_","controlText_","localizedText","nonIconControl","handleFocus","handleBlur","disable","constructColor","opacity","tryUpdateStyle","darkGray","lightGray","fontMap","monospace","sansSerif","serif","monospaceSansSerif","monospaceSerif","proportionalSansSerif","proportionalSerif","casual","smallcaps","TextTrackDisplay","toggleDisplay","modes","firstDesc","firstCaptions","aria-atomic","clearDisplay","descriptionsTrack","captionsSubtitlesTrack","updateForTrack","overrides","textTrackSettings","getValues","textOpacity","backgroundOpacity","windowColor","windowOpacity","edgeStyle","textShadow","fontPercent","fontFamily","fontVariant","LoadingSpinner","_button","_button2","BigPlayButton","_Button","Button","CloseButton","ControlBar","PlayToggle","handlePlay","handlePause","CurrentTimeDisplay","updateContent","formattedTime","formattedTime_","guide","floor","gm","gh","DurationDisplay","TimeDivider","RemainingTimeDisplay","LiveDisplay","updateShowing","ProgressControl","_slider","_slider2","SeekBar","_Slider","updateProgress","controlBar","progressControl","keepTooltipsInside","tooltipProgressBar","updateAriaAttributes","bar","playerWidth","tooltipWidth","tooltip","tooltipStyle","maxWidth","minWidth","getPercent","toFixed","videoWasPlaying","newTime","calculateDistance","stepForward","stepBack","barName","playerEvent","Slider","aria-valuenow","aria-valuemin","aria-valuemax","progress","vertical_","cs","currentStyle","LoadProgressBar","partEls_","percentify","part","PlayProgressBar","updateDataAttr","TooltipProgressBar","MouseTimeDisplay","clampedPosition","clampPosition_","difference","tooltipWidthHalf","actualPosition","FullscreenToggle","handleFullscreenChange","VolumeControl","VolumeBar","updateARIAAttributes","checkMuted","VolumeLevel","_popup","_popup2","_popupButton","_popupButton2","_muteToggle","_muteToggle2","_volumeBar","_volumeBar2","VolumeMenuButton","_PopupButton","updateVisibility","inline","volumeBar","volumeUpdate","orientationClass","createPopup","popup","contentElType","vb","menuContent","attachVolumeBarEvents","Popup","addItem","append","PopupButton","items","menuButtonClass","MuteToggle","level","toMute","_textTrackButton","_textTrackButton2","_chaptersTrackMenuItem","_chaptersTrackMenuItem2","ChaptersButton","_TextTrackButton","track_","setTrack","findChaptersTrack","updateHandler_","remoteTextTrackEl","_remoteTextTrackEl","kind_","getMenuCaption","createMenu","title","createItems","mi","_trackButton","_trackButton2","_textTrackMenuItem","_textTrackMenuItem2","_offTextTrackMenuItem","_offTextTrackMenuItem2","TextTrackButton","_TrackButton","selectable","_menuButton","_menuButton2","TrackButton","_MenuButton","updateHandler","_menu","_menu2","MenuButton","enabled_","handleSubmenuKeyPress","menu","buttonPressed_","unpressButton","blur","pressButton","Menu","focusedChild_","stepChild","haveTitle","shift","_menuItem","_menuItem2","TextTrackMenuItem","_MenuItem","changeHandler","handleTracksChange","onchange","Event","createEvent","initEvent","MenuItem","_selected","OffTextTrackMenuItem","_TextTrackMenuItem","ChaptersTrackMenuItem","DescriptionsButton","SubtitlesButton","_captionSettingsMenuItem","_captionSettingsMenuItem2","CaptionsButton","threshold","CaptionSettingsMenuItem","_audioTrackMenuItem","_audioTrackMenuItem2","AudioTrackButton","AudioTrackMenuItem","_playbackRateMenuItem","_playbackRateMenuItem2","PlaybackRateMenuButton","updateLabel","labelEl_","rates","currentRate","newRate","playbackRateSupported","PlaybackRateMenuItem","_spacer","_spacer2","CustomControlSpacer","_Spacer","Spacer","ErrorDisplay","_ModalDialog","parseOptionValue","getSelectedOptionValue","selectedIndex","setSelectedOption","Obj","LOCAL_STORAGE_KEY","COLOR_BLACK","COLOR_BLUE","COLOR_CYAN","COLOR_GREEN","COLOR_MAGENTA","COLOR_RED","COLOR_WHITE","COLOR_YELLOW","OPACITY_OPAQUE","OPACITY_SEMI","OPACITY_TRANS","selectConfigs","Number","TextTrackSettings","setDefaults","persistTextTrackSettings","saveSettings","config","restoreSettings","createElSelect_","for","createElFgColor_","legend","select","createElBgColor_","createElWinColor_","createElColors_","createElFont_","createElControls_","defaultsButton","doneButton","heading","aria-level","aria-labelledby","setValues","localStorage","getItem","setItem","removeItem","ttDisplay","Html5","crossoriginTracks","handleLateInit_","nodes","nodesLength","removeNodes","elTracks","techTracks","capitalType","currentTarget","removeOldTracks_","handleTextTrackChange_","handleTextTrackChange","handleTextTrackAdd_","handleTextTrackAdd","handleTextTrackRemove_","handleTextTrackRemove","proxyNativeTextTracks_","setControls","proxyWebkitFullscreen_","tl","movingMediaElementInDOM","clone","cloneNode","settingsAttrs","overwriteAttrs","loadstartFired","setLoadstartFired","triggerLoadstart","eventsToTrigger","removeOldTextTracks_","removeTracks","techTrack","playPromise","then","checkProgress","endFn","beginFn","webkitEnterFullScreen","video","HAVE_METADATA","exitFullScreen","webkitExitFullScreen","resetMediaElement","TEST_VID","canControlVolume","canControlPlaybackRate","supportsNativeTextTracks","supportsNativeVideoTracks","supportsNativeAudioTracks","featuresNativeVideoTracks","featuresNativeAudioTracks","mpegurlRE","mp4RE","patchCanPlayType","unpatchCanPlayType","r","querySelectorAll","newEnabled","newSelected","super_","extendFn","subClassMethods","methods","VIDEO_EVENTS","cancelContentPlay","ads","cancelPlayTimeout","getPlayerSnapshot","suppressedTracks","snapshot","nativePoster","restorePlayerSnapshot","trackSnapshot","srcChanged","attempts","restoreTracks","resume","updateEnded","resumeEndedTimeout","tryToResume","tryToResumeTimeout_","removeNativePoster","defaults","prerollTimeout","postrollTimeout","debug","adFramework","fsmHandler","videoEvents","triggerEvent","originalEvent","startLinearAdMode","endLinearAdMode","skipLinearAdMode","fsm","content-set","events","adscanceled","adsready","adserror","adskip","ads-ready","preroll?","enter","adTimeoutTimeout","leave","adstart","adtimeout","ads-ready?","ad-playback","triggerevent","adend","content-resuming","_fireEndedTimeout","contentupdate","contentresumed","playing","postroll?","content-playback","contentended","contentSrc","checkSrc","oldValue","newValue","ima_defaults","adLabel","showControlsForJSAds","readyCallback","ima","ImaPlugin","assignControlAttributes_","controlName","controlPrefix","getClassRegexp_","addClass_","removeClass_","classRegexp","createAdContainer_","vjsControls","adContainerDiv","zIndex","showAdControls_","hideAdControls_","createControls_","adDisplayContainer","google","AdDisplayContainer","contentPlayer","controlsDiv","countdownDiv","showCountdown","seekBarDiv","progressDiv","playPauseDiv","onAdPlayPauseClick_","muteDiv","onAdMuteClick_","sliderDiv","onAdVolumeSliderMouseDown_","sliderLevelDiv","fullscreenDiv","onAdFullscreenClick_","initializeAdDisplayContainer","adDisplayContainerInitialized","initialize","requestAds","adsRequest","AdsRequest","adTagUrl","adsResponse","forceNonLinearFullSlot","linearAdSlotWidth","getPlayerWidth","linearAdSlotHeight","getPlayerHeight","nonLinearAdSlotWidth","nonLinearWidth","nonLinearAdSlotHeight","nonLinearHeight","adsLoader","onAdsManagerLoaded_","adsManagerLoadedEvent","adsManager","getAdsManager","contentPlayheadTracker","adsRenderingSettings","AdErrorEvent","Type","AD_ERROR","onAdError_","AdEvent","AD_BREAK_READY","onAdBreakReady_","CONTENT_PAUSE_REQUESTED","onContentPauseRequested_","CONTENT_RESUME_REQUESTED","onContentResumeRequested_","ALL_ADS_COMPLETED","onAllAdsCompleted_","onAdLoaded_","STARTED","onAdStarted_","CLICK","COMPLETE","onAdComplete_","SKIPPED","autoPlayAdBreaks","initWidth","initHeight","adsManagerDimensions","ViewMode","NORMAL","setVolume","adError","startFromReadyCallback","onAdsLoaderError_","getError","destroy","AdError","adErrorEvent","errorMessage","stack","adEvent","adBreakReadyListener","playAdBreak","adsActive","adPlaying","contentSource","localContentEndedListener","getAd","getAdPodInfo","getPodIndex","contentType","getContentType","showPlayButton","currentAd","isLinear","contentComplete","allAdsCompleted","contentAndAdsEndedListeners","adTrackingTimer","onAdPlayheadTrackerInterval_","getRemainingTime","getDuration","adPosition","isPod","totalAds","getAdPosition","getTotalAds","remainingMinutes","remainingSeconds","podCount","playProgressRatio","playProgressPercent","retVal","showPauseButton","adMuted","onMouseUp_","onMouseMove_","setVolumeSlider_","onFullscreenChange_","resize","screen","FULLSCREEN","onVolumeChange_","newVolume","seekContentToZero_","playContentFromZero_","resetIMA_","setContent","adTag","playOnLoad","setContentWithAdTag","changeSource_","setContentWithAdsResponse","addContentEndedListener","listener","contentEndedListeners","addContentAndAdsEndedListener","setAdBreakReadyListener","pauseAd","resumeAd","setUpPlayerIntervals_","updateTimeIntervalHandle","updateCurrentTime_","seekCheckInterval","seekCheckIntervalHandle","checkForSeeking_","resizeCheckIntervalHandle","checkForResize_","resizeCheckInterval","tempCurrentTime","diff","previousTime","seekThreshold","setShowCountdown","showCountdownIn","contentTrackingTimer","adPlayheadTracker","playerDisposedListener","intervalsToClear","contrib_ads_defaults","ads_plugin_settings","AdsRenderingSettings","restoreCustomPlaybackStateOnAdBreakComplete","setLocale","AdsLoader","getSettings","setVpaidMode","ImaSdkSettings","VpaidMode","ENABLED","vpaidAllowed","DISABLED","vpaidMode","locale","numRedirects","setNumRedirects","setPlayerType","setPlayerVersion","setAutoPlayAdBreaks","AdsManagerLoadedEvent","ADS_MANAGER_LOADED","__indexOf","adpause","autoLabel","dataSetupOptions","defaultsEventsToTrack","eventCategory","eventLabel","eventsToTrack","firstplay","fullscreen","getCurrentTime","getCurrentValue","isFinite","parsedOptions","percentsPlayedInterval","percentsPlayedMoments","percentsTracked","secondsPlayed","secondsPlayedInterval","secondsPlayedMoments","seekEnd","seekStart","sendbeacon","startTimeTracking","stopTimeTracking","timeupdate","trackPercent","trackReplaySeconds","trackSeconds","trackSeek","trackingTime","volumeChange","ga","trackFiniteSeconds","percentToTrack","percentsPlayed","isFullScreen","action","nonInteraction","eventFields","eventAction","eventValue","sendGaEventDirectly","endscreen","hasAds","videoFinished","adStarted","adFinished","social","SocialButton","SocialOverlay","deeplinking","displayAfterVideo","offset","services","facebook","twitter","tumblr","pinterest","linkedin","addEvent","socialButton","socialOverlay","enableRestartButton","disableRestartButton","directLinkTextBox","embedCodeTextBox","restartButton","_getUrlWithTime","_restartPlayer","removeEmbed","removeDirect","offsetTextBox","closeButton","previouslyPlaying","tabindex","_getTitle","aria-role","embedCode","urlTemplate","_convertOffset","encodeURI","mediainfo","_getUrl","referrer","segments","multiples","_videoJs","_videoJs2","onPlayerReady","linkProps","download","linkAttrs","downloadButton","wjplayer","WJPlayer","_createClass","descriptor","protoProps","staticProps","containerId","playerType","sourcesWithRes","pathToSwf","volumeStyle","stretch","playOnClick","skin","classes","enableResolutionSwitcher","IS_IE","documentMode","IS_IE11","MSInputMethodContext","IS_MOBILE","clickEvent","hlsjsConfig","volumeMenuButton","Hls","videoJsResolutionSwitcher","defaultQuality","dynamicLabel","createPlayer","share","Share Video","Direct Link","Embed Code","panorama","canvas","handleResize","updateSrc","loadingSpinner","initAds","qualityPickerPlugin","dumbPlayer","crossorigin","require","_dereq_","EventEmitter","_maxListeners","isNumber","isUndefined","defaultMaxListeners","setMaxListeners","emit","er","listeners","addListener","newListener","warned","trace","once","g","removeListener","fired","removeAllListeners","listenerCount","evlistener","emitter","HASH_SPLIT","QUERY_SPLIT","DOMAIN_SPLIT","URLToolkit","buildAbsoluteURL","baseURL","relativeURL","relativeURLQuery","relativeURLHash","relativeURLHashSplit","relativeURLQuerySplit","baseURLHashSplit","baseURLQuerySplit","baseURLDomainSplit","baseURLProtocol","baseURLProtocolDomain","baseURLPath","builtURL","buildAbsolutePath","basePath","relativePath","nUpLn","nEnd","sRelPath","sDir","sPath","nStart","bundleFn","cache","resolveSources","workerSources","depPath","depKey","wkey","cacheKeys","exp","pow","random","wcache","Function","skey","scache","URL","webkitURL","mozURL","msURL","blob","Blob","bare","workerUrl","createObjectURL","worker","Worker","objectURL","_events2","_eventHandler","_eventHandler2","_bufferHelper","_bufferHelper2","_errors","_logger","_ewmaBandwidthEstimator","_ewmaBandwidthEstimator2","AbrController","_EventHandler","hls","getPrototypeOf","FRAG_LOADING","FRAG_LOADED","FRAG_BUFFERED","lastLoadedFragLevel","_autoLevelCapping","_nextAutoLevel","onCheck","abandonRulesCheck","clearTimer","frag","timer","bwEstimator","isLive","levels","live","ewmaFast","ewmaSlow","abrEwmaFastLive","abrEwmaSlowLive","abrEwmaFastVoD","abrEwmaSlowVoD","abrEwmaDefaultEstimate","fragCurrent","media","loader","minAutoLevel","stats","logger","autoLevel","requestDelay","performance","trequest","loadRate","bw","levelBitrate","realBitrate","bitrate","expectedLen","total","fragLoadedDelay","bufferStarvationDelay","bufferInfo","maxBufferHole","fragLevelNextLoadedDelay","nextLoadLevel","levelNextBitrate","sample","FRAG_LOAD_EMERGENCY_ABORTED","loadedBytes","bytes","loadedDuration","bitrateTest","tparsed","tbuffered","tload","onFragBuffered","loadCounter","fragLoadingProcessingMs","tfirst","bitrateTestDelay","ErrorDetails","FRAG_LOAD_ERROR","FRAG_LOAD_TIMEOUT","currentLevel","currentFragDuration","currentBw","maxAutoLevel","maxFetchDuration","bwFactor","bwUpFactor","levelInfo","levelDetails","avgDuration","totalduration","fragments","adjustedbw","fetchDuration","newLevel","nextAutoLevel","minAutoBitrate","canEstimate","nextABRAutoLevel","nextLevel","autoLevelCapping","avgbw","getEstimate","bestLevel","findBestLevel","abrBandWidthFactor","abrBandWidthUpFactor","maxStarvationDelay","maxLoadingDelay","26","27","28","30","45","9","_binarySearch","_binarySearch2","_demuxer","_demuxer2","_levelHelper","_levelHelper2","_timeRanges2","State","STOPPED","STARTING","IDLE","PAUSED","KEY_LOADING","FRAG_LOADING_WAITING_RETRY","WAITING_TRACK","PARSING","PARSED","BUFFER_FLUSHING","ENDED","WAITING_INIT_PTS","AudioStreamController","MEDIA_ATTACHED","MEDIA_DETACHING","AUDIO_TRACKS_UPDATED","AUDIO_TRACK_SWITCHING","AUDIO_TRACK_LOADED","KEY_LOADED","FRAG_PARSING_INIT_SEGMENT","FRAG_PARSING_DATA","FRAG_PARSED","BUFFER_CREATED","BUFFER_APPENDED","BUFFER_FLUSHED","INIT_PTS_FOUND","audioCodecSwap","ticks","_state","ontick","tick","initPTS","waitingFragment","stopLoad","demuxerId","cc","onFragLoaded","startPosition","lastCurrentTime","fragLoadError","nextLoadPosition","fragPrevious","demuxer","doTick","trackDetails","retryDate","isSeeking","loadedmetadata","startFragRequested","startFragPrefetch","mediaBuffer","bufferLen","bufferEnd","maxBufLen","maxMaxBufferLength","audioSwitch","trackId","sn","endSN","BUFFER_EOS","fragLen","PTSKnown","nextStart","loadIdx","fragLoadIdx","nextBuffered","foundFrag","maxFragLookUpTolerance","candidate","startSN","decryptdata","maxThreshold","fragLoadingLoopThreshold","ErrorTypes","MEDIA_ERROR","FRAG_LOOP_LOADING_ERROR","fatal","onvseeking","onMediaSeeking","onvended","onMediaEnded","autoStartLoad","startLoad","fragment","onvseeked","altAudio","newDetails","sliding","curDetails","mergeDetails","startTimeOffset","audioCodec","defaultAudioCodec","appended","pendingBuffering","accurateTimeOffset","payload","audio","levelCodec","BUFFER_CODECS","codec","initSegment","appendObj","pendingData","BUFFER_APPENDING","startPTS","endPTS","startDTS","endDTS","nb","updateFragPTSDTS","appendOnBufferFlush","startOffset","endOffset","POSITIVE_INFINITY","AUDIO_TRACK_SWITCHED","data1","data2","_checkAppendedParsed","audioTrack","pending","loadError","fragLoadingMaxRetry","delay","fragLoadingRetryDelay","fragLoadingMaxRetryTimeout","AUDIO_TRACK_LOAD_ERROR","AUDIO_TRACK_LOAD_TIMEOUT","KEY_LOAD_ERROR","KEY_LOAD_TIMEOUT","nextState","previousState","22","31","41","46","6","AudioTrackController","MANIFEST_LOADING","MANIFEST_LOADED","updateTrack","defaultFound","targetduration","newId","eventObj","AUDIO_TRACK_SWITCH","AUDIO_TRACK_LOADING","audioTrackId","setAudioTrackInternal","7","BufferController","MEDIA_ATTACHING","MANIFEST_PARSED","BUFFER_RESET","LEVEL_PTS_UPDATED","LEVEL_UPDATED","_msDuration","_levelDuration","onsbue","onSBUpdateEnd","onsbe","onSBUpdateError","pendingTracks","audioBuffer","sourceBuffer","delta","timestampOffset","updating","audioTimestampOffset","audioExpected","videoExpected","sourceBufferNb","ms","mediaSource","MediaSource","onmso","onMediaSourceOpen","onmse","onMediaSourceEnded","onmsc","onMediaSourceClose","endOfStream","revokeObjectURL","flushRange","MEDIA_DETACHED","checkPendingTracks","pendingTracksNb","createSourceBuffers","doAppending","_needsFlush","doFlush","_needsEos","checkEos","appending","counter","segment","updateMediaElementDuration","BUFFER_APPENDING_ERROR","sb","removeSourceBuffer","trackName","mimeType","addSourceBuffer","BUFFER_ADD_CODEC_ERROR","dataType","sbobj","flushBufferCounter","levelDuration","range","flushBuffer","appendBuffer","appendError","BUFFER_FULL_ERROR","BUFFER_APPEND_ERROR","appendErrorMaxRetry","typeIn","bufStart","bufEnd","flushStart","flushEnd","8","CapLevelController","FPS_DROP_LEVEL_CAPPING","capLevelToPlayerSize","restrictedLevels","isLevelRestricted","droppedLevel","firstLevel","getMaxLevel","detectPlayerSize","levelsLength","streamController","nextLevelSwitch","capLevelIndex","mWidth","mediaWidth","mHeight","mediaHeight","lWidth","lHeight","pixelRatio","devicePixelRatio","clientWidth","contentScaleFactor","clientHeight","_ewma","_ewma2","EwmaBandWidthEstimator","slow","fast","defaultEstimate","defaultEstimate_","minWeight_","minDelayMs_","slow_","fast_","durationMs","numBytes","bandwidth","weight","getTotalWeight","44","10","FPSController","isVideoPlaybackQualityAvailable","capLevelOnFPSDrop","getVideoPlaybackQuality","checkFPSInterval","fpsDroppedMonitoringPeriod","decodedFrames","droppedFrames","lastTime","currentPeriod","currentDropped","lastDroppedFrames","currentDecoded","lastDecodedFrames","droppedFPS","FPS_DROP","totalDroppedFrames","fpsDroppedMonitoringThreshold","videoPlaybackQuality","checkFPS","totalVideoFrames","droppedVideoFrames","webkitDecodedFrameCount","webkitDroppedFrameCount","11","LevelController","LEVEL_LOADED","_manualLevel","canload","_levels","bitrateStart","levels0","bitrateSet","videoCodecFound","audioCodecFound","brokenmp4inmp3","checkSupported","isTypeSupported","videoCodec","AUDIO","redundantLevelId","urlId","sort","_firstLevel","MANIFEST_INCOMPATIBLE_CODECS_ERROR","reason","_level","LEVEL_SWITCH","LEVEL_LOADING","OTHER_ERROR","LEVEL_SWITCH_ERROR","levelId","levelError","abrController","LEVEL_LOAD_ERROR","LEVEL_LOAD_TIMEOUT","REMUX_ALLOC_ERROR","nbRedundantLevel","recoverable","mediaBuffered","isBuffered","retryDelay","levelLoadingRetryDelay","fragLoaded","curLevel","reloadInterval","averagetargetduration","setLevelInternal","_startLevel","configStartLevel","startLevel","12","WAITING_LEVEL","StreamController","_doTickIdle","_checkBuffer","_checkFragmentChanged","levelLastLoaded","maxBufferSize","maxBufferLength","_fetchPayloadOrEos","initialLiveManifestSize","_ensureFragmentAtLivePoint","_findFragment","_loadFragmentOrKey","maxLatency","liveMaxLatencyDuration","liveMaxLatencyDurationCount","liveSyncPosition","computeLivePosition","targetSN","deltaPTS","curSNIdx","dropped","autoLevelEnabled","bufferRange","getBufferRange","rangeCurrent","fragPlaying","FRAG_CHANGED","immediateSwitch","previouslyPaused","flushMainBuffer","fetchdelay","currentRange","nextRange","nextLevelId","fragLastKbps","followingBufferRange","flushScope","onMediaSeeked","tolerance","fragStartOffset","fragEndOffset","stalled","aac","heaac","audioCodecSwitch","startLevelLoaded","newLevelId","lastAudioCodec","mediaSeeking","ua","channelCount","unique","mergedTrack","audiovideo","drift","videoBuffer","mediaTrack","alternate","_reduceMaxBufferLength","minLength","immediateLevelSwitchEnd","expectedPlaying","jumpThreshold","playheadMoving","stallReported","nudgeRetry","tnow","stalledDuration","lowBufferWatchdogPeriod","BUFFER_STALLED_ERROR","nextBufferStart","maxSeekHole","nudgeOffset","BUFFER_SEEK_OVER_HOLE","hole","highBufferWatchdogPeriod","nudgeMaxRetry","_currentTime","targetTime","BUFFER_NUDGE_ON_STALL","startPositionBuffered","targetLatency","liveSyncDuration","liveSyncDurationCount","STREAM_STATE_TRANSITION","nextBufferRange","_liveSyncPosition","13","_cea608Parser","_cea608Parser2","TimelineController","FRAG_PARSING_USERDATA","Cues","cueHandler","enableCEA708Captions","sendAddTrackEvent","channel1","newCue","textTrack1","existingTrack1","getExistingTrack","clearCurrentCues","createTextTrack","channel2","textTrack2","existingTrack2","cea608Parser","channelNumber","textTrack","lastPts","NEGATIVE_INFINITY","closedCaptions","pts","samples","ccdatas","extractCea608Data","addData","byteArray","tmpByte","ccbyte1","ccbyte2","ccValid","ccType","actualCCBytes","42","14","AESCrypto","subtle","iv","aesIV","decrypt","15","AESDecryptor","rcon","subMix","Uint32Array","invSubMix","sBox","invSBox","initTable","arrayBuffer","view","DataView","newArray","getUint32","subMix0","subMix1","subMix2","subMix3","invSubMix0","invSubMix1","invSubMix2","invSubMix3","d","xi","sx","x2","x4","x8","keyBuffer","uint8ArrayToUint32Array_","sameKey","keySize","ksRows","ksRow","invKsRow","keySchedule","invKeySchedule","sbox","prev","word","inputArrayBuffer","nRounds","invSBOX","initVector","initVector0","initVector1","initVector2","initVector3","inputInt32","Int32Array","outputInt32","t0","t1","t2","t3","s0","s1","s2","s3","inputWords0","inputWords1","inputWords2","inputWords3","networkToHostOrderSwap","16","_aesCrypto","_aesCrypto2","_fastAesKey","_fastAesKey2","_aesDecryptor","_aesDecryptor2","Decrypter","observer","browserCrypto","crypto","webkitSubtle","disableWebCrypto","enableSoftwareAES","decryptor","expandKey","fastAesKey","aesKey","onWebCryptoError","FRAG_DECRYPT_ERROR","17","FastAESKey","importKey","18","_adts","_adts2","_id2","AACDemuxer","remuxerClass","typeSupported","remuxer","insertDiscontinuity","_aacTrack","sequenceNumber","isAAC","timeOffset","defaultInitPTS","frameLength","frameDuration","frameIndex","headerLength","stamp","aacSample","id3","timeStamp","contiguous","lastCC","switchLevel","lastLevel","lastSN","audiosamplerate","getAudioConfig","samplerate","manifestCodec","subarray","dts","remux","hasTimeStamp","19","24","ADTS","adtsObjectType","adtsSampleingIndex","adtsExtensionSampleingIndex","adtsChanelConfig","adtsSampleingRates","FRAG_PARSING_ERROR","20","_decrypter","_decrypter2","_aacdemuxer","_aacdemuxer2","_tsdemuxer","_tsdemuxer2","_mp4Remuxer","_mp4Remuxer2","_passthroughRemuxer","_passthroughRemuxer2","DemuxerInline","byteLength","decrypter","localthis","decryptedData","FRAG_DECRYPTED","tstart","tdecrypt","pushDecrypted","Uint8Array","probe","mp2t","25","38","39","21","_demuxerInline","_demuxerInline2","_events3","_events4","DemuxerWorker","forwardMessage","ev","postMessage","cmd","enableLogs","FRAG_PARSING_METADATA","_demuxerWorker","_demuxerWorker2","Demuxer","mp4","enableMP2TPassThrough","mpeg","mp3","enableWorker","w","work","onwmsg","onWorkerMessage","INTERNAL_EXCEPTION","filename","lineno","demuxInitialized","terminate","23","ExpGolomb","bytesAvailable","bitsAvailable","workingBytes","availableBytes","skipBytes","loadWord","bits","valu","readBits","leadingZeroCount","skipLZ","skipBits","clz","readUEG","deltaScale","lastScale","nextScale","readEG","profileIdc","profileCompat","levelIdc","numRefFramesInPicOrderCntCycle","picWidthInMbsMinus1","picHeightInMapUnitsMinus1","frameMbsOnlyFlag","scalingListCount","frameCropLeftOffset","frameCropRightOffset","frameCropTopOffset","frameCropBottomOffset","readUByte","readBoolean","skipEG","skipUEG","skipScalingList","chromaFormatIdc","picOrderCntType","aspectRatioIdc","ID3","_hasTimeStamp","byte1","byte2","byte3","byte4","tagSize","endPos","header","readUTF","_parseID3Frames","_length","_payload","fromCharCode","tagId","tagLen","tagStart","tagFlags","timestamp","pts33Bit","_timeStamp","_expGolomb","_expGolomb2","TSDemuxer","pmtParsed","_pmtId","_avcTrack","_id3Track","_txtTrack","aacOverFlow","aacLastPTS","avcSample","stt","pid","atf","pes","codecsOnly","passthrough","unknownPIDs","_duration","avcTrack","id3Track","avcId","audioId","id3Id","pmtId","avcData","pesData","audioData","id3Data","parsePAT","_parsePAT","parsePMT","_parsePMT","parsePES","_parsePES","parseAVCPES","_parseAVCPES","parseAACPES","_parseAACPES","parseMPEGPES","_parseMPEGPES","parseID3PES","_parseID3PES","parsedPIDs","avc","nbNalu","naluLen","units","nbUnits","sampleLen","_initPTS","_initDTS","mpegSupported","sectionLength","tableEnd","programInfoLength","pesFlags","pesPrefix","pesLen","pesHdrLen","pesPts","pesDts","payloadStartOffset","newData","dataLen","frame","forceKeyFrameOnDiscontinuity","sps","expGolombDecoder","_parseAVCNALu","sliceType","readSliceType","_createAVCSample","discardEPB","payloadType","payloadSize","endOfCaptions","countryCode","providerCode","readUShort","userStructure","readUInt","userDataType","firstByte","secondByte","totalCCs","_insertSampleInOrder","readSPS","codecarray","codecstring","pps","pushAccesUnit","_units","arr","lastUnit","unitType","lastUnitType","naluState","lastState","lastUnitStart","_getLastNalUnit","tmp","_lastUnit","_tmp","newLength","EPBPositions","sourceIndex","newPTS","parsed","_parseMpeg","bitRate","sampleRate","BitratesMap","SamplingRateMap","headerB","headerC","headerE","headerF","headerG","columnInBitrates","columnInSampleRates","padding","_onMpegFrame","_onMpegNoise","NETWORK_ERROR","MUX_ERROR","MANIFEST_LOAD_ERROR","MANIFEST_LOAD_TIMEOUT","MANIFEST_PARSING_ERROR","EventHandler","handledEvents","useGenericHandler","registerListeners","unregisterListeners","isEventHandler","onEventGeneric","eventToFunction","funcName","FRAG_LOAD_PROGRESS","DESTROYING","29","AAC","BufferHelper","maxHoleDuration","vbuffered","bufferedInfo","bufferStart","bufferStartNext","buffered2","buf2len","buf2end","LevelHelper","oldDetails","PTSFrag","oldfragments","newfragments","ccOffset","oldFrag","newFrag","fragIdx","updatePTS","fromIdx","toIdx","fragFrom","fragTo","fragToPTS","32","_playlistLoader","_playlistLoader2","_fragmentLoader","_fragmentLoader2","_abrController","_abrController2","_bufferController","_bufferController2","_capLevelController","_capLevelController2","_audioStreamController","_audioStreamController2","_streamController","_streamController2","_levelController","_levelController2","_timelineController","_timelineController2","_fpsController","_fpsController2","_audioTrackController","_audioTrackController2","_xhrLoader","_xhrLoader2","_keyLoader","_keyLoader2","_cues","_cues2","defaultConfig","DefaultConfig","playlistLoader","fragmentLoader","levelController","bufferController","capLevelController","fpsController","audioStreamController","timelineController","audioTrackController","keyLoader","WebKitMediaSource","manifestLoadingTimeOut","manifestLoadingMaxRetry","manifestLoadingRetryDelay","manifestLoadingMaxRetryTimeout","levelLoadingTimeOut","levelLoadingMaxRetry","levelLoadingMaxRetryTimeout","fragLoadingTimeOut","fLoader","pLoader","xhrSetup","fetchSetup","stretchShortVideoTrack","detachMedia","swapAudioCodec","attachMedia","loadLevel","immediateLevelSwitch","manualLevel","34","35","36","43","47","33","FragmentLoader","loaders","loaderName","loaderContext","loaderConfig","loaderCallbacks","progressData","byteRangeStartOffset","byteRangeEndOffset","rangeStart","rangeEnd","maxRetry","maxRetryDelay","onSuccess","loadsuccess","loaderror","onTimeout","loadtimeout","onProgress","loadprogress","KeyLoader","decryptkey","decrypturl","_urlToolkit","_urlToolkit2","_attrList","_attrList2","MASTER_PLAYLIST_REGEX","MASTER_PLAYLIST_MEDIA_REGEX","LEVEL_PLAYLIST_REGEX_FAST","LEVEL_PLAYLIST_REGEX_SLOW","LevelKey","_uri","reluri","baseuri","Fragment","_byteRange","_decryptdata","tagList","segmentNumber","uint8View","levelkey","createInitializationVector","relurl","baseurl","_programDateTime","rawProgramDateTime","byteRange","rawByteRange","lastByteRangeEndOffset","fragmentDecryptdataFromLevelkey","PlaylistLoader","retry","baseUrl","lastIndex","resolve","resolution","decimalResolution","decimalInteger","NAME","codecs","CODECS","avc1toavcoti","medias","TYPE","groupId","DEFAULT","autoselect","AUTOSELECT","forced","FORCED","URI","LANGUAGE","avcdata","currentSN","prevFrag","value1","value2","decryptparams","keyAttrs","decryptmethod","enumeratedString","decrypturi","decryptiv","hexadecimalInteger","startParams","startAttrs","decimalFloatingPoint","mapAttrs","BYTERANGE","isLevel","parseLevelPlaylist","parseMasterPlaylist","audiotracks","parseMasterPlaylistMedia","embeddedAudioFound","40","37","MP4","avc1","avcC","btrt","dinf","dref","esds","ftyp","hdlr","mdat","mdhd","mdia","mfhd","minf","moof","moov","mp4a",".mp3","mvex","mvhd","pasp","sdtp","stbl","stco","stsc","stsd","stsz","stts","tfdt","tfhd","traf","trak","trun","trex","tkhd","vmhd","smhd","videoHdlr","audioHdlr","HDLR_TYPES","STTS","STSC","STCO","STSZ","VMHD","SMHD","STSD","majorBrand","avc1Brand","minorVersion","FTYP","DINF","timescale","baseMediaDecodeTime","flags","dependsOn","isDependedOn","hasRedundancy","avcc","hSpacing","vSpacing","configlen","sampleDependencyTable","cts","arraylen","isLeading","paddingValue","isNonSync","degradPrio","_aac","_aac2","_mp4Generator","_mp4Generator2","MP4Remuxer","ISGenerated","PES2MP4SCALEFACTOR","PES_TIMESCALE","MP4_TIMESCALE","videoTrack","generateIS","remuxAudio","audioTrackLength","remuxVideo","videoData","remuxEmptyAudio","remuxID3","remuxText","initDTS","audioSamples","videoSamples","pesTimeScale","computePTSDTS","greatestCommonDivisor","mp4SampleDuration","firstPTS","firstDTS","nextDTS","lastPTS","lastDTS","pes2mp4ScaleFactor","inputSamples","outputSamples","nbSamples","ptsNormalize","_PTSNormalize","deltadts","PTSDTSshift","curr","nextAvcDts","vendor","isSafari","_sample","mdatSize","setUint32","avcSampleUnits","mp4SampleLength","compositionTimeOffset","unitData","unitDataLen","lastFrameDuration","gapTolerance","deltaToFrameEnd","nextAudioPts","audioSample","mp4Sample","ptsnorm","dtsnorm","fillFrame","newStamp","mp4timeScale","expectedSampleDuration","pesFrameDuration","rawMPEG","nextPtsNorm","ptsNorm","missing","getSilentFrame","_j","_nbSamples","_delta","numMissingFrames","_i3","unitLen","lastSampleDuration","sampleDuration","silentFrame","PassThroughRemuxer","rawData","DECIMAL_RESOLUTION_REGEX","ATTR_LIST_REGEX","AttrList","parseAttrList","intValue","MAX_SAFE_INTEGER","stringValue","res","quote","BinarySearch","comparisonFunction","minIndex","currentIndex","currentElement","comparisonResult","specialCea608CharsCodes","92","94","95","96","123","124","125","126","127","128","129","130","131","132","133","134","135","136","137","138","139","140","141","142","143","144","145","146","147","148","149","150","151","152","153","154","155","156","157","158","159","160","161","162","163","164","165","166","167","168","169","170","171","172","173","174","175","176","177","178","179","180","181","182","183","184","185","186","187","188","189","190","191","192","193","194","195","196","197","198","199","200","201","202","203","204","205","206","207","getCharForByte","byte","NR_ROWS","NR_COLS","rowsLowCh1","rowsHighCh1","rowsLowCh2","rowsHighCh2","backgroundColors","verboseFilter","DATA","DEBUG","INFO","WARNING","TEXT","verboseLevel","setTime","severity","msg","minLevel","numArrayToHexArray","numArray","hexArray","PenState","foreground","underline","italics","background","attribs","other","newPenState","StyledUnicodeChar","uchar","penState","copy","equals","newChar","isDefault","Row","chars","currPenState","equal","absPos","relPos","newPos","setPenState","setCursor","moveCursor","setChar","backSpace","char","startPos","clearFromPos","setStyles","currChar","CaptionScreen","rows","currRow","nrRollUpRows","clear","clearToEndOfRow","insertChar","setPenStyles","pacData","lastOutputScreen","newRow","topRowIndex","prevLineTime","cueStartTime","indent","prevPos","setPen","bkgData","nrRows","getDisplayText","topRow","asOneRow","displayText","rowNr","rowText","getTextString","Cea608Channel","outputFilter","chNr","verbose","displayedMemory","nonDisplayedMemory","currRollUpRow","writeScreen","lastCueEndTime","newHandler","setPAC","setBkgData","outputDataUpdate","setMode","setRollUpRows","rollUp","nrCols","colorIndex","colors","updateData","Cea608Parser","field","out1","out2","outputs","channels","currChNr","lastCmdA","lastCmdB","bufferedData","dataCounters","getHandler","setHandler","byteList","cmdFound","charsFound","parseCmd","parseMidrow","parsePAC","parseBackgroundAttributes","parseChars","channel","insertChars","cond1","cond2","ccRCL","ccBS","ccAOF","ccAON","ccDER","ccRU","ccFON","ccRDC","ccTR","ccRTD","ccEDM","ccCR","ccENM","ccEOC","ccTO","ccMIDROW","case1","case2","interpretPAC","pacIndex","channelNr","charCodes","charCode1","oneCode","hexCodes","cueSplitAtTime","captionScreen","indenting","TextTrackCue","EWMA","halfLife","alpha_","estimate_","totalWeight_","adjAlpha","zeroFactor","formatMsg","consolePrintFn","exportLoggerFunctions","debugConfig","functions","exportedLogger","fakeLogger","info","TimeRanges","XhrLoader","requestTimeout","retryTimeout","callbacks","loadInternal","responseURL","statusText","lengthComputable","attachVideojsStreamrootProvider","StreamrootProviderHLS","_hls","_onError","_errorCounts","_onMetaData","_video","loadSource","_startLoadOnPlay","switchQuality","qualityId","trackType","checkStartLoad","_handleMediaError","recoverMediaError","_levelLabel","cleanTracklist","quality","qualityData","qualitySwitchCallback","errorTxt","mediaError","MEDIA_ERR_ABORTED","MEDIA_ERR_DECODE","MEDIA_ERR_NETWORK","MEDIA_ERR_SRC_NOT_SUPPORTED","hlsTypeRE","hlsExtRE","hlsProvider","onQualityData","fullscreenToggle","SUPPORTED_TRACKS","qualityPickerButton","_qualityPickerButton2","qualityList","TRACK_CLASS","subtitle","_qualityPickerButton","_extends","_qualityMenu","_qualityMenu2","_qualityMenuItem","_qualityMenuItem2","VjsButton","QualityPickerButton","_VjsButton","menuItem","_options_","_get","property","receiver","getOwnPropertyDescriptor","getter","VjsMenu","QualityMenu","_VjsMenu","VjsMenuItem","QualityMenuItem","_VjsMenuItem"],"mappings":"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C,QAAU,IACVC,SAAW,KAGX5E,GACAvqC,EAAA,OACA0L,EAAA,IACAgjB,EAAA,IACA0gB,EAAA,IACAC,KAAA,OACAC,GAAA,KACAtV,EAAA,OACAuV,KAAA,QAGA/E,GACAxQ,EAAA,QACAuV,KAAA,QAGAnF,GACAkF,GAAA,QAsHApE,GAAA,8BACA,6CACA,6CACA,6CACA,6CACA,6CACA,6CACA,6CACA,6CACA,6CACA,6CACA,6CACA,6CACA,6CACA,6CACA,6CACA,6CACA,6CACA,6CACA,6CACA,6CACA,6CACA,6CACA,6CACA,6CACA,6CACA,6CACA,6CACA,6CACA,6CACA,6CACA,6CACA,6CACA,6CACA,6CACA,6CACA,6CACA,6CACA,6CACA,4CACA,6CACA,6CACA,6CACA,6CACA,6CACA,6CACA,6CACA,6CACA,6CACA,6CACA,6CACA,kDACA,sDACA,sDACA,sDACA,sDACA,sDACA,sDACA,sDACA,sDACA,sDACA,sDACA,sDACA,sDACA,sDACA,sDACA,sDACA,sDACA,sDACA,sDACA,sDACA,sDACA,sDACA,sDACA,sDACA,sDACA,sDACA,sDACA,sDACA,sDACA,sDACA,sDACA,sDACA,sDACA,sDACA,sDACA,sDACA,sDACA,sDACA,sDACA,sDACA,sDACA,sDACA,sDACA,sDACA,sDACA,sDACA,sDACA,sDACA,sDACA,sDACA,sDACA,sDACA,sDACA,sDACA,sDACA,sDACA,sDACA,sDACA,sDACA,sDACA,sDACA,sDACA,sDACA,sDACA,sDACA,sDACA,sDACA,sDACA,sDACA,sDACA,sDACA,sDACA,sDACA,sDACA,sDACA,sDACA,sDACA,sDACA,sDACA,sDACA,sDACA,sDACA,sDACA,sDACA,sDACA,sDACA,sDACA,sDACA,gDACA,gDACA,gDACA,gDACA,gDACA,gDACA,gDACA,gDACA,gDACA,gDACA,gDACA,gDACA,gDACA,gDACA,gDACA,gDACA,gDACA,gDACA,gDACA,gDACA,gDACA,gDACA,+CACA,gDACA,gDACA,gDACA,gDACA,gDACA,gDACA,gDACA,g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","file":"wjplayer-hls-js.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"wjplayer\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"wjplayer\"] = factory();\n\telse\n\t\troot[\"wjplayer\"] = factory();\n})(this, function() {\nreturn \n\n\n/** WEBPACK FOOTER **\n ** webpack/universalModuleDefinition\n **/","(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"wjplayer\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"wjplayer\"] = factory();\n\telse\n\t\troot[\"wjplayer\"] = factory();\n})(this, function() {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\t__webpack_require__(1);\n\t\n\t__webpack_require__(121);\n\t\n\t__webpack_require__(122);\n\t\n\tvar _wjplayer = __webpack_require__(120);\n\t\n\tvar _wjplayer2 = _interopRequireDefault(_wjplayer);\n\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n\texports.default = _wjplayer2.default;\n\tmodule.exports = exports['default'];\n\n/***/ },\n/* 1 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\t__webpack_require__(2);\n\t\n\t__webpack_require__(113);\n\t\n\t__webpack_require__(114);\n\t\n\t__webpack_require__(115);\n\t\n\t__webpack_require__(116);\n\t\n\t__webpack_require__(117);\n\n/***/ },\n/* 2 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/* WEBPACK VAR INJECTION */(function(global) {module.exports = global[\"videojs\"] = __webpack_require__(3);\n\t/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }())))\n\n/***/ },\n/* 3 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;'use strict';\n\t\n\texports.__esModule = true;\n\t\n\tvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; /**\n\t                                                                                                                                                                                                                                                                               * @file video.js\n\t                                                                                                                                                                                                                                                                               * @module videojs\n\t                                                                                                                                                                                                                                                                               */\n\t\n\t/* global define */\n\t\n\t// Include the built-in techs\n\t\n\t\n\tvar _window = __webpack_require__(4);\n\t\n\tvar _window2 = _interopRequireDefault(_window);\n\t\n\tvar _document = __webpack_require__(5);\n\t\n\tvar _document2 = _interopRequireDefault(_document);\n\t\n\tvar _setup = __webpack_require__(7);\n\t\n\tvar setup = _interopRequireWildcard(_setup);\n\t\n\tvar _stylesheet = __webpack_require__(15);\n\t\n\tvar stylesheet = _interopRequireWildcard(_stylesheet);\n\t\n\tvar _component = __webpack_require__(16);\n\t\n\tvar _component2 = _interopRequireDefault(_component);\n\t\n\tvar _eventTarget = __webpack_require__(20);\n\t\n\tvar _eventTarget2 = _interopRequireDefault(_eventTarget);\n\t\n\tvar _events = __webpack_require__(14);\n\t\n\tvar Events = _interopRequireWildcard(_events);\n\t\n\tvar _player = __webpack_require__(21);\n\t\n\tvar _player2 = _interopRequireDefault(_player);\n\t\n\tvar _plugins = __webpack_require__(109);\n\t\n\tvar _plugins2 = _interopRequireDefault(_plugins);\n\t\n\tvar _mergeOptions2 = __webpack_require__(19);\n\t\n\tvar _mergeOptions3 = _interopRequireDefault(_mergeOptions2);\n\t\n\tvar _fn = __webpack_require__(17);\n\t\n\tvar Fn = _interopRequireWildcard(_fn);\n\t\n\tvar _textTrack = __webpack_require__(31);\n\t\n\tvar _textTrack2 = _interopRequireDefault(_textTrack);\n\t\n\tvar _audioTrack = __webpack_require__(110);\n\t\n\tvar _audioTrack2 = _interopRequireDefault(_audioTrack);\n\t\n\tvar _videoTrack = __webpack_require__(111);\n\t\n\tvar _videoTrack2 = _interopRequireDefault(_videoTrack);\n\t\n\tvar _timeRanges = __webpack_require__(22);\n\t\n\tvar _formatTime = __webpack_require__(66);\n\t\n\tvar _formatTime2 = _interopRequireDefault(_formatTime);\n\t\n\tvar _log = __webpack_require__(10);\n\t\n\tvar _log2 = _interopRequireDefault(_log);\n\t\n\tvar _dom = __webpack_require__(8);\n\t\n\tvar Dom = _interopRequireWildcard(_dom);\n\t\n\tvar _browser = __webpack_require__(11);\n\t\n\tvar browser = _interopRequireWildcard(_browser);\n\t\n\tvar _url = __webpack_require__(35);\n\t\n\tvar Url = _interopRequireWildcard(_url);\n\t\n\tvar _obj = __webpack_require__(12);\n\t\n\tvar _computedStyle = __webpack_require__(74);\n\t\n\tvar _computedStyle2 = _interopRequireDefault(_computedStyle);\n\t\n\tvar _extend = __webpack_require__(112);\n\t\n\tvar _extend2 = _interopRequireDefault(_extend);\n\t\n\tvar _xhr = __webpack_require__(36);\n\t\n\tvar _xhr2 = _interopRequireDefault(_xhr);\n\t\n\tvar _tech = __webpack_require__(29);\n\t\n\tvar _tech2 = _interopRequireDefault(_tech);\n\t\n\tfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj['default'] = obj; return newObj; } }\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\t\n\t// HTML5 Element Shim for IE8\n\tif (typeof HTMLVideoElement === 'undefined' && Dom.isReal()) {\n\t  _document2['default'].createElement('video');\n\t  _document2['default'].createElement('audio');\n\t  _document2['default'].createElement('track');\n\t}\n\t\n\t/**\n\t * Doubles as the main function for users to create a player instance and also\n\t * the main library object.\n\t * The `videojs` function can be used to initialize or retrieve a player.\n\t  *\n\t * @param {string|Element} id\n\t *        Video element or video element ID\n\t *\n\t * @param {Object} [options]\n\t *        Optional options object for config/settings\n\t *\n\t * @param {Component~ReadyCallback} [ready]\n\t *        Optional ready callback\n\t *\n\t * @return {Player}\n\t *         A player instance\n\t *\n\t * @mixes videojs\n\t */\n\tfunction videojs(id, options, ready) {\n\t  var tag = void 0;\n\t\n\t  // Allow for element or ID to be passed in\n\t  // String ID\n\t  if (typeof id === 'string') {\n\t\n\t    // Adjust for jQuery ID syntax\n\t    if (id.indexOf('#') === 0) {\n\t      id = id.slice(1);\n\t    }\n\t\n\t    // If a player instance has already been created for this ID return it.\n\t    if (videojs.getPlayers()[id]) {\n\t\n\t      // If options or ready funtion are passed, warn\n\t      if (options) {\n\t        _log2['default'].warn('Player \"' + id + '\" is already initialised. Options will not be applied.');\n\t      }\n\t\n\t      if (ready) {\n\t        videojs.getPlayers()[id].ready(ready);\n\t      }\n\t\n\t      return videojs.getPlayers()[id];\n\t    }\n\t\n\t    // Otherwise get element for ID\n\t    tag = Dom.getEl(id);\n\t\n\t    // ID is a media element\n\t  } else {\n\t    tag = id;\n\t  }\n\t\n\t  // Check for a useable element\n\t  // re: nodeName, could be a box div also\n\t  if (!tag || !tag.nodeName) {\n\t    throw new TypeError('The element or ID supplied is not valid. (videojs)');\n\t  }\n\t\n\t  // Element may have a player attr referring to an already created player instance.\n\t  // If so return that otherwise set up a new player below\n\t  if (tag.player || _player2['default'].players[tag.playerId]) {\n\t    return tag.player || _player2['default'].players[tag.playerId];\n\t  }\n\t\n\t  options = options || {};\n\t\n\t  videojs.hooks('beforesetup').forEach(function (hookFunction) {\n\t    var opts = hookFunction(tag, (0, _mergeOptions3['default'])(options));\n\t\n\t    if (!(0, _obj.isObject)(opts) || Array.isArray(opts)) {\n\t      _log2['default'].error('please return an object in beforesetup hooks');\n\t      return;\n\t    }\n\t\n\t    options = (0, _mergeOptions3['default'])(options, opts);\n\t  });\n\t\n\t  var PlayerComponent = _component2['default'].getComponent('Player');\n\t  // If not, set up a new player\n\t  var player = new PlayerComponent(tag, options, ready);\n\t\n\t  videojs.hooks('setup').forEach(function (hookFunction) {\n\t    return hookFunction(player);\n\t  });\n\t\n\t  return player;\n\t}\n\t\n\t/**\n\t * An Object that contains lifecycle hooks as keys which point to an array\n\t * of functions that are run when a lifecycle is triggered\n\t */\n\tvideojs.hooks_ = {};\n\t\n\t/**\n\t * Get a list of hooks for a specific lifecycle\n\t *\n\t * @param {string} type\n\t *        the lifecyle to get hooks from\n\t *\n\t * @param {Function} [fn]\n\t *        Optionally add a hook to the lifecycle that your are getting.\n\t *\n\t * @return {Array}\n\t *         an array of hooks, or an empty array if there are none.\n\t */\n\tvideojs.hooks = function (type, fn) {\n\t  videojs.hooks_[type] = videojs.hooks_[type] || [];\n\t  if (fn) {\n\t    videojs.hooks_[type] = videojs.hooks_[type].concat(fn);\n\t  }\n\t  return videojs.hooks_[type];\n\t};\n\t\n\t/**\n\t * Add a function hook to a specific videojs lifecycle.\n\t *\n\t * @param {string} type\n\t *        the lifecycle to hook the function to.\n\t *\n\t * @param {Function|Function[]}\n\t *        The function or array of functions to attach.\n\t */\n\tvideojs.hook = function (type, fn) {\n\t  videojs.hooks(type, fn);\n\t};\n\t\n\t/**\n\t * Remove a hook from a specific videojs lifecycle.\n\t *\n\t * @param {string} type\n\t *        the lifecycle that the function hooked to\n\t *\n\t * @param {Function} fn\n\t *        The hooked function to remove\n\t *\n\t * @return {boolean}\n\t *         The function that was removed or undef\n\t */\n\tvideojs.removeHook = function (type, fn) {\n\t  var index = videojs.hooks(type).indexOf(fn);\n\t\n\t  if (index <= -1) {\n\t    return false;\n\t  }\n\t\n\t  videojs.hooks_[type] = videojs.hooks_[type].slice();\n\t  videojs.hooks_[type].splice(index, 1);\n\t\n\t  return true;\n\t};\n\t\n\t// Add default styles\n\tif (_window2['default'].VIDEOJS_NO_DYNAMIC_STYLE !== true && Dom.isReal()) {\n\t  var style = Dom.$('.vjs-styles-defaults');\n\t\n\t  if (!style) {\n\t    style = stylesheet.createStyleElement('vjs-styles-defaults');\n\t    var head = Dom.$('head');\n\t\n\t    if (head) {\n\t      head.insertBefore(style, head.firstChild);\n\t    }\n\t    stylesheet.setTextContent(style, '\\n      .video-js {\\n        width: 300px;\\n        height: 150px;\\n      }\\n\\n      .vjs-fluid {\\n        padding-top: 56.25%\\n      }\\n    ');\n\t  }\n\t}\n\t\n\t// Run Auto-load players\n\t// You have to wait at least once in case this script is loaded after your\n\t// video in the DOM (weird behavior only with minified version)\n\tsetup.autoSetupTimeout(1, videojs);\n\t\n\t/**\n\t * Current software version. Follows semver.\n\t *\n\t * @type {string}\n\t */\n\tvideojs.VERSION = '5.17.0';\n\t\n\t/**\n\t * The global options object. These are the settings that take effect\n\t * if no overrides are specified when the player is created.\n\t *\n\t * @type {Object}\n\t */\n\tvideojs.options = _player2['default'].prototype.options_;\n\t\n\t/**\n\t * Get an object with the currently created players, keyed by player ID\n\t *\n\t * @return {Object}\n\t *         The created players\n\t */\n\tvideojs.getPlayers = function () {\n\t  return _player2['default'].players;\n\t};\n\t\n\t/**\n\t * Expose players object.\n\t *\n\t * @memberOf videojs\n\t * @property {Object} players\n\t */\n\tvideojs.players = _player2['default'].players;\n\t\n\t/**\n\t * Get a component class object by name\n\t *\n\t * @borrows Component.getComponent as videojs.getComponent\n\t */\n\tvideojs.getComponent = _component2['default'].getComponent;\n\t\n\t/**\n\t * Register a component so it can referred to by name. Used when adding to other\n\t * components, either through addChild `component.addChild('myComponent')` or through\n\t * default children options  `{ children: ['myComponent'] }`.\n\t *\n\t * > NOTE: You could also just initialize the component before adding.\n\t * `component.addChild(new MyComponent());`\n\t *\n\t * @param {string} name\n\t *        The class name of the component\n\t *\n\t * @param {Component} comp\n\t *        The component class\n\t *\n\t * @return {Component}\n\t *         The newly registered component\n\t */\n\tvideojs.registerComponent = function (name, comp) {\n\t  if (_tech2['default'].isTech(comp)) {\n\t    _log2['default'].warn('The ' + name + ' tech was registered as a component. It should instead be registered using videojs.registerTech(name, tech)');\n\t  }\n\t\n\t  _component2['default'].registerComponent.call(_component2['default'], name, comp);\n\t};\n\t\n\t/**\n\t * Get a Tech class object by name\n\t *\n\t * @borrows Tech.getTech as videojs.getTech\n\t */\n\tvideojs.getTech = _tech2['default'].getTech;\n\t\n\t/**\n\t * Register a Tech so it can referred to by name.\n\t * This is used in the tech order for the player.\n\t *\n\t * @borrows Tech.registerTech as videojs.registerTech\n\t */\n\tvideojs.registerTech = _tech2['default'].registerTech;\n\t\n\t/**\n\t * A suite of browser and device tests from {@link browser}.\n\t *\n\t * @type {Object}\n\t * @private\n\t */\n\tvideojs.browser = browser;\n\t\n\t/**\n\t * Whether or not the browser supports touch events. Included for backward\n\t * compatibility with 4.x, but deprecated. Use `videojs.browser.TOUCH_ENABLED`\n\t * instead going forward.\n\t *\n\t * @deprecated since version 5.0\n\t * @type {boolean}\n\t */\n\tvideojs.TOUCH_ENABLED = browser.TOUCH_ENABLED;\n\t\n\t/**\n\t * Subclass an existing class\n\t * Mimics ES6 subclassing with the `extend` keyword\n\t *\n\t * @borrows extend:extendFn as videojs.extend\n\t */\n\tvideojs.extend = _extend2['default'];\n\t\n\t/**\n\t * Merge two options objects recursively\n\t * Performs a deep merge like lodash.merge but **only merges plain objects**\n\t * (not arrays, elements, anything else)\n\t * Other values will be copied directly from the second object.\n\t *\n\t * @borrows merge-options:mergeOptions as videojs.mergeOptions\n\t */\n\tvideojs.mergeOptions = _mergeOptions3['default'];\n\t\n\t/**\n\t * Change the context (this) of a function\n\t *\n\t * > NOTE: as of v5.0 we require an ES5 shim, so you should use the native\n\t * `function() {}.bind(newContext);` instead of this.\n\t *\n\t * @borrows fn:bind as videojs.bind\n\t */\n\tvideojs.bind = Fn.bind;\n\t\n\t/**\n\t * Create a Video.js player plugin.\n\t * Plugins are only initialized when options for the plugin are included\n\t * in the player options, or the plugin function on the player instance is\n\t * called.\n\t *\n\t * @borrows plugin:plugin as videojs.plugin\n\t */\n\tvideojs.plugin = _plugins2['default'];\n\t\n\t/**\n\t * Adding languages so that they're available to all players.\n\t * Example: `videojs.addLanguage('es', { 'Hello': 'Hola' });`\n\t *\n\t * @param {string} code\n\t *        The language code or dictionary property\n\t *\n\t * @param {Object} data\n\t *        The data values to be translated\n\t *\n\t * @return {Object}\n\t *         The resulting language dictionary object\n\t */\n\tvideojs.addLanguage = function (code, data) {\n\t  var _mergeOptions;\n\t\n\t  code = ('' + code).toLowerCase();\n\t\n\t  videojs.options.languages = (0, _mergeOptions3['default'])(videojs.options.languages, (_mergeOptions = {}, _mergeOptions[code] = data, _mergeOptions));\n\t\n\t  return videojs.options.languages[code];\n\t};\n\t\n\t/**\n\t * Log messages\n\t *\n\t * @borrows log:log as videojs.log\n\t */\n\tvideojs.log = _log2['default'];\n\t\n\t/**\n\t * Creates an emulated TimeRange object.\n\t *\n\t * @borrows time-ranges:createTimeRanges as videojs.createTimeRange\n\t */\n\t/**\n\t * @borrows time-ranges:createTimeRanges as videojs.createTimeRanges\n\t */\n\tvideojs.createTimeRange = videojs.createTimeRanges = _timeRanges.createTimeRanges;\n\t\n\t/**\n\t * Format seconds as a time string, H:MM:SS or M:SS\n\t * Supplying a guide (in seconds) will force a number of leading zeros\n\t * to cover the length of the guide\n\t *\n\t * @borrows format-time:formatTime as videojs.formatTime\n\t */\n\tvideojs.formatTime = _formatTime2['default'];\n\t\n\t/**\n\t * Resolve and parse the elements of a URL\n\t *\n\t * @borrows url:parseUrl as videojs.parseUrl\n\t */\n\tvideojs.parseUrl = Url.parseUrl;\n\t\n\t/**\n\t * Returns whether the url passed is a cross domain request or not.\n\t *\n\t * @borrows url:isCrossOrigin as videojs.isCrossOrigin\n\t */\n\tvideojs.isCrossOrigin = Url.isCrossOrigin;\n\t\n\t/**\n\t * Event target class.\n\t *\n\t * @borrows EventTarget as videojs.EventTarget\n\t */\n\tvideojs.EventTarget = _eventTarget2['default'];\n\t\n\t/**\n\t * Add an event listener to element\n\t * It stores the handler function in a separate cache object\n\t * and adds a generic handler to the element's event,\n\t * along with a unique id (guid) to the element.\n\t *\n\t * @borrows events:on as videojs.on\n\t */\n\tvideojs.on = Events.on;\n\t\n\t/**\n\t * Trigger a listener only once for an event\n\t *\n\t * @borrows events:one as videojs.one\n\t */\n\tvideojs.one = Events.one;\n\t\n\t/**\n\t * Removes event listeners from an element\n\t *\n\t * @borrows events:off as videojs.off\n\t */\n\tvideojs.off = Events.off;\n\t\n\t/**\n\t * Trigger an event for an element\n\t *\n\t * @borrows events:trigger as videojs.trigger\n\t */\n\tvideojs.trigger = Events.trigger;\n\t\n\t/**\n\t * A cross-browser XMLHttpRequest wrapper. Here's a simple example:\n\t *\n\t * @param {Object} options\n\t *        settings for the request.\n\t *\n\t * @return {XMLHttpRequest|XDomainRequest}\n\t *         The request object.\n\t *\n\t * @see https://github.com/Raynos/xhr\n\t */\n\tvideojs.xhr = _xhr2['default'];\n\t\n\t/**\n\t * TextTrack class\n\t *\n\t * @borrows TextTrack as videojs.TextTrack\n\t */\n\tvideojs.TextTrack = _textTrack2['default'];\n\t\n\t/**\n\t * export the AudioTrack class so that source handlers can create\n\t * AudioTracks and then add them to the players AudioTrackList\n\t *\n\t * @borrows AudioTrack as videojs.AudioTrack\n\t */\n\tvideojs.AudioTrack = _audioTrack2['default'];\n\t\n\t/**\n\t * export the VideoTrack class so that source handlers can create\n\t * VideoTracks and then add them to the players VideoTrackList\n\t *\n\t * @borrows VideoTrack as videojs.VideoTrack\n\t */\n\tvideojs.VideoTrack = _videoTrack2['default'];\n\t\n\t/**\n\t * Determines, via duck typing, whether or not a value is a DOM element.\n\t *\n\t * @borrows dom:isEl as videojs.isEl\n\t */\n\tvideojs.isEl = Dom.isEl;\n\t\n\t/**\n\t * Determines, via duck typing, whether or not a value is a text node.\n\t *\n\t * @borrows dom:isTextNode as videojs.isTextNode\n\t */\n\tvideojs.isTextNode = Dom.isTextNode;\n\t\n\t/**\n\t * Creates an element and applies properties.\n\t *\n\t * @borrows dom:createEl as videojs.createEl\n\t */\n\tvideojs.createEl = Dom.createEl;\n\t\n\t/**\n\t * Check if an element has a CSS class\n\t *\n\t * @borrows dom:hasElClass as videojs.hasClass\n\t */\n\tvideojs.hasClass = Dom.hasElClass;\n\t\n\t/**\n\t * Add a CSS class name to an element\n\t *\n\t * @borrows dom:addElClass as videojs.addClass\n\t */\n\tvideojs.addClass = Dom.addElClass;\n\t\n\t/**\n\t * Remove a CSS class name from an element\n\t *\n\t * @borrows dom:removeElClass as videojs.removeClass\n\t */\n\tvideojs.removeClass = Dom.removeElClass;\n\t\n\t/**\n\t * Adds or removes a CSS class name on an element depending on an optional\n\t * condition or the presence/absence of the class name.\n\t *\n\t * @borrows dom:toggleElClass as videojs.toggleClass\n\t */\n\tvideojs.toggleClass = Dom.toggleElClass;\n\t\n\t/**\n\t * Apply attributes to an HTML element.\n\t *\n\t * @borrows dom:setElAttributes as videojs.setAttribute\n\t */\n\tvideojs.setAttributes = Dom.setElAttributes;\n\t\n\t/**\n\t * Get an element's attribute values, as defined on the HTML tag\n\t * Attributes are not the same as properties. They're defined on the tag\n\t * or with setAttribute (which shouldn't be used with HTML)\n\t * This will return true or false for boolean attributes.\n\t *\n\t * @borrows dom:getElAttributes as videojs.getAttributes\n\t */\n\tvideojs.getAttributes = Dom.getElAttributes;\n\t\n\t/**\n\t * Empties the contents of an element.\n\t *\n\t * @borrows dom:emptyEl as videojs.emptyEl\n\t */\n\tvideojs.emptyEl = Dom.emptyEl;\n\t\n\t/**\n\t * Normalizes and appends content to an element.\n\t *\n\t * The content for an element can be passed in multiple types and\n\t * combinations, whose behavior is as follows:\n\t *\n\t * - String\n\t *   Normalized into a text node.\n\t *\n\t * - Element, TextNode\n\t *   Passed through.\n\t *\n\t * - Array\n\t *   A one-dimensional array of strings, elements, nodes, or functions (which\n\t *   return single strings, elements, or nodes).\n\t *\n\t * - Function\n\t *   If the sole argument, is expected to produce a string, element,\n\t *   node, or array.\n\t *\n\t * @borrows dom:appendContents as videojs.appendContet\n\t */\n\tvideojs.appendContent = Dom.appendContent;\n\t\n\t/**\n\t * Normalizes and inserts content into an element; this is identical to\n\t * `appendContent()`, except it empties the element first.\n\t *\n\t * The content for an element can be passed in multiple types and\n\t * combinations, whose behavior is as follows:\n\t *\n\t * - String\n\t *   Normalized into a text node.\n\t *\n\t * - Element, TextNode\n\t *   Passed through.\n\t *\n\t * - Array\n\t *   A one-dimensional array of strings, elements, nodes, or functions (which\n\t *   return single strings, elements, or nodes).\n\t *\n\t * - Function\n\t *   If the sole argument, is expected to produce a string, element,\n\t *   node, or array.\n\t *\n\t * @borrows dom:insertContent as videojs.insertContent\n\t */\n\tvideojs.insertContent = Dom.insertContent;\n\t\n\t/**\n\t * A safe getComputedStyle with an IE8 fallback.\n\t *\n\t * This is because in Firefox, if the player is loaded in an iframe with `display:none`,\n\t * then `getComputedStyle` returns `null`, so, we do a null-check to make sure\n\t * that the player doesn't break in these cases.\n\t * See https://bugzilla.mozilla.org/show_bug.cgi?id=548397 for more details.\n\t *\n\t * @borrows computed-style:computedStyle as videojs.computedStyle\n\t */\n\tvideojs.computedStyle = _computedStyle2['default'];\n\t\n\t/*\n\t * Custom Universal Module Definition (UMD)\n\t *\n\t * Video.js will never be a non-browser lib so we can simplify UMD a bunch and\n\t * still support requirejs and browserify. This also needs to be closure\n\t * compiler compatible, so string keys are used.\n\t */\n\tif (true) {\n\t  !(__WEBPACK_AMD_DEFINE_ARRAY__ = [], __WEBPACK_AMD_DEFINE_RESULT__ = function () {\n\t    return videojs;\n\t  }.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\t\n\t  // checking that module is an object too because of umdjs/umd#35\n\t} else if ((typeof exports === 'undefined' ? 'undefined' : _typeof(exports)) === 'object' && (typeof module === 'undefined' ? 'undefined' : _typeof(module)) === 'object') {\n\t  module.exports = videojs;\n\t}\n\t\n\texports['default'] = videojs;\n\n\n/***/ },\n/* 4 */\n/***/ function(module, exports) {\n\n\t/* WEBPACK VAR INJECTION */(function(global) {if (typeof window !== \"undefined\") {\n\t    module.exports = window;\n\t} else if (typeof global !== \"undefined\") {\n\t    module.exports = global;\n\t} else if (typeof self !== \"undefined\"){\n\t    module.exports = self;\n\t} else {\n\t    module.exports = {};\n\t}\n\t\n\t/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }())))\n\n/***/ },\n/* 5 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/* WEBPACK VAR INJECTION */(function(global) {var topLevel = typeof global !== 'undefined' ? global :\n\t    typeof window !== 'undefined' ? window : {}\n\tvar minDoc = __webpack_require__(6);\n\t\n\tif (typeof document !== 'undefined') {\n\t    module.exports = document;\n\t} else {\n\t    var doccy = topLevel['__GLOBAL_DOCUMENT_CACHE@4'];\n\t\n\t    if (!doccy) {\n\t        doccy = topLevel['__GLOBAL_DOCUMENT_CACHE@4'] = minDoc;\n\t    }\n\t\n\t    module.exports = doccy;\n\t}\n\t\n\t/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }())))\n\n/***/ },\n/* 6 */\n/***/ function(module, exports) {\n\n\t/* (ignored) */\n\n/***/ },\n/* 7 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\texports.__esModule = true;\n\texports.hasLoaded = exports.autoSetupTimeout = exports.autoSetup = undefined;\n\t\n\tvar _dom = __webpack_require__(8);\n\t\n\tvar Dom = _interopRequireWildcard(_dom);\n\t\n\tvar _events = __webpack_require__(14);\n\t\n\tvar Events = _interopRequireWildcard(_events);\n\t\n\tvar _document = __webpack_require__(5);\n\t\n\tvar _document2 = _interopRequireDefault(_document);\n\t\n\tvar _window = __webpack_require__(4);\n\t\n\tvar _window2 = _interopRequireDefault(_window);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\t\n\tfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj['default'] = obj; return newObj; } }\n\t\n\t/**\n\t * @file setup.js - Functions for setting up a player without\n\t * user interaction based on the data-setup `attribute` of the video tag.\n\t *\n\t * @module setup\n\t */\n\tvar _windowLoaded = false;\n\tvar videojs = void 0;\n\t\n\t/**\n\t * Set up any tags that have a data-setup `attribute` when the player is started.\n\t */\n\tvar autoSetup = function autoSetup() {\n\t\n\t  // Protect against breakage in non-browser environments.\n\t  if (!Dom.isReal()) {\n\t    return;\n\t  }\n\t\n\t  // One day, when we stop supporting IE8, go back to this, but in the meantime...*hack hack hack*\n\t  // var vids = Array.prototype.slice.call(document.getElementsByTagName('video'));\n\t  // var audios = Array.prototype.slice.call(document.getElementsByTagName('audio'));\n\t  // var mediaEls = vids.concat(audios);\n\t\n\t  // Because IE8 doesn't support calling slice on a node list, we need to loop\n\t  // through each list of elements to build up a new, combined list of elements.\n\t  var vids = _document2['default'].getElementsByTagName('video');\n\t  var audios = _document2['default'].getElementsByTagName('audio');\n\t  var mediaEls = [];\n\t\n\t  if (vids && vids.length > 0) {\n\t    for (var i = 0, e = vids.length; i < e; i++) {\n\t      mediaEls.push(vids[i]);\n\t    }\n\t  }\n\t\n\t  if (audios && audios.length > 0) {\n\t    for (var _i = 0, _e = audios.length; _i < _e; _i++) {\n\t      mediaEls.push(audios[_i]);\n\t    }\n\t  }\n\t\n\t  // Check if any media elements exist\n\t  if (mediaEls && mediaEls.length > 0) {\n\t\n\t    for (var _i2 = 0, _e2 = mediaEls.length; _i2 < _e2; _i2++) {\n\t      var mediaEl = mediaEls[_i2];\n\t\n\t      // Check if element exists, has getAttribute func.\n\t      // IE seems to consider typeof el.getAttribute == 'object' instead of\n\t      // 'function' like expected, at least when loading the player immediately.\n\t      if (mediaEl && mediaEl.getAttribute) {\n\t\n\t        // Make sure this player hasn't already been set up.\n\t        if (mediaEl.player === undefined) {\n\t          var options = mediaEl.getAttribute('data-setup');\n\t\n\t          // Check if data-setup attr exists.\n\t          // We only auto-setup if they've added the data-setup attr.\n\t          if (options !== null) {\n\t            // Create new video.js instance.\n\t            videojs(mediaEl);\n\t          }\n\t        }\n\t\n\t        // If getAttribute isn't defined, we need to wait for the DOM.\n\t      } else {\n\t        autoSetupTimeout(1);\n\t        break;\n\t      }\n\t    }\n\t\n\t    // No videos were found, so keep looping unless page is finished loading.\n\t  } else if (!_windowLoaded) {\n\t    autoSetupTimeout(1);\n\t  }\n\t};\n\t\n\t/**\n\t * Wait until the page is loaded before running autoSetup. This will be called in\n\t * autoSetup if `hasLoaded` returns false.\n\t *\n\t * @param {number} wait\n\t *        How long to wait in ms\n\t *\n\t * @param {videojs} [vjs]\n\t *        The videojs library function\n\t */\n\tfunction autoSetupTimeout(wait, vjs) {\n\t  if (vjs) {\n\t    videojs = vjs;\n\t  }\n\t\n\t  _window2['default'].setTimeout(autoSetup, wait);\n\t}\n\t\n\tif (Dom.isReal() && _document2['default'].readyState === 'complete') {\n\t  _windowLoaded = true;\n\t} else {\n\t  /**\n\t   * Listen for the load event on window, and set _windowLoaded to true.\n\t   *\n\t   * @listens load\n\t   */\n\t  Events.one(_window2['default'], 'load', function () {\n\t    _windowLoaded = true;\n\t  });\n\t}\n\t\n\t/**\n\t * check if the document has been loaded\n\t */\n\tvar hasLoaded = function hasLoaded() {\n\t  return _windowLoaded;\n\t};\n\t\n\texports.autoSetup = autoSetup;\n\texports.autoSetupTimeout = autoSetupTimeout;\n\texports.hasLoaded = hasLoaded;\n\n\n/***/ },\n/* 8 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\texports.__esModule = true;\n\texports.$$ = exports.$ = undefined;\n\t\n\tvar _templateObject = _taggedTemplateLiteralLoose(['Setting attributes in the second argument of createEl()\\n                has been deprecated. Use the third argument instead.\\n                createEl(type, properties, attributes). Attempting to set ', ' to ', '.'], ['Setting attributes in the second argument of createEl()\\n                has been deprecated. Use the third argument instead.\\n                createEl(type, properties, attributes). Attempting to set ', ' to ', '.']);\n\t\n\texports.isReal = isReal;\n\texports.isEl = isEl;\n\texports.getEl = getEl;\n\texports.createEl = createEl;\n\texports.textContent = textContent;\n\texports.insertElFirst = insertElFirst;\n\texports.getElData = getElData;\n\texports.hasElData = hasElData;\n\texports.removeElData = removeElData;\n\texports.hasElClass = hasElClass;\n\texports.addElClass = addElClass;\n\texports.removeElClass = removeElClass;\n\texports.toggleElClass = toggleElClass;\n\texports.setElAttributes = setElAttributes;\n\texports.getElAttributes = getElAttributes;\n\texports.getAttribute = getAttribute;\n\texports.setAttribute = setAttribute;\n\texports.removeAttribute = removeAttribute;\n\texports.blockTextSelection = blockTextSelection;\n\texports.unblockTextSelection = unblockTextSelection;\n\texports.findElPosition = findElPosition;\n\texports.getPointerPosition = getPointerPosition;\n\texports.isTextNode = isTextNode;\n\texports.emptyEl = emptyEl;\n\texports.normalizeContent = normalizeContent;\n\texports.appendContent = appendContent;\n\texports.insertContent = insertContent;\n\t\n\tvar _document = __webpack_require__(5);\n\t\n\tvar _document2 = _interopRequireDefault(_document);\n\t\n\tvar _window = __webpack_require__(4);\n\t\n\tvar _window2 = _interopRequireDefault(_window);\n\t\n\tvar _guid = __webpack_require__(9);\n\t\n\tvar Guid = _interopRequireWildcard(_guid);\n\t\n\tvar _log = __webpack_require__(10);\n\t\n\tvar _log2 = _interopRequireDefault(_log);\n\t\n\tvar _tsml = __webpack_require__(13);\n\t\n\tvar _tsml2 = _interopRequireDefault(_tsml);\n\t\n\tvar _obj = __webpack_require__(12);\n\t\n\tfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj['default'] = obj; return newObj; } }\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\t\n\tfunction _taggedTemplateLiteralLoose(strings, raw) { strings.raw = raw; return strings; } /**\n\t                                                                                           * @file dom.js\n\t                                                                                           * @module dom\n\t                                                                                           */\n\t\n\t\n\t/**\n\t * Detect if a value is a string with any non-whitespace characters.\n\t *\n\t * @param {string} str\n\t *        The string to check\n\t *\n\t * @return {boolean}\n\t *         - True if the string is non-blank\n\t *         - False otherwise\n\t *\n\t */\n\tfunction isNonBlankString(str) {\n\t  return typeof str === 'string' && /\\S/.test(str);\n\t}\n\t\n\t/**\n\t * Throws an error if the passed string has whitespace. This is used by\n\t * class methods to be relatively consistent with the classList API.\n\t *\n\t * @param {string} str\n\t *         The string to check for whitespace.\n\t *\n\t * @throws {Error}\n\t *         Throws an error if there is whitespace in the string.\n\t *\n\t */\n\tfunction throwIfWhitespace(str) {\n\t  if (/\\s/.test(str)) {\n\t    throw new Error('class has illegal whitespace characters');\n\t  }\n\t}\n\t\n\t/**\n\t * Produce a regular expression for matching a className within an elements className.\n\t *\n\t * @param {string} className\n\t *         The className to generate the RegExp for.\n\t *\n\t * @return {RegExp}\n\t *         The RegExp that will check for a specific `className` in an elements\n\t *         className.\n\t */\n\tfunction classRegExp(className) {\n\t  return new RegExp('(^|\\\\s)' + className + '($|\\\\s)');\n\t}\n\t\n\t/**\n\t * Whether the current DOM interface appears to be real.\n\t *\n\t * @return {Boolean}\n\t */\n\tfunction isReal() {\n\t  return (\n\t\n\t    // Both document and window will never be undefined thanks to `global`.\n\t    _document2['default'] === _window2['default'].document &&\n\t\n\t    // In IE < 9, DOM methods return \"object\" as their type, so all we can\n\t    // confidently check is that it exists.\n\t    typeof _document2['default'].createElement !== 'undefined'\n\t  );\n\t}\n\t\n\t/**\n\t * Determines, via duck typing, whether or not a value is a DOM element.\n\t *\n\t * @param {Mixed} value\n\t *        The thing to check\n\t *\n\t * @return {boolean}\n\t *         - True if it is a DOM element\n\t *         - False otherwise\n\t */\n\tfunction isEl(value) {\n\t  return (0, _obj.isObject)(value) && value.nodeType === 1;\n\t}\n\t\n\t/**\n\t * Creates functions to query the DOM using a given method.\n\t *\n\t * @param {string} method\n\t *         The method to create the query with.\n\t *\n\t * @return {Function}\n\t *         The query method\n\t */\n\tfunction createQuerier(method) {\n\t  return function (selector, context) {\n\t    if (!isNonBlankString(selector)) {\n\t      return _document2['default'][method](null);\n\t    }\n\t    if (isNonBlankString(context)) {\n\t      context = _document2['default'].querySelector(context);\n\t    }\n\t\n\t    var ctx = isEl(context) ? context : _document2['default'];\n\t\n\t    return ctx[method] && ctx[method](selector);\n\t  };\n\t}\n\t\n\t/**\n\t * Shorthand for document.getElementById()\n\t * Also allows for CSS (jQuery) ID syntax. But nothing other than IDs.\n\t *\n\t * @param {string} id\n\t *         The id of the element to get\n\t *\n\t * @return {Element|null}\n\t *         Element with supplied ID or null if there wasn't one.\n\t */\n\tfunction getEl(id) {\n\t  if (id.indexOf('#') === 0) {\n\t    id = id.slice(1);\n\t  }\n\t\n\t  return _document2['default'].getElementById(id);\n\t}\n\t\n\t/**\n\t * Creates an element and applies properties.\n\t *\n\t * @param {string} [tagName='div']\n\t *         Name of tag to be created.\n\t *\n\t * @param {Object} [properties={}]\n\t *         Element properties to be applied.\n\t *\n\t * @param {Object} [attributes={}]\n\t *         Element attributes to be applied.\n\t *\n\t * @param {String|Element|TextNode|Array|Function} [content]\n\t *         Contents for the element (see: {@link dom:normalizeContent})\n\t *\n\t * @return {Element}\n\t *         The element that was created.\n\t */\n\tfunction createEl() {\n\t  var tagName = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'div';\n\t  var properties = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\t  var attributes = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n\t  var content = arguments[3];\n\t\n\t  var el = _document2['default'].createElement(tagName);\n\t\n\t  Object.getOwnPropertyNames(properties).forEach(function (propName) {\n\t    var val = properties[propName];\n\t\n\t    // See #2176\n\t    // We originally were accepting both properties and attributes in the\n\t    // same object, but that doesn't work so well.\n\t    if (propName.indexOf('aria-') !== -1 || propName === 'role' || propName === 'type') {\n\t      _log2['default'].warn((0, _tsml2['default'])(_templateObject, propName, val));\n\t      el.setAttribute(propName, val);\n\t\n\t      // Handle textContent since it's not supported everywhere and we have a\n\t      // method for it.\n\t    } else if (propName === 'textContent') {\n\t      textContent(el, val);\n\t    } else {\n\t      el[propName] = val;\n\t    }\n\t  });\n\t\n\t  Object.getOwnPropertyNames(attributes).forEach(function (attrName) {\n\t    el.setAttribute(attrName, attributes[attrName]);\n\t  });\n\t\n\t  if (content) {\n\t    appendContent(el, content);\n\t  }\n\t\n\t  return el;\n\t}\n\t\n\t/**\n\t * Injects text into an element, replacing any existing contents entirely.\n\t *\n\t * @param {Element} el\n\t *        The element to add text content into\n\t *\n\t * @param {string} text\n\t *        The text content to add.\n\t *\n\t * @return {Element}\n\t *         The element with added text content.\n\t */\n\tfunction textContent(el, text) {\n\t  if (typeof el.textContent === 'undefined') {\n\t    el.innerText = text;\n\t  } else {\n\t    el.textContent = text;\n\t  }\n\t  return el;\n\t}\n\t\n\t/**\n\t * Insert an element as the first child node of another\n\t *\n\t * @param {Element} child\n\t *        Element to insert\n\t *\n\t * @param {Element} parent\n\t *        Element to insert child into\n\t *\n\t */\n\tfunction insertElFirst(child, parent) {\n\t  if (parent.firstChild) {\n\t    parent.insertBefore(child, parent.firstChild);\n\t  } else {\n\t    parent.appendChild(child);\n\t  }\n\t}\n\t\n\t/**\n\t * Element Data Store. Allows for binding data to an element without putting it directly on the element.\n\t * Ex. Event listeners are stored here.\n\t * (also from jsninja.com, slightly modified and updated for closure compiler)\n\t *\n\t * @type {Object}\n\t * @private\n\t */\n\tvar elData = {};\n\t\n\t/*\n\t * Unique attribute name to store an element's guid in\n\t *\n\t * @type {string}\n\t * @constant\n\t * @private\n\t */\n\tvar elIdAttr = 'vdata' + new Date().getTime();\n\t\n\t/**\n\t * Returns the cache object where data for an element is stored\n\t *\n\t * @param {Element} el\n\t *        Element to store data for.\n\t *\n\t * @return {Object}\n\t *         The cache object for that el that was passed in.\n\t */\n\tfunction getElData(el) {\n\t  var id = el[elIdAttr];\n\t\n\t  if (!id) {\n\t    id = el[elIdAttr] = Guid.newGUID();\n\t  }\n\t\n\t  if (!elData[id]) {\n\t    elData[id] = {};\n\t  }\n\t\n\t  return elData[id];\n\t}\n\t\n\t/**\n\t * Returns whether or not an element has cached data\n\t *\n\t * @param {Element} el\n\t *        Check if this element has cached data.\n\t *\n\t * @return {boolean}\n\t *         - True if the DOM element has cached data.\n\t *         - False otherwise.\n\t */\n\tfunction hasElData(el) {\n\t  var id = el[elIdAttr];\n\t\n\t  if (!id) {\n\t    return false;\n\t  }\n\t\n\t  return !!Object.getOwnPropertyNames(elData[id]).length;\n\t}\n\t\n\t/**\n\t * Delete data for the element from the cache and the guid attr from getElementById\n\t *\n\t * @param {Element} el\n\t *        Remove cached data for this element.\n\t */\n\tfunction removeElData(el) {\n\t  var id = el[elIdAttr];\n\t\n\t  if (!id) {\n\t    return;\n\t  }\n\t\n\t  // Remove all stored data\n\t  delete elData[id];\n\t\n\t  // Remove the elIdAttr property from the DOM node\n\t  try {\n\t    delete el[elIdAttr];\n\t  } catch (e) {\n\t    if (el.removeAttribute) {\n\t      el.removeAttribute(elIdAttr);\n\t    } else {\n\t      // IE doesn't appear to support removeAttribute on the document element\n\t      el[elIdAttr] = null;\n\t    }\n\t  }\n\t}\n\t\n\t/**\n\t * Check if an element has a CSS class\n\t *\n\t * @param {Element} element\n\t *        Element to check\n\t *\n\t * @param {string} classToCheck\n\t *        Class name to check for\n\t *\n\t * @return {boolean}\n\t *         - True if the element had the class\n\t *         - False otherwise.\n\t *\n\t * @throws {Error}\n\t *         Throws an error if `classToCheck` has white space.\n\t */\n\tfunction hasElClass(element, classToCheck) {\n\t  throwIfWhitespace(classToCheck);\n\t  if (element.classList) {\n\t    return element.classList.contains(classToCheck);\n\t  }\n\t  return classRegExp(classToCheck).test(element.className);\n\t}\n\t\n\t/**\n\t * Add a CSS class name to an element\n\t *\n\t * @param {Element} element\n\t *        Element to add class name to.\n\t *\n\t * @param {string} classToAdd\n\t *        Class name to add.\n\t *\n\t * @return {Element}\n\t *         The dom element with the added class name.\n\t */\n\tfunction addElClass(element, classToAdd) {\n\t  if (element.classList) {\n\t    element.classList.add(classToAdd);\n\t\n\t    // Don't need to `throwIfWhitespace` here because `hasElClass` will do it\n\t    // in the case of classList not being supported.\n\t  } else if (!hasElClass(element, classToAdd)) {\n\t    element.className = (element.className + ' ' + classToAdd).trim();\n\t  }\n\t\n\t  return element;\n\t}\n\t\n\t/**\n\t * Remove a CSS class name from an element\n\t *\n\t * @param {Element} element\n\t *        Element to remove a class name from.\n\t *\n\t * @param {string} classToRemove\n\t *        Class name to remove\n\t *\n\t * @return {Element}\n\t *         The dom element with class name removed.\n\t */\n\tfunction removeElClass(element, classToRemove) {\n\t  if (element.classList) {\n\t    element.classList.remove(classToRemove);\n\t  } else {\n\t    throwIfWhitespace(classToRemove);\n\t    element.className = element.className.split(/\\s+/).filter(function (c) {\n\t      return c !== classToRemove;\n\t    }).join(' ');\n\t  }\n\t\n\t  return element;\n\t}\n\t\n\t/**\n\t * The callback definition for toggleElClass.\n\t *\n\t * @callback Dom~PredicateCallback\n\t * @param {Element} element\n\t *        The DOM element of the Component.\n\t *\n\t * @param {string} classToToggle\n\t *        The `className` that wants to be toggled\n\t *\n\t * @return {boolean|undefined}\n\t *         - If true the `classToToggle` will get added to `element`.\n\t *         - If false the `classToToggle` will get removed from `element`.\n\t *         - If undefined this callback will be ignored\n\t */\n\t\n\t/**\n\t * Adds or removes a CSS class name on an element depending on an optional\n\t * condition or the presence/absence of the class name.\n\t *\n\t * @param {Element} element\n\t *        The element to toggle a class name on.\n\t *\n\t * @param {string} classToToggle\n\t *        The class that should be toggled\n\t *\n\t * @param {boolean|PredicateCallback} [predicate]\n\t *        See the return value for {@link Dom~PredicateCallback}\n\t *\n\t * @return {Element}\n\t *         The element with a class that has been toggled.\n\t */\n\tfunction toggleElClass(element, classToToggle, predicate) {\n\t\n\t  // This CANNOT use `classList` internally because IE does not support the\n\t  // second parameter to the `classList.toggle()` method! Which is fine because\n\t  // `classList` will be used by the add/remove functions.\n\t  var has = hasElClass(element, classToToggle);\n\t\n\t  if (typeof predicate === 'function') {\n\t    predicate = predicate(element, classToToggle);\n\t  }\n\t\n\t  if (typeof predicate !== 'boolean') {\n\t    predicate = !has;\n\t  }\n\t\n\t  // If the necessary class operation matches the current state of the\n\t  // element, no action is required.\n\t  if (predicate === has) {\n\t    return;\n\t  }\n\t\n\t  if (predicate) {\n\t    addElClass(element, classToToggle);\n\t  } else {\n\t    removeElClass(element, classToToggle);\n\t  }\n\t\n\t  return element;\n\t}\n\t\n\t/**\n\t * Apply attributes to an HTML element.\n\t *\n\t * @param {Element} el\n\t *        Element to add attributes to.\n\t *\n\t * @param {Object} [attributes]\n\t *        Attributes to be applied.\n\t */\n\tfunction setElAttributes(el, attributes) {\n\t  Object.getOwnPropertyNames(attributes).forEach(function (attrName) {\n\t    var attrValue = attributes[attrName];\n\t\n\t    if (attrValue === null || typeof attrValue === 'undefined' || attrValue === false) {\n\t      el.removeAttribute(attrName);\n\t    } else {\n\t      el.setAttribute(attrName, attrValue === true ? '' : attrValue);\n\t    }\n\t  });\n\t}\n\t\n\t/**\n\t * Get an element's attribute values, as defined on the HTML tag\n\t * Attributes are not the same as properties. They're defined on the tag\n\t * or with setAttribute (which shouldn't be used with HTML)\n\t * This will return true or false for boolean attributes.\n\t *\n\t * @param {Element} tag\n\t *        Element from which to get tag attributes.\n\t *\n\t * @return {Object}\n\t *         All attributes of the element.\n\t */\n\tfunction getElAttributes(tag) {\n\t  var obj = {};\n\t\n\t  // known boolean attributes\n\t  // we can check for matching boolean properties, but older browsers\n\t  // won't know about HTML5 boolean attributes that we still read from\n\t  var knownBooleans = ',' + 'autoplay,controls,loop,muted,default' + ',';\n\t\n\t  if (tag && tag.attributes && tag.attributes.length > 0) {\n\t    var attrs = tag.attributes;\n\t\n\t    for (var i = attrs.length - 1; i >= 0; i--) {\n\t      var attrName = attrs[i].name;\n\t      var attrVal = attrs[i].value;\n\t\n\t      // check for known booleans\n\t      // the matching element property will return a value for typeof\n\t      if (typeof tag[attrName] === 'boolean' || knownBooleans.indexOf(',' + attrName + ',') !== -1) {\n\t        // the value of an included boolean attribute is typically an empty\n\t        // string ('') which would equal false if we just check for a false value.\n\t        // we also don't want support bad code like autoplay='false'\n\t        attrVal = attrVal !== null ? true : false;\n\t      }\n\t\n\t      obj[attrName] = attrVal;\n\t    }\n\t  }\n\t\n\t  return obj;\n\t}\n\t\n\t/**\n\t * Get the value of an element's attribute\n\t *\n\t * @param {Element} el\n\t *        A DOM element\n\t *\n\t * @param {string} attribute\n\t *        Attribute to get the value of\n\t *\n\t * @return {string}\n\t *         value of the attribute\n\t */\n\tfunction getAttribute(el, attribute) {\n\t  return el.getAttribute(attribute);\n\t}\n\t\n\t/**\n\t * Set the value of an element's attribute\n\t *\n\t * @param {Element} el\n\t *        A DOM element\n\t *\n\t * @param {string} attribute\n\t *        Attribute to set\n\t *\n\t * @param {string} value\n\t *        Value to set the attribute to\n\t */\n\tfunction setAttribute(el, attribute, value) {\n\t  el.setAttribute(attribute, value);\n\t}\n\t\n\t/**\n\t * Remove an element's attribute\n\t *\n\t * @param {Element} el\n\t *        A DOM element\n\t *\n\t * @param {string} attribute\n\t *        Attribute to remove\n\t */\n\tfunction removeAttribute(el, attribute) {\n\t  el.removeAttribute(attribute);\n\t}\n\t\n\t/**\n\t * Attempt to block the ability to select text while dragging controls\n\t */\n\tfunction blockTextSelection() {\n\t  _document2['default'].body.focus();\n\t  _document2['default'].onselectstart = function () {\n\t    return false;\n\t  };\n\t}\n\t\n\t/**\n\t * Turn off text selection blocking\n\t */\n\tfunction unblockTextSelection() {\n\t  _document2['default'].onselectstart = function () {\n\t    return true;\n\t  };\n\t}\n\t\n\t/**\n\t * The postion of a DOM element on the page.\n\t *\n\t * @typedef {Object} Dom~Position\n\t *\n\t * @property {number} left\n\t *           Pixels to the left\n\t *\n\t * @property {number} top\n\t *           Pixels on top\n\t */\n\t\n\t/**\n\t * Offset Left.\n\t * getBoundingClientRect technique from\n\t * John Resig\n\t *\n\t * @see http://ejohn.org/blog/getboundingclientrect-is-awesome/\n\t *\n\t * @param {Element} el\n\t *        Element from which to get offset\n\t *\n\t * @return {Dom~Position}\n\t *         The position of the element that was passed in.\n\t */\n\tfunction findElPosition(el) {\n\t  var box = void 0;\n\t\n\t  if (el.getBoundingClientRect && el.parentNode) {\n\t    box = el.getBoundingClientRect();\n\t  }\n\t\n\t  if (!box) {\n\t    return {\n\t      left: 0,\n\t      top: 0\n\t    };\n\t  }\n\t\n\t  var docEl = _document2['default'].documentElement;\n\t  var body = _document2['default'].body;\n\t\n\t  var clientLeft = docEl.clientLeft || body.clientLeft || 0;\n\t  var scrollLeft = _window2['default'].pageXOffset || body.scrollLeft;\n\t  var left = box.left + scrollLeft - clientLeft;\n\t\n\t  var clientTop = docEl.clientTop || body.clientTop || 0;\n\t  var scrollTop = _window2['default'].pageYOffset || body.scrollTop;\n\t  var top = box.top + scrollTop - clientTop;\n\t\n\t  // Android sometimes returns slightly off decimal values, so need to round\n\t  return {\n\t    left: Math.round(left),\n\t    top: Math.round(top)\n\t  };\n\t}\n\t\n\t/**\n\t * x and y coordinates for a dom element or mouse pointer\n\t *\n\t * @typedef {Object} Dom~Coordinates\n\t *\n\t * @property {number} x\n\t *           x coordinate in pixels\n\t *\n\t * @property {number} y\n\t *           y coordinate in pixels\n\t */\n\t\n\t/**\n\t * Get pointer position in element\n\t * Returns an object with x and y coordinates.\n\t * The base on the coordinates are the bottom left of the element.\n\t *\n\t * @param {Element} el\n\t *        Element on which to get the pointer position on\n\t *\n\t * @param {EventTarget~Event} event\n\t *        Event object\n\t *\n\t * @return {Dom~Coordinates}\n\t *         A Coordinates object corresponding to the mouse position.\n\t *\n\t */\n\tfunction getPointerPosition(el, event) {\n\t  var position = {};\n\t  var box = findElPosition(el);\n\t  var boxW = el.offsetWidth;\n\t  var boxH = el.offsetHeight;\n\t\n\t  var boxY = box.top;\n\t  var boxX = box.left;\n\t  var pageY = event.pageY;\n\t  var pageX = event.pageX;\n\t\n\t  if (event.changedTouches) {\n\t    pageX = event.changedTouches[0].pageX;\n\t    pageY = event.changedTouches[0].pageY;\n\t  }\n\t\n\t  position.y = Math.max(0, Math.min(1, (boxY - pageY + boxH) / boxH));\n\t  position.x = Math.max(0, Math.min(1, (pageX - boxX) / boxW));\n\t\n\t  return position;\n\t}\n\t\n\t/**\n\t * Determines, via duck typing, whether or not a value is a text node.\n\t *\n\t * @param {Mixed} value\n\t *        Check if this value is a text node.\n\t *\n\t * @return {boolean}\n\t *         - True if it is a text node\n\t *         - False otherwise\n\t */\n\tfunction isTextNode(value) {\n\t  return (0, _obj.isObject)(value) && value.nodeType === 3;\n\t}\n\t\n\t/**\n\t * Empties the contents of an element.\n\t *\n\t * @param {Element} el\n\t *        The element to empty children from\n\t *\n\t * @return {Element}\n\t *         The element with no children\n\t */\n\tfunction emptyEl(el) {\n\t  while (el.firstChild) {\n\t    el.removeChild(el.firstChild);\n\t  }\n\t  return el;\n\t}\n\t\n\t/**\n\t * Normalizes content for eventual insertion into the DOM.\n\t *\n\t * This allows a wide range of content definition methods, but protects\n\t * from falling into the trap of simply writing to `innerHTML`, which is\n\t * an XSS concern.\n\t *\n\t * The content for an element can be passed in multiple types and\n\t * combinations, whose behavior is as follows:\n\t *\n\t * @param {String|Element|TextNode|Array|Function} content\n\t *        - String: Normalized into a text node.\n\t *        - Element/TextNode: Passed through.\n\t *        - Array: A one-dimensional array of strings, elements, nodes, or functions\n\t *          (which return single strings, elements, or nodes).\n\t *        - Function: If the sole argument, is expected to produce a string, element,\n\t *          node, or array as defined above.\n\t *\n\t * @return {Array}\n\t *         All of the content that was passed in normalized.\n\t */\n\tfunction normalizeContent(content) {\n\t\n\t  // First, invoke content if it is a function. If it produces an array,\n\t  // that needs to happen before normalization.\n\t  if (typeof content === 'function') {\n\t    content = content();\n\t  }\n\t\n\t  // Next up, normalize to an array, so one or many items can be normalized,\n\t  // filtered, and returned.\n\t  return (Array.isArray(content) ? content : [content]).map(function (value) {\n\t\n\t    // First, invoke value if it is a function to produce a new value,\n\t    // which will be subsequently normalized to a Node of some kind.\n\t    if (typeof value === 'function') {\n\t      value = value();\n\t    }\n\t\n\t    if (isEl(value) || isTextNode(value)) {\n\t      return value;\n\t    }\n\t\n\t    if (typeof value === 'string' && /\\S/.test(value)) {\n\t      return _document2['default'].createTextNode(value);\n\t    }\n\t  }).filter(function (value) {\n\t    return value;\n\t  });\n\t}\n\t\n\t/**\n\t * Normalizes and appends content to an element.\n\t *\n\t * @param {Element} el\n\t *        Element to append normalized content to.\n\t *\n\t *\n\t * @param {String|Element|TextNode|Array|Function} content\n\t *        See the `content` argument of {@link dom:normalizeContent}\n\t *\n\t * @return {Element}\n\t *         The element with appended normalized content.\n\t */\n\tfunction appendContent(el, content) {\n\t  normalizeContent(content).forEach(function (node) {\n\t    return el.appendChild(node);\n\t  });\n\t  return el;\n\t}\n\t\n\t/**\n\t * Normalizes and inserts content into an element; this is identical to\n\t * `appendContent()`, except it empties the element first.\n\t *\n\t * @param {Element} el\n\t *        Element to insert normalized content into.\n\t *\n\t * @param {String|Element|TextNode|Array|Function} content\n\t *        See the `content` argument of {@link dom:normalizeContent}\n\t *\n\t * @return {Element}\n\t *         The element with inserted normalized content.\n\t *\n\t */\n\tfunction insertContent(el, content) {\n\t  return appendContent(emptyEl(el), content);\n\t}\n\t\n\t/**\n\t * Finds a single DOM element matching `selector` within the optional\n\t * `context` of another DOM element (defaulting to `document`).\n\t *\n\t * @param {string} selector\n\t *        A valid CSS selector, which will be passed to `querySelector`.\n\t *\n\t * @param {Element|String} [context=document]\n\t *        A DOM element within which to query. Can also be a selector\n\t *        string in which case the first matching element will be used\n\t *        as context. If missing (or no element matches selector), falls\n\t *        back to `document`.\n\t *\n\t * @return {Element|null}\n\t *         The element that was found or null.\n\t */\n\tvar $ = exports.$ = createQuerier('querySelector');\n\t\n\t/**\n\t * Finds a all DOM elements matching `selector` within the optional\n\t * `context` of another DOM element (defaulting to `document`).\n\t *\n\t * @param {string} selector\n\t *           A valid CSS selector, which will be passed to `querySelectorAll`.\n\t *\n\t * @param {Element|String} [context=document]\n\t *           A DOM element within which to query. Can also be a selector\n\t *           string in which case the first matching element will be used\n\t *           as context. If missing (or no element matches selector), falls\n\t *           back to `document`.\n\t *\n\t * @return {NodeList}\n\t *         A element list of elements that were found. Will be empty if none were found.\n\t *\n\t */\n\tvar $$ = exports.$$ = createQuerier('querySelectorAll');\n\n\n/***/ },\n/* 9 */\n/***/ function(module, exports) {\n\n\t\"use strict\";\n\t\n\texports.__esModule = true;\n\texports.newGUID = newGUID;\n\t/**\n\t * @file guid.js\n\t * @module guid\n\t */\n\t\n\t/**\n\t * Unique ID for an element or function\n\t * @type {Number}\n\t */\n\tvar _guid = 1;\n\t\n\t/**\n\t * Get a unique auto-incrementing ID by number that has not been returned before.\n\t *\n\t * @return {number}\n\t *         A new unique ID.\n\t */\n\tfunction newGUID() {\n\t  return _guid++;\n\t}\n\n\n/***/ },\n/* 10 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\texports.__esModule = true;\n\texports.logByType = undefined;\n\t\n\tvar _window = __webpack_require__(4);\n\t\n\tvar _window2 = _interopRequireDefault(_window);\n\t\n\tvar _browser = __webpack_require__(11);\n\t\n\tvar _obj = __webpack_require__(12);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\t\n\tvar log = void 0;\n\t\n\t/**\n\t * Log messages to the console and history based on the type of message\n\t *\n\t * @param  {string} type\n\t *         The name of the console method to use.\n\t *\n\t * @param  {Array} args\n\t *         The arguments to be passed to the matching console method.\n\t *\n\t * @param  {boolean} [stringify]\n\t *         By default, only old IEs should get console argument stringification,\n\t *         but this is exposed as a parameter to facilitate testing.\n\t */\n\t/**\n\t * @file log.js\n\t * @module log\n\t */\n\tvar logByType = exports.logByType = function logByType(type, args) {\n\t  var stringify = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : !!_browser.IE_VERSION && _browser.IE_VERSION < 11;\n\t\n\t\n\t  if (type !== 'log') {\n\t\n\t    // add the type to the front of the message when it's not \"log\"\n\t    args.unshift(type.toUpperCase() + ':');\n\t  }\n\t\n\t  // add to history\n\t  log.history.push(args);\n\t\n\t  // add console prefix after adding to history\n\t  args.unshift('VIDEOJS:');\n\t\n\t  // If there's no console then don't try to output messages, but they will\n\t  // still be stored in `log.history`.\n\t  //\n\t  // Was setting these once outside of this function, but containing them\n\t  // in the function makes it easier to test cases where console doesn't exist\n\t  // when the module is executed.\n\t  var fn = _window2['default'].console && _window2['default'].console[type];\n\t\n\t  // Bail out if there's no console.\n\t  if (!fn) {\n\t    return;\n\t  }\n\t\n\t  // IEs previous to 11 log objects uselessly as \"[object Object]\"; so, JSONify\n\t  // objects and arrays for those less-capable browsers.\n\t  if (stringify) {\n\t    args = args.map(function (a) {\n\t      if ((0, _obj.isObject)(a) || Array.isArray(a)) {\n\t        try {\n\t          return JSON.stringify(a);\n\t        } catch (x) {\n\t          return String(a);\n\t        }\n\t      }\n\t\n\t      // Cast to string before joining, so we get null and undefined explicitly\n\t      // included in output (as we would in a modern console).\n\t      return String(a);\n\t    }).join(' ');\n\t  }\n\t\n\t  // Old IE versions do not allow .apply() for console methods (they are\n\t  // reported as objects rather than functions).\n\t  if (!fn.apply) {\n\t    fn(args);\n\t  } else {\n\t    fn[Array.isArray(args) ? 'apply' : 'call'](_window2['default'].console, args);\n\t  }\n\t};\n\t\n\t/**\n\t * Log plain debug messages\n\t *\n\t * @param {Mixed[]} args\n\t *        One or more messages or objects that should be logged.\n\t */\n\tlog = function log() {\n\t  for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n\t    args[_key] = arguments[_key];\n\t  }\n\t\n\t  logByType('log', args);\n\t};\n\t\n\t/**\n\t * Keep a history of log messages\n\t *\n\t * @type {Array}\n\t */\n\tlog.history = [];\n\t\n\t/**\n\t * Log error messages\n\t *\n\t * @param {Mixed[]} args\n\t *        One or more messages or objects that should be logged as an error\n\t */\n\tlog.error = function () {\n\t  for (var _len2 = arguments.length, args = Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n\t    args[_key2] = arguments[_key2];\n\t  }\n\t\n\t  return logByType('error', args);\n\t};\n\t\n\t/**\n\t * Log warning messages\n\t *\n\t * @param {Mixed[]} args\n\t *        One or more messages or objects that should be logged as a warning.\n\t */\n\tlog.warn = function () {\n\t  for (var _len3 = arguments.length, args = Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n\t    args[_key3] = arguments[_key3];\n\t  }\n\t\n\t  return logByType('warn', args);\n\t};\n\t\n\texports['default'] = log;\n\n\n/***/ },\n/* 11 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\texports.__esModule = true;\n\texports.BACKGROUND_SIZE_SUPPORTED = exports.TOUCH_ENABLED = exports.IS_ANY_SAFARI = exports.IS_SAFARI = exports.IE_VERSION = exports.IS_IE8 = exports.IS_CHROME = exports.IS_EDGE = exports.IS_FIREFOX = exports.IS_NATIVE_ANDROID = exports.IS_OLD_ANDROID = exports.ANDROID_VERSION = exports.IS_ANDROID = exports.IOS_VERSION = exports.IS_IOS = exports.IS_IPOD = exports.IS_IPHONE = exports.IS_IPAD = undefined;\n\t\n\tvar _dom = __webpack_require__(8);\n\t\n\tvar Dom = _interopRequireWildcard(_dom);\n\t\n\tvar _window = __webpack_require__(4);\n\t\n\tvar _window2 = _interopRequireDefault(_window);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\t\n\tfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj['default'] = obj; return newObj; } }\n\t\n\t/**\n\t * @file browser.js\n\t * @module browser\n\t */\n\tvar USER_AGENT = _window2['default'].navigator && _window2['default'].navigator.userAgent || '';\n\tvar webkitVersionMap = /AppleWebKit\\/([\\d.]+)/i.exec(USER_AGENT);\n\tvar appleWebkitVersion = webkitVersionMap ? parseFloat(webkitVersionMap.pop()) : null;\n\t\n\t/*\n\t * Device is an iPhone\n\t *\n\t * @type {Boolean}\n\t * @constant\n\t * @private\n\t */\n\tvar IS_IPAD = exports.IS_IPAD = /iPad/i.test(USER_AGENT);\n\t\n\t// The Facebook app's UIWebView identifies as both an iPhone and iPad, so\n\t// to identify iPhones, we need to exclude iPads.\n\t// http://artsy.github.io/blog/2012/10/18/the-perils-of-ios-user-agent-sniffing/\n\tvar IS_IPHONE = exports.IS_IPHONE = /iPhone/i.test(USER_AGENT) && !IS_IPAD;\n\tvar IS_IPOD = exports.IS_IPOD = /iPod/i.test(USER_AGENT);\n\tvar IS_IOS = exports.IS_IOS = IS_IPHONE || IS_IPAD || IS_IPOD;\n\t\n\tvar IOS_VERSION = exports.IOS_VERSION = function () {\n\t  var match = USER_AGENT.match(/OS (\\d+)_/i);\n\t\n\t  if (match && match[1]) {\n\t    return match[1];\n\t  }\n\t  return null;\n\t}();\n\t\n\tvar IS_ANDROID = exports.IS_ANDROID = /Android/i.test(USER_AGENT);\n\tvar ANDROID_VERSION = exports.ANDROID_VERSION = function () {\n\t  // This matches Android Major.Minor.Patch versions\n\t  // ANDROID_VERSION is Major.Minor as a Number, if Minor isn't available, then only Major is returned\n\t  var match = USER_AGENT.match(/Android (\\d+)(?:\\.(\\d+))?(?:\\.(\\d+))*/i);\n\t\n\t  if (!match) {\n\t    return null;\n\t  }\n\t\n\t  var major = match[1] && parseFloat(match[1]);\n\t  var minor = match[2] && parseFloat(match[2]);\n\t\n\t  if (major && minor) {\n\t    return parseFloat(match[1] + '.' + match[2]);\n\t  } else if (major) {\n\t    return major;\n\t  }\n\t  return null;\n\t}();\n\t\n\t// Old Android is defined as Version older than 2.3, and requiring a webkit version of the android browser\n\tvar IS_OLD_ANDROID = exports.IS_OLD_ANDROID = IS_ANDROID && /webkit/i.test(USER_AGENT) && ANDROID_VERSION < 2.3;\n\tvar IS_NATIVE_ANDROID = exports.IS_NATIVE_ANDROID = IS_ANDROID && ANDROID_VERSION < 5 && appleWebkitVersion < 537;\n\t\n\tvar IS_FIREFOX = exports.IS_FIREFOX = /Firefox/i.test(USER_AGENT);\n\tvar IS_EDGE = exports.IS_EDGE = /Edge/i.test(USER_AGENT);\n\tvar IS_CHROME = exports.IS_CHROME = !IS_EDGE && /Chrome/i.test(USER_AGENT);\n\tvar IS_IE8 = exports.IS_IE8 = /MSIE\\s8\\.0/.test(USER_AGENT);\n\tvar IE_VERSION = exports.IE_VERSION = function (result) {\n\t  return result && parseFloat(result[1]);\n\t}(/MSIE\\s(\\d+)\\.\\d/.exec(USER_AGENT));\n\t\n\tvar IS_SAFARI = exports.IS_SAFARI = /Safari/i.test(USER_AGENT) && !IS_CHROME && !IS_ANDROID && !IS_EDGE;\n\tvar IS_ANY_SAFARI = exports.IS_ANY_SAFARI = IS_SAFARI || IS_IOS;\n\t\n\tvar TOUCH_ENABLED = exports.TOUCH_ENABLED = Dom.isReal() && ('ontouchstart' in _window2['default'] || _window2['default'].DocumentTouch && _window2['default'].document instanceof _window2['default'].DocumentTouch);\n\t\n\tvar BACKGROUND_SIZE_SUPPORTED = exports.BACKGROUND_SIZE_SUPPORTED = Dom.isReal() && 'backgroundSize' in _window2['default'].document.createElement('video').style;\n\n\n/***/ },\n/* 12 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\texports.__esModule = true;\n\t\n\tvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\t\n\texports.each = each;\n\texports.reduce = reduce;\n\texports.assign = assign;\n\texports.isObject = isObject;\n\texports.isPlain = isPlain;\n\t/**\n\t * @file obj.js\n\t * @module obj\n\t */\n\t\n\t/**\n\t * @callback obj:EachCallback\n\t *\n\t * @param {Mixed} value\n\t *        The current key for the object that is being iterated over.\n\t *\n\t * @param {string} key\n\t *        The current key-value for object that is being iterated over\n\t */\n\t\n\t/**\n\t * @callback obj:ReduceCallback\n\t *\n\t * @param {Mixed} accum\n\t *        The value that is accumulating over the reduce loop.\n\t *\n\t * @param {Mixed} value\n\t *        The current key for the object that is being iterated over.\n\t *\n\t * @param {string} key\n\t *        The current key-value for object that is being iterated over\n\t *\n\t * @return {Mixed}\n\t *         The new accumulated value.\n\t */\n\tvar toString = Object.prototype.toString;\n\t\n\t/**\n\t * Array-like iteration for objects.\n\t *\n\t * @param {Object} object\n\t *        The object to iterate over\n\t *\n\t * @param {obj:EachCallback} fn\n\t *        The callback function which is called for each key in the object.\n\t */\n\tfunction each(object, fn) {\n\t  Object.keys(object).forEach(function (key) {\n\t    return fn(object[key], key);\n\t  });\n\t}\n\t\n\t/**\n\t * Array-like reduce for objects.\n\t *\n\t * @param {Object} object\n\t *        The Object that you want to reduce.\n\t *\n\t * @param {Function} fn\n\t *         A callback function which is called for each key in the object. It\n\t *         receives the accumulated value and the per-iteration value and key\n\t *         as arguments.\n\t *\n\t * @param {Mixed} [initial = 0]\n\t *        Starting value\n\t *\n\t * @return {Mixed}\n\t *         The final accumulated value.\n\t */\n\tfunction reduce(object, fn) {\n\t  var initial = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;\n\t\n\t  return Object.keys(object).reduce(function (accum, key) {\n\t    return fn(accum, object[key], key);\n\t  }, initial);\n\t}\n\t\n\t/**\n\t * Object.assign-style object shallow merge/extend.\n\t *\n\t * @param  {Object} target\n\t * @param  {Object} ...sources\n\t * @return {Object}\n\t */\n\tfunction assign(target) {\n\t  for (var _len = arguments.length, sources = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n\t    sources[_key - 1] = arguments[_key];\n\t  }\n\t\n\t  if (Object.assign) {\n\t    return Object.assign.apply(Object, [target].concat(sources));\n\t  }\n\t\n\t  sources.forEach(function (source) {\n\t    if (!source) {\n\t      return;\n\t    }\n\t\n\t    each(source, function (value, key) {\n\t      target[key] = value;\n\t    });\n\t  });\n\t\n\t  return target;\n\t}\n\t\n\t/**\n\t * Returns whether a value is an object of any kind - including DOM nodes,\n\t * arrays, regular expressions, etc. Not functions, though.\n\t *\n\t * This avoids the gotcha where using `typeof` on a `null` value\n\t * results in `'object'`.\n\t *\n\t * @param  {Object} value\n\t * @return {Boolean}\n\t */\n\tfunction isObject(value) {\n\t  return !!value && (typeof value === 'undefined' ? 'undefined' : _typeof(value)) === 'object';\n\t}\n\t\n\t/**\n\t * Returns whether an object appears to be a \"plain\" object - that is, a\n\t * direct instance of `Object`.\n\t *\n\t * @param  {Object} value\n\t * @return {Boolean}\n\t */\n\tfunction isPlain(value) {\n\t  return isObject(value) && toString.call(value) === '[object Object]' && value.constructor === Object;\n\t}\n\n\n/***/ },\n/* 13 */\n/***/ function(module, exports) {\n\n\tfunction clean (s) {\n\t  return s.replace(/\\n\\r?\\s*/g, '')\n\t}\n\t\n\t\n\tmodule.exports = function tsml (sa) {\n\t  var s = ''\n\t    , i = 0\n\t\n\t  for (; i < arguments.length; i++)\n\t    s += clean(sa[i]) + (arguments[i + 1] || '')\n\t\n\t  return s\n\t}\n\n/***/ },\n/* 14 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\texports.__esModule = true;\n\texports.fixEvent = fixEvent;\n\texports.on = on;\n\texports.off = off;\n\texports.trigger = trigger;\n\texports.one = one;\n\t\n\tvar _dom = __webpack_require__(8);\n\t\n\tvar Dom = _interopRequireWildcard(_dom);\n\t\n\tvar _guid = __webpack_require__(9);\n\t\n\tvar Guid = _interopRequireWildcard(_guid);\n\t\n\tvar _log = __webpack_require__(10);\n\t\n\tvar _log2 = _interopRequireDefault(_log);\n\t\n\tvar _window = __webpack_require__(4);\n\t\n\tvar _window2 = _interopRequireDefault(_window);\n\t\n\tvar _document = __webpack_require__(5);\n\t\n\tvar _document2 = _interopRequireDefault(_document);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\t\n\tfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj['default'] = obj; return newObj; } }\n\t\n\t/**\n\t * Clean up the listener cache and dispatchers\n\t *\n\t * @param {Element|Object} elem\n\t *        Element to clean up\n\t *\n\t * @param {string} type\n\t *        Type of event to clean up\n\t */\n\tfunction _cleanUpEvents(elem, type) {\n\t  var data = Dom.getElData(elem);\n\t\n\t  // Remove the events of a particular type if there are none left\n\t  if (data.handlers[type].length === 0) {\n\t    delete data.handlers[type];\n\t    // data.handlers[type] = null;\n\t    // Setting to null was causing an error with data.handlers\n\t\n\t    // Remove the meta-handler from the element\n\t    if (elem.removeEventListener) {\n\t      elem.removeEventListener(type, data.dispatcher, false);\n\t    } else if (elem.detachEvent) {\n\t      elem.detachEvent('on' + type, data.dispatcher);\n\t    }\n\t  }\n\t\n\t  // Remove the events object if there are no types left\n\t  if (Object.getOwnPropertyNames(data.handlers).length <= 0) {\n\t    delete data.handlers;\n\t    delete data.dispatcher;\n\t    delete data.disabled;\n\t  }\n\t\n\t  // Finally remove the element data if there is no data left\n\t  if (Object.getOwnPropertyNames(data).length === 0) {\n\t    Dom.removeElData(elem);\n\t  }\n\t}\n\t\n\t/**\n\t * Loops through an array of event types and calls the requested method for each type.\n\t *\n\t * @param {Function} fn\n\t *        The event method we want to use.\n\t *\n\t * @param {Element|Object} elem\n\t *        Element or object to bind listeners to\n\t *\n\t * @param {string} type\n\t *        Type of event to bind to.\n\t *\n\t * @param {EventTarget~EventListener} callback\n\t *        Event listener.\n\t */\n\t/**\n\t * @file events.js. An Event System (John Resig - Secrets of a JS Ninja http://jsninja.com/)\n\t * (Original book version wasn't completely usable, so fixed some things and made Closure Compiler compatible)\n\t * This should work very similarly to jQuery's events, however it's based off the book version which isn't as\n\t * robust as jquery's, so there's probably some differences.\n\t *\n\t * @module events\n\t */\n\t\n\tfunction _handleMultipleEvents(fn, elem, types, callback) {\n\t  types.forEach(function (type) {\n\t    // Call the event method for each one of the types\n\t    fn(elem, type, callback);\n\t  });\n\t}\n\t\n\t/**\n\t * Fix a native event to have standard property values\n\t *\n\t * @param {Object} event\n\t *        Event object to fix.\n\t *\n\t * @return {Object}\n\t *         Fixed event object.\n\t */\n\tfunction fixEvent(event) {\n\t\n\t  function returnTrue() {\n\t    return true;\n\t  }\n\t\n\t  function returnFalse() {\n\t    return false;\n\t  }\n\t\n\t  // Test if fixing up is needed\n\t  // Used to check if !event.stopPropagation instead of isPropagationStopped\n\t  // But native events return true for stopPropagation, but don't have\n\t  // other expected methods like isPropagationStopped. Seems to be a problem\n\t  // with the Javascript Ninja code. So we're just overriding all events now.\n\t  if (!event || !event.isPropagationStopped) {\n\t    (function () {\n\t      var old = event || _window2['default'].event;\n\t\n\t      event = {};\n\t      // Clone the old object so that we can modify the values event = {};\n\t      // IE8 Doesn't like when you mess with native event properties\n\t      // Firefox returns false for event.hasOwnProperty('type') and other props\n\t      //  which makes copying more difficult.\n\t      // TODO: Probably best to create a whitelist of event props\n\t      for (var key in old) {\n\t        // Safari 6.0.3 warns you if you try to copy deprecated layerX/Y\n\t        // Chrome warns you if you try to copy deprecated keyboardEvent.keyLocation\n\t        // and webkitMovementX/Y\n\t        if (key !== 'layerX' && key !== 'layerY' && key !== 'keyLocation' && key !== 'webkitMovementX' && key !== 'webkitMovementY') {\n\t          // Chrome 32+ warns if you try to copy deprecated returnValue, but\n\t          // we still want to if preventDefault isn't supported (IE8).\n\t          if (!(key === 'returnValue' && old.preventDefault)) {\n\t            event[key] = old[key];\n\t          }\n\t        }\n\t      }\n\t\n\t      // The event occurred on this element\n\t      if (!event.target) {\n\t        event.target = event.srcElement || _document2['default'];\n\t      }\n\t\n\t      // Handle which other element the event is related to\n\t      if (!event.relatedTarget) {\n\t        event.relatedTarget = event.fromElement === event.target ? event.toElement : event.fromElement;\n\t      }\n\t\n\t      // Stop the default browser action\n\t      event.preventDefault = function () {\n\t        if (old.preventDefault) {\n\t          old.preventDefault();\n\t        }\n\t        event.returnValue = false;\n\t        old.returnValue = false;\n\t        event.defaultPrevented = true;\n\t      };\n\t\n\t      event.defaultPrevented = false;\n\t\n\t      // Stop the event from bubbling\n\t      event.stopPropagation = function () {\n\t        if (old.stopPropagation) {\n\t          old.stopPropagation();\n\t        }\n\t        event.cancelBubble = true;\n\t        old.cancelBubble = true;\n\t        event.isPropagationStopped = returnTrue;\n\t      };\n\t\n\t      event.isPropagationStopped = returnFalse;\n\t\n\t      // Stop the event from bubbling and executing other handlers\n\t      event.stopImmediatePropagation = function () {\n\t        if (old.stopImmediatePropagation) {\n\t          old.stopImmediatePropagation();\n\t        }\n\t        event.isImmediatePropagationStopped = returnTrue;\n\t        event.stopPropagation();\n\t      };\n\t\n\t      event.isImmediatePropagationStopped = returnFalse;\n\t\n\t      // Handle mouse position\n\t      if (event.clientX !== null && event.clientX !== undefined) {\n\t        var doc = _document2['default'].documentElement;\n\t        var body = _document2['default'].body;\n\t\n\t        event.pageX = event.clientX + (doc && doc.scrollLeft || body && body.scrollLeft || 0) - (doc && doc.clientLeft || body && body.clientLeft || 0);\n\t        event.pageY = event.clientY + (doc && doc.scrollTop || body && body.scrollTop || 0) - (doc && doc.clientTop || body && body.clientTop || 0);\n\t      }\n\t\n\t      // Handle key presses\n\t      event.which = event.charCode || event.keyCode;\n\t\n\t      // Fix button for mouse clicks:\n\t      // 0 == left; 1 == middle; 2 == right\n\t      if (event.button !== null && event.button !== undefined) {\n\t\n\t        // The following is disabled because it does not pass videojs-standard\n\t        // and... yikes.\n\t        /* eslint-disable */\n\t        event.button = event.button & 1 ? 0 : event.button & 4 ? 1 : event.button & 2 ? 2 : 0;\n\t        /* eslint-enable */\n\t      }\n\t    })();\n\t  }\n\t\n\t  // Returns fixed-up instance\n\t  return event;\n\t}\n\t\n\t/**\n\t * Add an event listener to element\n\t * It stores the handler function in a separate cache object\n\t * and adds a generic handler to the element's event,\n\t * along with a unique id (guid) to the element.\n\t *\n\t * @param {Element|Object} elem\n\t *        Element or object to bind listeners to\n\t *\n\t * @param {string|string[]} type\n\t *        Type of event to bind to.\n\t *\n\t * @param {EventTarget~EventListener} fn\n\t *        Event listener.\n\t */\n\tfunction on(elem, type, fn) {\n\t  if (Array.isArray(type)) {\n\t    return _handleMultipleEvents(on, elem, type, fn);\n\t  }\n\t\n\t  var data = Dom.getElData(elem);\n\t\n\t  // We need a place to store all our handler data\n\t  if (!data.handlers) {\n\t    data.handlers = {};\n\t  }\n\t\n\t  if (!data.handlers[type]) {\n\t    data.handlers[type] = [];\n\t  }\n\t\n\t  if (!fn.guid) {\n\t    fn.guid = Guid.newGUID();\n\t  }\n\t\n\t  data.handlers[type].push(fn);\n\t\n\t  if (!data.dispatcher) {\n\t    data.disabled = false;\n\t\n\t    data.dispatcher = function (event, hash) {\n\t\n\t      if (data.disabled) {\n\t        return;\n\t      }\n\t\n\t      event = fixEvent(event);\n\t\n\t      var handlers = data.handlers[event.type];\n\t\n\t      if (handlers) {\n\t        // Copy handlers so if handlers are added/removed during the process it doesn't throw everything off.\n\t        var handlersCopy = handlers.slice(0);\n\t\n\t        for (var m = 0, n = handlersCopy.length; m < n; m++) {\n\t          if (event.isImmediatePropagationStopped()) {\n\t            break;\n\t          } else {\n\t            try {\n\t              handlersCopy[m].call(elem, event, hash);\n\t            } catch (e) {\n\t              _log2['default'].error(e);\n\t            }\n\t          }\n\t        }\n\t      }\n\t    };\n\t  }\n\t\n\t  if (data.handlers[type].length === 1) {\n\t    if (elem.addEventListener) {\n\t      elem.addEventListener(type, data.dispatcher, false);\n\t    } else if (elem.attachEvent) {\n\t      elem.attachEvent('on' + type, data.dispatcher);\n\t    }\n\t  }\n\t}\n\t\n\t/**\n\t * Removes event listeners from an element\n\t *\n\t * @param {Element|Object} elem\n\t *        Object to remove listeners from.\n\t *\n\t * @param {string|string[]} [type]\n\t *        Type of listener to remove. Don't include to remove all events from element.\n\t *\n\t * @param {EventTarget~EventListener} [fn]\n\t *        Specific listener to remove. Don't include to remove listeners for an event\n\t *        type.\n\t */\n\tfunction off(elem, type, fn) {\n\t  // Don't want to add a cache object through getElData if not needed\n\t  if (!Dom.hasElData(elem)) {\n\t    return;\n\t  }\n\t\n\t  var data = Dom.getElData(elem);\n\t\n\t  // If no events exist, nothing to unbind\n\t  if (!data.handlers) {\n\t    return;\n\t  }\n\t\n\t  if (Array.isArray(type)) {\n\t    return _handleMultipleEvents(off, elem, type, fn);\n\t  }\n\t\n\t  // Utility function\n\t  var removeType = function removeType(t) {\n\t    data.handlers[t] = [];\n\t    _cleanUpEvents(elem, t);\n\t  };\n\t\n\t  // Are we removing all bound events?\n\t  if (!type) {\n\t    for (var t in data.handlers) {\n\t      removeType(t);\n\t    }\n\t    return;\n\t  }\n\t\n\t  var handlers = data.handlers[type];\n\t\n\t  // If no handlers exist, nothing to unbind\n\t  if (!handlers) {\n\t    return;\n\t  }\n\t\n\t  // If no listener was provided, remove all listeners for type\n\t  if (!fn) {\n\t    removeType(type);\n\t    return;\n\t  }\n\t\n\t  // We're only removing a single handler\n\t  if (fn.guid) {\n\t    for (var n = 0; n < handlers.length; n++) {\n\t      if (handlers[n].guid === fn.guid) {\n\t        handlers.splice(n--, 1);\n\t      }\n\t    }\n\t  }\n\t\n\t  _cleanUpEvents(elem, type);\n\t}\n\t\n\t/**\n\t * Trigger an event for an element\n\t *\n\t * @param {Element|Object} elem\n\t *        Element to trigger an event on\n\t *\n\t * @param {EventTarget~Event|string} event\n\t *        A string (the type) or an event object with a type attribute\n\t *\n\t * @param {Object} [hash]\n\t *        data hash to pass along with the event\n\t *\n\t * @return {boolean|undefined}\n\t *         - Returns the opposite of `defaultPrevented` if default was prevented\n\t *         - Otherwise returns undefined\n\t */\n\tfunction trigger(elem, event, hash) {\n\t  // Fetches element data and a reference to the parent (for bubbling).\n\t  // Don't want to add a data object to cache for every parent,\n\t  // so checking hasElData first.\n\t  var elemData = Dom.hasElData(elem) ? Dom.getElData(elem) : {};\n\t  var parent = elem.parentNode || elem.ownerDocument;\n\t  // type = event.type || event,\n\t  // handler;\n\t\n\t  // If an event name was passed as a string, creates an event out of it\n\t  if (typeof event === 'string') {\n\t    event = { type: event, target: elem };\n\t  }\n\t  // Normalizes the event properties.\n\t  event = fixEvent(event);\n\t\n\t  // If the passed element has a dispatcher, executes the established handlers.\n\t  if (elemData.dispatcher) {\n\t    elemData.dispatcher.call(elem, event, hash);\n\t  }\n\t\n\t  // Unless explicitly stopped or the event does not bubble (e.g. media events)\n\t  // recursively calls this function to bubble the event up the DOM.\n\t  if (parent && !event.isPropagationStopped() && event.bubbles === true) {\n\t    trigger.call(null, parent, event, hash);\n\t\n\t    // If at the top of the DOM, triggers the default action unless disabled.\n\t  } else if (!parent && !event.defaultPrevented) {\n\t    var targetData = Dom.getElData(event.target);\n\t\n\t    // Checks if the target has a default action for this event.\n\t    if (event.target[event.type]) {\n\t      // Temporarily disables event dispatching on the target as we have already executed the handler.\n\t      targetData.disabled = true;\n\t      // Executes the default action.\n\t      if (typeof event.target[event.type] === 'function') {\n\t        event.target[event.type]();\n\t      }\n\t      // Re-enables event dispatching.\n\t      targetData.disabled = false;\n\t    }\n\t  }\n\t\n\t  // Inform the triggerer if the default was prevented by returning false\n\t  return !event.defaultPrevented;\n\t}\n\t\n\t/**\n\t * Trigger a listener only once for an event\n\t *\n\t * @param {Element|Object} elem\n\t *        Element or object to bind to.\n\t *\n\t * @param {string|string[]} type\n\t *        Name/type of event\n\t *\n\t * @param {Event~EventListener} fn\n\t *        Event Listener function\n\t */\n\tfunction one(elem, type, fn) {\n\t  if (Array.isArray(type)) {\n\t    return _handleMultipleEvents(one, elem, type, fn);\n\t  }\n\t  var func = function func() {\n\t    off(elem, type, func);\n\t    fn.apply(this, arguments);\n\t  };\n\t\n\t  // copy the guid to the new function so it can removed using the original function's ID\n\t  func.guid = fn.guid = fn.guid || Guid.newGUID();\n\t  on(elem, type, func);\n\t}\n\n\n/***/ },\n/* 15 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\texports.__esModule = true;\n\texports.setTextContent = exports.createStyleElement = undefined;\n\t\n\tvar _document = __webpack_require__(5);\n\t\n\tvar _document2 = _interopRequireDefault(_document);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\t\n\t/**\n\t * Create a DOM syle element given a className for it.\n\t *\n\t * @param {string} className\n\t *        The className to add to the created style element.\n\t *\n\t * @return {Element}\n\t *         The element that was created.\n\t */\n\tvar createStyleElement = exports.createStyleElement = function createStyleElement(className) {\n\t  var style = _document2['default'].createElement('style');\n\t\n\t  style.className = className;\n\t\n\t  return style;\n\t};\n\t\n\t/**\n\t * Add text to a DOM element.\n\t *\n\t * @param {Element} el\n\t *        The Element to add text content to.\n\t *\n\t * @param {string} content\n\t *        The text to add to the element.\n\t */\n\t/**\n\t * @file stylesheet.js\n\t * @module stylesheet\n\t */\n\tvar setTextContent = exports.setTextContent = function setTextContent(el, content) {\n\t  if (el.styleSheet) {\n\t    el.styleSheet.cssText = content;\n\t  } else {\n\t    el.textContent = content;\n\t  }\n\t};\n\n\n/***/ },\n/* 16 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\texports.__esModule = true;\n\t\n\tvar _window = __webpack_require__(4);\n\t\n\tvar _window2 = _interopRequireDefault(_window);\n\t\n\tvar _dom = __webpack_require__(8);\n\t\n\tvar Dom = _interopRequireWildcard(_dom);\n\t\n\tvar _fn = __webpack_require__(17);\n\t\n\tvar Fn = _interopRequireWildcard(_fn);\n\t\n\tvar _guid = __webpack_require__(9);\n\t\n\tvar Guid = _interopRequireWildcard(_guid);\n\t\n\tvar _events = __webpack_require__(14);\n\t\n\tvar Events = _interopRequireWildcard(_events);\n\t\n\tvar _log = __webpack_require__(10);\n\t\n\tvar _log2 = _interopRequireDefault(_log);\n\t\n\tvar _toTitleCase = __webpack_require__(18);\n\t\n\tvar _toTitleCase2 = _interopRequireDefault(_toTitleCase);\n\t\n\tvar _mergeOptions = __webpack_require__(19);\n\t\n\tvar _mergeOptions2 = _interopRequireDefault(_mergeOptions);\n\t\n\tfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj['default'] = obj; return newObj; } }\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } } /**\n\t                                                                                                                                                           * Player Component - Base class for all UI objects\n\t                                                                                                                                                           *\n\t                                                                                                                                                           * @file component.js\n\t                                                                                                                                                           */\n\t\n\t\n\t/**\n\t * Base class for all UI Components.\n\t * Components are UI objects which represent both a javascript object and an element\n\t * in the DOM. They can be children of other components, and can have\n\t * children themselves.\n\t *\n\t * Components can also use methods from {@link EventTarget}\n\t */\n\tvar Component = function () {\n\t\n\t  /**\n\t   * A callback that is called when a component is ready. Does not have any\n\t   * paramters and any callback value will be ignored.\n\t   *\n\t   * @callback Component~ReadyCallback\n\t   * @this Component\n\t   */\n\t\n\t  /**\n\t   * Creates an instance of this class.\n\t   *\n\t   * @param {Player} player\n\t   *        The `Player` that this class should be attached to.\n\t   *\n\t   * @param {Object} [options]\n\t   *        The key/value store of player options.\n\t   #\n\t   * @param {Object[]} [options.children]\n\t   *        An array of children objects to intialize this component with. Children objects have\n\t   *        a name property that will be used if more than one component of the same type needs to be\n\t   *        added.\n\t   *\n\t   * @param {Component~ReadyCallback} [ready]\n\t   *        Function that gets called when the `Component` is ready.\n\t   */\n\t  function Component(player, options, ready) {\n\t    _classCallCheck(this, Component);\n\t\n\t    // The component might be the player itself and we can't pass `this` to super\n\t    if (!player && this.play) {\n\t      this.player_ = player = this; // eslint-disable-line\n\t    } else {\n\t      this.player_ = player;\n\t    }\n\t\n\t    // Make a copy of prototype.options_ to protect against overriding defaults\n\t    this.options_ = (0, _mergeOptions2['default'])({}, this.options_);\n\t\n\t    // Updated options with supplied options\n\t    options = this.options_ = (0, _mergeOptions2['default'])(this.options_, options);\n\t\n\t    // Get ID from options or options element if one is supplied\n\t    this.id_ = options.id || options.el && options.el.id;\n\t\n\t    // If there was no ID from the options, generate one\n\t    if (!this.id_) {\n\t      // Don't require the player ID function in the case of mock players\n\t      var id = player && player.id && player.id() || 'no_player';\n\t\n\t      this.id_ = id + '_component_' + Guid.newGUID();\n\t    }\n\t\n\t    this.name_ = options.name || null;\n\t\n\t    // Create element if one wasn't provided in options\n\t    if (options.el) {\n\t      this.el_ = options.el;\n\t    } else if (options.createEl !== false) {\n\t      this.el_ = this.createEl();\n\t    }\n\t\n\t    this.children_ = [];\n\t    this.childIndex_ = {};\n\t    this.childNameIndex_ = {};\n\t\n\t    // Add any child components in options\n\t    if (options.initChildren !== false) {\n\t      this.initChildren();\n\t    }\n\t\n\t    this.ready(ready);\n\t    // Don't want to trigger ready here or it will before init is actually\n\t    // finished for all children that run this constructor\n\t\n\t    if (options.reportTouchActivity !== false) {\n\t      this.enableTouchActivity();\n\t    }\n\t  }\n\t\n\t  /**\n\t   * Dispose of the `Component` and all child components.\n\t   *\n\t   * @fires Component#dispose\n\t   */\n\t\n\t\n\t  Component.prototype.dispose = function dispose() {\n\t\n\t    /**\n\t     * Triggered when a `Component` is disposed.\n\t     *\n\t     * @event Component#dispose\n\t     * @type {EventTarget~Event}\n\t     *\n\t     * @property {boolean} [bubbles=false]\n\t     *           set to false so that the close event does not\n\t     *           bubble up\n\t     */\n\t    this.trigger({ type: 'dispose', bubbles: false });\n\t\n\t    // Dispose all children.\n\t    if (this.children_) {\n\t      for (var i = this.children_.length - 1; i >= 0; i--) {\n\t        if (this.children_[i].dispose) {\n\t          this.children_[i].dispose();\n\t        }\n\t      }\n\t    }\n\t\n\t    // Delete child references\n\t    this.children_ = null;\n\t    this.childIndex_ = null;\n\t    this.childNameIndex_ = null;\n\t\n\t    // Remove all event listeners.\n\t    this.off();\n\t\n\t    // Remove element from DOM\n\t    if (this.el_.parentNode) {\n\t      this.el_.parentNode.removeChild(this.el_);\n\t    }\n\t\n\t    Dom.removeElData(this.el_);\n\t    this.el_ = null;\n\t  };\n\t\n\t  /**\n\t   * Return the {@link Player} that the `Component` has attached to.\n\t   *\n\t   * @return {Player}\n\t   *         The player that this `Component` has attached to.\n\t   */\n\t\n\t\n\t  Component.prototype.player = function player() {\n\t    return this.player_;\n\t  };\n\t\n\t  /**\n\t   * Deep merge of options objects with new options.\n\t   * > Note: When both `obj` and `options` contain properties whose values are objects.\n\t   *         The two properties get merged using {@link module:mergeOptions}\n\t   *\n\t   * @param {Object} obj\n\t   *        The object that contains new options.\n\t   *\n\t   * @return {Object}\n\t   *         A new object of `this.options_` and `obj` merged together.\n\t   *\n\t   * @deprecated since version 5\n\t   */\n\t\n\t\n\t  Component.prototype.options = function options(obj) {\n\t    _log2['default'].warn('this.options() has been deprecated and will be moved to the constructor in 6.0');\n\t\n\t    if (!obj) {\n\t      return this.options_;\n\t    }\n\t\n\t    this.options_ = (0, _mergeOptions2['default'])(this.options_, obj);\n\t    return this.options_;\n\t  };\n\t\n\t  /**\n\t   * Get the `Component`s DOM element\n\t   *\n\t   * @return {Element}\n\t   *         The DOM element for this `Component`.\n\t   */\n\t\n\t\n\t  Component.prototype.el = function el() {\n\t    return this.el_;\n\t  };\n\t\n\t  /**\n\t   * Create the `Component`s DOM element.\n\t   *\n\t   * @param {string} [tagName]\n\t   *        Element's DOM node type. e.g. 'div'\n\t   *\n\t   * @param {Object} [properties]\n\t   *        An object of properties that should be set.\n\t   *\n\t   * @param {Object} [attributes]\n\t   *        An object of attributes that should be set.\n\t   *\n\t   * @return {Element}\n\t   *         The element that gets created.\n\t   */\n\t\n\t\n\t  Component.prototype.createEl = function createEl(tagName, properties, attributes) {\n\t    return Dom.createEl(tagName, properties, attributes);\n\t  };\n\t\n\t  /**\n\t   * Localize a string given the string in english.\n\t   *\n\t   * @param {string} string\n\t   *        The string to localize.\n\t   *\n\t   * @return {string}\n\t   *         The localized string or if no localization exists the english string.\n\t   */\n\t\n\t\n\t  Component.prototype.localize = function localize(string) {\n\t    var code = this.player_.language && this.player_.language();\n\t    var languages = this.player_.languages && this.player_.languages();\n\t\n\t    if (!code || !languages) {\n\t      return string;\n\t    }\n\t\n\t    var language = languages[code];\n\t\n\t    if (language && language[string]) {\n\t      return language[string];\n\t    }\n\t\n\t    var primaryCode = code.split('-')[0];\n\t    var primaryLang = languages[primaryCode];\n\t\n\t    if (primaryLang && primaryLang[string]) {\n\t      return primaryLang[string];\n\t    }\n\t\n\t    return string;\n\t  };\n\t\n\t  /**\n\t   * Return the `Component`s DOM element. This is where children get inserted.\n\t   * This will usually be the the same as the element returned in {@link Component#el}.\n\t   *\n\t   * @return {Element}\n\t   *         The content element for this `Component`.\n\t   */\n\t\n\t\n\t  Component.prototype.contentEl = function contentEl() {\n\t    return this.contentEl_ || this.el_;\n\t  };\n\t\n\t  /**\n\t   * Get this `Component`s ID\n\t   *\n\t   * @return {string}\n\t   *         The id of this `Component`\n\t   */\n\t\n\t\n\t  Component.prototype.id = function id() {\n\t    return this.id_;\n\t  };\n\t\n\t  /**\n\t   * Get the `Component`s name. The name gets used to reference the `Component`\n\t   * and is set during registration.\n\t   *\n\t   * @return {string}\n\t   *         The name of this `Component`.\n\t   */\n\t\n\t\n\t  Component.prototype.name = function name() {\n\t    return this.name_;\n\t  };\n\t\n\t  /**\n\t   * Get an array of all child components\n\t   *\n\t   * @return {Array}\n\t   *         The children\n\t   */\n\t\n\t\n\t  Component.prototype.children = function children() {\n\t    return this.children_;\n\t  };\n\t\n\t  /**\n\t   * Returns the child `Component` with the given `id`.\n\t   *\n\t   * @param {string} id\n\t   *        The id of the child `Component` to get.\n\t   *\n\t   * @return {Component|undefined}\n\t   *         The child `Component` with the given `id` or undefined.\n\t   */\n\t\n\t\n\t  Component.prototype.getChildById = function getChildById(id) {\n\t    return this.childIndex_[id];\n\t  };\n\t\n\t  /**\n\t   * Returns the child `Component` with the given `name`.\n\t   *\n\t   * @param {string} name\n\t   *        The name of the child `Component` to get.\n\t   *\n\t   * @return {Component|undefined}\n\t   *         The child `Component` with the given `name` or undefined.\n\t   */\n\t\n\t\n\t  Component.prototype.getChild = function getChild(name) {\n\t    if (!name) {\n\t      return;\n\t    }\n\t\n\t    name = (0, _toTitleCase2['default'])(name);\n\t\n\t    return this.childNameIndex_[name];\n\t  };\n\t\n\t  /**\n\t   * Add a child `Component` inside the current `Component`.\n\t   *\n\t   *\n\t   * @param {string|Component} child\n\t   *        The name or instance of a child to add.\n\t   *\n\t   * @param {Object} [options={}]\n\t   *        The key/value store of options that will get passed to children of\n\t   *        the child.\n\t   *\n\t   * @param {number} [index=this.children_.length]\n\t   *        The index to attempt to add a child into.\n\t   *\n\t   * @return {Component}\n\t   *         The `Component` that gets added as a child. When using a string the\n\t   *         `Component` will get created by this process.\n\t   */\n\t\n\t\n\t  Component.prototype.addChild = function addChild(child) {\n\t    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\t    var index = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : this.children_.length;\n\t\n\t    var component = void 0;\n\t    var componentName = void 0;\n\t\n\t    // If child is a string, create component with options\n\t    if (typeof child === 'string') {\n\t      componentName = (0, _toTitleCase2['default'])(child);\n\t\n\t      // Options can also be specified as a boolean,\n\t      // so convert to an empty object if false.\n\t      if (!options) {\n\t        options = {};\n\t      }\n\t\n\t      // Same as above, but true is deprecated so show a warning.\n\t      if (options === true) {\n\t        _log2['default'].warn('Initializing a child component with `true` is deprecated.' + 'Children should be defined in an array when possible, ' + 'but if necessary use an object instead of `true`.');\n\t        options = {};\n\t      }\n\t\n\t      var componentClassName = options.componentClass || componentName;\n\t\n\t      // Set name through options\n\t      options.name = componentName;\n\t\n\t      // Create a new object & element for this controls set\n\t      // If there's no .player_, this is a player\n\t      var ComponentClass = Component.getComponent(componentClassName);\n\t\n\t      if (!ComponentClass) {\n\t        throw new Error('Component ' + componentClassName + ' does not exist');\n\t      }\n\t\n\t      // data stored directly on the videojs object may be\n\t      // misidentified as a component to retain\n\t      // backwards-compatibility with 4.x. check to make sure the\n\t      // component class can be instantiated.\n\t      if (typeof ComponentClass !== 'function') {\n\t        return null;\n\t      }\n\t\n\t      component = new ComponentClass(this.player_ || this, options);\n\t\n\t      // child is a component instance\n\t    } else {\n\t      component = child;\n\t    }\n\t\n\t    this.children_.splice(index, 0, component);\n\t\n\t    if (typeof component.id === 'function') {\n\t      this.childIndex_[component.id()] = component;\n\t    }\n\t\n\t    // If a name wasn't used to create the component, check if we can use the\n\t    // name function of the component\n\t    componentName = componentName || component.name && component.name();\n\t\n\t    if (componentName) {\n\t      this.childNameIndex_[componentName] = component;\n\t    }\n\t\n\t    // Add the UI object's element to the container div (box)\n\t    // Having an element is not required\n\t    if (typeof component.el === 'function' && component.el()) {\n\t      var childNodes = this.contentEl().children;\n\t      var refNode = childNodes[index] || null;\n\t\n\t      this.contentEl().insertBefore(component.el(), refNode);\n\t    }\n\t\n\t    // Return so it can stored on parent object if desired.\n\t    return component;\n\t  };\n\t\n\t  /**\n\t   * Remove a child `Component` from this `Component`s list of children. Also removes\n\t   * the child `Component`s element from this `Component`s element.\n\t   *\n\t   * @param {Component} component\n\t   *        The child `Component` to remove.\n\t   */\n\t\n\t\n\t  Component.prototype.removeChild = function removeChild(component) {\n\t    if (typeof component === 'string') {\n\t      component = this.getChild(component);\n\t    }\n\t\n\t    if (!component || !this.children_) {\n\t      return;\n\t    }\n\t\n\t    var childFound = false;\n\t\n\t    for (var i = this.children_.length - 1; i >= 0; i--) {\n\t      if (this.children_[i] === component) {\n\t        childFound = true;\n\t        this.children_.splice(i, 1);\n\t        break;\n\t      }\n\t    }\n\t\n\t    if (!childFound) {\n\t      return;\n\t    }\n\t\n\t    this.childIndex_[component.id()] = null;\n\t    this.childNameIndex_[component.name()] = null;\n\t\n\t    var compEl = component.el();\n\t\n\t    if (compEl && compEl.parentNode === this.contentEl()) {\n\t      this.contentEl().removeChild(component.el());\n\t    }\n\t  };\n\t\n\t  /**\n\t   * Add and initialize default child `Component`s based upon options.\n\t   */\n\t\n\t\n\t  Component.prototype.initChildren = function initChildren() {\n\t    var _this = this;\n\t\n\t    var children = this.options_.children;\n\t\n\t    if (children) {\n\t      (function () {\n\t        // `this` is `parent`\n\t        var parentOptions = _this.options_;\n\t\n\t        var handleAdd = function handleAdd(child) {\n\t          var name = child.name;\n\t          var opts = child.opts;\n\t\n\t          // Allow options for children to be set at the parent options\n\t          // e.g. videojs(id, { controlBar: false });\n\t          // instead of videojs(id, { children: { controlBar: false });\n\t          if (parentOptions[name] !== undefined) {\n\t            opts = parentOptions[name];\n\t          }\n\t\n\t          // Allow for disabling default components\n\t          // e.g. options['children']['posterImage'] = false\n\t          if (opts === false) {\n\t            return;\n\t          }\n\t\n\t          // Allow options to be passed as a simple boolean if no configuration\n\t          // is necessary.\n\t          if (opts === true) {\n\t            opts = {};\n\t          }\n\t\n\t          // We also want to pass the original player options\n\t          // to each component as well so they don't need to\n\t          // reach back into the player for options later.\n\t          opts.playerOptions = _this.options_.playerOptions;\n\t\n\t          // Create and add the child component.\n\t          // Add a direct reference to the child by name on the parent instance.\n\t          // If two of the same component are used, different names should be supplied\n\t          // for each\n\t          var newChild = _this.addChild(name, opts);\n\t\n\t          if (newChild) {\n\t            _this[name] = newChild;\n\t          }\n\t        };\n\t\n\t        // Allow for an array of children details to passed in the options\n\t        var workingChildren = void 0;\n\t        var Tech = Component.getComponent('Tech');\n\t\n\t        if (Array.isArray(children)) {\n\t          workingChildren = children;\n\t        } else {\n\t          workingChildren = Object.keys(children);\n\t        }\n\t\n\t        workingChildren\n\t        // children that are in this.options_ but also in workingChildren  would\n\t        // give us extra children we do not want. So, we want to filter them out.\n\t        .concat(Object.keys(_this.options_).filter(function (child) {\n\t          return !workingChildren.some(function (wchild) {\n\t            if (typeof wchild === 'string') {\n\t              return child === wchild;\n\t            }\n\t            return child === wchild.name;\n\t          });\n\t        })).map(function (child) {\n\t          var name = void 0;\n\t          var opts = void 0;\n\t\n\t          if (typeof child === 'string') {\n\t            name = child;\n\t            opts = children[name] || _this.options_[name] || {};\n\t          } else {\n\t            name = child.name;\n\t            opts = child;\n\t          }\n\t\n\t          return { name: name, opts: opts };\n\t        }).filter(function (child) {\n\t          // we have to make sure that child.name isn't in the techOrder since\n\t          // techs are registerd as Components but can't aren't compatible\n\t          // See https://github.com/videojs/video.js/issues/2772\n\t          var c = Component.getComponent(child.opts.componentClass || (0, _toTitleCase2['default'])(child.name));\n\t\n\t          return c && !Tech.isTech(c);\n\t        }).forEach(handleAdd);\n\t      })();\n\t    }\n\t  };\n\t\n\t  /**\n\t   * Builds the default DOM class name. Should be overriden by sub-components.\n\t   *\n\t   * @return {string}\n\t   *         The DOM class name for this object.\n\t   *\n\t   * @abstract\n\t   */\n\t\n\t\n\t  Component.prototype.buildCSSClass = function buildCSSClass() {\n\t    // Child classes can include a function that does:\n\t    // return 'CLASS NAME' + this._super();\n\t    return '';\n\t  };\n\t\n\t  /**\n\t   * Add an `event listener` to this `Component`s element.\n\t   *\n\t   * The benefit of using this over the following:\n\t   * - `VjsEvents.on(otherElement, 'eventName', myFunc)`\n\t   * - `otherComponent.on('eventName', myFunc)`\n\t   *\n\t   * 1. Is that the listeners will get cleaned up when either component gets disposed.\n\t   * 1. It will also bind `myComponent` as the context of `myFunc`.\n\t   * > NOTE: If you remove the element from the DOM that has used `on` you need to\n\t   *         clean up references using: `myComponent.trigger(el, 'dispose')`\n\t   *         This will also allow the browser to garbage collect it. In special\n\t   *         cases such as with `window` and `document`, which are both permanent,\n\t   *         this is not necessary.\n\t   *\n\t   * @param {string|Component|string[]} [first]\n\t   *        The event name, and array of event names, or another `Component`.\n\t   *\n\t   * @param {EventTarget~EventListener|string|string[]} [second]\n\t   *        The listener function, an event name, or an Array of events names.\n\t   *\n\t   * @param {EventTarget~EventListener} [third]\n\t   *        The event handler if `first` is a `Component` and `second` is an event name\n\t   *        or an Array of event names.\n\t   *\n\t   * @return {Component}\n\t   *         Returns itself; method can be chained.\n\t   *\n\t   * @listens Component#dispose\n\t   */\n\t\n\t\n\t  Component.prototype.on = function on(first, second, third) {\n\t    var _this2 = this;\n\t\n\t    if (typeof first === 'string' || Array.isArray(first)) {\n\t      Events.on(this.el_, first, Fn.bind(this, second));\n\t\n\t      // Targeting another component or element\n\t    } else {\n\t      (function () {\n\t        var target = first;\n\t        var type = second;\n\t        var fn = Fn.bind(_this2, third);\n\t\n\t        // When this component is disposed, remove the listener from the other component\n\t        var removeOnDispose = function removeOnDispose() {\n\t          return _this2.off(target, type, fn);\n\t        };\n\t\n\t        // Use the same function ID so we can remove it later it using the ID\n\t        // of the original listener\n\t        removeOnDispose.guid = fn.guid;\n\t        _this2.on('dispose', removeOnDispose);\n\t\n\t        // If the other component is disposed first we need to clean the reference\n\t        // to the other component in this component's removeOnDispose listener\n\t        // Otherwise we create a memory leak.\n\t        var cleanRemover = function cleanRemover() {\n\t          return _this2.off('dispose', removeOnDispose);\n\t        };\n\t\n\t        // Add the same function ID so we can easily remove it later\n\t        cleanRemover.guid = fn.guid;\n\t\n\t        // Check if this is a DOM node\n\t        if (first.nodeName) {\n\t          // Add the listener to the other element\n\t          Events.on(target, type, fn);\n\t          Events.on(target, 'dispose', cleanRemover);\n\t\n\t          // Should be a component\n\t          // Not using `instanceof Component` because it makes mock players difficult\n\t        } else if (typeof first.on === 'function') {\n\t          // Add the listener to the other component\n\t          target.on(type, fn);\n\t          target.on('dispose', cleanRemover);\n\t        }\n\t      })();\n\t    }\n\t\n\t    return this;\n\t  };\n\t\n\t  /**\n\t   * Remove an event listener from this `Component`s element. If the second argument is\n\t   * exluded all listeners for the type passed in as the first argument will be removed.\n\t   *\n\t   * @param {string|Component|string[]} [first]\n\t   *        The event name, and array of event names, or another `Component`.\n\t   *\n\t   * @param {EventTarget~EventListener|string|string[]} [second]\n\t   *        The listener function, an event name, or an Array of events names.\n\t   *\n\t   * @param {EventTarget~EventListener} [third]\n\t   *        The event handler if `first` is a `Component` and `second` is an event name\n\t   *        or an Array of event names.\n\t   *\n\t   * @return {Component}\n\t   *         Returns itself; method can be chained.\n\t   */\n\t\n\t\n\t  Component.prototype.off = function off(first, second, third) {\n\t    if (!first || typeof first === 'string' || Array.isArray(first)) {\n\t      Events.off(this.el_, first, second);\n\t    } else {\n\t      var target = first;\n\t      var type = second;\n\t      // Ensure there's at least a guid, even if the function hasn't been used\n\t      var fn = Fn.bind(this, third);\n\t\n\t      // Remove the dispose listener on this component,\n\t      // which was given the same guid as the event listener\n\t      this.off('dispose', fn);\n\t\n\t      if (first.nodeName) {\n\t        // Remove the listener\n\t        Events.off(target, type, fn);\n\t        // Remove the listener for cleaning the dispose listener\n\t        Events.off(target, 'dispose', fn);\n\t      } else {\n\t        target.off(type, fn);\n\t        target.off('dispose', fn);\n\t      }\n\t    }\n\t\n\t    return this;\n\t  };\n\t\n\t  /**\n\t   * Add an event listener that gets triggered only once and then gets removed.\n\t   *\n\t   * @param {string|Component|string[]} [first]\n\t   *        The event name, and array of event names, or another `Component`.\n\t   *\n\t   * @param {EventTarget~EventListener|string|string[]} [second]\n\t   *        The listener function, an event name, or an Array of events names.\n\t   *\n\t   * @param {EventTarget~EventListener} [third]\n\t   *        The event handler if `first` is a `Component` and `second` is an event name\n\t   *        or an Array of event names.\n\t   *\n\t   * @return {Component}\n\t   *         Returns itself; method can be chained.\n\t   */\n\t\n\t\n\t  Component.prototype.one = function one(first, second, third) {\n\t    var _this3 = this,\n\t        _arguments = arguments;\n\t\n\t    if (typeof first === 'string' || Array.isArray(first)) {\n\t      Events.one(this.el_, first, Fn.bind(this, second));\n\t    } else {\n\t      (function () {\n\t        var target = first;\n\t        var type = second;\n\t        var fn = Fn.bind(_this3, third);\n\t\n\t        var newFunc = function newFunc() {\n\t          _this3.off(target, type, newFunc);\n\t          fn.apply(null, _arguments);\n\t        };\n\t\n\t        // Keep the same function ID so we can remove it later\n\t        newFunc.guid = fn.guid;\n\t\n\t        _this3.on(target, type, newFunc);\n\t      })();\n\t    }\n\t\n\t    return this;\n\t  };\n\t\n\t  /**\n\t   * Trigger an event on an element.\n\t   *\n\t   * @param {EventTarget~Event|Object|string} event\n\t   *        The event name, and Event, or an event-like object with a type attribute\n\t   *        set to the event name.\n\t   *\n\t   * @param {Object} [hash]\n\t   *        Data hash to pass along with the event\n\t   *\n\t   * @return {Component}\n\t   *         Returns itself; method can be chained.\n\t   */\n\t\n\t\n\t  Component.prototype.trigger = function trigger(event, hash) {\n\t    Events.trigger(this.el_, event, hash);\n\t    return this;\n\t  };\n\t\n\t  /**\n\t   * Bind a listener to the component's ready state. If the ready event has already\n\t   * happened it will trigger the function immediately.\n\t   *\n\t   * @param  {Component~ReadyCallback} fn\n\t   *         A function to call when ready is triggered.\n\t   *\n\t   * @param  {boolean} [sync=false]\n\t   *         Execute the listener synchronously if `Component` is ready.\n\t   *\n\t   * @return {Component}\n\t   *         Returns itself; method can be chained.\n\t   */\n\t\n\t\n\t  Component.prototype.ready = function ready(fn) {\n\t    var sync = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n\t\n\t    if (fn) {\n\t      if (this.isReady_) {\n\t        if (sync) {\n\t          fn.call(this);\n\t        } else {\n\t          // Call the function asynchronously by default for consistency\n\t          this.setTimeout(fn, 1);\n\t        }\n\t      } else {\n\t        this.readyQueue_ = this.readyQueue_ || [];\n\t        this.readyQueue_.push(fn);\n\t      }\n\t    }\n\t    return this;\n\t  };\n\t\n\t  /**\n\t   * Trigger all the ready listeners for this `Component`.\n\t   *\n\t   * @fires Component#ready\n\t   */\n\t\n\t\n\t  Component.prototype.triggerReady = function triggerReady() {\n\t    this.isReady_ = true;\n\t\n\t    // Ensure ready is triggerd asynchronously\n\t    this.setTimeout(function () {\n\t      var readyQueue = this.readyQueue_;\n\t\n\t      // Reset Ready Queue\n\t      this.readyQueue_ = [];\n\t\n\t      if (readyQueue && readyQueue.length > 0) {\n\t        readyQueue.forEach(function (fn) {\n\t          fn.call(this);\n\t        }, this);\n\t      }\n\t\n\t      // Allow for using event listeners also\n\t      /**\n\t       * Triggered when a `Component` is ready.\n\t       *\n\t       * @event Component#ready\n\t       * @type {EventTarget~Event}\n\t       */\n\t      this.trigger('ready');\n\t    }, 1);\n\t  };\n\t\n\t  /**\n\t   * Find a single DOM element matching a `selector`. This can be within the `Component`s\n\t   * `contentEl()` or another custom context.\n\t   *\n\t   * @param {string} selector\n\t   *        A valid CSS selector, which will be passed to `querySelector`.\n\t   *\n\t   * @param {Element|string} [context=this.contentEl()]\n\t   *        A DOM element within which to query. Can also be a selector string in\n\t   *        which case the first matching element will get used as context. If\n\t   *        missing `this.contentEl()` gets used. If  `this.contentEl()` returns\n\t   *        nothing it falls back to `document`.\n\t   *\n\t   * @return {Element|null}\n\t   *         the dom element that was found, or null\n\t   *\n\t   * @see [Information on CSS Selectors](https://developer.mozilla.org/en-US/docs/Web/Guide/CSS/Getting_Started/Selectors)\n\t   */\n\t\n\t\n\t  Component.prototype.$ = function $(selector, context) {\n\t    return Dom.$(selector, context || this.contentEl());\n\t  };\n\t\n\t  /**\n\t   * Finds all DOM element matching a `selector`. This can be within the `Component`s\n\t   * `contentEl()` or another custom context.\n\t   *\n\t   * @param {string} selector\n\t   *        A valid CSS selector, which will be passed to `querySelectorAll`.\n\t   *\n\t   * @param {Element|string} [context=this.contentEl()]\n\t   *        A DOM element within which to query. Can also be a selector string in\n\t   *        which case the first matching element will get used as context. If\n\t   *        missing `this.contentEl()` gets used. If  `this.contentEl()` returns\n\t   *        nothing it falls back to `document`.\n\t   *\n\t   * @return {NodeList}\n\t   *         a list of dom elements that were found\n\t   *\n\t   * @see [Information on CSS Selectors](https://developer.mozilla.org/en-US/docs/Web/Guide/CSS/Getting_Started/Selectors)\n\t   */\n\t\n\t\n\t  Component.prototype.$$ = function $$(selector, context) {\n\t    return Dom.$$(selector, context || this.contentEl());\n\t  };\n\t\n\t  /**\n\t   * Check if a component's element has a CSS class name.\n\t   *\n\t   * @param {string} classToCheck\n\t   *        CSS class name to check.\n\t   *\n\t   * @return {boolean}\n\t   *         - True if the `Component` has the class.\n\t   *         - False if the `Component` does not have the class`\n\t   */\n\t\n\t\n\t  Component.prototype.hasClass = function hasClass(classToCheck) {\n\t    return Dom.hasElClass(this.el_, classToCheck);\n\t  };\n\t\n\t  /**\n\t   * Add a CSS class name to the `Component`s element.\n\t   *\n\t   * @param {string} classToAdd\n\t   *        CSS class name to add\n\t   *\n\t   * @return {Component}\n\t   *         Returns itself; method can be chained.\n\t   */\n\t\n\t\n\t  Component.prototype.addClass = function addClass(classToAdd) {\n\t    Dom.addElClass(this.el_, classToAdd);\n\t    return this;\n\t  };\n\t\n\t  /**\n\t   * Remove a CSS class name from the `Component`s element.\n\t   *\n\t   * @param {string} classToRemove\n\t   *        CSS class name to remove\n\t   *\n\t   * @return {Component}\n\t   *         Returns itself; method can be chained.\n\t   */\n\t\n\t\n\t  Component.prototype.removeClass = function removeClass(classToRemove) {\n\t    Dom.removeElClass(this.el_, classToRemove);\n\t    return this;\n\t  };\n\t\n\t  /**\n\t   * Add or remove a CSS class name from the component's element.\n\t   * - `classToToggle` gets added when {@link Component#hasClass} would return false.\n\t   * - `classToToggle` gets removed when {@link Component#hasClass} would return true.\n\t   *\n\t   * @param  {string} classToToggle\n\t   *         The class to add or remove based on (@link Component#hasClass}\n\t   *\n\t   * @param  {boolean|Dom~predicate} [predicate]\n\t   *         An {@link Dom~predicate} function or a boolean\n\t   *\n\t   * @return {Component}\n\t   *         Returns itself; method can be chained.\n\t   */\n\t\n\t\n\t  Component.prototype.toggleClass = function toggleClass(classToToggle, predicate) {\n\t    Dom.toggleElClass(this.el_, classToToggle, predicate);\n\t    return this;\n\t  };\n\t\n\t  /**\n\t   * Show the `Component`s element if it is hidden by removing the\n\t   * 'vjs-hidden' class name from it.\n\t   *\n\t   * @return {Component}\n\t   *         Returns itself; method can be chained.\n\t   */\n\t\n\t\n\t  Component.prototype.show = function show() {\n\t    this.removeClass('vjs-hidden');\n\t    return this;\n\t  };\n\t\n\t  /**\n\t   * Hide the `Component`s element if it is currently showing by adding the\n\t   * 'vjs-hidden` class name to it.\n\t   *\n\t   * @return {Component}\n\t   *         Returns itself; method can be chained.\n\t   */\n\t\n\t\n\t  Component.prototype.hide = function hide() {\n\t    this.addClass('vjs-hidden');\n\t    return this;\n\t  };\n\t\n\t  /**\n\t   * Lock a `Component`s element in its visible state by adding the 'vjs-lock-showing'\n\t   * class name to it. Used during fadeIn/fadeOut.\n\t   *\n\t   * @return {Component}\n\t   *         Returns itself; method can be chained.\n\t   *\n\t   * @private\n\t   */\n\t\n\t\n\t  Component.prototype.lockShowing = function lockShowing() {\n\t    this.addClass('vjs-lock-showing');\n\t    return this;\n\t  };\n\t\n\t  /**\n\t   * Unlock a `Component`s element from its visible state by removing the 'vjs-lock-showing'\n\t   * class name from it. Used during fadeIn/fadeOut.\n\t   *\n\t   * @return {Component}\n\t   *         Returns itself; method can be chained.\n\t   *\n\t   * @private\n\t   */\n\t\n\t\n\t  Component.prototype.unlockShowing = function unlockShowing() {\n\t    this.removeClass('vjs-lock-showing');\n\t    return this;\n\t  };\n\t\n\t  /**\n\t   * Get the value of an attribute on the `Component`s element.\n\t   *\n\t   * @param {string} attribute\n\t   *        Name of the attribute to get the value from.\n\t   *\n\t   * @return {string|null}\n\t   *         - The value of the attribute that was asked for.\n\t   *         - Can be an empty string on some browsers if the attribute does not exist\n\t   *           or has no value\n\t   *         - Most browsers will return null if the attibute does not exist or has\n\t   *           no value.\n\t   *\n\t   * @see [DOM API]{@link https://developer.mozilla.org/en-US/docs/Web/API/Element/getAttribute}\n\t   */\n\t\n\t\n\t  Component.prototype.getAttribute = function getAttribute(attribute) {\n\t    return Dom.getAttribute(this.el_, attribute);\n\t  };\n\t\n\t  /**\n\t   * Set the value of an attribute on the `Component`'s element\n\t   *\n\t   * @param {string} attribute\n\t   *        Name of the attribute to set.\n\t   *\n\t   * @param {string} value\n\t   *        Value to set the attribute to.\n\t   *\n\t   * @return {Component}\n\t   *         Returns itself; method can be chained.\n\t   *\n\t   * @see [DOM API]{@link https://developer.mozilla.org/en-US/docs/Web/API/Element/setAttribute}\n\t   */\n\t\n\t\n\t  Component.prototype.setAttribute = function setAttribute(attribute, value) {\n\t    Dom.setAttribute(this.el_, attribute, value);\n\t    return this;\n\t  };\n\t\n\t  /**\n\t   * Remove an attribute from the `Component`s element.\n\t   *\n\t   * @param {string} attribute\n\t   *        Name of the attribute to remove.\n\t   *\n\t   * @return {Component}\n\t   *         Returns itself; method can be chained.\n\t   *\n\t   * @see [DOM API]{@link https://developer.mozilla.org/en-US/docs/Web/API/Element/removeAttribute}\n\t   */\n\t\n\t\n\t  Component.prototype.removeAttribute = function removeAttribute(attribute) {\n\t    Dom.removeAttribute(this.el_, attribute);\n\t    return this;\n\t  };\n\t\n\t  /**\n\t   * Get or set the width of the component based upon the CSS styles.\n\t   * See {@link Component#dimension} for more detailed information.\n\t   *\n\t   * @param {number|string} [num]\n\t   *        The width that you want to set postfixed with '%', 'px' or nothing.\n\t   *\n\t   * @param {boolean} [skipListeners]\n\t   *        Skip the resize event trigger\n\t   *\n\t   * @return {Component|number|string}\n\t   *         - The width when getting, zero if there is no width. Can be a string\n\t   *           postpixed with '%' or 'px'.\n\t   *         - Returns itself when setting; method can be chained.\n\t   */\n\t\n\t\n\t  Component.prototype.width = function width(num, skipListeners) {\n\t    return this.dimension('width', num, skipListeners);\n\t  };\n\t\n\t  /**\n\t   * Get or set the height of the component based upon the CSS styles.\n\t   * See {@link Component#dimension} for more detailed information.\n\t   *\n\t   * @param {number|string} [num]\n\t   *        The height that you want to set postfixed with '%', 'px' or nothing.\n\t   *\n\t   * @param {boolean} [skipListeners]\n\t   *        Skip the resize event trigger\n\t   *\n\t   * @return {Component|number|string}\n\t   *         - The width when getting, zero if there is no width. Can be a string\n\t   *           postpixed with '%' or 'px'.\n\t   *         - Returns itself when setting; method can be chained.\n\t   */\n\t\n\t\n\t  Component.prototype.height = function height(num, skipListeners) {\n\t    return this.dimension('height', num, skipListeners);\n\t  };\n\t\n\t  /**\n\t   * Set both the width and height of the `Component` element at the same time.\n\t   *\n\t   * @param  {number|string} width\n\t   *         Width to set the `Component`s element to.\n\t   *\n\t   * @param  {number|string} height\n\t   *         Height to set the `Component`s element to.\n\t   *\n\t   * @return {Component}\n\t   *         Returns itself; method can be chained.\n\t   */\n\t\n\t\n\t  Component.prototype.dimensions = function dimensions(width, height) {\n\t    // Skip resize listeners on width for optimization\n\t    return this.width(width, true).height(height);\n\t  };\n\t\n\t  /**\n\t   * Get or set width or height of the `Component` element. This is the shared code\n\t   * for the {@link Component#width} and {@link Component#height}.\n\t   *\n\t   * Things to know:\n\t   * - If the width or height in an number this will return the number postfixed with 'px'.\n\t   * - If the width/height is a percent this will return the percent postfixed with '%'\n\t   * - Hidden elements have a width of 0 with `window.getComputedStyle`. This function\n\t   *   defaults to the `Component`s `style.width` and falls back to `window.getComputedStyle`.\n\t   *   See [this]{@link http://www.foliotek.com/devblog/getting-the-width-of-a-hidden-element-with-jquery-using-width/}\n\t   *   for more information\n\t   * - If you want the computed style of the component, use {@link Component#currentWidth}\n\t   *   and {@link {Component#currentHeight}\n\t   *\n\t   * @fires Component#resize\n\t   *\n\t   * @param {string} widthOrHeight\n\t   8        'width' or 'height'\n\t   *\n\t   * @param  {number|string} [num]\n\t   8         New dimension\n\t   *\n\t   * @param  {boolean} [skipListeners]\n\t   *         Skip resize event trigger\n\t   *\n\t   * @return {Component}\n\t   *         - the dimension when getting or 0 if unset\n\t   *         - Returns itself when setting; method can be chained.\n\t   */\n\t\n\t\n\t  Component.prototype.dimension = function dimension(widthOrHeight, num, skipListeners) {\n\t    if (num !== undefined) {\n\t      // Set to zero if null or literally NaN (NaN !== NaN)\n\t      if (num === null || num !== num) {\n\t        num = 0;\n\t      }\n\t\n\t      // Check if using css width/height (% or px) and adjust\n\t      if (('' + num).indexOf('%') !== -1 || ('' + num).indexOf('px') !== -1) {\n\t        this.el_.style[widthOrHeight] = num;\n\t      } else if (num === 'auto') {\n\t        this.el_.style[widthOrHeight] = '';\n\t      } else {\n\t        this.el_.style[widthOrHeight] = num + 'px';\n\t      }\n\t\n\t      // skipListeners allows us to avoid triggering the resize event when setting both width and height\n\t      if (!skipListeners) {\n\t        /**\n\t         * Triggered when a component is resized.\n\t         *\n\t         * @event Component#resize\n\t         * @type {EventTarget~Event}\n\t         */\n\t        this.trigger('resize');\n\t      }\n\t\n\t      // Return component\n\t      return this;\n\t    }\n\t\n\t    // Not setting a value, so getting it\n\t    // Make sure element exists\n\t    if (!this.el_) {\n\t      return 0;\n\t    }\n\t\n\t    // Get dimension value from style\n\t    var val = this.el_.style[widthOrHeight];\n\t    var pxIndex = val.indexOf('px');\n\t\n\t    if (pxIndex !== -1) {\n\t      // Return the pixel value with no 'px'\n\t      return parseInt(val.slice(0, pxIndex), 10);\n\t    }\n\t\n\t    // No px so using % or no style was set, so falling back to offsetWidth/height\n\t    // If component has display:none, offset will return 0\n\t    // TODO: handle display:none and no dimension style using px\n\t    return parseInt(this.el_['offset' + (0, _toTitleCase2['default'])(widthOrHeight)], 10);\n\t  };\n\t\n\t  /**\n\t   * Get the width or the height of the `Component` elements computed style. Uses\n\t   * `window.getComputedStyle`.\n\t   *\n\t   * @param {string} widthOrHeight\n\t   *        A string containing 'width' or 'height'. Whichever one you want to get.\n\t   *\n\t   * @return {number}\n\t   *         The dimension that gets asked for or 0 if nothing was set\n\t   *         for that dimension.\n\t   */\n\t\n\t\n\t  Component.prototype.currentDimension = function currentDimension(widthOrHeight) {\n\t    var computedWidthOrHeight = 0;\n\t\n\t    if (widthOrHeight !== 'width' && widthOrHeight !== 'height') {\n\t      throw new Error('currentDimension only accepts width or height value');\n\t    }\n\t\n\t    if (typeof _window2['default'].getComputedStyle === 'function') {\n\t      var computedStyle = _window2['default'].getComputedStyle(this.el_);\n\t\n\t      computedWidthOrHeight = computedStyle.getPropertyValue(widthOrHeight) || computedStyle[widthOrHeight];\n\t    }\n\t\n\t    // remove 'px' from variable and parse as integer\n\t    computedWidthOrHeight = parseFloat(computedWidthOrHeight);\n\t\n\t    // if the computed value is still 0, it's possible that the browser is lying\n\t    // and we want to check the offset values.\n\t    // This code also runs on IE8 and wherever getComputedStyle doesn't exist.\n\t    if (computedWidthOrHeight === 0) {\n\t      var rule = 'offset' + (0, _toTitleCase2['default'])(widthOrHeight);\n\t\n\t      computedWidthOrHeight = this.el_[rule];\n\t    }\n\t\n\t    return computedWidthOrHeight;\n\t  };\n\t\n\t  /**\n\t   * An object that contains width and height values of the `Component`s\n\t   * computed style. Uses `window.getComputedStyle`.\n\t   *\n\t   * @typedef {Object} Component~DimensionObject\n\t   *\n\t   * @property {number} width\n\t   *           The width of the `Component`s computed style.\n\t   *\n\t   * @property {number} height\n\t   *           The height of the `Component`s computed style.\n\t   */\n\t\n\t  /**\n\t   * Get an object that contains width and height values of the `Component`s\n\t   * computed style.\n\t   *\n\t   * @return {Component~DimensionObject}\n\t   *         The dimensions of the components element\n\t   */\n\t\n\t\n\t  Component.prototype.currentDimensions = function currentDimensions() {\n\t    return {\n\t      width: this.currentDimension('width'),\n\t      height: this.currentDimension('height')\n\t    };\n\t  };\n\t\n\t  /**\n\t   * Get the width of the `Component`s computed style. Uses `window.getComputedStyle`.\n\t   *\n\t   * @return {number} width\n\t   *           The width of the `Component`s computed style.\n\t   */\n\t\n\t\n\t  Component.prototype.currentWidth = function currentWidth() {\n\t    return this.currentDimension('width');\n\t  };\n\t\n\t  /**\n\t   * Get the height of the `Component`s computed style. Uses `window.getComputedStyle`.\n\t   *\n\t   * @return {number} height\n\t   *           The height of the `Component`s computed style.\n\t   */\n\t\n\t\n\t  Component.prototype.currentHeight = function currentHeight() {\n\t    return this.currentDimension('height');\n\t  };\n\t\n\t  /**\n\t   * Emit a 'tap' events when touch event support gets detected. This gets used to\n\t   * support toggling the controls through a tap on the video. They get enabled\n\t   * because every sub-component would have extra overhead otherwise.\n\t   *\n\t   * @private\n\t   * @fires Component#tap\n\t   * @listens Component#touchstart\n\t   * @listens Component#touchmove\n\t   * @listens Component#touchleave\n\t   * @listens Component#touchcancel\n\t   * @listens Component#touchend\n\t    */\n\t\n\t\n\t  Component.prototype.emitTapEvents = function emitTapEvents() {\n\t    // Track the start time so we can determine how long the touch lasted\n\t    var touchStart = 0;\n\t    var firstTouch = null;\n\t\n\t    // Maximum movement allowed during a touch event to still be considered a tap\n\t    // Other popular libs use anywhere from 2 (hammer.js) to 15,\n\t    // so 10 seems like a nice, round number.\n\t    var tapMovementThreshold = 10;\n\t\n\t    // The maximum length a touch can be while still being considered a tap\n\t    var touchTimeThreshold = 200;\n\t\n\t    var couldBeTap = void 0;\n\t\n\t    this.on('touchstart', function (event) {\n\t      // If more than one finger, don't consider treating this as a click\n\t      if (event.touches.length === 1) {\n\t        // Copy pageX/pageY from the object\n\t        firstTouch = {\n\t          pageX: event.touches[0].pageX,\n\t          pageY: event.touches[0].pageY\n\t        };\n\t        // Record start time so we can detect a tap vs. \"touch and hold\"\n\t        touchStart = new Date().getTime();\n\t        // Reset couldBeTap tracking\n\t        couldBeTap = true;\n\t      }\n\t    });\n\t\n\t    this.on('touchmove', function (event) {\n\t      // If more than one finger, don't consider treating this as a click\n\t      if (event.touches.length > 1) {\n\t        couldBeTap = false;\n\t      } else if (firstTouch) {\n\t        // Some devices will throw touchmoves for all but the slightest of taps.\n\t        // So, if we moved only a small distance, this could still be a tap\n\t        var xdiff = event.touches[0].pageX - firstTouch.pageX;\n\t        var ydiff = event.touches[0].pageY - firstTouch.pageY;\n\t        var touchDistance = Math.sqrt(xdiff * xdiff + ydiff * ydiff);\n\t\n\t        if (touchDistance > tapMovementThreshold) {\n\t          couldBeTap = false;\n\t        }\n\t      }\n\t    });\n\t\n\t    var noTap = function noTap() {\n\t      couldBeTap = false;\n\t    };\n\t\n\t    // TODO: Listen to the original target. http://youtu.be/DujfpXOKUp8?t=13m8s\n\t    this.on('touchleave', noTap);\n\t    this.on('touchcancel', noTap);\n\t\n\t    // When the touch ends, measure how long it took and trigger the appropriate\n\t    // event\n\t    this.on('touchend', function (event) {\n\t      firstTouch = null;\n\t      // Proceed only if the touchmove/leave/cancel event didn't happen\n\t      if (couldBeTap === true) {\n\t        // Measure how long the touch lasted\n\t        var touchTime = new Date().getTime() - touchStart;\n\t\n\t        // Make sure the touch was less than the threshold to be considered a tap\n\t        if (touchTime < touchTimeThreshold) {\n\t          // Don't let browser turn this into a click\n\t          event.preventDefault();\n\t          /**\n\t           * Triggered when a `Component` is tapped.\n\t           *\n\t           * @event Component#tap\n\t           * @type {EventTarget~Event}\n\t           */\n\t          this.trigger('tap');\n\t          // It may be good to copy the touchend event object and change the\n\t          // type to tap, if the other event properties aren't exact after\n\t          // Events.fixEvent runs (e.g. event.target)\n\t        }\n\t      }\n\t    });\n\t  };\n\t\n\t  /**\n\t   * This function reports user activity whenever touch events happen. This can get\n\t   * turned off by any sub-components that wants touch events to act another way.\n\t   *\n\t   * Report user touch activity when touch events occur. User activity gets used to\n\t   * determine when controls should show/hide. It is simple when it comes to mouse\n\t   * events, because any mouse event should show the controls. So we capture mouse\n\t   * events that bubble up to the player and report activity when that happens.\n\t   * With touch events it isn't as easy as `touchstart` and `touchend` toggle player\n\t   * controls. So touch events can't help us at the player level either.\n\t   *\n\t   * User activity gets checked asynchronously. So what could happen is a tap event\n\t   * on the video turns the controls off. Then the `touchend` event bubbles up to\n\t   * the player. Which, if it reported user activity, would turn the controls right\n\t   * back on. We also don't want to completely block touch events from bubbling up.\n\t   * Furthermore a `touchmove` event and anything other than a tap, should not turn\n\t   * controls back on.\n\t   *\n\t   * @listens Component#touchstart\n\t   * @listens Component#touchmove\n\t   * @listens Component#touchend\n\t   * @listens Component#touchcancel\n\t   */\n\t\n\t\n\t  Component.prototype.enableTouchActivity = function enableTouchActivity() {\n\t    // Don't continue if the root player doesn't support reporting user activity\n\t    if (!this.player() || !this.player().reportUserActivity) {\n\t      return;\n\t    }\n\t\n\t    // listener for reporting that the user is active\n\t    var report = Fn.bind(this.player(), this.player().reportUserActivity);\n\t\n\t    var touchHolding = void 0;\n\t\n\t    this.on('touchstart', function () {\n\t      report();\n\t      // For as long as the they are touching the device or have their mouse down,\n\t      // we consider them active even if they're not moving their finger or mouse.\n\t      // So we want to continue to update that they are active\n\t      this.clearInterval(touchHolding);\n\t      // report at the same interval as activityCheck\n\t      touchHolding = this.setInterval(report, 250);\n\t    });\n\t\n\t    var touchEnd = function touchEnd(event) {\n\t      report();\n\t      // stop the interval that maintains activity if the touch is holding\n\t      this.clearInterval(touchHolding);\n\t    };\n\t\n\t    this.on('touchmove', report);\n\t    this.on('touchend', touchEnd);\n\t    this.on('touchcancel', touchEnd);\n\t  };\n\t\n\t  /**\n\t   * A callback that has no parameters and is bound into `Component`s context.\n\t   *\n\t   * @callback Component~GenericCallback\n\t   * @this Component\n\t   */\n\t\n\t  /**\n\t   * Creates a function that runs after an `x` millisecond timeout. This function is a\n\t   * wrapper around `window.setTimeout`. There are a few reasons to use this one\n\t   * instead though:\n\t   * 1. It gets cleared via  {@link Component#clearTimeout} when\n\t   *    {@link Component#dispose} gets called.\n\t   * 2. The function callback will gets turned into a {@link Component~GenericCallback}\n\t   *\n\t   * > Note: You can use `window.clearTimeout` on the id returned by this function. This\n\t   *         will cause its dispose listener not to get cleaned up! Please use\n\t   *         {@link Component#clearTimeout} or {@link Component#dispose}.\n\t   *\n\t   * @param {Component~GenericCallback} fn\n\t   *        The function that will be run after `timeout`.\n\t   *\n\t   * @param {number} timeout\n\t   *        Timeout in milliseconds to delay before executing the specified function.\n\t   *\n\t   * @return {number}\n\t   *         Returns a timeout ID that gets used to identify the timeout. It can also\n\t   *         get used in {@link Component#clearTimeout} to clear the timeout that\n\t   *         was set.\n\t   *\n\t   * @listens Component#dispose\n\t   * @see [Similar to]{@link https://developer.mozilla.org/en-US/docs/Web/API/WindowTimers/setTimeout}\n\t   */\n\t\n\t\n\t  Component.prototype.setTimeout = function setTimeout(fn, timeout) {\n\t    fn = Fn.bind(this, fn);\n\t\n\t    var timeoutId = _window2['default'].setTimeout(fn, timeout);\n\t    var disposeFn = function disposeFn() {\n\t      this.clearTimeout(timeoutId);\n\t    };\n\t\n\t    disposeFn.guid = 'vjs-timeout-' + timeoutId;\n\t\n\t    this.on('dispose', disposeFn);\n\t\n\t    return timeoutId;\n\t  };\n\t\n\t  /**\n\t   * Clears a timeout that gets created via `window.setTimeout` or\n\t   * {@link Component#setTimeout}. If you set a timeout via {@link Component#setTimeout}\n\t   * use this function instead of `window.clearTimout`. If you don't your dispose\n\t   * listener will not get cleaned up until {@link Component#dispose}!\n\t   *\n\t   * @param {number} timeoutId\n\t   *        The id of the timeout to clear. The return value of\n\t   *        {@link Component#setTimeout} or `window.setTimeout`.\n\t   *\n\t   * @return {number}\n\t   *         Returns the timeout id that was cleared.\n\t   *\n\t   * @see [Similar to]{@link https://developer.mozilla.org/en-US/docs/Web/API/WindowTimers/clearTimeout}\n\t   */\n\t\n\t\n\t  Component.prototype.clearTimeout = function clearTimeout(timeoutId) {\n\t    _window2['default'].clearTimeout(timeoutId);\n\t\n\t    var disposeFn = function disposeFn() {};\n\t\n\t    disposeFn.guid = 'vjs-timeout-' + timeoutId;\n\t\n\t    this.off('dispose', disposeFn);\n\t\n\t    return timeoutId;\n\t  };\n\t\n\t  /**\n\t   * Creates a function that gets run every `x` milliseconds. This function is a wrapper\n\t   * around `window.setInterval`. There are a few reasons to use this one instead though.\n\t   * 1. It gets cleared via  {@link Component#clearInterval} when\n\t   *    {@link Component#dispose} gets called.\n\t   * 2. The function callback will be a {@link Component~GenericCallback}\n\t   *\n\t   * @param {Component~GenericCallback} fn\n\t   *        The function to run every `x` seconds.\n\t   *\n\t   * @param {number} interval\n\t   *        Execute the specified function every `x` milliseconds.\n\t   *\n\t   * @return {number}\n\t   *         Returns an id that can be used to identify the interval. It can also be be used in\n\t   *         {@link Component#clearInterval} to clear the interval.\n\t   *\n\t   * @listens Component#dispose\n\t   * @see [Similar to]{@link https://developer.mozilla.org/en-US/docs/Web/API/WindowTimers/setInterval}\n\t   */\n\t\n\t\n\t  Component.prototype.setInterval = function setInterval(fn, interval) {\n\t    fn = Fn.bind(this, fn);\n\t\n\t    var intervalId = _window2['default'].setInterval(fn, interval);\n\t\n\t    var disposeFn = function disposeFn() {\n\t      this.clearInterval(intervalId);\n\t    };\n\t\n\t    disposeFn.guid = 'vjs-interval-' + intervalId;\n\t\n\t    this.on('dispose', disposeFn);\n\t\n\t    return intervalId;\n\t  };\n\t\n\t  /**\n\t   * Clears an interval that gets created via `window.setInterval` or\n\t   * {@link Component#setInterval}. If you set an inteval via {@link Component#setInterval}\n\t   * use this function instead of `window.clearInterval`. If you don't your dispose\n\t   * listener will not get cleaned up until {@link Component#dispose}!\n\t   *\n\t   * @param {number} intervalId\n\t   *        The id of the interval to clear. The return value of\n\t   *        {@link Component#setInterval} or `window.setInterval`.\n\t   *\n\t   * @return {number}\n\t   *         Returns the interval id that was cleared.\n\t   *\n\t   * @see [Similar to]{@link https://developer.mozilla.org/en-US/docs/Web/API/WindowTimers/clearInterval}\n\t   */\n\t\n\t\n\t  Component.prototype.clearInterval = function clearInterval(intervalId) {\n\t    _window2['default'].clearInterval(intervalId);\n\t\n\t    var disposeFn = function disposeFn() {};\n\t\n\t    disposeFn.guid = 'vjs-interval-' + intervalId;\n\t\n\t    this.off('dispose', disposeFn);\n\t\n\t    return intervalId;\n\t  };\n\t\n\t  /**\n\t   * Register a `Component` with `videojs` given the name and the component.\n\t   *\n\t   * > NOTE: {@link Tech}s should not be registered as a `Component`. {@link Tech}s\n\t   *         should be registered using {@link Tech.registerTech} or\n\t   *         {@link videojs:videojs.registerTech}.\n\t   *\n\t   * > NOTE: This function can also be seen on videojs as\n\t   *         {@link videojs:videojs.registerComponent}.\n\t   *\n\t   * @param {string} name\n\t   *        The name of the `Component` to register.\n\t   *\n\t   * @param {Component} comp\n\t   *        The `Component` class to register.\n\t   *\n\t   * @return {Component}\n\t   *         The `Component` that was registered.\n\t   */\n\t\n\t\n\t  Component.registerComponent = function registerComponent(name, comp) {\n\t    if (!name) {\n\t      return;\n\t    }\n\t\n\t    name = (0, _toTitleCase2['default'])(name);\n\t\n\t    if (!Component.components_) {\n\t      Component.components_ = {};\n\t    }\n\t\n\t    if (name === 'Player' && Component.components_[name]) {\n\t      (function () {\n\t        var Player = Component.components_[name];\n\t\n\t        // If we have players that were disposed, then their name will still be\n\t        // in Players.players. So, we must loop through and verify that the value\n\t        // for each item is not null. This allows registration of the Player component\n\t        // after all players have been disposed or before any were created.\n\t        if (Player.players && Object.keys(Player.players).length > 0 && Object.keys(Player.players).map(function (playerName) {\n\t          return Player.players[playerName];\n\t        }).every(Boolean)) {\n\t          throw new Error('Can not register Player component after player has been created');\n\t        }\n\t      })();\n\t    }\n\t\n\t    Component.components_[name] = comp;\n\t\n\t    return comp;\n\t  };\n\t\n\t  /**\n\t   * Get a `Component` based on the name it was registered with.\n\t   *\n\t   * @param {string} name\n\t   *        The Name of the component to get.\n\t   *\n\t   * @return {Component}\n\t   *         The `Component` that got registered under the given name.\n\t   *\n\t   * @deprecated In `videojs` 6 this will not return `Component`s that were not\n\t   *             registered using {@link Component.registerComponent}. Currently we\n\t   *             check the global `videojs` object for a `Component` name and\n\t   *             return that if it exists.\n\t   */\n\t\n\t\n\t  Component.getComponent = function getComponent(name) {\n\t    if (!name) {\n\t      return;\n\t    }\n\t\n\t    name = (0, _toTitleCase2['default'])(name);\n\t\n\t    if (Component.components_ && Component.components_[name]) {\n\t      return Component.components_[name];\n\t    }\n\t\n\t    if (_window2['default'] && _window2['default'].videojs && _window2['default'].videojs[name]) {\n\t      _log2['default'].warn('The ' + name + ' component was added to the videojs object when it should be registered using videojs.registerComponent(name, component)');\n\t\n\t      return _window2['default'].videojs[name];\n\t    }\n\t  };\n\t\n\t  /**\n\t   * Sets up the constructor using the supplied init method or uses the init of the\n\t   * parent object.\n\t   *\n\t   * @param {Object} [props={}]\n\t   *        An object of properties.\n\t   *\n\t   * @return {Object}\n\t   *         the extended object.\n\t   *\n\t   * @deprecated since version 5\n\t   */\n\t\n\t\n\t  Component.extend = function extend(props) {\n\t    props = props || {};\n\t\n\t    _log2['default'].warn('Component.extend({}) has been deprecated, ' + ' use videojs.extend(Component, {}) instead');\n\t\n\t    // Set up the constructor using the supplied init method\n\t    // or using the init of the parent object\n\t    // Make sure to check the unobfuscated version for external libs\n\t    var init = props.init || props.init || this.prototype.init || this.prototype.init || function () {};\n\t    // In Resig's simple class inheritance (previously used) the constructor\n\t    //  is a function that calls `this.init.apply(arguments)`\n\t    // However that would prevent us from using `ParentObject.call(this);`\n\t    //  in a Child constructor because the `this` in `this.init`\n\t    //  would still refer to the Child and cause an infinite loop.\n\t    // We would instead have to do\n\t    //    `ParentObject.prototype.init.apply(this, arguments);`\n\t    //  Bleh. We're not creating a _super() function, so it's good to keep\n\t    //  the parent constructor reference simple.\n\t    var subObj = function subObj() {\n\t      init.apply(this, arguments);\n\t    };\n\t\n\t    // Inherit from this object's prototype\n\t    subObj.prototype = Object.create(this.prototype);\n\t    // Reset the constructor property for subObj otherwise\n\t    // instances of subObj would have the constructor of the parent Object\n\t    subObj.prototype.constructor = subObj;\n\t\n\t    // Make the class extendable\n\t    subObj.extend = Component.extend;\n\t\n\t    // Extend subObj's prototype with functions and other properties from props\n\t    for (var name in props) {\n\t      if (props.hasOwnProperty(name)) {\n\t        subObj.prototype[name] = props[name];\n\t      }\n\t    }\n\t\n\t    return subObj;\n\t  };\n\t\n\t  return Component;\n\t}();\n\t\n\tComponent.registerComponent('Component', Component);\n\texports['default'] = Component;\n\n\n/***/ },\n/* 17 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\texports.__esModule = true;\n\texports.throttle = exports.bind = undefined;\n\t\n\tvar _guid = __webpack_require__(9);\n\t\n\t/**\n\t * Bind (a.k.a proxy or Context). A simple method for changing the context of a function\n\t * It also stores a unique id on the function so it can be easily removed from events.\n\t *\n\t * @param {Mixed} context\n\t *        The object to bind as scope.\n\t *\n\t * @param {Function} fn\n\t *        The function to be bound to a scope.\n\t *\n\t * @param {number} [uid]\n\t *        An optional unique ID for the function to be set\n\t *\n\t * @return {Function}\n\t *         The new function that will be bound into the context given\n\t */\n\tvar bind = exports.bind = function bind(context, fn, uid) {\n\t  // Make sure the function has a unique ID\n\t  if (!fn.guid) {\n\t    fn.guid = (0, _guid.newGUID)();\n\t  }\n\t\n\t  // Create the new function that changes the context\n\t  var bound = function bound() {\n\t    return fn.apply(context, arguments);\n\t  };\n\t\n\t  // Allow for the ability to individualize this function\n\t  // Needed in the case where multiple objects might share the same prototype\n\t  // IF both items add an event listener with the same function, then you try to remove just one\n\t  // it will remove both because they both have the same guid.\n\t  // when using this, you need to use the bind method when you remove the listener as well.\n\t  // currently used in text tracks\n\t  bound.guid = uid ? uid + '_' + fn.guid : fn.guid;\n\t\n\t  return bound;\n\t};\n\t\n\t/**\n\t * Wraps the given function, `fn`, with a new function that only invokes `fn`\n\t * at most once per every `wait` milliseconds.\n\t *\n\t * @param  {Function} fn\n\t *         The function to be throttled.\n\t *\n\t * @param  {Number}   wait\n\t *         The number of milliseconds by which to throttle.\n\t *\n\t * @return {Function}\n\t */\n\t/**\n\t * @file fn.js\n\t * @module fn\n\t */\n\tvar throttle = exports.throttle = function throttle(fn, wait) {\n\t  var last = Date.now();\n\t\n\t  var throttled = function throttled() {\n\t    var now = Date.now();\n\t\n\t    if (now - last >= wait) {\n\t      fn.apply(undefined, arguments);\n\t      last = now;\n\t    }\n\t  };\n\t\n\t  return throttled;\n\t};\n\n\n/***/ },\n/* 18 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\texports.__esModule = true;\n\t/**\n\t * @file to-title-case.js\n\t * @module to-title-case\n\t */\n\t\n\t/**\n\t * Uppercase the first letter of a string.\n\t *\n\t * @param {string} string\n\t *        String to be uppercased\n\t *\n\t * @return {string}\n\t *         The string with an uppercased first letter\n\t */\n\tfunction toTitleCase(string) {\n\t  if (typeof string !== 'string') {\n\t    return string;\n\t  }\n\t\n\t  return string.charAt(0).toUpperCase() + string.slice(1);\n\t}\n\t\n\texports['default'] = toTitleCase;\n\n\n/***/ },\n/* 19 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\texports.__esModule = true;\n\texports['default'] = mergeOptions;\n\t\n\tvar _obj = __webpack_require__(12);\n\t\n\t/**\n\t * Deep-merge one or more options objects, recursively merging **only** plain\n\t * object properties.\n\t *\n\t * @param   {Object[]} sources\n\t *          One or more objects to merge into a new object.\n\t *\n\t * @returns {Object}\n\t *          A new object that is the merged result of all sources.\n\t */\n\tfunction mergeOptions() {\n\t  var result = {};\n\t\n\t  for (var _len = arguments.length, sources = Array(_len), _key = 0; _key < _len; _key++) {\n\t    sources[_key] = arguments[_key];\n\t  }\n\t\n\t  sources.forEach(function (source) {\n\t    if (!source) {\n\t      return;\n\t    }\n\t\n\t    (0, _obj.each)(source, function (value, key) {\n\t      if (!(0, _obj.isPlain)(value)) {\n\t        result[key] = value;\n\t        return;\n\t      }\n\t\n\t      if (!(0, _obj.isPlain)(result[key])) {\n\t        result[key] = {};\n\t      }\n\t\n\t      result[key] = mergeOptions(result[key], value);\n\t    });\n\t  });\n\t\n\t  return result;\n\t} /**\n\t   * @file merge-options.js\n\t   * @module merge-options\n\t   */\n\n\n/***/ },\n/* 20 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\texports.__esModule = true;\n\t\n\tvar _events = __webpack_require__(14);\n\t\n\tvar Events = _interopRequireWildcard(_events);\n\t\n\tfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj['default'] = obj; return newObj; } }\n\t\n\t/**\n\t * `EventTarget` is a class that can have the same API as the DOM `EventTarget`. It\n\t * adds shorthand functions that wrap around lengthy functions. For example:\n\t * the `on` function is a wrapper around `addEventListener`.\n\t *\n\t * @see [EventTarget Spec]{@link https://www.w3.org/TR/DOM-Level-2-Events/events.html#Events-EventTarget}\n\t * @class EventTarget\n\t */\n\tvar EventTarget = function EventTarget() {};\n\t\n\t/**\n\t * A Custom DOM event.\n\t *\n\t * @typedef {Object} EventTarget~Event\n\t * @see [Properties]{@link https://developer.mozilla.org/en-US/docs/Web/API/CustomEvent}\n\t */\n\t\n\t/**\n\t * All event listeners should follow the following format.\n\t *\n\t * @callback EventTarget~EventListener\n\t * @this {EventTarget}\n\t *\n\t * @param {EventTarget~Event} event\n\t *        the event that triggered this function\n\t *\n\t * @param {Object} [hash]\n\t *        hash of data sent during the event\n\t */\n\t\n\t/**\n\t * An object containing event names as keys and booleans as values.\n\t *\n\t * > NOTE: If an event name is set to a true value here {@link EventTarget#trigger}\n\t *         will have extra functionality. See that function for more information.\n\t *\n\t * @property EventTarget.prototype.allowedEvents_\n\t * @private\n\t */\n\t/**\n\t * @file src/js/event-target.js\n\t */\n\tEventTarget.prototype.allowedEvents_ = {};\n\t\n\t/**\n\t * Adds an `event listener` to an instance of an `EventTarget`. An `event listener` is a\n\t * function that will get called when an event with a certain name gets triggered.\n\t *\n\t * @param {string|string[]} type\n\t *        An event name or an array of event names.\n\t *\n\t * @param {EventTarget~EventListener} fn\n\t *        The function to call with `EventTarget`s\n\t */\n\tEventTarget.prototype.on = function (type, fn) {\n\t  // Remove the addEventListener alias before calling Events.on\n\t  // so we don't get into an infinite type loop\n\t  var ael = this.addEventListener;\n\t\n\t  this.addEventListener = function () {};\n\t  Events.on(this, type, fn);\n\t  this.addEventListener = ael;\n\t};\n\t\n\t/**\n\t * An alias of {@link EventTarget#on}. Allows `EventTarget` to mimic\n\t * the standard DOM API.\n\t *\n\t * @function\n\t * @see {@link EventTarget#on}\n\t */\n\tEventTarget.prototype.addEventListener = EventTarget.prototype.on;\n\t\n\t/**\n\t * Removes an `event listener` for a specific event from an instance of `EventTarget`.\n\t * This makes it so that the `event listener` will no longer get called when the\n\t * named event happens.\n\t *\n\t * @param {string|string[]} type\n\t *        An event name or an array of event names.\n\t *\n\t * @param {EventTarget~EventListener} fn\n\t *        The function to remove.\n\t */\n\tEventTarget.prototype.off = function (type, fn) {\n\t  Events.off(this, type, fn);\n\t};\n\t\n\t/**\n\t * An alias of {@link EventTarget#off}. Allows `EventTarget` to mimic\n\t * the standard DOM API.\n\t *\n\t * @function\n\t * @see {@link EventTarget#off}\n\t */\n\tEventTarget.prototype.removeEventListener = EventTarget.prototype.off;\n\t\n\t/**\n\t * This function will add an `event listener` that gets triggered only once. After the\n\t * first trigger it will get removed. This is like adding an `event listener`\n\t * with {@link EventTarget#on} that calls {@link EventTarget#off} on itself.\n\t *\n\t * @param {string|string[]} type\n\t *        An event name or an array of event names.\n\t *\n\t * @param {EventTarget~EventListener} fn\n\t *        The function to be called once for each event name.\n\t */\n\tEventTarget.prototype.one = function (type, fn) {\n\t  // Remove the addEventListener alialing Events.on\n\t  // so we don't get into an infinite type loop\n\t  var ael = this.addEventListener;\n\t\n\t  this.addEventListener = function () {};\n\t  Events.one(this, type, fn);\n\t  this.addEventListener = ael;\n\t};\n\t\n\t/**\n\t * This function causes an event to happen. This will then cause any `event listeners`\n\t * that are waiting for that event, to get called. If there are no `event listeners`\n\t * for an event then nothing will happen.\n\t *\n\t * If the name of the `Event` that is being triggered is in `EventTarget.allowedEvents_`.\n\t * Trigger will also call the `on` + `uppercaseEventName` function.\n\t *\n\t * Example:\n\t * 'click' is in `EventTarget.allowedEvents_`, so, trigger will attempt to call\n\t * `onClick` if it exists.\n\t *\n\t * @param {string|EventTarget~Event|Object} event\n\t *        The name of the event, an `Event`, or an object with a key of type set to\n\t *        an event name.\n\t */\n\tEventTarget.prototype.trigger = function (event) {\n\t  var type = event.type || event;\n\t\n\t  if (typeof event === 'string') {\n\t    event = { type: type };\n\t  }\n\t  event = Events.fixEvent(event);\n\t\n\t  if (this.allowedEvents_[type] && this['on' + type]) {\n\t    this['on' + type](event);\n\t  }\n\t\n\t  Events.trigger(this, event);\n\t};\n\t\n\t/**\n\t * An alias of {@link EventTarget#trigger}. Allows `EventTarget` to mimic\n\t * the standard DOM API.\n\t *\n\t * @function\n\t * @see {@link EventTarget#trigger}\n\t */\n\tEventTarget.prototype.dispatchEvent = EventTarget.prototype.trigger;\n\t\n\texports['default'] = EventTarget;\n\n\n/***/ },\n/* 21 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\texports.__esModule = true;\n\t\n\tvar _component = __webpack_require__(16);\n\t\n\tvar _component2 = _interopRequireDefault(_component);\n\t\n\tvar _document = __webpack_require__(5);\n\t\n\tvar _document2 = _interopRequireDefault(_document);\n\t\n\tvar _window = __webpack_require__(4);\n\t\n\tvar _window2 = _interopRequireDefault(_window);\n\t\n\tvar _events = __webpack_require__(14);\n\t\n\tvar Events = _interopRequireWildcard(_events);\n\t\n\tvar _dom = __webpack_require__(8);\n\t\n\tvar Dom = _interopRequireWildcard(_dom);\n\t\n\tvar _fn = __webpack_require__(17);\n\t\n\tvar Fn = _interopRequireWildcard(_fn);\n\t\n\tvar _guid = __webpack_require__(9);\n\t\n\tvar Guid = _interopRequireWildcard(_guid);\n\t\n\tvar _browser = __webpack_require__(11);\n\t\n\tvar browser = _interopRequireWildcard(_browser);\n\t\n\tvar _log = __webpack_require__(10);\n\t\n\tvar _log2 = _interopRequireDefault(_log);\n\t\n\tvar _toTitleCase = __webpack_require__(18);\n\t\n\tvar _toTitleCase2 = _interopRequireDefault(_toTitleCase);\n\t\n\tvar _timeRanges = __webpack_require__(22);\n\t\n\tvar _buffer = __webpack_require__(23);\n\t\n\tvar _stylesheet = __webpack_require__(15);\n\t\n\tvar stylesheet = _interopRequireWildcard(_stylesheet);\n\t\n\tvar _fullscreenApi = __webpack_require__(24);\n\t\n\tvar _fullscreenApi2 = _interopRequireDefault(_fullscreenApi);\n\t\n\tvar _mediaError = __webpack_require__(25);\n\t\n\tvar _mediaError2 = _interopRequireDefault(_mediaError);\n\t\n\tvar _tuple = __webpack_require__(26);\n\t\n\tvar _tuple2 = _interopRequireDefault(_tuple);\n\t\n\tvar _obj = __webpack_require__(12);\n\t\n\tvar _mergeOptions = __webpack_require__(19);\n\t\n\tvar _mergeOptions2 = _interopRequireDefault(_mergeOptions);\n\t\n\tvar _textTrackListConverter = __webpack_require__(27);\n\t\n\tvar _textTrackListConverter2 = _interopRequireDefault(_textTrackListConverter);\n\t\n\tvar _modalDialog = __webpack_require__(28);\n\t\n\tvar _modalDialog2 = _interopRequireDefault(_modalDialog);\n\t\n\tvar _tech = __webpack_require__(29);\n\t\n\tvar _tech2 = _interopRequireDefault(_tech);\n\t\n\tvar _audioTrackList = __webpack_require__(46);\n\t\n\tvar _audioTrackList2 = _interopRequireDefault(_audioTrackList);\n\t\n\tvar _videoTrackList = __webpack_require__(45);\n\t\n\tvar _videoTrackList2 = _interopRequireDefault(_videoTrackList);\n\t\n\t__webpack_require__(53);\n\t\n\t__webpack_require__(54);\n\t\n\t__webpack_require__(56);\n\t\n\t__webpack_require__(58);\n\t\n\t__webpack_require__(59);\n\t\n\t__webpack_require__(60);\n\t\n\t__webpack_require__(62);\n\t\n\t__webpack_require__(63);\n\t\n\t__webpack_require__(106);\n\t\n\t__webpack_require__(107);\n\t\n\t__webpack_require__(108);\n\t\n\tfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj['default'] = obj; return newObj; } }\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /**\n\t                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * @file player.js\n\t                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                */\n\t// Subclasses Component\n\t\n\t\n\t// The following imports are used only to ensure that the corresponding modules\n\t// are always included in the video.js package. Importing the modules will\n\t// execute them and they will register themselves with video.js.\n\t\n\t\n\t// Import Html5 tech, at least for disposing the original video tag.\n\t\n\t\n\t// The following tech events are simply re-triggered\n\t// on the player when they happen\n\tvar TECH_EVENTS_RETRIGGER = [\n\t/**\n\t * Fired while the user agent is downloading media data.\n\t *\n\t * @event Player#progress\n\t * @type {EventTarget~Event}\n\t */\n\t/**\n\t * Retrigger the `progress` event that was triggered by the {@link Tech}.\n\t *\n\t * @private\n\t * @method Player#handleTechProgress_\n\t * @fires Player#progress\n\t * @listens Tech#progress\n\t */\n\t'progress',\n\t\n\t/**\n\t * Fires when the loading of an audio/video is aborted.\n\t *\n\t * @event Player#abort\n\t * @type {EventTarget~Event}\n\t */\n\t/**\n\t * Retrigger the `abort` event that was triggered by the {@link Tech}.\n\t *\n\t * @private\n\t * @method Player#handleTechAbort_\n\t * @fires Player#abort\n\t * @listens Tech#abort\n\t */\n\t'abort',\n\t\n\t/**\n\t * Fires when the browser is intentionally not getting media data.\n\t *\n\t * @event Player#suspend\n\t * @type {EventTarget~Event}\n\t */\n\t/**\n\t * Retrigger the `suspend` event that was triggered by the {@link Tech}.\n\t *\n\t * @private\n\t * @method Player#handleTechSuspend_\n\t * @fires Player#suspend\n\t * @listens Tech#suspend\n\t */\n\t'suspend',\n\t\n\t/**\n\t * Fires when the current playlist is empty.\n\t *\n\t * @event Player#emptied\n\t * @type {EventTarget~Event}\n\t */\n\t/**\n\t * Retrigger the `emptied` event that was triggered by the {@link Tech}.\n\t *\n\t * @private\n\t * @method Player#handleTechEmptied_\n\t * @fires Player#emptied\n\t * @listens Tech#emptied\n\t */\n\t'emptied',\n\t/**\n\t * Fires when the browser is trying to get media data, but data is not available.\n\t *\n\t * @event Player#stalled\n\t * @type {EventTarget~Event}\n\t */\n\t/**\n\t * Retrigger the `stalled` event that was triggered by the {@link Tech}.\n\t *\n\t * @private\n\t * @method Player#handleTechStalled_\n\t * @fires Player#stalled\n\t * @listens Tech#stalled\n\t */\n\t'stalled',\n\t\n\t/**\n\t * Fires when the browser has loaded meta data for the audio/video.\n\t *\n\t * @event Player#loadedmetadata\n\t * @type {EventTarget~Event}\n\t */\n\t/**\n\t * Retrigger the `stalled` event that was triggered by the {@link Tech}.\n\t *\n\t * @private\n\t * @method Player#handleTechLoadedmetadata_\n\t * @fires Player#loadedmetadata\n\t * @listens Tech#loadedmetadata\n\t */\n\t'loadedmetadata',\n\t\n\t/**\n\t * Fires when the browser has loaded the current frame of the audio/video.\n\t *\n\t * @event player#loadeddata\n\t * @type {event}\n\t */\n\t/**\n\t * Retrigger the `loadeddata` event that was triggered by the {@link Tech}.\n\t *\n\t * @private\n\t * @method Player#handleTechLoaddeddata_\n\t * @fires Player#loadeddata\n\t * @listens Tech#loadeddata\n\t */\n\t'loadeddata',\n\t\n\t/**\n\t * Fires when the current playback position has changed.\n\t *\n\t * @event player#timeupdate\n\t * @type {event}\n\t */\n\t/**\n\t * Retrigger the `timeupdate` event that was triggered by the {@link Tech}.\n\t *\n\t * @private\n\t * @method Player#handleTechTimeUpdate_\n\t * @fires Player#timeupdate\n\t * @listens Tech#timeupdate\n\t */\n\t'timeupdate',\n\t\n\t/**\n\t * Fires when the playing speed of the audio/video is changed\n\t *\n\t * @event player#ratechange\n\t * @type {event}\n\t */\n\t/**\n\t * Retrigger the `ratechange` event that was triggered by the {@link Tech}.\n\t *\n\t * @private\n\t * @method Player#handleTechRatechange_\n\t * @fires Player#ratechange\n\t * @listens Tech#ratechange\n\t */\n\t'ratechange',\n\t\n\t/**\n\t * Fires when the volume has been changed\n\t *\n\t * @event player#volumechange\n\t * @type {event}\n\t */\n\t/**\n\t * Retrigger the `volumechange` event that was triggered by the {@link Tech}.\n\t *\n\t * @private\n\t * @method Player#handleTechVolumechange_\n\t * @fires Player#volumechange\n\t * @listens Tech#volumechange\n\t */\n\t'volumechange',\n\t\n\t/**\n\t * Fires when the text track has been changed\n\t *\n\t * @event player#texttrackchange\n\t * @type {event}\n\t */\n\t/**\n\t * Retrigger the `texttrackchange` event that was triggered by the {@link Tech}.\n\t *\n\t * @private\n\t * @method Player#handleTechTexttrackchange_\n\t * @fires Player#texttrackchange\n\t * @listens Tech#texttrackchange\n\t */\n\t'texttrackchange'];\n\t\n\t/**\n\t * An instance of the `Player` class is created when any of the Video.js setup methods\n\t * are used to initialize a video.\n\t *\n\t * After an instance has been created it can be accessed globally in two ways:\n\t * 1. By calling `videojs('example_video_1');`\n\t * 2. By using it directly via  `videojs.players.example_video_1;`\n\t *\n\t * @extends Component\n\t */\n\t\n\tvar Player = function (_Component) {\n\t  _inherits(Player, _Component);\n\t\n\t  /**\n\t   * Create an instance of this class.\n\t   *\n\t   * @param {Element} tag\n\t   *        The original video DOM element used for configuring options.\n\t   *\n\t   * @param {Object} [options]\n\t   *        Object of option names and values.\n\t   *\n\t   * @param {Component~ReadyCallback} [ready]\n\t   *        Ready callback function.\n\t   */\n\t  function Player(tag, options, ready) {\n\t    _classCallCheck(this, Player);\n\t\n\t    // Make sure tag ID exists\n\t    tag.id = tag.id || 'vjs_video_' + Guid.newGUID();\n\t\n\t    // Set Options\n\t    // The options argument overrides options set in the video tag\n\t    // which overrides globally set options.\n\t    // This latter part coincides with the load order\n\t    // (tag must exist before Player)\n\t    options = (0, _obj.assign)(Player.getTagSettings(tag), options);\n\t\n\t    // Delay the initialization of children because we need to set up\n\t    // player properties first, and can't use `this` before `super()`\n\t    options.initChildren = false;\n\t\n\t    // Same with creating the element\n\t    options.createEl = false;\n\t\n\t    // we don't want the player to report touch activity on itself\n\t    // see enableTouchActivity in Component\n\t    options.reportTouchActivity = false;\n\t\n\t    // If language is not set, get the closest lang attribute\n\t    if (!options.language) {\n\t      if (typeof tag.closest === 'function') {\n\t        var closest = tag.closest('[lang]');\n\t\n\t        if (closest) {\n\t          options.language = closest.getAttribute('lang');\n\t        }\n\t      } else {\n\t        var element = tag;\n\t\n\t        while (element && element.nodeType === 1) {\n\t          if (Dom.getElAttributes(element).hasOwnProperty('lang')) {\n\t            options.language = element.getAttribute('lang');\n\t            break;\n\t          }\n\t          element = element.parentNode;\n\t        }\n\t      }\n\t    }\n\t\n\t    // Run base component initializing with new options\n\t\n\t    // if the global option object was accidentally blown away by\n\t    // someone, bail early with an informative error\n\t    var _this = _possibleConstructorReturn(this, _Component.call(this, null, options, ready));\n\t\n\t    if (!_this.options_ || !_this.options_.techOrder || !_this.options_.techOrder.length) {\n\t      throw new Error('No techOrder specified. Did you overwrite ' + 'videojs.options instead of just changing the ' + 'properties you want to override?');\n\t    }\n\t\n\t    // Store the original tag used to set options\n\t    _this.tag = tag;\n\t\n\t    // Store the tag attributes used to restore html5 element\n\t    _this.tagAttributes = tag && Dom.getElAttributes(tag);\n\t\n\t    // Update current language\n\t    _this.language(_this.options_.language);\n\t\n\t    // Update Supported Languages\n\t    if (options.languages) {\n\t      (function () {\n\t        // Normalise player option languages to lowercase\n\t        var languagesToLower = {};\n\t\n\t        Object.getOwnPropertyNames(options.languages).forEach(function (name) {\n\t          languagesToLower[name.toLowerCase()] = options.languages[name];\n\t        });\n\t        _this.languages_ = languagesToLower;\n\t      })();\n\t    } else {\n\t      _this.languages_ = Player.prototype.options_.languages;\n\t    }\n\t\n\t    // Cache for video property values.\n\t    _this.cache_ = {};\n\t\n\t    // Set poster\n\t    _this.poster_ = options.poster || '';\n\t\n\t    // Set controls\n\t    _this.controls_ = !!options.controls;\n\t\n\t    // Original tag settings stored in options\n\t    // now remove immediately so native controls don't flash.\n\t    // May be turned back on by HTML5 tech if nativeControlsForTouch is true\n\t    tag.controls = false;\n\t\n\t    /*\n\t     * Store the internal state of scrubbing\n\t     *\n\t     * @private\n\t     * @return {Boolean} True if the user is scrubbing\n\t     */\n\t    _this.scrubbing_ = false;\n\t\n\t    _this.el_ = _this.createEl();\n\t\n\t    // We also want to pass the original player options to each component and plugin\n\t    // as well so they don't need to reach back into the player for options later.\n\t    // We also need to do another copy of this.options_ so we don't end up with\n\t    // an infinite loop.\n\t    var playerOptionsCopy = (0, _mergeOptions2['default'])(_this.options_);\n\t\n\t    // Load plugins\n\t    if (options.plugins) {\n\t      (function () {\n\t        var plugins = options.plugins;\n\t\n\t        Object.getOwnPropertyNames(plugins).forEach(function (name) {\n\t          if (typeof this[name] === 'function') {\n\t            this[name](plugins[name]);\n\t          } else {\n\t            _log2['default'].error('Unable to find plugin:', name);\n\t          }\n\t        }, _this);\n\t      })();\n\t    }\n\t\n\t    _this.options_.playerOptions = playerOptionsCopy;\n\t\n\t    _this.initChildren();\n\t\n\t    // Set isAudio based on whether or not an audio tag was used\n\t    _this.isAudio(tag.nodeName.toLowerCase() === 'audio');\n\t\n\t    // Update controls className. Can't do this when the controls are initially\n\t    // set because the element doesn't exist yet.\n\t    if (_this.controls()) {\n\t      _this.addClass('vjs-controls-enabled');\n\t    } else {\n\t      _this.addClass('vjs-controls-disabled');\n\t    }\n\t\n\t    // Set ARIA label and region role depending on player type\n\t    _this.el_.setAttribute('role', 'region');\n\t    if (_this.isAudio()) {\n\t      _this.el_.setAttribute('aria-label', 'audio player');\n\t    } else {\n\t      _this.el_.setAttribute('aria-label', 'video player');\n\t    }\n\t\n\t    if (_this.isAudio()) {\n\t      _this.addClass('vjs-audio');\n\t    }\n\t\n\t    if (_this.flexNotSupported_()) {\n\t      _this.addClass('vjs-no-flex');\n\t    }\n\t\n\t    // TODO: Make this smarter. Toggle user state between touching/mousing\n\t    // using events, since devices can have both touch and mouse events.\n\t    // if (browser.TOUCH_ENABLED) {\n\t    //   this.addClass('vjs-touch-enabled');\n\t    // }\n\t\n\t    // iOS Safari has broken hover handling\n\t    if (!browser.IS_IOS) {\n\t      _this.addClass('vjs-workinghover');\n\t    }\n\t\n\t    // Make player easily findable by ID\n\t    Player.players[_this.id_] = _this;\n\t\n\t    // When the player is first initialized, trigger activity so components\n\t    // like the control bar show themselves if needed\n\t    _this.userActive(true);\n\t    _this.reportUserActivity();\n\t    _this.listenForUserActivity_();\n\t\n\t    _this.on('fullscreenchange', _this.handleFullscreenChange_);\n\t    _this.on('stageclick', _this.handleStageClick_);\n\t    return _this;\n\t  }\n\t\n\t  /**\n\t   * Destroys the video player and does any necessary cleanup.\n\t   *\n\t   * This is especially helpful if you are dynamically adding and removing videos\n\t   * to/from the DOM.\n\t   *\n\t   * @fires Player#dispose\n\t   */\n\t\n\t\n\t  Player.prototype.dispose = function dispose() {\n\t    /**\n\t     * Called when the player is being disposed of.\n\t     *\n\t     * @event Player#dispose\n\t     * @type {EventTarget~Event}\n\t     */\n\t    this.trigger('dispose');\n\t    // prevent dispose from being called twice\n\t    this.off('dispose');\n\t\n\t    if (this.styleEl_ && this.styleEl_.parentNode) {\n\t      this.styleEl_.parentNode.removeChild(this.styleEl_);\n\t    }\n\t\n\t    // Kill reference to this player\n\t    Player.players[this.id_] = null;\n\t\n\t    if (this.tag && this.tag.player) {\n\t      this.tag.player = null;\n\t    }\n\t\n\t    if (this.el_ && this.el_.player) {\n\t      this.el_.player = null;\n\t    }\n\t\n\t    if (this.tech_) {\n\t      this.tech_.dispose();\n\t    }\n\t\n\t    _Component.prototype.dispose.call(this);\n\t  };\n\t\n\t  /**\n\t   * Create the `Player`'s DOM element.\n\t   *\n\t   * @return {Element}\n\t   *         The DOM element that gets created.\n\t   */\n\t\n\t\n\t  Player.prototype.createEl = function createEl() {\n\t    var tag = this.tag;\n\t    var el = void 0;\n\t    var playerElIngest = this.playerElIngest_ = tag.parentNode && tag.parentNode.hasAttribute && tag.parentNode.hasAttribute('data-vjs-player');\n\t\n\t    if (playerElIngest) {\n\t      el = this.el_ = tag.parentNode;\n\t    } else {\n\t      el = this.el_ = _Component.prototype.createEl.call(this, 'div');\n\t    }\n\t\n\t    // Remove width/height attrs from tag so CSS can make it 100% width/height\n\t    tag.removeAttribute('width');\n\t    tag.removeAttribute('height');\n\t\n\t    // Copy over all the attributes from the tag, including ID and class\n\t    // ID will now reference player box, not the video tag\n\t    var attrs = Dom.getElAttributes(tag);\n\t\n\t    Object.getOwnPropertyNames(attrs).forEach(function (attr) {\n\t      // workaround so we don't totally break IE7\n\t      // http://stackoverflow.com/questions/3653444/css-styles-not-applied-on-dynamic-elements-in-internet-explorer-7\n\t      if (attr === 'class') {\n\t        el.className += ' ' + attrs[attr];\n\t      } else {\n\t        el.setAttribute(attr, attrs[attr]);\n\t      }\n\t    });\n\t\n\t    // Update tag id/class for use as HTML5 playback tech\n\t    // Might think we should do this after embedding in container so .vjs-tech class\n\t    // doesn't flash 100% width/height, but class only applies with .video-js parent\n\t    tag.playerId = tag.id;\n\t    tag.id += '_html5_api';\n\t    tag.className = 'vjs-tech';\n\t\n\t    // Make player findable on elements\n\t    tag.player = el.player = this;\n\t    // Default state of video is paused\n\t    this.addClass('vjs-paused');\n\t\n\t    // Add a style element in the player that we'll use to set the width/height\n\t    // of the player in a way that's still overrideable by CSS, just like the\n\t    // video element\n\t    if (_window2['default'].VIDEOJS_NO_DYNAMIC_STYLE !== true) {\n\t      this.styleEl_ = stylesheet.createStyleElement('vjs-styles-dimensions');\n\t      var defaultsStyleEl = Dom.$('.vjs-styles-defaults');\n\t      var head = Dom.$('head');\n\t\n\t      head.insertBefore(this.styleEl_, defaultsStyleEl ? defaultsStyleEl.nextSibling : head.firstChild);\n\t    }\n\t\n\t    // Pass in the width/height/aspectRatio options which will update the style el\n\t    this.width(this.options_.width);\n\t    this.height(this.options_.height);\n\t    this.fluid(this.options_.fluid);\n\t    this.aspectRatio(this.options_.aspectRatio);\n\t\n\t    // Hide any links within the video/audio tag, because IE doesn't hide them completely.\n\t    var links = tag.getElementsByTagName('a');\n\t\n\t    for (var i = 0; i < links.length; i++) {\n\t      var linkEl = links.item(i);\n\t\n\t      Dom.addElClass(linkEl, 'vjs-hidden');\n\t      linkEl.setAttribute('hidden', 'hidden');\n\t    }\n\t\n\t    // insertElFirst seems to cause the networkState to flicker from 3 to 2, so\n\t    // keep track of the original for later so we can know if the source originally failed\n\t    tag.initNetworkState_ = tag.networkState;\n\t\n\t    // Wrap video tag in div (el/box) container\n\t    if (tag.parentNode && !playerElIngest) {\n\t      tag.parentNode.insertBefore(el, tag);\n\t    }\n\t\n\t    // insert the tag as the first child of the player element\n\t    // then manually add it to the children array so that this.addChild\n\t    // will work properly for other components\n\t    //\n\t    // Breaks iPhone, fixed in HTML5 setup.\n\t    Dom.insertElFirst(tag, el);\n\t    this.children_.unshift(tag);\n\t\n\t    this.el_ = el;\n\t\n\t    return el;\n\t  };\n\t\n\t  /**\n\t   * A getter/setter for the `Player`'s width.\n\t   *\n\t   * @param {number} [value]\n\t   *        The value to set the `Player's width to.\n\t   *\n\t   * @return {number}\n\t   *         The current width of the `Player`.\n\t   */\n\t\n\t\n\t  Player.prototype.width = function width(value) {\n\t    return this.dimension('width', value);\n\t  };\n\t\n\t  /**\n\t   * A getter/setter for the `Player`'s height.\n\t   *\n\t   * @param {number} [value]\n\t   *        The value to set the `Player's heigth to.\n\t   *\n\t   * @return {number}\n\t   *         The current heigth of the `Player`.\n\t   */\n\t\n\t\n\t  Player.prototype.height = function height(value) {\n\t    return this.dimension('height', value);\n\t  };\n\t\n\t  /**\n\t   * A getter/setter for the `Player`'s width & height.\n\t   *\n\t   * @param {string} dimension\n\t   *        This string can be:\n\t   *        - 'width'\n\t   *        - 'height'\n\t   *\n\t   * @param {number} [value]\n\t   *        Value for dimension specified in the first argument.\n\t   *\n\t   * @return {Player|number}\n\t   *         - Returns itself when setting; method can be chained.\n\t   *         - The dimension arguments value when getting (width/height).\n\t   */\n\t\n\t\n\t  Player.prototype.dimension = function dimension(_dimension, value) {\n\t    var privDimension = _dimension + '_';\n\t\n\t    if (value === undefined) {\n\t      return this[privDimension] || 0;\n\t    }\n\t\n\t    if (value === '') {\n\t      // If an empty string is given, reset the dimension to be automatic\n\t      this[privDimension] = undefined;\n\t    } else {\n\t      var parsedVal = parseFloat(value);\n\t\n\t      if (isNaN(parsedVal)) {\n\t        _log2['default'].error('Improper value \"' + value + '\" supplied for for ' + _dimension);\n\t        return this;\n\t      }\n\t\n\t      this[privDimension] = parsedVal;\n\t    }\n\t\n\t    this.updateStyleEl_();\n\t    return this;\n\t  };\n\t\n\t  /**\n\t   * A getter/setter/toggler for the vjs-fluid `className` on the `Player`.\n\t   *\n\t   * @param {boolean} [bool]\n\t   *        - A value of true adds the class.\n\t   *        - A value of false removes the class.\n\t   *        - No value will toggle the fluid class.\n\t   *\n\t   * @return {boolean|undefined}\n\t   *         - The value of fluid when getting.\n\t   *         - `undefined` when setting.\n\t   */\n\t\n\t\n\t  Player.prototype.fluid = function fluid(bool) {\n\t    if (bool === undefined) {\n\t      return !!this.fluid_;\n\t    }\n\t\n\t    this.fluid_ = !!bool;\n\t\n\t    if (bool) {\n\t      this.addClass('vjs-fluid');\n\t    } else {\n\t      this.removeClass('vjs-fluid');\n\t    }\n\t\n\t    this.updateStyleEl_();\n\t  };\n\t\n\t  /**\n\t   * Get/Set the aspect ratio\n\t   *\n\t   * @param {string} [ratio]\n\t   *        Aspect ratio for player\n\t   *\n\t   * @return {string|undefined}\n\t   *         returns the current aspect ratio when getting\n\t   */\n\t\n\t  /**\n\t   * A getter/setter for the `Player`'s aspect ratio.\n\t   *\n\t   * @param {string} [ratio]\n\t   *        The value to set the `Player's aspect ratio to.\n\t   *\n\t   * @return {string|undefined}\n\t   *         - The current aspect ratio of the `Player` when getting.\n\t   *         - undefined when setting\n\t   */\n\t\n\t\n\t  Player.prototype.aspectRatio = function aspectRatio(ratio) {\n\t    if (ratio === undefined) {\n\t      return this.aspectRatio_;\n\t    }\n\t\n\t    // Check for width:height format\n\t    if (!/^\\d+\\:\\d+$/.test(ratio)) {\n\t      throw new Error('Improper value supplied for aspect ratio. The format should be width:height, for example 16:9.');\n\t    }\n\t    this.aspectRatio_ = ratio;\n\t\n\t    // We're assuming if you set an aspect ratio you want fluid mode,\n\t    // because in fixed mode you could calculate width and height yourself.\n\t    this.fluid(true);\n\t\n\t    this.updateStyleEl_();\n\t  };\n\t\n\t  /**\n\t   * Update styles of the `Player` element (height, width and aspect ratio).\n\t   *\n\t   * @private\n\t   * @listens Tech#loadedmetadata\n\t   */\n\t\n\t\n\t  Player.prototype.updateStyleEl_ = function updateStyleEl_() {\n\t    if (_window2['default'].VIDEOJS_NO_DYNAMIC_STYLE === true) {\n\t      var _width = typeof this.width_ === 'number' ? this.width_ : this.options_.width;\n\t      var _height = typeof this.height_ === 'number' ? this.height_ : this.options_.height;\n\t      var techEl = this.tech_ && this.tech_.el();\n\t\n\t      if (techEl) {\n\t        if (_width >= 0) {\n\t          techEl.width = _width;\n\t        }\n\t        if (_height >= 0) {\n\t          techEl.height = _height;\n\t        }\n\t      }\n\t\n\t      return;\n\t    }\n\t\n\t    var width = void 0;\n\t    var height = void 0;\n\t    var aspectRatio = void 0;\n\t    var idClass = void 0;\n\t\n\t    // The aspect ratio is either used directly or to calculate width and height.\n\t    if (this.aspectRatio_ !== undefined && this.aspectRatio_ !== 'auto') {\n\t      // Use any aspectRatio that's been specifically set\n\t      aspectRatio = this.aspectRatio_;\n\t    } else if (this.videoWidth() > 0) {\n\t      // Otherwise try to get the aspect ratio from the video metadata\n\t      aspectRatio = this.videoWidth() + ':' + this.videoHeight();\n\t    } else {\n\t      // Or use a default. The video element's is 2:1, but 16:9 is more common.\n\t      aspectRatio = '16:9';\n\t    }\n\t\n\t    // Get the ratio as a decimal we can use to calculate dimensions\n\t    var ratioParts = aspectRatio.split(':');\n\t    var ratioMultiplier = ratioParts[1] / ratioParts[0];\n\t\n\t    if (this.width_ !== undefined) {\n\t      // Use any width that's been specifically set\n\t      width = this.width_;\n\t    } else if (this.height_ !== undefined) {\n\t      // Or calulate the width from the aspect ratio if a height has been set\n\t      width = this.height_ / ratioMultiplier;\n\t    } else {\n\t      // Or use the video's metadata, or use the video el's default of 300\n\t      width = this.videoWidth() || 300;\n\t    }\n\t\n\t    if (this.height_ !== undefined) {\n\t      // Use any height that's been specifically set\n\t      height = this.height_;\n\t    } else {\n\t      // Otherwise calculate the height from the ratio and the width\n\t      height = width * ratioMultiplier;\n\t    }\n\t\n\t    // Ensure the CSS class is valid by starting with an alpha character\n\t    if (/^[^a-zA-Z]/.test(this.id())) {\n\t      idClass = 'dimensions-' + this.id();\n\t    } else {\n\t      idClass = this.id() + '-dimensions';\n\t    }\n\t\n\t    // Ensure the right class is still on the player for the style element\n\t    this.addClass(idClass);\n\t\n\t    stylesheet.setTextContent(this.styleEl_, '\\n      .' + idClass + ' {\\n        width: ' + width + 'px;\\n        height: ' + height + 'px;\\n      }\\n\\n      .' + idClass + '.vjs-fluid {\\n        padding-top: ' + ratioMultiplier * 100 + '%;\\n      }\\n    ');\n\t  };\n\t\n\t  /**\n\t   * Load/Create an instance of playback {@link Tech} including element\n\t   * and API methods. Then append the `Tech` element in `Player` as a child.\n\t   *\n\t   * @param {string} techName\n\t   *        name of the playback technology\n\t   *\n\t   * @param {string} source\n\t   *        video source\n\t   *\n\t   * @private\n\t   */\n\t\n\t\n\t  Player.prototype.loadTech_ = function loadTech_(techName, source) {\n\t    var _this2 = this;\n\t\n\t    // Pause and remove current playback technology\n\t    if (this.tech_) {\n\t      this.unloadTech_();\n\t    }\n\t\n\t    // get rid of the HTML5 video tag as soon as we are using another tech\n\t    if (techName !== 'Html5' && this.tag) {\n\t      _tech2['default'].getTech('Html5').disposeMediaElement(this.tag);\n\t      this.tag.player = null;\n\t      this.tag = null;\n\t    }\n\t\n\t    this.techName_ = techName;\n\t\n\t    // Turn off API access because we're loading a new tech that might load asynchronously\n\t    this.isReady_ = false;\n\t\n\t    // Grab tech-specific options from player options and add source and parent element to use.\n\t    var techOptions = (0, _obj.assign)({\n\t      source: source,\n\t      'nativeControlsForTouch': this.options_.nativeControlsForTouch,\n\t      'playerId': this.id(),\n\t      'techId': this.id() + '_' + techName + '_api',\n\t      'videoTracks': this.videoTracks_,\n\t      'textTracks': this.textTracks_,\n\t      'audioTracks': this.audioTracks_,\n\t      'autoplay': this.options_.autoplay,\n\t      'preload': this.options_.preload,\n\t      'loop': this.options_.loop,\n\t      'muted': this.options_.muted,\n\t      'poster': this.poster(),\n\t      'language': this.language(),\n\t      'playerElIngest': this.playerElIngest_ || false,\n\t      'vtt.js': this.options_['vtt.js']\n\t    }, this.options_[techName.toLowerCase()]);\n\t\n\t    if (this.tag) {\n\t      techOptions.tag = this.tag;\n\t    }\n\t\n\t    if (source) {\n\t      this.currentType_ = source.type;\n\t\n\t      if (source.src === this.cache_.src && this.cache_.currentTime > 0) {\n\t        techOptions.startTime = this.cache_.currentTime;\n\t      }\n\t\n\t      this.cache_.sources = null;\n\t      this.cache_.source = source;\n\t      this.cache_.src = source.src;\n\t    }\n\t\n\t    // Initialize tech instance\n\t    var TechComponent = _tech2['default'].getTech(techName);\n\t\n\t    // Support old behavior of techs being registered as components.\n\t    // Remove once that deprecated behavior is removed.\n\t    if (!TechComponent) {\n\t      TechComponent = _component2['default'].getComponent(techName);\n\t    }\n\t    this.tech_ = new TechComponent(techOptions);\n\t\n\t    // player.triggerReady is always async, so don't need this to be async\n\t    this.tech_.ready(Fn.bind(this, this.handleTechReady_), true);\n\t\n\t    _textTrackListConverter2['default'].jsonToTextTracks(this.textTracksJson_ || [], this.tech_);\n\t\n\t    // Listen to all HTML5-defined events and trigger them on the player\n\t    TECH_EVENTS_RETRIGGER.forEach(function (event) {\n\t      _this2.on(_this2.tech_, event, _this2['handleTech' + (0, _toTitleCase2['default'])(event) + '_']);\n\t    });\n\t    this.on(this.tech_, 'loadstart', this.handleTechLoadStart_);\n\t    this.on(this.tech_, 'waiting', this.handleTechWaiting_);\n\t    this.on(this.tech_, 'canplay', this.handleTechCanPlay_);\n\t    this.on(this.tech_, 'canplaythrough', this.handleTechCanPlayThrough_);\n\t    this.on(this.tech_, 'playing', this.handleTechPlaying_);\n\t    this.on(this.tech_, 'ended', this.handleTechEnded_);\n\t    this.on(this.tech_, 'seeking', this.handleTechSeeking_);\n\t    this.on(this.tech_, 'seeked', this.handleTechSeeked_);\n\t    this.on(this.tech_, 'play', this.handleTechPlay_);\n\t    this.on(this.tech_, 'firstplay', this.handleTechFirstPlay_);\n\t    this.on(this.tech_, 'pause', this.handleTechPause_);\n\t    this.on(this.tech_, 'durationchange', this.handleTechDurationChange_);\n\t    this.on(this.tech_, 'fullscreenchange', this.handleTechFullscreenChange_);\n\t    this.on(this.tech_, 'error', this.handleTechError_);\n\t    this.on(this.tech_, 'loadedmetadata', this.updateStyleEl_);\n\t    this.on(this.tech_, 'posterchange', this.handleTechPosterChange_);\n\t    this.on(this.tech_, 'textdata', this.handleTechTextData_);\n\t\n\t    this.usingNativeControls(this.techGet_('controls'));\n\t\n\t    if (this.controls() && !this.usingNativeControls()) {\n\t      this.addTechControlsListeners_();\n\t    }\n\t\n\t    // Add the tech element in the DOM if it was not already there\n\t    // Make sure to not insert the original video element if using Html5\n\t    if (this.tech_.el().parentNode !== this.el() && (techName !== 'Html5' || !this.tag)) {\n\t      Dom.insertElFirst(this.tech_.el(), this.el());\n\t    }\n\t\n\t    // Get rid of the original video tag reference after the first tech is loaded\n\t    if (this.tag) {\n\t      this.tag.player = null;\n\t      this.tag = null;\n\t    }\n\t  };\n\t\n\t  /**\n\t   * Unload and dispose of the current playback {@link Tech}.\n\t   *\n\t   * @private\n\t   */\n\t\n\t\n\t  Player.prototype.unloadTech_ = function unloadTech_() {\n\t    // Save the current text tracks so that we can reuse the same text tracks with the next tech\n\t    this.videoTracks_ = this.videoTracks();\n\t    this.textTracks_ = this.textTracks();\n\t    this.audioTracks_ = this.audioTracks();\n\t    this.textTracksJson_ = _textTrackListConverter2['default'].textTracksToJson(this.tech_);\n\t\n\t    this.isReady_ = false;\n\t\n\t    this.tech_.dispose();\n\t\n\t    this.tech_ = false;\n\t  };\n\t\n\t  /**\n\t   * Return a reference to the current {@link Tech}, but only if given an object with the\n\t   * `IWillNotUseThisInPlugins` property having a true value. This is try and prevent misuse\n\t   * of techs by plugins.\n\t   *\n\t   * @param {Object} safety\n\t   *        An object that must contain `{IWillNotUseThisInPlugins: true}`\n\t   *\n\t   * @param {boolean} safety.IWillNotUseThisInPlugins\n\t   *        Must be set to true or else this function will throw an error.\n\t   *\n\t   * @return {Tech}\n\t   *         The Tech\n\t   */\n\t\n\t\n\t  Player.prototype.tech = function tech(safety) {\n\t    if (safety && safety.IWillNotUseThisInPlugins) {\n\t      return this.tech_;\n\t    }\n\t    var errorText = '\\n      Please make sure that you are not using this inside of a plugin.\\n      To disable this alert and error, please pass in an object with\\n      `IWillNotUseThisInPlugins` to the `tech` method. See\\n      https://github.com/videojs/video.js/issues/2617 for more info.\\n    ';\n\t\n\t    _window2['default'].alert(errorText);\n\t    throw new Error(errorText);\n\t  };\n\t\n\t  /**\n\t   * Set up click and touch listeners for the playback element\n\t   *\n\t   * - On desktops: a click on the video itself will toggle playback\n\t   * - On mobile devices: a click on the video toggles controls\n\t   *   which is done by toggling the user state between active and\n\t   *   inactive\n\t   * - A tap can signal that a user has become active or has become inactive\n\t   *   e.g. a quick tap on an iPhone movie should reveal the controls. Another\n\t   *   quick tap should hide them again (signaling the user is in an inactive\n\t   *   viewing state)\n\t   * - In addition to this, we still want the user to be considered inactive after\n\t   *   a few seconds of inactivity.\n\t   *\n\t   * > Note: the only part of iOS interaction we can't mimic with this setup\n\t   * is a touch and hold on the video element counting as activity in order to\n\t   * keep the controls showing, but that shouldn't be an issue. A touch and hold\n\t   * on any controls will still keep the user active\n\t   *\n\t   * @private\n\t   */\n\t\n\t\n\t  Player.prototype.addTechControlsListeners_ = function addTechControlsListeners_() {\n\t    // Make sure to remove all the previous listeners in case we are called multiple times.\n\t    this.removeTechControlsListeners_();\n\t\n\t    // Some browsers (Chrome & IE) don't trigger a click on a flash swf, but do\n\t    // trigger mousedown/up.\n\t    // http://stackoverflow.com/questions/1444562/javascript-onclick-event-over-flash-object\n\t    // Any touch events are set to block the mousedown event from happening\n\t    this.on(this.tech_, 'mousedown', this.handleTechClick_);\n\t\n\t    // If the controls were hidden we don't want that to change without a tap event\n\t    // so we'll check if the controls were already showing before reporting user\n\t    // activity\n\t    this.on(this.tech_, 'touchstart', this.handleTechTouchStart_);\n\t    this.on(this.tech_, 'touchmove', this.handleTechTouchMove_);\n\t    this.on(this.tech_, 'touchend', this.handleTechTouchEnd_);\n\t\n\t    // The tap listener needs to come after the touchend listener because the tap\n\t    // listener cancels out any reportedUserActivity when setting userActive(false)\n\t    this.on(this.tech_, 'tap', this.handleTechTap_);\n\t  };\n\t\n\t  /**\n\t   * Remove the listeners used for click and tap controls. This is needed for\n\t   * toggling to controls disabled, where a tap/touch should do nothing.\n\t   *\n\t   * @private\n\t   */\n\t\n\t\n\t  Player.prototype.removeTechControlsListeners_ = function removeTechControlsListeners_() {\n\t    // We don't want to just use `this.off()` because there might be other needed\n\t    // listeners added by techs that extend this.\n\t    this.off(this.tech_, 'tap', this.handleTechTap_);\n\t    this.off(this.tech_, 'touchstart', this.handleTechTouchStart_);\n\t    this.off(this.tech_, 'touchmove', this.handleTechTouchMove_);\n\t    this.off(this.tech_, 'touchend', this.handleTechTouchEnd_);\n\t    this.off(this.tech_, 'mousedown', this.handleTechClick_);\n\t  };\n\t\n\t  /**\n\t   * Player waits for the tech to be ready\n\t   *\n\t   * @private\n\t   */\n\t\n\t\n\t  Player.prototype.handleTechReady_ = function handleTechReady_() {\n\t    this.triggerReady();\n\t\n\t    // Keep the same volume as before\n\t    if (this.cache_.volume) {\n\t      this.techCall_('setVolume', this.cache_.volume);\n\t    }\n\t\n\t    // Look if the tech found a higher resolution poster while loading\n\t    this.handleTechPosterChange_();\n\t\n\t    // Update the duration if available\n\t    this.handleTechDurationChange_();\n\t\n\t    // Chrome and Safari both have issues with autoplay.\n\t    // In Safari (5.1.1), when we move the video element into the container div, autoplay doesn't work.\n\t    // In Chrome (15), if you have autoplay + a poster + no controls, the video gets hidden (but audio plays)\n\t    // This fixes both issues. Need to wait for API, so it updates displays correctly\n\t    if ((this.src() || this.currentSrc()) && this.tag && this.options_.autoplay && this.paused()) {\n\t      try {\n\t        // Chrome Fix. Fixed in Chrome v16.\n\t        delete this.tag.poster;\n\t      } catch (e) {\n\t        (0, _log2['default'])('deleting tag.poster throws in some browsers', e);\n\t      }\n\t      this.play();\n\t    }\n\t  };\n\t\n\t  /**\n\t   * Retrigger the `loadstart` event that was triggered by the {@link Tech}. This\n\t   * function will also trigger {@link Player#firstplay} if it is the first loadstart\n\t   * for a video.\n\t   *\n\t   * @fires Player#loadstart\n\t   * @fires Player#firstplay\n\t   * @listens Tech#loadstart\n\t   * @private\n\t   */\n\t\n\t\n\t  Player.prototype.handleTechLoadStart_ = function handleTechLoadStart_() {\n\t    // TODO: Update to use `emptied` event instead. See #1277.\n\t\n\t    this.removeClass('vjs-ended');\n\t    this.removeClass('vjs-seeking');\n\t\n\t    // reset the error state\n\t    this.error(null);\n\t\n\t    // If it's already playing we want to trigger a firstplay event now.\n\t    // The firstplay event relies on both the play and loadstart events\n\t    // which can happen in any order for a new source\n\t    if (!this.paused()) {\n\t      /**\n\t       * Fired when the user agent begins looking for media data\n\t       *\n\t       * @event Player#loadstart\n\t       * @type {EventTarget~Event}\n\t       */\n\t      this.trigger('loadstart');\n\t      this.trigger('firstplay');\n\t    } else {\n\t      // reset the hasStarted state\n\t      this.hasStarted(false);\n\t      this.trigger('loadstart');\n\t    }\n\t  };\n\t\n\t  /**\n\t   * Add/remove the vjs-has-started class\n\t   *\n\t   * @fires Player#firstplay\n\t   *\n\t   * @param {boolean} hasStarted\n\t   *        - true: adds the class\n\t   *        - false: remove the class\n\t   *\n\t   * @return {boolean}\n\t   *         the boolean value of hasStarted\n\t   */\n\t\n\t\n\t  Player.prototype.hasStarted = function hasStarted(_hasStarted) {\n\t    if (_hasStarted !== undefined) {\n\t      // only update if this is a new value\n\t      if (this.hasStarted_ !== _hasStarted) {\n\t        this.hasStarted_ = _hasStarted;\n\t        if (_hasStarted) {\n\t          this.addClass('vjs-has-started');\n\t          // trigger the firstplay event if this newly has played\n\t          this.trigger('firstplay');\n\t        } else {\n\t          this.removeClass('vjs-has-started');\n\t        }\n\t      }\n\t      return this;\n\t    }\n\t    return !!this.hasStarted_;\n\t  };\n\t\n\t  /**\n\t   * Fired whenever the media begins or resumes playback\n\t   *\n\t   * @see [Spec]{@link https://html.spec.whatwg.org/multipage/embedded-content.html#dom-media-play}\n\t   * @fires Player#play\n\t   * @listens Tech#play\n\t   * @private\n\t   */\n\t\n\t\n\t  Player.prototype.handleTechPlay_ = function handleTechPlay_() {\n\t    this.removeClass('vjs-ended');\n\t    this.removeClass('vjs-paused');\n\t    this.addClass('vjs-playing');\n\t\n\t    // hide the poster when the user hits play\n\t    this.hasStarted(true);\n\t    /**\n\t     * Triggered whenever an {@link Tech#play} event happens. Indicates that\n\t     * playback has started or resumed.\n\t     *\n\t     * @event Player#play\n\t     * @type {EventTarget~Event}\n\t     */\n\t    this.trigger('play');\n\t  };\n\t\n\t  /**\n\t   * Retrigger the `waiting` event that was triggered by the {@link Tech}.\n\t   *\n\t   * @fires Player#waiting\n\t   * @listens Tech#waiting\n\t   * @private\n\t   */\n\t\n\t\n\t  Player.prototype.handleTechWaiting_ = function handleTechWaiting_() {\n\t    var _this3 = this;\n\t\n\t    this.addClass('vjs-waiting');\n\t    /**\n\t     * A readyState change on the DOM element has caused playback to stop.\n\t     *\n\t     * @event Player#waiting\n\t     * @type {EventTarget~Event}\n\t     */\n\t    this.trigger('waiting');\n\t    this.one('timeupdate', function () {\n\t      return _this3.removeClass('vjs-waiting');\n\t    });\n\t  };\n\t\n\t  /**\n\t   * Retrigger the `canplay` event that was triggered by the {@link Tech}.\n\t   * > Note: This is not consistent between browsers. See #1351\n\t   *\n\t   * @fires Player#canplay\n\t   * @listens Tech#canplay\n\t   * @private\n\t   */\n\t\n\t\n\t  Player.prototype.handleTechCanPlay_ = function handleTechCanPlay_() {\n\t    this.removeClass('vjs-waiting');\n\t    /**\n\t     * The media has a readyState of HAVE_FUTURE_DATA or greater.\n\t     *\n\t     * @event Player#canplay\n\t     * @type {EventTarget~Event}\n\t     */\n\t    this.trigger('canplay');\n\t  };\n\t\n\t  /**\n\t   * Retrigger the `canplaythrough` event that was triggered by the {@link Tech}.\n\t   *\n\t   * @fires Player#canplaythrough\n\t   * @listens Tech#canplaythrough\n\t   * @private\n\t   */\n\t\n\t\n\t  Player.prototype.handleTechCanPlayThrough_ = function handleTechCanPlayThrough_() {\n\t    this.removeClass('vjs-waiting');\n\t    /**\n\t     * The media has a readyState of HAVE_ENOUGH_DATA or greater. This means that the\n\t     * entire media file can be played without buffering.\n\t     *\n\t     * @event Player#canplaythrough\n\t     * @type {EventTarget~Event}\n\t     */\n\t    this.trigger('canplaythrough');\n\t  };\n\t\n\t  /**\n\t   * Retrigger the `playing` event that was triggered by the {@link Tech}.\n\t   *\n\t   * @fires Player#playing\n\t   * @listens Tech#playing\n\t   * @private\n\t   */\n\t\n\t\n\t  Player.prototype.handleTechPlaying_ = function handleTechPlaying_() {\n\t    this.removeClass('vjs-waiting');\n\t    /**\n\t     * The media is no longer blocked from playback, and has started playing.\n\t     *\n\t     * @event Player#playing\n\t     * @type {EventTarget~Event}\n\t     */\n\t    this.trigger('playing');\n\t  };\n\t\n\t  /**\n\t   * Retrigger the `seeking` event that was triggered by the {@link Tech}.\n\t   *\n\t   * @fires Player#seeking\n\t   * @listens Tech#seeking\n\t   * @private\n\t   */\n\t\n\t\n\t  Player.prototype.handleTechSeeking_ = function handleTechSeeking_() {\n\t    this.addClass('vjs-seeking');\n\t    /**\n\t     * Fired whenever the player is jumping to a new time\n\t     *\n\t     * @event Player#seeking\n\t     * @type {EventTarget~Event}\n\t     */\n\t    this.trigger('seeking');\n\t  };\n\t\n\t  /**\n\t   * Retrigger the `seeked` event that was triggered by the {@link Tech}.\n\t   *\n\t   * @fires Player#seeked\n\t   * @listens Tech#seeked\n\t   * @private\n\t   */\n\t\n\t\n\t  Player.prototype.handleTechSeeked_ = function handleTechSeeked_() {\n\t    this.removeClass('vjs-seeking');\n\t    /**\n\t     * Fired when the player has finished jumping to a new time\n\t     *\n\t     * @event Player#seeked\n\t     * @type {EventTarget~Event}\n\t     */\n\t    this.trigger('seeked');\n\t  };\n\t\n\t  /**\n\t   * Retrigger the `firstplay` event that was triggered by the {@link Tech}.\n\t   *\n\t   * @fires Player#firstplay\n\t   * @listens Tech#firstplay\n\t   * @deprecated As of 6.0 passing the `starttime` option to the player will be deprecated\n\t   * @private\n\t   */\n\t\n\t\n\t  Player.prototype.handleTechFirstPlay_ = function handleTechFirstPlay_() {\n\t    // If the first starttime attribute is specified\n\t    // then we will start at the given offset in seconds\n\t    if (this.options_.starttime) {\n\t      _log2['default'].warn('Passing the `starttime` option to the player will be deprecated in 6.0');\n\t      this.currentTime(this.options_.starttime);\n\t    }\n\t\n\t    this.addClass('vjs-has-started');\n\t    /**\n\t     * Fired the first time a video is played. Not part of the HLS spec, and this is\n\t     * probably not the best implementation yet, so use sparingly. If you don't have a\n\t     * reason to prevent playback, use `myPlayer.one('play');` instead.\n\t     *\n\t     * @event Player#firstplay\n\t     * @type {EventTarget~Event}\n\t     */\n\t    this.trigger('firstplay');\n\t  };\n\t\n\t  /**\n\t   * Retrigger the `pause` event that was triggered by the {@link Tech}.\n\t   *\n\t   * @fires Player#pause\n\t   * @listens Tech#pause\n\t   * @private\n\t   */\n\t\n\t\n\t  Player.prototype.handleTechPause_ = function handleTechPause_() {\n\t    this.removeClass('vjs-playing');\n\t    this.addClass('vjs-paused');\n\t    /**\n\t     * Fired whenever the media has been paused\n\t     *\n\t     * @event Player#pause\n\t     * @type {EventTarget~Event}\n\t     */\n\t    this.trigger('pause');\n\t  };\n\t\n\t  /**\n\t   * Retrigger the `ended` event that was triggered by the {@link Tech}.\n\t   *\n\t   * @fires Player#ended\n\t   * @listens Tech#ended\n\t   * @private\n\t   */\n\t\n\t\n\t  Player.prototype.handleTechEnded_ = function handleTechEnded_() {\n\t    this.addClass('vjs-ended');\n\t    if (this.options_.loop) {\n\t      this.currentTime(0);\n\t      this.play();\n\t    } else if (!this.paused()) {\n\t      this.pause();\n\t    }\n\t\n\t    /**\n\t     * Fired when the end of the media resource is reached (currentTime == duration)\n\t     *\n\t     * @event Player#ended\n\t     * @type {EventTarget~Event}\n\t     */\n\t    this.trigger('ended');\n\t  };\n\t\n\t  /**\n\t   * Fired when the duration of the media resource is first known or changed\n\t   *\n\t   * @listens Tech#durationchange\n\t   * @private\n\t   */\n\t\n\t\n\t  Player.prototype.handleTechDurationChange_ = function handleTechDurationChange_() {\n\t    this.duration(this.techGet_('duration'));\n\t  };\n\t\n\t  /**\n\t   * Handle a click on the media element to play/pause\n\t   *\n\t   * @param {EventTarget~Event} event\n\t   *        the event that caused this function to trigger\n\t   *\n\t   * @listens Tech#mousedown\n\t   * @private\n\t   */\n\t\n\t\n\t  Player.prototype.handleTechClick_ = function handleTechClick_(event) {\n\t    // We're using mousedown to detect clicks thanks to Flash, but mousedown\n\t    // will also be triggered with right-clicks, so we need to prevent that\n\t    if (event.button !== 0) {\n\t      return;\n\t    }\n\t\n\t    // When controls are disabled a click should not toggle playback because\n\t    // the click is considered a control\n\t    if (this.controls()) {\n\t      if (this.paused()) {\n\t        this.play();\n\t      } else {\n\t        this.pause();\n\t      }\n\t    }\n\t  };\n\t\n\t  /**\n\t   * Handle a tap on the media element. It will toggle the user\n\t   * activity state, which hides and shows the controls.\n\t   *\n\t   * @listens Tech#tap\n\t   * @private\n\t   */\n\t\n\t\n\t  Player.prototype.handleTechTap_ = function handleTechTap_() {\n\t    this.userActive(!this.userActive());\n\t  };\n\t\n\t  /**\n\t   * Handle touch to start\n\t   *\n\t   * @listens Tech#touchstart\n\t   * @private\n\t   */\n\t\n\t\n\t  Player.prototype.handleTechTouchStart_ = function handleTechTouchStart_() {\n\t    this.userWasActive = this.userActive();\n\t  };\n\t\n\t  /**\n\t   * Handle touch to move\n\t   *\n\t   * @listens Tech#touchmove\n\t   * @private\n\t   */\n\t\n\t\n\t  Player.prototype.handleTechTouchMove_ = function handleTechTouchMove_() {\n\t    if (this.userWasActive) {\n\t      this.reportUserActivity();\n\t    }\n\t  };\n\t\n\t  /**\n\t   * Handle touch to end\n\t   *\n\t   * @param {EventTarget~Event} event\n\t   *        the touchend event that triggered\n\t   *        this function\n\t   *\n\t   * @listens Tech#touchend\n\t   * @private\n\t   */\n\t\n\t\n\t  Player.prototype.handleTechTouchEnd_ = function handleTechTouchEnd_(event) {\n\t    // Stop the mouse events from also happening\n\t    event.preventDefault();\n\t  };\n\t\n\t  /**\n\t   * Fired when the player switches in or out of fullscreen mode\n\t   *\n\t   * @private\n\t   * @listens Player#fullscreenchange\n\t   */\n\t\n\t\n\t  Player.prototype.handleFullscreenChange_ = function handleFullscreenChange_() {\n\t    if (this.isFullscreen()) {\n\t      this.addClass('vjs-fullscreen');\n\t    } else {\n\t      this.removeClass('vjs-fullscreen');\n\t    }\n\t  };\n\t\n\t  /**\n\t   * native click events on the SWF aren't triggered on IE11, Win8.1RT\n\t   * use stageclick events triggered from inside the SWF instead\n\t   *\n\t   * @private\n\t   * @listens stageclick\n\t   */\n\t\n\t\n\t  Player.prototype.handleStageClick_ = function handleStageClick_() {\n\t    this.reportUserActivity();\n\t  };\n\t\n\t  /**\n\t   * Handle Tech Fullscreen Change\n\t   *\n\t   * @param {EventTarget~Event} event\n\t   *        the fullscreenchange event that triggered this function\n\t   *\n\t   * @param {Object} data\n\t   *        the data that was sent with the event\n\t   *\n\t   * @private\n\t   * @listens Tech#fullscreenchange\n\t   * @fires Player#fullscreenchange\n\t   */\n\t\n\t\n\t  Player.prototype.handleTechFullscreenChange_ = function handleTechFullscreenChange_(event, data) {\n\t    if (data) {\n\t      this.isFullscreen(data.isFullscreen);\n\t    }\n\t    /**\n\t     * Fired when going in and out of fullscreen.\n\t     *\n\t     * @event Player#fullscreenchange\n\t     * @type {EventTarget~Event}\n\t     */\n\t    this.trigger('fullscreenchange');\n\t  };\n\t\n\t  /**\n\t   * Fires when an error occurred during the loading of an audio/video.\n\t   *\n\t   * @private\n\t   * @listens Tech#error\n\t   */\n\t\n\t\n\t  Player.prototype.handleTechError_ = function handleTechError_() {\n\t    var error = this.tech_.error();\n\t\n\t    this.error(error);\n\t  };\n\t\n\t  /**\n\t   * Retrigger the `textdata` event that was triggered by the {@link Tech}.\n\t   *\n\t   * @fires Player#textdata\n\t   * @listens Tech#textdata\n\t   * @private\n\t   */\n\t\n\t\n\t  Player.prototype.handleTechTextData_ = function handleTechTextData_() {\n\t    var data = null;\n\t\n\t    if (arguments.length > 1) {\n\t      data = arguments[1];\n\t    }\n\t\n\t    /**\n\t     * Fires when we get a textdata event from tech\n\t     *\n\t     * @event Player#textdata\n\t     * @type {EventTarget~Event}\n\t     */\n\t    this.trigger('textdata', data);\n\t  };\n\t\n\t  /**\n\t   * Get object for cached values.\n\t   *\n\t   * @return {Object}\n\t   *         get the current object cache\n\t   */\n\t\n\t\n\t  Player.prototype.getCache = function getCache() {\n\t    return this.cache_;\n\t  };\n\t\n\t  /**\n\t   * Pass values to the playback tech\n\t   *\n\t   * @param {string} [method]\n\t   *        the method to call\n\t   *\n\t   * @param {Object} arg\n\t   *        the argument to pass\n\t   *\n\t   * @private\n\t   */\n\t\n\t\n\t  Player.prototype.techCall_ = function techCall_(method, arg) {\n\t    // If it's not ready yet, call method when it is\n\t    if (this.tech_ && !this.tech_.isReady_) {\n\t      this.tech_.ready(function () {\n\t        this[method](arg);\n\t      }, true);\n\t\n\t      // Otherwise call method now\n\t    } else {\n\t      try {\n\t        if (this.tech_) {\n\t          this.tech_[method](arg);\n\t        }\n\t      } catch (e) {\n\t        (0, _log2['default'])(e);\n\t        throw e;\n\t      }\n\t    }\n\t  };\n\t\n\t  /**\n\t   * Get calls can't wait for the tech, and sometimes don't need to.\n\t   *\n\t   * @param {string} method\n\t   *        Tech method\n\t   *\n\t   * @return {Function|undefined}\n\t   *         the method or undefined\n\t   *\n\t   * @private\n\t   */\n\t\n\t\n\t  Player.prototype.techGet_ = function techGet_(method) {\n\t    if (this.tech_ && this.tech_.isReady_) {\n\t\n\t      // Flash likes to die and reload when you hide or reposition it.\n\t      // In these cases the object methods go away and we get errors.\n\t      // When that happens we'll catch the errors and inform tech that it's not ready any more.\n\t      try {\n\t        return this.tech_[method]();\n\t      } catch (e) {\n\t        // When building additional tech libs, an expected method may not be defined yet\n\t        if (this.tech_[method] === undefined) {\n\t          (0, _log2['default'])('Video.js: ' + method + ' method not defined for ' + this.techName_ + ' playback technology.', e);\n\t\n\t          // When a method isn't available on the object it throws a TypeError\n\t        } else if (e.name === 'TypeError') {\n\t          (0, _log2['default'])('Video.js: ' + method + ' unavailable on ' + this.techName_ + ' playback technology element.', e);\n\t          this.tech_.isReady_ = false;\n\t        } else {\n\t          (0, _log2['default'])(e);\n\t        }\n\t        throw e;\n\t      }\n\t    }\n\t\n\t    return;\n\t  };\n\t\n\t  /**\n\t   * start media playback\n\t   *\n\t   * @return {Player}\n\t   *         A reference to the player object this function was called on\n\t   */\n\t\n\t\n\t  Player.prototype.play = function play() {\n\t    // Only calls the tech's play if we already have a src loaded\n\t    if (this.src() || this.currentSrc()) {\n\t      this.techCall_('play');\n\t    } else {\n\t      this.tech_.one('loadstart', function () {\n\t        this.play();\n\t      });\n\t    }\n\t\n\t    return this;\n\t  };\n\t\n\t  /**\n\t   * Pause the video playback\n\t   *\n\t   * @return {Player}\n\t   *         A reference to the player object this function was called on\n\t   */\n\t\n\t\n\t  Player.prototype.pause = function pause() {\n\t    this.techCall_('pause');\n\t    return this;\n\t  };\n\t\n\t  /**\n\t   * Check if the player is paused or has yet to play\n\t   *\n\t   * @return {boolean}\n\t   *         - false: if the media is currently playing\n\t   *         - true: if media is not currently playing\n\t   */\n\t\n\t\n\t  Player.prototype.paused = function paused() {\n\t    // The initial state of paused should be true (in Safari it's actually false)\n\t    return this.techGet_('paused') === false ? false : true;\n\t  };\n\t\n\t  /**\n\t   * Returns whether or not the user is \"scrubbing\". Scrubbing is\n\t   * when the user has clicked the progress bar handle and is\n\t   * dragging it along the progress bar.\n\t   *\n\t   * @param {boolean} [isScrubbing]\n\t   *        wether the user is or is not scrubbing\n\t   *\n\t   * @return {boolean|Player}\n\t   *         A instance of the player that called this function when setting,\n\t   *         and the value of scrubbing when getting\n\t   */\n\t\n\t\n\t  Player.prototype.scrubbing = function scrubbing(isScrubbing) {\n\t    if (isScrubbing !== undefined) {\n\t      this.scrubbing_ = !!isScrubbing;\n\t\n\t      if (isScrubbing) {\n\t        this.addClass('vjs-scrubbing');\n\t      } else {\n\t        this.removeClass('vjs-scrubbing');\n\t      }\n\t\n\t      return this;\n\t    }\n\t\n\t    return this.scrubbing_;\n\t  };\n\t\n\t  /**\n\t   * Get or set the current time (in seconds)\n\t   *\n\t   * @param {number|string} [seconds]\n\t   *        The time to seek to in seconds\n\t   *\n\t   * @return {Player|number}\n\t   *         - the current time in seconds when getting\n\t   *         - a reference to the current player object when setting\n\t   */\n\t\n\t\n\t  Player.prototype.currentTime = function currentTime(seconds) {\n\t    if (seconds !== undefined) {\n\t\n\t      this.techCall_('setCurrentTime', seconds);\n\t\n\t      return this;\n\t    }\n\t\n\t    // cache last currentTime and return. default to 0 seconds\n\t    //\n\t    // Caching the currentTime is meant to prevent a massive amount of reads on the tech's\n\t    // currentTime when scrubbing, but may not provide much performance benefit afterall.\n\t    // Should be tested. Also something has to read the actual current time or the cache will\n\t    // never get updated.\n\t    this.cache_.currentTime = this.techGet_('currentTime') || 0;\n\t    return this.cache_.currentTime;\n\t  };\n\t\n\t  /**\n\t   * Normally gets the length in time of the video in seconds;\n\t   * in all but the rarest use cases an argument will NOT be passed to the method\n\t   *\n\t   * > **NOTE**: The video must have started loading before the duration can be\n\t   * known, and in the case of Flash, may not be known until the video starts\n\t   * playing.\n\t   *\n\t   * @fires Player#durationchange\n\t   *\n\t   * @param {number} [seconds]\n\t   *        The duration of the video to set in seconds\n\t   *\n\t   * @return {number|Player}\n\t   *         - The duration of the video in seconds when getting\n\t   *         - A reference to the player that called this function\n\t   *           when setting\n\t   */\n\t\n\t\n\t  Player.prototype.duration = function duration(seconds) {\n\t    if (seconds === undefined) {\n\t      return this.cache_.duration || 0;\n\t    }\n\t\n\t    seconds = parseFloat(seconds) || 0;\n\t\n\t    // Standardize on Inifity for signaling video is live\n\t    if (seconds < 0) {\n\t      seconds = Infinity;\n\t    }\n\t\n\t    if (seconds !== this.cache_.duration) {\n\t      // Cache the last set value for optimized scrubbing (esp. Flash)\n\t      this.cache_.duration = seconds;\n\t\n\t      if (seconds === Infinity) {\n\t        this.addClass('vjs-live');\n\t      } else {\n\t        this.removeClass('vjs-live');\n\t      }\n\t      /**\n\t       * @event Player#durationchange\n\t       * @type {EventTarget~Event}\n\t       */\n\t      this.trigger('durationchange');\n\t    }\n\t\n\t    return this;\n\t  };\n\t\n\t  /**\n\t   * Calculates how much time is left in the video. Not part\n\t   * of the native video API.\n\t   *\n\t   * @return {number}\n\t   *         The time remaining in seconds\n\t   */\n\t\n\t\n\t  Player.prototype.remainingTime = function remainingTime() {\n\t    return this.duration() - this.currentTime();\n\t  };\n\t\n\t  //\n\t  // Kind of like an array of portions of the video that have been downloaded.\n\t\n\t  /**\n\t   * Get a TimeRange object with an array of the times of the video\n\t   * that have been downloaded. If you just want the percent of the\n\t   * video that's been downloaded, use bufferedPercent.\n\t   *\n\t   * @see [Buffered Spec]{@link http://dev.w3.org/html5/spec/video.html#dom-media-buffered}\n\t   *\n\t   * @return {TimeRange}\n\t   *         A mock TimeRange object (following HTML spec)\n\t   */\n\t\n\t\n\t  Player.prototype.buffered = function buffered() {\n\t    var buffered = this.techGet_('buffered');\n\t\n\t    if (!buffered || !buffered.length) {\n\t      buffered = (0, _timeRanges.createTimeRange)(0, 0);\n\t    }\n\t\n\t    return buffered;\n\t  };\n\t\n\t  /**\n\t   * Get the percent (as a decimal) of the video that's been downloaded.\n\t   * This method is not a part of the native HTML video API.\n\t   *\n\t   * @return {number}\n\t   *         A decimal between 0 and 1 representing the percent\n\t   *         that is bufferred 0 being 0% and 1 being 100%\n\t   */\n\t\n\t\n\t  Player.prototype.bufferedPercent = function bufferedPercent() {\n\t    return (0, _buffer.bufferedPercent)(this.buffered(), this.duration());\n\t  };\n\t\n\t  /**\n\t   * Get the ending time of the last buffered time range\n\t   * This is used in the progress bar to encapsulate all time ranges.\n\t   *\n\t   * @return {number}\n\t   *         The end of the last buffered time range\n\t   */\n\t\n\t\n\t  Player.prototype.bufferedEnd = function bufferedEnd() {\n\t    var buffered = this.buffered();\n\t    var duration = this.duration();\n\t    var end = buffered.end(buffered.length - 1);\n\t\n\t    if (end > duration) {\n\t      end = duration;\n\t    }\n\t\n\t    return end;\n\t  };\n\t\n\t  /**\n\t   * Get or set the current volume of the media\n\t   *\n\t   * @param  {number} [percentAsDecimal]\n\t   *         The new volume as a decimal percent:\n\t   *         - 0 is muted/0%/off\n\t   *         - 1.0 is 100%/full\n\t   *         - 0.5 is half volume or 50%\n\t   *\n\t   * @return {Player|number}\n\t   *         a reference to the calling player when setting and the\n\t   *         current volume as a percent when getting\n\t   */\n\t\n\t\n\t  Player.prototype.volume = function volume(percentAsDecimal) {\n\t    var vol = void 0;\n\t\n\t    if (percentAsDecimal !== undefined) {\n\t      // Force value to between 0 and 1\n\t      vol = Math.max(0, Math.min(1, parseFloat(percentAsDecimal)));\n\t      this.cache_.volume = vol;\n\t      this.techCall_('setVolume', vol);\n\t\n\t      return this;\n\t    }\n\t\n\t    // Default to 1 when returning current volume.\n\t    vol = parseFloat(this.techGet_('volume'));\n\t    return isNaN(vol) ? 1 : vol;\n\t  };\n\t\n\t  /**\n\t   * Get the current muted state, or turn mute on or off\n\t   *\n\t   * @param {boolean} [muted]\n\t   *        - true to mute\n\t   *        - false to unmute\n\t   *\n\t   * @return {boolean|Player}\n\t   *         - true if mute is on and getting\n\t   *         - false if mute is off and getting\n\t   *         - A reference to the current player when setting\n\t   */\n\t\n\t\n\t  Player.prototype.muted = function muted(_muted) {\n\t    if (_muted !== undefined) {\n\t      this.techCall_('setMuted', _muted);\n\t      return this;\n\t    }\n\t    return this.techGet_('muted') || false;\n\t  };\n\t\n\t  /**\n\t   * Check if current tech can support native fullscreen\n\t   * (e.g. with built in controls like iOS, so not our flash swf)\n\t   *\n\t   * @return {boolean}\n\t   *         if native fullscreen is supported\n\t   */\n\t\n\t\n\t  Player.prototype.supportsFullScreen = function supportsFullScreen() {\n\t    return this.techGet_('supportsFullScreen') || false;\n\t  };\n\t\n\t  /**\n\t   * Check if the player is in fullscreen mode or tell the player that it\n\t   * is or is not in fullscreen mode.\n\t   *\n\t   * > NOTE: As of the latest HTML5 spec, isFullscreen is no longer an official\n\t   * property and instead document.fullscreenElement is used. But isFullscreen is\n\t   * still a valuable property for internal player workings.\n\t   *\n\t   * @param  {boolean} [isFS]\n\t   *         Set the players current fullscreen state\n\t   *\n\t   * @return {boolean|Player}\n\t   *         - true if fullscreen is on and getting\n\t   *         - false if fullscreen is off and getting\n\t   *         - A reference to the current player when setting\n\t   */\n\t\n\t\n\t  Player.prototype.isFullscreen = function isFullscreen(isFS) {\n\t    if (isFS !== undefined) {\n\t      this.isFullscreen_ = !!isFS;\n\t      return this;\n\t    }\n\t    return !!this.isFullscreen_;\n\t  };\n\t\n\t  /**\n\t   * Increase the size of the video to full screen\n\t   * In some browsers, full screen is not supported natively, so it enters\n\t   * \"full window mode\", where the video fills the browser window.\n\t   * In browsers and devices that support native full screen, sometimes the\n\t   * browser's default controls will be shown, and not the Video.js custom skin.\n\t   * This includes most mobile devices (iOS, Android) and older versions of\n\t   * Safari.\n\t   *\n\t   * @fires Player#fullscreenchange\n\t   * @return {Player}\n\t   *         A reference to the current player\n\t   */\n\t\n\t\n\t  Player.prototype.requestFullscreen = function requestFullscreen() {\n\t    var fsApi = _fullscreenApi2['default'];\n\t\n\t    this.isFullscreen(true);\n\t\n\t    if (fsApi.requestFullscreen) {\n\t      // the browser supports going fullscreen at the element level so we can\n\t      // take the controls fullscreen as well as the video\n\t\n\t      // Trigger fullscreenchange event after change\n\t      // We have to specifically add this each time, and remove\n\t      // when canceling fullscreen. Otherwise if there's multiple\n\t      // players on a page, they would all be reacting to the same fullscreen\n\t      // events\n\t      Events.on(_document2['default'], fsApi.fullscreenchange, Fn.bind(this, function documentFullscreenChange(e) {\n\t        this.isFullscreen(_document2['default'][fsApi.fullscreenElement]);\n\t\n\t        // If cancelling fullscreen, remove event listener.\n\t        if (this.isFullscreen() === false) {\n\t          Events.off(_document2['default'], fsApi.fullscreenchange, documentFullscreenChange);\n\t        }\n\t        /**\n\t         * @event Player#fullscreenchange\n\t         * @type {EventTarget~Event}\n\t         */\n\t        this.trigger('fullscreenchange');\n\t      }));\n\t\n\t      this.el_[fsApi.requestFullscreen]();\n\t    } else if (this.tech_.supportsFullScreen()) {\n\t      // we can't take the video.js controls fullscreen but we can go fullscreen\n\t      // with native controls\n\t      this.techCall_('enterFullScreen');\n\t    } else {\n\t      // fullscreen isn't supported so we'll just stretch the video element to\n\t      // fill the viewport\n\t      this.enterFullWindow();\n\t      /**\n\t       * @event Player#fullscreenchange\n\t       * @type {EventTarget~Event}\n\t       */\n\t      this.trigger('fullscreenchange');\n\t    }\n\t\n\t    return this;\n\t  };\n\t\n\t  /**\n\t   * Return the video to its normal size after having been in full screen mode\n\t   *\n\t   * @fires Player#fullscreenchange\n\t   *\n\t   * @return {Player}\n\t   *         A reference to the current player\n\t   */\n\t\n\t\n\t  Player.prototype.exitFullscreen = function exitFullscreen() {\n\t    var fsApi = _fullscreenApi2['default'];\n\t\n\t    this.isFullscreen(false);\n\t\n\t    // Check for browser element fullscreen support\n\t    if (fsApi.requestFullscreen) {\n\t      _document2['default'][fsApi.exitFullscreen]();\n\t    } else if (this.tech_.supportsFullScreen()) {\n\t      this.techCall_('exitFullScreen');\n\t    } else {\n\t      this.exitFullWindow();\n\t      /**\n\t       * @event Player#fullscreenchange\n\t       * @type {EventTarget~Event}\n\t       */\n\t      this.trigger('fullscreenchange');\n\t    }\n\t\n\t    return this;\n\t  };\n\t\n\t  /**\n\t   * When fullscreen isn't supported we can stretch the\n\t   * video container to as wide as the browser will let us.\n\t   *\n\t   * @fires Player#enterFullWindow\n\t   */\n\t\n\t\n\t  Player.prototype.enterFullWindow = function enterFullWindow() {\n\t    this.isFullWindow = true;\n\t\n\t    // Storing original doc overflow value to return to when fullscreen is off\n\t    this.docOrigOverflow = _document2['default'].documentElement.style.overflow;\n\t\n\t    // Add listener for esc key to exit fullscreen\n\t    Events.on(_document2['default'], 'keydown', Fn.bind(this, this.fullWindowOnEscKey));\n\t\n\t    // Hide any scroll bars\n\t    _document2['default'].documentElement.style.overflow = 'hidden';\n\t\n\t    // Apply fullscreen styles\n\t    Dom.addElClass(_document2['default'].body, 'vjs-full-window');\n\t\n\t    /**\n\t     * @event Player#enterFullWindow\n\t     * @type {EventTarget~Event}\n\t     */\n\t    this.trigger('enterFullWindow');\n\t  };\n\t\n\t  /**\n\t   * Check for call to either exit full window or\n\t   * full screen on ESC key\n\t   *\n\t   * @param {string} event\n\t   *        Event to check for key press\n\t   */\n\t\n\t\n\t  Player.prototype.fullWindowOnEscKey = function fullWindowOnEscKey(event) {\n\t    if (event.keyCode === 27) {\n\t      if (this.isFullscreen() === true) {\n\t        this.exitFullscreen();\n\t      } else {\n\t        this.exitFullWindow();\n\t      }\n\t    }\n\t  };\n\t\n\t  /**\n\t   * Exit full window\n\t   *\n\t   * @fires Player#exitFullWindow\n\t   */\n\t\n\t\n\t  Player.prototype.exitFullWindow = function exitFullWindow() {\n\t    this.isFullWindow = false;\n\t    Events.off(_document2['default'], 'keydown', this.fullWindowOnEscKey);\n\t\n\t    // Unhide scroll bars.\n\t    _document2['default'].documentElement.style.overflow = this.docOrigOverflow;\n\t\n\t    // Remove fullscreen styles\n\t    Dom.removeElClass(_document2['default'].body, 'vjs-full-window');\n\t\n\t    // Resize the box, controller, and poster to original sizes\n\t    // this.positionAll();\n\t    /**\n\t     * @event Player#exitFullWindow\n\t     * @type {EventTarget~Event}\n\t     */\n\t    this.trigger('exitFullWindow');\n\t  };\n\t\n\t  /**\n\t   * Check whether the player can play a given mimetype\n\t   *\n\t   * @see https://www.w3.org/TR/2011/WD-html5-20110113/video.html#dom-navigator-canplaytype\n\t   *\n\t   * @param {string} type\n\t   *        The mimetype to check\n\t   *\n\t   * @return {string}\n\t   *         'probably', 'maybe', or '' (empty string)\n\t   */\n\t\n\t\n\t  Player.prototype.canPlayType = function canPlayType(type) {\n\t    var can = void 0;\n\t\n\t    // Loop through each playback technology in the options order\n\t    for (var i = 0, j = this.options_.techOrder; i < j.length; i++) {\n\t      var techName = (0, _toTitleCase2['default'])(j[i]);\n\t      var tech = _tech2['default'].getTech(techName);\n\t\n\t      // Support old behavior of techs being registered as components.\n\t      // Remove once that deprecated behavior is removed.\n\t      if (!tech) {\n\t        tech = _component2['default'].getComponent(techName);\n\t      }\n\t\n\t      // Check if the current tech is defined before continuing\n\t      if (!tech) {\n\t        _log2['default'].error('The \"' + techName + '\" tech is undefined. Skipped browser support check for that tech.');\n\t        continue;\n\t      }\n\t\n\t      // Check if the browser supports this technology\n\t      if (tech.isSupported()) {\n\t        can = tech.canPlayType(type);\n\t\n\t        if (can) {\n\t          return can;\n\t        }\n\t      }\n\t    }\n\t\n\t    return '';\n\t  };\n\t\n\t  /**\n\t   * Select source based on tech-order or source-order\n\t   * Uses source-order selection if `options.sourceOrder` is truthy. Otherwise,\n\t   * defaults to tech-order selection\n\t   *\n\t   * @param {Array} sources\n\t   *        The sources for a media asset\n\t   *\n\t   * @return {Object|boolean}\n\t   *         Object of source and tech order or false\n\t   */\n\t\n\t\n\t  Player.prototype.selectSource = function selectSource(sources) {\n\t    var _this4 = this;\n\t\n\t    // Get only the techs specified in `techOrder` that exist and are supported by the\n\t    // current platform\n\t    var techs = this.options_.techOrder.map(_toTitleCase2['default']).map(function (techName) {\n\t      // `Component.getComponent(...)` is for support of old behavior of techs\n\t      // being registered as components.\n\t      // Remove once that deprecated behavior is removed.\n\t      return [techName, _tech2['default'].getTech(techName) || _component2['default'].getComponent(techName)];\n\t    }).filter(function (_ref) {\n\t      var techName = _ref[0],\n\t          tech = _ref[1];\n\t\n\t      // Check if the current tech is defined before continuing\n\t      if (tech) {\n\t        // Check if the browser supports this technology\n\t        return tech.isSupported();\n\t      }\n\t\n\t      _log2['default'].error('The \"' + techName + '\" tech is undefined. Skipped browser support check for that tech.');\n\t      return false;\n\t    });\n\t\n\t    // Iterate over each `innerArray` element once per `outerArray` element and execute\n\t    // `tester` with both. If `tester` returns a non-falsy value, exit early and return\n\t    // that value.\n\t    var findFirstPassingTechSourcePair = function findFirstPassingTechSourcePair(outerArray, innerArray, tester) {\n\t      var found = void 0;\n\t\n\t      outerArray.some(function (outerChoice) {\n\t        return innerArray.some(function (innerChoice) {\n\t          found = tester(outerChoice, innerChoice);\n\t\n\t          if (found) {\n\t            return true;\n\t          }\n\t        });\n\t      });\n\t\n\t      return found;\n\t    };\n\t\n\t    var foundSourceAndTech = void 0;\n\t    var flip = function flip(fn) {\n\t      return function (a, b) {\n\t        return fn(b, a);\n\t      };\n\t    };\n\t    var finder = function finder(_ref2, source) {\n\t      var techName = _ref2[0],\n\t          tech = _ref2[1];\n\t\n\t      if (tech.canPlaySource(source, _this4.options_[techName.toLowerCase()])) {\n\t        return { source: source, tech: techName };\n\t      }\n\t    };\n\t\n\t    // Depending on the truthiness of `options.sourceOrder`, we swap the order of techs and sources\n\t    // to select from them based on their priority.\n\t    if (this.options_.sourceOrder) {\n\t      // Source-first ordering\n\t      foundSourceAndTech = findFirstPassingTechSourcePair(sources, techs, flip(finder));\n\t    } else {\n\t      // Tech-first ordering\n\t      foundSourceAndTech = findFirstPassingTechSourcePair(techs, sources, finder);\n\t    }\n\t\n\t    return foundSourceAndTech || false;\n\t  };\n\t\n\t  /**\n\t   * The source function updates the video source\n\t   * There are three types of variables you can pass as the argument.\n\t   * **URL string**: A URL to the the video file. Use this method if you are sure\n\t   * the current playback technology (HTML5/Flash) can support the source you\n\t   * provide. Currently only MP4 files can be used in both HTML5 and Flash.\n\t   *\n\t   * @param {Tech~SourceObject|Tech~SourceObject[]} [source]\n\t   *        One SourceObject or an array of SourceObjects\n\t   *\n\t   * @return {string|Player}\n\t   *         - The current video source when getting\n\t   *         - The player when setting\n\t   */\n\t\n\t\n\t  Player.prototype.src = function src(source) {\n\t    if (source === undefined) {\n\t      return this.techGet_('src');\n\t    }\n\t\n\t    var currentTech = _tech2['default'].getTech(this.techName_);\n\t\n\t    // Support old behavior of techs being registered as components.\n\t    // Remove once that deprecated behavior is removed.\n\t    if (!currentTech) {\n\t      currentTech = _component2['default'].getComponent(this.techName_);\n\t    }\n\t\n\t    // case: Array of source objects to choose from and pick the best to play\n\t    if (Array.isArray(source)) {\n\t      this.sourceList_(source);\n\t\n\t      // case: URL String (http://myvideo...)\n\t    } else if (typeof source === 'string') {\n\t      // create a source object from the string\n\t      this.src({ src: source });\n\t\n\t      // case: Source object { src: '', type: '' ... }\n\t    } else if (source instanceof Object) {\n\t      // check if the source has a type and the loaded tech cannot play the source\n\t      // if there's no type we'll just try the current tech\n\t      if (source.type && !currentTech.canPlaySource(source, this.options_[this.techName_.toLowerCase()])) {\n\t        // create a source list with the current source and send through\n\t        // the tech loop to check for a compatible technology\n\t        this.sourceList_([source]);\n\t      } else {\n\t        this.cache_.sources = null;\n\t        this.cache_.source = source;\n\t        this.cache_.src = source.src;\n\t\n\t        this.currentType_ = source.type || '';\n\t\n\t        // wait until the tech is ready to set the source\n\t        this.ready(function () {\n\t\n\t          // The setSource tech method was added with source handlers\n\t          // so older techs won't support it\n\t          // We need to check the direct prototype for the case where subclasses\n\t          // of the tech do not support source handlers\n\t          if (currentTech.prototype.hasOwnProperty('setSource')) {\n\t            this.techCall_('setSource', source);\n\t          } else {\n\t            this.techCall_('src', source.src);\n\t          }\n\t\n\t          if (this.options_.preload === 'auto') {\n\t            this.load();\n\t          }\n\t\n\t          if (this.options_.autoplay) {\n\t            this.play();\n\t          }\n\t\n\t          // Set the source synchronously if possible (#2326)\n\t        }, true);\n\t      }\n\t    }\n\t\n\t    return this;\n\t  };\n\t\n\t  /**\n\t   * Handle an array of source objects\n\t   *\n\t   * @param  {Tech~SourceObject[]} sources\n\t   *         Array of source objects\n\t   *\n\t   * @private\n\t   */\n\t\n\t\n\t  Player.prototype.sourceList_ = function sourceList_(sources) {\n\t    var sourceTech = this.selectSource(sources);\n\t\n\t    if (sourceTech) {\n\t      if (sourceTech.tech === this.techName_) {\n\t        // if this technology is already loaded, set the source\n\t        this.src(sourceTech.source);\n\t      } else {\n\t        // load this technology with the chosen source\n\t        this.loadTech_(sourceTech.tech, sourceTech.source);\n\t      }\n\t\n\t      this.cache_.sources = sources;\n\t    } else {\n\t      // We need to wrap this in a timeout to give folks a chance to add error event handlers\n\t      this.setTimeout(function () {\n\t        this.error({ code: 4, message: this.localize(this.options_.notSupportedMessage) });\n\t      }, 0);\n\t\n\t      // we could not find an appropriate tech, but let's still notify the delegate that this is it\n\t      // this needs a better comment about why this is needed\n\t      this.triggerReady();\n\t    }\n\t  };\n\t\n\t  /**\n\t   * Begin loading the src data.\n\t   *\n\t   * @return {Player}\n\t   *         A reference to the player\n\t   */\n\t\n\t\n\t  Player.prototype.load = function load() {\n\t    this.techCall_('load');\n\t    return this;\n\t  };\n\t\n\t  /**\n\t   * Reset the player. Loads the first tech in the techOrder,\n\t   * and calls `reset` on the tech`.\n\t   *\n\t   * @return {Player}\n\t   *         A reference to the player\n\t   */\n\t\n\t\n\t  Player.prototype.reset = function reset() {\n\t    this.loadTech_((0, _toTitleCase2['default'])(this.options_.techOrder[0]), null);\n\t    this.techCall_('reset');\n\t    return this;\n\t  };\n\t\n\t  /**\n\t   * Returns all of the current source objects.\n\t   *\n\t   * @return {Tech~SourceObject[]}\n\t   *         The current source objects\n\t   */\n\t\n\t\n\t  Player.prototype.currentSources = function currentSources() {\n\t    var source = this.currentSource();\n\t    var sources = [];\n\t\n\t    // assume `{}` or `{ src }`\n\t    if (Object.keys(source).length !== 0) {\n\t      sources.push(source);\n\t    }\n\t\n\t    return this.cache_.sources || sources;\n\t  };\n\t\n\t  /**\n\t   * Returns the current source object.\n\t   *\n\t   * @return {Tech~SourceObject}\n\t   *         The current source object\n\t   */\n\t\n\t\n\t  Player.prototype.currentSource = function currentSource() {\n\t    var source = {};\n\t    var src = this.currentSrc();\n\t\n\t    if (src) {\n\t      source.src = src;\n\t    }\n\t\n\t    return this.cache_.source || source;\n\t  };\n\t\n\t  /**\n\t   * Returns the fully qualified URL of the current source value e.g. http://mysite.com/video.mp4\n\t   * Can be used in conjuction with `currentType` to assist in rebuilding the current source object.\n\t   *\n\t   * @return {string}\n\t   *         The current source\n\t   */\n\t\n\t\n\t  Player.prototype.currentSrc = function currentSrc() {\n\t    return this.techGet_('currentSrc') || this.cache_.src || '';\n\t  };\n\t\n\t  /**\n\t   * Get the current source type e.g. video/mp4\n\t   * This can allow you rebuild the current source object so that you could load the same\n\t   * source and tech later\n\t   *\n\t   * @return {string}\n\t   *         The source MIME type\n\t   */\n\t\n\t\n\t  Player.prototype.currentType = function currentType() {\n\t    return this.currentType_ || '';\n\t  };\n\t\n\t  /**\n\t   * Get or set the preload attribute\n\t   *\n\t   * @param {boolean} [value]\n\t   *        - true means that we should preload\n\t   *        - false maens that we should not preload\n\t   *\n\t   * @return {string|Player}\n\t   *         - the preload attribute value when getting\n\t   *         - the player when setting\n\t   */\n\t\n\t\n\t  Player.prototype.preload = function preload(value) {\n\t    if (value !== undefined) {\n\t      this.techCall_('setPreload', value);\n\t      this.options_.preload = value;\n\t      return this;\n\t    }\n\t    return this.techGet_('preload');\n\t  };\n\t\n\t  /**\n\t   * Get or set the autoplay attribute.\n\t   *\n\t   * @param {boolean} [value]\n\t   *        - true means that we should autoplay\n\t   *        - false maens that we should not autoplay\n\t   *\n\t   * @return {string|Player}\n\t   *         - the current value of autoplay\n\t   *         - the player when setting\n\t   */\n\t\n\t\n\t  Player.prototype.autoplay = function autoplay(value) {\n\t    if (value !== undefined) {\n\t      this.techCall_('setAutoplay', value);\n\t      this.options_.autoplay = value;\n\t      return this;\n\t    }\n\t    return this.techGet_('autoplay', value);\n\t  };\n\t\n\t  /**\n\t   * Get or set the loop attribute on the video element.\n\t   *\n\t   * @param {boolean} [value]\n\t   *        - true means that we should loop the video\n\t   *        - false means that we should not loop the video\n\t   *\n\t   * @return {string|Player}\n\t   *         - the current value of loop when getting\n\t   *         - the player when setting\n\t   */\n\t\n\t\n\t  Player.prototype.loop = function loop(value) {\n\t    if (value !== undefined) {\n\t      this.techCall_('setLoop', value);\n\t      this.options_.loop = value;\n\t      return this;\n\t    }\n\t    return this.techGet_('loop');\n\t  };\n\t\n\t  /**\n\t   * Get or set the poster image source url\n\t   *\n\t   * @fires Player#posterchange\n\t   *\n\t   * @param {string} [src]\n\t   *        Poster image source URL\n\t   *\n\t   * @return {string|Player}\n\t   *         - the current value of poster when getting\n\t   *         - the player when setting\n\t   */\n\t\n\t\n\t  Player.prototype.poster = function poster(src) {\n\t    if (src === undefined) {\n\t      return this.poster_;\n\t    }\n\t\n\t    // The correct way to remove a poster is to set as an empty string\n\t    // other falsey values will throw errors\n\t    if (!src) {\n\t      src = '';\n\t    }\n\t\n\t    // update the internal poster variable\n\t    this.poster_ = src;\n\t\n\t    // update the tech's poster\n\t    this.techCall_('setPoster', src);\n\t\n\t    // alert components that the poster has been set\n\t    /**\n\t     * This event fires when the poster image is changed on the player.\n\t     *\n\t     * @event Player#posterchange\n\t     * @type {EventTarget~Event}\n\t     */\n\t    this.trigger('posterchange');\n\t\n\t    return this;\n\t  };\n\t\n\t  /**\n\t   * Some techs (e.g. YouTube) can provide a poster source in an\n\t   * asynchronous way. We want the poster component to use this\n\t   * poster source so that it covers up the tech's controls.\n\t   * (YouTube's play button). However we only want to use this\n\t   * soruce if the player user hasn't set a poster through\n\t   * the normal APIs.\n\t   *\n\t   * @fires Player#posterchange\n\t   * @listens Tech#posterchange\n\t   * @private\n\t   */\n\t\n\t\n\t  Player.prototype.handleTechPosterChange_ = function handleTechPosterChange_() {\n\t    if (!this.poster_ && this.tech_ && this.tech_.poster) {\n\t      this.poster_ = this.tech_.poster() || '';\n\t\n\t      // Let components know the poster has changed\n\t      this.trigger('posterchange');\n\t    }\n\t  };\n\t\n\t  /**\n\t   * Get or set whether or not the controls are showing.\n\t   *\n\t   * @fires Player#controlsenabled\n\t   *\n\t   * @param {boolean} [bool]\n\t   *        - true to turn controls on\n\t   *        - false to turn controls off\n\t   *\n\t   * @return {boolean|Player}\n\t   *         - the current value of controls when getting\n\t   *         - the player when setting\n\t   */\n\t\n\t\n\t  Player.prototype.controls = function controls(bool) {\n\t    if (bool !== undefined) {\n\t      bool = !!bool;\n\t\n\t      // Don't trigger a change event unless it actually changed\n\t      if (this.controls_ !== bool) {\n\t        this.controls_ = bool;\n\t\n\t        if (this.usingNativeControls()) {\n\t          this.techCall_('setControls', bool);\n\t        }\n\t\n\t        if (bool) {\n\t          this.removeClass('vjs-controls-disabled');\n\t          this.addClass('vjs-controls-enabled');\n\t          /**\n\t           * @event Player#controlsenabled\n\t           * @type {EventTarget~Event}\n\t           */\n\t          this.trigger('controlsenabled');\n\t\n\t          if (!this.usingNativeControls()) {\n\t            this.addTechControlsListeners_();\n\t          }\n\t        } else {\n\t          this.removeClass('vjs-controls-enabled');\n\t          this.addClass('vjs-controls-disabled');\n\t          /**\n\t           * @event Player#controlsdisabled\n\t           * @type {EventTarget~Event}\n\t           */\n\t          this.trigger('controlsdisabled');\n\t\n\t          if (!this.usingNativeControls()) {\n\t            this.removeTechControlsListeners_();\n\t          }\n\t        }\n\t      }\n\t      return this;\n\t    }\n\t    return !!this.controls_;\n\t  };\n\t\n\t  /**\n\t   * Toggle native controls on/off. Native controls are the controls built into\n\t   * devices (e.g. default iPhone controls), Flash, or other techs\n\t   * (e.g. Vimeo Controls)\n\t   * **This should only be set by the current tech, because only the tech knows\n\t   * if it can support native controls**\n\t   *\n\t   * @fires Player#usingnativecontrols\n\t   * @fires Player#usingcustomcontrols\n\t   *\n\t   * @param {boolean} [bool]\n\t   *        - true to turn native controls on\n\t   *        - false to turn native controls off\n\t   *\n\t   * @return {boolean|Player}\n\t   *         - the current value of native controls when getting\n\t   *         - the player when setting\n\t   */\n\t\n\t\n\t  Player.prototype.usingNativeControls = function usingNativeControls(bool) {\n\t    if (bool !== undefined) {\n\t      bool = !!bool;\n\t\n\t      // Don't trigger a change event unless it actually changed\n\t      if (this.usingNativeControls_ !== bool) {\n\t        this.usingNativeControls_ = bool;\n\t        if (bool) {\n\t          this.addClass('vjs-using-native-controls');\n\t\n\t          /**\n\t           * player is using the native device controls\n\t           *\n\t           * @event Player#usingnativecontrols\n\t           * @type {EventTarget~Event}\n\t           */\n\t          this.trigger('usingnativecontrols');\n\t        } else {\n\t          this.removeClass('vjs-using-native-controls');\n\t\n\t          /**\n\t           * player is using the custom HTML controls\n\t           *\n\t           * @event Player#usingcustomcontrols\n\t           * @type {EventTarget~Event}\n\t           */\n\t          this.trigger('usingcustomcontrols');\n\t        }\n\t      }\n\t      return this;\n\t    }\n\t    return !!this.usingNativeControls_;\n\t  };\n\t\n\t  /**\n\t   * Set or get the current MediaError\n\t   *\n\t   * @fires Player#error\n\t   *\n\t   * @param  {MediaError|string|number} [err]\n\t   *         A MediaError or a string/number to be turned\n\t   *         into a MediaError\n\t   *\n\t   * @return {MediaError|null|Player}\n\t   *         - The current MediaError when getting (or null)\n\t   *         - The player when setting\n\t   */\n\t\n\t\n\t  Player.prototype.error = function error(err) {\n\t    if (err === undefined) {\n\t      return this.error_ || null;\n\t    }\n\t\n\t    // restoring to default\n\t    if (err === null) {\n\t      this.error_ = err;\n\t      this.removeClass('vjs-error');\n\t      if (this.errorDisplay) {\n\t        this.errorDisplay.close();\n\t      }\n\t      return this;\n\t    }\n\t\n\t    this.error_ = new _mediaError2['default'](err);\n\t\n\t    // add the vjs-error classname to the player\n\t    this.addClass('vjs-error');\n\t\n\t    // log the name of the error type and any message\n\t    // ie8 just logs \"[object object]\" if you just log the error object\n\t    _log2['default'].error('(CODE:' + this.error_.code + ' ' + _mediaError2['default'].errorTypes[this.error_.code] + ')', this.error_.message, this.error_);\n\t\n\t    /**\n\t     * @event Player#error\n\t     * @type {EventTarget~Event}\n\t     */\n\t    this.trigger('error');\n\t\n\t    return this;\n\t  };\n\t\n\t  /**\n\t   * Report user activity\n\t   *\n\t   * @param {Object} event\n\t   *        Event object\n\t   */\n\t\n\t\n\t  Player.prototype.reportUserActivity = function reportUserActivity(event) {\n\t    this.userActivity_ = true;\n\t  };\n\t\n\t  /**\n\t   * Get/set if user is active\n\t   *\n\t   * @fires Player#useractive\n\t   * @fires Player#userinactive\n\t   *\n\t   * @param {boolean} [bool]\n\t   *        - true if the user is active\n\t   *        - false if the user is inactive\n\t   * @return {boolean|Player}\n\t   *         - the current value of userActive when getting\n\t   *         - the player when setting\n\t   */\n\t\n\t\n\t  Player.prototype.userActive = function userActive(bool) {\n\t    if (bool !== undefined) {\n\t      bool = !!bool;\n\t      if (bool !== this.userActive_) {\n\t        this.userActive_ = bool;\n\t        if (bool) {\n\t          // If the user was inactive and is now active we want to reset the\n\t          // inactivity timer\n\t          this.userActivity_ = true;\n\t          this.removeClass('vjs-user-inactive');\n\t          this.addClass('vjs-user-active');\n\t          /**\n\t           * @event Player#useractive\n\t           * @type {EventTarget~Event}\n\t           */\n\t          this.trigger('useractive');\n\t        } else {\n\t          // We're switching the state to inactive manually, so erase any other\n\t          // activity\n\t          this.userActivity_ = false;\n\t\n\t          // Chrome/Safari/IE have bugs where when you change the cursor it can\n\t          // trigger a mousemove event. This causes an issue when you're hiding\n\t          // the cursor when the user is inactive, and a mousemove signals user\n\t          // activity. Making it impossible to go into inactive mode. Specifically\n\t          // this happens in fullscreen when we really need to hide the cursor.\n\t          //\n\t          // When this gets resolved in ALL browsers it can be removed\n\t          // https://code.google.com/p/chromium/issues/detail?id=103041\n\t          if (this.tech_) {\n\t            this.tech_.one('mousemove', function (e) {\n\t              e.stopPropagation();\n\t              e.preventDefault();\n\t            });\n\t          }\n\t\n\t          this.removeClass('vjs-user-active');\n\t          this.addClass('vjs-user-inactive');\n\t          /**\n\t           * @event Player#userinactive\n\t           * @type {EventTarget~Event}\n\t           */\n\t          this.trigger('userinactive');\n\t        }\n\t      }\n\t      return this;\n\t    }\n\t    return this.userActive_;\n\t  };\n\t\n\t  /**\n\t   * Listen for user activity based on timeout value\n\t   *\n\t   * @private\n\t   */\n\t\n\t\n\t  Player.prototype.listenForUserActivity_ = function listenForUserActivity_() {\n\t    var mouseInProgress = void 0;\n\t    var lastMoveX = void 0;\n\t    var lastMoveY = void 0;\n\t    var handleActivity = Fn.bind(this, this.reportUserActivity);\n\t\n\t    var handleMouseMove = function handleMouseMove(e) {\n\t      // #1068 - Prevent mousemove spamming\n\t      // Chrome Bug: https://code.google.com/p/chromium/issues/detail?id=366970\n\t      if (e.screenX !== lastMoveX || e.screenY !== lastMoveY) {\n\t        lastMoveX = e.screenX;\n\t        lastMoveY = e.screenY;\n\t        handleActivity();\n\t      }\n\t    };\n\t\n\t    var handleMouseDown = function handleMouseDown() {\n\t      handleActivity();\n\t      // For as long as the they are touching the device or have their mouse down,\n\t      // we consider them active even if they're not moving their finger or mouse.\n\t      // So we want to continue to update that they are active\n\t      this.clearInterval(mouseInProgress);\n\t      // Setting userActivity=true now and setting the interval to the same time\n\t      // as the activityCheck interval (250) should ensure we never miss the\n\t      // next activityCheck\n\t      mouseInProgress = this.setInterval(handleActivity, 250);\n\t    };\n\t\n\t    var handleMouseUp = function handleMouseUp(event) {\n\t      handleActivity();\n\t      // Stop the interval that maintains activity if the mouse/touch is down\n\t      this.clearInterval(mouseInProgress);\n\t    };\n\t\n\t    // Any mouse movement will be considered user activity\n\t    this.on('mousedown', handleMouseDown);\n\t    this.on('mousemove', handleMouseMove);\n\t    this.on('mouseup', handleMouseUp);\n\t\n\t    // Listen for keyboard navigation\n\t    // Shouldn't need to use inProgress interval because of key repeat\n\t    this.on('keydown', handleActivity);\n\t    this.on('keyup', handleActivity);\n\t\n\t    // Run an interval every 250 milliseconds instead of stuffing everything into\n\t    // the mousemove/touchmove function itself, to prevent performance degradation.\n\t    // `this.reportUserActivity` simply sets this.userActivity_ to true, which\n\t    // then gets picked up by this loop\n\t    // http://ejohn.org/blog/learning-from-twitter/\n\t    var inactivityTimeout = void 0;\n\t\n\t    this.setInterval(function () {\n\t      // Check to see if mouse/touch activity has happened\n\t      if (this.userActivity_) {\n\t        // Reset the activity tracker\n\t        this.userActivity_ = false;\n\t\n\t        // If the user state was inactive, set the state to active\n\t        this.userActive(true);\n\t\n\t        // Clear any existing inactivity timeout to start the timer over\n\t        this.clearTimeout(inactivityTimeout);\n\t\n\t        var timeout = this.options_.inactivityTimeout;\n\t\n\t        if (timeout > 0) {\n\t          // In <timeout> milliseconds, if no more activity has occurred the\n\t          // user will be considered inactive\n\t          inactivityTimeout = this.setTimeout(function () {\n\t            // Protect against the case where the inactivityTimeout can trigger just\n\t            // before the next user activity is picked up by the activity check loop\n\t            // causing a flicker\n\t            if (!this.userActivity_) {\n\t              this.userActive(false);\n\t            }\n\t          }, timeout);\n\t        }\n\t      }\n\t    }, 250);\n\t  };\n\t\n\t  /**\n\t   * Gets or sets the current playback rate. A playback rate of\n\t   * 1.0 represents normal speed and 0.5 would indicate half-speed\n\t   * playback, for instance.\n\t   *\n\t   * @see https://html.spec.whatwg.org/multipage/embedded-content.html#dom-media-playbackrate\n\t   *\n\t   * @param {number} [rate]\n\t   *       New playback rate to set.\n\t   *\n\t   * @return {number|Player}\n\t   *         - The current playback rate when getting or 1.0\n\t   *         - the player when setting\n\t   */\n\t\n\t\n\t  Player.prototype.playbackRate = function playbackRate(rate) {\n\t    if (rate !== undefined) {\n\t      this.techCall_('setPlaybackRate', rate);\n\t      return this;\n\t    }\n\t\n\t    if (this.tech_ && this.tech_.featuresPlaybackRate) {\n\t      return this.techGet_('playbackRate');\n\t    }\n\t    return 1.0;\n\t  };\n\t\n\t  /**\n\t   * Gets or sets the audio flag\n\t   *\n\t   * @param {boolean} bool\n\t   *        - true signals that this is an audio player\n\t   *        - false signals that this is not an audio player\n\t   *\n\t   * @return {Player|boolean}\n\t   *         - the current value of isAudio when getting\n\t   *         - the player if setting\n\t   */\n\t\n\t\n\t  Player.prototype.isAudio = function isAudio(bool) {\n\t    if (bool !== undefined) {\n\t      this.isAudio_ = !!bool;\n\t      return this;\n\t    }\n\t\n\t    return !!this.isAudio_;\n\t  };\n\t\n\t  /**\n\t   * Get the {@link VideoTrackList}\n\t   *\n\t   * @see https://html.spec.whatwg.org/multipage/embedded-content.html#videotracklist\n\t   *\n\t   * @return {VideoTrackList}\n\t   *         the current video track list\n\t   */\n\t\n\t\n\t  Player.prototype.videoTracks = function videoTracks() {\n\t    // if we have not yet loadTech_, we create videoTracks_\n\t    // these will be passed to the tech during loading\n\t    if (!this.tech_) {\n\t      this.videoTracks_ = this.videoTracks_ || new _videoTrackList2['default']();\n\t      return this.videoTracks_;\n\t    }\n\t\n\t    return this.tech_.videoTracks();\n\t  };\n\t\n\t  /**\n\t   * Get the {@link AudioTrackList}\n\t   *\n\t   * @see https://html.spec.whatwg.org/multipage/embedded-content.html#audiotracklist\n\t   *\n\t   * @return {AudioTrackList}\n\t   *         the current audio track list\n\t   */\n\t\n\t\n\t  Player.prototype.audioTracks = function audioTracks() {\n\t    // if we have not yet loadTech_, we create videoTracks_\n\t    // these will be passed to the tech during loading\n\t    if (!this.tech_) {\n\t      this.audioTracks_ = this.audioTracks_ || new _audioTrackList2['default']();\n\t      return this.audioTracks_;\n\t    }\n\t\n\t    return this.tech_.audioTracks();\n\t  };\n\t\n\t  /**\n\t   * Get the {@link TextTrackList}\n\t   *\n\t   * Text tracks are tracks of timed text events.\n\t   * - Captions: text displayed over the video\n\t   *             for the hearing impaired\n\t   * - Subtitles: text displayed over the video for\n\t   *              those who don't understand language in the video\n\t   * - Chapters: text displayed in a menu allowing the user to jump\n\t   *             to particular points (chapters) in the video\n\t   * - Descriptions: (not yet implemented) audio descriptions that are read back to\n\t   *                 the user by a screen reading device\n\t   *\n\t   * @see http://www.w3.org/html/wg/drafts/html/master/embedded-content-0.html#dom-media-texttracks\n\t   *\n\t   * @return {TextTrackList|undefined}\n\t   *         The current TextTrackList or undefined if\n\t   *         or undefined if we don't have a tech\n\t   */\n\t\n\t\n\t  Player.prototype.textTracks = function textTracks() {\n\t    // cannot use techGet_ directly because it checks to see whether the tech is ready.\n\t    // Flash is unlikely to be ready in time but textTracks should still work.\n\t    if (this.tech_) {\n\t      return this.tech_.textTracks();\n\t    }\n\t  };\n\t\n\t  /**\n\t   * Get the \"remote\" {@link TextTrackList}. Remote Text Tracks\n\t   * are tracks that were added to the HTML video element and can\n\t   * be removed, whereas normal texttracks cannot be removed.\n\t   *\n\t   *\n\t   * @return {TextTrackList|undefined}\n\t   *         The current remote text track list or undefined\n\t   *         if we don't have a tech\n\t   */\n\t\n\t\n\t  Player.prototype.remoteTextTracks = function remoteTextTracks() {\n\t    if (this.tech_) {\n\t      return this.tech_.remoteTextTracks();\n\t    }\n\t  };\n\t\n\t  /**\n\t   * Get the \"remote\" {@link HTMLTrackElementList}.\n\t   * This gives the user all of the DOM elements that match up\n\t   * with the remote {@link TextTrackList}.\n\t   *\n\t   * @return {HTMLTrackElementList}\n\t   *         The current remote text track list elements\n\t   *         or undefined if we don't have a tech\n\t   */\n\t\n\t\n\t  Player.prototype.remoteTextTrackEls = function remoteTextTrackEls() {\n\t    if (this.tech_) {\n\t      return this.tech_.remoteTextTrackEls();\n\t    }\n\t  };\n\t\n\t  /**\n\t   * A helper method for adding a {@link TextTrack} to our\n\t   * {@link TextTrackList}.\n\t   *\n\t   * In addition to the W3C settings we allow adding additional info through options.\n\t   *\n\t   * @see http://www.w3.org/html/wg/drafts/html/master/embedded-content-0.html#dom-media-addtexttrack\n\t   *\n\t   * @param {string} [kind]\n\t   *        the kind of TextTrack you are adding\n\t   *\n\t   * @param {string} [label]\n\t   *        the label to give the TextTrack label\n\t   *\n\t   * @param {string} [language]\n\t   *        the language to set on the TextTrack\n\t   *\n\t   * @return {TextTrack|undefined}\n\t   *         the TextTrack that was added or undefined\n\t   *         if there is no tech\n\t   */\n\t\n\t\n\t  Player.prototype.addTextTrack = function addTextTrack(kind, label, language) {\n\t    if (this.tech_) {\n\t      return this.tech_.addTextTrack(kind, label, language);\n\t    }\n\t  };\n\t\n\t  /**\n\t   * Create a remote {@link TextTrack} and an {@link HTMLTrackElement}. It will\n\t   * automatically removed from the video element whenever the source changes, unless\n\t   * manualCleanup is set to false.\n\t   *\n\t   * @param {Object} options\n\t   *        Options to pass to {@link HTMLTrackElement} during creation. See\n\t   *        {@link HTMLTrackElement} for object properties that you should use.\n\t   *\n\t   * @param {boolean} [manualCleanup=true] if set to false, the TextTrack will be\n\t   *\n\t   * @return {HTMLTrackElement}\n\t   *         the HTMLTrackElement that was created and added\n\t   *         to the HTMLTrackElementList and the remote\n\t   *         TextTrackList\n\t   *\n\t   * @deprecated The default value of the \"manualCleanup\" parameter will default\n\t   *             to \"false\" in upcoming versions of Video.js\n\t   */\n\t\n\t\n\t  Player.prototype.addRemoteTextTrack = function addRemoteTextTrack(options, manualCleanup) {\n\t    if (this.tech_) {\n\t      return this.tech_.addRemoteTextTrack(options, manualCleanup);\n\t    }\n\t  };\n\t\n\t  /**\n\t   * Remove a remote {@link TextTrack} from the respective\n\t   * {@link TextTrackList} and {@link HTMLTrackElementList}.\n\t   *\n\t   * @param {Object} track\n\t   *        Remote {@link TextTrack} to remove\n\t   *\n\t   * @return {undefined}\n\t   *         does not return anything\n\t   */\n\t\n\t\n\t  Player.prototype.removeRemoteTextTrack = function removeRemoteTextTrack() {\n\t    var _ref3 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n\t        _ref3$track = _ref3.track,\n\t        track = _ref3$track === undefined ? arguments[0] : _ref3$track;\n\t\n\t    // destructure the input into an object with a track argument, defaulting to arguments[0]\n\t    // default the whole argument to an empty object if nothing was passed in\n\t\n\t    if (this.tech_) {\n\t      return this.tech_.removeRemoteTextTrack(track);\n\t    }\n\t  };\n\t\n\t  /**\n\t   * Get video width\n\t   *\n\t   * @return {number}\n\t   *         current video width\n\t   */\n\t\n\t\n\t  Player.prototype.videoWidth = function videoWidth() {\n\t    return this.tech_ && this.tech_.videoWidth && this.tech_.videoWidth() || 0;\n\t  };\n\t\n\t  /**\n\t   * Get video height\n\t   *\n\t   * @return {number}\n\t   *         current video height\n\t   */\n\t\n\t\n\t  Player.prototype.videoHeight = function videoHeight() {\n\t    return this.tech_ && this.tech_.videoHeight && this.tech_.videoHeight() || 0;\n\t  };\n\t\n\t  // Methods to add support for\n\t  // initialTime: function() { return this.techCall_('initialTime'); },\n\t  // startOffsetTime: function() { return this.techCall_('startOffsetTime'); },\n\t  // played: function() { return this.techCall_('played'); },\n\t  // defaultPlaybackRate: function() { return this.techCall_('defaultPlaybackRate'); },\n\t  // defaultMuted: function() { return this.techCall_('defaultMuted'); }\n\t\n\t  /**\n\t   * The player's language code\n\t   * NOTE: The language should be set in the player options if you want the\n\t   * the controls to be built with a specific language. Changing the lanugage\n\t   * later will not update controls text.\n\t   *\n\t   * @param {string} [code]\n\t   *        the language code to set the player to\n\t   *\n\t   * @return {string|Player}\n\t   *         - The current language code when getting\n\t   *         - A reference to the player when setting\n\t   */\n\t\n\t\n\t  Player.prototype.language = function language(code) {\n\t    if (code === undefined) {\n\t      return this.language_;\n\t    }\n\t\n\t    this.language_ = String(code).toLowerCase();\n\t    return this;\n\t  };\n\t\n\t  /**\n\t   * Get the player's language dictionary\n\t   * Merge every time, because a newly added plugin might call videojs.addLanguage() at any time\n\t   * Languages specified directly in the player options have precedence\n\t   *\n\t   * @return {Array}\n\t   *         An array of of supported languages\n\t   */\n\t\n\t\n\t  Player.prototype.languages = function languages() {\n\t    return (0, _mergeOptions2['default'])(Player.prototype.options_.languages, this.languages_);\n\t  };\n\t\n\t  /**\n\t   * returns a JavaScript object reperesenting the current track\n\t   * information. **DOES not return it as JSON**\n\t   *\n\t   * @return {Object}\n\t   *         Object representing the current of track info\n\t   */\n\t\n\t\n\t  Player.prototype.toJSON = function toJSON() {\n\t    var options = (0, _mergeOptions2['default'])(this.options_);\n\t    var tracks = options.tracks;\n\t\n\t    options.tracks = [];\n\t\n\t    for (var i = 0; i < tracks.length; i++) {\n\t      var track = tracks[i];\n\t\n\t      // deep merge tracks and null out player so no circular references\n\t      track = (0, _mergeOptions2['default'])(track);\n\t      track.player = undefined;\n\t      options.tracks[i] = track;\n\t    }\n\t\n\t    return options;\n\t  };\n\t\n\t  /**\n\t   * Creates a simple modal dialog (an instance of the {@link ModalDialog}\n\t   * component) that immediately overlays the player with arbitrary\n\t   * content and removes itself when closed.\n\t   *\n\t   * @param {string|Function|Element|Array|null} content\n\t   *        Same as {@link ModalDialog#content}'s param of the same name.\n\t   *        The most straight-forward usage is to provide a string or DOM\n\t   *        element.\n\t   *\n\t   * @param {Object} [options]\n\t   *        Extra options which will be passed on to the {@link ModalDialog}.\n\t   *\n\t   * @return {ModalDialog}\n\t   *         the {@link ModalDialog} that was created\n\t   */\n\t\n\t\n\t  Player.prototype.createModal = function createModal(content, options) {\n\t    var _this5 = this;\n\t\n\t    options = options || {};\n\t    options.content = content || '';\n\t\n\t    var modal = new _modalDialog2['default'](this, options);\n\t\n\t    this.addChild(modal);\n\t    modal.on('dispose', function () {\n\t      _this5.removeChild(modal);\n\t    });\n\t\n\t    return modal.open();\n\t  };\n\t\n\t  /**\n\t   * Gets tag settings\n\t   *\n\t   * @param {Element} tag\n\t   *        The player tag\n\t   *\n\t   * @return {Object}\n\t   *         An object containing all of the settings\n\t   *         for a player tag\n\t   */\n\t\n\t\n\t  Player.getTagSettings = function getTagSettings(tag) {\n\t    var baseOptions = {\n\t      sources: [],\n\t      tracks: []\n\t    };\n\t\n\t    var tagOptions = Dom.getElAttributes(tag);\n\t    var dataSetup = tagOptions['data-setup'];\n\t\n\t    if (Dom.hasElClass(tag, 'vjs-fluid')) {\n\t      tagOptions.fluid = true;\n\t    }\n\t\n\t    // Check if data-setup attr exists.\n\t    if (dataSetup !== null) {\n\t      // Parse options JSON\n\t      // If empty string, make it a parsable json object.\n\t      var _safeParseTuple = (0, _tuple2['default'])(dataSetup || '{}'),\n\t          err = _safeParseTuple[0],\n\t          data = _safeParseTuple[1];\n\t\n\t      if (err) {\n\t        _log2['default'].error(err);\n\t      }\n\t      (0, _obj.assign)(tagOptions, data);\n\t    }\n\t\n\t    (0, _obj.assign)(baseOptions, tagOptions);\n\t\n\t    // Get tag children settings\n\t    if (tag.hasChildNodes()) {\n\t      var children = tag.childNodes;\n\t\n\t      for (var i = 0, j = children.length; i < j; i++) {\n\t        var child = children[i];\n\t        // Change case needed: http://ejohn.org/blog/nodename-case-sensitivity/\n\t        var childName = child.nodeName.toLowerCase();\n\t\n\t        if (childName === 'source') {\n\t          baseOptions.sources.push(Dom.getElAttributes(child));\n\t        } else if (childName === 'track') {\n\t          baseOptions.tracks.push(Dom.getElAttributes(child));\n\t        }\n\t      }\n\t    }\n\t\n\t    return baseOptions;\n\t  };\n\t\n\t  /**\n\t   * Determine wether or not flexbox is supported\n\t   *\n\t   * @return {boolean}\n\t   *         - true if flexbox is supported\n\t   *         - false if flexbox is not supported\n\t   */\n\t\n\t\n\t  Player.prototype.flexNotSupported_ = function flexNotSupported_() {\n\t    var elem = _document2['default'].createElement('i');\n\t\n\t    // Note: We don't actually use flexBasis (or flexOrder), but it's one of the more\n\t    // common flex features that we can rely on when checking for flex support.\n\t    return !('flexBasis' in elem.style || 'webkitFlexBasis' in elem.style || 'mozFlexBasis' in elem.style || 'msFlexBasis' in elem.style ||\n\t    // IE10-specific (2012 flex spec)\n\t    'msFlexOrder' in elem.style);\n\t  };\n\t\n\t  return Player;\n\t}(_component2['default']);\n\t\n\t/**\n\t * Global player list\n\t *\n\t * @type {Object}\n\t */\n\t\n\t\n\tPlayer.players = {};\n\t\n\tvar navigator = _window2['default'].navigator;\n\t\n\t/*\n\t * Player instance options, surfaced using options\n\t * options = Player.prototype.options_\n\t * Make changes in options, not here.\n\t *\n\t * @type {Object}\n\t * @private\n\t */\n\tPlayer.prototype.options_ = {\n\t  // Default order of fallback technology\n\t  techOrder: ['html5', 'flash'],\n\t  // techOrder: ['flash','html5'],\n\t\n\t  html5: {},\n\t  flash: {},\n\t\n\t  // defaultVolume: 0.85,\n\t  defaultVolume: 0.00,\n\t\n\t  // default inactivity timeout\n\t  inactivityTimeout: 2000,\n\t\n\t  // default playback rates\n\t  playbackRates: [],\n\t  // Add playback rate selection by adding rates\n\t  // 'playbackRates': [0.5, 1, 1.5, 2],\n\t\n\t  // Included control sets\n\t  children: ['mediaLoader', 'posterImage', 'textTrackDisplay', 'loadingSpinner', 'bigPlayButton', 'controlBar', 'errorDisplay', 'textTrackSettings'],\n\t\n\t  language: navigator && (navigator.languages && navigator.languages[0] || navigator.userLanguage || navigator.language) || 'en',\n\t\n\t  // locales and their language translations\n\t  languages: {},\n\t\n\t  // Default message to show when a video cannot be played.\n\t  notSupportedMessage: 'No compatible source was found for this media.'\n\t};\n\t\n\t[\n\t/**\n\t * Returns whether or not the player is in the \"ended\" state.\n\t *\n\t * @return {Boolean} True if the player is in the ended state, false if not.\n\t * @method Player#ended\n\t */\n\t'ended',\n\t/**\n\t * Returns whether or not the player is in the \"seeking\" state.\n\t *\n\t * @return {Boolean} True if the player is in the seeking state, false if not.\n\t * @method Player#seeking\n\t */\n\t'seeking',\n\t/**\n\t * Returns the TimeRanges of the media that are currently available\n\t * for seeking to.\n\t *\n\t * @return {TimeRanges} the seekable intervals of the media timeline\n\t * @method Player#seekable\n\t */\n\t'seekable',\n\t/**\n\t * Returns the current state of network activity for the element, from\n\t * the codes in the list below.\n\t * - NETWORK_EMPTY (numeric value 0)\n\t *   The element has not yet been initialised. All attributes are in\n\t *   their initial states.\n\t * - NETWORK_IDLE (numeric value 1)\n\t *   The element's resource selection algorithm is active and has\n\t *   selected a resource, but it is not actually using the network at\n\t *   this time.\n\t * - NETWORK_LOADING (numeric value 2)\n\t *   The user agent is actively trying to download data.\n\t * - NETWORK_NO_SOURCE (numeric value 3)\n\t *   The element's resource selection algorithm is active, but it has\n\t *   not yet found a resource to use.\n\t *\n\t * @see https://html.spec.whatwg.org/multipage/embedded-content.html#network-states\n\t * @return {number} the current network activity state\n\t * @method Player#networkState\n\t */\n\t'networkState',\n\t/**\n\t * Returns a value that expresses the current state of the element\n\t * with respect to rendering the current playback position, from the\n\t * codes in the list below.\n\t * - HAVE_NOTHING (numeric value 0)\n\t *   No information regarding the media resource is available.\n\t * - HAVE_METADATA (numeric value 1)\n\t *   Enough of the resource has been obtained that the duration of the\n\t *   resource is available.\n\t * - HAVE_CURRENT_DATA (numeric value 2)\n\t *   Data for the immediate current playback position is available.\n\t * - HAVE_FUTURE_DATA (numeric value 3)\n\t *   Data for the immediate current playback position is available, as\n\t *   well as enough data for the user agent to advance the current\n\t *   playback position in the direction of playback.\n\t * - HAVE_ENOUGH_DATA (numeric value 4)\n\t *   The user agent estimates that enough data is available for\n\t *   playback to proceed uninterrupted.\n\t *\n\t * @see https://html.spec.whatwg.org/multipage/embedded-content.html#dom-media-readystate\n\t * @return {number} the current playback rendering state\n\t * @method Player#readyState\n\t */\n\t'readyState'].forEach(function (fn) {\n\t  Player.prototype[fn] = function () {\n\t    return this.techGet_(fn);\n\t  };\n\t});\n\t\n\tTECH_EVENTS_RETRIGGER.forEach(function (event) {\n\t  Player.prototype['handleTech' + (0, _toTitleCase2['default'])(event) + '_'] = function () {\n\t    return this.trigger(event);\n\t  };\n\t});\n\t\n\t/**\n\t * Fired when the player has initial duration and dimension information\n\t *\n\t * @event Player#loadedmetadata\n\t * @type {EventTarget~Event}\n\t */\n\t\n\t/**\n\t * Fired when the player has downloaded data at the current playback position\n\t *\n\t * @event Player#loadeddata\n\t * @type {EventTarget~Event}\n\t */\n\t\n\t/**\n\t * Fired when the current playback position has changed *\n\t * During playback this is fired every 15-250 milliseconds, depending on the\n\t * playback technology in use.\n\t *\n\t * @event Player#timeupdate\n\t * @type {EventTarget~Event}\n\t */\n\t\n\t/**\n\t * Fired when the volume changes\n\t *\n\t * @event Player#volumechange\n\t * @type {EventTarget~Event}\n\t */\n\t\n\t_component2['default'].registerComponent('Player', Player);\n\texports['default'] = Player;\n\n\n/***/ },\n/* 22 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\texports.__esModule = true;\n\texports.createTimeRange = undefined;\n\texports.createTimeRanges = createTimeRanges;\n\t\n\tvar _log = __webpack_require__(10);\n\t\n\tvar _log2 = _interopRequireDefault(_log);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\t\n\t/**\n\t * Returns the time for the specified index at the start or end\n\t * of a TimeRange object.\n\t *\n\t * @function time-ranges:indexFunction\n\t *\n\t * @param {number} [index=0]\n\t *        The range number to return the time for.\n\t *\n\t * @return {number}\n\t *         The time that offset at the specified index.\n\t *\n\t * @depricated index must be set to a value, in the future this will throw an error.\n\t */\n\t\n\t/**\n\t * An object that contains ranges of time for various reasons.\n\t *\n\t * @typedef {Object} TimeRange\n\t *\n\t * @property {number} length\n\t *           The number of time ranges represented by this Object\n\t *\n\t * @property {time-ranges:indexFunction} start\n\t *           Returns the time offset at which a specified time range begins.\n\t *\n\t * @property {time-ranges:indexFunction} end\n\t *           Returns the time offset at which a specified time range begins.\n\t *\n\t * @see https://developer.mozilla.org/en-US/docs/Web/API/TimeRanges\n\t */\n\t\n\t/**\n\t * Check if any of the time ranges are over the maximum index.\n\t *\n\t * @param {string} fnName\n\t *        The function name to use for logging\n\t *\n\t * @param {number} index\n\t *        The index to check\n\t *\n\t * @param {number} maxIndex\n\t *        The maximum possible index\n\t *\n\t * @throws {Error} if the timeRanges provided are over the maxIndex\n\t */\n\tfunction rangeCheck(fnName, index, maxIndex) {\n\t  if (index < 0 || index > maxIndex) {\n\t    throw new Error('Failed to execute \\'' + fnName + '\\' on \\'TimeRanges\\': The index provided (' + index + ') is greater than or equal to the maximum bound (' + maxIndex + ').');\n\t  }\n\t}\n\t\n\t/**\n\t * Check if any of the time ranges are over the maximum index.\n\t *\n\t * @param {string} fnName\n\t *        The function name to use for logging\n\t *\n\t * @param {string} valueIndex\n\t *        The proprety that should be used to get the time. should be 'start' or 'end'\n\t *\n\t * @param {Array} ranges\n\t *        An array of time ranges\n\t *\n\t * @param {Array} [rangeIndex=0]\n\t *        The index to start the search at\n\t *\n\t * @return {number}\n\t *         The time that offset at the specified index.\n\t *\n\t *\n\t * @depricated rangeIndex must be set to a value, in the future this will throw an error.\n\t * @throws {Error} if rangeIndex is more than the length of ranges\n\t */\n\t/**\n\t * @file time-ranges.js\n\t * @module time-ranges\n\t */\n\tfunction getRange(fnName, valueIndex, ranges, rangeIndex) {\n\t  if (rangeIndex === undefined) {\n\t    _log2['default'].warn('DEPRECATED: Function \\'' + fnName + '\\' on \\'TimeRanges\\' called without an index argument.');\n\t    rangeIndex = 0;\n\t  }\n\t  rangeCheck(fnName, rangeIndex, ranges.length - 1);\n\t  return ranges[rangeIndex][valueIndex];\n\t}\n\t\n\t/**\n\t * Create a time range object givent ranges of time.\n\t *\n\t * @param {Array} [ranges]\n\t *        An array of time ranges.\n\t */\n\tfunction createTimeRangesObj(ranges) {\n\t  if (ranges === undefined || ranges.length === 0) {\n\t    return {\n\t      length: 0,\n\t      start: function start() {\n\t        throw new Error('This TimeRanges object is empty');\n\t      },\n\t      end: function end() {\n\t        throw new Error('This TimeRanges object is empty');\n\t      }\n\t    };\n\t  }\n\t  return {\n\t    length: ranges.length,\n\t    start: getRange.bind(null, 'start', 0, ranges),\n\t    end: getRange.bind(null, 'end', 1, ranges)\n\t  };\n\t}\n\t\n\t/**\n\t * Should create a fake `TimeRange` object which mimics an HTML5 time range instance.\n\t *\n\t * @param {number|Array} start\n\t *        The start of a single range or an array of ranges\n\t *\n\t * @param {number} end\n\t *        The end of a single range.\n\t *\n\t * @private\n\t */\n\tfunction createTimeRanges(start, end) {\n\t  if (Array.isArray(start)) {\n\t    return createTimeRangesObj(start);\n\t  } else if (start === undefined || end === undefined) {\n\t    return createTimeRangesObj();\n\t  }\n\t  return createTimeRangesObj([[start, end]]);\n\t}\n\t\n\texports.createTimeRange = createTimeRanges;\n\n\n/***/ },\n/* 23 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\texports.__esModule = true;\n\texports.bufferedPercent = bufferedPercent;\n\t\n\tvar _timeRanges = __webpack_require__(22);\n\t\n\t/**\n\t * Compute the percentage of the media that has been buffered.\n\t *\n\t * @param {TimeRange} buffered\n\t *        The current `TimeRange` object representing buffered time ranges\n\t *\n\t * @param {number} duration\n\t *        Total duration of the media\n\t *\n\t * @return {number}\n\t *         Percent buffered of the total duration in decimal form.\n\t */\n\tfunction bufferedPercent(buffered, duration) {\n\t  var bufferedDuration = 0;\n\t  var start = void 0;\n\t  var end = void 0;\n\t\n\t  if (!duration) {\n\t    return 0;\n\t  }\n\t\n\t  if (!buffered || !buffered.length) {\n\t    buffered = (0, _timeRanges.createTimeRange)(0, 0);\n\t  }\n\t\n\t  for (var i = 0; i < buffered.length; i++) {\n\t    start = buffered.start(i);\n\t    end = buffered.end(i);\n\t\n\t    // buffered end can be bigger than duration by a very small fraction\n\t    if (end > duration) {\n\t      end = duration;\n\t    }\n\t\n\t    bufferedDuration += end - start;\n\t  }\n\t\n\t  return bufferedDuration / duration;\n\t} /**\n\t   * @file buffer.js\n\t   * @module buffer\n\t   */\n\n\n/***/ },\n/* 24 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\texports.__esModule = true;\n\t\n\tvar _document = __webpack_require__(5);\n\t\n\tvar _document2 = _interopRequireDefault(_document);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\t\n\t/**\n\t * Store the browser-specific methods for the fullscreen API.\n\t *\n\t * @type {Object}\n\t * @see [Specification]{@link https://fullscreen.spec.whatwg.org}\n\t * @see [Map Approach From Screenfull.js]{@link https://github.com/sindresorhus/screenfull.js}\n\t */\n\tvar FullscreenApi = {};\n\t\n\t// browser API methods\n\t/**\n\t * @file fullscreen-api.js\n\t * @module fullscreen-api\n\t * @private\n\t */\n\tvar apiMap = [['requestFullscreen', 'exitFullscreen', 'fullscreenElement', 'fullscreenEnabled', 'fullscreenchange', 'fullscreenerror'],\n\t// WebKit\n\t['webkitRequestFullscreen', 'webkitExitFullscreen', 'webkitFullscreenElement', 'webkitFullscreenEnabled', 'webkitfullscreenchange', 'webkitfullscreenerror'],\n\t// Old WebKit (Safari 5.1)\n\t['webkitRequestFullScreen', 'webkitCancelFullScreen', 'webkitCurrentFullScreenElement', 'webkitCancelFullScreen', 'webkitfullscreenchange', 'webkitfullscreenerror'],\n\t// Mozilla\n\t['mozRequestFullScreen', 'mozCancelFullScreen', 'mozFullScreenElement', 'mozFullScreenEnabled', 'mozfullscreenchange', 'mozfullscreenerror'],\n\t// Microsoft\n\t['msRequestFullscreen', 'msExitFullscreen', 'msFullscreenElement', 'msFullscreenEnabled', 'MSFullscreenChange', 'MSFullscreenError']];\n\t\n\tvar specApi = apiMap[0];\n\tvar browserApi = void 0;\n\t\n\t// determine the supported set of functions\n\tfor (var i = 0; i < apiMap.length; i++) {\n\t  // check for exitFullscreen function\n\t  if (apiMap[i][1] in _document2['default']) {\n\t    browserApi = apiMap[i];\n\t    break;\n\t  }\n\t}\n\t\n\t// map the browser API names to the spec API names\n\tif (browserApi) {\n\t  for (var _i = 0; _i < browserApi.length; _i++) {\n\t    FullscreenApi[specApi[_i]] = browserApi[_i];\n\t  }\n\t}\n\t\n\texports['default'] = FullscreenApi;\n\n\n/***/ },\n/* 25 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\texports.__esModule = true;\n\t\n\tvar _obj = __webpack_require__(12);\n\t\n\t/**\n\t * A Custom `MediaError` class which mimics the standard HTML5 `MediaError` class.\n\t *\n\t * @param {number|string|Object|MediaError} value\n\t *        This can be of multiple types:\n\t *        - number: should be a standard error code\n\t *        - string: an error message (the code will be 0)\n\t *        - Object: arbitrary properties\n\t *        - `MediaError` (native): used to populate a video.js `MediaError` object\n\t *        - `MediaError` (video.js): will return itself if it's already a\n\t *          video.js `MediaError` object.\n\t *\n\t * @see [MediaError Spec]{@link https://dev.w3.org/html5/spec-author-view/video.html#mediaerror}\n\t * @see [Encrypted MediaError Spec]{@link https://www.w3.org/TR/2013/WD-encrypted-media-20130510/#error-codes}\n\t *\n\t * @class MediaError\n\t */\n\tfunction MediaError(value) {\n\t\n\t  // Allow redundant calls to this constructor to avoid having `instanceof`\n\t  // checks peppered around the code.\n\t  if (value instanceof MediaError) {\n\t    return value;\n\t  }\n\t\n\t  if (typeof value === 'number') {\n\t    this.code = value;\n\t  } else if (typeof value === 'string') {\n\t    // default code is zero, so this is a custom error\n\t    this.message = value;\n\t  } else if ((0, _obj.isObject)(value)) {\n\t\n\t    // We assign the `code` property manually because native `MediaError` objects\n\t    // do not expose it as an own/enumerable property of the object.\n\t    if (typeof value.code === 'number') {\n\t      this.code = value.code;\n\t    }\n\t\n\t    (0, _obj.assign)(this, value);\n\t  }\n\t\n\t  if (!this.message) {\n\t    this.message = MediaError.defaultMessages[this.code] || '';\n\t  }\n\t}\n\t\n\t/**\n\t * The error code that refers two one of the defined `MediaError` types\n\t *\n\t * @type {Number}\n\t */\n\t/**\n\t * @file media-error.js\n\t */\n\tMediaError.prototype.code = 0;\n\t\n\t/**\n\t * An optional message that to show with the error. Message is not part of the HTML5\n\t * video spec but allows for more informative custom errors.\n\t *\n\t * @type {String}\n\t */\n\tMediaError.prototype.message = '';\n\t\n\t/**\n\t * An optional status code that can be set by plugins to allow even more detail about\n\t * the error. For example a plugin might provide a specific HTTP status code and an\n\t * error message for that code. Then when the plugin gets that error this class will\n\t * know how to display an error message for it. This allows a custom message to show\n\t * up on the `Player` error overlay.\n\t *\n\t * @type {Array}\n\t */\n\tMediaError.prototype.status = null;\n\t\n\t/**\n\t * Errors indexed by the W3C standard. The order **CANNOT CHANGE**! See the\n\t * specification listed under {@link MediaError} for more information.\n\t *\n\t * @enum {array}\n\t * @readonly\n\t * @property {string} 0 - MEDIA_ERR_CUSTOM\n\t * @property {string} 1 - MEDIA_ERR_CUSTOM\n\t * @property {string} 2 - MEDIA_ERR_ABORTED\n\t * @property {string} 3 - MEDIA_ERR_NETWORK\n\t * @property {string} 4 - MEDIA_ERR_SRC_NOT_SUPPORTED\n\t * @property {string} 5 - MEDIA_ERR_ENCRYPTED\n\t */\n\tMediaError.errorTypes = ['MEDIA_ERR_CUSTOM', 'MEDIA_ERR_ABORTED', 'MEDIA_ERR_NETWORK', 'MEDIA_ERR_DECODE', 'MEDIA_ERR_SRC_NOT_SUPPORTED', 'MEDIA_ERR_ENCRYPTED'];\n\t\n\t/**\n\t * The default `MediaError` messages based on the {@link MediaError.errorTypes}.\n\t *\n\t * @type {Array}\n\t * @constant\n\t */\n\tMediaError.defaultMessages = {\n\t  1: 'You aborted the media playback',\n\t  2: 'A network error caused the media download to fail part-way.',\n\t  3: 'The media playback was aborted due to a corruption problem or because the media used features your browser did not support.',\n\t  4: 'The media could not be loaded, either because the server or network failed or because the format is not supported.',\n\t  5: 'The media is encrypted and we do not have the keys to decrypt it.'\n\t};\n\t\n\t// Add types as properties on MediaError\n\t// e.g. MediaError.MEDIA_ERR_SRC_NOT_SUPPORTED = 4;\n\tfor (var errNum = 0; errNum < MediaError.errorTypes.length; errNum++) {\n\t  MediaError[MediaError.errorTypes[errNum]] = errNum;\n\t  // values should be accessible on both the class and instance\n\t  MediaError.prototype[MediaError.errorTypes[errNum]] = errNum;\n\t}\n\t\n\t// jsdocs for instance/static members added above\n\t// instance methods use `#` and static methods use `.`\n\t/**\n\t * W3C error code for any custom error.\n\t *\n\t * @member MediaError#MEDIA_ERR_CUSTOM\n\t * @constant {number}\n\t * @default 0\n\t */\n\t/**\n\t * W3C error code for any custom error.\n\t *\n\t * @member MediaError.MEDIA_ERR_CUSTOM\n\t * @constant {number}\n\t * @default 0\n\t */\n\t\n\t/**\n\t * W3C error code for media error aborted.\n\t *\n\t * @member MediaError#MEDIA_ERR_ABORTED\n\t * @constant {number}\n\t * @default 1\n\t */\n\t/**\n\t * W3C error code for media error aborted.\n\t *\n\t * @member MediaError.MEDIA_ERR_ABORTED\n\t * @constant {number}\n\t * @default 1\n\t */\n\t\n\t/**\n\t * W3C error code for any network error.\n\t *\n\t * @member MediaError#MEDIA_ERR_NETWORK\n\t * @constant {number}\n\t * @default 2\n\t */\n\t/**\n\t * W3C error code for any network error.\n\t *\n\t * @member MediaError.MEDIA_ERR_NETWORK\n\t * @constant {number}\n\t * @default 2\n\t */\n\t\n\t/**\n\t * W3C error code for any decoding error.\n\t *\n\t * @member MediaError#MEDIA_ERR_DECODE\n\t * @constant {number}\n\t * @default 3\n\t */\n\t/**\n\t * W3C error code for any decoding error.\n\t *\n\t * @member MediaError.MEDIA_ERR_DECODE\n\t * @constant {number}\n\t * @default 3\n\t */\n\t\n\t/**\n\t * W3C error code for any time that a source is not supported.\n\t *\n\t * @member MediaError#MEDIA_ERR_SRC_NOT_SUPPORTED\n\t * @constant {number}\n\t * @default 4\n\t */\n\t/**\n\t * W3C error code for any time that a source is not supported.\n\t *\n\t * @member MediaError.MEDIA_ERR_SRC_NOT_SUPPORTED\n\t * @constant {number}\n\t * @default 4\n\t */\n\t\n\t/**\n\t * W3C error code for any time that a source is encrypted.\n\t *\n\t * @member MediaError#MEDIA_ERR_ENCRYPTED\n\t * @constant {number}\n\t * @default 5\n\t */\n\t/**\n\t * W3C error code for any time that a source is encrypted.\n\t *\n\t * @member MediaError.MEDIA_ERR_ENCRYPTED\n\t * @constant {number}\n\t * @default 5\n\t */\n\t\n\texports['default'] = MediaError;\n\n\n/***/ },\n/* 26 */\n/***/ function(module, exports) {\n\n\tmodule.exports = SafeParseTuple\n\t\n\tfunction SafeParseTuple(obj, reviver) {\n\t    var json\n\t    var error = null\n\t\n\t    try {\n\t        json = JSON.parse(obj, reviver)\n\t    } catch (err) {\n\t        error = err\n\t    }\n\t\n\t    return [error, json]\n\t}\n\n\n/***/ },\n/* 27 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\texports.__esModule = true;\n\t/**\n\t * @file text-track-list-converter.js Utilities for capturing text track state and\n\t * re-creating tracks based on a capture.\n\t *\n\t * @module text-track-list-converter\n\t */\n\t\n\t/**\n\t * Examine a single {@link TextTrack} and return a JSON-compatible javascript object that\n\t * represents the {@link TextTrack}'s state.\n\t *\n\t * @param {TextTrack} track\n\t *        The text track to query.\n\t *\n\t * @return {Object}\n\t *         A serializable javascript representation of the TextTrack.\n\t * @private\n\t */\n\tvar trackToJson_ = function trackToJson_(track) {\n\t  var ret = ['kind', 'label', 'language', 'id', 'inBandMetadataTrackDispatchType', 'mode', 'src'].reduce(function (acc, prop, i) {\n\t\n\t    if (track[prop]) {\n\t      acc[prop] = track[prop];\n\t    }\n\t\n\t    return acc;\n\t  }, {\n\t    cues: track.cues && Array.prototype.map.call(track.cues, function (cue) {\n\t      return {\n\t        startTime: cue.startTime,\n\t        endTime: cue.endTime,\n\t        text: cue.text,\n\t        id: cue.id\n\t      };\n\t    })\n\t  });\n\t\n\t  return ret;\n\t};\n\t\n\t/**\n\t * Examine a {@link Tech} and return a JSON-compatible javascript array that represents the\n\t * state of all {@link TextTrack}s currently configured. The return array is compatible with\n\t * {@link text-track-list-converter:jsonToTextTracks}.\n\t *\n\t * @param {Tech} tech\n\t *        The tech object to query\n\t *\n\t * @return {Array}\n\t *         A serializable javascript representation of the {@link Tech}s\n\t *         {@link TextTrackList}.\n\t */\n\tvar textTracksToJson = function textTracksToJson(tech) {\n\t\n\t  var trackEls = tech.$$('track');\n\t\n\t  var trackObjs = Array.prototype.map.call(trackEls, function (t) {\n\t    return t.track;\n\t  });\n\t  var tracks = Array.prototype.map.call(trackEls, function (trackEl) {\n\t    var json = trackToJson_(trackEl.track);\n\t\n\t    if (trackEl.src) {\n\t      json.src = trackEl.src;\n\t    }\n\t    return json;\n\t  });\n\t\n\t  return tracks.concat(Array.prototype.filter.call(tech.textTracks(), function (track) {\n\t    return trackObjs.indexOf(track) === -1;\n\t  }).map(trackToJson_));\n\t};\n\t\n\t/**\n\t * Create a set of remote {@link TextTrack}s on a {@link Tech} based on an array of javascript\n\t * object {@link TextTrack} representations.\n\t *\n\t * @param {Array} json\n\t *        An array of `TextTrack` representation objects, like those that would be\n\t *        produced by `textTracksToJson`.\n\t *\n\t * @param {Tech} tech\n\t *        The `Tech` to create the `TextTrack`s on.\n\t */\n\tvar jsonToTextTracks = function jsonToTextTracks(json, tech) {\n\t  json.forEach(function (track) {\n\t    var addedTrack = tech.addRemoteTextTrack(track).track;\n\t\n\t    if (!track.src && track.cues) {\n\t      track.cues.forEach(function (cue) {\n\t        return addedTrack.addCue(cue);\n\t      });\n\t    }\n\t  });\n\t\n\t  return tech.textTracks();\n\t};\n\t\n\texports['default'] = { textTracksToJson: textTracksToJson, jsonToTextTracks: jsonToTextTracks, trackToJson_: trackToJson_ };\n\n\n/***/ },\n/* 28 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\texports.__esModule = true;\n\t\n\tvar _dom = __webpack_require__(8);\n\t\n\tvar Dom = _interopRequireWildcard(_dom);\n\t\n\tvar _fn = __webpack_require__(17);\n\t\n\tvar Fn = _interopRequireWildcard(_fn);\n\t\n\tvar _component = __webpack_require__(16);\n\t\n\tvar _component2 = _interopRequireDefault(_component);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\t\n\tfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj['default'] = obj; return newObj; } }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /**\n\t                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * @file modal-dialog.js\n\t                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                */\n\t\n\t\n\tvar MODAL_CLASS_NAME = 'vjs-modal-dialog';\n\tvar ESC = 27;\n\t\n\t/**\n\t * The `ModalDialog` displays over the video and its controls, which blocks\n\t * interaction with the player until it is closed.\n\t *\n\t * Modal dialogs include a \"Close\" button and will close when that button\n\t * is activated - or when ESC is pressed anywhere.\n\t *\n\t * @extends Component\n\t */\n\t\n\tvar ModalDialog = function (_Component) {\n\t  _inherits(ModalDialog, _Component);\n\t\n\t  /**\n\t   * Create an instance of this class.\n\t   *\n\t   * @param {Player} player\n\t   *        The `Player` that this class should be attached to.\n\t   *\n\t   * @param {Object} [options]\n\t   *        The key/value store of player options.\n\t   *\n\t   * @param {Mixed} [options.content=undefined]\n\t   *        Provide customized content for this modal.\n\t   *\n\t   * @param {string} [options.description]\n\t   *        A text description for the modal, primarily for accessibility.\n\t   *\n\t   * @param {boolean} [options.fillAlways=false]\n\t   *        Normally, modals are automatically filled only the first time\n\t   *        they open. This tells the modal to refresh its content\n\t   *        every time it opens.\n\t   *\n\t   * @param {string} [options.label]\n\t   *        A text label for the modal, primarily for accessibility.\n\t   *\n\t   * @param {boolean} [options.temporary=true]\n\t   *        If `true`, the modal can only be opened once; it will be\n\t   *        disposed as soon as it's closed.\n\t   *\n\t   * @param {boolean} [options.uncloseable=false]\n\t   *        If `true`, the user will not be able to close the modal\n\t   *        through the UI in the normal ways. Programmatic closing is\n\t   *        still possible.\n\t   */\n\t  function ModalDialog(player, options) {\n\t    _classCallCheck(this, ModalDialog);\n\t\n\t    var _this = _possibleConstructorReturn(this, _Component.call(this, player, options));\n\t\n\t    _this.opened_ = _this.hasBeenOpened_ = _this.hasBeenFilled_ = false;\n\t\n\t    _this.closeable(!_this.options_.uncloseable);\n\t    _this.content(_this.options_.content);\n\t\n\t    // Make sure the contentEl is defined AFTER any children are initialized\n\t    // because we only want the contents of the modal in the contentEl\n\t    // (not the UI elements like the close button).\n\t    _this.contentEl_ = Dom.createEl('div', {\n\t      className: MODAL_CLASS_NAME + '-content'\n\t    }, {\n\t      role: 'document'\n\t    });\n\t\n\t    _this.descEl_ = Dom.createEl('p', {\n\t      className: MODAL_CLASS_NAME + '-description vjs-offscreen',\n\t      id: _this.el().getAttribute('aria-describedby')\n\t    });\n\t\n\t    Dom.textContent(_this.descEl_, _this.description());\n\t    _this.el_.appendChild(_this.descEl_);\n\t    _this.el_.appendChild(_this.contentEl_);\n\t    return _this;\n\t  }\n\t\n\t  /**\n\t   * Create the `ModalDialog`'s DOM element\n\t   *\n\t   * @return {Element}\n\t   *         The DOM element that gets created.\n\t   */\n\t\n\t\n\t  ModalDialog.prototype.createEl = function createEl() {\n\t    return _Component.prototype.createEl.call(this, 'div', {\n\t      className: this.buildCSSClass(),\n\t      tabIndex: -1\n\t    }, {\n\t      'aria-describedby': this.id() + '_description',\n\t      'aria-hidden': 'true',\n\t      'aria-label': this.label(),\n\t      'role': 'dialog'\n\t    });\n\t  };\n\t\n\t  /**\n\t   * Builds the default DOM `className`.\n\t   *\n\t   * @return {string}\n\t   *         The DOM `className` for this object.\n\t   */\n\t\n\t\n\t  ModalDialog.prototype.buildCSSClass = function buildCSSClass() {\n\t    return MODAL_CLASS_NAME + ' vjs-hidden ' + _Component.prototype.buildCSSClass.call(this);\n\t  };\n\t\n\t  /**\n\t   * Handles `keydown` events on the document, looking for ESC, which closes\n\t   * the modal.\n\t   *\n\t   * @param {EventTarget~Event} e\n\t   *        The keypress that triggered this event.\n\t   *\n\t   * @listens keydown\n\t   */\n\t\n\t\n\t  ModalDialog.prototype.handleKeyPress = function handleKeyPress(e) {\n\t    if (e.which === ESC && this.closeable()) {\n\t      this.close();\n\t    }\n\t  };\n\t\n\t  /**\n\t   * Returns the label string for this modal. Primarily used for accessibility.\n\t   *\n\t   * @return {string}\n\t   *         the localized or raw label of this modal.\n\t   */\n\t\n\t\n\t  ModalDialog.prototype.label = function label() {\n\t    return this.options_.label || this.localize('Modal Window');\n\t  };\n\t\n\t  /**\n\t   * Returns the description string for this modal. Primarily used for\n\t   * accessibility.\n\t   *\n\t   * @return {string}\n\t   *         The localized or raw description of this modal.\n\t   */\n\t\n\t\n\t  ModalDialog.prototype.description = function description() {\n\t    var desc = this.options_.description || this.localize('This is a modal window.');\n\t\n\t    // Append a universal closeability message if the modal is closeable.\n\t    if (this.closeable()) {\n\t      desc += ' ' + this.localize('This modal can be closed by pressing the Escape key or activating the close button.');\n\t    }\n\t\n\t    return desc;\n\t  };\n\t\n\t  /**\n\t   * Opens the modal.\n\t   *\n\t   * @fires ModalDialog#beforemodalopen\n\t   * @fires ModalDialog#modalopen\n\t   *\n\t   * @return {ModalDialog}\n\t   *         Returns itself; method can be chained.\n\t   */\n\t\n\t\n\t  ModalDialog.prototype.open = function open() {\n\t    if (!this.opened_) {\n\t      var player = this.player();\n\t\n\t      /**\n\t       * Fired just before a `ModalDialog` is opened.\n\t       *\n\t       * @event ModalDialog#beforemodalopen\n\t       * @type {EventTarget~Event}\n\t       */\n\t      this.trigger('beforemodalopen');\n\t      this.opened_ = true;\n\t\n\t      // Fill content if the modal has never opened before and\n\t      // never been filled.\n\t      if (this.options_.fillAlways || !this.hasBeenOpened_ && !this.hasBeenFilled_) {\n\t        this.fill();\n\t      }\n\t\n\t      // If the player was playing, pause it and take note of its previously\n\t      // playing state.\n\t      this.wasPlaying_ = !player.paused();\n\t\n\t      if (this.wasPlaying_) {\n\t        player.pause();\n\t      }\n\t\n\t      if (this.closeable()) {\n\t        this.on(this.el_.ownerDocument, 'keydown', Fn.bind(this, this.handleKeyPress));\n\t      }\n\t\n\t      player.controls(false);\n\t      this.show();\n\t      this.el().setAttribute('aria-hidden', 'false');\n\t\n\t      /**\n\t       * Fired just after a `ModalDialog` is opened.\n\t       *\n\t       * @event ModalDialog#modalopen\n\t       * @type {EventTarget~Event}\n\t       */\n\t      this.trigger('modalopen');\n\t      this.hasBeenOpened_ = true;\n\t    }\n\t    return this;\n\t  };\n\t\n\t  /**\n\t   * If the `ModalDialog` is currently open or closed.\n\t   *\n\t   * @param  {boolean} [value]\n\t   *         If given, it will open (`true`) or close (`false`) the modal.\n\t   *\n\t   * @return {boolean}\n\t   *         the current open state of the modaldialog\n\t   */\n\t\n\t\n\t  ModalDialog.prototype.opened = function opened(value) {\n\t    if (typeof value === 'boolean') {\n\t      this[value ? 'open' : 'close']();\n\t    }\n\t    return this.opened_;\n\t  };\n\t\n\t  /**\n\t   * Closes the modal, does nothing if the `ModalDialog` is\n\t   * not open.\n\t   *\n\t   * @fires ModalDialog#beforemodalclose\n\t   * @fires ModalDialog#modalclose\n\t   *\n\t   * @return {ModalDialog}\n\t   *         Returns itself; method can be chained.\n\t   */\n\t\n\t\n\t  ModalDialog.prototype.close = function close() {\n\t    if (this.opened_) {\n\t      var player = this.player();\n\t\n\t      /**\n\t       * Fired just before a `ModalDialog` is closed.\n\t       *\n\t       * @event ModalDialog#beforemodalclose\n\t       * @type {EventTarget~Event}\n\t       */\n\t      this.trigger('beforemodalclose');\n\t      this.opened_ = false;\n\t\n\t      if (this.wasPlaying_) {\n\t        player.play();\n\t      }\n\t\n\t      if (this.closeable()) {\n\t        this.off(this.el_.ownerDocument, 'keydown', Fn.bind(this, this.handleKeyPress));\n\t      }\n\t\n\t      player.controls(true);\n\t      this.hide();\n\t      this.el().setAttribute('aria-hidden', 'true');\n\t\n\t      /**\n\t       * Fired just after a `ModalDialog` is closed.\n\t       *\n\t       * @event ModalDialog#modalclose\n\t       * @type {EventTarget~Event}\n\t       */\n\t      this.trigger('modalclose');\n\t\n\t      if (this.options_.temporary) {\n\t        this.dispose();\n\t      }\n\t    }\n\t    return this;\n\t  };\n\t\n\t  /**\n\t   * Check to see if the `ModalDialog` is closeable via the UI.\n\t   *\n\t   * @param  {boolean} [value]\n\t   *         If given as a boolean, it will set the `closeable` option.\n\t   *\n\t   * @return {boolean}\n\t   *         Returns the final value of the closable option.\n\t   */\n\t\n\t\n\t  ModalDialog.prototype.closeable = function closeable(value) {\n\t    if (typeof value === 'boolean') {\n\t      var closeable = this.closeable_ = !!value;\n\t      var close = this.getChild('closeButton');\n\t\n\t      // If this is being made closeable and has no close button, add one.\n\t      if (closeable && !close) {\n\t\n\t        // The close button should be a child of the modal - not its\n\t        // content element, so temporarily change the content element.\n\t        var temp = this.contentEl_;\n\t\n\t        this.contentEl_ = this.el_;\n\t        close = this.addChild('closeButton', { controlText: 'Close Modal Dialog' });\n\t        this.contentEl_ = temp;\n\t        this.on(close, 'close', this.close);\n\t      }\n\t\n\t      // If this is being made uncloseable and has a close button, remove it.\n\t      if (!closeable && close) {\n\t        this.off(close, 'close', this.close);\n\t        this.removeChild(close);\n\t        close.dispose();\n\t      }\n\t    }\n\t    return this.closeable_;\n\t  };\n\t\n\t  /**\n\t   * Fill the modal's content element with the modal's \"content\" option.\n\t   * The content element will be emptied before this change takes place.\n\t   *\n\t   * @return {ModalDialog}\n\t   *         Returns itself; method can be chained.\n\t   */\n\t\n\t\n\t  ModalDialog.prototype.fill = function fill() {\n\t    return this.fillWith(this.content());\n\t  };\n\t\n\t  /**\n\t   * Fill the modal's content element with arbitrary content.\n\t   * The content element will be emptied before this change takes place.\n\t   *\n\t   * @fires ModalDialog#beforemodalfill\n\t   * @fires ModalDialog#modalfill\n\t   *\n\t   * @param  {Mixed} [content]\n\t   *         The same rules apply to this as apply to the `content` option.\n\t   *\n\t   * @return {ModalDialog}\n\t   *         Returns itself; method can be chained.\n\t   */\n\t\n\t\n\t  ModalDialog.prototype.fillWith = function fillWith(content) {\n\t    var contentEl = this.contentEl();\n\t    var parentEl = contentEl.parentNode;\n\t    var nextSiblingEl = contentEl.nextSibling;\n\t\n\t    /**\n\t     * Fired just before a `ModalDialog` is filled with content.\n\t     *\n\t     * @event ModalDialog#beforemodalfill\n\t     * @type {EventTarget~Event}\n\t     */\n\t    this.trigger('beforemodalfill');\n\t    this.hasBeenFilled_ = true;\n\t\n\t    // Detach the content element from the DOM before performing\n\t    // manipulation to avoid modifying the live DOM multiple times.\n\t    parentEl.removeChild(contentEl);\n\t    this.empty();\n\t    Dom.insertContent(contentEl, content);\n\t    /**\n\t     * Fired just after a `ModalDialog` is filled with content.\n\t     *\n\t     * @event ModalDialog#modalfill\n\t     * @type {EventTarget~Event}\n\t     */\n\t    this.trigger('modalfill');\n\t\n\t    // Re-inject the re-filled content element.\n\t    if (nextSiblingEl) {\n\t      parentEl.insertBefore(contentEl, nextSiblingEl);\n\t    } else {\n\t      parentEl.appendChild(contentEl);\n\t    }\n\t\n\t    return this;\n\t  };\n\t\n\t  /**\n\t   * Empties the content element. This happens anytime the modal is filled.\n\t   *\n\t   * @fires ModalDialog#beforemodalempty\n\t   * @fires ModalDialog#modalempty\n\t   *\n\t   * @return {ModalDialog}\n\t   *         Returns itself; method can be chained.\n\t   */\n\t\n\t\n\t  ModalDialog.prototype.empty = function empty() {\n\t    /**\n\t     * Fired just before a `ModalDialog` is emptied.\n\t     *\n\t     * @event ModalDialog#beforemodalempty\n\t     * @type {EventTarget~Event}\n\t     */\n\t    this.trigger('beforemodalempty');\n\t    Dom.emptyEl(this.contentEl());\n\t\n\t    /**\n\t     * Fired just after a `ModalDialog` is emptied.\n\t     *\n\t     * @event ModalDialog#modalempty\n\t     * @type {EventTarget~Event}\n\t     */\n\t    this.trigger('modalempty');\n\t    return this;\n\t  };\n\t\n\t  /**\n\t   * Gets or sets the modal content, which gets normalized before being\n\t   * rendered into the DOM.\n\t   *\n\t   * This does not update the DOM or fill the modal, but it is called during\n\t   * that process.\n\t   *\n\t   * @param  {Mixed} [value]\n\t   *         If defined, sets the internal content value to be used on the\n\t   *         next call(s) to `fill`. This value is normalized before being\n\t   *         inserted. To \"clear\" the internal content value, pass `null`.\n\t   *\n\t   * @return {Mixed}\n\t   *         The current content of the modal dialog\n\t   */\n\t\n\t\n\t  ModalDialog.prototype.content = function content(value) {\n\t    if (typeof value !== 'undefined') {\n\t      this.content_ = value;\n\t    }\n\t    return this.content_;\n\t  };\n\t\n\t  return ModalDialog;\n\t}(_component2['default']);\n\t\n\t/**\n\t * Default options for `ModalDialog` default options.\n\t *\n\t * @type {Object}\n\t * @private\n\t */\n\t\n\t\n\tModalDialog.prototype.options_ = {\n\t  temporary: true\n\t};\n\t\n\t_component2['default'].registerComponent('ModalDialog', ModalDialog);\n\texports['default'] = ModalDialog;\n\n\n/***/ },\n/* 29 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\texports.__esModule = true;\n\t\n\tvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\t\n\tvar _component = __webpack_require__(16);\n\t\n\tvar _component2 = _interopRequireDefault(_component);\n\t\n\tvar _htmlTrackElement = __webpack_require__(30);\n\t\n\tvar _htmlTrackElement2 = _interopRequireDefault(_htmlTrackElement);\n\t\n\tvar _htmlTrackElementList = __webpack_require__(42);\n\t\n\tvar _htmlTrackElementList2 = _interopRequireDefault(_htmlTrackElementList);\n\t\n\tvar _mergeOptions = __webpack_require__(19);\n\t\n\tvar _mergeOptions2 = _interopRequireDefault(_mergeOptions);\n\t\n\tvar _textTrack = __webpack_require__(31);\n\t\n\tvar _textTrack2 = _interopRequireDefault(_textTrack);\n\t\n\tvar _textTrackList = __webpack_require__(43);\n\t\n\tvar _textTrackList2 = _interopRequireDefault(_textTrackList);\n\t\n\tvar _videoTrackList = __webpack_require__(45);\n\t\n\tvar _videoTrackList2 = _interopRequireDefault(_videoTrackList);\n\t\n\tvar _audioTrackList = __webpack_require__(46);\n\t\n\tvar _audioTrackList2 = _interopRequireDefault(_audioTrackList);\n\t\n\tvar _fn = __webpack_require__(17);\n\t\n\tvar Fn = _interopRequireWildcard(_fn);\n\t\n\tvar _log = __webpack_require__(10);\n\t\n\tvar _log2 = _interopRequireDefault(_log);\n\t\n\tvar _timeRanges = __webpack_require__(22);\n\t\n\tvar _buffer = __webpack_require__(23);\n\t\n\tvar _mediaError = __webpack_require__(25);\n\t\n\tvar _mediaError2 = _interopRequireDefault(_mediaError);\n\t\n\tvar _window = __webpack_require__(4);\n\t\n\tvar _window2 = _interopRequireDefault(_window);\n\t\n\tvar _document = __webpack_require__(5);\n\t\n\tvar _document2 = _interopRequireDefault(_document);\n\t\n\tvar _obj = __webpack_require__(12);\n\t\n\tfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj['default'] = obj; return newObj; } }\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /**\n\t                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * @file tech.js\n\t                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                */\n\t\n\t/**\n\t * An Object containing a structure like: `{src: 'url', type: 'mimetype'}` or string\n\t * that just contains the src url alone.\n\t * * `var SourceObject = {src: 'http://ex.com/video.mp4', type: 'video/mp4'};`\n\t   * `var SourceString = 'http://example.com/some-video.mp4';`\n\t *\n\t * @typedef {Object|string} Tech~SourceObject\n\t *\n\t * @property {string} src\n\t *           The url to the source\n\t *\n\t * @property {string} type\n\t *           The mime type of the source\n\t */\n\t\n\t/**\n\t * A function used by {@link Tech} to create a new {@link TextTrack}.\n\t *\n\t * @param {Tech} self\n\t *        An instance of the Tech class.\n\t *\n\t * @param {string} kind\n\t *        `TextTrack` kind (subtitles, captions, descriptions, chapters, or metadata)\n\t *\n\t * @param {string} [label]\n\t *        Label to identify the text track\n\t *\n\t * @param {string} [language]\n\t *        Two letter language abbreviation\n\t *\n\t * @param {Object} [options={}]\n\t *        An object with additional text track options\n\t *\n\t * @return {TextTrack}\n\t *          The text track that was created.\n\t */\n\tfunction createTrackHelper(self, kind, label, language) {\n\t  var options = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : {};\n\t\n\t  var tracks = self.textTracks();\n\t\n\t  options.kind = kind;\n\t\n\t  if (label) {\n\t    options.label = label;\n\t  }\n\t  if (language) {\n\t    options.language = language;\n\t  }\n\t  options.tech = self;\n\t\n\t  var track = new _textTrack2['default'](options);\n\t\n\t  tracks.addTrack_(track);\n\t\n\t  return track;\n\t}\n\t\n\t/**\n\t * This is the base class for media playback technology controllers, such as\n\t * {@link Flash} and {@link HTML5}\n\t *\n\t * @extends Component\n\t */\n\t\n\tvar Tech = function (_Component) {\n\t  _inherits(Tech, _Component);\n\t\n\t  /**\n\t   * Create an instance of this Tech.\n\t   *\n\t   * @param {Object} [options]\n\t   *        The key/value store of player options.\n\t   *\n\t   * @param {Component~ReadyCallback} ready\n\t   *        Callback function to call when the `HTML5` Tech is ready.\n\t   */\n\t  function Tech() {\n\t    var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\t    var ready = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : function () {};\n\t\n\t    _classCallCheck(this, Tech);\n\t\n\t    // we don't want the tech to report user activity automatically.\n\t    // This is done manually in addControlsListeners\n\t    options.reportTouchActivity = false;\n\t\n\t    // keep track of whether the current source has played at all to\n\t    // implement a very limited played()\n\t    var _this = _possibleConstructorReturn(this, _Component.call(this, null, options, ready));\n\t\n\t    _this.hasStarted_ = false;\n\t    _this.on('playing', function () {\n\t      this.hasStarted_ = true;\n\t    });\n\t    _this.on('loadstart', function () {\n\t      this.hasStarted_ = false;\n\t    });\n\t\n\t    _this.textTracks_ = options.textTracks;\n\t    _this.videoTracks_ = options.videoTracks;\n\t    _this.audioTracks_ = options.audioTracks;\n\t\n\t    // Manually track progress in cases where the browser/flash player doesn't report it.\n\t    if (!_this.featuresProgressEvents) {\n\t      _this.manualProgressOn();\n\t    }\n\t\n\t    // Manually track timeupdates in cases where the browser/flash player doesn't report it.\n\t    if (!_this.featuresTimeupdateEvents) {\n\t      _this.manualTimeUpdatesOn();\n\t    }\n\t\n\t    ['Text', 'Audio', 'Video'].forEach(function (track) {\n\t      if (options['native' + track + 'Tracks'] === false) {\n\t        _this['featuresNative' + track + 'Tracks'] = false;\n\t      }\n\t    });\n\t\n\t    if (options.nativeCaptions === false) {\n\t      _this.featuresNativeTextTracks = false;\n\t    }\n\t\n\t    if (!_this.featuresNativeTextTracks) {\n\t      _this.emulateTextTracks();\n\t    }\n\t\n\t    _this.autoRemoteTextTracks_ = new _textTrackList2['default']();\n\t\n\t    _this.initTextTrackListeners();\n\t    _this.initTrackListeners();\n\t\n\t    // Turn on component tap events only if not using native controls\n\t    if (!options.nativeControlsForTouch) {\n\t      _this.emitTapEvents();\n\t    }\n\t\n\t    if (_this.constructor) {\n\t      _this.name_ = _this.constructor.name || 'Unknown Tech';\n\t    }\n\t    return _this;\n\t  }\n\t\n\t  /* Fallbacks for unsupported event types\n\t  ================================================================================ */\n\t\n\t  /**\n\t   * Polyfill the `progress` event for browsers that don't support it natively.\n\t   *\n\t   * @see {@link Tech#trackProgress}\n\t   */\n\t\n\t\n\t  Tech.prototype.manualProgressOn = function manualProgressOn() {\n\t    this.on('durationchange', this.onDurationChange);\n\t\n\t    this.manualProgress = true;\n\t\n\t    // Trigger progress watching when a source begins loading\n\t    this.one('ready', this.trackProgress);\n\t  };\n\t\n\t  /**\n\t   * Turn off the polyfill for `progress` events that was created in\n\t   * {@link Tech#manualProgressOn}\n\t   */\n\t\n\t\n\t  Tech.prototype.manualProgressOff = function manualProgressOff() {\n\t    this.manualProgress = false;\n\t    this.stopTrackingProgress();\n\t\n\t    this.off('durationchange', this.onDurationChange);\n\t  };\n\t\n\t  /**\n\t   * This is used to trigger a `progress` event when the buffered percent changes. It\n\t   * sets an interval function that will be called every 500 milliseconds to check if the\n\t   * buffer end percent has changed.\n\t   *\n\t   * > This function is called by {@link Tech#manualProgressOn}\n\t   *\n\t   * @param {EventTarget~Event} event\n\t   *        The `ready` event that caused this to run.\n\t   *\n\t   * @listens Tech#ready\n\t   * @fires Tech#progress\n\t   */\n\t\n\t\n\t  Tech.prototype.trackProgress = function trackProgress(event) {\n\t    this.stopTrackingProgress();\n\t    this.progressInterval = this.setInterval(Fn.bind(this, function () {\n\t      // Don't trigger unless buffered amount is greater than last time\n\t\n\t      var numBufferedPercent = this.bufferedPercent();\n\t\n\t      if (this.bufferedPercent_ !== numBufferedPercent) {\n\t        /**\n\t         * See {@link Player#progress}\n\t         *\n\t         * @event Tech#progress\n\t         * @type {EventTarget~Event}\n\t         */\n\t        this.trigger('progress');\n\t      }\n\t\n\t      this.bufferedPercent_ = numBufferedPercent;\n\t\n\t      if (numBufferedPercent === 1) {\n\t        this.stopTrackingProgress();\n\t      }\n\t    }), 500);\n\t  };\n\t\n\t  /**\n\t   * Update our internal duration on a `durationchange` event by calling\n\t   * {@link Tech#duration}.\n\t   *\n\t   * @param {EventTarget~Event} event\n\t   *        The `durationchange` event that caused this to run.\n\t   *\n\t   * @listens Tech#durationchange\n\t   */\n\t\n\t\n\t  Tech.prototype.onDurationChange = function onDurationChange(event) {\n\t    this.duration_ = this.duration();\n\t  };\n\t\n\t  /**\n\t   * Get and create a `TimeRange` object for buffering.\n\t   *\n\t   * @return {TimeRange}\n\t   *         The time range object that was created.\n\t   */\n\t\n\t\n\t  Tech.prototype.buffered = function buffered() {\n\t    return (0, _timeRanges.createTimeRange)(0, 0);\n\t  };\n\t\n\t  /**\n\t   * Get the percentage of the current video that is currently buffered.\n\t   *\n\t   * @return {number}\n\t   *         A number from 0 to 1 that represents the decimal percentage of the\n\t   *         video that is buffered.\n\t   *\n\t   */\n\t\n\t\n\t  Tech.prototype.bufferedPercent = function bufferedPercent() {\n\t    return (0, _buffer.bufferedPercent)(this.buffered(), this.duration_);\n\t  };\n\t\n\t  /**\n\t   * Turn off the polyfill for `progress` events that was created in\n\t   * {@link Tech#manualProgressOn}\n\t   * Stop manually tracking progress events by clearing the interval that was set in\n\t   * {@link Tech#trackProgress}.\n\t   */\n\t\n\t\n\t  Tech.prototype.stopTrackingProgress = function stopTrackingProgress() {\n\t    this.clearInterval(this.progressInterval);\n\t  };\n\t\n\t  /**\n\t   * Polyfill the `timeupdate` event for browsers that don't support it.\n\t   *\n\t   * @see {@link Tech#trackCurrentTime}\n\t   */\n\t\n\t\n\t  Tech.prototype.manualTimeUpdatesOn = function manualTimeUpdatesOn() {\n\t    this.manualTimeUpdates = true;\n\t\n\t    this.on('play', this.trackCurrentTime);\n\t    this.on('pause', this.stopTrackingCurrentTime);\n\t  };\n\t\n\t  /**\n\t   * Turn off the polyfill for `timeupdate` events that was created in\n\t   * {@link Tech#manualTimeUpdatesOn}\n\t   */\n\t\n\t\n\t  Tech.prototype.manualTimeUpdatesOff = function manualTimeUpdatesOff() {\n\t    this.manualTimeUpdates = false;\n\t    this.stopTrackingCurrentTime();\n\t    this.off('play', this.trackCurrentTime);\n\t    this.off('pause', this.stopTrackingCurrentTime);\n\t  };\n\t\n\t  /**\n\t   * Sets up an interval function to track current time and trigger `timeupdate` every\n\t   * 250 milliseconds.\n\t   *\n\t   * @listens Tech#play\n\t   * @triggers Tech#timeupdate\n\t   */\n\t\n\t\n\t  Tech.prototype.trackCurrentTime = function trackCurrentTime() {\n\t    if (this.currentTimeInterval) {\n\t      this.stopTrackingCurrentTime();\n\t    }\n\t    this.currentTimeInterval = this.setInterval(function () {\n\t      /**\n\t       * Triggered at an interval of 250ms to indicated that time is passing in the video.\n\t       *\n\t       * @event Tech#timeupdate\n\t       * @type {EventTarget~Event}\n\t       */\n\t      this.trigger({ type: 'timeupdate', target: this, manuallyTriggered: true });\n\t\n\t      // 42 = 24 fps // 250 is what Webkit uses // FF uses 15\n\t    }, 250);\n\t  };\n\t\n\t  /**\n\t   * Stop the interval function created in {@link Tech#trackCurrentTime} so that the\n\t   * `timeupdate` event is no longer triggered.\n\t   *\n\t   * @listens {Tech#pause}\n\t   */\n\t\n\t\n\t  Tech.prototype.stopTrackingCurrentTime = function stopTrackingCurrentTime() {\n\t    this.clearInterval(this.currentTimeInterval);\n\t\n\t    // #1002 - if the video ends right before the next timeupdate would happen,\n\t    // the progress bar won't make it all the way to the end\n\t    this.trigger({ type: 'timeupdate', target: this, manuallyTriggered: true });\n\t  };\n\t\n\t  /**\n\t   * Turn off all event polyfills, clear the `Tech`s {@link AudioTrackList},\n\t   * {@link VideoTrackList}, and {@link TextTrackList}, and dispose of this Tech.\n\t   *\n\t   * @fires Component#dispose\n\t   */\n\t\n\t\n\t  Tech.prototype.dispose = function dispose() {\n\t\n\t    // clear out all tracks because we can't reuse them between techs\n\t    this.clearTracks(['audio', 'video', 'text']);\n\t\n\t    // Turn off any manual progress or timeupdate tracking\n\t    if (this.manualProgress) {\n\t      this.manualProgressOff();\n\t    }\n\t\n\t    if (this.manualTimeUpdates) {\n\t      this.manualTimeUpdatesOff();\n\t    }\n\t\n\t    _Component.prototype.dispose.call(this);\n\t  };\n\t\n\t  /**\n\t   * Clear out a single `TrackList` or an array of `TrackLists` given their names.\n\t   *\n\t   * > Note: Techs without source handlers should call this between sources for `video`\n\t   *         & `audio` tracks. You don't want to use them between tracks!\n\t   *\n\t   * @param {string[]|string} types\n\t   *        TrackList names to clear, valid names are `video`, `audio`, and\n\t   *        `text`.\n\t   */\n\t\n\t\n\t  Tech.prototype.clearTracks = function clearTracks(types) {\n\t    var _this2 = this;\n\t\n\t    types = [].concat(types);\n\t    // clear out all tracks because we can't reuse them between techs\n\t    types.forEach(function (type) {\n\t      var list = _this2[type + 'Tracks']() || [];\n\t      var i = list.length;\n\t\n\t      while (i--) {\n\t        var track = list[i];\n\t\n\t        if (type === 'text') {\n\t          _this2.removeRemoteTextTrack(track);\n\t        }\n\t        list.removeTrack_(track);\n\t      }\n\t    });\n\t  };\n\t\n\t  /**\n\t   * Remove any TextTracks added via addRemoteTextTrack that are\n\t   * flagged for automatic garbage collection\n\t   */\n\t\n\t\n\t  Tech.prototype.cleanupAutoTextTracks = function cleanupAutoTextTracks() {\n\t    var list = this.autoRemoteTextTracks_ || [];\n\t    var i = list.length;\n\t\n\t    while (i--) {\n\t      var track = list[i];\n\t\n\t      this.removeRemoteTextTrack(track);\n\t    }\n\t  };\n\t\n\t  /**\n\t   * Reset the tech, which will removes all sources and reset the internal readyState.\n\t   *\n\t   * @abstract\n\t   */\n\t\n\t\n\t  Tech.prototype.reset = function reset() {};\n\t\n\t  /**\n\t   * Get or set an error on the Tech.\n\t   *\n\t   * @param {MediaError} [err]\n\t   *        Error to set on the Tech\n\t   *\n\t   * @return {MediaError|null}\n\t   *         The current error object on the tech, or null if there isn't one.\n\t   */\n\t\n\t\n\t  Tech.prototype.error = function error(err) {\n\t    if (err !== undefined) {\n\t      this.error_ = new _mediaError2['default'](err);\n\t      this.trigger('error');\n\t    }\n\t    return this.error_;\n\t  };\n\t\n\t  /**\n\t   * Returns the `TimeRange`s that have been played through for the current source.\n\t   *\n\t   * > NOTE: This implementation is incomplete. It does not track the played `TimeRange`.\n\t   *         It only checks wether the source has played at all or not.\n\t   *\n\t   * @return {TimeRange}\n\t   *         - A single time range if this video has played\n\t   *         - An empty set of ranges if not.\n\t   */\n\t\n\t\n\t  Tech.prototype.played = function played() {\n\t    if (this.hasStarted_) {\n\t      return (0, _timeRanges.createTimeRange)(0, 0);\n\t    }\n\t    return (0, _timeRanges.createTimeRange)();\n\t  };\n\t\n\t  /**\n\t   * Causes a manual time update to occur if {@link Tech#manualTimeUpdatesOn} was\n\t   * previously called.\n\t   *\n\t   * @fires Tech#timeupdate\n\t   */\n\t\n\t\n\t  Tech.prototype.setCurrentTime = function setCurrentTime() {\n\t    // improve the accuracy of manual timeupdates\n\t    if (this.manualTimeUpdates) {\n\t      /**\n\t       * A manual `timeupdate` event.\n\t       *\n\t       * @event Tech#timeupdate\n\t       * @type {EventTarget~Event}\n\t       */\n\t      this.trigger({ type: 'timeupdate', target: this, manuallyTriggered: true });\n\t    }\n\t  };\n\t\n\t  /**\n\t   * Turn on listeners for {@link TextTrackList} events. This adds\n\t   * {@link EventTarget~EventListeners} for `texttrackchange`, `addtrack` and\n\t   * `removetrack`.\n\t   *\n\t   * @fires Tech#texttrackchange\n\t   */\n\t\n\t\n\t  Tech.prototype.initTextTrackListeners = function initTextTrackListeners() {\n\t    var textTrackListChanges = Fn.bind(this, function () {\n\t      /**\n\t       * Triggered when tracks are added or removed on the Tech {@link TextTrackList}\n\t       *\n\t       * @event Tech#texttrackchange\n\t       * @type {EventTarget~Event}\n\t       */\n\t      this.trigger('texttrackchange');\n\t    });\n\t\n\t    var tracks = this.textTracks();\n\t\n\t    if (!tracks) {\n\t      return;\n\t    }\n\t\n\t    tracks.addEventListener('removetrack', textTrackListChanges);\n\t    tracks.addEventListener('addtrack', textTrackListChanges);\n\t\n\t    this.on('dispose', Fn.bind(this, function () {\n\t      tracks.removeEventListener('removetrack', textTrackListChanges);\n\t      tracks.removeEventListener('addtrack', textTrackListChanges);\n\t    }));\n\t  };\n\t\n\t  /**\n\t   * Turn on listeners for {@link VideoTrackList} and {@link {AudioTrackList} events.\n\t   * This adds {@link EventTarget~EventListeners} for `addtrack`, and  `removetrack`.\n\t   *\n\t   * @fires Tech#audiotrackchange\n\t   * @fires Tech#videotrackchange\n\t   */\n\t\n\t\n\t  Tech.prototype.initTrackListeners = function initTrackListeners() {\n\t    var _this3 = this;\n\t\n\t    var trackTypes = ['video', 'audio'];\n\t\n\t    trackTypes.forEach(function (type) {\n\t      /**\n\t       * Triggered when tracks are added or removed on the Tech {@link AudioTrackList}\n\t       *\n\t       * @event Tech#audiotrackchange\n\t       * @type {EventTarget~Event}\n\t       */\n\t\n\t      /**\n\t       * Triggered when tracks are added or removed on the Tech {@link VideoTrackList}\n\t       *\n\t       * @event Tech#videotrackchange\n\t       * @type {EventTarget~Event}\n\t       */\n\t      var trackListChanges = function trackListChanges() {\n\t        _this3.trigger(type + 'trackchange');\n\t      };\n\t\n\t      var tracks = _this3[type + 'Tracks']();\n\t\n\t      tracks.addEventListener('removetrack', trackListChanges);\n\t      tracks.addEventListener('addtrack', trackListChanges);\n\t\n\t      _this3.on('dispose', function () {\n\t        tracks.removeEventListener('removetrack', trackListChanges);\n\t        tracks.removeEventListener('addtrack', trackListChanges);\n\t      });\n\t    });\n\t  };\n\t\n\t  /**\n\t   * Emulate TextTracks using vtt.js if necessary\n\t   *\n\t   * @fires Tech#vttjsloaded\n\t   * @fires Tech#vttjserror\n\t   */\n\t\n\t\n\t  Tech.prototype.addWebVttScript_ = function addWebVttScript_() {\n\t    var _this4 = this;\n\t\n\t    if (!_window2['default'].WebVTT && this.el().parentNode !== null && this.el().parentNode !== undefined) {\n\t      var _ret = function () {\n\t        var vtt = __webpack_require__(47);\n\t\n\t        // load via require if available and vtt.js script location was not passed in\n\t        // as an option. novtt builds will turn the above require call into an empty object\n\t        // which will cause this if check to always fail.\n\t        if (!_this4.options_['vtt.js'] && (0, _obj.isPlain)(vtt) && Object.keys(vtt).length > 0) {\n\t          Object.keys(vtt).forEach(function (k) {\n\t            _window2['default'][k] = vtt[k];\n\t          });\n\t          _this4.trigger('vttjsloaded');\n\t          return {\n\t            v: void 0\n\t          };\n\t        }\n\t\n\t        // load vtt.js via the script location option or the cdn of no location was\n\t        // passed in\n\t        var script = _document2['default'].createElement('script');\n\t\n\t        script.src = _this4.options_['vtt.js'] || 'https://cdn.rawgit.com/gkatsev/vtt.js/vjs-v0.12.1/dist/vtt.min.js';\n\t        script.onload = function () {\n\t          /**\n\t           * Fired when vtt.js is loaded.\n\t           *\n\t           * @event Tech#vttjsloaded\n\t           * @type {EventTarget~Event}\n\t           */\n\t          _this4.trigger('vttjsloaded');\n\t        };\n\t        script.onerror = function () {\n\t          /**\n\t           * Fired when vtt.js was not loaded due to an error\n\t           *\n\t           * @event Tech#vttjsloaded\n\t           * @type {EventTarget~Event}\n\t           */\n\t          _this4.trigger('vttjserror');\n\t        };\n\t        _this4.on('dispose', function () {\n\t          script.onload = null;\n\t          script.onerror = null;\n\t        });\n\t        // but have not loaded yet and we set it to true before the inject so that\n\t        // we don't overwrite the injected window.WebVTT if it loads right away\n\t        _window2['default'].WebVTT = true;\n\t        _this4.el().parentNode.appendChild(script);\n\t      }();\n\t\n\t      if ((typeof _ret === 'undefined' ? 'undefined' : _typeof(_ret)) === \"object\") return _ret.v;\n\t    }\n\t  };\n\t\n\t  /**\n\t   * Emulate texttracks\n\t   *\n\t   * @method emulateTextTracks\n\t   */\n\t\n\t\n\t  Tech.prototype.emulateTextTracks = function emulateTextTracks() {\n\t    var _this5 = this;\n\t\n\t    var tracks = this.textTracks();\n\t\n\t    if (!tracks) {\n\t      return;\n\t    }\n\t\n\t    var remoteTracks = this.remoteTextTracks();\n\t    var handleAddTrack = function handleAddTrack(e) {\n\t      return tracks.addTrack_(e.track);\n\t    };\n\t    var handleRemoveTrack = function handleRemoveTrack(e) {\n\t      return tracks.removeTrack_(e.track);\n\t    };\n\t\n\t    remoteTracks.on('addtrack', handleAddTrack);\n\t    remoteTracks.on('removetrack', handleRemoveTrack);\n\t\n\t    // Initially, Tech.el_ is a child of a dummy-div wait until the Component system\n\t    // signals that the Tech is ready at which point Tech.el_ is part of the DOM\n\t    // before inserting the WebVTT script\n\t    this.on('ready', this.addWebVttScript_);\n\t\n\t    var updateDisplay = function updateDisplay() {\n\t      return _this5.trigger('texttrackchange');\n\t    };\n\t\n\t    var textTracksChanges = function textTracksChanges() {\n\t      updateDisplay();\n\t\n\t      for (var i = 0; i < tracks.length; i++) {\n\t        var track = tracks[i];\n\t\n\t        track.removeEventListener('cuechange', updateDisplay);\n\t        if (track.mode === 'showing') {\n\t          track.addEventListener('cuechange', updateDisplay);\n\t        }\n\t      }\n\t    };\n\t\n\t    textTracksChanges();\n\t    tracks.addEventListener('change', textTracksChanges);\n\t\n\t    this.on('dispose', function () {\n\t      remoteTracks.off('addtrack', handleAddTrack);\n\t      remoteTracks.off('removetrack', handleRemoveTrack);\n\t      tracks.removeEventListener('change', textTracksChanges);\n\t\n\t      for (var i = 0; i < tracks.length; i++) {\n\t        var track = tracks[i];\n\t\n\t        track.removeEventListener('cuechange', updateDisplay);\n\t      }\n\t    });\n\t  };\n\t\n\t  /**\n\t   * Get the `Tech`s {@link VideoTrackList}.\n\t   *\n\t   * @return {VideoTrackList}\n\t   *          The video track list that the Tech is currently using.\n\t   */\n\t\n\t\n\t  Tech.prototype.videoTracks = function videoTracks() {\n\t    this.videoTracks_ = this.videoTracks_ || new _videoTrackList2['default']();\n\t    return this.videoTracks_;\n\t  };\n\t\n\t  /**\n\t   * Get the `Tech`s {@link AudioTrackList}.\n\t   *\n\t   * @return {AudioTrackList}\n\t   *          The audio track list that the Tech is currently using.\n\t   */\n\t\n\t\n\t  Tech.prototype.audioTracks = function audioTracks() {\n\t    this.audioTracks_ = this.audioTracks_ || new _audioTrackList2['default']();\n\t    return this.audioTracks_;\n\t  };\n\t\n\t  /**\n\t   * Get the `Tech`s {@link TextTrackList}.\n\t   *\n\t   * @return {TextTrackList}\n\t   *          The text track list that the Tech is currently using.\n\t   */\n\t\n\t\n\t  Tech.prototype.textTracks = function textTracks() {\n\t    this.textTracks_ = this.textTracks_ || new _textTrackList2['default']();\n\t    return this.textTracks_;\n\t  };\n\t\n\t  /**\n\t   * Get the `Tech`s remote {@link TextTrackList}, which is created from elements\n\t   * that were added to the DOM.\n\t   *\n\t   * @return {TextTrackList}\n\t   *          The remote text track list that the Tech is currently using.\n\t   */\n\t\n\t\n\t  Tech.prototype.remoteTextTracks = function remoteTextTracks() {\n\t    this.remoteTextTracks_ = this.remoteTextTracks_ || new _textTrackList2['default']();\n\t    return this.remoteTextTracks_;\n\t  };\n\t\n\t  /**\n\t   * Get The `Tech`s  {HTMLTrackElementList}, which are the elements in the DOM that are\n\t   * being used as TextTracks.\n\t   *\n\t   * @return {HTMLTrackElementList}\n\t   *          The current HTML track elements that exist for the tech.\n\t   */\n\t\n\t\n\t  Tech.prototype.remoteTextTrackEls = function remoteTextTrackEls() {\n\t    this.remoteTextTrackEls_ = this.remoteTextTrackEls_ || new _htmlTrackElementList2['default']();\n\t    return this.remoteTextTrackEls_;\n\t  };\n\t\n\t  /**\n\t   * Create and returns a remote {@link TextTrack} object.\n\t   *\n\t   * @param {string} kind\n\t   *        `TextTrack` kind (subtitles, captions, descriptions, chapters, or metadata)\n\t   *\n\t   * @param {string} [label]\n\t   *        Label to identify the text track\n\t   *\n\t   * @param {string} [language]\n\t   *        Two letter language abbreviation\n\t   *\n\t   * @return {TextTrack}\n\t   *         The TextTrack that gets created.\n\t   */\n\t\n\t\n\t  Tech.prototype.addTextTrack = function addTextTrack(kind, label, language) {\n\t    if (!kind) {\n\t      throw new Error('TextTrack kind is required but was not provided');\n\t    }\n\t\n\t    return createTrackHelper(this, kind, label, language);\n\t  };\n\t\n\t  /**\n\t   * Create an emulated TextTrack for use by addRemoteTextTrack\n\t   *\n\t   * This is intended to be overridden by classes that inherit from\n\t   * Tech in order to create native or custom TextTracks.\n\t   *\n\t   * @param {Object} options\n\t   *        The object should contain the options to initialize the TextTrack with.\n\t   *\n\t   * @param {string} [options.kind]\n\t   *        `TextTrack` kind (subtitles, captions, descriptions, chapters, or metadata).\n\t   *\n\t   * @param {string} [options.label].\n\t   *        Label to identify the text track\n\t   *\n\t   * @param {string} [options.language]\n\t   *        Two letter language abbreviation.\n\t   *\n\t   * @return {HTMLTrackElement}\n\t   *         The track element that gets created.\n\t   */\n\t\n\t\n\t  Tech.prototype.createRemoteTextTrack = function createRemoteTextTrack(options) {\n\t    var track = (0, _mergeOptions2['default'])(options, {\n\t      tech: this\n\t    });\n\t\n\t    return new _htmlTrackElement2['default'](track);\n\t  };\n\t\n\t  /**\n\t   * Creates a remote text track object and returns an html track element.\n\t   *\n\t   * > Note: This can be an emulated {@link HTMLTrackElement} or a native one.\n\t   *\n\t   * @param {Object} options\n\t   *        See {@link Tech#createRemoteTextTrack} for more detailed properties.\n\t   *\n\t   * @param {boolean} [manualCleanup=true]\n\t   *        - When false: the TextTrack will be automatically removed from the video\n\t   *          element whenever the source changes\n\t   *        - When True: The TextTrack will have to be cleaned up manually\n\t   *\n\t   * @return {HTMLTrackElement}\n\t   *         An Html Track Element.\n\t   *\n\t   * @deprecated The default functionality for this function will be equivalent\n\t   *             to \"manualCleanup=false\" in the future. The manualCleanup parameter will\n\t   *             also be removed.\n\t   */\n\t\n\t\n\t  Tech.prototype.addRemoteTextTrack = function addRemoteTextTrack() {\n\t    var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\t    var manualCleanup = arguments[1];\n\t\n\t    var htmlTrackElement = this.createRemoteTextTrack(options);\n\t\n\t    if (manualCleanup !== true && manualCleanup !== false) {\n\t      // deprecation warning\n\t      _log2['default'].warn('Calling addRemoteTextTrack without explicitly setting the \"manualCleanup\" parameter to `true` is deprecated and default to `false` in future version of video.js');\n\t      manualCleanup = true;\n\t    }\n\t\n\t    // store HTMLTrackElement and TextTrack to remote list\n\t    this.remoteTextTrackEls().addTrackElement_(htmlTrackElement);\n\t    this.remoteTextTracks().addTrack_(htmlTrackElement.track);\n\t\n\t    if (manualCleanup !== true) {\n\t      // create the TextTrackList if it doesn't exist\n\t      this.autoRemoteTextTracks_.addTrack_(htmlTrackElement.track);\n\t    }\n\t\n\t    return htmlTrackElement;\n\t  };\n\t\n\t  /**\n\t   * Remove a remote text track from the remote `TextTrackList`.\n\t   *\n\t   * @param {TextTrack} track\n\t   *        `TextTrack` to remove from the `TextTrackList`\n\t   */\n\t\n\t\n\t  Tech.prototype.removeRemoteTextTrack = function removeRemoteTextTrack(track) {\n\t    var trackElement = this.remoteTextTrackEls().getTrackElementByTrack_(track);\n\t\n\t    // remove HTMLTrackElement and TextTrack from remote list\n\t    this.remoteTextTrackEls().removeTrackElement_(trackElement);\n\t    this.remoteTextTracks().removeTrack_(track);\n\t    this.autoRemoteTextTracks_.removeTrack_(track);\n\t  };\n\t\n\t  /**\n\t   * A method to set a poster from a `Tech`.\n\t   *\n\t   * @abstract\n\t   */\n\t\n\t\n\t  Tech.prototype.setPoster = function setPoster() {};\n\t\n\t  /*\n\t   * Check if the tech can support the given mime-type.\n\t   *\n\t   * The base tech does not support any type, but source handlers might\n\t   * overwrite this.\n\t   *\n\t   * @param  {string} type\n\t   *         The mimetype to check for support\n\t   *\n\t   * @return {string}\n\t   *         'probably', 'maybe', or empty string\n\t   *\n\t   * @see [Spec]{@link https://developer.mozilla.org/en-US/docs/Web/API/HTMLMediaElement/canPlayType}\n\t   *\n\t   * @abstract\n\t   */\n\t\n\t\n\t  Tech.prototype.canPlayType = function canPlayType() {\n\t    return '';\n\t  };\n\t\n\t  /*\n\t   * Return whether the argument is a Tech or not.\n\t   * Can be passed either a Class like `Html5` or a instance like `player.tech_`\n\t   *\n\t   * @param {Object} component\n\t   *        The item to check\n\t   *\n\t   * @return {boolean}\n\t   *         Whether it is a tech or not\n\t   *         - True if it is a tech\n\t   *         - False if it is not\n\t   */\n\t\n\t\n\t  Tech.isTech = function isTech(component) {\n\t    return component.prototype instanceof Tech || component instanceof Tech || component === Tech;\n\t  };\n\t\n\t  /**\n\t   * Registers a `Tech` into a shared list for videojs.\n\t   *\n\t   * @param {string} name\n\t   *        Name of the `Tech` to register.\n\t   *\n\t   * @param {Object} tech\n\t   *        The `Tech` class to register.\n\t   */\n\t\n\t\n\t  Tech.registerTech = function registerTech(name, tech) {\n\t    if (!Tech.techs_) {\n\t      Tech.techs_ = {};\n\t    }\n\t\n\t    if (!Tech.isTech(tech)) {\n\t      throw new Error('Tech ' + name + ' must be a Tech');\n\t    }\n\t\n\t    Tech.techs_[name] = tech;\n\t    return tech;\n\t  };\n\t\n\t  /**\n\t   * Get a `Tech` from the shared list by name.\n\t   *\n\t   * @param {string} name\n\t   *        Name of the component to get\n\t   *\n\t   * @return {Tech|undefined}\n\t   *         The `Tech` or undefined if there was no tech with the name requsted.\n\t   */\n\t\n\t\n\t  Tech.getTech = function getTech(name) {\n\t    if (Tech.techs_ && Tech.techs_[name]) {\n\t      return Tech.techs_[name];\n\t    }\n\t\n\t    if (_window2['default'] && _window2['default'].videojs && _window2['default'].videojs[name]) {\n\t      _log2['default'].warn('The ' + name + ' tech was added to the videojs object when it should be registered using videojs.registerTech(name, tech)');\n\t      return _window2['default'].videojs[name];\n\t    }\n\t  };\n\t\n\t  return Tech;\n\t}(_component2['default']);\n\t\n\t/**\n\t * List of associated text tracks.\n\t *\n\t * @type {TextTrackList}\n\t * @private\n\t */\n\t\n\t\n\tTech.prototype.textTracks_; // eslint-disable-line\n\t\n\t/**\n\t * List of associated audio tracks.\n\t *\n\t * @type {AudioTrackList}\n\t * @private\n\t */\n\tTech.prototype.audioTracks_; // eslint-disable-line\n\t\n\t/**\n\t * List of associated video tracks.\n\t *\n\t * @type {VideoTrackList}\n\t * @private\n\t */\n\tTech.prototype.videoTracks_; // eslint-disable-line\n\t\n\t/**\n\t * Boolean indicating wether the `Tech` supports volume control.\n\t *\n\t * @type {boolean}\n\t * @default\n\t */\n\tTech.prototype.featuresVolumeControl = true;\n\t\n\t/**\n\t * Boolean indicating wether the `Tech` support fullscreen resize control.\n\t * Resizing plugins using request fullscreen reloads the plugin\n\t *\n\t * @type {boolean}\n\t * @default\n\t */\n\tTech.prototype.featuresFullscreenResize = false;\n\t\n\t/**\n\t * Boolean indicating wether the `Tech` supports changing the speed at which the video\n\t * plays. Examples:\n\t *   - Set player to play 2x (twice) as fast\n\t *   - Set player to play 0.5x (half) as fast\n\t *\n\t * @type {boolean}\n\t * @default\n\t */\n\tTech.prototype.featuresPlaybackRate = false;\n\t\n\t/**\n\t * Boolean indicating wether the `Tech` supports the `progress` event. This is currently\n\t * not triggered by video-js-swf. This will be used to determine if\n\t * {@link Tech#manualProgressOn} should be called.\n\t *\n\t * @type {boolean}\n\t * @default\n\t */\n\tTech.prototype.featuresProgressEvents = false;\n\t\n\t/**\n\t * Boolean indicating wether the `Tech` supports the `timeupdate` event. This is currently\n\t * not triggered by video-js-swf. This will be used to determine if\n\t * {@link Tech#manualTimeUpdates} should be called.\n\t *\n\t * @type {boolean}\n\t * @default\n\t */\n\tTech.prototype.featuresTimeupdateEvents = false;\n\t\n\t/**\n\t * Boolean indicating wether the `Tech` supports the native `TextTrack`s.\n\t * This will help us integrate with native `TextTrack`s if the browser supports them.\n\t *\n\t * @type {boolean}\n\t * @default\n\t */\n\tTech.prototype.featuresNativeTextTracks = false;\n\t\n\t/**\n\t * A functional mixin for techs that want to use the Source Handler pattern.\n\t * Source handlers are scripts for handling specific formats.\n\t * The source handler pattern is used for adaptive formats (HLS, DASH) that\n\t * manually load video data and feed it into a Source Buffer (Media Source Extensions)\n\t * Example: `Tech.withSourceHandlers.call(MyTech);`\n\t *\n\t * @param {Tech} _Tech\n\t *        The tech to add source handler functions to.\n\t *\n\t * @mixes Tech~SourceHandlerAdditions\n\t */\n\tTech.withSourceHandlers = function (_Tech) {\n\t\n\t  /**\n\t   * Register a source handler\n\t   *\n\t   * @param {Function} handler\n\t   *        The source handler class\n\t   *\n\t   * @param {number} [index]\n\t   *        Register it at the following index\n\t   */\n\t  _Tech.registerSourceHandler = function (handler, index) {\n\t    var handlers = _Tech.sourceHandlers;\n\t\n\t    if (!handlers) {\n\t      handlers = _Tech.sourceHandlers = [];\n\t    }\n\t\n\t    if (index === undefined) {\n\t      // add to the end of the list\n\t      index = handlers.length;\n\t    }\n\t\n\t    handlers.splice(index, 0, handler);\n\t  };\n\t\n\t  /**\n\t   * Check if the tech can support the given type. Also checks the\n\t   * Techs sourceHandlers.\n\t   *\n\t   * @param {string} type\n\t   *         The mimetype to check.\n\t   *\n\t   * @return {string}\n\t   *         'probably', 'maybe', or '' (empty string)\n\t   */\n\t  _Tech.canPlayType = function (type) {\n\t    var handlers = _Tech.sourceHandlers || [];\n\t    var can = void 0;\n\t\n\t    for (var i = 0; i < handlers.length; i++) {\n\t      can = handlers[i].canPlayType(type);\n\t\n\t      if (can) {\n\t        return can;\n\t      }\n\t    }\n\t\n\t    return '';\n\t  };\n\t\n\t  /**\n\t   * Returns the first source handler that supports the source.\n\t   *\n\t   * TODO: Answer question: should 'probably' be prioritized over 'maybe'\n\t   *\n\t   * @param {Tech~SourceObject} source\n\t   *        The source object\n\t   *\n\t   * @param {Object} options\n\t   *        The options passed to the tech\n\t   *\n\t   * @return {SourceHandler|null}\n\t   *          The first source handler that supports the source or null if\n\t   *          no SourceHandler supports the source\n\t   */\n\t  _Tech.selectSourceHandler = function (source, options) {\n\t    var handlers = _Tech.sourceHandlers || [];\n\t    var can = void 0;\n\t\n\t    for (var i = 0; i < handlers.length; i++) {\n\t      can = handlers[i].canHandleSource(source, options);\n\t\n\t      if (can) {\n\t        return handlers[i];\n\t      }\n\t    }\n\t\n\t    return null;\n\t  };\n\t\n\t  /**\n\t   * Check if the tech can support the given source.\n\t   *\n\t   * @param {Tech~SourceObject} srcObj\n\t   *        The source object\n\t   *\n\t   * @param {Object} options\n\t   *        The options passed to the tech\n\t   *\n\t   * @return {string}\n\t   *         'probably', 'maybe', or '' (empty string)\n\t   */\n\t  _Tech.canPlaySource = function (srcObj, options) {\n\t    var sh = _Tech.selectSourceHandler(srcObj, options);\n\t\n\t    if (sh) {\n\t      return sh.canHandleSource(srcObj, options);\n\t    }\n\t\n\t    return '';\n\t  };\n\t\n\t  /**\n\t   * When using a source handler, prefer its implementation of\n\t   * any function normally provided by the tech.\n\t   */\n\t  var deferrable = ['seekable', 'duration'];\n\t\n\t  /**\n\t   * A wrapper around {@link Tech#seekable} that will call a `SourceHandler`s seekable\n\t   * function if it exists, with a fallback to the Techs seekable function.\n\t   *\n\t   * @method _Tech.seekable\n\t   */\n\t\n\t  /**\n\t   * A wrapper around {@link Tech#duration} that will call a `SourceHandler`s duration\n\t   * function if it exists, otherwise it will fallback to the techs duration function.\n\t   *\n\t   * @method _Tech.duration\n\t   */\n\t\n\t  deferrable.forEach(function (fnName) {\n\t    var originalFn = this[fnName];\n\t\n\t    if (typeof originalFn !== 'function') {\n\t      return;\n\t    }\n\t\n\t    this[fnName] = function () {\n\t      if (this.sourceHandler_ && this.sourceHandler_[fnName]) {\n\t        return this.sourceHandler_[fnName].apply(this.sourceHandler_, arguments);\n\t      }\n\t      return originalFn.apply(this, arguments);\n\t    };\n\t  }, _Tech.prototype);\n\t\n\t  /**\n\t   * Create a function for setting the source using a source object\n\t   * and source handlers.\n\t   * Should never be called unless a source handler was found.\n\t   *\n\t   * @param {Tech~SourceObject} source\n\t   *        A source object with src and type keys\n\t   *\n\t   * @return {Tech}\n\t   *         Returns itself; this method is chainable\n\t   */\n\t  _Tech.prototype.setSource = function (source) {\n\t    var sh = _Tech.selectSourceHandler(source, this.options_);\n\t\n\t    if (!sh) {\n\t      // Fall back to a native source hander when unsupported sources are\n\t      // deliberately set\n\t      if (_Tech.nativeSourceHandler) {\n\t        sh = _Tech.nativeSourceHandler;\n\t      } else {\n\t        _log2['default'].error('No source hander found for the current source.');\n\t      }\n\t    }\n\t\n\t    // Dispose any existing source handler\n\t    this.disposeSourceHandler();\n\t    this.off('dispose', this.disposeSourceHandler);\n\t\n\t    if (sh !== _Tech.nativeSourceHandler) {\n\t      this.currentSource_ = source;\n\t\n\t      // Catch if someone replaced the src without calling setSource.\n\t      // If they do, set currentSource_ to null and dispose our source handler.\n\t      this.off(this.el_, 'loadstart', _Tech.prototype.firstLoadStartListener_);\n\t      this.off(this.el_, 'loadstart', _Tech.prototype.successiveLoadStartListener_);\n\t      this.one(this.el_, 'loadstart', _Tech.prototype.firstLoadStartListener_);\n\t    }\n\t\n\t    this.sourceHandler_ = sh.handleSource(source, this, this.options_);\n\t    this.on('dispose', this.disposeSourceHandler);\n\t\n\t    return this;\n\t  };\n\t\n\t  /**\n\t   * Called once for the first loadstart of a video.\n\t   *\n\t   * @listens Tech#loadstart\n\t   */\n\t  _Tech.prototype.firstLoadStartListener_ = function () {\n\t    this.one(this.el_, 'loadstart', _Tech.prototype.successiveLoadStartListener_);\n\t  };\n\t\n\t  // On successive loadstarts when setSource has not been called again\n\t  /**\n\t   * Called after the first loadstart for a video occurs.\n\t   *\n\t   * @listens Tech#loadstart\n\t   */\n\t  _Tech.prototype.successiveLoadStartListener_ = function () {\n\t    this.disposeSourceHandler();\n\t    this.one(this.el_, 'loadstart', _Tech.prototype.successiveLoadStartListener_);\n\t  };\n\t\n\t  /**\n\t   * Clean up any existing SourceHandlers and listeners when the Tech is disposed.\n\t   *\n\t   * @listens Tech#dispose\n\t   */\n\t  _Tech.prototype.disposeSourceHandler = function () {\n\t    // if we have a source and get another one\n\t    // then we are loading something new\n\t    // than clear all of our current tracks\n\t    if (this.currentSource_) {\n\t      this.clearTracks(['audio', 'video']);\n\t      this.currentSource_ = null;\n\t    }\n\t\n\t    // always clean up auto-text tracks\n\t    this.cleanupAutoTextTracks();\n\t\n\t    if (this.sourceHandler_) {\n\t      this.off(this.el_, 'loadstart', _Tech.prototype.firstLoadStartListener_);\n\t      this.off(this.el_, 'loadstart', _Tech.prototype.successiveLoadStartListener_);\n\t\n\t      if (this.sourceHandler_.dispose) {\n\t        this.sourceHandler_.dispose();\n\t      }\n\t\n\t      this.sourceHandler_ = null;\n\t    }\n\t  };\n\t};\n\t\n\t_component2['default'].registerComponent('Tech', Tech);\n\t// Old name for Tech\n\t// @deprecated\n\t_component2['default'].registerComponent('MediaTechController', Tech);\n\tTech.registerTech('Tech', Tech);\n\texports['default'] = Tech;\n\n\n/***/ },\n/* 30 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\texports.__esModule = true;\n\t\n\tvar _browser = __webpack_require__(11);\n\t\n\tvar browser = _interopRequireWildcard(_browser);\n\t\n\tvar _document = __webpack_require__(5);\n\t\n\tvar _document2 = _interopRequireDefault(_document);\n\t\n\tvar _eventTarget = __webpack_require__(20);\n\t\n\tvar _eventTarget2 = _interopRequireDefault(_eventTarget);\n\t\n\tvar _textTrack = __webpack_require__(31);\n\t\n\tvar _textTrack2 = _interopRequireDefault(_textTrack);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\t\n\tfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj['default'] = obj; return newObj; } }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /**\n\t                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * @file html-track-element.js\n\t                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                */\n\t\n\t/**\n\t * @typedef {HTMLTrackElement~ReadyState}\n\t * @enum {number}\n\t */\n\tvar NONE = 0;\n\tvar LOADING = 1;\n\tvar LOADED = 2;\n\tvar ERROR = 3;\n\t\n\t/**\n\t * A single track represented in the DOM.\n\t *\n\t * @see [Spec]{@link https://html.spec.whatwg.org/multipage/embedded-content.html#htmltrackelement}\n\t * @extends EventTarget\n\t */\n\t\n\tvar HTMLTrackElement = function (_EventTarget) {\n\t  _inherits(HTMLTrackElement, _EventTarget);\n\t\n\t  /**\n\t   * Create an instance of this class.\n\t   *\n\t   * @param {Object} options={}\n\t   *        Object of option names and values\n\t   *\n\t   * @param {Tech} options.tech\n\t   *        A reference to the tech that owns this HTMLTrackElement.\n\t   *\n\t   * @param {TextTrack~Kind} [options.kind='subtitles']\n\t   *        A valid text track kind.\n\t   *\n\t   * @param {TextTrack~Mode} [options.mode='disabled']\n\t   *        A valid text track mode.\n\t   *\n\t   * @param {string} [options.id='vjs_track_' + Guid.newGUID()]\n\t   *        A unique id for this TextTrack.\n\t   *\n\t   * @param {string} [options.label='']\n\t   *        The menu label for this track.\n\t   *\n\t   * @param {string} [options.language='']\n\t   *        A valid two character language code.\n\t   *\n\t   * @param {string} [options.srclang='']\n\t   *        A valid two character language code. An alternative, but deprioritized\n\t   *        vesion of `options.language`\n\t   *\n\t   * @param {string} [options.src]\n\t   *        A url to TextTrack cues.\n\t   *\n\t   * @param {boolean} [options.default]\n\t   *        If this track should default to on or off.\n\t   */\n\t  function HTMLTrackElement() {\n\t    var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\t\n\t    _classCallCheck(this, HTMLTrackElement);\n\t\n\t    var _this = _possibleConstructorReturn(this, _EventTarget.call(this));\n\t\n\t    var readyState = void 0;\n\t    var trackElement = _this; // eslint-disable-line\n\t\n\t    if (browser.IS_IE8) {\n\t      trackElement = _document2['default'].createElement('custom');\n\t\n\t      for (var prop in HTMLTrackElement.prototype) {\n\t        if (prop !== 'constructor') {\n\t          trackElement[prop] = HTMLTrackElement.prototype[prop];\n\t        }\n\t      }\n\t    }\n\t\n\t    var track = new _textTrack2['default'](options);\n\t\n\t    trackElement.kind = track.kind;\n\t    trackElement.src = track.src;\n\t    trackElement.srclang = track.language;\n\t    trackElement.label = track.label;\n\t    trackElement['default'] = track['default'];\n\t\n\t    /**\n\t     * @member {HTMLTrackElement~ReadyState} readyState\n\t     *         The current ready state of the track element.\n\t     */\n\t    Object.defineProperty(trackElement, 'readyState', {\n\t      get: function get() {\n\t        return readyState;\n\t      }\n\t    });\n\t\n\t    /**\n\t     * @member {TextTrack} track\n\t     *         The underlying TextTrack object.\n\t     */\n\t    Object.defineProperty(trackElement, 'track', {\n\t      get: function get() {\n\t        return track;\n\t      }\n\t    });\n\t\n\t    readyState = NONE;\n\t\n\t    /**\n\t     * @listens TextTrack#loadeddata\n\t     * @fires HTMLTrackElement#load\n\t     */\n\t    track.addEventListener('loadeddata', function () {\n\t      readyState = LOADED;\n\t\n\t      trackElement.trigger({\n\t        type: 'load',\n\t        target: trackElement\n\t      });\n\t    });\n\t\n\t    if (browser.IS_IE8) {\n\t      var _ret;\n\t\n\t      return _ret = trackElement, _possibleConstructorReturn(_this, _ret);\n\t    }\n\t    return _this;\n\t  }\n\t\n\t  return HTMLTrackElement;\n\t}(_eventTarget2['default']);\n\t\n\tHTMLTrackElement.prototype.allowedEvents_ = {\n\t  load: 'load'\n\t};\n\t\n\tHTMLTrackElement.NONE = NONE;\n\tHTMLTrackElement.LOADING = LOADING;\n\tHTMLTrackElement.LOADED = LOADED;\n\tHTMLTrackElement.ERROR = ERROR;\n\t\n\texports['default'] = HTMLTrackElement;\n\n\n/***/ },\n/* 31 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\texports.__esModule = true;\n\t\n\tvar _textTrackCueList = __webpack_require__(32);\n\t\n\tvar _textTrackCueList2 = _interopRequireDefault(_textTrackCueList);\n\t\n\tvar _fn = __webpack_require__(17);\n\t\n\tvar Fn = _interopRequireWildcard(_fn);\n\t\n\tvar _trackEnums = __webpack_require__(33);\n\t\n\tvar _log = __webpack_require__(10);\n\t\n\tvar _log2 = _interopRequireDefault(_log);\n\t\n\tvar _window = __webpack_require__(4);\n\t\n\tvar _window2 = _interopRequireDefault(_window);\n\t\n\tvar _track = __webpack_require__(34);\n\t\n\tvar _track2 = _interopRequireDefault(_track);\n\t\n\tvar _url = __webpack_require__(35);\n\t\n\tvar _xhr = __webpack_require__(36);\n\t\n\tvar _xhr2 = _interopRequireDefault(_xhr);\n\t\n\tvar _mergeOptions = __webpack_require__(19);\n\t\n\tvar _mergeOptions2 = _interopRequireDefault(_mergeOptions);\n\t\n\tvar _browser = __webpack_require__(11);\n\t\n\tvar browser = _interopRequireWildcard(_browser);\n\t\n\tfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj['default'] = obj; return newObj; } }\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /**\n\t                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * @file text-track.js\n\t                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                */\n\t\n\t\n\t/**\n\t * Takes a webvtt file contents and parses it into cues\n\t *\n\t * @param {string} srcContent\n\t *        webVTT file contents\n\t *\n\t * @param {TextTrack} track\n\t *        TextTrack to add cues to. Cues come from the srcContent.\n\t *\n\t * @private\n\t */\n\tvar parseCues = function parseCues(srcContent, track) {\n\t  var parser = new _window2['default'].WebVTT.Parser(_window2['default'], _window2['default'].vttjs, _window2['default'].WebVTT.StringDecoder());\n\t  var errors = [];\n\t\n\t  parser.oncue = function (cue) {\n\t    track.addCue(cue);\n\t  };\n\t\n\t  parser.onparsingerror = function (error) {\n\t    errors.push(error);\n\t  };\n\t\n\t  parser.onflush = function () {\n\t    track.trigger({\n\t      type: 'loadeddata',\n\t      target: track\n\t    });\n\t  };\n\t\n\t  parser.parse(srcContent);\n\t  if (errors.length > 0) {\n\t    if (_window2['default'].console && _window2['default'].console.groupCollapsed) {\n\t      _window2['default'].console.groupCollapsed('Text Track parsing errors for ' + track.src);\n\t    }\n\t    errors.forEach(function (error) {\n\t      return _log2['default'].error(error);\n\t    });\n\t    if (_window2['default'].console && _window2['default'].console.groupEnd) {\n\t      _window2['default'].console.groupEnd();\n\t    }\n\t  }\n\t\n\t  parser.flush();\n\t};\n\t\n\t/**\n\t * Load a `TextTrack` from a specifed url.\n\t *\n\t * @param {string} src\n\t *        Url to load track from.\n\t *\n\t * @param {TextTrack} track\n\t *        Track to add cues to. Comes from the content at the end of `url`.\n\t *\n\t * @private\n\t */\n\tvar loadTrack = function loadTrack(src, track) {\n\t  var opts = {\n\t    uri: src\n\t  };\n\t  var crossOrigin = (0, _url.isCrossOrigin)(src);\n\t\n\t  if (crossOrigin) {\n\t    opts.cors = crossOrigin;\n\t  }\n\t\n\t  (0, _xhr2['default'])(opts, Fn.bind(this, function (err, response, responseBody) {\n\t    if (err) {\n\t      return _log2['default'].error(err, response);\n\t    }\n\t\n\t    track.loaded_ = true;\n\t\n\t    // Make sure that vttjs has loaded, otherwise, wait till it finished loading\n\t    // NOTE: this is only used for the alt/video.novtt.js build\n\t    if (typeof _window2['default'].WebVTT !== 'function') {\n\t      if (track.tech_) {\n\t        (function () {\n\t          var loadHandler = function loadHandler() {\n\t            return parseCues(responseBody, track);\n\t          };\n\t\n\t          track.tech_.on('vttjsloaded', loadHandler);\n\t          track.tech_.on('vttjserror', function () {\n\t            _log2['default'].error('vttjs failed to load, stopping trying to process ' + track.src);\n\t            track.tech_.off('vttjsloaded', loadHandler);\n\t          });\n\t        })();\n\t      }\n\t    } else {\n\t      parseCues(responseBody, track);\n\t    }\n\t  }));\n\t};\n\t\n\t/**\n\t * A representation of a single `TextTrack`.\n\t *\n\t * @see [Spec]{@link https://html.spec.whatwg.org/multipage/embedded-content.html#texttrack}\n\t * @extends Track\n\t */\n\t\n\tvar TextTrack = function (_Track) {\n\t  _inherits(TextTrack, _Track);\n\t\n\t  /**\n\t   * Create an instance of this class.\n\t   *\n\t   * @param {Object} options={}\n\t   *        Object of option names and values\n\t   *\n\t   * @param {Tech} options.tech\n\t   *        A reference to the tech that owns this TextTrack.\n\t   *\n\t   * @param {TextTrack~Kind} [options.kind='subtitles']\n\t   *        A valid text track kind.\n\t   *\n\t   * @param {TextTrack~Mode} [options.mode='disabled']\n\t   *        A valid text track mode.\n\t   *\n\t   * @param {string} [options.id='vjs_track_' + Guid.newGUID()]\n\t   *        A unique id for this TextTrack.\n\t   *\n\t   * @param {string} [options.label='']\n\t   *        The menu label for this track.\n\t   *\n\t   * @param {string} [options.language='']\n\t   *        A valid two character language code.\n\t   *\n\t   * @param {string} [options.srclang='']\n\t   *        A valid two character language code. An alternative, but deprioritized\n\t   *        vesion of `options.language`\n\t   *\n\t   * @param {string} [options.src]\n\t   *        A url to TextTrack cues.\n\t   *\n\t   * @param {boolean} [options.default]\n\t   *        If this track should default to on or off.\n\t   */\n\t  function TextTrack() {\n\t    var _this, _ret2;\n\t\n\t    var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\t\n\t    _classCallCheck(this, TextTrack);\n\t\n\t    if (!options.tech) {\n\t      throw new Error('A tech was not provided.');\n\t    }\n\t\n\t    var settings = (0, _mergeOptions2['default'])(options, {\n\t      kind: _trackEnums.TextTrackKind[options.kind] || 'subtitles',\n\t      language: options.language || options.srclang || ''\n\t    });\n\t    var mode = _trackEnums.TextTrackMode[settings.mode] || 'disabled';\n\t    var default_ = settings['default'];\n\t\n\t    if (settings.kind === 'metadata' || settings.kind === 'chapters') {\n\t      mode = 'hidden';\n\t    }\n\t    // on IE8 this will be a document element\n\t    // for every other browser this will be a normal object\n\t    var tt = (_this = _possibleConstructorReturn(this, _Track.call(this, settings)), _this);\n\t\n\t    tt.tech_ = settings.tech;\n\t\n\t    if (browser.IS_IE8) {\n\t      for (var prop in TextTrack.prototype) {\n\t        if (prop !== 'constructor') {\n\t          tt[prop] = TextTrack.prototype[prop];\n\t        }\n\t      }\n\t    }\n\t\n\t    tt.cues_ = [];\n\t    tt.activeCues_ = [];\n\t\n\t    var cues = new _textTrackCueList2['default'](tt.cues_);\n\t    var activeCues = new _textTrackCueList2['default'](tt.activeCues_);\n\t    var changed = false;\n\t    var timeupdateHandler = Fn.bind(tt, function () {\n\t\n\t      // Accessing this.activeCues for the side-effects of updating itself\n\t      // due to it's nature as a getter function. Do not remove or cues will\n\t      // stop updating!\n\t      /* eslint-disable no-unused-expressions */\n\t      this.activeCues;\n\t      /* eslint-enable no-unused-expressions */\n\t      if (changed) {\n\t        this.trigger('cuechange');\n\t        changed = false;\n\t      }\n\t    });\n\t\n\t    if (mode !== 'disabled') {\n\t      tt.tech_.on('timeupdate', timeupdateHandler);\n\t    }\n\t\n\t    /**\n\t     * @member {boolean} default\n\t     *         If this track was set to be on or off by default. Cannot be changed after\n\t     *         creation.\n\t     *\n\t     * @readonly\n\t     */\n\t    Object.defineProperty(tt, 'default', {\n\t      get: function get() {\n\t        return default_;\n\t      },\n\t      set: function set() {}\n\t    });\n\t\n\t    /**\n\t     * @member {string} mode\n\t     *         Set the mode of this TextTrack to a valid {@link TextTrack~Mode}. Will\n\t     *         not be set if setting to an invalid mode.\n\t     *\n\t     * @fires TextTrack#modechange\n\t     */\n\t    Object.defineProperty(tt, 'mode', {\n\t      get: function get() {\n\t        return mode;\n\t      },\n\t      set: function set(newMode) {\n\t        if (!_trackEnums.TextTrackMode[newMode]) {\n\t          return;\n\t        }\n\t        mode = newMode;\n\t        if (mode === 'showing') {\n\t          this.tech_.on('timeupdate', timeupdateHandler);\n\t        }\n\t        /**\n\t         * An event that fires when mode changes on this track. This allows\n\t         * the TextTrackList that holds this track to act accordingly.\n\t         *\n\t         * > Note: This is not part of the spec!\n\t         *\n\t         * @event TextTrack#modechange\n\t         * @type {EventTarget~Event}\n\t         */\n\t        this.trigger('modechange');\n\t      }\n\t    });\n\t\n\t    /**\n\t     * @member {TextTrackCueList} cues\n\t     *         The text track cue list for this TextTrack.\n\t     */\n\t    Object.defineProperty(tt, 'cues', {\n\t      get: function get() {\n\t        if (!this.loaded_) {\n\t          return null;\n\t        }\n\t\n\t        return cues;\n\t      },\n\t      set: function set() {}\n\t    });\n\t\n\t    /**\n\t     * @member {TextTrackCueList} activeCues\n\t     *         The list text track cues that are currently active for this TextTrack.\n\t     */\n\t    Object.defineProperty(tt, 'activeCues', {\n\t      get: function get() {\n\t        if (!this.loaded_) {\n\t          return null;\n\t        }\n\t\n\t        // nothing to do\n\t        if (this.cues.length === 0) {\n\t          return activeCues;\n\t        }\n\t\n\t        var ct = this.tech_.currentTime();\n\t        var active = [];\n\t\n\t        for (var i = 0, l = this.cues.length; i < l; i++) {\n\t          var cue = this.cues[i];\n\t\n\t          if (cue.startTime <= ct && cue.endTime >= ct) {\n\t            active.push(cue);\n\t          } else if (cue.startTime === cue.endTime && cue.startTime <= ct && cue.startTime + 0.5 >= ct) {\n\t            active.push(cue);\n\t          }\n\t        }\n\t\n\t        changed = false;\n\t\n\t        if (active.length !== this.activeCues_.length) {\n\t          changed = true;\n\t        } else {\n\t          for (var _i = 0; _i < active.length; _i++) {\n\t            if (this.activeCues_.indexOf(active[_i]) === -1) {\n\t              changed = true;\n\t            }\n\t          }\n\t        }\n\t\n\t        this.activeCues_ = active;\n\t        activeCues.setCues_(this.activeCues_);\n\t\n\t        return activeCues;\n\t      },\n\t      set: function set() {}\n\t    });\n\t\n\t    if (settings.src) {\n\t      tt.src = settings.src;\n\t      loadTrack(settings.src, tt);\n\t    } else {\n\t      tt.loaded_ = true;\n\t    }\n\t\n\t    return _ret2 = tt, _possibleConstructorReturn(_this, _ret2);\n\t  }\n\t\n\t  /**\n\t   * Add a cue to the internal list of cues.\n\t   *\n\t   * @param {TextTrack~Cue} cue\n\t   *        The cue to add to our internal list\n\t   */\n\t\n\t\n\t  TextTrack.prototype.addCue = function addCue(cue) {\n\t    var tracks = this.tech_.textTracks();\n\t\n\t    if (tracks) {\n\t      for (var i = 0; i < tracks.length; i++) {\n\t        if (tracks[i] !== this) {\n\t          tracks[i].removeCue(cue);\n\t        }\n\t      }\n\t    }\n\t\n\t    this.cues_.push(cue);\n\t    this.cues.setCues_(this.cues_);\n\t  };\n\t\n\t  /**\n\t   * Remove a cue from our internal list\n\t   *\n\t   * @param {TextTrack~Cue} removeCue\n\t   *        The cue to remove from our internal list\n\t   */\n\t\n\t\n\t  TextTrack.prototype.removeCue = function removeCue(_removeCue) {\n\t    var removed = false;\n\t\n\t    for (var i = 0, l = this.cues_.length; i < l; i++) {\n\t      var cue = this.cues_[i];\n\t\n\t      if (cue === _removeCue) {\n\t        this.cues_.splice(i, 1);\n\t        removed = true;\n\t      }\n\t    }\n\t\n\t    if (removed) {\n\t      this.cues.setCues_(this.cues_);\n\t    }\n\t  };\n\t\n\t  return TextTrack;\n\t}(_track2['default']);\n\t\n\t/**\n\t * cuechange - One or more cues in the track have become active or stopped being active.\n\t */\n\t\n\t\n\tTextTrack.prototype.allowedEvents_ = {\n\t  cuechange: 'cuechange'\n\t};\n\t\n\texports['default'] = TextTrack;\n\n\n/***/ },\n/* 32 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\texports.__esModule = true;\n\t\n\tvar _browser = __webpack_require__(11);\n\t\n\tvar browser = _interopRequireWildcard(_browser);\n\t\n\tvar _document = __webpack_require__(5);\n\t\n\tvar _document2 = _interopRequireDefault(_document);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\t\n\tfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj['default'] = obj; return newObj; } }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } } /**\n\t                                                                                                                                                           * @file text-track-cue-list.js\n\t                                                                                                                                                           */\n\t\n\t\n\t/**\n\t * @typedef {Object} TextTrackCue\n\t *\n\t * @property {string} id\n\t *           The unique id for this text track cue\n\t *\n\t * @property {number} startTime\n\t *           The start time for this text track cue\n\t *\n\t * @property {number} endTime\n\t *           The end time for this text track cue\n\t *\n\t * @property {boolean} pauseOnExit\n\t *           Pause when the end time is reached if true.\n\t *\n\t * @see [Spec]{@link https://html.spec.whatwg.org/multipage/embedded-content.html#texttrackcue}\n\t */\n\t\n\t/**\n\t * A List of TextTrackCues.\n\t *\n\t * @see [Spec]{@link https://html.spec.whatwg.org/multipage/embedded-content.html#texttrackcuelist}\n\t */\n\tvar TextTrackCueList = function () {\n\t\n\t  /**\n\t   * Create an instance of this class..\n\t   *\n\t   * @param {Array} cues\n\t   *        A list of cues to be initialized with\n\t   */\n\t  function TextTrackCueList(cues) {\n\t    _classCallCheck(this, TextTrackCueList);\n\t\n\t    var list = this; // eslint-disable-line\n\t\n\t    if (browser.IS_IE8) {\n\t      list = _document2['default'].createElement('custom');\n\t\n\t      for (var prop in TextTrackCueList.prototype) {\n\t        if (prop !== 'constructor') {\n\t          list[prop] = TextTrackCueList.prototype[prop];\n\t        }\n\t      }\n\t    }\n\t\n\t    TextTrackCueList.prototype.setCues_.call(list, cues);\n\t\n\t    /**\n\t     * @member {number} length\n\t     *         The current number of `TextTrackCue`s in the TextTrackCueList.\n\t     */\n\t    Object.defineProperty(list, 'length', {\n\t      get: function get() {\n\t        return this.length_;\n\t      }\n\t    });\n\t\n\t    if (browser.IS_IE8) {\n\t      return list;\n\t    }\n\t  }\n\t\n\t  /**\n\t   * A setter for cues in this list. Creates getters\n\t   * an an index for the cues.\n\t   *\n\t   * @param {Array} cues\n\t   *        An array of cues to set\n\t   *\n\t   * @private\n\t   */\n\t\n\t\n\t  TextTrackCueList.prototype.setCues_ = function setCues_(cues) {\n\t    var oldLength = this.length || 0;\n\t    var i = 0;\n\t    var l = cues.length;\n\t\n\t    this.cues_ = cues;\n\t    this.length_ = cues.length;\n\t\n\t    var defineProp = function defineProp(index) {\n\t      if (!('' + index in this)) {\n\t        Object.defineProperty(this, '' + index, {\n\t          get: function get() {\n\t            return this.cues_[index];\n\t          }\n\t        });\n\t      }\n\t    };\n\t\n\t    if (oldLength < l) {\n\t      i = oldLength;\n\t\n\t      for (; i < l; i++) {\n\t        defineProp.call(this, i);\n\t      }\n\t    }\n\t  };\n\t\n\t  /**\n\t   * Get a `TextTrackCue` that is currently in the `TextTrackCueList` by id.\n\t   *\n\t   * @param {string} id\n\t   *        The id of the cue that should be searched for.\n\t   *\n\t   * @return {TextTrackCue|null}\n\t   *         A single cue or null if none was found.\n\t   */\n\t\n\t\n\t  TextTrackCueList.prototype.getCueById = function getCueById(id) {\n\t    var result = null;\n\t\n\t    for (var i = 0, l = this.length; i < l; i++) {\n\t      var cue = this[i];\n\t\n\t      if (cue.id === id) {\n\t        result = cue;\n\t        break;\n\t      }\n\t    }\n\t\n\t    return result;\n\t  };\n\t\n\t  return TextTrackCueList;\n\t}();\n\t\n\texports['default'] = TextTrackCueList;\n\n\n/***/ },\n/* 33 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\texports.__esModule = true;\n\t/**\n\t * @file track-kinds.js\n\t */\n\t\n\t/**\n\t * All possible `VideoTrackKind`s\n\t *\n\t * @see https://html.spec.whatwg.org/multipage/embedded-content.html#dom-videotrack-kind\n\t * @typedef VideoTrack~Kind\n\t * @enum\n\t */\n\tvar VideoTrackKind = exports.VideoTrackKind = {\n\t  alternative: 'alternative',\n\t  captions: 'captions',\n\t  main: 'main',\n\t  sign: 'sign',\n\t  subtitles: 'subtitles',\n\t  commentary: 'commentary'\n\t};\n\t\n\t/**\n\t * All possible `AudioTrackKind`s\n\t *\n\t * @see https://html.spec.whatwg.org/multipage/embedded-content.html#dom-audiotrack-kind\n\t * @typedef AudioTrack~Kind\n\t * @enum\n\t */\n\tvar AudioTrackKind = exports.AudioTrackKind = {\n\t  'alternative': 'alternative',\n\t  'descriptions': 'descriptions',\n\t  'main': 'main',\n\t  'main-desc': 'main-desc',\n\t  'translation': 'translation',\n\t  'commentary': 'commentary'\n\t};\n\t\n\t/**\n\t * All possible `TextTrackKind`s\n\t *\n\t * @see https://html.spec.whatwg.org/multipage/embedded-content.html#dom-texttrack-kind\n\t * @typedef TextTrack~Kind\n\t * @enum\n\t */\n\tvar TextTrackKind = exports.TextTrackKind = {\n\t  subtitles: 'subtitles',\n\t  captions: 'captions',\n\t  descriptions: 'descriptions',\n\t  chapters: 'chapters',\n\t  metadata: 'metadata'\n\t};\n\t\n\t/**\n\t * All possible `TextTrackMode`s\n\t *\n\t * @see https://html.spec.whatwg.org/multipage/embedded-content.html#texttrackmode\n\t * @typedef TextTrack~Mode\n\t * @enum\n\t */\n\tvar TextTrackMode = exports.TextTrackMode = {\n\t  disabled: 'disabled',\n\t  hidden: 'hidden',\n\t  showing: 'showing'\n\t};\n\n\n/***/ },\n/* 34 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\texports.__esModule = true;\n\t\n\tvar _browser = __webpack_require__(11);\n\t\n\tvar browser = _interopRequireWildcard(_browser);\n\t\n\tvar _document = __webpack_require__(5);\n\t\n\tvar _document2 = _interopRequireDefault(_document);\n\t\n\tvar _guid = __webpack_require__(9);\n\t\n\tvar Guid = _interopRequireWildcard(_guid);\n\t\n\tvar _eventTarget = __webpack_require__(20);\n\t\n\tvar _eventTarget2 = _interopRequireDefault(_eventTarget);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\t\n\tfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj['default'] = obj; return newObj; } }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /**\n\t                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * @file track.js\n\t                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                */\n\t\n\t\n\t/**\n\t * A Track class that contains all of the common functionality for {@link AudioTrack},\n\t * {@link VideoTrack}, and {@link TextTrack}.\n\t *\n\t * > Note: This class should not be used directly\n\t *\n\t * @see {@link https://html.spec.whatwg.org/multipage/embedded-content.html}\n\t * @extends EventTarget\n\t * @abstract\n\t */\n\tvar Track = function (_EventTarget) {\n\t  _inherits(Track, _EventTarget);\n\t\n\t  /**\n\t   * Create an instance of this class.\n\t   *\n\t   * @param {Object} [options={}]\n\t   *        Object of option names and values\n\t   *\n\t   * @param {string} [options.kind='']\n\t   *        A valid kind for the track type you are creating.\n\t   *\n\t   * @param {string} [options.id='vjs_track_' + Guid.newGUID()]\n\t   *        A unique id for this AudioTrack.\n\t   *\n\t   * @param {string} [options.label='']\n\t   *        The menu label for this track.\n\t   *\n\t   * @param {string} [options.language='']\n\t   *        A valid two character language code.\n\t   *\n\t   * @abstract\n\t   */\n\t  function Track() {\n\t    var _ret;\n\t\n\t    var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\t\n\t    _classCallCheck(this, Track);\n\t\n\t    var _this = _possibleConstructorReturn(this, _EventTarget.call(this));\n\t\n\t    var track = _this; // eslint-disable-line\n\t\n\t    if (browser.IS_IE8) {\n\t      track = _document2['default'].createElement('custom');\n\t      for (var prop in Track.prototype) {\n\t        if (prop !== 'constructor') {\n\t          track[prop] = Track.prototype[prop];\n\t        }\n\t      }\n\t    }\n\t\n\t    var trackProps = {\n\t      id: options.id || 'vjs_track_' + Guid.newGUID(),\n\t      kind: options.kind || '',\n\t      label: options.label || '',\n\t      language: options.language || ''\n\t    };\n\t\n\t    /**\n\t     * @member {string} id\n\t     *         The id of this track. Cannot be changed after creation.\n\t     *\n\t     * @readonly\n\t     */\n\t\n\t    /**\n\t     * @member {string} kind\n\t     *         The kind of track that this is. Cannot be changed after creation.\n\t     *\n\t     * @readonly\n\t     */\n\t\n\t    /**\n\t     * @member {string} label\n\t     *         The label of this track. Cannot be changed after creation.\n\t     *\n\t     * @readonly\n\t     */\n\t\n\t    /**\n\t     * @member {string} language\n\t     *         The two letter language code for this track. Cannot be changed after\n\t     *         creation.\n\t     *\n\t     * @readonly\n\t     */\n\t\n\t    var _loop = function _loop(key) {\n\t      Object.defineProperty(track, key, {\n\t        get: function get() {\n\t          return trackProps[key];\n\t        },\n\t        set: function set() {}\n\t      });\n\t    };\n\t\n\t    for (var key in trackProps) {\n\t      _loop(key);\n\t    }\n\t\n\t    return _ret = track, _possibleConstructorReturn(_this, _ret);\n\t  }\n\t\n\t  return Track;\n\t}(_eventTarget2['default']);\n\t\n\texports['default'] = Track;\n\n\n/***/ },\n/* 35 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\texports.__esModule = true;\n\texports.isCrossOrigin = exports.getFileExtension = exports.getAbsoluteURL = exports.parseUrl = undefined;\n\t\n\tvar _document = __webpack_require__(5);\n\t\n\tvar _document2 = _interopRequireDefault(_document);\n\t\n\tvar _window = __webpack_require__(4);\n\t\n\tvar _window2 = _interopRequireDefault(_window);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\t\n\t/**\n\t * @typedef {Object} url:URLObject\n\t *\n\t * @property {string} protocol\n\t *           The protocol of the url that was parsed.\n\t *\n\t * @property {string} hostname\n\t *           The hostname of the url that was parsed.\n\t *\n\t * @property {string} port\n\t *           The port of the url that was parsed.\n\t *\n\t * @property {string} pathname\n\t *           The pathname of the url that was parsed.\n\t *\n\t * @property {string} search\n\t *           The search query of the url that was parsed.\n\t *\n\t * @property {string} hash\n\t *           The hash of the url that was parsed.\n\t *\n\t * @property {string} host\n\t *           The host of the url that was parsed.\n\t */\n\t\n\t/**\n\t * Resolve and parse the elements of a URL.\n\t *\n\t * @param  {String} url\n\t *         The url to parse\n\t *\n\t * @return {url:URLObject}\n\t *         An object of url details\n\t */\n\t/**\n\t * @file url.js\n\t * @module url\n\t */\n\tvar parseUrl = exports.parseUrl = function parseUrl(url) {\n\t  var props = ['protocol', 'hostname', 'port', 'pathname', 'search', 'hash', 'host'];\n\t\n\t  // add the url to an anchor and let the browser parse the URL\n\t  var a = _document2['default'].createElement('a');\n\t\n\t  a.href = url;\n\t\n\t  // IE8 (and 9?) Fix\n\t  // ie8 doesn't parse the URL correctly until the anchor is actually\n\t  // added to the body, and an innerHTML is needed to trigger the parsing\n\t  var addToBody = a.host === '' && a.protocol !== 'file:';\n\t  var div = void 0;\n\t\n\t  if (addToBody) {\n\t    div = _document2['default'].createElement('div');\n\t    div.innerHTML = '<a href=\"' + url + '\"></a>';\n\t    a = div.firstChild;\n\t    // prevent the div from affecting layout\n\t    div.setAttribute('style', 'display:none; position:absolute;');\n\t    _document2['default'].body.appendChild(div);\n\t  }\n\t\n\t  // Copy the specific URL properties to a new object\n\t  // This is also needed for IE8 because the anchor loses its\n\t  // properties when it's removed from the dom\n\t  var details = {};\n\t\n\t  for (var i = 0; i < props.length; i++) {\n\t    details[props[i]] = a[props[i]];\n\t  }\n\t\n\t  // IE9 adds the port to the host property unlike everyone else. If\n\t  // a port identifier is added for standard ports, strip it.\n\t  if (details.protocol === 'http:') {\n\t    details.host = details.host.replace(/:80$/, '');\n\t  }\n\t\n\t  if (details.protocol === 'https:') {\n\t    details.host = details.host.replace(/:443$/, '');\n\t  }\n\t\n\t  if (addToBody) {\n\t    _document2['default'].body.removeChild(div);\n\t  }\n\t\n\t  return details;\n\t};\n\t\n\t/**\n\t * Get absolute version of relative URL. Used to tell flash correct URL.\n\t *\n\t *\n\t * @param  {string} url\n\t *         URL to make absolute\n\t *\n\t * @return {string}\n\t *         Absolute URL\n\t *\n\t * @see http://stackoverflow.com/questions/470832/getting-an-absolute-url-from-a-relative-one-ie6-issue\n\t */\n\tvar getAbsoluteURL = exports.getAbsoluteURL = function getAbsoluteURL(url) {\n\t  // Check if absolute URL\n\t  if (!url.match(/^https?:\\/\\//)) {\n\t    // Convert to absolute URL. Flash hosted off-site needs an absolute URL.\n\t    var div = _document2['default'].createElement('div');\n\t\n\t    div.innerHTML = '<a href=\"' + url + '\">x</a>';\n\t    url = div.firstChild.href;\n\t  }\n\t\n\t  return url;\n\t};\n\t\n\t/**\n\t * Returns the extension of the passed file name. It will return an empty string\n\t * if passed an invalid path.\n\t *\n\t * @param {string} path\n\t *        The fileName path like '/path/to/file.mp4'\n\t *\n\t * @returns {string}\n\t *          The extension in lower case or an empty string if no\n\t *          extension could be found.\n\t */\n\tvar getFileExtension = exports.getFileExtension = function getFileExtension(path) {\n\t  if (typeof path === 'string') {\n\t    var splitPathRe = /^(\\/?)([\\s\\S]*?)((?:\\.{1,2}|[^\\/]+?)(\\.([^\\.\\/\\?]+)))(?:[\\/]*|[\\?].*)$/i;\n\t    var pathParts = splitPathRe.exec(path);\n\t\n\t    if (pathParts) {\n\t      return pathParts.pop().toLowerCase();\n\t    }\n\t  }\n\t\n\t  return '';\n\t};\n\t\n\t/**\n\t * Returns whether the url passed is a cross domain request or not.\n\t *\n\t * @param {string} url\n\t *        The url to check.\n\t *\n\t * @return {boolean}\n\t *         Whether it is a cross domain request or not.\n\t */\n\tvar isCrossOrigin = exports.isCrossOrigin = function isCrossOrigin(url) {\n\t  var winLoc = _window2['default'].location;\n\t  var urlInfo = parseUrl(url);\n\t\n\t  // IE8 protocol relative urls will return ':' for protocol\n\t  var srcProtocol = urlInfo.protocol === ':' ? winLoc.protocol : urlInfo.protocol;\n\t\n\t  // Check if url is for another domain/origin\n\t  // IE8 doesn't know location.origin, so we won't rely on it here\n\t  var crossOrigin = srcProtocol + urlInfo.host !== winLoc.protocol + winLoc.host;\n\t\n\t  return crossOrigin;\n\t};\n\n\n/***/ },\n/* 36 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\tvar window = __webpack_require__(4)\n\tvar isFunction = __webpack_require__(37)\n\tvar parseHeaders = __webpack_require__(38)\n\tvar xtend = __webpack_require__(41)\n\t\n\tmodule.exports = createXHR\n\tcreateXHR.XMLHttpRequest = window.XMLHttpRequest || noop\n\tcreateXHR.XDomainRequest = \"withCredentials\" in (new createXHR.XMLHttpRequest()) ? createXHR.XMLHttpRequest : window.XDomainRequest\n\t\n\tforEachArray([\"get\", \"put\", \"post\", \"patch\", \"head\", \"delete\"], function(method) {\n\t    createXHR[method === \"delete\" ? \"del\" : method] = function(uri, options, callback) {\n\t        options = initParams(uri, options, callback)\n\t        options.method = method.toUpperCase()\n\t        return _createXHR(options)\n\t    }\n\t})\n\t\n\tfunction forEachArray(array, iterator) {\n\t    for (var i = 0; i < array.length; i++) {\n\t        iterator(array[i])\n\t    }\n\t}\n\t\n\tfunction isEmpty(obj){\n\t    for(var i in obj){\n\t        if(obj.hasOwnProperty(i)) return false\n\t    }\n\t    return true\n\t}\n\t\n\tfunction initParams(uri, options, callback) {\n\t    var params = uri\n\t\n\t    if (isFunction(options)) {\n\t        callback = options\n\t        if (typeof uri === \"string\") {\n\t            params = {uri:uri}\n\t        }\n\t    } else {\n\t        params = xtend(options, {uri: uri})\n\t    }\n\t\n\t    params.callback = callback\n\t    return params\n\t}\n\t\n\tfunction createXHR(uri, options, callback) {\n\t    options = initParams(uri, options, callback)\n\t    return _createXHR(options)\n\t}\n\t\n\tfunction _createXHR(options) {\n\t    if(typeof options.callback === \"undefined\"){\n\t        throw new Error(\"callback argument missing\")\n\t    }\n\t\n\t    var called = false\n\t    var callback = function cbOnce(err, response, body){\n\t        if(!called){\n\t            called = true\n\t            options.callback(err, response, body)\n\t        }\n\t    }\n\t\n\t    function readystatechange() {\n\t        if (xhr.readyState === 4) {\n\t            loadFunc()\n\t        }\n\t    }\n\t\n\t    function getBody() {\n\t        // Chrome with requestType=blob throws errors arround when even testing access to responseText\n\t        var body = undefined\n\t\n\t        if (xhr.response) {\n\t            body = xhr.response\n\t        } else {\n\t            body = xhr.responseText || getXml(xhr)\n\t        }\n\t\n\t        if (isJson) {\n\t            try {\n\t                body = JSON.parse(body)\n\t            } catch (e) {}\n\t        }\n\t\n\t        return body\n\t    }\n\t\n\t    var failureResponse = {\n\t                body: undefined,\n\t                headers: {},\n\t                statusCode: 0,\n\t                method: method,\n\t                url: uri,\n\t                rawRequest: xhr\n\t            }\n\t\n\t    function errorFunc(evt) {\n\t        clearTimeout(timeoutTimer)\n\t        if(!(evt instanceof Error)){\n\t            evt = new Error(\"\" + (evt || \"Unknown XMLHttpRequest Error\") )\n\t        }\n\t        evt.statusCode = 0\n\t        return callback(evt, failureResponse)\n\t    }\n\t\n\t    // will load the data & process the response in a special response object\n\t    function loadFunc() {\n\t        if (aborted) return\n\t        var status\n\t        clearTimeout(timeoutTimer)\n\t        if(options.useXDR && xhr.status===undefined) {\n\t            //IE8 CORS GET successful response doesn't have a status field, but body is fine\n\t            status = 200\n\t        } else {\n\t            status = (xhr.status === 1223 ? 204 : xhr.status)\n\t        }\n\t        var response = failureResponse\n\t        var err = null\n\t\n\t        if (status !== 0){\n\t            response = {\n\t                body: getBody(),\n\t                statusCode: status,\n\t                method: method,\n\t                headers: {},\n\t                url: uri,\n\t                rawRequest: xhr\n\t            }\n\t            if(xhr.getAllResponseHeaders){ //remember xhr can in fact be XDR for CORS in IE\n\t                response.headers = parseHeaders(xhr.getAllResponseHeaders())\n\t            }\n\t        } else {\n\t            err = new Error(\"Internal XMLHttpRequest Error\")\n\t        }\n\t        return callback(err, response, response.body)\n\t    }\n\t\n\t    var xhr = options.xhr || null\n\t\n\t    if (!xhr) {\n\t        if (options.cors || options.useXDR) {\n\t            xhr = new createXHR.XDomainRequest()\n\t        }else{\n\t            xhr = new createXHR.XMLHttpRequest()\n\t        }\n\t    }\n\t\n\t    var key\n\t    var aborted\n\t    var uri = xhr.url = options.uri || options.url\n\t    var method = xhr.method = options.method || \"GET\"\n\t    var body = options.body || options.data || null\n\t    var headers = xhr.headers = options.headers || {}\n\t    var sync = !!options.sync\n\t    var isJson = false\n\t    var timeoutTimer\n\t\n\t    if (\"json\" in options) {\n\t        isJson = true\n\t        headers[\"accept\"] || headers[\"Accept\"] || (headers[\"Accept\"] = \"application/json\") //Don't override existing accept header declared by user\n\t        if (method !== \"GET\" && method !== \"HEAD\") {\n\t            headers[\"content-type\"] || headers[\"Content-Type\"] || (headers[\"Content-Type\"] = \"application/json\") //Don't override existing accept header declared by user\n\t            body = JSON.stringify(options.json)\n\t        }\n\t    }\n\t\n\t    xhr.onreadystatechange = readystatechange\n\t    xhr.onload = loadFunc\n\t    xhr.onerror = errorFunc\n\t    // IE9 must have onprogress be set to a unique function.\n\t    xhr.onprogress = function () {\n\t        // IE must die\n\t    }\n\t    xhr.ontimeout = errorFunc\n\t    xhr.open(method, uri, !sync, options.username, options.password)\n\t    //has to be after open\n\t    if(!sync) {\n\t        xhr.withCredentials = !!options.withCredentials\n\t    }\n\t    // Cannot set timeout with sync request\n\t    // not setting timeout on the xhr object, because of old webkits etc. not handling that correctly\n\t    // both npm's request and jquery 1.x use this kind of timeout, so this is being consistent\n\t    if (!sync && options.timeout > 0 ) {\n\t        timeoutTimer = setTimeout(function(){\n\t            aborted=true//IE9 may still call readystatechange\n\t            xhr.abort(\"timeout\")\n\t            var e = new Error(\"XMLHttpRequest timeout\")\n\t            e.code = \"ETIMEDOUT\"\n\t            errorFunc(e)\n\t        }, options.timeout )\n\t    }\n\t\n\t    if (xhr.setRequestHeader) {\n\t        for(key in headers){\n\t            if(headers.hasOwnProperty(key)){\n\t                xhr.setRequestHeader(key, headers[key])\n\t            }\n\t        }\n\t    } else if (options.headers && !isEmpty(options.headers)) {\n\t        throw new Error(\"Headers cannot be set on an XDomainRequest object\")\n\t    }\n\t\n\t    if (\"responseType\" in options) {\n\t        xhr.responseType = options.responseType\n\t    }\n\t\n\t    if (\"beforeSend\" in options &&\n\t        typeof options.beforeSend === \"function\"\n\t    ) {\n\t        options.beforeSend(xhr)\n\t    }\n\t\n\t    xhr.send(body)\n\t\n\t    return xhr\n\t\n\t\n\t}\n\t\n\tfunction getXml(xhr) {\n\t    if (xhr.responseType === \"document\") {\n\t        return xhr.responseXML\n\t    }\n\t    var firefoxBugTakenEffect = xhr.status === 204 && xhr.responseXML && xhr.responseXML.documentElement.nodeName === \"parsererror\"\n\t    if (xhr.responseType === \"\" && !firefoxBugTakenEffect) {\n\t        return xhr.responseXML\n\t    }\n\t\n\t    return null\n\t}\n\t\n\tfunction noop() {}\n\n\n/***/ },\n/* 37 */\n/***/ function(module, exports) {\n\n\tmodule.exports = isFunction\n\t\n\tvar toString = Object.prototype.toString\n\t\n\tfunction isFunction (fn) {\n\t  var string = toString.call(fn)\n\t  return string === '[object Function]' ||\n\t    (typeof fn === 'function' && string !== '[object RegExp]') ||\n\t    (typeof window !== 'undefined' &&\n\t     // IE8 and below\n\t     (fn === window.setTimeout ||\n\t      fn === window.alert ||\n\t      fn === window.confirm ||\n\t      fn === window.prompt))\n\t};\n\n\n/***/ },\n/* 38 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar trim = __webpack_require__(39)\n\t  , forEach = __webpack_require__(40)\n\t  , isArray = function(arg) {\n\t      return Object.prototype.toString.call(arg) === '[object Array]';\n\t    }\n\t\n\tmodule.exports = function (headers) {\n\t  if (!headers)\n\t    return {}\n\t\n\t  var result = {}\n\t\n\t  forEach(\n\t      trim(headers).split('\\n')\n\t    , function (row) {\n\t        var index = row.indexOf(':')\n\t          , key = trim(row.slice(0, index)).toLowerCase()\n\t          , value = trim(row.slice(index + 1))\n\t\n\t        if (typeof(result[key]) === 'undefined') {\n\t          result[key] = value\n\t        } else if (isArray(result[key])) {\n\t          result[key].push(value)\n\t        } else {\n\t          result[key] = [ result[key], value ]\n\t        }\n\t      }\n\t  )\n\t\n\t  return result\n\t}\n\n/***/ },\n/* 39 */\n/***/ function(module, exports) {\n\n\t\n\texports = module.exports = trim;\n\t\n\tfunction trim(str){\n\t  return str.replace(/^\\s*|\\s*$/g, '');\n\t}\n\t\n\texports.left = function(str){\n\t  return str.replace(/^\\s*/, '');\n\t};\n\t\n\texports.right = function(str){\n\t  return str.replace(/\\s*$/, '');\n\t};\n\n\n/***/ },\n/* 40 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar isFunction = __webpack_require__(37)\n\t\n\tmodule.exports = forEach\n\t\n\tvar toString = Object.prototype.toString\n\tvar hasOwnProperty = Object.prototype.hasOwnProperty\n\t\n\tfunction forEach(list, iterator, context) {\n\t    if (!isFunction(iterator)) {\n\t        throw new TypeError('iterator must be a function')\n\t    }\n\t\n\t    if (arguments.length < 3) {\n\t        context = this\n\t    }\n\t    \n\t    if (toString.call(list) === '[object Array]')\n\t        forEachArray(list, iterator, context)\n\t    else if (typeof list === 'string')\n\t        forEachString(list, iterator, context)\n\t    else\n\t        forEachObject(list, iterator, context)\n\t}\n\t\n\tfunction forEachArray(array, iterator, context) {\n\t    for (var i = 0, len = array.length; i < len; i++) {\n\t        if (hasOwnProperty.call(array, i)) {\n\t            iterator.call(context, array[i], i, array)\n\t        }\n\t    }\n\t}\n\t\n\tfunction forEachString(string, iterator, context) {\n\t    for (var i = 0, len = string.length; i < len; i++) {\n\t        // no such thing as a sparse string.\n\t        iterator.call(context, string.charAt(i), i, string)\n\t    }\n\t}\n\t\n\tfunction forEachObject(object, iterator, context) {\n\t    for (var k in object) {\n\t        if (hasOwnProperty.call(object, k)) {\n\t            iterator.call(context, object[k], k, object)\n\t        }\n\t    }\n\t}\n\n\n/***/ },\n/* 41 */\n/***/ function(module, exports) {\n\n\tmodule.exports = extend\n\t\n\tvar hasOwnProperty = Object.prototype.hasOwnProperty;\n\t\n\tfunction extend() {\n\t    var target = {}\n\t\n\t    for (var i = 0; i < arguments.length; i++) {\n\t        var source = arguments[i]\n\t\n\t        for (var key in source) {\n\t            if (hasOwnProperty.call(source, key)) {\n\t                target[key] = source[key]\n\t            }\n\t        }\n\t    }\n\t\n\t    return target\n\t}\n\n\n/***/ },\n/* 42 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\texports.__esModule = true;\n\t\n\tvar _browser = __webpack_require__(11);\n\t\n\tvar browser = _interopRequireWildcard(_browser);\n\t\n\tvar _document = __webpack_require__(5);\n\t\n\tvar _document2 = _interopRequireDefault(_document);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\t\n\tfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj['default'] = obj; return newObj; } }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } } /**\n\t                                                                                                                                                           * @file html-track-element-list.js\n\t                                                                                                                                                           */\n\t\n\t/**\n\t * The current list of {@link HtmlTrackElement}s.\n\t */\n\tvar HtmlTrackElementList = function () {\n\t\n\t  /**\n\t   * Create an instance of this class.\n\t   *\n\t   * @param {HtmlTrackElement[]} [tracks=[]]\n\t   *        A list of `HtmlTrackElement` to instantiate the list with.\n\t   */\n\t  function HtmlTrackElementList() {\n\t    var trackElements = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n\t\n\t    _classCallCheck(this, HtmlTrackElementList);\n\t\n\t    var list = this; // eslint-disable-line\n\t\n\t    if (browser.IS_IE8) {\n\t      list = _document2['default'].createElement('custom');\n\t\n\t      for (var prop in HtmlTrackElementList.prototype) {\n\t        if (prop !== 'constructor') {\n\t          list[prop] = HtmlTrackElementList.prototype[prop];\n\t        }\n\t      }\n\t    }\n\t\n\t    list.trackElements_ = [];\n\t\n\t    /**\n\t     * @member {number} length\n\t     *         The current number of `Track`s in the this Trackist.\n\t     */\n\t    Object.defineProperty(list, 'length', {\n\t      get: function get() {\n\t        return this.trackElements_.length;\n\t      }\n\t    });\n\t\n\t    for (var i = 0, length = trackElements.length; i < length; i++) {\n\t      list.addTrackElement_(trackElements[i]);\n\t    }\n\t\n\t    if (browser.IS_IE8) {\n\t      return list;\n\t    }\n\t  }\n\t\n\t  /**\n\t   * Add an {@link HtmlTrackElement} to the `HtmlTrackElementList`\n\t   *\n\t   * @param {HtmlTrackElement} trackElement\n\t   *        The track element to add to the list.\n\t   *\n\t   * @private\n\t   */\n\t\n\t\n\t  HtmlTrackElementList.prototype.addTrackElement_ = function addTrackElement_(trackElement) {\n\t    var index = this.trackElements_.length;\n\t\n\t    if (!('' + index in this)) {\n\t      Object.defineProperty(this, index, {\n\t        get: function get() {\n\t          return this.trackElements_[index];\n\t        }\n\t      });\n\t    }\n\t\n\t    // Do not add duplicate elements\n\t    if (this.trackElements_.indexOf(trackElement) === -1) {\n\t      this.trackElements_.push(trackElement);\n\t    }\n\t  };\n\t\n\t  /**\n\t   * Get an {@link HtmlTrackElement} from the `HtmlTrackElementList` given an\n\t   * {@link TextTrack}.\n\t   *\n\t   * @param {TextTrack} track\n\t   *        The track associated with a track element.\n\t   *\n\t   * @return {HtmlTrackElement|undefined}\n\t   *         The track element that was found or undefined.\n\t   *\n\t   * @private\n\t   */\n\t\n\t\n\t  HtmlTrackElementList.prototype.getTrackElementByTrack_ = function getTrackElementByTrack_(track) {\n\t    var trackElement_ = void 0;\n\t\n\t    for (var i = 0, length = this.trackElements_.length; i < length; i++) {\n\t      if (track === this.trackElements_[i].track) {\n\t        trackElement_ = this.trackElements_[i];\n\t\n\t        break;\n\t      }\n\t    }\n\t\n\t    return trackElement_;\n\t  };\n\t\n\t  /**\n\t   * Remove a {@link HtmlTrackElement} from the `HtmlTrackElementList`\n\t   *\n\t   * @param {HtmlTrackElement} trackElement\n\t   *        The track element to remove from the list.\n\t   *\n\t   * @private\n\t   */\n\t\n\t\n\t  HtmlTrackElementList.prototype.removeTrackElement_ = function removeTrackElement_(trackElement) {\n\t    for (var i = 0, length = this.trackElements_.length; i < length; i++) {\n\t      if (trackElement === this.trackElements_[i]) {\n\t        this.trackElements_.splice(i, 1);\n\t\n\t        break;\n\t      }\n\t    }\n\t  };\n\t\n\t  return HtmlTrackElementList;\n\t}();\n\t\n\texports['default'] = HtmlTrackElementList;\n\n\n/***/ },\n/* 43 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\texports.__esModule = true;\n\t\n\tvar _trackList = __webpack_require__(44);\n\t\n\tvar _trackList2 = _interopRequireDefault(_trackList);\n\t\n\tvar _fn = __webpack_require__(17);\n\t\n\tvar Fn = _interopRequireWildcard(_fn);\n\t\n\tvar _browser = __webpack_require__(11);\n\t\n\tvar browser = _interopRequireWildcard(_browser);\n\t\n\tvar _document = __webpack_require__(5);\n\t\n\tvar _document2 = _interopRequireDefault(_document);\n\t\n\tfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj['default'] = obj; return newObj; } }\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /**\n\t                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * @file text-track-list.js\n\t                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                */\n\t\n\t\n\t/**\n\t * The current list of {@link TextTrack} for a media file.\n\t *\n\t * @see [Spec]{@link https://html.spec.whatwg.org/multipage/embedded-content.html#texttracklist}\n\t * @extends TrackList\n\t */\n\tvar TextTrackList = function (_TrackList) {\n\t  _inherits(TextTrackList, _TrackList);\n\t\n\t  /**\n\t   * Create an instance of this class.\n\t   *\n\t   * @param {TextTrack[]} [tracks=[]]\n\t   *        A list of `TextTrack` to instantiate the list with.\n\t   */\n\t  function TextTrackList() {\n\t    var _this, _ret;\n\t\n\t    var tracks = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n\t\n\t    _classCallCheck(this, TextTrackList);\n\t\n\t    var list = void 0;\n\t\n\t    // IE8 forces us to implement inheritance ourselves\n\t    // as it does not support Object.defineProperty properly\n\t    if (browser.IS_IE8) {\n\t      list = _document2['default'].createElement('custom');\n\t      for (var prop in _trackList2['default'].prototype) {\n\t        if (prop !== 'constructor') {\n\t          list[prop] = _trackList2['default'].prototype[prop];\n\t        }\n\t      }\n\t      for (var _prop in TextTrackList.prototype) {\n\t        if (_prop !== 'constructor') {\n\t          list[_prop] = TextTrackList.prototype[_prop];\n\t        }\n\t      }\n\t    }\n\t\n\t    list = (_this = _possibleConstructorReturn(this, _TrackList.call(this, tracks, list)), _this);\n\t    return _ret = list, _possibleConstructorReturn(_this, _ret);\n\t  }\n\t\n\t  /**\n\t   * Add a {@link TextTrack} to the `TextTrackList`\n\t   *\n\t   * @param {TextTrack} track\n\t   *        The text track to add to the list.\n\t   *\n\t   * @fires TrackList#addtrack\n\t   * @private\n\t   */\n\t\n\t\n\t  TextTrackList.prototype.addTrack_ = function addTrack_(track) {\n\t    _TrackList.prototype.addTrack_.call(this, track);\n\t\n\t    /**\n\t     * @listens TextTrack#modechange\n\t     * @fires TrackList#change\n\t     */\n\t    track.addEventListener('modechange', Fn.bind(this, function () {\n\t      this.trigger('change');\n\t    }));\n\t  };\n\t\n\t  return TextTrackList;\n\t}(_trackList2['default']);\n\t\n\texports['default'] = TextTrackList;\n\n\n/***/ },\n/* 44 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\texports.__esModule = true;\n\t\n\tvar _eventTarget = __webpack_require__(20);\n\t\n\tvar _eventTarget2 = _interopRequireDefault(_eventTarget);\n\t\n\tvar _browser = __webpack_require__(11);\n\t\n\tvar browser = _interopRequireWildcard(_browser);\n\t\n\tvar _document = __webpack_require__(5);\n\t\n\tvar _document2 = _interopRequireDefault(_document);\n\t\n\tfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj['default'] = obj; return newObj; } }\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /**\n\t                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * @file track-list.js\n\t                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                */\n\t\n\t\n\t/**\n\t * Common functionaliy between {@link TextTrackList}, {@link AudioTrackList}, and\n\t * {@link VideoTrackList}\n\t *\n\t * @extends EventTarget\n\t */\n\tvar TrackList = function (_EventTarget) {\n\t  _inherits(TrackList, _EventTarget);\n\t\n\t  /**\n\t   * Create an instance of this class\n\t   *\n\t   * @param {Track[]} tracks\n\t   *        A list of tracks to initialize the list with.\n\t   *\n\t   * @param {Object} [list]\n\t   *        The child object with inheritance done manually for ie8.\n\t   *\n\t   * @abstract\n\t   */\n\t  function TrackList() {\n\t    var tracks = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n\t\n\t    var _ret;\n\t\n\t    var list = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n\t\n\t    _classCallCheck(this, TrackList);\n\t\n\t    var _this = _possibleConstructorReturn(this, _EventTarget.call(this));\n\t\n\t    if (!list) {\n\t      list = _this; // eslint-disable-line\n\t      if (browser.IS_IE8) {\n\t        list = _document2['default'].createElement('custom');\n\t        for (var prop in TrackList.prototype) {\n\t          if (prop !== 'constructor') {\n\t            list[prop] = TrackList.prototype[prop];\n\t          }\n\t        }\n\t      }\n\t    }\n\t\n\t    list.tracks_ = [];\n\t\n\t    /**\n\t     * @member {number} length\n\t     *         The current number of `Track`s in the this Trackist.\n\t     */\n\t    Object.defineProperty(list, 'length', {\n\t      get: function get() {\n\t        return this.tracks_.length;\n\t      }\n\t    });\n\t\n\t    for (var i = 0; i < tracks.length; i++) {\n\t      list.addTrack_(tracks[i]);\n\t    }\n\t\n\t    // must return the object, as for ie8 it will not be this\n\t    // but a reference to a document object\n\t    return _ret = list, _possibleConstructorReturn(_this, _ret);\n\t  }\n\t\n\t  /**\n\t   * Add a {@link Track} to the `TrackList`\n\t   *\n\t   * @param {Track} track\n\t   *        The audio, video, or text track to add to the list.\n\t   *\n\t   * @fires TrackList#addtrack\n\t   * @private\n\t   */\n\t\n\t\n\t  TrackList.prototype.addTrack_ = function addTrack_(track) {\n\t    var index = this.tracks_.length;\n\t\n\t    if (!('' + index in this)) {\n\t      Object.defineProperty(this, index, {\n\t        get: function get() {\n\t          return this.tracks_[index];\n\t        }\n\t      });\n\t    }\n\t\n\t    // Do not add duplicate tracks\n\t    if (this.tracks_.indexOf(track) === -1) {\n\t      this.tracks_.push(track);\n\t      /**\n\t       * Triggered when a track is added to a track list.\n\t       *\n\t       * @event TrackList#addtrack\n\t       * @type {EventTarget~Event}\n\t       * @property {Track} track\n\t       *           A reference to track that was added.\n\t       */\n\t      this.trigger({\n\t        track: track,\n\t        type: 'addtrack'\n\t      });\n\t    }\n\t  };\n\t\n\t  /**\n\t   * Remove a {@link Track} from the `TrackList`\n\t   *\n\t   * @param {Track} track\n\t   *        The audio, video, or text track to remove from the list.\n\t   *\n\t   * @fires TrackList#removetrack\n\t   * @private\n\t   */\n\t\n\t\n\t  TrackList.prototype.removeTrack_ = function removeTrack_(rtrack) {\n\t    var track = void 0;\n\t\n\t    for (var i = 0, l = this.length; i < l; i++) {\n\t      if (this[i] === rtrack) {\n\t        track = this[i];\n\t        if (track.off) {\n\t          track.off();\n\t        }\n\t\n\t        this.tracks_.splice(i, 1);\n\t\n\t        break;\n\t      }\n\t    }\n\t\n\t    if (!track) {\n\t      return;\n\t    }\n\t\n\t    /**\n\t     * Triggered when a track is removed from track list.\n\t     *\n\t     * @event TrackList#removetrack\n\t     * @type {EventTarget~Event}\n\t     * @property {Track} track\n\t     *           A reference to track that was removed.\n\t     */\n\t    this.trigger({\n\t      track: track,\n\t      type: 'removetrack'\n\t    });\n\t  };\n\t\n\t  /**\n\t   * Get a Track from the TrackList by a tracks id\n\t   *\n\t   * @param {String} id - the id of the track to get\n\t   * @method getTrackById\n\t   * @return {Track}\n\t   * @private\n\t   */\n\t\n\t\n\t  TrackList.prototype.getTrackById = function getTrackById(id) {\n\t    var result = null;\n\t\n\t    for (var i = 0, l = this.length; i < l; i++) {\n\t      var track = this[i];\n\t\n\t      if (track.id === id) {\n\t        result = track;\n\t        break;\n\t      }\n\t    }\n\t\n\t    return result;\n\t  };\n\t\n\t  return TrackList;\n\t}(_eventTarget2['default']);\n\t\n\t/**\n\t * Triggered when a different track is selected/enabled.\n\t *\n\t * @event TrackList#change\n\t * @type {EventTarget~Event}\n\t */\n\t\n\t/**\n\t * Events that can be called with on + eventName. See {@link EventHandler}.\n\t *\n\t * @property {Object} TrackList#allowedEvents_\n\t * @private\n\t */\n\t\n\t\n\tTrackList.prototype.allowedEvents_ = {\n\t  change: 'change',\n\t  addtrack: 'addtrack',\n\t  removetrack: 'removetrack'\n\t};\n\t\n\t// emulate attribute EventHandler support to allow for feature detection\n\tfor (var event in TrackList.prototype.allowedEvents_) {\n\t  TrackList.prototype['on' + event] = null;\n\t}\n\t\n\texports['default'] = TrackList;\n\n\n/***/ },\n/* 45 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\texports.__esModule = true;\n\t\n\tvar _trackList = __webpack_require__(44);\n\t\n\tvar _trackList2 = _interopRequireDefault(_trackList);\n\t\n\tvar _browser = __webpack_require__(11);\n\t\n\tvar browser = _interopRequireWildcard(_browser);\n\t\n\tvar _document = __webpack_require__(5);\n\t\n\tvar _document2 = _interopRequireDefault(_document);\n\t\n\tfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj['default'] = obj; return newObj; } }\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /**\n\t                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * @file video-track-list.js\n\t                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                */\n\t\n\t\n\t/**\n\t * Un-select all other {@link VideoTrack}s that are selected.\n\t *\n\t * @param {VideoTrackList} list\n\t *        list to work on\n\t *\n\t * @param {VideoTrack} track\n\t *        The track to skip\n\t *\n\t * @private\n\t */\n\tvar disableOthers = function disableOthers(list, track) {\n\t  for (var i = 0; i < list.length; i++) {\n\t    if (track.id === list[i].id) {\n\t      continue;\n\t    }\n\t    // another video track is enabled, disable it\n\t    list[i].selected = false;\n\t  }\n\t};\n\t\n\t/**\n\t * The current list of {@link VideoTrack} for a video.\n\t *\n\t * @see [Spec]{@link https://html.spec.whatwg.org/multipage/embedded-content.html#videotracklist}\n\t * @extends TrackList\n\t */\n\t\n\tvar VideoTrackList = function (_TrackList) {\n\t  _inherits(VideoTrackList, _TrackList);\n\t\n\t  /**\n\t   * Create an instance of this class.\n\t   *\n\t   * @param {VideoTrack[]} [tracks=[]]\n\t   *        A list of `VideoTrack` to instantiate the list with.\n\t   */\n\t  function VideoTrackList() {\n\t    var _this, _ret;\n\t\n\t    var tracks = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n\t\n\t    _classCallCheck(this, VideoTrackList);\n\t\n\t    var list = void 0;\n\t\n\t    // make sure only 1 track is enabled\n\t    // sorted from last index to first index\n\t    for (var i = tracks.length - 1; i >= 0; i--) {\n\t      if (tracks[i].selected) {\n\t        disableOthers(tracks, tracks[i]);\n\t        break;\n\t      }\n\t    }\n\t\n\t    // IE8 forces us to implement inheritance ourselves\n\t    // as it does not support Object.defineProperty properly\n\t    if (browser.IS_IE8) {\n\t      list = _document2['default'].createElement('custom');\n\t      for (var prop in _trackList2['default'].prototype) {\n\t        if (prop !== 'constructor') {\n\t          list[prop] = _trackList2['default'].prototype[prop];\n\t        }\n\t      }\n\t      for (var _prop in VideoTrackList.prototype) {\n\t        if (_prop !== 'constructor') {\n\t          list[_prop] = VideoTrackList.prototype[_prop];\n\t        }\n\t      }\n\t    }\n\t\n\t    list = (_this = _possibleConstructorReturn(this, _TrackList.call(this, tracks, list)), _this);\n\t    list.changing_ = false;\n\t\n\t    /**\n\t     * @member {number} VideoTrackList#selectedIndex\n\t     *         The current index of the selected {@link VideoTrack`}.\n\t     */\n\t    Object.defineProperty(list, 'selectedIndex', {\n\t      get: function get() {\n\t        for (var _i = 0; _i < this.length; _i++) {\n\t          if (this[_i].selected) {\n\t            return _i;\n\t          }\n\t        }\n\t        return -1;\n\t      },\n\t      set: function set() {}\n\t    });\n\t\n\t    return _ret = list, _possibleConstructorReturn(_this, _ret);\n\t  }\n\t\n\t  /**\n\t   * Add a {@link VideoTrack} to the `VideoTrackList`.\n\t   *\n\t   * @param {VideoTrack} track\n\t   *        The VideoTrack to add to the list\n\t   *\n\t   * @fires TrackList#addtrack\n\t   * @private\n\t   */\n\t\n\t\n\t  VideoTrackList.prototype.addTrack_ = function addTrack_(track) {\n\t    var _this2 = this;\n\t\n\t    if (track.selected) {\n\t      disableOthers(this, track);\n\t    }\n\t\n\t    _TrackList.prototype.addTrack_.call(this, track);\n\t    // native tracks don't have this\n\t    if (!track.addEventListener) {\n\t      return;\n\t    }\n\t\n\t    /**\n\t     * @listens VideoTrack#selectedchange\n\t     * @fires TrackList#change\n\t     */\n\t    track.addEventListener('selectedchange', function () {\n\t      if (_this2.changing_) {\n\t        return;\n\t      }\n\t      _this2.changing_ = true;\n\t      disableOthers(_this2, track);\n\t      _this2.changing_ = false;\n\t      _this2.trigger('change');\n\t    });\n\t  };\n\t\n\t  /**\n\t   * Add a {@link VideoTrack} to the `VideoTrackList`.\n\t   *\n\t   * @param {VideoTrack} track\n\t   *        The VideoTrack to add to the list\n\t   *\n\t   * @fires TrackList#addtrack\n\t   */\n\t\n\t\n\t  VideoTrackList.prototype.addTrack = function addTrack(track) {\n\t    this.addTrack_(track);\n\t  };\n\t\n\t  /**\n\t   * Remove a {@link VideoTrack} to the `VideoTrackList`.\n\t   *\n\t   * @param {VideoTrack} track\n\t   *        The VideoTrack to remove from the list.\n\t   *\n\t   * @fires TrackList#removetrack\n\t   */\n\t\n\t\n\t  VideoTrackList.prototype.removeTrack = function removeTrack(track) {\n\t    _TrackList.prototype.removeTrack_.call(this, track);\n\t  };\n\t\n\t  return VideoTrackList;\n\t}(_trackList2['default']);\n\t\n\texports['default'] = VideoTrackList;\n\n\n/***/ },\n/* 46 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\texports.__esModule = true;\n\t\n\tvar _trackList = __webpack_require__(44);\n\t\n\tvar _trackList2 = _interopRequireDefault(_trackList);\n\t\n\tvar _browser = __webpack_require__(11);\n\t\n\tvar browser = _interopRequireWildcard(_browser);\n\t\n\tvar _document = __webpack_require__(5);\n\t\n\tvar _document2 = _interopRequireDefault(_document);\n\t\n\tfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj['default'] = obj; return newObj; } }\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /**\n\t                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * @file audio-track-list.js\n\t                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                */\n\t\n\t\n\t/**\n\t * Anywhere we call this function we diverge from the spec\n\t * as we only support one enabled audiotrack at a time\n\t *\n\t * @param {AudioTrackList} list\n\t *        list to work on\n\t *\n\t * @param {AudioTrack} track\n\t *        The track to skip\n\t *\n\t * @private\n\t */\n\tvar disableOthers = function disableOthers(list, track) {\n\t  for (var i = 0; i < list.length; i++) {\n\t    if (track.id === list[i].id) {\n\t      continue;\n\t    }\n\t    // another audio track is enabled, disable it\n\t    list[i].enabled = false;\n\t  }\n\t};\n\t\n\t/**\n\t * The current list of {@link AudioTrack} for a media file.\n\t *\n\t * @see [Spec]{@link https://html.spec.whatwg.org/multipage/embedded-content.html#audiotracklist}\n\t * @extends TrackList\n\t */\n\t\n\tvar AudioTrackList = function (_TrackList) {\n\t  _inherits(AudioTrackList, _TrackList);\n\t\n\t  /**\n\t   * Create an instance of this class.\n\t   *\n\t   * @param {AudioTrack[]} [tracks=[]]\n\t   *        A list of `AudioTrack` to instantiate the list with.\n\t   */\n\t  function AudioTrackList() {\n\t    var _this, _ret;\n\t\n\t    var tracks = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n\t\n\t    _classCallCheck(this, AudioTrackList);\n\t\n\t    var list = void 0;\n\t\n\t    // make sure only 1 track is enabled\n\t    // sorted from last index to first index\n\t    for (var i = tracks.length - 1; i >= 0; i--) {\n\t      if (tracks[i].enabled) {\n\t        disableOthers(tracks, tracks[i]);\n\t        break;\n\t      }\n\t    }\n\t\n\t    // IE8 forces us to implement inheritance ourselves\n\t    // as it does not support Object.defineProperty properly\n\t    if (browser.IS_IE8) {\n\t      list = _document2['default'].createElement('custom');\n\t      for (var prop in _trackList2['default'].prototype) {\n\t        if (prop !== 'constructor') {\n\t          list[prop] = _trackList2['default'].prototype[prop];\n\t        }\n\t      }\n\t      for (var _prop in AudioTrackList.prototype) {\n\t        if (_prop !== 'constructor') {\n\t          list[_prop] = AudioTrackList.prototype[_prop];\n\t        }\n\t      }\n\t    }\n\t\n\t    list = (_this = _possibleConstructorReturn(this, _TrackList.call(this, tracks, list)), _this);\n\t    list.changing_ = false;\n\t\n\t    return _ret = list, _possibleConstructorReturn(_this, _ret);\n\t  }\n\t\n\t  /**\n\t   * Add an {@link AudioTrack} to the `AudioTrackList`.\n\t   *\n\t   * @param {AudioTrack} track\n\t   *        The AudioTrack to add to the list\n\t   *\n\t   * @fires Track#addtrack\n\t   * @private\n\t   */\n\t\n\t\n\t  AudioTrackList.prototype.addTrack_ = function addTrack_(track) {\n\t    var _this2 = this;\n\t\n\t    if (track.enabled) {\n\t      disableOthers(this, track);\n\t    }\n\t\n\t    _TrackList.prototype.addTrack_.call(this, track);\n\t    // native tracks don't have this\n\t    if (!track.addEventListener) {\n\t      return;\n\t    }\n\t\n\t    /**\n\t     * @listens AudioTrack#enabledchange\n\t     * @fires TrackList#change\n\t     */\n\t    track.addEventListener('enabledchange', function () {\n\t      // when we are disabling other tracks (since we don't support\n\t      // more than one track at a time) we will set changing_\n\t      // to true so that we don't trigger additional change events\n\t      if (_this2.changing_) {\n\t        return;\n\t      }\n\t      _this2.changing_ = true;\n\t      disableOthers(_this2, track);\n\t      _this2.changing_ = false;\n\t      _this2.trigger('change');\n\t    });\n\t  };\n\t\n\t  /**\n\t   * Add an {@link AudioTrack} to the `AudioTrackList`.\n\t   *\n\t   * @param {AudioTrack} track\n\t   *        The AudioTrack to add to the list\n\t   *\n\t   * @fires Track#addtrack\n\t   */\n\t\n\t\n\t  AudioTrackList.prototype.addTrack = function addTrack(track) {\n\t    this.addTrack_(track);\n\t  };\n\t\n\t  /**\n\t   * Remove an {@link AudioTrack} from the `AudioTrackList`.\n\t   *\n\t   * @param {AudioTrack} track\n\t   *        The AudioTrack to remove from the list\n\t   *\n\t   * @fires Track#removetrack\n\t   */\n\t\n\t\n\t  AudioTrackList.prototype.removeTrack = function removeTrack(track) {\n\t    _TrackList.prototype.removeTrack_.call(this, track);\n\t  };\n\t\n\t  return AudioTrackList;\n\t}(_trackList2['default']);\n\t\n\texports['default'] = AudioTrackList;\n\n\n/***/ },\n/* 47 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Copyright 2013 vtt.js Contributors\n\t *\n\t * Licensed under the Apache License, Version 2.0 (the \"License\");\n\t * you may not use this file except in compliance with the License.\n\t * You may obtain a copy of the License at\n\t *\n\t *   http://www.apache.org/licenses/LICENSE-2.0\n\t *\n\t * Unless required by applicable law or agreed to in writing, software\n\t * distributed under the License is distributed on an \"AS IS\" BASIS,\n\t * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n\t * See the License for the specific language governing permissions and\n\t * limitations under the License.\n\t */\n\t\n\t// Default exports for Node. Export the extended versions of VTTCue and\n\t// VTTRegion in Node since we likely want the capability to convert back and\n\t// forth between JSON. If we don't then it's not that big of a deal since we're\n\t// off browser.\n\tmodule.exports = {\n\t  WebVTT: __webpack_require__(48).WebVTT,\n\t  VTTCue: __webpack_require__(49).VTTCue,\n\t  VTTRegion: __webpack_require__(51).VTTRegion\n\t};\n\n\n/***/ },\n/* 48 */\n/***/ function(module, exports) {\n\n\t/**\n\t * Copyright 2013 vtt.js Contributors\n\t *\n\t * Licensed under the Apache License, Version 2.0 (the \"License\");\n\t * you may not use this file except in compliance with the License.\n\t * You may obtain a copy of the License at\n\t *\n\t *   http://www.apache.org/licenses/LICENSE-2.0\n\t *\n\t * Unless required by applicable law or agreed to in writing, software\n\t * distributed under the License is distributed on an \"AS IS\" BASIS,\n\t * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n\t * See the License for the specific language governing permissions and\n\t * limitations under the License.\n\t */\n\t\n\t/* -*- Mode: Java; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\n\t/* vim: set shiftwidth=2 tabstop=2 autoindent cindent expandtab: */\n\t\n\t(function(global) {\n\t\n\t  var _objCreate = Object.create || (function() {\n\t    function F() {}\n\t    return function(o) {\n\t      if (arguments.length !== 1) {\n\t        throw new Error('Object.create shim only accepts one parameter.');\n\t      }\n\t      F.prototype = o;\n\t      return new F();\n\t    };\n\t  })();\n\t\n\t  // Creates a new ParserError object from an errorData object. The errorData\n\t  // object should have default code and message properties. The default message\n\t  // property can be overriden by passing in a message parameter.\n\t  // See ParsingError.Errors below for acceptable errors.\n\t  function ParsingError(errorData, message) {\n\t    this.name = \"ParsingError\";\n\t    this.code = errorData.code;\n\t    this.message = message || errorData.message;\n\t  }\n\t  ParsingError.prototype = _objCreate(Error.prototype);\n\t  ParsingError.prototype.constructor = ParsingError;\n\t\n\t  // ParsingError metadata for acceptable ParsingErrors.\n\t  ParsingError.Errors = {\n\t    BadSignature: {\n\t      code: 0,\n\t      message: \"Malformed WebVTT signature.\"\n\t    },\n\t    BadTimeStamp: {\n\t      code: 1,\n\t      message: \"Malformed time stamp.\"\n\t    }\n\t  };\n\t\n\t  // Try to parse input as a time stamp.\n\t  function parseTimeStamp(input) {\n\t\n\t    function computeSeconds(h, m, s, f) {\n\t      return (h | 0) * 3600 + (m | 0) * 60 + (s | 0) + (f | 0) / 1000;\n\t    }\n\t\n\t    var m = input.match(/^(\\d+):(\\d{2})(:\\d{2})?\\.(\\d{3})/);\n\t    if (!m) {\n\t      return null;\n\t    }\n\t\n\t    if (m[3]) {\n\t      // Timestamp takes the form of [hours]:[minutes]:[seconds].[milliseconds]\n\t      return computeSeconds(m[1], m[2], m[3].replace(\":\", \"\"), m[4]);\n\t    } else if (m[1] > 59) {\n\t      // Timestamp takes the form of [hours]:[minutes].[milliseconds]\n\t      // First position is hours as it's over 59.\n\t      return computeSeconds(m[1], m[2], 0,  m[4]);\n\t    } else {\n\t      // Timestamp takes the form of [minutes]:[seconds].[milliseconds]\n\t      return computeSeconds(0, m[1], m[2], m[4]);\n\t    }\n\t  }\n\t\n\t  // A settings object holds key/value pairs and will ignore anything but the first\n\t  // assignment to a specific key.\n\t  function Settings() {\n\t    this.values = _objCreate(null);\n\t  }\n\t\n\t  Settings.prototype = {\n\t    // Only accept the first assignment to any key.\n\t    set: function(k, v) {\n\t      if (!this.get(k) && v !== \"\") {\n\t        this.values[k] = v;\n\t      }\n\t    },\n\t    // Return the value for a key, or a default value.\n\t    // If 'defaultKey' is passed then 'dflt' is assumed to be an object with\n\t    // a number of possible default values as properties where 'defaultKey' is\n\t    // the key of the property that will be chosen; otherwise it's assumed to be\n\t    // a single value.\n\t    get: function(k, dflt, defaultKey) {\n\t      if (defaultKey) {\n\t        return this.has(k) ? this.values[k] : dflt[defaultKey];\n\t      }\n\t      return this.has(k) ? this.values[k] : dflt;\n\t    },\n\t    // Check whether we have a value for a key.\n\t    has: function(k) {\n\t      return k in this.values;\n\t    },\n\t    // Accept a setting if its one of the given alternatives.\n\t    alt: function(k, v, a) {\n\t      for (var n = 0; n < a.length; ++n) {\n\t        if (v === a[n]) {\n\t          this.set(k, v);\n\t          break;\n\t        }\n\t      }\n\t    },\n\t    // Accept a setting if its a valid (signed) integer.\n\t    integer: function(k, v) {\n\t      if (/^-?\\d+$/.test(v)) { // integer\n\t        this.set(k, parseInt(v, 10));\n\t      }\n\t    },\n\t    // Accept a setting if its a valid percentage.\n\t    percent: function(k, v) {\n\t      var m;\n\t      if ((m = v.match(/^([\\d]{1,3})(\\.[\\d]*)?%$/))) {\n\t        v = parseFloat(v);\n\t        if (v >= 0 && v <= 100) {\n\t          this.set(k, v);\n\t          return true;\n\t        }\n\t      }\n\t      return false;\n\t    }\n\t  };\n\t\n\t  // Helper function to parse input into groups separated by 'groupDelim', and\n\t  // interprete each group as a key/value pair separated by 'keyValueDelim'.\n\t  function parseOptions(input, callback, keyValueDelim, groupDelim) {\n\t    var groups = groupDelim ? input.split(groupDelim) : [input];\n\t    for (var i in groups) {\n\t      if (typeof groups[i] !== \"string\") {\n\t        continue;\n\t      }\n\t      var kv = groups[i].split(keyValueDelim);\n\t      if (kv.length !== 2) {\n\t        continue;\n\t      }\n\t      var k = kv[0];\n\t      var v = kv[1];\n\t      callback(k, v);\n\t    }\n\t  }\n\t\n\t  function parseCue(input, cue, regionList) {\n\t    // Remember the original input if we need to throw an error.\n\t    var oInput = input;\n\t    // 4.1 WebVTT timestamp\n\t    function consumeTimeStamp() {\n\t      var ts = parseTimeStamp(input);\n\t      if (ts === null) {\n\t        throw new ParsingError(ParsingError.Errors.BadTimeStamp,\n\t                              \"Malformed timestamp: \" + oInput);\n\t      }\n\t      // Remove time stamp from input.\n\t      input = input.replace(/^[^\\sa-zA-Z-]+/, \"\");\n\t      return ts;\n\t    }\n\t\n\t    // 4.4.2 WebVTT cue settings\n\t    function consumeCueSettings(input, cue) {\n\t      var settings = new Settings();\n\t\n\t      parseOptions(input, function (k, v) {\n\t        switch (k) {\n\t        case \"region\":\n\t          // Find the last region we parsed with the same region id.\n\t          for (var i = regionList.length - 1; i >= 0; i--) {\n\t            if (regionList[i].id === v) {\n\t              settings.set(k, regionList[i].region);\n\t              break;\n\t            }\n\t          }\n\t          break;\n\t        case \"vertical\":\n\t          settings.alt(k, v, [\"rl\", \"lr\"]);\n\t          break;\n\t        case \"line\":\n\t          var vals = v.split(\",\"),\n\t              vals0 = vals[0];\n\t          settings.integer(k, vals0);\n\t          settings.percent(k, vals0) ? settings.set(\"snapToLines\", false) : null;\n\t          settings.alt(k, vals0, [\"auto\"]);\n\t          if (vals.length === 2) {\n\t            settings.alt(\"lineAlign\", vals[1], [\"start\", \"middle\", \"end\"]);\n\t          }\n\t          break;\n\t        case \"position\":\n\t          vals = v.split(\",\");\n\t          settings.percent(k, vals[0]);\n\t          if (vals.length === 2) {\n\t            settings.alt(\"positionAlign\", vals[1], [\"start\", \"middle\", \"end\"]);\n\t          }\n\t          break;\n\t        case \"size\":\n\t          settings.percent(k, v);\n\t          break;\n\t        case \"align\":\n\t          settings.alt(k, v, [\"start\", \"middle\", \"end\", \"left\", \"right\"]);\n\t          break;\n\t        }\n\t      }, /:/, /\\s/);\n\t\n\t      // Apply default values for any missing fields.\n\t      cue.region = settings.get(\"region\", null);\n\t      cue.vertical = settings.get(\"vertical\", \"\");\n\t      cue.line = settings.get(\"line\", \"auto\");\n\t      cue.lineAlign = settings.get(\"lineAlign\", \"start\");\n\t      cue.snapToLines = settings.get(\"snapToLines\", true);\n\t      cue.size = settings.get(\"size\", 100);\n\t      cue.align = settings.get(\"align\", \"middle\");\n\t      cue.position = settings.get(\"position\", {\n\t        start: 0,\n\t        left: 0,\n\t        middle: 50,\n\t        end: 100,\n\t        right: 100\n\t      }, cue.align);\n\t      cue.positionAlign = settings.get(\"positionAlign\", {\n\t        start: \"start\",\n\t        left: \"start\",\n\t        middle: \"middle\",\n\t        end: \"end\",\n\t        right: \"end\"\n\t      }, cue.align);\n\t    }\n\t\n\t    function skipWhitespace() {\n\t      input = input.replace(/^\\s+/, \"\");\n\t    }\n\t\n\t    // 4.1 WebVTT cue timings.\n\t    skipWhitespace();\n\t    cue.startTime = consumeTimeStamp();   // (1) collect cue start time\n\t    skipWhitespace();\n\t    if (input.substr(0, 3) !== \"-->\") {     // (3) next characters must match \"-->\"\n\t      throw new ParsingError(ParsingError.Errors.BadTimeStamp,\n\t                             \"Malformed time stamp (time stamps must be separated by '-->'): \" +\n\t                             oInput);\n\t    }\n\t    input = input.substr(3);\n\t    skipWhitespace();\n\t    cue.endTime = consumeTimeStamp();     // (5) collect cue end time\n\t\n\t    // 4.1 WebVTT cue settings list.\n\t    skipWhitespace();\n\t    consumeCueSettings(input, cue);\n\t  }\n\t\n\t  var ESCAPE = {\n\t    \"&amp;\": \"&\",\n\t    \"&lt;\": \"<\",\n\t    \"&gt;\": \">\",\n\t    \"&lrm;\": \"\\u200e\",\n\t    \"&rlm;\": \"\\u200f\",\n\t    \"&nbsp;\": \"\\u00a0\"\n\t  };\n\t\n\t  var TAG_NAME = {\n\t    c: \"span\",\n\t    i: \"i\",\n\t    b: \"b\",\n\t    u: \"u\",\n\t    ruby: \"ruby\",\n\t    rt: \"rt\",\n\t    v: \"span\",\n\t    lang: \"span\"\n\t  };\n\t\n\t  var TAG_ANNOTATION = {\n\t    v: \"title\",\n\t    lang: \"lang\"\n\t  };\n\t\n\t  var NEEDS_PARENT = {\n\t    rt: \"ruby\"\n\t  };\n\t\n\t  // Parse content into a document fragment.\n\t  function parseContent(window, input) {\n\t    function nextToken() {\n\t      // Check for end-of-string.\n\t      if (!input) {\n\t        return null;\n\t      }\n\t\n\t      // Consume 'n' characters from the input.\n\t      function consume(result) {\n\t        input = input.substr(result.length);\n\t        return result;\n\t      }\n\t\n\t      var m = input.match(/^([^<]*)(<[^>]+>?)?/);\n\t      // If there is some text before the next tag, return it, otherwise return\n\t      // the tag.\n\t      return consume(m[1] ? m[1] : m[2]);\n\t    }\n\t\n\t    // Unescape a string 's'.\n\t    function unescape1(e) {\n\t      return ESCAPE[e];\n\t    }\n\t    function unescape(s) {\n\t      while ((m = s.match(/&(amp|lt|gt|lrm|rlm|nbsp);/))) {\n\t        s = s.replace(m[0], unescape1);\n\t      }\n\t      return s;\n\t    }\n\t\n\t    function shouldAdd(current, element) {\n\t      return !NEEDS_PARENT[element.localName] ||\n\t             NEEDS_PARENT[element.localName] === current.localName;\n\t    }\n\t\n\t    // Create an element for this tag.\n\t    function createElement(type, annotation) {\n\t      var tagName = TAG_NAME[type];\n\t      if (!tagName) {\n\t        return null;\n\t      }\n\t      var element = window.document.createElement(tagName);\n\t      element.localName = tagName;\n\t      var name = TAG_ANNOTATION[type];\n\t      if (name && annotation) {\n\t        element[name] = annotation.trim();\n\t      }\n\t      return element;\n\t    }\n\t\n\t    var rootDiv = window.document.createElement(\"div\"),\n\t        current = rootDiv,\n\t        t,\n\t        tagStack = [];\n\t\n\t    while ((t = nextToken()) !== null) {\n\t      if (t[0] === '<') {\n\t        if (t[1] === \"/\") {\n\t          // If the closing tag matches, move back up to the parent node.\n\t          if (tagStack.length &&\n\t              tagStack[tagStack.length - 1] === t.substr(2).replace(\">\", \"\")) {\n\t            tagStack.pop();\n\t            current = current.parentNode;\n\t          }\n\t          // Otherwise just ignore the end tag.\n\t          continue;\n\t        }\n\t        var ts = parseTimeStamp(t.substr(1, t.length - 2));\n\t        var node;\n\t        if (ts) {\n\t          // Timestamps are lead nodes as well.\n\t          node = window.document.createProcessingInstruction(\"timestamp\", ts);\n\t          current.appendChild(node);\n\t          continue;\n\t        }\n\t        var m = t.match(/^<([^.\\s/0-9>]+)(\\.[^\\s\\\\>]+)?([^>\\\\]+)?(\\\\?)>?$/);\n\t        // If we can't parse the tag, skip to the next tag.\n\t        if (!m) {\n\t          continue;\n\t        }\n\t        // Try to construct an element, and ignore the tag if we couldn't.\n\t        node = createElement(m[1], m[3]);\n\t        if (!node) {\n\t          continue;\n\t        }\n\t        // Determine if the tag should be added based on the context of where it\n\t        // is placed in the cuetext.\n\t        if (!shouldAdd(current, node)) {\n\t          continue;\n\t        }\n\t        // Set the class list (as a list of classes, separated by space).\n\t        if (m[2]) {\n\t          node.className = m[2].substr(1).replace('.', ' ');\n\t        }\n\t        // Append the node to the current node, and enter the scope of the new\n\t        // node.\n\t        tagStack.push(m[1]);\n\t        current.appendChild(node);\n\t        current = node;\n\t        continue;\n\t      }\n\t\n\t      // Text nodes are leaf nodes.\n\t      current.appendChild(window.document.createTextNode(unescape(t)));\n\t    }\n\t\n\t    return rootDiv;\n\t  }\n\t\n\t  // This is a list of all the Unicode characters that have a strong\n\t  // right-to-left category. What this means is that these characters are\n\t  // written right-to-left for sure. It was generated by pulling all the strong\n\t  // right-to-left characters out of the Unicode data table. That table can\n\t  // found at: http://www.unicode.org/Public/UNIDATA/UnicodeData.txt\n\t  var strongRTLChars = [0x05BE, 0x05C0, 0x05C3, 0x05C6, 0x05D0, 0x05D1,\n\t      0x05D2, 0x05D3, 0x05D4, 0x05D5, 0x05D6, 0x05D7, 0x05D8, 0x05D9, 0x05DA,\n\t      0x05DB, 0x05DC, 0x05DD, 0x05DE, 0x05DF, 0x05E0, 0x05E1, 0x05E2, 0x05E3,\n\t      0x05E4, 0x05E5, 0x05E6, 0x05E7, 0x05E8, 0x05E9, 0x05EA, 0x05F0, 0x05F1,\n\t      0x05F2, 0x05F3, 0x05F4, 0x0608, 0x060B, 0x060D, 0x061B, 0x061E, 0x061F,\n\t      0x0620, 0x0621, 0x0622, 0x0623, 0x0624, 0x0625, 0x0626, 0x0627, 0x0628,\n\t      0x0629, 0x062A, 0x062B, 0x062C, 0x062D, 0x062E, 0x062F, 0x0630, 0x0631,\n\t      0x0632, 0x0633, 0x0634, 0x0635, 0x0636, 0x0637, 0x0638, 0x0639, 0x063A,\n\t      0x063B, 0x063C, 0x063D, 0x063E, 0x063F, 0x0640, 0x0641, 0x0642, 0x0643,\n\t      0x0644, 0x0645, 0x0646, 0x0647, 0x0648, 0x0649, 0x064A, 0x066D, 0x066E,\n\t      0x066F, 0x0671, 0x0672, 0x0673, 0x0674, 0x0675, 0x0676, 0x0677, 0x0678,\n\t      0x0679, 0x067A, 0x067B, 0x067C, 0x067D, 0x067E, 0x067F, 0x0680, 0x0681,\n\t      0x0682, 0x0683, 0x0684, 0x0685, 0x0686, 0x0687, 0x0688, 0x0689, 0x068A,\n\t      0x068B, 0x068C, 0x068D, 0x068E, 0x068F, 0x0690, 0x0691, 0x0692, 0x0693,\n\t      0x0694, 0x0695, 0x0696, 0x0697, 0x0698, 0x0699, 0x069A, 0x069B, 0x069C,\n\t      0x069D, 0x069E, 0x069F, 0x06A0, 0x06A1, 0x06A2, 0x06A3, 0x06A4, 0x06A5,\n\t      0x06A6, 0x06A7, 0x06A8, 0x06A9, 0x06AA, 0x06AB, 0x06AC, 0x06AD, 0x06AE,\n\t      0x06AF, 0x06B0, 0x06B1, 0x06B2, 0x06B3, 0x06B4, 0x06B5, 0x06B6, 0x06B7,\n\t      0x06B8, 0x06B9, 0x06BA, 0x06BB, 0x06BC, 0x06BD, 0x06BE, 0x06BF, 0x06C0,\n\t      0x06C1, 0x06C2, 0x06C3, 0x06C4, 0x06C5, 0x06C6, 0x06C7, 0x06C8, 0x06C9,\n\t      0x06CA, 0x06CB, 0x06CC, 0x06CD, 0x06CE, 0x06CF, 0x06D0, 0x06D1, 0x06D2,\n\t      0x06D3, 0x06D4, 0x06D5, 0x06E5, 0x06E6, 0x06EE, 0x06EF, 0x06FA, 0x06FB,\n\t      0x06FC, 0x06FD, 0x06FE, 0x06FF, 0x0700, 0x0701, 0x0702, 0x0703, 0x0704,\n\t      0x0705, 0x0706, 0x0707, 0x0708, 0x0709, 0x070A, 0x070B, 0x070C, 0x070D,\n\t      0x070F, 0x0710, 0x0712, 0x0713, 0x0714, 0x0715, 0x0716, 0x0717, 0x0718,\n\t      0x0719, 0x071A, 0x071B, 0x071C, 0x071D, 0x071E, 0x071F, 0x0720, 0x0721,\n\t      0x0722, 0x0723, 0x0724, 0x0725, 0x0726, 0x0727, 0x0728, 0x0729, 0x072A,\n\t      0x072B, 0x072C, 0x072D, 0x072E, 0x072F, 0x074D, 0x074E, 0x074F, 0x0750,\n\t      0x0751, 0x0752, 0x0753, 0x0754, 0x0755, 0x0756, 0x0757, 0x0758, 0x0759,\n\t      0x075A, 0x075B, 0x075C, 0x075D, 0x075E, 0x075F, 0x0760, 0x0761, 0x0762,\n\t      0x0763, 0x0764, 0x0765, 0x0766, 0x0767, 0x0768, 0x0769, 0x076A, 0x076B,\n\t      0x076C, 0x076D, 0x076E, 0x076F, 0x0770, 0x0771, 0x0772, 0x0773, 0x0774,\n\t      0x0775, 0x0776, 0x0777, 0x0778, 0x0779, 0x077A, 0x077B, 0x077C, 0x077D,\n\t      0x077E, 0x077F, 0x0780, 0x0781, 0x0782, 0x0783, 0x0784, 0x0785, 0x0786,\n\t      0x0787, 0x0788, 0x0789, 0x078A, 0x078B, 0x078C, 0x078D, 0x078E, 0x078F,\n\t      0x0790, 0x0791, 0x0792, 0x0793, 0x0794, 0x0795, 0x0796, 0x0797, 0x0798,\n\t      0x0799, 0x079A, 0x079B, 0x079C, 0x079D, 0x079E, 0x079F, 0x07A0, 0x07A1,\n\t      0x07A2, 0x07A3, 0x07A4, 0x07A5, 0x07B1, 0x07C0, 0x07C1, 0x07C2, 0x07C3,\n\t      0x07C4, 0x07C5, 0x07C6, 0x07C7, 0x07C8, 0x07C9, 0x07CA, 0x07CB, 0x07CC,\n\t      0x07CD, 0x07CE, 0x07CF, 0x07D0, 0x07D1, 0x07D2, 0x07D3, 0x07D4, 0x07D5,\n\t      0x07D6, 0x07D7, 0x07D8, 0x07D9, 0x07DA, 0x07DB, 0x07DC, 0x07DD, 0x07DE,\n\t      0x07DF, 0x07E0, 0x07E1, 0x07E2, 0x07E3, 0x07E4, 0x07E5, 0x07E6, 0x07E7,\n\t      0x07E8, 0x07E9, 0x07EA, 0x07F4, 0x07F5, 0x07FA, 0x0800, 0x0801, 0x0802,\n\t      0x0803, 0x0804, 0x0805, 0x0806, 0x0807, 0x0808, 0x0809, 0x080A, 0x080B,\n\t      0x080C, 0x080D, 0x080E, 0x080F, 0x0810, 0x0811, 0x0812, 0x0813, 0x0814,\n\t      0x0815, 0x081A, 0x0824, 0x0828, 0x0830, 0x0831, 0x0832, 0x0833, 0x0834,\n\t      0x0835, 0x0836, 0x0837, 0x0838, 0x0839, 0x083A, 0x083B, 0x083C, 0x083D,\n\t      0x083E, 0x0840, 0x0841, 0x0842, 0x0843, 0x0844, 0x0845, 0x0846, 0x0847,\n\t      0x0848, 0x0849, 0x084A, 0x084B, 0x084C, 0x084D, 0x084E, 0x084F, 0x0850,\n\t      0x0851, 0x0852, 0x0853, 0x0854, 0x0855, 0x0856, 0x0857, 0x0858, 0x085E,\n\t      0x08A0, 0x08A2, 0x08A3, 0x08A4, 0x08A5, 0x08A6, 0x08A7, 0x08A8, 0x08A9,\n\t      0x08AA, 0x08AB, 0x08AC, 0x200F, 0xFB1D, 0xFB1F, 0xFB20, 0xFB21, 0xFB22,\n\t      0xFB23, 0xFB24, 0xFB25, 0xFB26, 0xFB27, 0xFB28, 0xFB2A, 0xFB2B, 0xFB2C,\n\t      0xFB2D, 0xFB2E, 0xFB2F, 0xFB30, 0xFB31, 0xFB32, 0xFB33, 0xFB34, 0xFB35,\n\t      0xFB36, 0xFB38, 0xFB39, 0xFB3A, 0xFB3B, 0xFB3C, 0xFB3E, 0xFB40, 0xFB41,\n\t      0xFB43, 0xFB44, 0xFB46, 0xFB47, 0xFB48, 0xFB49, 0xFB4A, 0xFB4B, 0xFB4C,\n\t      0xFB4D, 0xFB4E, 0xFB4F, 0xFB50, 0xFB51, 0xFB52, 0xFB53, 0xFB54, 0xFB55,\n\t      0xFB56, 0xFB57, 0xFB58, 0xFB59, 0xFB5A, 0xFB5B, 0xFB5C, 0xFB5D, 0xFB5E,\n\t      0xFB5F, 0xFB60, 0xFB61, 0xFB62, 0xFB63, 0xFB64, 0xFB65, 0xFB66, 0xFB67,\n\t      0xFB68, 0xFB69, 0xFB6A, 0xFB6B, 0xFB6C, 0xFB6D, 0xFB6E, 0xFB6F, 0xFB70,\n\t      0xFB71, 0xFB72, 0xFB73, 0xFB74, 0xFB75, 0xFB76, 0xFB77, 0xFB78, 0xFB79,\n\t      0xFB7A, 0xFB7B, 0xFB7C, 0xFB7D, 0xFB7E, 0xFB7F, 0xFB80, 0xFB81, 0xFB82,\n\t      0xFB83, 0xFB84, 0xFB85, 0xFB86, 0xFB87, 0xFB88, 0xFB89, 0xFB8A, 0xFB8B,\n\t      0xFB8C, 0xFB8D, 0xFB8E, 0xFB8F, 0xFB90, 0xFB91, 0xFB92, 0xFB93, 0xFB94,\n\t      0xFB95, 0xFB96, 0xFB97, 0xFB98, 0xFB99, 0xFB9A, 0xFB9B, 0xFB9C, 0xFB9D,\n\t      0xFB9E, 0xFB9F, 0xFBA0, 0xFBA1, 0xFBA2, 0xFBA3, 0xFBA4, 0xFBA5, 0xFBA6,\n\t      0xFBA7, 0xFBA8, 0xFBA9, 0xFBAA, 0xFBAB, 0xFBAC, 0xFBAD, 0xFBAE, 0xFBAF,\n\t      0xFBB0, 0xFBB1, 0xFBB2, 0xFBB3, 0xFBB4, 0xFBB5, 0xFBB6, 0xFBB7, 0xFBB8,\n\t      0xFBB9, 0xFBBA, 0xFBBB, 0xFBBC, 0xFBBD, 0xFBBE, 0xFBBF, 0xFBC0, 0xFBC1,\n\t      0xFBD3, 0xFBD4, 0xFBD5, 0xFBD6, 0xFBD7, 0xFBD8, 0xFBD9, 0xFBDA, 0xFBDB,\n\t      0xFBDC, 0xFBDD, 0xFBDE, 0xFBDF, 0xFBE0, 0xFBE1, 0xFBE2, 0xFBE3, 0xFBE4,\n\t      0xFBE5, 0xFBE6, 0xFBE7, 0xFBE8, 0xFBE9, 0xFBEA, 0xFBEB, 0xFBEC, 0xFBED,\n\t      0xFBEE, 0xFBEF, 0xFBF0, 0xFBF1, 0xFBF2, 0xFBF3, 0xFBF4, 0xFBF5, 0xFBF6,\n\t      0xFBF7, 0xFBF8, 0xFBF9, 0xFBFA, 0xFBFB, 0xFBFC, 0xFBFD, 0xFBFE, 0xFBFF,\n\t      0xFC00, 0xFC01, 0xFC02, 0xFC03, 0xFC04, 0xFC05, 0xFC06, 0xFC07, 0xFC08,\n\t      0xFC09, 0xFC0A, 0xFC0B, 0xFC0C, 0xFC0D, 0xFC0E, 0xFC0F, 0xFC10, 0xFC11,\n\t      0xFC12, 0xFC13, 0xFC14, 0xFC15, 0xFC16, 0xFC17, 0xFC18, 0xFC19, 0xFC1A,\n\t      0xFC1B, 0xFC1C, 0xFC1D, 0xFC1E, 0xFC1F, 0xFC20, 0xFC21, 0xFC22, 0xFC23,\n\t      0xFC24, 0xFC25, 0xFC26, 0xFC27, 0xFC28, 0xFC29, 0xFC2A, 0xFC2B, 0xFC2C,\n\t      0xFC2D, 0xFC2E, 0xFC2F, 0xFC30, 0xFC31, 0xFC32, 0xFC33, 0xFC34, 0xFC35,\n\t      0xFC36, 0xFC37, 0xFC38, 0xFC39, 0xFC3A, 0xFC3B, 0xFC3C, 0xFC3D, 0xFC3E,\n\t      0xFC3F, 0xFC40, 0xFC41, 0xFC42, 0xFC43, 0xFC44, 0xFC45, 0xFC46, 0xFC47,\n\t      0xFC48, 0xFC49, 0xFC4A, 0xFC4B, 0xFC4C, 0xFC4D, 0xFC4E, 0xFC4F, 0xFC50,\n\t      0xFC51, 0xFC52, 0xFC53, 0xFC54, 0xFC55, 0xFC56, 0xFC57, 0xFC58, 0xFC59,\n\t      0xFC5A, 0xFC5B, 0xFC5C, 0xFC5D, 0xFC5E, 0xFC5F, 0xFC60, 0xFC61, 0xFC62,\n\t      0xFC63, 0xFC64, 0xFC65, 0xFC66, 0xFC67, 0xFC68, 0xFC69, 0xFC6A, 0xFC6B,\n\t      0xFC6C, 0xFC6D, 0xFC6E, 0xFC6F, 0xFC70, 0xFC71, 0xFC72, 0xFC73, 0xFC74,\n\t      0xFC75, 0xFC76, 0xFC77, 0xFC78, 0xFC79, 0xFC7A, 0xFC7B, 0xFC7C, 0xFC7D,\n\t      0xFC7E, 0xFC7F, 0xFC80, 0xFC81, 0xFC82, 0xFC83, 0xFC84, 0xFC85, 0xFC86,\n\t      0xFC87, 0xFC88, 0xFC89, 0xFC8A, 0xFC8B, 0xFC8C, 0xFC8D, 0xFC8E, 0xFC8F,\n\t      0xFC90, 0xFC91, 0xFC92, 0xFC93, 0xFC94, 0xFC95, 0xFC96, 0xFC97, 0xFC98,\n\t      0xFC99, 0xFC9A, 0xFC9B, 0xFC9C, 0xFC9D, 0xFC9E, 0xFC9F, 0xFCA0, 0xFCA1,\n\t      0xFCA2, 0xFCA3, 0xFCA4, 0xFCA5, 0xFCA6, 0xFCA7, 0xFCA8, 0xFCA9, 0xFCAA,\n\t      0xFCAB, 0xFCAC, 0xFCAD, 0xFCAE, 0xFCAF, 0xFCB0, 0xFCB1, 0xFCB2, 0xFCB3,\n\t      0xFCB4, 0xFCB5, 0xFCB6, 0xFCB7, 0xFCB8, 0xFCB9, 0xFCBA, 0xFCBB, 0xFCBC,\n\t      0xFCBD, 0xFCBE, 0xFCBF, 0xFCC0, 0xFCC1, 0xFCC2, 0xFCC3, 0xFCC4, 0xFCC5,\n\t      0xFCC6, 0xFCC7, 0xFCC8, 0xFCC9, 0xFCCA, 0xFCCB, 0xFCCC, 0xFCCD, 0xFCCE,\n\t      0xFCCF, 0xFCD0, 0xFCD1, 0xFCD2, 0xFCD3, 0xFCD4, 0xFCD5, 0xFCD6, 0xFCD7,\n\t      0xFCD8, 0xFCD9, 0xFCDA, 0xFCDB, 0xFCDC, 0xFCDD, 0xFCDE, 0xFCDF, 0xFCE0,\n\t      0xFCE1, 0xFCE2, 0xFCE3, 0xFCE4, 0xFCE5, 0xFCE6, 0xFCE7, 0xFCE8, 0xFCE9,\n\t      0xFCEA, 0xFCEB, 0xFCEC, 0xFCED, 0xFCEE, 0xFCEF, 0xFCF0, 0xFCF1, 0xFCF2,\n\t      0xFCF3, 0xFCF4, 0xFCF5, 0xFCF6, 0xFCF7, 0xFCF8, 0xFCF9, 0xFCFA, 0xFCFB,\n\t      0xFCFC, 0xFCFD, 0xFCFE, 0xFCFF, 0xFD00, 0xFD01, 0xFD02, 0xFD03, 0xFD04,\n\t      0xFD05, 0xFD06, 0xFD07, 0xFD08, 0xFD09, 0xFD0A, 0xFD0B, 0xFD0C, 0xFD0D,\n\t      0xFD0E, 0xFD0F, 0xFD10, 0xFD11, 0xFD12, 0xFD13, 0xFD14, 0xFD15, 0xFD16,\n\t      0xFD17, 0xFD18, 0xFD19, 0xFD1A, 0xFD1B, 0xFD1C, 0xFD1D, 0xFD1E, 0xFD1F,\n\t      0xFD20, 0xFD21, 0xFD22, 0xFD23, 0xFD24, 0xFD25, 0xFD26, 0xFD27, 0xFD28,\n\t      0xFD29, 0xFD2A, 0xFD2B, 0xFD2C, 0xFD2D, 0xFD2E, 0xFD2F, 0xFD30, 0xFD31,\n\t      0xFD32, 0xFD33, 0xFD34, 0xFD35, 0xFD36, 0xFD37, 0xFD38, 0xFD39, 0xFD3A,\n\t      0xFD3B, 0xFD3C, 0xFD3D, 0xFD50, 0xFD51, 0xFD52, 0xFD53, 0xFD54, 0xFD55,\n\t      0xFD56, 0xFD57, 0xFD58, 0xFD59, 0xFD5A, 0xFD5B, 0xFD5C, 0xFD5D, 0xFD5E,\n\t      0xFD5F, 0xFD60, 0xFD61, 0xFD62, 0xFD63, 0xFD64, 0xFD65, 0xFD66, 0xFD67,\n\t      0xFD68, 0xFD69, 0xFD6A, 0xFD6B, 0xFD6C, 0xFD6D, 0xFD6E, 0xFD6F, 0xFD70,\n\t      0xFD71, 0xFD72, 0xFD73, 0xFD74, 0xFD75, 0xFD76, 0xFD77, 0xFD78, 0xFD79,\n\t      0xFD7A, 0xFD7B, 0xFD7C, 0xFD7D, 0xFD7E, 0xFD7F, 0xFD80, 0xFD81, 0xFD82,\n\t      0xFD83, 0xFD84, 0xFD85, 0xFD86, 0xFD87, 0xFD88, 0xFD89, 0xFD8A, 0xFD8B,\n\t      0xFD8C, 0xFD8D, 0xFD8E, 0xFD8F, 0xFD92, 0xFD93, 0xFD94, 0xFD95, 0xFD96,\n\t      0xFD97, 0xFD98, 0xFD99, 0xFD9A, 0xFD9B, 0xFD9C, 0xFD9D, 0xFD9E, 0xFD9F,\n\t      0xFDA0, 0xFDA1, 0xFDA2, 0xFDA3, 0xFDA4, 0xFDA5, 0xFDA6, 0xFDA7, 0xFDA8,\n\t      0xFDA9, 0xFDAA, 0xFDAB, 0xFDAC, 0xFDAD, 0xFDAE, 0xFDAF, 0xFDB0, 0xFDB1,\n\t      0xFDB2, 0xFDB3, 0xFDB4, 0xFDB5, 0xFDB6, 0xFDB7, 0xFDB8, 0xFDB9, 0xFDBA,\n\t      0xFDBB, 0xFDBC, 0xFDBD, 0xFDBE, 0xFDBF, 0xFDC0, 0xFDC1, 0xFDC2, 0xFDC3,\n\t      0xFDC4, 0xFDC5, 0xFDC6, 0xFDC7, 0xFDF0, 0xFDF1, 0xFDF2, 0xFDF3, 0xFDF4,\n\t      0xFDF5, 0xFDF6, 0xFDF7, 0xFDF8, 0xFDF9, 0xFDFA, 0xFDFB, 0xFDFC, 0xFE70,\n\t      0xFE71, 0xFE72, 0xFE73, 0xFE74, 0xFE76, 0xFE77, 0xFE78, 0xFE79, 0xFE7A,\n\t      0xFE7B, 0xFE7C, 0xFE7D, 0xFE7E, 0xFE7F, 0xFE80, 0xFE81, 0xFE82, 0xFE83,\n\t      0xFE84, 0xFE85, 0xFE86, 0xFE87, 0xFE88, 0xFE89, 0xFE8A, 0xFE8B, 0xFE8C,\n\t      0xFE8D, 0xFE8E, 0xFE8F, 0xFE90, 0xFE91, 0xFE92, 0xFE93, 0xFE94, 0xFE95,\n\t      0xFE96, 0xFE97, 0xFE98, 0xFE99, 0xFE9A, 0xFE9B, 0xFE9C, 0xFE9D, 0xFE9E,\n\t      0xFE9F, 0xFEA0, 0xFEA1, 0xFEA2, 0xFEA3, 0xFEA4, 0xFEA5, 0xFEA6, 0xFEA7,\n\t      0xFEA8, 0xFEA9, 0xFEAA, 0xFEAB, 0xFEAC, 0xFEAD, 0xFEAE, 0xFEAF, 0xFEB0,\n\t      0xFEB1, 0xFEB2, 0xFEB3, 0xFEB4, 0xFEB5, 0xFEB6, 0xFEB7, 0xFEB8, 0xFEB9,\n\t      0xFEBA, 0xFEBB, 0xFEBC, 0xFEBD, 0xFEBE, 0xFEBF, 0xFEC0, 0xFEC1, 0xFEC2,\n\t      0xFEC3, 0xFEC4, 0xFEC5, 0xFEC6, 0xFEC7, 0xFEC8, 0xFEC9, 0xFECA, 0xFECB,\n\t      0xFECC, 0xFECD, 0xFECE, 0xFECF, 0xFED0, 0xFED1, 0xFED2, 0xFED3, 0xFED4,\n\t      0xFED5, 0xFED6, 0xFED7, 0xFED8, 0xFED9, 0xFEDA, 0xFEDB, 0xFEDC, 0xFEDD,\n\t      0xFEDE, 0xFEDF, 0xFEE0, 0xFEE1, 0xFEE2, 0xFEE3, 0xFEE4, 0xFEE5, 0xFEE6,\n\t      0xFEE7, 0xFEE8, 0xFEE9, 0xFEEA, 0xFEEB, 0xFEEC, 0xFEED, 0xFEEE, 0xFEEF,\n\t      0xFEF0, 0xFEF1, 0xFEF2, 0xFEF3, 0xFEF4, 0xFEF5, 0xFEF6, 0xFEF7, 0xFEF8,\n\t      0xFEF9, 0xFEFA, 0xFEFB, 0xFEFC, 0x10800, 0x10801, 0x10802, 0x10803,\n\t      0x10804, 0x10805, 0x10808, 0x1080A, 0x1080B, 0x1080C, 0x1080D, 0x1080E,\n\t      0x1080F, 0x10810, 0x10811, 0x10812, 0x10813, 0x10814, 0x10815, 0x10816,\n\t      0x10817, 0x10818, 0x10819, 0x1081A, 0x1081B, 0x1081C, 0x1081D, 0x1081E,\n\t      0x1081F, 0x10820, 0x10821, 0x10822, 0x10823, 0x10824, 0x10825, 0x10826,\n\t      0x10827, 0x10828, 0x10829, 0x1082A, 0x1082B, 0x1082C, 0x1082D, 0x1082E,\n\t      0x1082F, 0x10830, 0x10831, 0x10832, 0x10833, 0x10834, 0x10835, 0x10837,\n\t      0x10838, 0x1083C, 0x1083F, 0x10840, 0x10841, 0x10842, 0x10843, 0x10844,\n\t      0x10845, 0x10846, 0x10847, 0x10848, 0x10849, 0x1084A, 0x1084B, 0x1084C,\n\t      0x1084D, 0x1084E, 0x1084F, 0x10850, 0x10851, 0x10852, 0x10853, 0x10854,\n\t      0x10855, 0x10857, 0x10858, 0x10859, 0x1085A, 0x1085B, 0x1085C, 0x1085D,\n\t      0x1085E, 0x1085F, 0x10900, 0x10901, 0x10902, 0x10903, 0x10904, 0x10905,\n\t      0x10906, 0x10907, 0x10908, 0x10909, 0x1090A, 0x1090B, 0x1090C, 0x1090D,\n\t      0x1090E, 0x1090F, 0x10910, 0x10911, 0x10912, 0x10913, 0x10914, 0x10915,\n\t      0x10916, 0x10917, 0x10918, 0x10919, 0x1091A, 0x1091B, 0x10920, 0x10921,\n\t      0x10922, 0x10923, 0x10924, 0x10925, 0x10926, 0x10927, 0x10928, 0x10929,\n\t      0x1092A, 0x1092B, 0x1092C, 0x1092D, 0x1092E, 0x1092F, 0x10930, 0x10931,\n\t      0x10932, 0x10933, 0x10934, 0x10935, 0x10936, 0x10937, 0x10938, 0x10939,\n\t      0x1093F, 0x10980, 0x10981, 0x10982, 0x10983, 0x10984, 0x10985, 0x10986,\n\t      0x10987, 0x10988, 0x10989, 0x1098A, 0x1098B, 0x1098C, 0x1098D, 0x1098E,\n\t      0x1098F, 0x10990, 0x10991, 0x10992, 0x10993, 0x10994, 0x10995, 0x10996,\n\t      0x10997, 0x10998, 0x10999, 0x1099A, 0x1099B, 0x1099C, 0x1099D, 0x1099E,\n\t      0x1099F, 0x109A0, 0x109A1, 0x109A2, 0x109A3, 0x109A4, 0x109A5, 0x109A6,\n\t      0x109A7, 0x109A8, 0x109A9, 0x109AA, 0x109AB, 0x109AC, 0x109AD, 0x109AE,\n\t      0x109AF, 0x109B0, 0x109B1, 0x109B2, 0x109B3, 0x109B4, 0x109B5, 0x109B6,\n\t      0x109B7, 0x109BE, 0x109BF, 0x10A00, 0x10A10, 0x10A11, 0x10A12, 0x10A13,\n\t      0x10A15, 0x10A16, 0x10A17, 0x10A19, 0x10A1A, 0x10A1B, 0x10A1C, 0x10A1D,\n\t      0x10A1E, 0x10A1F, 0x10A20, 0x10A21, 0x10A22, 0x10A23, 0x10A24, 0x10A25,\n\t      0x10A26, 0x10A27, 0x10A28, 0x10A29, 0x10A2A, 0x10A2B, 0x10A2C, 0x10A2D,\n\t      0x10A2E, 0x10A2F, 0x10A30, 0x10A31, 0x10A32, 0x10A33, 0x10A40, 0x10A41,\n\t      0x10A42, 0x10A43, 0x10A44, 0x10A45, 0x10A46, 0x10A47, 0x10A50, 0x10A51,\n\t      0x10A52, 0x10A53, 0x10A54, 0x10A55, 0x10A56, 0x10A57, 0x10A58, 0x10A60,\n\t      0x10A61, 0x10A62, 0x10A63, 0x10A64, 0x10A65, 0x10A66, 0x10A67, 0x10A68,\n\t      0x10A69, 0x10A6A, 0x10A6B, 0x10A6C, 0x10A6D, 0x10A6E, 0x10A6F, 0x10A70,\n\t      0x10A71, 0x10A72, 0x10A73, 0x10A74, 0x10A75, 0x10A76, 0x10A77, 0x10A78,\n\t      0x10A79, 0x10A7A, 0x10A7B, 0x10A7C, 0x10A7D, 0x10A7E, 0x10A7F, 0x10B00,\n\t      0x10B01, 0x10B02, 0x10B03, 0x10B04, 0x10B05, 0x10B06, 0x10B07, 0x10B08,\n\t      0x10B09, 0x10B0A, 0x10B0B, 0x10B0C, 0x10B0D, 0x10B0E, 0x10B0F, 0x10B10,\n\t      0x10B11, 0x10B12, 0x10B13, 0x10B14, 0x10B15, 0x10B16, 0x10B17, 0x10B18,\n\t      0x10B19, 0x10B1A, 0x10B1B, 0x10B1C, 0x10B1D, 0x10B1E, 0x10B1F, 0x10B20,\n\t      0x10B21, 0x10B22, 0x10B23, 0x10B24, 0x10B25, 0x10B26, 0x10B27, 0x10B28,\n\t      0x10B29, 0x10B2A, 0x10B2B, 0x10B2C, 0x10B2D, 0x10B2E, 0x10B2F, 0x10B30,\n\t      0x10B31, 0x10B32, 0x10B33, 0x10B34, 0x10B35, 0x10B40, 0x10B41, 0x10B42,\n\t      0x10B43, 0x10B44, 0x10B45, 0x10B46, 0x10B47, 0x10B48, 0x10B49, 0x10B4A,\n\t      0x10B4B, 0x10B4C, 0x10B4D, 0x10B4E, 0x10B4F, 0x10B50, 0x10B51, 0x10B52,\n\t      0x10B53, 0x10B54, 0x10B55, 0x10B58, 0x10B59, 0x10B5A, 0x10B5B, 0x10B5C,\n\t      0x10B5D, 0x10B5E, 0x10B5F, 0x10B60, 0x10B61, 0x10B62, 0x10B63, 0x10B64,\n\t      0x10B65, 0x10B66, 0x10B67, 0x10B68, 0x10B69, 0x10B6A, 0x10B6B, 0x10B6C,\n\t      0x10B6D, 0x10B6E, 0x10B6F, 0x10B70, 0x10B71, 0x10B72, 0x10B78, 0x10B79,\n\t      0x10B7A, 0x10B7B, 0x10B7C, 0x10B7D, 0x10B7E, 0x10B7F, 0x10C00, 0x10C01,\n\t      0x10C02, 0x10C03, 0x10C04, 0x10C05, 0x10C06, 0x10C07, 0x10C08, 0x10C09,\n\t      0x10C0A, 0x10C0B, 0x10C0C, 0x10C0D, 0x10C0E, 0x10C0F, 0x10C10, 0x10C11,\n\t      0x10C12, 0x10C13, 0x10C14, 0x10C15, 0x10C16, 0x10C17, 0x10C18, 0x10C19,\n\t      0x10C1A, 0x10C1B, 0x10C1C, 0x10C1D, 0x10C1E, 0x10C1F, 0x10C20, 0x10C21,\n\t      0x10C22, 0x10C23, 0x10C24, 0x10C25, 0x10C26, 0x10C27, 0x10C28, 0x10C29,\n\t      0x10C2A, 0x10C2B, 0x10C2C, 0x10C2D, 0x10C2E, 0x10C2F, 0x10C30, 0x10C31,\n\t      0x10C32, 0x10C33, 0x10C34, 0x10C35, 0x10C36, 0x10C37, 0x10C38, 0x10C39,\n\t      0x10C3A, 0x10C3B, 0x10C3C, 0x10C3D, 0x10C3E, 0x10C3F, 0x10C40, 0x10C41,\n\t      0x10C42, 0x10C43, 0x10C44, 0x10C45, 0x10C46, 0x10C47, 0x10C48, 0x1EE00,\n\t      0x1EE01, 0x1EE02, 0x1EE03, 0x1EE05, 0x1EE06, 0x1EE07, 0x1EE08, 0x1EE09,\n\t      0x1EE0A, 0x1EE0B, 0x1EE0C, 0x1EE0D, 0x1EE0E, 0x1EE0F, 0x1EE10, 0x1EE11,\n\t      0x1EE12, 0x1EE13, 0x1EE14, 0x1EE15, 0x1EE16, 0x1EE17, 0x1EE18, 0x1EE19,\n\t      0x1EE1A, 0x1EE1B, 0x1EE1C, 0x1EE1D, 0x1EE1E, 0x1EE1F, 0x1EE21, 0x1EE22,\n\t      0x1EE24, 0x1EE27, 0x1EE29, 0x1EE2A, 0x1EE2B, 0x1EE2C, 0x1EE2D, 0x1EE2E,\n\t      0x1EE2F, 0x1EE30, 0x1EE31, 0x1EE32, 0x1EE34, 0x1EE35, 0x1EE36, 0x1EE37,\n\t      0x1EE39, 0x1EE3B, 0x1EE42, 0x1EE47, 0x1EE49, 0x1EE4B, 0x1EE4D, 0x1EE4E,\n\t      0x1EE4F, 0x1EE51, 0x1EE52, 0x1EE54, 0x1EE57, 0x1EE59, 0x1EE5B, 0x1EE5D,\n\t      0x1EE5F, 0x1EE61, 0x1EE62, 0x1EE64, 0x1EE67, 0x1EE68, 0x1EE69, 0x1EE6A,\n\t      0x1EE6C, 0x1EE6D, 0x1EE6E, 0x1EE6F, 0x1EE70, 0x1EE71, 0x1EE72, 0x1EE74,\n\t      0x1EE75, 0x1EE76, 0x1EE77, 0x1EE79, 0x1EE7A, 0x1EE7B, 0x1EE7C, 0x1EE7E,\n\t      0x1EE80, 0x1EE81, 0x1EE82, 0x1EE83, 0x1EE84, 0x1EE85, 0x1EE86, 0x1EE87,\n\t      0x1EE88, 0x1EE89, 0x1EE8B, 0x1EE8C, 0x1EE8D, 0x1EE8E, 0x1EE8F, 0x1EE90,\n\t      0x1EE91, 0x1EE92, 0x1EE93, 0x1EE94, 0x1EE95, 0x1EE96, 0x1EE97, 0x1EE98,\n\t      0x1EE99, 0x1EE9A, 0x1EE9B, 0x1EEA1, 0x1EEA2, 0x1EEA3, 0x1EEA5, 0x1EEA6,\n\t      0x1EEA7, 0x1EEA8, 0x1EEA9, 0x1EEAB, 0x1EEAC, 0x1EEAD, 0x1EEAE, 0x1EEAF,\n\t      0x1EEB0, 0x1EEB1, 0x1EEB2, 0x1EEB3, 0x1EEB4, 0x1EEB5, 0x1EEB6, 0x1EEB7,\n\t      0x1EEB8, 0x1EEB9, 0x1EEBA, 0x1EEBB, 0x10FFFD];\n\t\n\t  function determineBidi(cueDiv) {\n\t    var nodeStack = [],\n\t        text = \"\",\n\t        charCode;\n\t\n\t    if (!cueDiv || !cueDiv.childNodes) {\n\t      return \"ltr\";\n\t    }\n\t\n\t    function pushNodes(nodeStack, node) {\n\t      for (var i = node.childNodes.length - 1; i >= 0; i--) {\n\t        nodeStack.push(node.childNodes[i]);\n\t      }\n\t    }\n\t\n\t    function nextTextNode(nodeStack) {\n\t      if (!nodeStack || !nodeStack.length) {\n\t        return null;\n\t      }\n\t\n\t      var node = nodeStack.pop(),\n\t          text = node.textContent || node.innerText;\n\t      if (text) {\n\t        // TODO: This should match all unicode type B characters (paragraph\n\t        // separator characters). See issue #115.\n\t        var m = text.match(/^.*(\\n|\\r)/);\n\t        if (m) {\n\t          nodeStack.length = 0;\n\t          return m[0];\n\t        }\n\t        return text;\n\t      }\n\t      if (node.tagName === \"ruby\") {\n\t        return nextTextNode(nodeStack);\n\t      }\n\t      if (node.childNodes) {\n\t        pushNodes(nodeStack, node);\n\t        return nextTextNode(nodeStack);\n\t      }\n\t    }\n\t\n\t    pushNodes(nodeStack, cueDiv);\n\t    while ((text = nextTextNode(nodeStack))) {\n\t      for (var i = 0; i < text.length; i++) {\n\t        charCode = text.charCodeAt(i);\n\t        for (var j = 0; j < strongRTLChars.length; j++) {\n\t          if (strongRTLChars[j] === charCode) {\n\t            return \"rtl\";\n\t          }\n\t        }\n\t      }\n\t    }\n\t    return \"ltr\";\n\t  }\n\t\n\t  function computeLinePos(cue) {\n\t    if (typeof cue.line === \"number\" &&\n\t        (cue.snapToLines || (cue.line >= 0 && cue.line <= 100))) {\n\t      return cue.line;\n\t    }\n\t    if (!cue.track || !cue.track.textTrackList ||\n\t        !cue.track.textTrackList.mediaElement) {\n\t      return -1;\n\t    }\n\t    var track = cue.track,\n\t        trackList = track.textTrackList,\n\t        count = 0;\n\t    for (var i = 0; i < trackList.length && trackList[i] !== track; i++) {\n\t      if (trackList[i].mode === \"showing\") {\n\t        count++;\n\t      }\n\t    }\n\t    return ++count * -1;\n\t  }\n\t\n\t  function StyleBox() {\n\t  }\n\t\n\t  // Apply styles to a div. If there is no div passed then it defaults to the\n\t  // div on 'this'.\n\t  StyleBox.prototype.applyStyles = function(styles, div) {\n\t    div = div || this.div;\n\t    for (var prop in styles) {\n\t      if (styles.hasOwnProperty(prop)) {\n\t        div.style[prop] = styles[prop];\n\t      }\n\t    }\n\t  };\n\t\n\t  StyleBox.prototype.formatStyle = function(val, unit) {\n\t    return val === 0 ? 0 : val + unit;\n\t  };\n\t\n\t  // Constructs the computed display state of the cue (a div). Places the div\n\t  // into the overlay which should be a block level element (usually a div).\n\t  function CueStyleBox(window, cue, styleOptions) {\n\t    var isIE8 = (/MSIE\\s8\\.0/).test(navigator.userAgent);\n\t    var color = \"rgba(255, 255, 255, 1)\";\n\t    var backgroundColor = \"rgba(0, 0, 0, 0.8)\";\n\t\n\t    if (isIE8) {\n\t      color = \"rgb(255, 255, 255)\";\n\t      backgroundColor = \"rgb(0, 0, 0)\";\n\t    }\n\t\n\t    StyleBox.call(this);\n\t    this.cue = cue;\n\t\n\t    // Parse our cue's text into a DOM tree rooted at 'cueDiv'. This div will\n\t    // have inline positioning and will function as the cue background box.\n\t    this.cueDiv = parseContent(window, cue.text);\n\t    var styles = {\n\t      color: color,\n\t      backgroundColor: backgroundColor,\n\t      position: \"relative\",\n\t      left: 0,\n\t      right: 0,\n\t      top: 0,\n\t      bottom: 0,\n\t      display: \"inline\"\n\t    };\n\t\n\t    if (!isIE8) {\n\t      styles.writingMode = cue.vertical === \"\" ? \"horizontal-tb\"\n\t                                               : cue.vertical === \"lr\" ? \"vertical-lr\"\n\t                                                                       : \"vertical-rl\";\n\t      styles.unicodeBidi = \"plaintext\";\n\t    }\n\t    this.applyStyles(styles, this.cueDiv);\n\t\n\t    // Create an absolutely positioned div that will be used to position the cue\n\t    // div. Note, all WebVTT cue-setting alignments are equivalent to the CSS\n\t    // mirrors of them except \"middle\" which is \"center\" in CSS.\n\t    this.div = window.document.createElement(\"div\");\n\t    styles = {\n\t      textAlign: cue.align === \"middle\" ? \"center\" : cue.align,\n\t      font: styleOptions.font,\n\t      whiteSpace: \"pre-line\",\n\t      position: \"absolute\"\n\t    };\n\t\n\t    if (!isIE8) {\n\t      styles.direction = determineBidi(this.cueDiv);\n\t      styles.writingMode = cue.vertical === \"\" ? \"horizontal-tb\"\n\t                                               : cue.vertical === \"lr\" ? \"vertical-lr\"\n\t                                                                       : \"vertical-rl\".\n\t      stylesunicodeBidi =  \"plaintext\";\n\t    }\n\t\n\t    this.applyStyles(styles);\n\t\n\t    this.div.appendChild(this.cueDiv);\n\t\n\t    // Calculate the distance from the reference edge of the viewport to the text\n\t    // position of the cue box. The reference edge will be resolved later when\n\t    // the box orientation styles are applied.\n\t    var textPos = 0;\n\t    switch (cue.positionAlign) {\n\t    case \"start\":\n\t      textPos = cue.position;\n\t      break;\n\t    case \"middle\":\n\t      textPos = cue.position - (cue.size / 2);\n\t      break;\n\t    case \"end\":\n\t      textPos = cue.position - cue.size;\n\t      break;\n\t    }\n\t\n\t    // Horizontal box orientation; textPos is the distance from the left edge of the\n\t    // area to the left edge of the box and cue.size is the distance extending to\n\t    // the right from there.\n\t    if (cue.vertical === \"\") {\n\t      this.applyStyles({\n\t        left:  this.formatStyle(textPos, \"%\"),\n\t        width: this.formatStyle(cue.size, \"%\")\n\t      });\n\t    // Vertical box orientation; textPos is the distance from the top edge of the\n\t    // area to the top edge of the box and cue.size is the height extending\n\t    // downwards from there.\n\t    } else {\n\t      this.applyStyles({\n\t        top: this.formatStyle(textPos, \"%\"),\n\t        height: this.formatStyle(cue.size, \"%\")\n\t      });\n\t    }\n\t\n\t    this.move = function(box) {\n\t      this.applyStyles({\n\t        top: this.formatStyle(box.top, \"px\"),\n\t        bottom: this.formatStyle(box.bottom, \"px\"),\n\t        left: this.formatStyle(box.left, \"px\"),\n\t        right: this.formatStyle(box.right, \"px\"),\n\t        height: this.formatStyle(box.height, \"px\"),\n\t        width: this.formatStyle(box.width, \"px\")\n\t      });\n\t    };\n\t  }\n\t  CueStyleBox.prototype = _objCreate(StyleBox.prototype);\n\t  CueStyleBox.prototype.constructor = CueStyleBox;\n\t\n\t  // Represents the co-ordinates of an Element in a way that we can easily\n\t  // compute things with such as if it overlaps or intersects with another Element.\n\t  // Can initialize it with either a StyleBox or another BoxPosition.\n\t  function BoxPosition(obj) {\n\t    var isIE8 = (/MSIE\\s8\\.0/).test(navigator.userAgent);\n\t\n\t    // Either a BoxPosition was passed in and we need to copy it, or a StyleBox\n\t    // was passed in and we need to copy the results of 'getBoundingClientRect'\n\t    // as the object returned is readonly. All co-ordinate values are in reference\n\t    // to the viewport origin (top left).\n\t    var lh, height, width, top;\n\t    if (obj.div) {\n\t      height = obj.div.offsetHeight;\n\t      width = obj.div.offsetWidth;\n\t      top = obj.div.offsetTop;\n\t\n\t      var rects = (rects = obj.div.childNodes) && (rects = rects[0]) &&\n\t                  rects.getClientRects && rects.getClientRects();\n\t      obj = obj.div.getBoundingClientRect();\n\t      // In certain cases the outter div will be slightly larger then the sum of\n\t      // the inner div's lines. This could be due to bold text, etc, on some platforms.\n\t      // In this case we should get the average line height and use that. This will\n\t      // result in the desired behaviour.\n\t      lh = rects ? Math.max((rects[0] && rects[0].height) || 0, obj.height / rects.length)\n\t                 : 0;\n\t\n\t    }\n\t    this.left = obj.left;\n\t    this.right = obj.right;\n\t    this.top = obj.top || top;\n\t    this.height = obj.height || height;\n\t    this.bottom = obj.bottom || (top + (obj.height || height));\n\t    this.width = obj.width || width;\n\t    this.lineHeight = lh !== undefined ? lh : obj.lineHeight;\n\t\n\t    if (isIE8 && !this.lineHeight) {\n\t      this.lineHeight = 13;\n\t    }\n\t  }\n\t\n\t  // Move the box along a particular axis. Optionally pass in an amount to move\n\t  // the box. If no amount is passed then the default is the line height of the\n\t  // box.\n\t  BoxPosition.prototype.move = function(axis, toMove) {\n\t    toMove = toMove !== undefined ? toMove : this.lineHeight;\n\t    switch (axis) {\n\t    case \"+x\":\n\t      this.left += toMove;\n\t      this.right += toMove;\n\t      break;\n\t    case \"-x\":\n\t      this.left -= toMove;\n\t      this.right -= toMove;\n\t      break;\n\t    case \"+y\":\n\t      this.top += toMove;\n\t      this.bottom += toMove;\n\t      break;\n\t    case \"-y\":\n\t      this.top -= toMove;\n\t      this.bottom -= toMove;\n\t      break;\n\t    }\n\t  };\n\t\n\t  // Check if this box overlaps another box, b2.\n\t  BoxPosition.prototype.overlaps = function(b2) {\n\t    return this.left < b2.right &&\n\t           this.right > b2.left &&\n\t           this.top < b2.bottom &&\n\t           this.bottom > b2.top;\n\t  };\n\t\n\t  // Check if this box overlaps any other boxes in boxes.\n\t  BoxPosition.prototype.overlapsAny = function(boxes) {\n\t    for (var i = 0; i < boxes.length; i++) {\n\t      if (this.overlaps(boxes[i])) {\n\t        return true;\n\t      }\n\t    }\n\t    return false;\n\t  };\n\t\n\t  // Check if this box is within another box.\n\t  BoxPosition.prototype.within = function(container) {\n\t    return this.top >= container.top &&\n\t           this.bottom <= container.bottom &&\n\t           this.left >= container.left &&\n\t           this.right <= container.right;\n\t  };\n\t\n\t  // Check if this box is entirely within the container or it is overlapping\n\t  // on the edge opposite of the axis direction passed. For example, if \"+x\" is\n\t  // passed and the box is overlapping on the left edge of the container, then\n\t  // return true.\n\t  BoxPosition.prototype.overlapsOppositeAxis = function(container, axis) {\n\t    switch (axis) {\n\t    case \"+x\":\n\t      return this.left < container.left;\n\t    case \"-x\":\n\t      return this.right > container.right;\n\t    case \"+y\":\n\t      return this.top < container.top;\n\t    case \"-y\":\n\t      return this.bottom > container.bottom;\n\t    }\n\t  };\n\t\n\t  // Find the percentage of the area that this box is overlapping with another\n\t  // box.\n\t  BoxPosition.prototype.intersectPercentage = function(b2) {\n\t    var x = Math.max(0, Math.min(this.right, b2.right) - Math.max(this.left, b2.left)),\n\t        y = Math.max(0, Math.min(this.bottom, b2.bottom) - Math.max(this.top, b2.top)),\n\t        intersectArea = x * y;\n\t    return intersectArea / (this.height * this.width);\n\t  };\n\t\n\t  // Convert the positions from this box to CSS compatible positions using\n\t  // the reference container's positions. This has to be done because this\n\t  // box's positions are in reference to the viewport origin, whereas, CSS\n\t  // values are in referecne to their respective edges.\n\t  BoxPosition.prototype.toCSSCompatValues = function(reference) {\n\t    return {\n\t      top: this.top - reference.top,\n\t      bottom: reference.bottom - this.bottom,\n\t      left: this.left - reference.left,\n\t      right: reference.right - this.right,\n\t      height: this.height,\n\t      width: this.width\n\t    };\n\t  };\n\t\n\t  // Get an object that represents the box's position without anything extra.\n\t  // Can pass a StyleBox, HTMLElement, or another BoxPositon.\n\t  BoxPosition.getSimpleBoxPosition = function(obj) {\n\t    var height = obj.div ? obj.div.offsetHeight : obj.tagName ? obj.offsetHeight : 0;\n\t    var width = obj.div ? obj.div.offsetWidth : obj.tagName ? obj.offsetWidth : 0;\n\t    var top = obj.div ? obj.div.offsetTop : obj.tagName ? obj.offsetTop : 0;\n\t\n\t    obj = obj.div ? obj.div.getBoundingClientRect() :\n\t                  obj.tagName ? obj.getBoundingClientRect() : obj;\n\t    var ret = {\n\t      left: obj.left,\n\t      right: obj.right,\n\t      top: obj.top || top,\n\t      height: obj.height || height,\n\t      bottom: obj.bottom || (top + (obj.height || height)),\n\t      width: obj.width || width\n\t    };\n\t    return ret;\n\t  };\n\t\n\t  // Move a StyleBox to its specified, or next best, position. The containerBox\n\t  // is the box that contains the StyleBox, such as a div. boxPositions are\n\t  // a list of other boxes that the styleBox can't overlap with.\n\t  function moveBoxToLinePosition(window, styleBox, containerBox, boxPositions) {\n\t\n\t    // Find the best position for a cue box, b, on the video. The axis parameter\n\t    // is a list of axis, the order of which, it will move the box along. For example:\n\t    // Passing [\"+x\", \"-x\"] will move the box first along the x axis in the positive\n\t    // direction. If it doesn't find a good position for it there it will then move\n\t    // it along the x axis in the negative direction.\n\t    function findBestPosition(b, axis) {\n\t      var bestPosition,\n\t          specifiedPosition = new BoxPosition(b),\n\t          percentage = 1; // Highest possible so the first thing we get is better.\n\t\n\t      for (var i = 0; i < axis.length; i++) {\n\t        while (b.overlapsOppositeAxis(containerBox, axis[i]) ||\n\t               (b.within(containerBox) && b.overlapsAny(boxPositions))) {\n\t          b.move(axis[i]);\n\t        }\n\t        // We found a spot where we aren't overlapping anything. This is our\n\t        // best position.\n\t        if (b.within(containerBox)) {\n\t          return b;\n\t        }\n\t        var p = b.intersectPercentage(containerBox);\n\t        // If we're outside the container box less then we were on our last try\n\t        // then remember this position as the best position.\n\t        if (percentage > p) {\n\t          bestPosition = new BoxPosition(b);\n\t          percentage = p;\n\t        }\n\t        // Reset the box position to the specified position.\n\t        b = new BoxPosition(specifiedPosition);\n\t      }\n\t      return bestPosition || specifiedPosition;\n\t    }\n\t\n\t    var boxPosition = new BoxPosition(styleBox),\n\t        cue = styleBox.cue,\n\t        linePos = computeLinePos(cue),\n\t        axis = [];\n\t\n\t    // If we have a line number to align the cue to.\n\t    if (cue.snapToLines) {\n\t      var size;\n\t      switch (cue.vertical) {\n\t      case \"\":\n\t        axis = [ \"+y\", \"-y\" ];\n\t        size = \"height\";\n\t        break;\n\t      case \"rl\":\n\t        axis = [ \"+x\", \"-x\" ];\n\t        size = \"width\";\n\t        break;\n\t      case \"lr\":\n\t        axis = [ \"-x\", \"+x\" ];\n\t        size = \"width\";\n\t        break;\n\t      }\n\t\n\t      var step = boxPosition.lineHeight,\n\t          position = step * Math.round(linePos),\n\t          maxPosition = containerBox[size] + step,\n\t          initialAxis = axis[0];\n\t\n\t      // If the specified intial position is greater then the max position then\n\t      // clamp the box to the amount of steps it would take for the box to\n\t      // reach the max position.\n\t      if (Math.abs(position) > maxPosition) {\n\t        position = position < 0 ? -1 : 1;\n\t        position *= Math.ceil(maxPosition / step) * step;\n\t      }\n\t\n\t      // If computed line position returns negative then line numbers are\n\t      // relative to the bottom of the video instead of the top. Therefore, we\n\t      // need to increase our initial position by the length or width of the\n\t      // video, depending on the writing direction, and reverse our axis directions.\n\t      if (linePos < 0) {\n\t        position += cue.vertical === \"\" ? containerBox.height : containerBox.width;\n\t        axis = axis.reverse();\n\t      }\n\t\n\t      // Move the box to the specified position. This may not be its best\n\t      // position.\n\t      boxPosition.move(initialAxis, position);\n\t\n\t    } else {\n\t      // If we have a percentage line value for the cue.\n\t      var calculatedPercentage = (boxPosition.lineHeight / containerBox.height) * 100;\n\t\n\t      switch (cue.lineAlign) {\n\t      case \"middle\":\n\t        linePos -= (calculatedPercentage / 2);\n\t        break;\n\t      case \"end\":\n\t        linePos -= calculatedPercentage;\n\t        break;\n\t      }\n\t\n\t      // Apply initial line position to the cue box.\n\t      switch (cue.vertical) {\n\t      case \"\":\n\t        styleBox.applyStyles({\n\t          top: styleBox.formatStyle(linePos, \"%\")\n\t        });\n\t        break;\n\t      case \"rl\":\n\t        styleBox.applyStyles({\n\t          left: styleBox.formatStyle(linePos, \"%\")\n\t        });\n\t        break;\n\t      case \"lr\":\n\t        styleBox.applyStyles({\n\t          right: styleBox.formatStyle(linePos, \"%\")\n\t        });\n\t        break;\n\t      }\n\t\n\t      axis = [ \"+y\", \"-x\", \"+x\", \"-y\" ];\n\t\n\t      // Get the box position again after we've applied the specified positioning\n\t      // to it.\n\t      boxPosition = new BoxPosition(styleBox);\n\t    }\n\t\n\t    var bestPosition = findBestPosition(boxPosition, axis);\n\t    styleBox.move(bestPosition.toCSSCompatValues(containerBox));\n\t  }\n\t\n\t  function WebVTT() {\n\t    // Nothing\n\t  }\n\t\n\t  // Helper to allow strings to be decoded instead of the default binary utf8 data.\n\t  WebVTT.StringDecoder = function() {\n\t    return {\n\t      decode: function(data) {\n\t        if (!data) {\n\t          return \"\";\n\t        }\n\t        if (typeof data !== \"string\") {\n\t          throw new Error(\"Error - expected string data.\");\n\t        }\n\t        return decodeURIComponent(encodeURIComponent(data));\n\t      }\n\t    };\n\t  };\n\t\n\t  WebVTT.convertCueToDOMTree = function(window, cuetext) {\n\t    if (!window || !cuetext) {\n\t      return null;\n\t    }\n\t    return parseContent(window, cuetext);\n\t  };\n\t\n\t  var FONT_SIZE_PERCENT = 0.05;\n\t  var FONT_STYLE = \"sans-serif\";\n\t  var CUE_BACKGROUND_PADDING = \"1.5%\";\n\t\n\t  // Runs the processing model over the cues and regions passed to it.\n\t  // @param overlay A block level element (usually a div) that the computed cues\n\t  //                and regions will be placed into.\n\t  WebVTT.processCues = function(window, cues, overlay) {\n\t    if (!window || !cues || !overlay) {\n\t      return null;\n\t    }\n\t\n\t    // Remove all previous children.\n\t    while (overlay.firstChild) {\n\t      overlay.removeChild(overlay.firstChild);\n\t    }\n\t\n\t    var paddedOverlay = window.document.createElement(\"div\");\n\t    paddedOverlay.style.position = \"absolute\";\n\t    paddedOverlay.style.left = \"0\";\n\t    paddedOverlay.style.right = \"0\";\n\t    paddedOverlay.style.top = \"0\";\n\t    paddedOverlay.style.bottom = \"0\";\n\t    paddedOverlay.style.margin = CUE_BACKGROUND_PADDING;\n\t    overlay.appendChild(paddedOverlay);\n\t\n\t    // Determine if we need to compute the display states of the cues. This could\n\t    // be the case if a cue's state has been changed since the last computation or\n\t    // if it has not been computed yet.\n\t    function shouldCompute(cues) {\n\t      for (var i = 0; i < cues.length; i++) {\n\t        if (cues[i].hasBeenReset || !cues[i].displayState) {\n\t          return true;\n\t        }\n\t      }\n\t      return false;\n\t    }\n\t\n\t    // We don't need to recompute the cues' display states. Just reuse them.\n\t    if (!shouldCompute(cues)) {\n\t      for (var i = 0; i < cues.length; i++) {\n\t        paddedOverlay.appendChild(cues[i].displayState);\n\t      }\n\t      return;\n\t    }\n\t\n\t    var boxPositions = [],\n\t        containerBox = BoxPosition.getSimpleBoxPosition(paddedOverlay),\n\t        fontSize = Math.round(containerBox.height * FONT_SIZE_PERCENT * 100) / 100;\n\t    var styleOptions = {\n\t      font: fontSize + \"px \" + FONT_STYLE\n\t    };\n\t\n\t    (function() {\n\t      var styleBox, cue;\n\t\n\t      for (var i = 0; i < cues.length; i++) {\n\t        cue = cues[i];\n\t\n\t        // Compute the intial position and styles of the cue div.\n\t        styleBox = new CueStyleBox(window, cue, styleOptions);\n\t        paddedOverlay.appendChild(styleBox.div);\n\t\n\t        // Move the cue div to it's correct line position.\n\t        moveBoxToLinePosition(window, styleBox, containerBox, boxPositions);\n\t\n\t        // Remember the computed div so that we don't have to recompute it later\n\t        // if we don't have too.\n\t        cue.displayState = styleBox.div;\n\t\n\t        boxPositions.push(BoxPosition.getSimpleBoxPosition(styleBox));\n\t      }\n\t    })();\n\t  };\n\t\n\t  WebVTT.Parser = function(window, vttjs, decoder) {\n\t    if (!decoder) {\n\t      decoder = vttjs;\n\t      vttjs = {};\n\t    }\n\t    if (!vttjs) {\n\t      vttjs = {};\n\t    }\n\t\n\t    this.window = window;\n\t    this.vttjs = vttjs;\n\t    this.state = \"INITIAL\";\n\t    this.buffer = \"\";\n\t    this.decoder = decoder || new TextDecoder(\"utf8\");\n\t    this.regionList = [];\n\t  };\n\t\n\t  WebVTT.Parser.prototype = {\n\t    // If the error is a ParsingError then report it to the consumer if\n\t    // possible. If it's not a ParsingError then throw it like normal.\n\t    reportOrThrowError: function(e) {\n\t      if (e instanceof ParsingError) {\n\t        this.onparsingerror && this.onparsingerror(e);\n\t      } else {\n\t        throw e;\n\t      }\n\t    },\n\t    parse: function (data) {\n\t      var self = this;\n\t\n\t      // If there is no data then we won't decode it, but will just try to parse\n\t      // whatever is in buffer already. This may occur in circumstances, for\n\t      // example when flush() is called.\n\t      if (data) {\n\t        // Try to decode the data that we received.\n\t        self.buffer += self.decoder.decode(data, {stream: true});\n\t      }\n\t\n\t      function collectNextLine() {\n\t        var buffer = self.buffer;\n\t        var pos = 0;\n\t        while (pos < buffer.length && buffer[pos] !== '\\r' && buffer[pos] !== '\\n') {\n\t          ++pos;\n\t        }\n\t        var line = buffer.substr(0, pos);\n\t        // Advance the buffer early in case we fail below.\n\t        if (buffer[pos] === '\\r') {\n\t          ++pos;\n\t        }\n\t        if (buffer[pos] === '\\n') {\n\t          ++pos;\n\t        }\n\t        self.buffer = buffer.substr(pos);\n\t        return line;\n\t      }\n\t\n\t      // 3.4 WebVTT region and WebVTT region settings syntax\n\t      function parseRegion(input) {\n\t        var settings = new Settings();\n\t\n\t        parseOptions(input, function (k, v) {\n\t          switch (k) {\n\t          case \"id\":\n\t            settings.set(k, v);\n\t            break;\n\t          case \"width\":\n\t            settings.percent(k, v);\n\t            break;\n\t          case \"lines\":\n\t            settings.integer(k, v);\n\t            break;\n\t          case \"regionanchor\":\n\t          case \"viewportanchor\":\n\t            var xy = v.split(',');\n\t            if (xy.length !== 2) {\n\t              break;\n\t            }\n\t            // We have to make sure both x and y parse, so use a temporary\n\t            // settings object here.\n\t            var anchor = new Settings();\n\t            anchor.percent(\"x\", xy[0]);\n\t            anchor.percent(\"y\", xy[1]);\n\t            if (!anchor.has(\"x\") || !anchor.has(\"y\")) {\n\t              break;\n\t            }\n\t            settings.set(k + \"X\", anchor.get(\"x\"));\n\t            settings.set(k + \"Y\", anchor.get(\"y\"));\n\t            break;\n\t          case \"scroll\":\n\t            settings.alt(k, v, [\"up\"]);\n\t            break;\n\t          }\n\t        }, /=/, /\\s/);\n\t\n\t        // Create the region, using default values for any values that were not\n\t        // specified.\n\t        if (settings.has(\"id\")) {\n\t          var region = new (self.vttjs.VTTRegion || self.window.VTTRegion)();\n\t          region.width = settings.get(\"width\", 100);\n\t          region.lines = settings.get(\"lines\", 3);\n\t          region.regionAnchorX = settings.get(\"regionanchorX\", 0);\n\t          region.regionAnchorY = settings.get(\"regionanchorY\", 100);\n\t          region.viewportAnchorX = settings.get(\"viewportanchorX\", 0);\n\t          region.viewportAnchorY = settings.get(\"viewportanchorY\", 100);\n\t          region.scroll = settings.get(\"scroll\", \"\");\n\t          // Register the region.\n\t          self.onregion && self.onregion(region);\n\t          // Remember the VTTRegion for later in case we parse any VTTCues that\n\t          // reference it.\n\t          self.regionList.push({\n\t            id: settings.get(\"id\"),\n\t            region: region\n\t          });\n\t        }\n\t      }\n\t\n\t      // 3.2 WebVTT metadata header syntax\n\t      function parseHeader(input) {\n\t        parseOptions(input, function (k, v) {\n\t          switch (k) {\n\t          case \"Region\":\n\t            // 3.3 WebVTT region metadata header syntax\n\t            parseRegion(v);\n\t            break;\n\t          }\n\t        }, /:/);\n\t      }\n\t\n\t      // 5.1 WebVTT file parsing.\n\t      try {\n\t        var line;\n\t        if (self.state === \"INITIAL\") {\n\t          // We can't start parsing until we have the first line.\n\t          if (!/\\r\\n|\\n/.test(self.buffer)) {\n\t            return this;\n\t          }\n\t\n\t          line = collectNextLine();\n\t\n\t          var m = line.match(/^WEBVTT([ \\t].*)?$/);\n\t          if (!m || !m[0]) {\n\t            throw new ParsingError(ParsingError.Errors.BadSignature);\n\t          }\n\t\n\t          self.state = \"HEADER\";\n\t        }\n\t\n\t        var alreadyCollectedLine = false;\n\t        while (self.buffer) {\n\t          // We can't parse a line until we have the full line.\n\t          if (!/\\r\\n|\\n/.test(self.buffer)) {\n\t            return this;\n\t          }\n\t\n\t          if (!alreadyCollectedLine) {\n\t            line = collectNextLine();\n\t          } else {\n\t            alreadyCollectedLine = false;\n\t          }\n\t\n\t          switch (self.state) {\n\t          case \"HEADER\":\n\t            // 13-18 - Allow a header (metadata) under the WEBVTT line.\n\t            if (/:/.test(line)) {\n\t              parseHeader(line);\n\t            } else if (!line) {\n\t              // An empty line terminates the header and starts the body (cues).\n\t              self.state = \"ID\";\n\t            }\n\t            continue;\n\t          case \"NOTE\":\n\t            // Ignore NOTE blocks.\n\t            if (!line) {\n\t              self.state = \"ID\";\n\t            }\n\t            continue;\n\t          case \"ID\":\n\t            // Check for the start of NOTE blocks.\n\t            if (/^NOTE($|[ \\t])/.test(line)) {\n\t              self.state = \"NOTE\";\n\t              break;\n\t            }\n\t            // 19-29 - Allow any number of line terminators, then initialize new cue values.\n\t            if (!line) {\n\t              continue;\n\t            }\n\t            self.cue = new (self.vttjs.VTTCue || self.window.VTTCue)(0, 0, \"\");\n\t            self.state = \"CUE\";\n\t            // 30-39 - Check if self line contains an optional identifier or timing data.\n\t            if (line.indexOf(\"-->\") === -1) {\n\t              self.cue.id = line;\n\t              continue;\n\t            }\n\t            // Process line as start of a cue.\n\t            /*falls through*/\n\t          case \"CUE\":\n\t            // 40 - Collect cue timings and settings.\n\t            try {\n\t              parseCue(line, self.cue, self.regionList);\n\t            } catch (e) {\n\t              self.reportOrThrowError(e);\n\t              // In case of an error ignore rest of the cue.\n\t              self.cue = null;\n\t              self.state = \"BADCUE\";\n\t              continue;\n\t            }\n\t            self.state = \"CUETEXT\";\n\t            continue;\n\t          case \"CUETEXT\":\n\t            var hasSubstring = line.indexOf(\"-->\") !== -1;\n\t            // 34 - If we have an empty line then report the cue.\n\t            // 35 - If we have the special substring '-->' then report the cue,\n\t            // but do not collect the line as we need to process the current\n\t            // one as a new cue.\n\t            if (!line || hasSubstring && (alreadyCollectedLine = true)) {\n\t              // We are done parsing self cue.\n\t              self.oncue && self.oncue(self.cue);\n\t              self.cue = null;\n\t              self.state = \"ID\";\n\t              continue;\n\t            }\n\t            if (self.cue.text) {\n\t              self.cue.text += \"\\n\";\n\t            }\n\t            self.cue.text += line;\n\t            continue;\n\t          case \"BADCUE\": // BADCUE\n\t            // 54-62 - Collect and discard the remaining cue.\n\t            if (!line) {\n\t              self.state = \"ID\";\n\t            }\n\t            continue;\n\t          }\n\t        }\n\t      } catch (e) {\n\t        self.reportOrThrowError(e);\n\t\n\t        // If we are currently parsing a cue, report what we have.\n\t        if (self.state === \"CUETEXT\" && self.cue && self.oncue) {\n\t          self.oncue(self.cue);\n\t        }\n\t        self.cue = null;\n\t        // Enter BADWEBVTT state if header was not parsed correctly otherwise\n\t        // another exception occurred so enter BADCUE state.\n\t        self.state = self.state === \"INITIAL\" ? \"BADWEBVTT\" : \"BADCUE\";\n\t      }\n\t      return this;\n\t    },\n\t    flush: function () {\n\t      var self = this;\n\t      try {\n\t        // Finish decoding the stream.\n\t        self.buffer += self.decoder.decode();\n\t        // Synthesize the end of the current cue or region.\n\t        if (self.cue || self.state === \"HEADER\") {\n\t          self.buffer += \"\\n\\n\";\n\t          self.parse();\n\t        }\n\t        // If we've flushed, parsed, and we're still on the INITIAL state then\n\t        // that means we don't have enough of the stream to parse the first\n\t        // line.\n\t        if (self.state === \"INITIAL\") {\n\t          throw new ParsingError(ParsingError.Errors.BadSignature);\n\t        }\n\t      } catch(e) {\n\t        self.reportOrThrowError(e);\n\t      }\n\t      self.onflush && self.onflush();\n\t      return this;\n\t    }\n\t  };\n\t\n\t  global.WebVTT = WebVTT;\n\t\n\t}(this, (this.vttjs || {})));\n\n\n/***/ },\n/* 49 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Copyright 2013 vtt.js Contributors\n\t *\n\t * Licensed under the Apache License, Version 2.0 (the \"License\");\n\t * you may not use this file except in compliance with the License.\n\t * You may obtain a copy of the License at\n\t *\n\t *   http://www.apache.org/licenses/LICENSE-2.0\n\t *\n\t * Unless required by applicable law or agreed to in writing, software\n\t * distributed under the License is distributed on an \"AS IS\" BASIS,\n\t * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n\t * See the License for the specific language governing permissions and\n\t * limitations under the License.\n\t */\n\t\n\t// If we're in Node.js then require VTTCue so we can extend it, otherwise assume\n\t// VTTCue is on the global.\n\tif (typeof module !== \"undefined\" && module.exports) {\n\t  this.VTTCue = this.VTTCue || __webpack_require__(50).VTTCue;\n\t}\n\t\n\t// Extend VTTCue with methods to convert to JSON, from JSON, and construct a\n\t// VTTCue from an options object. The primary purpose of this is for use in the\n\t// vtt.js test suite (for testing only properties that we care about). It's also\n\t// useful if you need to work with VTTCues in JSON format.\n\t(function(root) {\n\t\n\t  root.VTTCue.prototype.toJSON = function() {\n\t    var cue = {},\n\t        self = this;\n\t    // Filter out getCueAsHTML as it's a function and hasBeenReset and displayState as\n\t    // they're only used when running the processing model algorithm.\n\t    Object.keys(this).forEach(function(key) {\n\t      if (key !== \"getCueAsHTML\" && key !== \"hasBeenReset\" && key !== \"displayState\") {\n\t        cue[key] = self[key];\n\t      }\n\t    });\n\t    return cue;\n\t  };\n\t\n\t  root.VTTCue.create = function(options) {\n\t    if (!options.hasOwnProperty(\"startTime\") || !options.hasOwnProperty(\"endTime\") ||\n\t        !options.hasOwnProperty(\"text\")) {\n\t      throw new Error(\"You must at least have start time, end time, and text.\");\n\t    }\n\t    var cue = new root.VTTCue(options.startTime, options.endTime, options.text);\n\t    for (var key in options) {\n\t      if (cue.hasOwnProperty(key)) {\n\t        cue[key] = options[key];\n\t      }\n\t    }\n\t    return cue;\n\t  };\n\t\n\t  root.VTTCue.fromJSON = function(json) {\n\t    return this.create(JSON.parse(json));\n\t  };\n\t\n\t}(this));\n\n\n/***/ },\n/* 50 */\n/***/ function(module, exports) {\n\n\t/**\n\t * Copyright 2013 vtt.js Contributors\n\t *\n\t * Licensed under the Apache License, Version 2.0 (the \"License\");\n\t * you may not use this file except in compliance with the License.\n\t * You may obtain a copy of the License at\n\t *\n\t *   http://www.apache.org/licenses/LICENSE-2.0\n\t *\n\t * Unless required by applicable law or agreed to in writing, software\n\t * distributed under the License is distributed on an \"AS IS\" BASIS,\n\t * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n\t * See the License for the specific language governing permissions and\n\t * limitations under the License.\n\t */\n\t\n\t(function(root, vttjs) {\n\t\n\t  var autoKeyword = \"auto\";\n\t  var directionSetting = {\n\t    \"\": true,\n\t    \"lr\": true,\n\t    \"rl\": true\n\t  };\n\t  var alignSetting = {\n\t    \"start\": true,\n\t    \"middle\": true,\n\t    \"end\": true,\n\t    \"left\": true,\n\t    \"right\": true\n\t  };\n\t\n\t  function findDirectionSetting(value) {\n\t    if (typeof value !== \"string\") {\n\t      return false;\n\t    }\n\t    var dir = directionSetting[value.toLowerCase()];\n\t    return dir ? value.toLowerCase() : false;\n\t  }\n\t\n\t  function findAlignSetting(value) {\n\t    if (typeof value !== \"string\") {\n\t      return false;\n\t    }\n\t    var align = alignSetting[value.toLowerCase()];\n\t    return align ? value.toLowerCase() : false;\n\t  }\n\t\n\t  function extend(obj) {\n\t    var i = 1;\n\t    for (; i < arguments.length; i++) {\n\t      var cobj = arguments[i];\n\t      for (var p in cobj) {\n\t        obj[p] = cobj[p];\n\t      }\n\t    }\n\t\n\t    return obj;\n\t  }\n\t\n\t  function VTTCue(startTime, endTime, text) {\n\t    var cue = this;\n\t    var isIE8 = (/MSIE\\s8\\.0/).test(navigator.userAgent);\n\t    var baseObj = {};\n\t\n\t    if (isIE8) {\n\t      cue = document.createElement('custom');\n\t    } else {\n\t      baseObj.enumerable = true;\n\t    }\n\t\n\t    /**\n\t     * Shim implementation specific properties. These properties are not in\n\t     * the spec.\n\t     */\n\t\n\t    // Lets us know when the VTTCue's data has changed in such a way that we need\n\t    // to recompute its display state. This lets us compute its display state\n\t    // lazily.\n\t    cue.hasBeenReset = false;\n\t\n\t    /**\n\t     * VTTCue and TextTrackCue properties\n\t     * http://dev.w3.org/html5/webvtt/#vttcue-interface\n\t     */\n\t\n\t    var _id = \"\";\n\t    var _pauseOnExit = false;\n\t    var _startTime = startTime;\n\t    var _endTime = endTime;\n\t    var _text = text;\n\t    var _region = null;\n\t    var _vertical = \"\";\n\t    var _snapToLines = true;\n\t    var _line = \"auto\";\n\t    var _lineAlign = \"start\";\n\t    var _position = 50;\n\t    var _positionAlign = \"middle\";\n\t    var _size = 50;\n\t    var _align = \"middle\";\n\t\n\t    Object.defineProperty(cue,\n\t      \"id\", extend({}, baseObj, {\n\t        get: function() {\n\t          return _id;\n\t        },\n\t        set: function(value) {\n\t          _id = \"\" + value;\n\t        }\n\t      }));\n\t\n\t    Object.defineProperty(cue,\n\t      \"pauseOnExit\", extend({}, baseObj, {\n\t        get: function() {\n\t          return _pauseOnExit;\n\t        },\n\t        set: function(value) {\n\t          _pauseOnExit = !!value;\n\t        }\n\t      }));\n\t\n\t    Object.defineProperty(cue,\n\t      \"startTime\", extend({}, baseObj, {\n\t        get: function() {\n\t          return _startTime;\n\t        },\n\t        set: function(value) {\n\t          if (typeof value !== \"number\") {\n\t            throw new TypeError(\"Start time must be set to a number.\");\n\t          }\n\t          _startTime = value;\n\t          this.hasBeenReset = true;\n\t        }\n\t      }));\n\t\n\t    Object.defineProperty(cue,\n\t      \"endTime\", extend({}, baseObj, {\n\t        get: function() {\n\t          return _endTime;\n\t        },\n\t        set: function(value) {\n\t          if (typeof value !== \"number\") {\n\t            throw new TypeError(\"End time must be set to a number.\");\n\t          }\n\t          _endTime = value;\n\t          this.hasBeenReset = true;\n\t        }\n\t      }));\n\t\n\t    Object.defineProperty(cue,\n\t      \"text\", extend({}, baseObj, {\n\t        get: function() {\n\t          return _text;\n\t        },\n\t        set: function(value) {\n\t          _text = \"\" + value;\n\t          this.hasBeenReset = true;\n\t        }\n\t      }));\n\t\n\t    Object.defineProperty(cue,\n\t      \"region\", extend({}, baseObj, {\n\t        get: function() {\n\t          return _region;\n\t        },\n\t        set: function(value) {\n\t          _region = value;\n\t          this.hasBeenReset = true;\n\t        }\n\t      }));\n\t\n\t    Object.defineProperty(cue,\n\t      \"vertical\", extend({}, baseObj, {\n\t        get: function() {\n\t          return _vertical;\n\t        },\n\t        set: function(value) {\n\t          var setting = findDirectionSetting(value);\n\t          // Have to check for false because the setting an be an empty string.\n\t          if (setting === false) {\n\t            throw new SyntaxError(\"An invalid or illegal string was specified.\");\n\t          }\n\t          _vertical = setting;\n\t          this.hasBeenReset = true;\n\t        }\n\t      }));\n\t\n\t    Object.defineProperty(cue,\n\t      \"snapToLines\", extend({}, baseObj, {\n\t        get: function() {\n\t          return _snapToLines;\n\t        },\n\t        set: function(value) {\n\t          _snapToLines = !!value;\n\t          this.hasBeenReset = true;\n\t        }\n\t      }));\n\t\n\t    Object.defineProperty(cue,\n\t      \"line\", extend({}, baseObj, {\n\t        get: function() {\n\t          return _line;\n\t        },\n\t        set: function(value) {\n\t          if (typeof value !== \"number\" && value !== autoKeyword) {\n\t            throw new SyntaxError(\"An invalid number or illegal string was specified.\");\n\t          }\n\t          _line = value;\n\t          this.hasBeenReset = true;\n\t        }\n\t      }));\n\t\n\t    Object.defineProperty(cue,\n\t      \"lineAlign\", extend({}, baseObj, {\n\t        get: function() {\n\t          return _lineAlign;\n\t        },\n\t        set: function(value) {\n\t          var setting = findAlignSetting(value);\n\t          if (!setting) {\n\t            throw new SyntaxError(\"An invalid or illegal string was specified.\");\n\t          }\n\t          _lineAlign = setting;\n\t          this.hasBeenReset = true;\n\t        }\n\t      }));\n\t\n\t    Object.defineProperty(cue,\n\t      \"position\", extend({}, baseObj, {\n\t        get: function() {\n\t          return _position;\n\t        },\n\t        set: function(value) {\n\t          if (value < 0 || value > 100) {\n\t            throw new Error(\"Position must be between 0 and 100.\");\n\t          }\n\t          _position = value;\n\t          this.hasBeenReset = true;\n\t        }\n\t      }));\n\t\n\t    Object.defineProperty(cue,\n\t      \"positionAlign\", extend({}, baseObj, {\n\t        get: function() {\n\t          return _positionAlign;\n\t        },\n\t        set: function(value) {\n\t          var setting = findAlignSetting(value);\n\t          if (!setting) {\n\t            throw new SyntaxError(\"An invalid or illegal string was specified.\");\n\t          }\n\t          _positionAlign = setting;\n\t          this.hasBeenReset = true;\n\t        }\n\t      }));\n\t\n\t    Object.defineProperty(cue,\n\t      \"size\", extend({}, baseObj, {\n\t        get: function() {\n\t          return _size;\n\t        },\n\t        set: function(value) {\n\t          if (value < 0 || value > 100) {\n\t            throw new Error(\"Size must be between 0 and 100.\");\n\t          }\n\t          _size = value;\n\t          this.hasBeenReset = true;\n\t        }\n\t      }));\n\t\n\t    Object.defineProperty(cue,\n\t      \"align\", extend({}, baseObj, {\n\t        get: function() {\n\t          return _align;\n\t        },\n\t        set: function(value) {\n\t          var setting = findAlignSetting(value);\n\t          if (!setting) {\n\t            throw new SyntaxError(\"An invalid or illegal string was specified.\");\n\t          }\n\t          _align = setting;\n\t          this.hasBeenReset = true;\n\t        }\n\t      }));\n\t\n\t    /**\n\t     * Other <track> spec defined properties\n\t     */\n\t\n\t    // http://www.whatwg.org/specs/web-apps/current-work/multipage/the-video-element.html#text-track-cue-display-state\n\t    cue.displayState = undefined;\n\t\n\t    if (isIE8) {\n\t      return cue;\n\t    }\n\t  }\n\t\n\t  /**\n\t   * VTTCue methods\n\t   */\n\t\n\t  VTTCue.prototype.getCueAsHTML = function() {\n\t    // Assume WebVTT.convertCueToDOMTree is on the global.\n\t    return WebVTT.convertCueToDOMTree(window, this.text);\n\t  };\n\t\n\t  root.VTTCue = root.VTTCue || VTTCue;\n\t  vttjs.VTTCue = VTTCue;\n\t}(this, (this.vttjs || {})));\n\n\n/***/ },\n/* 51 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Copyright 2013 vtt.js Contributors\n\t *\n\t * Licensed under the Apache License, Version 2.0 (the \"License\");\n\t * you may not use this file except in compliance with the License.\n\t * You may obtain a copy of the License at\n\t *\n\t *   http://www.apache.org/licenses/LICENSE-2.0\n\t *\n\t * Unless required by applicable law or agreed to in writing, software\n\t * distributed under the License is distributed on an \"AS IS\" BASIS,\n\t * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n\t * See the License for the specific language governing permissions and\n\t * limitations under the License.\n\t */\n\t\n\t// If we're in Node.js then require VTTRegion so we can extend it, otherwise assume\n\t// VTTRegion is on the global.\n\tif (typeof module !== \"undefined\" && module.exports) {\n\t  this.VTTRegion = __webpack_require__(52).VTTRegion;\n\t}\n\t\n\t// Extend VTTRegion with methods to convert to JSON, from JSON, and construct a\n\t// VTTRegion from an options object. The primary purpose of this is for use in the\n\t// vtt.js test suite. It's also useful if you need to work with VTTRegions in\n\t// JSON format.\n\t(function(root) {\n\t\n\t  root.VTTRegion.create = function(options) {\n\t    var region = new root.VTTRegion();\n\t    for (var key in options) {\n\t      if (region.hasOwnProperty(key)) {\n\t        region[key] = options[key];\n\t      }\n\t    }\n\t    return region;\n\t  };\n\t\n\t  root.VTTRegion.fromJSON = function(json) {\n\t    return this.create(JSON.parse(json));\n\t  };\n\t\n\t}(this));\n\n\n/***/ },\n/* 52 */\n/***/ function(module, exports) {\n\n\t/**\n\t * Copyright 2013 vtt.js Contributors\n\t *\n\t * Licensed under the Apache License, Version 2.0 (the \"License\");\n\t * you may not use this file except in compliance with the License.\n\t * You may obtain a copy of the License at\n\t *\n\t *   http://www.apache.org/licenses/LICENSE-2.0\n\t *\n\t * Unless required by applicable law or agreed to in writing, software\n\t * distributed under the License is distributed on an \"AS IS\" BASIS,\n\t * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n\t * See the License for the specific language governing permissions and\n\t * limitations under the License.\n\t */\n\t\n\t(function(root, vttjs) {\n\t\n\t  var scrollSetting = {\n\t    \"\": true,\n\t    \"up\": true\n\t  };\n\t\n\t  function findScrollSetting(value) {\n\t    if (typeof value !== \"string\") {\n\t      return false;\n\t    }\n\t    var scroll = scrollSetting[value.toLowerCase()];\n\t    return scroll ? value.toLowerCase() : false;\n\t  }\n\t\n\t  function isValidPercentValue(value) {\n\t    return typeof value === \"number\" && (value >= 0 && value <= 100);\n\t  }\n\t\n\t  // VTTRegion shim http://dev.w3.org/html5/webvtt/#vttregion-interface\n\t  function VTTRegion() {\n\t    var _width = 100;\n\t    var _lines = 3;\n\t    var _regionAnchorX = 0;\n\t    var _regionAnchorY = 100;\n\t    var _viewportAnchorX = 0;\n\t    var _viewportAnchorY = 100;\n\t    var _scroll = \"\";\n\t\n\t    Object.defineProperties(this, {\n\t      \"width\": {\n\t        enumerable: true,\n\t        get: function() {\n\t          return _width;\n\t        },\n\t        set: function(value) {\n\t          if (!isValidPercentValue(value)) {\n\t            throw new Error(\"Width must be between 0 and 100.\");\n\t          }\n\t          _width = value;\n\t        }\n\t      },\n\t      \"lines\": {\n\t        enumerable: true,\n\t        get: function() {\n\t          return _lines;\n\t        },\n\t        set: function(value) {\n\t          if (typeof value !== \"number\") {\n\t            throw new TypeError(\"Lines must be set to a number.\");\n\t          }\n\t          _lines = value;\n\t        }\n\t      },\n\t      \"regionAnchorY\": {\n\t        enumerable: true,\n\t        get: function() {\n\t          return _regionAnchorY;\n\t        },\n\t        set: function(value) {\n\t          if (!isValidPercentValue(value)) {\n\t            throw new Error(\"RegionAnchorX must be between 0 and 100.\");\n\t          }\n\t          _regionAnchorY = value;\n\t        }\n\t      },\n\t      \"regionAnchorX\": {\n\t        enumerable: true,\n\t        get: function() {\n\t          return _regionAnchorX;\n\t        },\n\t        set: function(value) {\n\t          if(!isValidPercentValue(value)) {\n\t            throw new Error(\"RegionAnchorY must be between 0 and 100.\");\n\t          }\n\t          _regionAnchorX = value;\n\t        }\n\t      },\n\t      \"viewportAnchorY\": {\n\t        enumerable: true,\n\t        get: function() {\n\t          return _viewportAnchorY;\n\t        },\n\t        set: function(value) {\n\t          if (!isValidPercentValue(value)) {\n\t            throw new Error(\"ViewportAnchorY must be between 0 and 100.\");\n\t          }\n\t          _viewportAnchorY = value;\n\t        }\n\t      },\n\t      \"viewportAnchorX\": {\n\t        enumerable: true,\n\t        get: function() {\n\t          return _viewportAnchorX;\n\t        },\n\t        set: function(value) {\n\t          if (!isValidPercentValue(value)) {\n\t            throw new Error(\"ViewportAnchorX must be between 0 and 100.\");\n\t          }\n\t          _viewportAnchorX = value;\n\t        }\n\t      },\n\t      \"scroll\": {\n\t        enumerable: true,\n\t        get: function() {\n\t          return _scroll;\n\t        },\n\t        set: function(value) {\n\t          var setting = findScrollSetting(value);\n\t          // Have to check for false as an empty string is a legal value.\n\t          if (setting === false) {\n\t            throw new SyntaxError(\"An invalid or illegal string was specified.\");\n\t          }\n\t          _scroll = setting;\n\t        }\n\t      }\n\t    });\n\t  }\n\t\n\t  root.VTTRegion = root.VTTRegion || VTTRegion;\n\t  vttjs.VTTRegion = VTTRegion;\n\t}(this, (this.vttjs || {})));\n\n\n/***/ },\n/* 53 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\texports.__esModule = true;\n\t\n\tvar _component = __webpack_require__(16);\n\t\n\tvar _component2 = _interopRequireDefault(_component);\n\t\n\tvar _tech = __webpack_require__(29);\n\t\n\tvar _tech2 = _interopRequireDefault(_tech);\n\t\n\tvar _toTitleCase = __webpack_require__(18);\n\t\n\tvar _toTitleCase2 = _interopRequireDefault(_toTitleCase);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /**\n\t                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * @file loader.js\n\t                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                */\n\t\n\t\n\t/**\n\t * The `MediaLoader` is the `Component` that decides which playback technology to load\n\t * when a player is initialized.\n\t *\n\t * @extends Component\n\t */\n\tvar MediaLoader = function (_Component) {\n\t  _inherits(MediaLoader, _Component);\n\t\n\t  /**\n\t   * Create an instance of this class.\n\t   *\n\t   * @param {Player} player\n\t   *        The `Player` that this class should attach to.\n\t   *\n\t   * @param {Object} [options]\n\t   *        The key/value stroe of player options.\n\t   *\n\t   * @param {Component~ReadyCallback} [ready]\n\t   *        The function that is run when this component is ready.\n\t   */\n\t  function MediaLoader(player, options, ready) {\n\t    _classCallCheck(this, MediaLoader);\n\t\n\t    // If there are no sources when the player is initialized,\n\t    // load the first supported playback technology.\n\t\n\t    var _this = _possibleConstructorReturn(this, _Component.call(this, player, options, ready));\n\t\n\t    if (!options.playerOptions.sources || options.playerOptions.sources.length === 0) {\n\t      for (var i = 0, j = options.playerOptions.techOrder; i < j.length; i++) {\n\t        var techName = (0, _toTitleCase2['default'])(j[i]);\n\t        var tech = _tech2['default'].getTech(techName);\n\t\n\t        // Support old behavior of techs being registered as components.\n\t        // Remove once that deprecated behavior is removed.\n\t        if (!techName) {\n\t          tech = _component2['default'].getComponent(techName);\n\t        }\n\t\n\t        // Check if the browser supports this technology\n\t        if (tech && tech.isSupported()) {\n\t          player.loadTech_(techName);\n\t          break;\n\t        }\n\t      }\n\t    } else {\n\t      // Loop through playback technologies (HTML5, Flash) and check for support.\n\t      // Then load the best source.\n\t      // A few assumptions here:\n\t      //   All playback technologies respect preload false.\n\t      player.src(options.playerOptions.sources);\n\t    }\n\t    return _this;\n\t  }\n\t\n\t  return MediaLoader;\n\t}(_component2['default']);\n\t\n\t_component2['default'].registerComponent('MediaLoader', MediaLoader);\n\texports['default'] = MediaLoader;\n\n\n/***/ },\n/* 54 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\texports.__esModule = true;\n\t\n\tvar _tech = __webpack_require__(29);\n\t\n\tvar _tech2 = _interopRequireDefault(_tech);\n\t\n\tvar _dom = __webpack_require__(8);\n\t\n\tvar Dom = _interopRequireWildcard(_dom);\n\t\n\tvar _url = __webpack_require__(35);\n\t\n\tvar Url = _interopRequireWildcard(_url);\n\t\n\tvar _timeRanges = __webpack_require__(22);\n\t\n\tvar _flashRtmp = __webpack_require__(55);\n\t\n\tvar _flashRtmp2 = _interopRequireDefault(_flashRtmp);\n\t\n\tvar _component = __webpack_require__(16);\n\t\n\tvar _component2 = _interopRequireDefault(_component);\n\t\n\tvar _window = __webpack_require__(4);\n\t\n\tvar _window2 = _interopRequireDefault(_window);\n\t\n\tvar _obj = __webpack_require__(12);\n\t\n\tfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj['default'] = obj; return newObj; } }\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /**\n\t                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * @file flash.js\n\t                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * VideoJS-SWF - Custom Flash Player with HTML5-ish API\n\t                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * https://github.com/zencoder/video-js-swf\n\t                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * Not using setupTriggers. Using global onEvent func to distribute events\n\t                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                */\n\t\n\tvar navigator = _window2['default'].navigator;\n\t\n\t/**\n\t * Flash Media Controller - Wrapper for Flash Media API\n\t *\n\t * @mixes FlashRtmpDecorator\n\t * @mixes Tech~SouceHandlerAdditions\n\t * @extends Tech\n\t */\n\t\n\tvar Flash = function (_Tech) {\n\t  _inherits(Flash, _Tech);\n\t\n\t  /**\n\t   * Create an instance of this Tech.\n\t   *\n\t   * @param {Object} [options]\n\t   *        The key/value store of player options.\n\t   *\n\t   * @param {Component~ReadyCallback} ready\n\t   *        Callback function to call when the `Flash` Tech is ready.\n\t   */\n\t  function Flash(options, ready) {\n\t    _classCallCheck(this, Flash);\n\t\n\t    // Set the source when ready\n\t    var _this = _possibleConstructorReturn(this, _Tech.call(this, options, ready));\n\t\n\t    if (options.source) {\n\t      _this.ready(function () {\n\t        this.setSource(options.source);\n\t      }, true);\n\t    }\n\t\n\t    // Having issues with Flash reloading on certain page actions (hide/resize/fullscreen) in certain browsers\n\t    // This allows resetting the playhead when we catch the reload\n\t    if (options.startTime) {\n\t      _this.ready(function () {\n\t        this.load();\n\t        this.play();\n\t        this.currentTime(options.startTime);\n\t      }, true);\n\t    }\n\t\n\t    // Add global window functions that the swf expects\n\t    // A 4.x workflow we weren't able to solve for in 5.0\n\t    // because of the need to hard code these functions\n\t    // into the swf for security reasons\n\t    _window2['default'].videojs = _window2['default'].videojs || {};\n\t    _window2['default'].videojs.Flash = _window2['default'].videojs.Flash || {};\n\t    _window2['default'].videojs.Flash.onReady = Flash.onReady;\n\t    _window2['default'].videojs.Flash.onEvent = Flash.onEvent;\n\t    _window2['default'].videojs.Flash.onError = Flash.onError;\n\t\n\t    _this.on('seeked', function () {\n\t      this.lastSeekTarget_ = undefined;\n\t    });\n\t\n\t    return _this;\n\t  }\n\t\n\t  /**\n\t   * Create the `Flash` Tech's DOM element.\n\t   *\n\t   * @return {Element}\n\t   *         The element that gets created.\n\t   */\n\t\n\t\n\t  Flash.prototype.createEl = function createEl() {\n\t    var options = this.options_;\n\t\n\t    // If video.js is hosted locally you should also set the location\n\t    // for the hosted swf, which should be relative to the page (not video.js)\n\t    // Otherwise this adds a CDN url.\n\t    // The CDN also auto-adds a swf URL for that specific version.\n\t    if (!options.swf) {\n\t      var ver = '5.2.0';\n\t\n\t      options.swf = '//vjs.zencdn.net/swf/' + ver + '/video-js.swf';\n\t    }\n\t\n\t    // Generate ID for swf object\n\t    var objId = options.techId;\n\t\n\t    // Merge default flashvars with ones passed in to init\n\t    var flashVars = (0, _obj.assign)({\n\t\n\t      // SWF Callback Functions\n\t      readyFunction: 'videojs.Flash.onReady',\n\t      eventProxyFunction: 'videojs.Flash.onEvent',\n\t      errorEventProxyFunction: 'videojs.Flash.onError',\n\t\n\t      // Player Settings\n\t      autoplay: options.autoplay,\n\t      preload: options.preload,\n\t      loop: options.loop,\n\t      muted: options.muted\n\t\n\t    }, options.flashVars);\n\t\n\t    // Merge default parames with ones passed in\n\t    var params = (0, _obj.assign)({\n\t      // Opaque is needed to overlay controls, but can affect playback performance\n\t      wmode: 'opaque',\n\t      // Using bgcolor prevents a white flash when the object is loading\n\t      bgcolor: '#000000'\n\t    }, options.params);\n\t\n\t    // Merge default attributes with ones passed in\n\t    var attributes = (0, _obj.assign)({\n\t      // Both ID and Name needed or swf to identify itself\n\t      id: objId,\n\t      name: objId,\n\t      'class': 'vjs-tech'\n\t    }, options.attributes);\n\t\n\t    this.el_ = Flash.embed(options.swf, flashVars, params, attributes);\n\t    this.el_.tech = this;\n\t\n\t    return this.el_;\n\t  };\n\t\n\t  /**\n\t   * Called by {@link Player#play} to play using the `Flash` `Tech`.\n\t   */\n\t\n\t\n\t  Flash.prototype.play = function play() {\n\t    if (this.ended()) {\n\t      this.setCurrentTime(0);\n\t    }\n\t    this.el_.vjs_play();\n\t  };\n\t\n\t  /**\n\t   * Called by {@link Player#pause} to pause using the `Flash` `Tech`.\n\t   */\n\t\n\t\n\t  Flash.prototype.pause = function pause() {\n\t    this.el_.vjs_pause();\n\t  };\n\t\n\t  /**\n\t   * A getter/setter for the `Flash` Tech's source object.\n\t   * > Note: Please use {@link Flash#setSource}\n\t   *\n\t   * @param {Tech~SourceObject} [src]\n\t   *        The source object you want to set on the `Flash` techs.\n\t   *\n\t   * @return {Tech~SourceObject|undefined}\n\t   *         - The current source object when a source is not passed in.\n\t   *         - undefined when setting\n\t   *\n\t   * @deprecated Since version 5.\n\t   */\n\t\n\t\n\t  Flash.prototype.src = function src(_src) {\n\t    if (_src === undefined) {\n\t      return this.currentSrc();\n\t    }\n\t\n\t    // Setting src through `src` not `setSrc` will be deprecated\n\t    return this.setSrc(_src);\n\t  };\n\t\n\t  /**\n\t   * A getter/setter for the `Flash` Tech's source object.\n\t   *\n\t   * @param {Tech~SourceObject} [src]\n\t   *        The source object you want to set on the `Flash` techs.\n\t   *\n\t   * @return {Tech~SourceObject|undefined}\n\t   *         - The current source object when a source is not passed in.\n\t   *         - undefined when setting\n\t   */\n\t\n\t\n\t  Flash.prototype.setSrc = function setSrc(src) {\n\t    var _this2 = this;\n\t\n\t    // Make sure source URL is absolute.\n\t    src = Url.getAbsoluteURL(src);\n\t    this.el_.vjs_src(src);\n\t\n\t    // Currently the SWF doesn't autoplay if you load a source later.\n\t    // e.g. Load player w/ no source, wait 2s, set src.\n\t    if (this.autoplay()) {\n\t      this.setTimeout(function () {\n\t        return _this2.play();\n\t      }, 0);\n\t    }\n\t  };\n\t\n\t  /**\n\t   * Indicates whether the media is currently seeking to a new position or not.\n\t   *\n\t   * @return {boolean}\n\t   *         - True if seeking to a new position\n\t   *         - False otherwise\n\t   */\n\t\n\t\n\t  Flash.prototype.seeking = function seeking() {\n\t    return this.lastSeekTarget_ !== undefined;\n\t  };\n\t\n\t  /**\n\t   * Returns the current time in seconds that the media is at in playback.\n\t   *\n\t   * @param {number} time\n\t   *        Current playtime of the media in seconds.\n\t   */\n\t\n\t\n\t  Flash.prototype.setCurrentTime = function setCurrentTime(time) {\n\t    var seekable = this.seekable();\n\t\n\t    if (seekable.length) {\n\t      // clamp to the current seekable range\n\t      time = time > seekable.start(0) ? time : seekable.start(0);\n\t      time = time < seekable.end(seekable.length - 1) ? time : seekable.end(seekable.length - 1);\n\t\n\t      this.lastSeekTarget_ = time;\n\t      this.trigger('seeking');\n\t      this.el_.vjs_setProperty('currentTime', time);\n\t      _Tech.prototype.setCurrentTime.call(this);\n\t    }\n\t  };\n\t\n\t  /**\n\t   * Get the current playback time in seconds\n\t   *\n\t   * @return {number}\n\t   *         The current time of playback in seconds.\n\t   */\n\t\n\t\n\t  Flash.prototype.currentTime = function currentTime() {\n\t    // when seeking make the reported time keep up with the requested time\n\t    // by reading the time we're seeking to\n\t    if (this.seeking()) {\n\t      return this.lastSeekTarget_ || 0;\n\t    }\n\t    return this.el_.vjs_getProperty('currentTime');\n\t  };\n\t\n\t  /**\n\t   * Get the current source\n\t   *\n\t   * @method currentSrc\n\t   * @return {Tech~SourceObject}\n\t   *         The current source\n\t   */\n\t\n\t\n\t  Flash.prototype.currentSrc = function currentSrc() {\n\t    if (this.currentSource_) {\n\t      return this.currentSource_.src;\n\t    }\n\t    return this.el_.vjs_getProperty('currentSrc');\n\t  };\n\t\n\t  /**\n\t   * Get the total duration of the current media.\n\t   *\n\t   * @return {number}\n\t   8          The total duration of the current media.\n\t   */\n\t\n\t\n\t  Flash.prototype.duration = function duration() {\n\t    if (this.readyState() === 0) {\n\t      return NaN;\n\t    }\n\t    var duration = this.el_.vjs_getProperty('duration');\n\t\n\t    return duration >= 0 ? duration : Infinity;\n\t  };\n\t\n\t  /**\n\t   * Load media into Tech.\n\t   */\n\t\n\t\n\t  Flash.prototype.load = function load() {\n\t    this.el_.vjs_load();\n\t  };\n\t\n\t  /**\n\t   * Get the poster image that was set on the tech.\n\t   */\n\t\n\t\n\t  Flash.prototype.poster = function poster() {\n\t    this.el_.vjs_getProperty('poster');\n\t  };\n\t\n\t  /**\n\t   * Poster images are not handled by the Flash tech so make this is a no-op.\n\t   */\n\t\n\t\n\t  Flash.prototype.setPoster = function setPoster() {};\n\t\n\t  /**\n\t   * Determine the time ranges that can be seeked to in the media.\n\t   *\n\t   * @return {TimeRange}\n\t   *         Returns the time ranges that can be seeked to.\n\t   */\n\t\n\t\n\t  Flash.prototype.seekable = function seekable() {\n\t    var duration = this.duration();\n\t\n\t    if (duration === 0) {\n\t      return (0, _timeRanges.createTimeRange)();\n\t    }\n\t    return (0, _timeRanges.createTimeRange)(0, duration);\n\t  };\n\t\n\t  /**\n\t   * Get and create a `TimeRange` object for buffering.\n\t   *\n\t   * @return {TimeRange}\n\t   *         The time range object that was created.\n\t   */\n\t\n\t\n\t  Flash.prototype.buffered = function buffered() {\n\t    var ranges = this.el_.vjs_getProperty('buffered');\n\t\n\t    if (ranges.length === 0) {\n\t      return (0, _timeRanges.createTimeRange)();\n\t    }\n\t    return (0, _timeRanges.createTimeRange)(ranges[0][0], ranges[0][1]);\n\t  };\n\t\n\t  /**\n\t   * Get fullscreen support -\n\t   *\n\t   * Flash does not allow fullscreen through javascript\n\t   * so this always returns false.\n\t   *\n\t   * @return {boolean}\n\t   *         The Flash tech does not support fullscreen, so it will always return false.\n\t   */\n\t\n\t\n\t  Flash.prototype.supportsFullScreen = function supportsFullScreen() {\n\t    // Flash does not allow fullscreen through javascript\n\t    return false;\n\t  };\n\t\n\t  /**\n\t   * Flash does not allow fullscreen through javascript\n\t   * so this always returns false.\n\t   *\n\t   * @return {boolean}\n\t   *         The Flash tech does not support fullscreen, so it will always return false.\n\t   */\n\t\n\t\n\t  Flash.prototype.enterFullScreen = function enterFullScreen() {\n\t    return false;\n\t  };\n\t\n\t  return Flash;\n\t}(_tech2['default']);\n\t\n\t// Create setters and getters for attributes\n\t\n\t\n\tvar _api = Flash.prototype;\n\tvar _readWrite = 'rtmpConnection,rtmpStream,preload,defaultPlaybackRate,playbackRate,autoplay,loop,mediaGroup,controller,controls,volume,muted,defaultMuted'.split(',');\n\tvar _readOnly = 'networkState,readyState,initialTime,startOffsetTime,paused,ended,videoWidth,videoHeight'.split(',');\n\t\n\tfunction _createSetter(attr) {\n\t  var attrUpper = attr.charAt(0).toUpperCase() + attr.slice(1);\n\t\n\t  _api['set' + attrUpper] = function (val) {\n\t    return this.el_.vjs_setProperty(attr, val);\n\t  };\n\t}\n\t\n\tfunction _createGetter(attr) {\n\t  _api[attr] = function () {\n\t    return this.el_.vjs_getProperty(attr);\n\t  };\n\t}\n\t\n\t// Create getter and setters for all read/write attributes\n\tfor (var i = 0; i < _readWrite.length; i++) {\n\t  _createGetter(_readWrite[i]);\n\t  _createSetter(_readWrite[i]);\n\t}\n\t\n\t// Create getters for read-only attributes\n\tfor (var _i = 0; _i < _readOnly.length; _i++) {\n\t  _createGetter(_readOnly[_i]);\n\t}\n\t\n\t/** ------------------------------ Getters ------------------------------ **/\n\t/**\n\t * Get the value of `rtmpConnection` from the swf.\n\t *\n\t * @method Flash#rtmpConnection\n\t * @return {string}\n\t *         The current value of `rtmpConnection` on the swf.\n\t */\n\t\n\t/**\n\t * Get the value of `rtmpStream` from the swf.\n\t *\n\t * @method Flash#rtmpStream\n\t * @return {string}\n\t *         The current value of `rtmpStream` on the swf.\n\t */\n\t\n\t/**\n\t * Get the value of `preload` from the swf. `preload` indicates\n\t * what should download before the media is interacted with. It can have the following\n\t * values:\n\t * - none: nothing should be downloaded\n\t * - metadata: poster and the first few frames of the media may be downloaded to get\n\t *   media dimensions and other metadata\n\t * - auto: allow the media and metadata for the media to be downloaded before\n\t *    interaction\n\t *\n\t * @method Flash#preload\n\t * @return {string}\n\t *         The value of `preload` from the swf. Will be 'none', 'metadata',\n\t *         or 'auto'.\n\t */\n\t\n\t/**\n\t * Get the value of `defaultPlaybackRate` from the swf.\n\t *\n\t * @method Flash#defaultPlaybackRate\n\t * @return {number}\n\t *         The current value of `defaultPlaybackRate` on the swf.\n\t */\n\t\n\t/**\n\t * Get the value of `playbackRate` from the swf. `playbackRate` indicates\n\t * the rate at which the media is currently playing back. Examples:\n\t *   - if playbackRate is set to 2, media will play twice as fast.\n\t *   - if playbackRate is set to 0.5, media will play half as fast.\n\t *\n\t * @method Flash#playbackRate\n\t * @return {number}\n\t *         The value of `playbackRate` from the swf. A number indicating\n\t *         the current playback speed of the media, where 1 is normal speed.\n\t */\n\t\n\t/**\n\t * Get the value of `autoplay` from the swf. `autoplay` indicates\n\t * that the media should start to play as soon as the page is ready.\n\t *\n\t * @method Flash#autoplay\n\t * @return {boolean}\n\t *         - The value of `autoplay` from the swf.\n\t *         - True indicates that the media ashould start as soon as the page loads.\n\t *         - False indicates that the media should not start as soon as the page loads.\n\t */\n\t\n\t/**\n\t * Get the value of `loop` from the swf. `loop` indicates\n\t * that the media should return to the start of the media and continue playing once\n\t * it reaches the end.\n\t *\n\t * @method Flash#loop\n\t * @return {boolean}\n\t *         - The value of `loop` from the swf.\n\t *         - True indicates that playback should seek back to start once\n\t *           the end of a media is reached.\n\t *         - False indicates that playback should not loop back to the start when the\n\t *           end of the media is reached.\n\t */\n\t\n\t/**\n\t * Get the value of `mediaGroup` from the swf.\n\t *\n\t * @method Flash#mediaGroup\n\t * @return {string}\n\t *         The current value of `mediaGroup` on the swf.\n\t */\n\t\n\t/**\n\t * Get the value of `controller` from the swf.\n\t *\n\t * @method Flash#controller\n\t * @return {string}\n\t *         The current value of `controller` on the swf.\n\t */\n\t\n\t/**\n\t * Get the value of `controls` from the swf. `controls` indicates\n\t * whether the native flash controls should be shown or hidden.\n\t *\n\t * @method Flash#controls\n\t * @return {boolean}\n\t *         - The value of `controls` from the swf.\n\t *         - True indicates that native controls should be showing.\n\t *         - False indicates that native controls should be hidden.\n\t */\n\t\n\t/**\n\t * Get the value of the `volume` from the swf. `volume` indicates the current\n\t * audio level as a percentage in decimal form. This means that 1 is 100%, 0.5 is 50%, and\n\t * so on.\n\t *\n\t * @method Flash#volume\n\t * @return {number}\n\t *         The volume percent as a decimal. Value will be between 0-1.\n\t */\n\t\n\t/**\n\t * Get the value of the `muted` from the swf. `muted` indicates the current\n\t * audio level should be silent.\n\t *\n\t * @method Flash#muted\n\t * @return {boolean}\n\t *         - True if the audio should be set to silent\n\t *         - False otherwise\n\t */\n\t\n\t/**\n\t * Get the value of `defaultMuted` from the swf. `defaultMuted` indicates\n\t * whether the media should start muted or not. Only changes the default state of the\n\t * media. `muted` and `defaultMuted` can have different values. `muted` indicates the\n\t * current state.\n\t *\n\t * @method Flash#defaultMuted\n\t * @return {boolean}\n\t *         - The value of `defaultMuted` from the swf.\n\t *         - True indicates that the media should start muted.\n\t *         - False indicates that the media should not start muted.\n\t */\n\t\n\t/**\n\t * Get the value of `networkState` from the swf. `networkState` indicates\n\t * the current network state. It returns an enumeration from the following list:\n\t * - 0: NETWORK_EMPTY\n\t * - 1: NEWORK_IDLE\n\t * - 2: NETWORK_LOADING\n\t * - 3: NETWORK_NO_SOURCE\n\t *\n\t * @method Flash#networkState\n\t * @return {number}\n\t *         The value of `networkState` from the swf. This will be a number\n\t *         from the list in the description.\n\t */\n\t\n\t/**\n\t * Get the value of `readyState` from the swf. `readyState` indicates\n\t * the current state of the media element. It returns an enumeration from the\n\t * following list:\n\t * - 0: HAVE_NOTHING\n\t * - 1: HAVE_METADATA\n\t * - 2: HAVE_CURRENT_DATA\n\t * - 3: HAVE_FUTURE_DATA\n\t * - 4: HAVE_ENOUGH_DATA\n\t *\n\t * @method Flash#readyState\n\t * @return {number}\n\t *         The value of `readyState` from the swf. This will be a number\n\t *         from the list in the description.\n\t */\n\t\n\t/**\n\t * Get the value of `readyState` from the swf. `readyState` indicates\n\t * the current state of the media element. It returns an enumeration from the\n\t * following list:\n\t * - 0: HAVE_NOTHING\n\t * - 1: HAVE_METADATA\n\t * - 2: HAVE_CURRENT_DATA\n\t * - 3: HAVE_FUTURE_DATA\n\t * - 4: HAVE_ENOUGH_DATA\n\t *\n\t * @method Flash#readyState\n\t * @return {number}\n\t *         The value of `readyState` from the swf. This will be a number\n\t *         from the list in the description.\n\t */\n\t\n\t/**\n\t * Get the value of `initialTime` from the swf.\n\t *\n\t * @method Flash#initialTime\n\t * @return {number}\n\t *         The `initialTime` proprety on the swf.\n\t */\n\t\n\t/**\n\t * Get the value of `startOffsetTime` from the swf.\n\t *\n\t * @method Flash#startOffsetTime\n\t * @return {number}\n\t *         The `startOffsetTime` proprety on the swf.\n\t */\n\t\n\t/**\n\t * Get the value of `paused` from the swf. `paused` indicates whether the swf\n\t * is current paused or not.\n\t *\n\t * @method Flash#paused\n\t * @return {boolean}\n\t *         The value of `paused` from the swf.\n\t */\n\t\n\t/**\n\t * Get the value of `ended` from the swf. `ended` indicates whether\n\t * the media has reached the end or not.\n\t *\n\t * @method Flash#ended\n\t * @return {boolean}\n\t *         - True indicates that the media has ended.\n\t *         - False indicates that the media has not ended.\n\t *\n\t * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-ended}\n\t */\n\t\n\t/**\n\t * Get the value of `videoWidth` from the swf. `videoWidth` indicates\n\t * the current width of the media in css pixels.\n\t *\n\t * @method Flash#videoWidth\n\t * @return {number}\n\t *         The value of `videoWidth` from the swf. This will be a number\n\t *         in css pixels.\n\t */\n\t\n\t/**\n\t * Get the value of `videoHeight` from the swf. `videoHeigth` indicates\n\t * the current height of the media in css pixels.\n\t *\n\t * @method Flassh.prototype.videoHeight\n\t * @return {number}\n\t *         The value of `videoHeight` from the swf. This will be a number\n\t *         in css pixels.\n\t */\n\t/** ------------------------------ Setters ------------------------------ **/\n\t\n\t/**\n\t * Set the value of `rtmpConnection` on the swf.\n\t *\n\t * @method Flash#setRtmpConnection\n\t * @param {string} rtmpConnection\n\t *        New value to set the `rtmpConnection` property to.\n\t */\n\t\n\t/**\n\t * Set the value of `rtmpStream` on the swf.\n\t *\n\t * @method Flash#setRtmpStream\n\t * @param {string} rtmpStream\n\t *        New value to set the `rtmpStream` property to.\n\t */\n\t\n\t/**\n\t * Set the value of `preload` on the swf. `preload` indicates\n\t * what should download before the media is interacted with. It can have the following\n\t * values:\n\t * - none: nothing should be downloaded\n\t * - metadata: poster and the first few frames of the media may be downloaded to get\n\t *   media dimensions and other metadata\n\t * - auto: allow the media and metadata for the media to be downloaded before\n\t *    interaction\n\t *\n\t * @method Flash#setPreload\n\t * @param {string} preload\n\t *        The value of `preload` to set on the swf. Should be 'none', 'metadata',\n\t *        or 'auto'.\n\t */\n\t\n\t/**\n\t * Set the value of `defaultPlaybackRate` on the swf.\n\t *\n\t * @method Flash#setDefaultPlaybackRate\n\t * @param {number} defaultPlaybackRate\n\t *        New value to set the `defaultPlaybackRate` property to.\n\t */\n\t\n\t/**\n\t * Set the value of `playbackRate` on the swf. `playbackRate` indicates\n\t * the rate at which the media is currently playing back. Examples:\n\t *   - if playbackRate is set to 2, media will play twice as fast.\n\t *   - if playbackRate is set to 0.5, media will play half as fast.\n\t *\n\t * @method Flash#setPlaybackRate\n\t * @param {number} playbackRate\n\t *        New value of `playbackRate` on the swf. A number indicating\n\t *        the current playback speed of the media, where 1 is normal speed.\n\t */\n\t\n\t/**\n\t * Set the value of `autoplay` on the swf. `autoplay` indicates\n\t * that the media should start to play as soon as the page is ready.\n\t *\n\t * @method Flash#setAutoplay\n\t * @param {boolean} autoplay\n\t *        - The value of `autoplay` from the swf.\n\t *        - True indicates that the media ashould start as soon as the page loads.\n\t *        - False indicates that the media should not start as soon as the page loads.\n\t */\n\t\n\t/**\n\t * Set the value of `loop` on the swf. `loop` indicates\n\t * that the media should return to the start of the media and continue playing once\n\t * it reaches the end.\n\t *\n\t * @method Flash#setLoop\n\t * @param {boolean} loop\n\t *        - True indicates that playback should seek back to start once\n\t *          the end of a media is reached.\n\t *        - False indicates that playback should not loop back to the start when the\n\t *          end of the media is reached.\n\t */\n\t\n\t/**\n\t * Set the value of `mediaGroup` on the swf.\n\t *\n\t * @method Flash#setMediaGroup\n\t * @param {string} mediaGroup\n\t *        New value of `mediaGroup` to set on the swf.\n\t */\n\t\n\t/**\n\t * Set the value of `controller` on the swf.\n\t *\n\t * @method Flash#setController\n\t * @param {string} controller\n\t *        New value the current value of `controller` on the swf.\n\t */\n\t\n\t/**\n\t * Get the value of `controls` from the swf. `controls` indicates\n\t * whether the native flash controls should be shown or hidden.\n\t *\n\t * @method Flash#controls\n\t * @return {boolean}\n\t *         - The value of `controls` from the swf.\n\t *         - True indicates that native controls should be showing.\n\t *         - False indicates that native controls should be hidden.\n\t */\n\t\n\t/**\n\t * Set the value of the `volume` on the swf. `volume` indicates the current\n\t * audio level as a percentage in decimal form. This means that 1 is 100%, 0.5 is 50%, and\n\t * so on.\n\t *\n\t * @method Flash#setVolume\n\t * @param {number} percentAsDecimal\n\t *         The volume percent as a decimal. Value will be between 0-1.\n\t */\n\t\n\t/**\n\t * Set the value of the `muted` on the swf. `muted` indicates that the current\n\t * audio level should be silent.\n\t *\n\t * @method Flash#setMuted\n\t * @param {boolean} muted\n\t *         - True if the audio should be set to silent\n\t *         - False otherwise\n\t */\n\t\n\t/**\n\t * Set the value of `defaultMuted` on the swf. `defaultMuted` indicates\n\t * whether the media should start muted or not. Only changes the default state of the\n\t * media. `muted` and `defaultMuted` can have different values. `muted` indicates the\n\t * current state.\n\t *\n\t * @method Flash#setDefaultMuted\n\t * @param {boolean} defaultMuted\n\t *         - True indicates that the media should start muted.\n\t *         - False indicates that the media should not start muted.\n\t */\n\t\n\t/* Flash Support Testing -------------------------------------------------------- */\n\t\n\t/**\n\t * Check if the Flash tech is currently supported.\n\t *\n\t * @return {boolean}\n\t *          - True if the flash tech is supported.\n\t *          - False otherwise.\n\t */\n\tFlash.isSupported = function () {\n\t  return Flash.version()[0] >= 10;\n\t  // return swfobject.hasFlashPlayerVersion('10');\n\t};\n\t\n\t// Add Source Handler pattern functions to this tech\n\t_tech2['default'].withSourceHandlers(Flash);\n\t\n\t/*\n\t * Native source handler for flash,  simply passes the source to the swf element.\n\t *\n\t * @property {Tech~SourceObject} source\n\t *           The source object\n\t *\n\t * @property {Flash} tech\n\t *           The instance of the Flash tech\n\t */\n\tFlash.nativeSourceHandler = {};\n\t\n\t/**\n\t * Check if the Flash can play the given mime type.\n\t *\n\t * @param {string} type\n\t *        The mimetype to check\n\t *\n\t * @return {string}\n\t *         'maybe', or '' (empty string)\n\t */\n\tFlash.nativeSourceHandler.canPlayType = function (type) {\n\t  if (type in Flash.formats) {\n\t    return 'maybe';\n\t  }\n\t\n\t  return '';\n\t};\n\t\n\t/**\n\t * Check if the media element can handle a source natively.\n\t *\n\t * @param {Tech~SourceObject} source\n\t *         The source object\n\t *\n\t * @param {Object} [options]\n\t *         Options to be passed to the tech.\n\t *\n\t * @return {string}\n\t *         'maybe', or '' (empty string).\n\t */\n\tFlash.nativeSourceHandler.canHandleSource = function (source, options) {\n\t  var type = void 0;\n\t\n\t  function guessMimeType(src) {\n\t    var ext = Url.getFileExtension(src);\n\t\n\t    if (ext) {\n\t      return 'video/' + ext;\n\t    }\n\t    return '';\n\t  }\n\t\n\t  if (!source.type) {\n\t    type = guessMimeType(source.src);\n\t  } else {\n\t    // Strip code information from the type because we don't get that specific\n\t    type = source.type.replace(/;.*/, '').toLowerCase();\n\t  }\n\t\n\t  return Flash.nativeSourceHandler.canPlayType(type);\n\t};\n\t\n\t/**\n\t * Pass the source to the swf.\n\t *\n\t * @param {Tech~SourceObject} source\n\t *        The source object\n\t *\n\t * @param {Flash} tech\n\t *        The instance of the Flash tech\n\t *\n\t * @param {Object} [options]\n\t *        The options to pass to the source\n\t */\n\tFlash.nativeSourceHandler.handleSource = function (source, tech, options) {\n\t  tech.setSrc(source.src);\n\t};\n\t\n\t/**\n\t * noop for native source handler dispose, as cleanup will happen automatically.\n\t */\n\tFlash.nativeSourceHandler.dispose = function () {};\n\t\n\t// Register the native source handler\n\tFlash.registerSourceHandler(Flash.nativeSourceHandler);\n\t\n\t/**\n\t * Flash supported mime types.\n\t *\n\t * @constant {Object}\n\t */\n\tFlash.formats = {\n\t  'video/flv': 'FLV',\n\t  'video/x-flv': 'FLV',\n\t  'video/mp4': 'MP4',\n\t  'video/m4v': 'MP4'\n\t};\n\t\n\t/**\n\t * Called when the the swf is \"ready\", and makes sure that the swf is really\n\t * ready using {@link Flash#checkReady}\n\t */\n\tFlash.onReady = function (currSwf) {\n\t  var el = Dom.getEl(currSwf);\n\t  var tech = el && el.tech;\n\t\n\t  // if there is no el then the tech has been disposed\n\t  // and the tech element was removed from the player div\n\t  if (tech && tech.el()) {\n\t    // check that the flash object is really ready\n\t    Flash.checkReady(tech);\n\t  }\n\t};\n\t\n\t/**\n\t * The SWF isn't always ready when it says it is. Sometimes the API functions still\n\t * need to be added to the object. If it's not ready, we set a timeout to check again\n\t * shortly.\n\t *\n\t * @param {Flash} tech\n\t *        The instance of the flash tech to check.\n\t */\n\tFlash.checkReady = function (tech) {\n\t  // stop worrying if the tech has been disposed\n\t  if (!tech.el()) {\n\t    return;\n\t  }\n\t\n\t  // check if API property exists\n\t  if (tech.el().vjs_getProperty) {\n\t    // tell tech it's ready\n\t    tech.triggerReady();\n\t  } else {\n\t    // wait longer\n\t    this.setTimeout(function () {\n\t      Flash.checkReady(tech);\n\t    }, 50);\n\t  }\n\t};\n\t\n\t/**\n\t * Trigger events from the swf on the Flash Tech.\n\t *\n\t * @param {number} swfID\n\t *        The id of the swf that had the event\n\t *\n\t * @param {string} eventName\n\t *        The name of the event to trigger\n\t */\n\tFlash.onEvent = function (swfID, eventName) {\n\t  var tech = Dom.getEl(swfID).tech;\n\t  var args = Array.prototype.slice.call(arguments, 2);\n\t\n\t  // dispatch Flash events asynchronously for two reasons:\n\t  // - Flash swallows any exceptions generated by javascript it\n\t  //   invokes\n\t  // - Flash is suspended until the javascript returns which may cause\n\t  //   playback performance issues\n\t  tech.setTimeout(function () {\n\t    tech.trigger(eventName, args);\n\t  }, 1);\n\t};\n\t\n\t/**\n\t * Log errors from the swf on the Flash tech.\n\t *\n\t * @param {number} swfID\n\t *        The id of the swf that had an error.\n\t *\n\t * @param {string} The error string\n\t *        The error to set on the Flash Tech.\n\t *\n\t * @return {MediaError|undefined}\n\t *          - Returns a MediaError when err is 'srcnotfound'\n\t *          - Returns undefined otherwise.\n\t */\n\tFlash.onError = function (swfID, err) {\n\t  var tech = Dom.getEl(swfID).tech;\n\t\n\t  // trigger MEDIA_ERR_SRC_NOT_SUPPORTED\n\t  if (err === 'srcnotfound') {\n\t    return tech.error(4);\n\t  }\n\t\n\t  // trigger a custom error\n\t  tech.error('FLASH: ' + err);\n\t};\n\t\n\t/**\n\t * Get the current version of Flash that is in use on the page.\n\t *\n\t * @return {Array}\n\t *          an array of versions that are available.\n\t */\n\tFlash.version = function () {\n\t  var version = '0,0,0';\n\t\n\t  // IE\n\t  try {\n\t    version = new _window2['default'].ActiveXObject('ShockwaveFlash.ShockwaveFlash').GetVariable('$version').replace(/\\D+/g, ',').match(/^,?(.+),?$/)[1];\n\t\n\t    // other browsers\n\t  } catch (e) {\n\t    try {\n\t      if (navigator.mimeTypes['application/x-shockwave-flash'].enabledPlugin) {\n\t        version = (navigator.plugins['Shockwave Flash 2.0'] || navigator.plugins['Shockwave Flash']).description.replace(/\\D+/g, ',').match(/^,?(.+),?$/)[1];\n\t      }\n\t    } catch (err) {\n\t      // satisfy linter\n\t    }\n\t  }\n\t  return version.split(',');\n\t};\n\t\n\t/**\n\t * Only use for non-iframe embeds.\n\t *\n\t * @param {Object} swf\n\t *        The videojs-swf object.\n\t *\n\t * @param {Object} flashVars\n\t *        Names and values to use as flash option variables.\n\t *\n\t * @param {Object} params\n\t *        Style parameters to set on the object.\n\t *\n\t * @param {Object} attributes\n\t *        Attributes to set on the element.\n\t *\n\t * @return {Element}\n\t *          The embeded Flash DOM element.\n\t */\n\tFlash.embed = function (swf, flashVars, params, attributes) {\n\t  var code = Flash.getEmbedCode(swf, flashVars, params, attributes);\n\t\n\t  // Get element by embedding code and retrieving created element\n\t  var obj = Dom.createEl('div', { innerHTML: code }).childNodes[0];\n\t\n\t  return obj;\n\t};\n\t\n\t/**\n\t * Only use for non-iframe embeds.\n\t *\n\t * @param {Object} swf\n\t *        The videojs-swf object.\n\t *\n\t * @param {Object} flashVars\n\t *        Names and values to use as flash option variables.\n\t *\n\t * @param {Object} params\n\t *        Style parameters to set on the object.\n\t *\n\t * @param {Object} attributes\n\t *        Attributes to set on the element.\n\t *\n\t * @return {Element}\n\t *          The embeded Flash DOM element.\n\t */\n\tFlash.getEmbedCode = function (swf, flashVars, params, attributes) {\n\t  var objTag = '<object type=\"application/x-shockwave-flash\" ';\n\t  var flashVarsString = '';\n\t  var paramsString = '';\n\t  var attrsString = '';\n\t\n\t  // Convert flash vars to string\n\t  if (flashVars) {\n\t    Object.getOwnPropertyNames(flashVars).forEach(function (key) {\n\t      flashVarsString += key + '=' + flashVars[key] + '&amp;';\n\t    });\n\t  }\n\t\n\t  // Add swf, flashVars, and other default params\n\t  params = (0, _obj.assign)({\n\t    movie: swf,\n\t    flashvars: flashVarsString,\n\t    // Required to talk to swf\n\t    allowScriptAccess: 'always',\n\t    // All should be default, but having security issues.\n\t    allowNetworking: 'all'\n\t  }, params);\n\t\n\t  // Create param tags string\n\t  Object.getOwnPropertyNames(params).forEach(function (key) {\n\t    paramsString += '<param name=\"' + key + '\" value=\"' + params[key] + '\" />';\n\t  });\n\t\n\t  attributes = (0, _obj.assign)({\n\t    // Add swf to attributes (need both for IE and Others to work)\n\t    data: swf,\n\t\n\t    // Default to 100% width/height\n\t    width: '100%',\n\t    height: '100%'\n\t\n\t  }, attributes);\n\t\n\t  // Create Attributes string\n\t  Object.getOwnPropertyNames(attributes).forEach(function (key) {\n\t    attrsString += key + '=\"' + attributes[key] + '\" ';\n\t  });\n\t\n\t  return '' + objTag + attrsString + '>' + paramsString + '</object>';\n\t};\n\t\n\t// Run Flash through the RTMP decorator\n\t(0, _flashRtmp2['default'])(Flash);\n\t\n\t_component2['default'].registerComponent('Flash', Flash);\n\t_tech2['default'].registerTech('Flash', Flash);\n\texports['default'] = Flash;\n\n\n/***/ },\n/* 55 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\texports.__esModule = true;\n\t/**\n\t * @file flash-rtmp.js\n\t * @module flash-rtmp\n\t */\n\t\n\t/**\n\t * Add RTMP properties to the {@link Flash} Tech.\n\t *\n\t * @param {Flash} Flash\n\t *        The flash tech class.\n\t *\n\t * @mixin FlashRtmpDecorator\n\t */\n\tfunction FlashRtmpDecorator(Flash) {\n\t  Flash.streamingFormats = {\n\t    'rtmp/mp4': 'MP4',\n\t    'rtmp/flv': 'FLV'\n\t  };\n\t\n\t  /**\n\t   * Join connection and stream with an ampersand.\n\t   *\n\t   * @param {string} connection\n\t   *        The connection string.\n\t   *\n\t   * @param {string} stream\n\t   *        The stream string.\n\t   */\n\t  Flash.streamFromParts = function (connection, stream) {\n\t    return connection + '&' + stream;\n\t  };\n\t\n\t  /**\n\t   * The flash parts object that contains connection and stream info.\n\t   *\n\t   * @typedef {Object} Flash~PartsObject\n\t   *\n\t   * @property {string} connection\n\t   *           The connection string of a source, defaults to an empty string.\n\t   *\n\t   * @property {string} stream\n\t   *           The stream string of the source, defaults to an empty string.\n\t   */\n\t\n\t  /**\n\t   * Convert a source url into a stream and connection parts.\n\t   *\n\t   * @param {string} src\n\t   *        the source url\n\t   *\n\t   * @return {Flash~PartsObject}\n\t   *         The parts object that contains a connection and a stream\n\t   */\n\t  Flash.streamToParts = function (src) {\n\t    var parts = {\n\t      connection: '',\n\t      stream: ''\n\t    };\n\t\n\t    if (!src) {\n\t      return parts;\n\t    }\n\t\n\t    // Look for the normal URL separator we expect, '&'.\n\t    // If found, we split the URL into two pieces around the\n\t    // first '&'.\n\t    var connEnd = src.search(/&(?!\\w+=)/);\n\t    var streamBegin = void 0;\n\t\n\t    if (connEnd !== -1) {\n\t      streamBegin = connEnd + 1;\n\t    } else {\n\t      // If there's not a '&', we use the last '/' as the delimiter.\n\t      connEnd = streamBegin = src.lastIndexOf('/') + 1;\n\t      if (connEnd === 0) {\n\t        // really, there's not a '/'?\n\t        connEnd = streamBegin = src.length;\n\t      }\n\t    }\n\t\n\t    parts.connection = src.substring(0, connEnd);\n\t    parts.stream = src.substring(streamBegin, src.length);\n\t\n\t    return parts;\n\t  };\n\t\n\t  /**\n\t   * Check if the source type is a streaming type.\n\t   *\n\t   * @param {string} srcType\n\t   *        The mime type to check.\n\t   *\n\t   * @return {boolean}\n\t   *          - True if the source type is a streaming type.\n\t   *          - False if the source type is not a streaming type.\n\t   */\n\t  Flash.isStreamingType = function (srcType) {\n\t    return srcType in Flash.streamingFormats;\n\t  };\n\t\n\t  // RTMP has four variations, any string starting\n\t  // with one of these protocols should be valid\n\t\n\t  /**\n\t   * Regular expression used to check if the source is an rtmp source.\n\t   *\n\t   * @property {RegExp} Flash.RTMP_RE\n\t   */\n\t  Flash.RTMP_RE = /^rtmp[set]?:\\/\\//i;\n\t\n\t  /**\n\t   * Check if the source itself is a streaming type.\n\t   *\n\t   * @param {string} src\n\t   *        The url to the source.\n\t   *\n\t   * @return {boolean}\n\t   *          - True if the source url indicates that the source is streaming.\n\t   *          - False if the shource url indicates that the source url is not streaming.\n\t   */\n\t  Flash.isStreamingSrc = function (src) {\n\t    return Flash.RTMP_RE.test(src);\n\t  };\n\t\n\t  /**\n\t   * A source handler for RTMP urls\n\t   * @type {Object}\n\t   */\n\t  Flash.rtmpSourceHandler = {};\n\t\n\t  /**\n\t   * Check if Flash can play the given mime type.\n\t   *\n\t   * @param {string} type\n\t   *        The mime type to check\n\t   *\n\t   * @return {string}\n\t   *         'maybe', or '' (empty string)\n\t   */\n\t  Flash.rtmpSourceHandler.canPlayType = function (type) {\n\t    if (Flash.isStreamingType(type)) {\n\t      return 'maybe';\n\t    }\n\t\n\t    return '';\n\t  };\n\t\n\t  /**\n\t   * Check if Flash can handle the source natively\n\t   *\n\t   * @param {Object} source\n\t   *        The source object\n\t   *\n\t   * @param {Object} [options]\n\t   *        The options passed to the tech\n\t   *\n\t   * @return {string}\n\t   *         'maybe', or '' (empty string)\n\t   */\n\t  Flash.rtmpSourceHandler.canHandleSource = function (source, options) {\n\t    var can = Flash.rtmpSourceHandler.canPlayType(source.type);\n\t\n\t    if (can) {\n\t      return can;\n\t    }\n\t\n\t    if (Flash.isStreamingSrc(source.src)) {\n\t      return 'maybe';\n\t    }\n\t\n\t    return '';\n\t  };\n\t\n\t  /**\n\t   * Pass the source to the flash object.\n\t   *\n\t   * @param {Object} source\n\t   *        The source object\n\t   *\n\t   * @param {Flash} tech\n\t   *        The instance of the Flash tech\n\t   *\n\t   * @param {Object} [options]\n\t   *        The options to pass to the source\n\t   */\n\t  Flash.rtmpSourceHandler.handleSource = function (source, tech, options) {\n\t    var srcParts = Flash.streamToParts(source.src);\n\t\n\t    tech.setRtmpConnection(srcParts.connection);\n\t    tech.setRtmpStream(srcParts.stream);\n\t  };\n\t\n\t  // Register the native source handler\n\t  Flash.registerSourceHandler(Flash.rtmpSourceHandler);\n\t\n\t  return Flash;\n\t}\n\t\n\texports['default'] = FlashRtmpDecorator;\n\n\n/***/ },\n/* 56 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\texports.__esModule = true;\n\t\n\tvar _clickableComponent = __webpack_require__(57);\n\t\n\tvar _clickableComponent2 = _interopRequireDefault(_clickableComponent);\n\t\n\tvar _component = __webpack_require__(16);\n\t\n\tvar _component2 = _interopRequireDefault(_component);\n\t\n\tvar _fn = __webpack_require__(17);\n\t\n\tvar Fn = _interopRequireWildcard(_fn);\n\t\n\tvar _dom = __webpack_require__(8);\n\t\n\tvar Dom = _interopRequireWildcard(_dom);\n\t\n\tvar _browser = __webpack_require__(11);\n\t\n\tvar browser = _interopRequireWildcard(_browser);\n\t\n\tfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj['default'] = obj; return newObj; } }\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /**\n\t                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * @file poster-image.js\n\t                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                */\n\t\n\t\n\t/**\n\t * A `ClickableComponent` that handles showing the poster image for the player.\n\t *\n\t * @extends ClickableComponent\n\t */\n\tvar PosterImage = function (_ClickableComponent) {\n\t  _inherits(PosterImage, _ClickableComponent);\n\t\n\t  /**\n\t   * Create an instance of this class.\n\t   *\n\t   * @param {Player} player\n\t   *        The `Player` that this class should attach to.\n\t   *\n\t   * @param {Object} [options]\n\t   *        The key/value store of player options.\n\t   */\n\t  function PosterImage(player, options) {\n\t    _classCallCheck(this, PosterImage);\n\t\n\t    var _this = _possibleConstructorReturn(this, _ClickableComponent.call(this, player, options));\n\t\n\t    _this.update();\n\t    player.on('posterchange', Fn.bind(_this, _this.update));\n\t    return _this;\n\t  }\n\t\n\t  /**\n\t   * Clean up and dispose of the `PosterImage`.\n\t   */\n\t\n\t\n\t  PosterImage.prototype.dispose = function dispose() {\n\t    this.player().off('posterchange', this.update);\n\t    _ClickableComponent.prototype.dispose.call(this);\n\t  };\n\t\n\t  /**\n\t   * Create the `PosterImage`s DOM element.\n\t   *\n\t   * @return {Element}\n\t   *         The element that gets created.\n\t   */\n\t\n\t\n\t  PosterImage.prototype.createEl = function createEl() {\n\t    var el = Dom.createEl('div', {\n\t      className: 'vjs-poster',\n\t\n\t      // Don't want poster to be tabbable.\n\t      tabIndex: -1\n\t    });\n\t\n\t    // To ensure the poster image resizes while maintaining its original aspect\n\t    // ratio, use a div with `background-size` when available. For browsers that\n\t    // do not support `background-size` (e.g. IE8), fall back on using a regular\n\t    // img element.\n\t    if (!browser.BACKGROUND_SIZE_SUPPORTED) {\n\t      this.fallbackImg_ = Dom.createEl('img');\n\t      el.appendChild(this.fallbackImg_);\n\t    }\n\t\n\t    return el;\n\t  };\n\t\n\t  /**\n\t   * An {@link EventTarget~EventListener} for {@link Player#posterchange} events.\n\t   *\n\t   * @listens Player#posterchange\n\t   *\n\t   * @param {EventTarget~Event} [event]\n\t   *        The `Player#posterchange` event that triggered this function.\n\t   */\n\t\n\t\n\t  PosterImage.prototype.update = function update(event) {\n\t    var url = this.player().poster();\n\t\n\t    this.setSrc(url);\n\t\n\t    // If there's no poster source we should display:none on this component\n\t    // so it's not still clickable or right-clickable\n\t    if (url) {\n\t      this.show();\n\t    } else {\n\t      this.hide();\n\t    }\n\t  };\n\t\n\t  /**\n\t   * Set the source of the `PosterImage` depending on the display method.\n\t   *\n\t   * @param {string} url\n\t   *        The URL to the source for the `PosterImage`.\n\t   */\n\t\n\t\n\t  PosterImage.prototype.setSrc = function setSrc(url) {\n\t    if (this.fallbackImg_) {\n\t      this.fallbackImg_.src = url;\n\t    } else {\n\t      var backgroundImage = '';\n\t\n\t      // Any falsey values should stay as an empty string, otherwise\n\t      // this will throw an extra error\n\t      if (url) {\n\t        backgroundImage = 'url(\"' + url + '\")';\n\t      }\n\t\n\t      this.el_.style.backgroundImage = backgroundImage;\n\t    }\n\t  };\n\t\n\t  /**\n\t   * An {@link EventTarget~EventListener} for clicks on the `PosterImage`. See\n\t   * {@link ClickableComponent#handleClick} for instances where this will be triggered.\n\t   *\n\t   * @listens tap\n\t   * @listens click\n\t   * @listens keydown\n\t   *\n\t   * @param {EventTarget~Event} event\n\t   +        The `click`, `tap` or `keydown` event that caused this function to be called.\n\t   */\n\t\n\t\n\t  PosterImage.prototype.handleClick = function handleClick(event) {\n\t    // We don't want a click to trigger playback when controls are disabled\n\t    if (!this.player_.controls()) {\n\t      return;\n\t    }\n\t\n\t    if (this.player_.paused()) {\n\t      this.player_.play();\n\t    } else {\n\t      this.player_.pause();\n\t    }\n\t  };\n\t\n\t  return PosterImage;\n\t}(_clickableComponent2['default']);\n\t\n\t_component2['default'].registerComponent('PosterImage', PosterImage);\n\texports['default'] = PosterImage;\n\n\n/***/ },\n/* 57 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\texports.__esModule = true;\n\t\n\tvar _component = __webpack_require__(16);\n\t\n\tvar _component2 = _interopRequireDefault(_component);\n\t\n\tvar _dom = __webpack_require__(8);\n\t\n\tvar Dom = _interopRequireWildcard(_dom);\n\t\n\tvar _events = __webpack_require__(14);\n\t\n\tvar Events = _interopRequireWildcard(_events);\n\t\n\tvar _fn = __webpack_require__(17);\n\t\n\tvar Fn = _interopRequireWildcard(_fn);\n\t\n\tvar _log = __webpack_require__(10);\n\t\n\tvar _log2 = _interopRequireDefault(_log);\n\t\n\tvar _document = __webpack_require__(5);\n\t\n\tvar _document2 = _interopRequireDefault(_document);\n\t\n\tvar _obj = __webpack_require__(12);\n\t\n\tfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj['default'] = obj; return newObj; } }\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /**\n\t                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * @file button.js\n\t                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                */\n\t\n\t\n\t/**\n\t * Clickable Component which is clickable or keyboard actionable,\n\t * but is not a native HTML button.\n\t *\n\t * @extends Component\n\t */\n\tvar ClickableComponent = function (_Component) {\n\t  _inherits(ClickableComponent, _Component);\n\t\n\t  /**\n\t   * Creates an instance of this class.\n\t   *\n\t   * @param  {Player} player\n\t   *         The `Player` that this class should be attached to.\n\t   *\n\t   * @param  {Object} [options]\n\t   *         The key/value store of player options.\n\t   */\n\t  function ClickableComponent(player, options) {\n\t    _classCallCheck(this, ClickableComponent);\n\t\n\t    var _this = _possibleConstructorReturn(this, _Component.call(this, player, options));\n\t\n\t    _this.emitTapEvents();\n\t\n\t    _this.enable();\n\t    return _this;\n\t  }\n\t\n\t  /**\n\t   * Create the `Component`s DOM element.\n\t   *\n\t   * @param {string} [tag=div]\n\t   *        The element's node type.\n\t   *\n\t   * @param {Object} [props={}]\n\t   *        An object of properties that should be set on the element.\n\t   *\n\t   * @param {Object} [attributes={}]\n\t   *        An object of attributes that should be set on the element.\n\t   *\n\t   * @return {Element}\n\t   *         The element that gets created.\n\t   */\n\t\n\t\n\t  ClickableComponent.prototype.createEl = function createEl() {\n\t    var tag = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'div';\n\t    var props = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\t    var attributes = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n\t\n\t    props = (0, _obj.assign)({\n\t      className: this.buildCSSClass(),\n\t      tabIndex: 0\n\t    }, props);\n\t\n\t    if (tag === 'button') {\n\t      _log2['default'].error('Creating a ClickableComponent with an HTML element of ' + tag + ' is not supported; use a Button instead.');\n\t    }\n\t\n\t    // Add ARIA attributes for clickable element which is not a native HTML button\n\t    attributes = (0, _obj.assign)({\n\t      'role': 'button',\n\t\n\t      // let the screen reader user know that the text of the element may change\n\t      'aria-live': 'polite'\n\t    }, attributes);\n\t\n\t    this.tabIndex_ = props.tabIndex;\n\t\n\t    var el = _Component.prototype.createEl.call(this, tag, props, attributes);\n\t\n\t    this.createControlTextEl(el);\n\t\n\t    return el;\n\t  };\n\t\n\t  /**\n\t   * Create a control text element on this `Component`\n\t   *\n\t   * @param {Element} [el]\n\t   *        Parent element for the control text.\n\t   *\n\t   * @return {Element}\n\t   *         The control text element that gets created.\n\t   */\n\t\n\t\n\t  ClickableComponent.prototype.createControlTextEl = function createControlTextEl(el) {\n\t    this.controlTextEl_ = Dom.createEl('span', {\n\t      className: 'vjs-control-text'\n\t    });\n\t\n\t    if (el) {\n\t      el.appendChild(this.controlTextEl_);\n\t    }\n\t\n\t    this.controlText(this.controlText_, el);\n\t\n\t    return this.controlTextEl_;\n\t  };\n\t\n\t  /**\n\t   * Get or set the localize text to use for the controls on the `Component`.\n\t   *\n\t   * @param {string} [text]\n\t   *        Control text for element.\n\t   *\n\t   * @param {Element} [el=this.el()]\n\t   *        Element to set the title on.\n\t   *\n\t   * @return {string|ClickableComponent}\n\t   *         - The control text when getting\n\t   *         - Returns itself when setting; method can be chained.\n\t   */\n\t\n\t\n\t  ClickableComponent.prototype.controlText = function controlText(text) {\n\t    var el = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.el();\n\t\n\t    if (!text) {\n\t      return this.controlText_ || 'Need Text';\n\t    }\n\t\n\t    var localizedText = this.localize(text);\n\t\n\t    this.controlText_ = text;\n\t    this.controlTextEl_.innerHTML = localizedText;\n\t\n\t    if (!this.nonIconControl) {\n\t      // Set title attribute if only an icon is shown\n\t      el.setAttribute('title', localizedText);\n\t    }\n\t\n\t    return this;\n\t  };\n\t\n\t  /**\n\t   * Builds the default DOM `className`.\n\t   *\n\t   * @return {string}\n\t   *         The DOM `className` for this object.\n\t   */\n\t\n\t\n\t  ClickableComponent.prototype.buildCSSClass = function buildCSSClass() {\n\t    return 'vjs-control vjs-button ' + _Component.prototype.buildCSSClass.call(this);\n\t  };\n\t\n\t  /**\n\t   * Enable this `Component`s element.\n\t   *\n\t   * @return {ClickableComponent}\n\t   *         Returns itself; method can be chained.\n\t   */\n\t\n\t\n\t  ClickableComponent.prototype.enable = function enable() {\n\t    this.removeClass('vjs-disabled');\n\t    this.el_.setAttribute('aria-disabled', 'false');\n\t    if (typeof this.tabIndex_ !== 'undefined') {\n\t      this.el_.setAttribute('tabIndex', this.tabIndex_);\n\t    }\n\t    this.on('tap', this.handleClick);\n\t    this.on('click', this.handleClick);\n\t    this.on('focus', this.handleFocus);\n\t    this.on('blur', this.handleBlur);\n\t    return this;\n\t  };\n\t\n\t  /**\n\t   * Disable this `Component`s element.\n\t   *\n\t   * @return {ClickableComponent}\n\t   *         Returns itself; method can be chained.\n\t   */\n\t\n\t\n\t  ClickableComponent.prototype.disable = function disable() {\n\t    this.addClass('vjs-disabled');\n\t    this.el_.setAttribute('aria-disabled', 'true');\n\t    if (typeof this.tabIndex_ !== 'undefined') {\n\t      this.el_.removeAttribute('tabIndex');\n\t    }\n\t    this.off('tap', this.handleClick);\n\t    this.off('click', this.handleClick);\n\t    this.off('focus', this.handleFocus);\n\t    this.off('blur', this.handleBlur);\n\t    return this;\n\t  };\n\t\n\t  /**\n\t   * This gets called when a `ClickableComponent` gets:\n\t   * - Clicked (via the `click` event, listening starts in the constructor)\n\t   * - Tapped (via the `tap` event, listening starts in the constructor)\n\t   * - The following things happen in order:\n\t   *   1. {@link ClickableComponent#handleFocus} is called via a `focus` event on the\n\t   *      `ClickableComponent`.\n\t   *   2. {@link ClickableComponent#handleFocus} adds a listener for `keydown` on using\n\t   *      {@link ClickableComponent#handleKeyPress}.\n\t   *   3. `ClickableComponent` has not had a `blur` event (`blur` means that focus was lost). The user presses\n\t   *      the space or enter key.\n\t   *   4. {@link ClickableComponent#handleKeyPress} calls this function with the `keydown`\n\t   *      event as a parameter.\n\t   *\n\t   * @param {EventTarget~Event} event\n\t   *        The `keydown`, `tap`, or `click` event that caused this function to be\n\t   *        called.\n\t   *\n\t   * @listens tap\n\t   * @listens click\n\t   * @abstract\n\t   */\n\t\n\t\n\t  ClickableComponent.prototype.handleClick = function handleClick(event) {};\n\t\n\t  /**\n\t   * This gets called when a `ClickableComponent` gains focus via a `focus` event.\n\t   * Turns on listening for `keydown` events. When they happen it\n\t   * calls `this.handleKeyPress`.\n\t   *\n\t   * @param {EventTarget~Event} event\n\t   *        The `focus` event that caused this function to be called.\n\t   *\n\t   * @listens focus\n\t   */\n\t\n\t\n\t  ClickableComponent.prototype.handleFocus = function handleFocus(event) {\n\t    Events.on(_document2['default'], 'keydown', Fn.bind(this, this.handleKeyPress));\n\t  };\n\t\n\t  /**\n\t   * Called when this ClickableComponent has focus and a key gets pressed down. By\n\t   * default it will call `this.handleClick` when the key is space or enter.\n\t   *\n\t   * @param {EventTarget~Event} event\n\t   *        The `keydown` event that caused this function to be called.\n\t   *\n\t   * @listens keydown\n\t   */\n\t\n\t\n\t  ClickableComponent.prototype.handleKeyPress = function handleKeyPress(event) {\n\t\n\t    // Support Space (32) or Enter (13) key operation to fire a click event\n\t    if (event.which === 32 || event.which === 13) {\n\t      event.preventDefault();\n\t      this.handleClick(event);\n\t    } else if (_Component.prototype.handleKeyPress) {\n\t\n\t      // Pass keypress handling up for unsupported keys\n\t      _Component.prototype.handleKeyPress.call(this, event);\n\t    }\n\t  };\n\t\n\t  /**\n\t   * Called when a `ClickableComponent` loses focus. Turns off the listener for\n\t   * `keydown` events. Which Stops `this.handleKeyPress` from getting called.\n\t   *\n\t   * @param {EventTarget~Event} event\n\t   *        The `blur` event that caused this function to be called.\n\t   *\n\t   * @listens blur\n\t   */\n\t\n\t\n\t  ClickableComponent.prototype.handleBlur = function handleBlur(event) {\n\t    Events.off(_document2['default'], 'keydown', Fn.bind(this, this.handleKeyPress));\n\t  };\n\t\n\t  return ClickableComponent;\n\t}(_component2['default']);\n\t\n\t_component2['default'].registerComponent('ClickableComponent', ClickableComponent);\n\texports['default'] = ClickableComponent;\n\n\n/***/ },\n/* 58 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\texports.__esModule = true;\n\t\n\tvar _component = __webpack_require__(16);\n\t\n\tvar _component2 = _interopRequireDefault(_component);\n\t\n\tvar _fn = __webpack_require__(17);\n\t\n\tvar Fn = _interopRequireWildcard(_fn);\n\t\n\tvar _window = __webpack_require__(4);\n\t\n\tvar _window2 = _interopRequireDefault(_window);\n\t\n\tfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj['default'] = obj; return newObj; } }\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /**\n\t                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * @file text-track-display.js\n\t                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                */\n\t\n\t\n\tvar darkGray = '#222';\n\tvar lightGray = '#ccc';\n\tvar fontMap = {\n\t  monospace: 'monospace',\n\t  sansSerif: 'sans-serif',\n\t  serif: 'serif',\n\t  monospaceSansSerif: '\"Andale Mono\", \"Lucida Console\", monospace',\n\t  monospaceSerif: '\"Courier New\", monospace',\n\t  proportionalSansSerif: 'sans-serif',\n\t  proportionalSerif: 'serif',\n\t  casual: '\"Comic Sans MS\", Impact, fantasy',\n\t  script: '\"Monotype Corsiva\", cursive',\n\t  smallcaps: '\"Andale Mono\", \"Lucida Console\", monospace, sans-serif'\n\t};\n\t\n\t/**\n\t * Construct an rgba color from a given hex color code.\n\t *\n\t * @param {number} color\n\t *        Hex number for color, like #f0e.\n\t *\n\t * @param {number} opacity\n\t *        Value for opacity, 0.0 - 1.0.\n\t *\n\t * @return {string}\n\t *         The rgba color that was created, like 'rgba(255, 0, 0, 0.3)'.\n\t *\n\t * @private\n\t */\n\tfunction constructColor(color, opacity) {\n\t  return 'rgba(' +\n\t  // color looks like \"#f0e\"\n\t  parseInt(color[1] + color[1], 16) + ',' + parseInt(color[2] + color[2], 16) + ',' + parseInt(color[3] + color[3], 16) + ',' + opacity + ')';\n\t}\n\t\n\t/**\n\t * Try to update the style of a DOM element. Some style changes will throw an error,\n\t * particularly in IE8. Those should be noops.\n\t *\n\t * @param {Element} el\n\t *        The DOM element to be styled.\n\t *\n\t * @param {string} style\n\t *        The CSS property on the element that should be styled.\n\t *\n\t * @param {string} rule\n\t *        The style rule that should be applied to the property.\n\t */\n\tfunction tryUpdateStyle(el, style, rule) {\n\t  try {\n\t    el.style[style] = rule;\n\t  } catch (e) {\n\t\n\t    // Satisfies linter.\n\t    return;\n\t  }\n\t}\n\t\n\t/**\n\t * The component for displaying text track cues.\n\t *\n\t * @extends Component\n\t */\n\t\n\tvar TextTrackDisplay = function (_Component) {\n\t  _inherits(TextTrackDisplay, _Component);\n\t\n\t  /**\n\t   * Creates an instance of this class.\n\t   *\n\t   * @param {Player} player\n\t   *        The `Player` that this class should be attached to.\n\t   *\n\t   * @param {Object} [options]\n\t   *        The key/value store of player options.\n\t   *\n\t   * @param {Component~ReadyCallback} [ready]\n\t   *        The function to call when `TextTrackDisplay` is ready.\n\t   */\n\t  function TextTrackDisplay(player, options, ready) {\n\t    _classCallCheck(this, TextTrackDisplay);\n\t\n\t    var _this = _possibleConstructorReturn(this, _Component.call(this, player, options, ready));\n\t\n\t    player.on('loadstart', Fn.bind(_this, _this.toggleDisplay));\n\t    player.on('texttrackchange', Fn.bind(_this, _this.updateDisplay));\n\t\n\t    // This used to be called during player init, but was causing an error\n\t    // if a track should show by default and the display hadn't loaded yet.\n\t    // Should probably be moved to an external track loader when we support\n\t    // tracks that don't need a display.\n\t    player.ready(Fn.bind(_this, function () {\n\t      if (player.tech_ && player.tech_.featuresNativeTextTracks) {\n\t        this.hide();\n\t        return;\n\t      }\n\t\n\t      player.on('fullscreenchange', Fn.bind(this, this.updateDisplay));\n\t\n\t      var tracks = this.options_.playerOptions.tracks || [];\n\t\n\t      for (var i = 0; i < tracks.length; i++) {\n\t        this.player_.addRemoteTextTrack(tracks[i], true);\n\t      }\n\t\n\t      var modes = { captions: 1, subtitles: 1 };\n\t      var trackList = this.player_.textTracks();\n\t      var firstDesc = void 0;\n\t      var firstCaptions = void 0;\n\t\n\t      if (trackList) {\n\t        for (var _i = 0; _i < trackList.length; _i++) {\n\t          var track = trackList[_i];\n\t\n\t          if (track['default']) {\n\t            if (track.kind === 'descriptions' && !firstDesc) {\n\t              firstDesc = track;\n\t            } else if (track.kind in modes && !firstCaptions) {\n\t              firstCaptions = track;\n\t            }\n\t          }\n\t        }\n\t\n\t        // We want to show the first default track but captions and subtitles\n\t        // take precedence over descriptions.\n\t        // So, display the first default captions or subtitles track\n\t        // and otherwise the first default descriptions track.\n\t        if (firstCaptions) {\n\t          firstCaptions.mode = 'showing';\n\t        } else if (firstDesc) {\n\t          firstDesc.mode = 'showing';\n\t        }\n\t      }\n\t    }));\n\t    return _this;\n\t  }\n\t\n\t  /**\n\t   * Turn display of {@link TextTrack}'s from the current state into the other state.\n\t   * There are only two states:\n\t   * - 'shown'\n\t   * - 'hidden'\n\t   *\n\t   * @listens Player#loadstart\n\t   */\n\t\n\t\n\t  TextTrackDisplay.prototype.toggleDisplay = function toggleDisplay() {\n\t    if (this.player_.tech_ && this.player_.tech_.featuresNativeTextTracks) {\n\t      this.hide();\n\t    } else {\n\t      this.show();\n\t    }\n\t  };\n\t\n\t  /**\n\t   * Create the {@link Component}'s DOM element.\n\t   *\n\t   * @return {Element}\n\t   *         The element that was created.\n\t   */\n\t\n\t\n\t  TextTrackDisplay.prototype.createEl = function createEl() {\n\t    return _Component.prototype.createEl.call(this, 'div', {\n\t      className: 'vjs-text-track-display'\n\t    }, {\n\t      'aria-live': 'off',\n\t      'aria-atomic': 'true'\n\t    });\n\t  };\n\t\n\t  /**\n\t   * Clear all displayed {@link TextTrack}s.\n\t   */\n\t\n\t\n\t  TextTrackDisplay.prototype.clearDisplay = function clearDisplay() {\n\t    if (typeof _window2['default'].WebVTT === 'function') {\n\t      _window2['default'].WebVTT.processCues(_window2['default'], [], this.el_);\n\t    }\n\t  };\n\t\n\t  /**\n\t   * Update the displayed TextTrack when a either a {@link Player#texttrackchange} or\n\t   * a {@link Player#fullscreenchange} is fired.\n\t   *\n\t   * @listens Player#texttrackchange\n\t   * @listens Player#fullscreenchange\n\t   */\n\t\n\t\n\t  TextTrackDisplay.prototype.updateDisplay = function updateDisplay() {\n\t    var tracks = this.player_.textTracks();\n\t\n\t    this.clearDisplay();\n\t\n\t    if (!tracks) {\n\t      return;\n\t    }\n\t\n\t    // Track display prioritization model: if multiple tracks are 'showing',\n\t    //  display the first 'subtitles' or 'captions' track which is 'showing',\n\t    //  otherwise display the first 'descriptions' track which is 'showing'\n\t\n\t    var descriptionsTrack = null;\n\t    var captionsSubtitlesTrack = null;\n\t\n\t    var i = tracks.length;\n\t\n\t    while (i--) {\n\t      var track = tracks[i];\n\t\n\t      if (track.mode === 'showing') {\n\t        if (track.kind === 'descriptions') {\n\t          descriptionsTrack = track;\n\t        } else {\n\t          captionsSubtitlesTrack = track;\n\t        }\n\t      }\n\t    }\n\t\n\t    if (captionsSubtitlesTrack) {\n\t      if (this.getAttribute('aria-live') !== 'off') {\n\t        this.setAttribute('aria-live', 'off');\n\t      }\n\t      this.updateForTrack(captionsSubtitlesTrack);\n\t    } else if (descriptionsTrack) {\n\t      if (this.getAttribute('aria-live') !== 'assertive') {\n\t        this.setAttribute('aria-live', 'assertive');\n\t      }\n\t      this.updateForTrack(descriptionsTrack);\n\t    }\n\t  };\n\t\n\t  /**\n\t   * Add an {@link Texttrack} to to the {@link Tech}s {@link TextTrackList}.\n\t   *\n\t   * @param {TextTrack} track\n\t   *        Text track object to be added to the list.\n\t   */\n\t\n\t\n\t  TextTrackDisplay.prototype.updateForTrack = function updateForTrack(track) {\n\t    if (typeof _window2['default'].WebVTT !== 'function' || !track.activeCues) {\n\t      return;\n\t    }\n\t\n\t    var overrides = this.player_.textTrackSettings.getValues();\n\t    var cues = [];\n\t\n\t    for (var _i2 = 0; _i2 < track.activeCues.length; _i2++) {\n\t      cues.push(track.activeCues[_i2]);\n\t    }\n\t\n\t    _window2['default'].WebVTT.processCues(_window2['default'], cues, this.el_);\n\t\n\t    var i = cues.length;\n\t\n\t    while (i--) {\n\t      var cue = cues[i];\n\t\n\t      if (!cue) {\n\t        continue;\n\t      }\n\t\n\t      var cueDiv = cue.displayState;\n\t\n\t      if (overrides.color) {\n\t        cueDiv.firstChild.style.color = overrides.color;\n\t      }\n\t      if (overrides.textOpacity) {\n\t        tryUpdateStyle(cueDiv.firstChild, 'color', constructColor(overrides.color || '#fff', overrides.textOpacity));\n\t      }\n\t      if (overrides.backgroundColor) {\n\t        cueDiv.firstChild.style.backgroundColor = overrides.backgroundColor;\n\t      }\n\t      if (overrides.backgroundOpacity) {\n\t        tryUpdateStyle(cueDiv.firstChild, 'backgroundColor', constructColor(overrides.backgroundColor || '#000', overrides.backgroundOpacity));\n\t      }\n\t      if (overrides.windowColor) {\n\t        if (overrides.windowOpacity) {\n\t          tryUpdateStyle(cueDiv, 'backgroundColor', constructColor(overrides.windowColor, overrides.windowOpacity));\n\t        } else {\n\t          cueDiv.style.backgroundColor = overrides.windowColor;\n\t        }\n\t      }\n\t      if (overrides.edgeStyle) {\n\t        if (overrides.edgeStyle === 'dropshadow') {\n\t          cueDiv.firstChild.style.textShadow = '2px 2px 3px ' + darkGray + ', 2px 2px 4px ' + darkGray + ', 2px 2px 5px ' + darkGray;\n\t        } else if (overrides.edgeStyle === 'raised') {\n\t          cueDiv.firstChild.style.textShadow = '1px 1px ' + darkGray + ', 2px 2px ' + darkGray + ', 3px 3px ' + darkGray;\n\t        } else if (overrides.edgeStyle === 'depressed') {\n\t          cueDiv.firstChild.style.textShadow = '1px 1px ' + lightGray + ', 0 1px ' + lightGray + ', -1px -1px ' + darkGray + ', 0 -1px ' + darkGray;\n\t        } else if (overrides.edgeStyle === 'uniform') {\n\t          cueDiv.firstChild.style.textShadow = '0 0 4px ' + darkGray + ', 0 0 4px ' + darkGray + ', 0 0 4px ' + darkGray + ', 0 0 4px ' + darkGray;\n\t        }\n\t      }\n\t      if (overrides.fontPercent && overrides.fontPercent !== 1) {\n\t        var fontSize = _window2['default'].parseFloat(cueDiv.style.fontSize);\n\t\n\t        cueDiv.style.fontSize = fontSize * overrides.fontPercent + 'px';\n\t        cueDiv.style.height = 'auto';\n\t        cueDiv.style.top = 'auto';\n\t        cueDiv.style.bottom = '2px';\n\t      }\n\t      if (overrides.fontFamily && overrides.fontFamily !== 'default') {\n\t        if (overrides.fontFamily === 'small-caps') {\n\t          cueDiv.firstChild.style.fontVariant = 'small-caps';\n\t        } else {\n\t          cueDiv.firstChild.style.fontFamily = fontMap[overrides.fontFamily];\n\t        }\n\t      }\n\t    }\n\t  };\n\t\n\t  return TextTrackDisplay;\n\t}(_component2['default']);\n\t\n\t_component2['default'].registerComponent('TextTrackDisplay', TextTrackDisplay);\n\texports['default'] = TextTrackDisplay;\n\n\n/***/ },\n/* 59 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\texports.__esModule = true;\n\t\n\tvar _component = __webpack_require__(16);\n\t\n\tvar _component2 = _interopRequireDefault(_component);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /**\n\t                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * @file loading-spinner.js\n\t                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                */\n\t\n\t\n\t/**\n\t * A loading spinner for use during waiting/loading events.\n\t *\n\t * @extends Component\n\t */\n\tvar LoadingSpinner = function (_Component) {\n\t  _inherits(LoadingSpinner, _Component);\n\t\n\t  function LoadingSpinner() {\n\t    _classCallCheck(this, LoadingSpinner);\n\t\n\t    return _possibleConstructorReturn(this, _Component.apply(this, arguments));\n\t  }\n\t\n\t  /**\n\t   * Create the `LoadingSpinner`s DOM element.\n\t   *\n\t   * @return {Element}\n\t   *         The dom element that gets created.\n\t   */\n\t  LoadingSpinner.prototype.createEl = function createEl() {\n\t    return _Component.prototype.createEl.call(this, 'div', {\n\t      className: 'vjs-loading-spinner',\n\t      dir: 'ltr'\n\t    });\n\t  };\n\t\n\t  return LoadingSpinner;\n\t}(_component2['default']);\n\t\n\t_component2['default'].registerComponent('LoadingSpinner', LoadingSpinner);\n\texports['default'] = LoadingSpinner;\n\n\n/***/ },\n/* 60 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\texports.__esModule = true;\n\t\n\tvar _button = __webpack_require__(61);\n\t\n\tvar _button2 = _interopRequireDefault(_button);\n\t\n\tvar _component = __webpack_require__(16);\n\t\n\tvar _component2 = _interopRequireDefault(_component);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /**\n\t                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * @file big-play-button.js\n\t                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                */\n\t\n\t\n\t/**\n\t * The initial play button that shows before the video has played. The hiding of the\n\t * `BigPlayButton` get done via CSS and `Player` states.\n\t *\n\t * @extends Button\n\t */\n\tvar BigPlayButton = function (_Button) {\n\t  _inherits(BigPlayButton, _Button);\n\t\n\t  function BigPlayButton() {\n\t    _classCallCheck(this, BigPlayButton);\n\t\n\t    return _possibleConstructorReturn(this, _Button.apply(this, arguments));\n\t  }\n\t\n\t  /**\n\t   * Builds the default DOM `className`.\n\t   *\n\t   * @return {string}\n\t   *         The DOM `className` for this object. Always returns 'vjs-big-play-button'.\n\t   */\n\t  BigPlayButton.prototype.buildCSSClass = function buildCSSClass() {\n\t    return 'vjs-big-play-button';\n\t  };\n\t\n\t  /**\n\t   * This gets called when a `BigPlayButton` \"clicked\". See {@link ClickableComponent}\n\t   * for more detailed information on what a click can be.\n\t   *\n\t   * @param {EventTarget~Event} event\n\t   *        The `keydown`, `tap`, or `click` event that caused this function to be\n\t   *        called.\n\t   *\n\t   * @listens tap\n\t   * @listens click\n\t   */\n\t\n\t\n\t  BigPlayButton.prototype.handleClick = function handleClick(event) {\n\t    this.player_.play();\n\t  };\n\t\n\t  return BigPlayButton;\n\t}(_button2['default']);\n\t\n\t/**\n\t * The text that should display over the `BigPlayButton`s controls. Added to for localization.\n\t *\n\t * @type {string}\n\t * @private\n\t */\n\t\n\t\n\tBigPlayButton.prototype.controlText_ = 'Play Video';\n\t\n\t_component2['default'].registerComponent('BigPlayButton', BigPlayButton);\n\texports['default'] = BigPlayButton;\n\n\n/***/ },\n/* 61 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\texports.__esModule = true;\n\t\n\tvar _clickableComponent = __webpack_require__(57);\n\t\n\tvar _clickableComponent2 = _interopRequireDefault(_clickableComponent);\n\t\n\tvar _component = __webpack_require__(16);\n\t\n\tvar _component2 = _interopRequireDefault(_component);\n\t\n\tvar _log = __webpack_require__(10);\n\t\n\tvar _log2 = _interopRequireDefault(_log);\n\t\n\tvar _obj = __webpack_require__(12);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /**\n\t                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * @file button.js\n\t                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                */\n\t\n\t\n\t/**\n\t * Base class for all buttons.\n\t *\n\t * @extends ClickableComponent\n\t */\n\tvar Button = function (_ClickableComponent) {\n\t  _inherits(Button, _ClickableComponent);\n\t\n\t  function Button() {\n\t    _classCallCheck(this, Button);\n\t\n\t    return _possibleConstructorReturn(this, _ClickableComponent.apply(this, arguments));\n\t  }\n\t\n\t  /**\n\t   * Create the `Button`s DOM element.\n\t   *\n\t   * @param {string} [tag=button]\n\t   *        Element's node type. e.g. 'button'\n\t   *\n\t   * @param {Object} [props={}]\n\t   *        An object of properties that should be set on the element.\n\t   *\n\t   * @param {Object} [attributes={}]\n\t   *        An object of attributes that should be set on the element.\n\t   *\n\t   * @return {Element}\n\t   *         The element that gets created.\n\t   */\n\t  Button.prototype.createEl = function createEl() {\n\t    var tag = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'button';\n\t    var props = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\t    var attributes = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n\t\n\t    props = (0, _obj.assign)({\n\t      className: this.buildCSSClass()\n\t    }, props);\n\t\n\t    if (tag !== 'button') {\n\t      _log2['default'].warn('Creating a Button with an HTML element of ' + tag + ' is deprecated; use ClickableComponent instead.');\n\t\n\t      // Add properties for clickable element which is not a native HTML button\n\t      props = (0, _obj.assign)({\n\t        tabIndex: 0\n\t      }, props);\n\t\n\t      // Add ARIA attributes for clickable element which is not a native HTML button\n\t      attributes = (0, _obj.assign)({\n\t        role: 'button'\n\t      }, attributes);\n\t    }\n\t\n\t    // Add attributes for button element\n\t    attributes = (0, _obj.assign)({\n\t\n\t      // Necessary since the default button type is \"submit\"\n\t      'type': 'button',\n\t\n\t      // let the screen reader user know that the text of the button may change\n\t      'aria-live': 'polite'\n\t    }, attributes);\n\t\n\t    var el = _component2['default'].prototype.createEl.call(this, tag, props, attributes);\n\t\n\t    this.createControlTextEl(el);\n\t\n\t    return el;\n\t  };\n\t\n\t  /**\n\t   * Add a child `Component` inside of this `Button`.\n\t   *\n\t   * @param {string|Component} child\n\t   *        The name or instance of a child to add.\n\t   *\n\t   * @param {Object} [options={}]\n\t   *        The key/value store of options that will get passed to children of\n\t   *        the child.\n\t   *\n\t   * @return {Component}\n\t   *         The `Component` that gets added as a child. When using a string the\n\t   *         `Component` will get created by this process.\n\t   *\n\t   * @deprecated since version 5\n\t   */\n\t\n\t\n\t  Button.prototype.addChild = function addChild(child) {\n\t    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\t\n\t    var className = this.constructor.name;\n\t\n\t    _log2['default'].warn('Adding an actionable (user controllable) child to a Button (' + className + ') is not supported; use a ClickableComponent instead.');\n\t\n\t    // Avoid the error message generated by ClickableComponent's addChild method\n\t    return _component2['default'].prototype.addChild.call(this, child, options);\n\t  };\n\t\n\t  /**\n\t   * Enable the `Button` element so that it can be activated or clicked. Use this with\n\t   * {@link Button#disable}.\n\t   */\n\t\n\t\n\t  Button.prototype.enable = function enable() {\n\t    _ClickableComponent.prototype.enable.call(this);\n\t    this.el_.removeAttribute('disabled');\n\t  };\n\t\n\t  /**\n\t   * Enable the `Button` element so that it cannot be activated or clicked. Use this with\n\t   * {@link Button#enable}.\n\t   */\n\t\n\t\n\t  Button.prototype.disable = function disable() {\n\t    _ClickableComponent.prototype.disable.call(this);\n\t    this.el_.setAttribute('disabled', 'disabled');\n\t  };\n\t\n\t  /**\n\t   * This gets called when a `Button` has focus and `keydown` is triggered via a key\n\t   * press.\n\t   *\n\t   * @param {EventTarget~Event} event\n\t   *        The event that caused this function to get called.\n\t   *\n\t   * @listens keydown\n\t   */\n\t\n\t\n\t  Button.prototype.handleKeyPress = function handleKeyPress(event) {\n\t\n\t    // Ignore Space (32) or Enter (13) key operation, which is handled by the browser for a button.\n\t    if (event.which === 32 || event.which === 13) {\n\t      return;\n\t    }\n\t\n\t    // Pass keypress handling up for unsupported keys\n\t    _ClickableComponent.prototype.handleKeyPress.call(this, event);\n\t  };\n\t\n\t  return Button;\n\t}(_clickableComponent2['default']);\n\t\n\t_component2['default'].registerComponent('Button', Button);\n\texports['default'] = Button;\n\n\n/***/ },\n/* 62 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\texports.__esModule = true;\n\t\n\tvar _button = __webpack_require__(61);\n\t\n\tvar _button2 = _interopRequireDefault(_button);\n\t\n\tvar _component = __webpack_require__(16);\n\t\n\tvar _component2 = _interopRequireDefault(_component);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /**\n\t                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * @file close-button.js\n\t                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                */\n\t\n\t\n\t/**\n\t * The `CloseButton` is a `{@link Button}` that fires a `close` event when\n\t * it gets clicked.\n\t *\n\t * @extends Button\n\t */\n\tvar CloseButton = function (_Button) {\n\t  _inherits(CloseButton, _Button);\n\t\n\t  /**\n\t   * Creates an instance of the this class.\n\t   *\n\t   * @param  {Player} player\n\t   *         The `Player` that this class should be attached to.\n\t   *\n\t   * @param  {Object} [options]\n\t   *         The key/value store of player options.\n\t   */\n\t  function CloseButton(player, options) {\n\t    _classCallCheck(this, CloseButton);\n\t\n\t    var _this = _possibleConstructorReturn(this, _Button.call(this, player, options));\n\t\n\t    _this.controlText(options && options.controlText || _this.localize('Close'));\n\t    return _this;\n\t  }\n\t\n\t  /**\n\t   * Builds the default DOM `className`.\n\t   *\n\t   * @return {string}\n\t   *         The DOM `className` for this object.\n\t   */\n\t\n\t\n\t  CloseButton.prototype.buildCSSClass = function buildCSSClass() {\n\t    return 'vjs-close-button ' + _Button.prototype.buildCSSClass.call(this);\n\t  };\n\t\n\t  /**\n\t   * This gets called when a `CloseButton` gets clicked. See\n\t   * {@link ClickableComponent#handleClick} for more information on when this will be\n\t   * triggered\n\t   *\n\t   * @param {EventTarget~Event} event\n\t   *        The `keydown`, `tap`, or `click` event that caused this function to be\n\t   *        called.\n\t   *\n\t   * @listens tap\n\t   * @listens click\n\t   * @fires CloseButton#close\n\t   */\n\t\n\t\n\t  CloseButton.prototype.handleClick = function handleClick(event) {\n\t\n\t    /**\n\t     * Triggered when the a `CloseButton` is clicked.\n\t     *\n\t     * @event CloseButton#close\n\t     * @type {EventTarget~Event}\n\t     *\n\t     * @property {boolean} [bubbles=false]\n\t     *           set to false so that the close event does not\n\t     *           bubble up to parents if there is no listener\n\t     */\n\t    this.trigger({ type: 'close', bubbles: false });\n\t  };\n\t\n\t  return CloseButton;\n\t}(_button2['default']);\n\t\n\t_component2['default'].registerComponent('CloseButton', CloseButton);\n\texports['default'] = CloseButton;\n\n\n/***/ },\n/* 63 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\texports.__esModule = true;\n\t\n\tvar _component = __webpack_require__(16);\n\t\n\tvar _component2 = _interopRequireDefault(_component);\n\t\n\t__webpack_require__(64);\n\t\n\t__webpack_require__(65);\n\t\n\t__webpack_require__(67);\n\t\n\t__webpack_require__(68);\n\t\n\t__webpack_require__(69);\n\t\n\t__webpack_require__(70);\n\t\n\t__webpack_require__(71);\n\t\n\t__webpack_require__(79);\n\t\n\t__webpack_require__(80);\n\t\n\t__webpack_require__(83);\n\t\n\t__webpack_require__(86);\n\t\n\t__webpack_require__(87);\n\t\n\t__webpack_require__(96);\n\t\n\t__webpack_require__(97);\n\t\n\t__webpack_require__(98);\n\t\n\t__webpack_require__(100);\n\t\n\t__webpack_require__(102);\n\t\n\t__webpack_require__(104);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /**\n\t                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * @file control-bar.js\n\t                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                */\n\t\n\t\n\t// Required children\n\t\n\t\n\t/**\n\t * Container of main controls.\n\t *\n\t * @extends Component\n\t */\n\tvar ControlBar = function (_Component) {\n\t  _inherits(ControlBar, _Component);\n\t\n\t  function ControlBar() {\n\t    _classCallCheck(this, ControlBar);\n\t\n\t    return _possibleConstructorReturn(this, _Component.apply(this, arguments));\n\t  }\n\t\n\t  /**\n\t   * Create the `Component`'s DOM element\n\t   *\n\t   * @return {Element}\n\t   *         The element that was created.\n\t   */\n\t  ControlBar.prototype.createEl = function createEl() {\n\t    return _Component.prototype.createEl.call(this, 'div', {\n\t      className: 'vjs-control-bar',\n\t      dir: 'ltr'\n\t    }, {\n\t      // The control bar is a group, so it can contain menuitems\n\t      role: 'group'\n\t    });\n\t  };\n\t\n\t  return ControlBar;\n\t}(_component2['default']);\n\t\n\t/**\n\t * Default options for `ControlBar`\n\t *\n\t * @type {Object}\n\t * @private\n\t */\n\t\n\t\n\tControlBar.prototype.options_ = {\n\t  children: ['playToggle', 'volumeMenuButton', 'currentTimeDisplay', 'timeDivider', 'durationDisplay', 'progressControl', 'liveDisplay', 'remainingTimeDisplay', 'customControlSpacer', 'playbackRateMenuButton', 'chaptersButton', 'descriptionsButton', 'subtitlesButton', 'captionsButton', 'audioTrackButton', 'fullscreenToggle']\n\t};\n\t\n\t_component2['default'].registerComponent('ControlBar', ControlBar);\n\texports['default'] = ControlBar;\n\n\n/***/ },\n/* 64 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\texports.__esModule = true;\n\t\n\tvar _button = __webpack_require__(61);\n\t\n\tvar _button2 = _interopRequireDefault(_button);\n\t\n\tvar _component = __webpack_require__(16);\n\t\n\tvar _component2 = _interopRequireDefault(_component);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /**\n\t                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * @file play-toggle.js\n\t                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                */\n\t\n\t\n\t/**\n\t * Button to toggle between play and pause.\n\t *\n\t * @extends Button\n\t */\n\tvar PlayToggle = function (_Button) {\n\t  _inherits(PlayToggle, _Button);\n\t\n\t  /**\n\t   * Creates an instance of this class.\n\t   *\n\t   * @param {Player} player\n\t   *        The `Player` that this class should be attached to.\n\t   *\n\t   * @param {Object} [options]\n\t   *        The key/value store of player options.\n\t   */\n\t  function PlayToggle(player, options) {\n\t    _classCallCheck(this, PlayToggle);\n\t\n\t    var _this = _possibleConstructorReturn(this, _Button.call(this, player, options));\n\t\n\t    _this.on(player, 'play', _this.handlePlay);\n\t    _this.on(player, 'pause', _this.handlePause);\n\t    return _this;\n\t  }\n\t\n\t  /**\n\t   * Builds the default DOM `className`.\n\t   *\n\t   * @return {string}\n\t   *         The DOM `className` for this object.\n\t   */\n\t\n\t\n\t  PlayToggle.prototype.buildCSSClass = function buildCSSClass() {\n\t    return 'vjs-play-control ' + _Button.prototype.buildCSSClass.call(this);\n\t  };\n\t\n\t  /**\n\t   * This gets called when an `PlayToggle` is \"clicked\". See\n\t   * {@link ClickableComponent} for more detailed information on what a click can be.\n\t   *\n\t   * @param {EventTarget~Event} [event]\n\t   *        The `keydown`, `tap`, or `click` event that caused this function to be\n\t   *        called.\n\t   *\n\t   * @listens tap\n\t   * @listens click\n\t   */\n\t\n\t\n\t  PlayToggle.prototype.handleClick = function handleClick(event) {\n\t    if (this.player_.paused()) {\n\t      this.player_.play();\n\t    } else {\n\t      this.player_.pause();\n\t    }\n\t  };\n\t\n\t  /**\n\t   * Add the vjs-playing class to the element so it can change appearance.\n\t   *\n\t   * @param {EventTarget~Event} [event]\n\t   *        The event that caused this function to run.\n\t   *\n\t   * @listens Player#play\n\t   */\n\t\n\t\n\t  PlayToggle.prototype.handlePlay = function handlePlay(event) {\n\t    this.removeClass('vjs-paused');\n\t    this.addClass('vjs-playing');\n\t    // change the button text to \"Pause\"\n\t    this.controlText('Pause');\n\t  };\n\t\n\t  /**\n\t   * Add the vjs-paused class to the element so it can change appearance.\n\t   *\n\t   * @param {EventTarget~Event} [event]\n\t   *        The event that caused this function to run.\n\t   *\n\t   * @listens Player#pause\n\t   */\n\t\n\t\n\t  PlayToggle.prototype.handlePause = function handlePause(event) {\n\t    this.removeClass('vjs-playing');\n\t    this.addClass('vjs-paused');\n\t    // change the button text to \"Play\"\n\t    this.controlText('Play');\n\t  };\n\t\n\t  return PlayToggle;\n\t}(_button2['default']);\n\t\n\t/**\n\t * The text that should display over the `PlayToggle`s controls. Added for localization.\n\t *\n\t * @type {string}\n\t * @private\n\t */\n\t\n\t\n\tPlayToggle.prototype.controlText_ = 'Play';\n\t\n\t_component2['default'].registerComponent('PlayToggle', PlayToggle);\n\texports['default'] = PlayToggle;\n\n\n/***/ },\n/* 65 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\texports.__esModule = true;\n\t\n\tvar _component = __webpack_require__(16);\n\t\n\tvar _component2 = _interopRequireDefault(_component);\n\t\n\tvar _dom = __webpack_require__(8);\n\t\n\tvar Dom = _interopRequireWildcard(_dom);\n\t\n\tvar _formatTime = __webpack_require__(66);\n\t\n\tvar _formatTime2 = _interopRequireDefault(_formatTime);\n\t\n\tfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj['default'] = obj; return newObj; } }\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /**\n\t                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * @file current-time-display.js\n\t                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                */\n\t\n\t\n\t/**\n\t * Displays the current time\n\t *\n\t * @extends Component\n\t */\n\tvar CurrentTimeDisplay = function (_Component) {\n\t  _inherits(CurrentTimeDisplay, _Component);\n\t\n\t  /**\n\t   * Creates an instance of this class.\n\t   *\n\t   * @param {Player} player\n\t   *        The `Player` that this class should be attached to.\n\t   *\n\t   * @param {Object} [options]\n\t   *        The key/value store of player options.\n\t   */\n\t  function CurrentTimeDisplay(player, options) {\n\t    _classCallCheck(this, CurrentTimeDisplay);\n\t\n\t    var _this = _possibleConstructorReturn(this, _Component.call(this, player, options));\n\t\n\t    _this.on(player, 'timeupdate', _this.updateContent);\n\t    return _this;\n\t  }\n\t\n\t  /**\n\t   * Create the `Component`'s DOM element\n\t   *\n\t   * @return {Element}\n\t   *         The element that was created.\n\t   */\n\t\n\t\n\t  CurrentTimeDisplay.prototype.createEl = function createEl() {\n\t    var el = _Component.prototype.createEl.call(this, 'div', {\n\t      className: 'vjs-current-time vjs-time-control vjs-control'\n\t    });\n\t\n\t    this.contentEl_ = Dom.createEl('div', {\n\t      className: 'vjs-current-time-display',\n\t      // label the current time for screen reader users\n\t      innerHTML: '<span class=\"vjs-control-text\">Current Time </span>' + '0:00'\n\t    }, {\n\t      // tell screen readers not to automatically read the time as it changes\n\t      'aria-live': 'off'\n\t    });\n\t\n\t    el.appendChild(this.contentEl_);\n\t    return el;\n\t  };\n\t\n\t  /**\n\t   * Update current time display\n\t   *\n\t   * @param {EventTarget~Event} [event]\n\t   *        The `timeupdate` event that caused this function to run.\n\t   *\n\t   * @listens Player#timeupdate\n\t   */\n\t\n\t\n\t  CurrentTimeDisplay.prototype.updateContent = function updateContent(event) {\n\t    // Allows for smooth scrubbing, when player can't keep up.\n\t    var time = this.player_.scrubbing() ? this.player_.getCache().currentTime : this.player_.currentTime();\n\t    var localizedText = this.localize('Current Time');\n\t    var formattedTime = (0, _formatTime2['default'])(time, this.player_.duration());\n\t\n\t    if (formattedTime !== this.formattedTime_) {\n\t      this.formattedTime_ = formattedTime;\n\t      this.contentEl_.innerHTML = '<span class=\"vjs-control-text\">' + localizedText + '</span> ' + formattedTime;\n\t    }\n\t  };\n\t\n\t  return CurrentTimeDisplay;\n\t}(_component2['default']);\n\t\n\t_component2['default'].registerComponent('CurrentTimeDisplay', CurrentTimeDisplay);\n\texports['default'] = CurrentTimeDisplay;\n\n\n/***/ },\n/* 66 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\texports.__esModule = true;\n\t/**\n\t * @file format-time.js\n\t * @module Format-time\n\t */\n\t\n\t/**\n\t * Format seconds as a time string, H:MM:SS or M:SS. Supplying a guide (in seconds)\n\t * will force a number of leading zeros to cover the length of the guide.\n\t *\n\t * @param {number} seconds\n\t *        Number of seconds to be turned into a string\n\t *\n\t * @param {number} guide\n\t *        Number (in seconds) to model the string after\n\t *\n\t * @return {string}\n\t *         Time formatted as H:MM:SS or M:SS\n\t */\n\tfunction formatTime(seconds) {\n\t  var guide = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : seconds;\n\t\n\t  seconds = seconds < 0 ? 0 : seconds;\n\t  var s = Math.floor(seconds % 60);\n\t  var m = Math.floor(seconds / 60 % 60);\n\t  var h = Math.floor(seconds / 3600);\n\t  var gm = Math.floor(guide / 60 % 60);\n\t  var gh = Math.floor(guide / 3600);\n\t\n\t  // handle invalid times\n\t  if (isNaN(seconds) || seconds === Infinity) {\n\t    // '-' is false for all relational operators (e.g. <, >=) so this setting\n\t    // will add the minimum number of fields specified by the guide\n\t    h = m = s = '-';\n\t  }\n\t\n\t  // Check if we need to show hours\n\t  h = h > 0 || gh > 0 ? h + ':' : '';\n\t\n\t  // If hours are showing, we may need to add a leading zero.\n\t  // Always show at least one digit of minutes.\n\t  m = ((h || gm >= 10) && m < 10 ? '0' + m : m) + ':';\n\t\n\t  // Check if leading zero is need for seconds\n\t  s = s < 10 ? '0' + s : s;\n\t\n\t  return h + m + s;\n\t}\n\t\n\texports['default'] = formatTime;\n\n\n/***/ },\n/* 67 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\texports.__esModule = true;\n\t\n\tvar _component = __webpack_require__(16);\n\t\n\tvar _component2 = _interopRequireDefault(_component);\n\t\n\tvar _dom = __webpack_require__(8);\n\t\n\tvar Dom = _interopRequireWildcard(_dom);\n\t\n\tvar _formatTime = __webpack_require__(66);\n\t\n\tvar _formatTime2 = _interopRequireDefault(_formatTime);\n\t\n\tfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj['default'] = obj; return newObj; } }\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /**\n\t                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * @file duration-display.js\n\t                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                */\n\t\n\t\n\t/**\n\t * Displays the duration\n\t *\n\t * @extends Component\n\t */\n\tvar DurationDisplay = function (_Component) {\n\t  _inherits(DurationDisplay, _Component);\n\t\n\t  /**\n\t   * Creates an instance of this class.\n\t   *\n\t   * @param {Player} player\n\t   *        The `Player` that this class should be attached to.\n\t   *\n\t   * @param {Object} [options]\n\t   *        The key/value store of player options.\n\t   */\n\t  function DurationDisplay(player, options) {\n\t    _classCallCheck(this, DurationDisplay);\n\t\n\t    var _this = _possibleConstructorReturn(this, _Component.call(this, player, options));\n\t\n\t    _this.on(player, 'durationchange', _this.updateContent);\n\t\n\t    // Also listen for timeupdate and loadedmetadata because removing those\n\t    // listeners could have broken dependent applications/libraries. These\n\t    // can likely be removed for 6.0.\n\t    _this.on(player, 'timeupdate', _this.updateContent);\n\t    _this.on(player, 'loadedmetadata', _this.updateContent);\n\t    return _this;\n\t  }\n\t\n\t  /**\n\t   * Create the `Component`'s DOM element\n\t   *\n\t   * @return {Element}\n\t   *         The element that was created.\n\t   */\n\t\n\t\n\t  DurationDisplay.prototype.createEl = function createEl() {\n\t    var el = _Component.prototype.createEl.call(this, 'div', {\n\t      className: 'vjs-duration vjs-time-control vjs-control'\n\t    });\n\t\n\t    this.contentEl_ = Dom.createEl('div', {\n\t      className: 'vjs-duration-display',\n\t      // label the duration time for screen reader users\n\t      innerHTML: '<span class=\"vjs-control-text\">' + this.localize('Duration Time') + '</span> 0:00'\n\t    }, {\n\t      // tell screen readers not to automatically read the time as it changes\n\t      'aria-live': 'off'\n\t    });\n\t\n\t    el.appendChild(this.contentEl_);\n\t    return el;\n\t  };\n\t\n\t  /**\n\t   * Update duration time display.\n\t   *\n\t   * @param {EventTarget~Event} [event]\n\t   *        The `durationchange`, `timeupdate`, or `loadedmetadata` event that caused\n\t   *        this function to be called.\n\t   *\n\t   * @listens Player#durationchange\n\t   * @listens Player#timeupdate\n\t   * @listens Player#loadedmetadata\n\t   */\n\t\n\t\n\t  DurationDisplay.prototype.updateContent = function updateContent(event) {\n\t    var duration = this.player_.duration();\n\t\n\t    if (duration && this.duration_ !== duration) {\n\t      this.duration_ = duration;\n\t      var localizedText = this.localize('Duration Time');\n\t      var formattedTime = (0, _formatTime2['default'])(duration);\n\t\n\t      // label the duration time for screen reader users\n\t      this.contentEl_.innerHTML = '<span class=\"vjs-control-text\">' + localizedText + '</span> ' + formattedTime;\n\t    }\n\t  };\n\t\n\t  return DurationDisplay;\n\t}(_component2['default']);\n\t\n\t_component2['default'].registerComponent('DurationDisplay', DurationDisplay);\n\texports['default'] = DurationDisplay;\n\n\n/***/ },\n/* 68 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\texports.__esModule = true;\n\t\n\tvar _component = __webpack_require__(16);\n\t\n\tvar _component2 = _interopRequireDefault(_component);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /**\n\t                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * @file time-divider.js\n\t                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                */\n\t\n\t\n\t/**\n\t * The separator between the current time and duration.\n\t * Can be hidden if it's not needed in the design.\n\t *\n\t * @extends Component\n\t */\n\tvar TimeDivider = function (_Component) {\n\t  _inherits(TimeDivider, _Component);\n\t\n\t  function TimeDivider() {\n\t    _classCallCheck(this, TimeDivider);\n\t\n\t    return _possibleConstructorReturn(this, _Component.apply(this, arguments));\n\t  }\n\t\n\t  /**\n\t   * Create the component's DOM element\n\t   *\n\t   * @return {Element}\n\t   *         The element that was created.\n\t   */\n\t  TimeDivider.prototype.createEl = function createEl() {\n\t    return _Component.prototype.createEl.call(this, 'div', {\n\t      className: 'vjs-time-control vjs-time-divider',\n\t      innerHTML: '<div><span>/</span></div>'\n\t    });\n\t  };\n\t\n\t  return TimeDivider;\n\t}(_component2['default']);\n\t\n\t_component2['default'].registerComponent('TimeDivider', TimeDivider);\n\texports['default'] = TimeDivider;\n\n\n/***/ },\n/* 69 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\texports.__esModule = true;\n\t\n\tvar _component = __webpack_require__(16);\n\t\n\tvar _component2 = _interopRequireDefault(_component);\n\t\n\tvar _dom = __webpack_require__(8);\n\t\n\tvar Dom = _interopRequireWildcard(_dom);\n\t\n\tvar _formatTime = __webpack_require__(66);\n\t\n\tvar _formatTime2 = _interopRequireDefault(_formatTime);\n\t\n\tfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj['default'] = obj; return newObj; } }\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /**\n\t                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * @file remaining-time-display.js\n\t                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                */\n\t\n\t\n\t/**\n\t * Displays the time left in the video\n\t *\n\t * @extends Component\n\t */\n\tvar RemainingTimeDisplay = function (_Component) {\n\t  _inherits(RemainingTimeDisplay, _Component);\n\t\n\t  /**\n\t   * Creates an instance of this class.\n\t   *\n\t   * @param {Player} player\n\t   *        The `Player` that this class should be attached to.\n\t   *\n\t   * @param {Object} [options]\n\t   *        The key/value store of player options.\n\t   */\n\t  function RemainingTimeDisplay(player, options) {\n\t    _classCallCheck(this, RemainingTimeDisplay);\n\t\n\t    var _this = _possibleConstructorReturn(this, _Component.call(this, player, options));\n\t\n\t    _this.on(player, 'timeupdate', _this.updateContent);\n\t    _this.on(player, 'durationchange', _this.updateContent);\n\t    return _this;\n\t  }\n\t\n\t  /**\n\t   * Create the `Component`'s DOM element\n\t   *\n\t   * @return {Element}\n\t   *         The element that was created.\n\t   */\n\t\n\t\n\t  RemainingTimeDisplay.prototype.createEl = function createEl() {\n\t    var el = _Component.prototype.createEl.call(this, 'div', {\n\t      className: 'vjs-remaining-time vjs-time-control vjs-control'\n\t    });\n\t\n\t    this.contentEl_ = Dom.createEl('div', {\n\t      className: 'vjs-remaining-time-display',\n\t      // label the remaining time for screen reader users\n\t      innerHTML: '<span class=\"vjs-control-text\">' + this.localize('Remaining Time') + '</span> -0:00'\n\t    }, {\n\t      // tell screen readers not to automatically read the time as it changes\n\t      'aria-live': 'off'\n\t    });\n\t\n\t    el.appendChild(this.contentEl_);\n\t    return el;\n\t  };\n\t\n\t  /**\n\t   * Update remaining time display.\n\t   *\n\t   * @param {EventTarget~Event} [event]\n\t   *        The `timeupdate` or `durationchange` event that caused this to run.\n\t   *\n\t   * @listens Player#timeupdate\n\t   * @listens Player#durationchange\n\t   */\n\t\n\t\n\t  RemainingTimeDisplay.prototype.updateContent = function updateContent(event) {\n\t    if (this.player_.duration()) {\n\t      var localizedText = this.localize('Remaining Time');\n\t      var formattedTime = (0, _formatTime2['default'])(this.player_.remainingTime());\n\t\n\t      if (formattedTime !== this.formattedTime_) {\n\t        this.formattedTime_ = formattedTime;\n\t        this.contentEl_.innerHTML = '<span class=\"vjs-control-text\">' + localizedText + '</span> -' + formattedTime;\n\t      }\n\t    }\n\t\n\t    // Allows for smooth scrubbing, when player can't keep up.\n\t    // var time = (this.player_.scrubbing()) ? this.player_.getCache().currentTime : this.player_.currentTime();\n\t    // this.contentEl_.innerHTML = vjs.formatTime(time, this.player_.duration());\n\t  };\n\t\n\t  return RemainingTimeDisplay;\n\t}(_component2['default']);\n\t\n\t_component2['default'].registerComponent('RemainingTimeDisplay', RemainingTimeDisplay);\n\texports['default'] = RemainingTimeDisplay;\n\n\n/***/ },\n/* 70 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\texports.__esModule = true;\n\t\n\tvar _component = __webpack_require__(16);\n\t\n\tvar _component2 = _interopRequireDefault(_component);\n\t\n\tvar _dom = __webpack_require__(8);\n\t\n\tvar Dom = _interopRequireWildcard(_dom);\n\t\n\tfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj['default'] = obj; return newObj; } }\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /**\n\t                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * @file live-display.js\n\t                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                */\n\t\n\t\n\t// TODO - Future make it click to snap to live\n\t\n\t/**\n\t * Displays the live indicator when duration is Infinity.\n\t *\n\t * @extends Component\n\t */\n\tvar LiveDisplay = function (_Component) {\n\t  _inherits(LiveDisplay, _Component);\n\t\n\t  /**\n\t   * Creates an instance of this class.\n\t   *\n\t   * @param {Player} player\n\t   *        The `Player` that this class should be attached to.\n\t   *\n\t   * @param {Object} [options]\n\t   *        The key/value store of player options.\n\t   */\n\t  function LiveDisplay(player, options) {\n\t    _classCallCheck(this, LiveDisplay);\n\t\n\t    var _this = _possibleConstructorReturn(this, _Component.call(this, player, options));\n\t\n\t    _this.updateShowing();\n\t    _this.on(_this.player(), 'durationchange', _this.updateShowing);\n\t    return _this;\n\t  }\n\t\n\t  /**\n\t   * Create the `Component`'s DOM element\n\t   *\n\t   * @return {Element}\n\t   *         The element that was created.\n\t   */\n\t\n\t\n\t  LiveDisplay.prototype.createEl = function createEl() {\n\t    var el = _Component.prototype.createEl.call(this, 'div', {\n\t      className: 'vjs-live-control vjs-control'\n\t    });\n\t\n\t    this.contentEl_ = Dom.createEl('div', {\n\t      className: 'vjs-live-display',\n\t      innerHTML: '<span class=\"vjs-control-text\">' + this.localize('Stream Type') + '</span>' + this.localize('LIVE')\n\t    }, {\n\t      'aria-live': 'off'\n\t    });\n\t\n\t    el.appendChild(this.contentEl_);\n\t    return el;\n\t  };\n\t\n\t  /**\n\t   * Check the duration to see if the LiveDisplay should be showing or not. Then show/hide\n\t   * it accordingly\n\t   *\n\t   * @param {EventTarget~Event} [event]\n\t   *        The {@link Player#durationchange} event that caused this function to run.\n\t   *\n\t   * @listens Player#durationchange\n\t   */\n\t\n\t\n\t  LiveDisplay.prototype.updateShowing = function updateShowing(event) {\n\t    if (this.player().duration() === Infinity) {\n\t      this.show();\n\t    } else {\n\t      this.hide();\n\t    }\n\t  };\n\t\n\t  return LiveDisplay;\n\t}(_component2['default']);\n\t\n\t_component2['default'].registerComponent('LiveDisplay', LiveDisplay);\n\texports['default'] = LiveDisplay;\n\n\n/***/ },\n/* 71 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\texports.__esModule = true;\n\t\n\tvar _component = __webpack_require__(16);\n\t\n\tvar _component2 = _interopRequireDefault(_component);\n\t\n\t__webpack_require__(72);\n\t\n\t__webpack_require__(78);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /**\n\t                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * @file progress-control.js\n\t                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                */\n\t\n\t\n\t/**\n\t * The Progress Control component contains the seek bar, load progress,\n\t * and play progress.\n\t *\n\t * @extends Component\n\t */\n\tvar ProgressControl = function (_Component) {\n\t  _inherits(ProgressControl, _Component);\n\t\n\t  function ProgressControl() {\n\t    _classCallCheck(this, ProgressControl);\n\t\n\t    return _possibleConstructorReturn(this, _Component.apply(this, arguments));\n\t  }\n\t\n\t  /**\n\t   * Create the `Component`'s DOM element\n\t   *\n\t   * @return {Element}\n\t   *         The element that was created.\n\t   */\n\t  ProgressControl.prototype.createEl = function createEl() {\n\t    return _Component.prototype.createEl.call(this, 'div', {\n\t      className: 'vjs-progress-control vjs-control'\n\t    });\n\t  };\n\t\n\t  return ProgressControl;\n\t}(_component2['default']);\n\t\n\t/**\n\t * Default options for `ProgressControl`\n\t *\n\t * @type {Object}\n\t * @private\n\t */\n\t\n\t\n\tProgressControl.prototype.options_ = {\n\t  children: ['seekBar']\n\t};\n\t\n\t_component2['default'].registerComponent('ProgressControl', ProgressControl);\n\texports['default'] = ProgressControl;\n\n\n/***/ },\n/* 72 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\texports.__esModule = true;\n\t\n\tvar _slider = __webpack_require__(73);\n\t\n\tvar _slider2 = _interopRequireDefault(_slider);\n\t\n\tvar _component = __webpack_require__(16);\n\t\n\tvar _component2 = _interopRequireDefault(_component);\n\t\n\tvar _fn = __webpack_require__(17);\n\t\n\tvar Fn = _interopRequireWildcard(_fn);\n\t\n\tvar _formatTime = __webpack_require__(66);\n\t\n\tvar _formatTime2 = _interopRequireDefault(_formatTime);\n\t\n\tvar _computedStyle = __webpack_require__(74);\n\t\n\tvar _computedStyle2 = _interopRequireDefault(_computedStyle);\n\t\n\t__webpack_require__(75);\n\t\n\t__webpack_require__(76);\n\t\n\t__webpack_require__(77);\n\t\n\tfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj['default'] = obj; return newObj; } }\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /**\n\t                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * @file seek-bar.js\n\t                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                */\n\t\n\t\n\t/**\n\t * Seek Bar and holder for the progress bars\n\t *\n\t * @extends Slider\n\t */\n\tvar SeekBar = function (_Slider) {\n\t  _inherits(SeekBar, _Slider);\n\t\n\t  /**\n\t   * Creates an instance of this class.\n\t   *\n\t   * @param {Player} player\n\t   *        The `Player` that this class should be attached to.\n\t   *\n\t   * @param {Object} [options]\n\t   *        The key/value store of player options.\n\t   */\n\t  function SeekBar(player, options) {\n\t    _classCallCheck(this, SeekBar);\n\t\n\t    var _this = _possibleConstructorReturn(this, _Slider.call(this, player, options));\n\t\n\t    _this.on(player, 'timeupdate', _this.updateProgress);\n\t    _this.on(player, 'ended', _this.updateProgress);\n\t    player.ready(Fn.bind(_this, _this.updateProgress));\n\t\n\t    if (options.playerOptions && options.playerOptions.controlBar && options.playerOptions.controlBar.progressControl && options.playerOptions.controlBar.progressControl.keepTooltipsInside) {\n\t      _this.keepTooltipsInside = options.playerOptions.controlBar.progressControl.keepTooltipsInside;\n\t    }\n\t\n\t    if (_this.keepTooltipsInside) {\n\t      _this.tooltipProgressBar = _this.addChild('TooltipProgressBar');\n\t    }\n\t    return _this;\n\t  }\n\t\n\t  /**\n\t   * Create the `Component`'s DOM element\n\t   *\n\t   * @return {Element}\n\t   *         The element that was created.\n\t   */\n\t\n\t\n\t  SeekBar.prototype.createEl = function createEl() {\n\t    return _Slider.prototype.createEl.call(this, 'div', {\n\t      className: 'vjs-progress-holder'\n\t    }, {\n\t      'aria-label': 'progress bar'\n\t    });\n\t  };\n\t\n\t  /**\n\t   * Update the seek bars tooltip and width.\n\t   *\n\t   * @param {EventTarget~Event} [event]\n\t   *        The `timeupdate` or `ended` event that caused this to run.\n\t   *\n\t   * @listens Player#timeupdate\n\t   * @listens Player#ended\n\t   */\n\t\n\t\n\t  SeekBar.prototype.updateProgress = function updateProgress(event) {\n\t    this.updateAriaAttributes(this.el_);\n\t\n\t    if (this.keepTooltipsInside) {\n\t      this.updateAriaAttributes(this.tooltipProgressBar.el_);\n\t      this.tooltipProgressBar.el_.style.width = this.bar.el_.style.width;\n\t\n\t      var playerWidth = parseFloat((0, _computedStyle2['default'])(this.player().el(), 'width'));\n\t      var tooltipWidth = parseFloat((0, _computedStyle2['default'])(this.tooltipProgressBar.tooltip, 'width'));\n\t      var tooltipStyle = this.tooltipProgressBar.el().style;\n\t\n\t      tooltipStyle.maxWidth = Math.floor(playerWidth - tooltipWidth / 2) + 'px';\n\t      tooltipStyle.minWidth = Math.ceil(tooltipWidth / 2) + 'px';\n\t      tooltipStyle.right = '-' + tooltipWidth / 2 + 'px';\n\t    }\n\t  };\n\t\n\t  /**\n\t   * Update ARIA accessibility attributes\n\t   *\n\t   * @param {Element} el\n\t   *        The element to update with aria accessibility attributes.\n\t   */\n\t\n\t\n\t  SeekBar.prototype.updateAriaAttributes = function updateAriaAttributes(el) {\n\t    // Allows for smooth scrubbing, when player can't keep up.\n\t    var time = this.player_.scrubbing() ? this.player_.getCache().currentTime : this.player_.currentTime();\n\t\n\t    // machine readable value of progress bar (percentage complete)\n\t    el.setAttribute('aria-valuenow', (this.getPercent() * 100).toFixed(2));\n\t    // human readable value of progress bar (time complete)\n\t    el.setAttribute('aria-valuetext', (0, _formatTime2['default'])(time, this.player_.duration()));\n\t  };\n\t\n\t  /**\n\t   * Get percentage of video played\n\t   *\n\t   * @return {number}\n\t   *         The percentage played\n\t   */\n\t\n\t\n\t  SeekBar.prototype.getPercent = function getPercent() {\n\t    var percent = this.player_.currentTime() / this.player_.duration();\n\t\n\t    return percent >= 1 ? 1 : percent;\n\t  };\n\t\n\t  /**\n\t   * Handle mouse down on seek bar\n\t   *\n\t   * @param {EventTarget~Event} event\n\t   *        The `mousedown` event that caused this to run.\n\t   *\n\t   * @listens mousedown\n\t   */\n\t\n\t\n\t  SeekBar.prototype.handleMouseDown = function handleMouseDown(event) {\n\t    this.player_.scrubbing(true);\n\t\n\t    this.videoWasPlaying = !this.player_.paused();\n\t    this.player_.pause();\n\t\n\t    _Slider.prototype.handleMouseDown.call(this, event);\n\t  };\n\t\n\t  /**\n\t   * Handle mouse move on seek bar\n\t   *\n\t   * @param {EventTarget~Event} event\n\t   *        The `mousemove` event that caused this to run.\n\t   *\n\t   * @listens mousemove\n\t   */\n\t\n\t\n\t  SeekBar.prototype.handleMouseMove = function handleMouseMove(event) {\n\t    var newTime = this.calculateDistance(event) * this.player_.duration();\n\t\n\t    // Don't let video end while scrubbing.\n\t    if (newTime === this.player_.duration()) {\n\t      newTime = newTime - 0.1;\n\t    }\n\t\n\t    // Set new time (tell player to seek to new time)\n\t    this.player_.currentTime(newTime);\n\t  };\n\t\n\t  /**\n\t   * Handle mouse up on seek bar\n\t   *\n\t   * @param {EventTarget~Event} event\n\t   *        The `mouseup` event that caused this to run.\n\t   *\n\t   * @listens mouseup\n\t   */\n\t\n\t\n\t  SeekBar.prototype.handleMouseUp = function handleMouseUp(event) {\n\t    _Slider.prototype.handleMouseUp.call(this, event);\n\t\n\t    this.player_.scrubbing(false);\n\t    if (this.videoWasPlaying) {\n\t      this.player_.play();\n\t    }\n\t  };\n\t\n\t  /**\n\t   * Move more quickly fast forward for keyboard-only users\n\t   */\n\t\n\t\n\t  SeekBar.prototype.stepForward = function stepForward() {\n\t    // more quickly fast forward for keyboard-only users\n\t    this.player_.currentTime(this.player_.currentTime() + 5);\n\t  };\n\t\n\t  /**\n\t   * Move more quickly rewind for keyboard-only users\n\t   */\n\t\n\t\n\t  SeekBar.prototype.stepBack = function stepBack() {\n\t    // more quickly rewind for keyboard-only users\n\t    this.player_.currentTime(this.player_.currentTime() - 5);\n\t  };\n\t\n\t  return SeekBar;\n\t}(_slider2['default']);\n\t\n\t/**\n\t * Default options for the `SeekBar`\n\t *\n\t * @type {Object}\n\t * @private\n\t */\n\t\n\t\n\tSeekBar.prototype.options_ = {\n\t  children: ['loadProgressBar', 'mouseTimeDisplay', 'playProgressBar'],\n\t  barName: 'playProgressBar'\n\t};\n\t\n\t/**\n\t * Call the update event for this Slider when this event happens on the player.\n\t *\n\t * @type {string}\n\t */\n\tSeekBar.prototype.playerEvent = 'timeupdate';\n\t\n\t_component2['default'].registerComponent('SeekBar', SeekBar);\n\texports['default'] = SeekBar;\n\n\n/***/ },\n/* 73 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\texports.__esModule = true;\n\t\n\tvar _component = __webpack_require__(16);\n\t\n\tvar _component2 = _interopRequireDefault(_component);\n\t\n\tvar _dom = __webpack_require__(8);\n\t\n\tvar Dom = _interopRequireWildcard(_dom);\n\t\n\tvar _obj = __webpack_require__(12);\n\t\n\tfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj['default'] = obj; return newObj; } }\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /**\n\t                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * @file slider.js\n\t                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                */\n\t\n\t\n\t/**\n\t * The base functionality for a slider. Can be vertical or horizontal.\n\t * For instance the volume bar or the seek bar on a video is a slider.\n\t *\n\t * @extends Component\n\t */\n\tvar Slider = function (_Component) {\n\t  _inherits(Slider, _Component);\n\t\n\t  /**\n\t   * Create an instance of this class\n\t   *\n\t   * @param {Player} player\n\t   *        The `Player` that this class should be attached to.\n\t   *\n\t   * @param {Object} [options]\n\t   *        The key/value store of player options.\n\t   */\n\t  function Slider(player, options) {\n\t    _classCallCheck(this, Slider);\n\t\n\t    // Set property names to bar to match with the child Slider class is looking for\n\t    var _this = _possibleConstructorReturn(this, _Component.call(this, player, options));\n\t\n\t    _this.bar = _this.getChild(_this.options_.barName);\n\t\n\t    // Set a horizontal or vertical class on the slider depending on the slider type\n\t    _this.vertical(!!_this.options_.vertical);\n\t\n\t    _this.on('mousedown', _this.handleMouseDown);\n\t    _this.on('touchstart', _this.handleMouseDown);\n\t    _this.on('focus', _this.handleFocus);\n\t    _this.on('blur', _this.handleBlur);\n\t    _this.on('click', _this.handleClick);\n\t\n\t    _this.on(player, 'controlsvisible', _this.update);\n\t    _this.on(player, _this.playerEvent, _this.update);\n\t    return _this;\n\t  }\n\t\n\t  /**\n\t   * Create the `Button`s DOM element.\n\t   *\n\t   * @param {string} type\n\t   *        Type of element to create.\n\t   *\n\t   * @param {Object} [props={}]\n\t   *        List of properties in Object form.\n\t   *\n\t   * @param {Object} [attributes={}]\n\t   *        list of attributes in Object form.\n\t   *\n\t   * @return {Element}\n\t   *         The element that gets created.\n\t   */\n\t\n\t\n\t  Slider.prototype.createEl = function createEl(type) {\n\t    var props = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\t    var attributes = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n\t\n\t    // Add the slider element class to all sub classes\n\t    props.className = props.className + ' vjs-slider';\n\t    props = (0, _obj.assign)({\n\t      tabIndex: 0\n\t    }, props);\n\t\n\t    attributes = (0, _obj.assign)({\n\t      'role': 'slider',\n\t      'aria-valuenow': 0,\n\t      'aria-valuemin': 0,\n\t      'aria-valuemax': 100,\n\t      'tabIndex': 0\n\t    }, attributes);\n\t\n\t    return _Component.prototype.createEl.call(this, type, props, attributes);\n\t  };\n\t\n\t  /**\n\t   * Handle `mousedown` or `touchstart` events on the `Slider`.\n\t   *\n\t   * @param {EventTarget~Event} event\n\t   *        `mousedown` or `touchstart` event that triggered this function\n\t   *\n\t   * @listens mousedown\n\t   * @listens touchstart\n\t   * @fires Slider#slideractive\n\t   */\n\t\n\t\n\t  Slider.prototype.handleMouseDown = function handleMouseDown(event) {\n\t    var doc = this.bar.el_.ownerDocument;\n\t\n\t    event.preventDefault();\n\t    Dom.blockTextSelection();\n\t\n\t    this.addClass('vjs-sliding');\n\t    /**\n\t     * Triggered when the slider is in an active state\n\t     *\n\t     * @event Slider#slideractive\n\t     * @type {EventTarget~Event}\n\t     */\n\t    this.trigger('slideractive');\n\t\n\t    this.on(doc, 'mousemove', this.handleMouseMove);\n\t    this.on(doc, 'mouseup', this.handleMouseUp);\n\t    this.on(doc, 'touchmove', this.handleMouseMove);\n\t    this.on(doc, 'touchend', this.handleMouseUp);\n\t\n\t    this.handleMouseMove(event);\n\t  };\n\t\n\t  /**\n\t   * Handle the `mousemove`, `touchmove`, and `mousedown` events on this `Slider`.\n\t   * The `mousemove` and `touchmove` events will only only trigger this function during\n\t   * `mousedown` and `touchstart`. This is due to {@link Slider#handleMouseDown} and\n\t   * {@link Slider#handleMouseUp}.\n\t   *\n\t   * @param {EventTarget~Event} event\n\t   *        `mousedown`, `mousemove`, `touchstart`, or `touchmove` event that triggered\n\t   *        this function\n\t   *\n\t   * @listens mousemove\n\t   * @listens touchmove\n\t   */\n\t\n\t\n\t  Slider.prototype.handleMouseMove = function handleMouseMove(event) {};\n\t\n\t  /**\n\t   * Handle `mouseup` or `touchend` events on the `Slider`.\n\t   *\n\t   * @param {EventTarget~Event} event\n\t   *        `mouseup` or `touchend` event that triggered this function.\n\t   *\n\t   * @listens touchend\n\t   * @listens mouseup\n\t   * @fires Slider#sliderinactive\n\t   */\n\t\n\t\n\t  Slider.prototype.handleMouseUp = function handleMouseUp() {\n\t    var doc = this.bar.el_.ownerDocument;\n\t\n\t    Dom.unblockTextSelection();\n\t\n\t    this.removeClass('vjs-sliding');\n\t    /**\n\t     * Triggered when the slider is no longer in an active state.\n\t     *\n\t     * @event Slider#sliderinactive\n\t     * @type {EventTarget~Event}\n\t     */\n\t    this.trigger('sliderinactive');\n\t\n\t    this.off(doc, 'mousemove', this.handleMouseMove);\n\t    this.off(doc, 'mouseup', this.handleMouseUp);\n\t    this.off(doc, 'touchmove', this.handleMouseMove);\n\t    this.off(doc, 'touchend', this.handleMouseUp);\n\t\n\t    this.update();\n\t  };\n\t\n\t  /**\n\t   * Update the progress bar of the `Slider`.\n\t   */\n\t\n\t\n\t  Slider.prototype.update = function update() {\n\t    // In VolumeBar init we have a setTimeout for update that pops and update to the end of the\n\t    // execution stack. The player is destroyed before then update will cause an error\n\t    if (!this.el_) {\n\t      return;\n\t    }\n\t\n\t    // If scrubbing, we could use a cached value to make the handle keep up with the user's mouse.\n\t    // On HTML5 browsers scrubbing is really smooth, but some flash players are slow, so we might want to utilize this later.\n\t    // var progress =  (this.player_.scrubbing()) ? this.player_.getCache().currentTime / this.player_.duration() : this.player_.currentTime() / this.player_.duration();\n\t    var progress = this.getPercent();\n\t    var bar = this.bar;\n\t\n\t    // If there's no bar...\n\t    if (!bar) {\n\t      return;\n\t    }\n\t\n\t    // Protect against no duration and other division issues\n\t    if (typeof progress !== 'number' || progress !== progress || progress < 0 || progress === Infinity) {\n\t      progress = 0;\n\t    }\n\t\n\t    // Convert to a percentage for setting\n\t    var percentage = (progress * 100).toFixed(2) + '%';\n\t\n\t    // Set the new bar width or height\n\t    if (this.vertical()) {\n\t      bar.el().style.height = percentage;\n\t    } else {\n\t      bar.el().style.width = percentage;\n\t    }\n\t  };\n\t\n\t  /**\n\t   * Calculate distance for slider\n\t   *\n\t   * @param {EventTarget~Event} event\n\t   *        The event that caused this function to run.\n\t   *\n\t   * @return {number}\n\t   *         The current position of the Slider.\n\t   *         - postition.x for vertical `Slider`s\n\t   *         - postition.y for horizontal `Slider`s\n\t   */\n\t\n\t\n\t  Slider.prototype.calculateDistance = function calculateDistance(event) {\n\t    var position = Dom.getPointerPosition(this.el_, event);\n\t\n\t    if (this.vertical()) {\n\t      return position.y;\n\t    }\n\t    return position.x;\n\t  };\n\t\n\t  /**\n\t   * Handle a `focus` event on this `Slider`.\n\t   *\n\t   * @param {EventTarget~Event} event\n\t   *        The `focus` event that caused this function to run.\n\t   *\n\t   * @listens focus\n\t   */\n\t\n\t\n\t  Slider.prototype.handleFocus = function handleFocus() {\n\t    this.on(this.bar.el_.ownerDocument, 'keydown', this.handleKeyPress);\n\t  };\n\t\n\t  /**\n\t   * Handle a `keydown` event on the `Slider`. Watches for left, rigth, up, and down\n\t   * arrow keys. This function will only be called when the slider has focus. See\n\t   * {@link Slider#handleFocus} and {@link Slider#handleBlur}.\n\t   *\n\t   * @param {EventTarget~Event} event\n\t   *        the `keydown` event that caused this function to run.\n\t   *\n\t   * @listens keydown\n\t   */\n\t\n\t\n\t  Slider.prototype.handleKeyPress = function handleKeyPress(event) {\n\t    // Left and Down Arrows\n\t    if (event.which === 37 || event.which === 40) {\n\t      event.preventDefault();\n\t      this.stepBack();\n\t\n\t      // Up and Right Arrows\n\t    } else if (event.which === 38 || event.which === 39) {\n\t      event.preventDefault();\n\t      this.stepForward();\n\t    }\n\t  };\n\t\n\t  /**\n\t   * Handle a `blur` event on this `Slider`.\n\t   *\n\t   * @param {EventTarget~Event} event\n\t   *        The `blur` event that caused this function to run.\n\t   *\n\t   * @listens blur\n\t   */\n\t\n\t  Slider.prototype.handleBlur = function handleBlur() {\n\t    this.off(this.bar.el_.ownerDocument, 'keydown', this.handleKeyPress);\n\t  };\n\t\n\t  /**\n\t   * Listener for click events on slider, used to prevent clicks\n\t   *   from bubbling up to parent elements like button menus.\n\t   *\n\t   * @param {Object} event\n\t   *        Event that caused this object to run\n\t   */\n\t\n\t\n\t  Slider.prototype.handleClick = function handleClick(event) {\n\t    event.stopImmediatePropagation();\n\t    event.preventDefault();\n\t  };\n\t\n\t  /**\n\t   * Get/set if slider is horizontal for vertical\n\t   *\n\t   * @param {boolean} [bool]\n\t   *        - true if slider is vertical,\n\t   *        - false is horizontal\n\t   *\n\t   * @return {boolean|Slider}\n\t   *         - true if slider is vertical, and getting\n\t   *         - false is horizontal, and getting\n\t   *         - a reference to this object when setting\n\t   */\n\t\n\t\n\t  Slider.prototype.vertical = function vertical(bool) {\n\t    if (bool === undefined) {\n\t      return this.vertical_ || false;\n\t    }\n\t\n\t    this.vertical_ = !!bool;\n\t\n\t    if (this.vertical_) {\n\t      this.addClass('vjs-slider-vertical');\n\t    } else {\n\t      this.addClass('vjs-slider-horizontal');\n\t    }\n\t\n\t    return this;\n\t  };\n\t\n\t  return Slider;\n\t}(_component2['default']);\n\t\n\t_component2['default'].registerComponent('Slider', Slider);\n\texports['default'] = Slider;\n\n\n/***/ },\n/* 74 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\texports.__esModule = true;\n\texports['default'] = computedStyle;\n\t\n\tvar _window = __webpack_require__(4);\n\t\n\tvar _window2 = _interopRequireDefault(_window);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\t\n\t/**\n\t * A safe getComputedStyle with an IE8 fallback.\n\t *\n\t * This is needed because in Firefox, if the player is loaded in an iframe with\n\t * `display:none`, then `getComputedStyle` returns `null`, so, we do a null-check to\n\t * make sure  that the player doesn't break in these cases.\n\t *\n\t * @param {Element} el\n\t *        The element you want the computed style of\n\t *\n\t * @param {string} prop\n\t *        The property name you want\n\t *\n\t * @see https://bugzilla.mozilla.org/show_bug.cgi?id=548397\n\t */\n\tfunction computedStyle(el, prop) {\n\t  if (!el || !prop) {\n\t    return '';\n\t  }\n\t\n\t  if (typeof _window2['default'].getComputedStyle === 'function') {\n\t    var cs = _window2['default'].getComputedStyle(el);\n\t\n\t    return cs ? cs[prop] : '';\n\t  }\n\t\n\t  return el.currentStyle[prop] || '';\n\t} /**\n\t   * @file computed-style.js\n\t   * @module computed-style\n\t   */\n\n\n/***/ },\n/* 75 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\texports.__esModule = true;\n\t\n\tvar _component = __webpack_require__(16);\n\t\n\tvar _component2 = _interopRequireDefault(_component);\n\t\n\tvar _dom = __webpack_require__(8);\n\t\n\tvar Dom = _interopRequireWildcard(_dom);\n\t\n\tfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj['default'] = obj; return newObj; } }\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /**\n\t                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * @file load-progress-bar.js\n\t                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                */\n\t\n\t\n\t/**\n\t * Shows loading progress\n\t *\n\t * @extends Component\n\t */\n\tvar LoadProgressBar = function (_Component) {\n\t  _inherits(LoadProgressBar, _Component);\n\t\n\t  /**\n\t   * Creates an instance of this class.\n\t   *\n\t   * @param {Player} player\n\t   *        The `Player` that this class should be attached to.\n\t   *\n\t   * @param {Object} [options]\n\t   *        The key/value store of player options.\n\t   */\n\t  function LoadProgressBar(player, options) {\n\t    _classCallCheck(this, LoadProgressBar);\n\t\n\t    var _this = _possibleConstructorReturn(this, _Component.call(this, player, options));\n\t\n\t    _this.partEls_ = [];\n\t    _this.on(player, 'progress', _this.update);\n\t    return _this;\n\t  }\n\t\n\t  /**\n\t   * Create the `Component`'s DOM element\n\t   *\n\t   * @return {Element}\n\t   *         The element that was created.\n\t   */\n\t\n\t\n\t  LoadProgressBar.prototype.createEl = function createEl() {\n\t    return _Component.prototype.createEl.call(this, 'div', {\n\t      className: 'vjs-load-progress',\n\t      innerHTML: '<span class=\"vjs-control-text\"><span>' + this.localize('Loaded') + '</span>: 0%</span>'\n\t    });\n\t  };\n\t\n\t  /**\n\t   * Update progress bar\n\t   *\n\t   * @param {EventTarget~Event} [event]\n\t   *        The `progress` event that caused this function to run.\n\t   *\n\t   * @listens Player#progress\n\t   */\n\t\n\t\n\t  LoadProgressBar.prototype.update = function update(event) {\n\t    var buffered = this.player_.buffered();\n\t    var duration = this.player_.duration();\n\t    var bufferedEnd = this.player_.bufferedEnd();\n\t    var children = this.partEls_;\n\t\n\t    // get the percent width of a time compared to the total end\n\t    var percentify = function percentify(time, end) {\n\t      // no NaN\n\t      var percent = time / end || 0;\n\t\n\t      return (percent >= 1 ? 1 : percent) * 100 + '%';\n\t    };\n\t\n\t    // update the width of the progress bar\n\t    this.el_.style.width = percentify(bufferedEnd, duration);\n\t\n\t    // add child elements to represent the individual buffered time ranges\n\t    for (var i = 0; i < buffered.length; i++) {\n\t      var start = buffered.start(i);\n\t      var end = buffered.end(i);\n\t      var part = children[i];\n\t\n\t      if (!part) {\n\t        part = this.el_.appendChild(Dom.createEl());\n\t        children[i] = part;\n\t      }\n\t\n\t      // set the percent based on the width of the progress bar (bufferedEnd)\n\t      part.style.left = percentify(start, bufferedEnd);\n\t      part.style.width = percentify(end - start, bufferedEnd);\n\t    }\n\t\n\t    // remove unused buffered range elements\n\t    for (var _i = children.length; _i > buffered.length; _i--) {\n\t      this.el_.removeChild(children[_i - 1]);\n\t    }\n\t    children.length = buffered.length;\n\t  };\n\t\n\t  return LoadProgressBar;\n\t}(_component2['default']);\n\t\n\t_component2['default'].registerComponent('LoadProgressBar', LoadProgressBar);\n\texports['default'] = LoadProgressBar;\n\n\n/***/ },\n/* 76 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\texports.__esModule = true;\n\t\n\tvar _component = __webpack_require__(16);\n\t\n\tvar _component2 = _interopRequireDefault(_component);\n\t\n\tvar _fn = __webpack_require__(17);\n\t\n\tvar Fn = _interopRequireWildcard(_fn);\n\t\n\tvar _formatTime = __webpack_require__(66);\n\t\n\tvar _formatTime2 = _interopRequireDefault(_formatTime);\n\t\n\tfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj['default'] = obj; return newObj; } }\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /**\n\t                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * @file play-progress-bar.js\n\t                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                */\n\t\n\t\n\t/**\n\t * Shows play progress\n\t *\n\t * @extends Component\n\t */\n\tvar PlayProgressBar = function (_Component) {\n\t  _inherits(PlayProgressBar, _Component);\n\t\n\t  /**\n\t   * Creates an instance of this class.\n\t   *\n\t   * @param {Player} player\n\t   *        The `Player` that this class should be attached to.\n\t   *\n\t   * @param {Object} [options]\n\t   *        The key/value store of player options.\n\t   */\n\t  function PlayProgressBar(player, options) {\n\t    _classCallCheck(this, PlayProgressBar);\n\t\n\t    var _this = _possibleConstructorReturn(this, _Component.call(this, player, options));\n\t\n\t    _this.updateDataAttr();\n\t    _this.on(player, 'timeupdate', _this.updateDataAttr);\n\t    player.ready(Fn.bind(_this, _this.updateDataAttr));\n\t\n\t    if (options.playerOptions && options.playerOptions.controlBar && options.playerOptions.controlBar.progressControl && options.playerOptions.controlBar.progressControl.keepTooltipsInside) {\n\t      _this.keepTooltipsInside = options.playerOptions.controlBar.progressControl.keepTooltipsInside;\n\t    }\n\t\n\t    if (_this.keepTooltipsInside) {\n\t      _this.addClass('vjs-keep-tooltips-inside');\n\t    }\n\t    return _this;\n\t  }\n\t\n\t  /**\n\t   * Create the `Component`'s DOM element\n\t   *\n\t   * @return {Element}\n\t   *         The element that was created.\n\t   */\n\t\n\t\n\t  PlayProgressBar.prototype.createEl = function createEl() {\n\t    return _Component.prototype.createEl.call(this, 'div', {\n\t      className: 'vjs-play-progress vjs-slider-bar',\n\t      innerHTML: '<span class=\"vjs-control-text\"><span>' + this.localize('Progress') + '</span>: 0%</span>'\n\t    });\n\t  };\n\t\n\t  /**\n\t   * Update the data-current-time attribute on the `PlayProgressBar`.\n\t   *\n\t   * @param {EventTarget~Event} [event]\n\t   *        The `timeupdate` event that caused this to run.\n\t   *\n\t   * @listens Player#timeupdate\n\t   */\n\t\n\t\n\t  PlayProgressBar.prototype.updateDataAttr = function updateDataAttr(event) {\n\t    var time = this.player_.scrubbing() ? this.player_.getCache().currentTime : this.player_.currentTime();\n\t\n\t    this.el_.setAttribute('data-current-time', (0, _formatTime2['default'])(time, this.player_.duration()));\n\t  };\n\t\n\t  return PlayProgressBar;\n\t}(_component2['default']);\n\t\n\t_component2['default'].registerComponent('PlayProgressBar', PlayProgressBar);\n\texports['default'] = PlayProgressBar;\n\n\n/***/ },\n/* 77 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\texports.__esModule = true;\n\t\n\tvar _component = __webpack_require__(16);\n\t\n\tvar _component2 = _interopRequireDefault(_component);\n\t\n\tvar _fn = __webpack_require__(17);\n\t\n\tvar Fn = _interopRequireWildcard(_fn);\n\t\n\tvar _formatTime = __webpack_require__(66);\n\t\n\tvar _formatTime2 = _interopRequireDefault(_formatTime);\n\t\n\tfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj['default'] = obj; return newObj; } }\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /**\n\t                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * @file play-progress-bar.js\n\t                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                */\n\t\n\t\n\t/**\n\t * Shows play progress\n\t *\n\t * @extends Component\n\t */\n\tvar TooltipProgressBar = function (_Component) {\n\t  _inherits(TooltipProgressBar, _Component);\n\t\n\t  /**\n\t   * Creates an instance of this class.\n\t   *\n\t   * @param {Player} player\n\t   *        The `Player` that this class should be attached to.\n\t   *\n\t   * @param {Object} [options]\n\t   *        The key/value store of player options.\n\t   */\n\t  function TooltipProgressBar(player, options) {\n\t    _classCallCheck(this, TooltipProgressBar);\n\t\n\t    var _this = _possibleConstructorReturn(this, _Component.call(this, player, options));\n\t\n\t    _this.updateDataAttr();\n\t    _this.on(player, 'timeupdate', _this.updateDataAttr);\n\t    player.ready(Fn.bind(_this, _this.updateDataAttr));\n\t    return _this;\n\t  }\n\t\n\t  /**\n\t   * Create the `Component`'s DOM element\n\t   *\n\t   * @return {Element}\n\t   *         The element that was created.\n\t   */\n\t\n\t\n\t  TooltipProgressBar.prototype.createEl = function createEl() {\n\t    var el = _Component.prototype.createEl.call(this, 'div', {\n\t      className: 'vjs-tooltip-progress-bar vjs-slider-bar',\n\t      innerHTML: '<div class=\"vjs-time-tooltip\"></div>\\n        <span class=\"vjs-control-text\"><span>' + this.localize('Progress') + '</span>: 0%</span>'\n\t    });\n\t\n\t    this.tooltip = el.querySelector('.vjs-time-tooltip');\n\t\n\t    return el;\n\t  };\n\t\n\t  /**\n\t   * Updatet the data-current-time attribute for TooltipProgressBar\n\t   *\n\t   * @param {EventTarget~Event} [event]\n\t   *        The `timeupdate` event that caused this function to run.\n\t   *\n\t   * @listens Player#timeupdate\n\t   */\n\t\n\t\n\t  TooltipProgressBar.prototype.updateDataAttr = function updateDataAttr(event) {\n\t    var time = this.player_.scrubbing() ? this.player_.getCache().currentTime : this.player_.currentTime();\n\t    var formattedTime = (0, _formatTime2['default'])(time, this.player_.duration());\n\t\n\t    this.el_.setAttribute('data-current-time', formattedTime);\n\t    this.tooltip.innerHTML = formattedTime;\n\t  };\n\t\n\t  return TooltipProgressBar;\n\t}(_component2['default']);\n\t\n\t_component2['default'].registerComponent('TooltipProgressBar', TooltipProgressBar);\n\texports['default'] = TooltipProgressBar;\n\n\n/***/ },\n/* 78 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\texports.__esModule = true;\n\t\n\tvar _component = __webpack_require__(16);\n\t\n\tvar _component2 = _interopRequireDefault(_component);\n\t\n\tvar _dom = __webpack_require__(8);\n\t\n\tvar Dom = _interopRequireWildcard(_dom);\n\t\n\tvar _fn = __webpack_require__(17);\n\t\n\tvar Fn = _interopRequireWildcard(_fn);\n\t\n\tvar _formatTime = __webpack_require__(66);\n\t\n\tvar _formatTime2 = _interopRequireDefault(_formatTime);\n\t\n\tvar _computedStyle = __webpack_require__(74);\n\t\n\tvar _computedStyle2 = _interopRequireDefault(_computedStyle);\n\t\n\tfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj['default'] = obj; return newObj; } }\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /**\n\t                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * @file mouse-time-display.js\n\t                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                */\n\t\n\t\n\t/**\n\t * The Mouse Time Display component shows the time you will seek to\n\t * when hovering over the progress bar\n\t *\n\t * @extends Component\n\t */\n\tvar MouseTimeDisplay = function (_Component) {\n\t  _inherits(MouseTimeDisplay, _Component);\n\t\n\t  /**\n\t   * Creates an instance of this class.\n\t   *\n\t   * @param {Player} player\n\t   *        The `Player` that this class should be attached to.\n\t   *\n\t   * @param {Object} [options]\n\t   *        The key/value store of player options.\n\t   */\n\t  function MouseTimeDisplay(player, options) {\n\t    _classCallCheck(this, MouseTimeDisplay);\n\t\n\t    var _this = _possibleConstructorReturn(this, _Component.call(this, player, options));\n\t\n\t    if (options.playerOptions && options.playerOptions.controlBar && options.playerOptions.controlBar.progressControl && options.playerOptions.controlBar.progressControl.keepTooltipsInside) {\n\t      _this.keepTooltipsInside = options.playerOptions.controlBar.progressControl.keepTooltipsInside;\n\t    }\n\t\n\t    if (_this.keepTooltipsInside) {\n\t      _this.tooltip = Dom.createEl('div', { className: 'vjs-time-tooltip' });\n\t      _this.el().appendChild(_this.tooltip);\n\t      _this.addClass('vjs-keep-tooltips-inside');\n\t    }\n\t\n\t    _this.update(0, 0);\n\t\n\t    player.on('ready', function () {\n\t      _this.on(player.controlBar.progressControl.el(), 'mousemove', Fn.throttle(Fn.bind(_this, _this.handleMouseMove), 25));\n\t    });\n\t    return _this;\n\t  }\n\t\n\t  /**\n\t   * Create the `Component`'s DOM element\n\t   *\n\t   * @return {Element}\n\t   *         The element that was created.\n\t   */\n\t\n\t\n\t  MouseTimeDisplay.prototype.createEl = function createEl() {\n\t    return _Component.prototype.createEl.call(this, 'div', {\n\t      className: 'vjs-mouse-display'\n\t    });\n\t  };\n\t\n\t  /**\n\t   * Handle the mouse move event on the `MouseTimeDisplay`.\n\t   *\n\t   * @param {EventTarget~Event} event\n\t   *        The `mousemove` event that caused this to event to run.\n\t   *\n\t   * @listen mousemove\n\t   */\n\t\n\t\n\t  MouseTimeDisplay.prototype.handleMouseMove = function handleMouseMove(event) {\n\t    var duration = this.player_.duration();\n\t    var newTime = this.calculateDistance(event) * duration;\n\t    var position = event.pageX - Dom.findElPosition(this.el().parentNode).left;\n\t\n\t    this.update(newTime, position);\n\t  };\n\t\n\t  /**\n\t   * Update the time and posistion of the `MouseTimeDisplay`.\n\t   *\n\t   * @param {number} newTime\n\t   *        Time to change the `MouseTimeDisplay` to.\n\t   *\n\t   * @param {nubmer} position\n\t   *        Postion from the left of the in pixels.\n\t   */\n\t\n\t\n\t  MouseTimeDisplay.prototype.update = function update(newTime, position) {\n\t    var time = (0, _formatTime2['default'])(newTime, this.player_.duration());\n\t\n\t    this.el().style.left = position + 'px';\n\t    this.el().setAttribute('data-current-time', time);\n\t\n\t    if (this.keepTooltipsInside) {\n\t      var clampedPosition = this.clampPosition_(position);\n\t      var difference = position - clampedPosition + 1;\n\t      var tooltipWidth = parseFloat((0, _computedStyle2['default'])(this.tooltip, 'width'));\n\t      var tooltipWidthHalf = tooltipWidth / 2;\n\t\n\t      this.tooltip.innerHTML = time;\n\t      this.tooltip.style.right = '-' + (tooltipWidthHalf - difference) + 'px';\n\t    }\n\t  };\n\t\n\t  /**\n\t   * Get the mouse pointers x coordinate in pixels.\n\t   *\n\t   * @param {EventTarget~Event} [event]\n\t   *        The `mousemove` event that was passed to this function by\n\t   *        {@link MouseTimeDisplay#handleMouseMove}\n\t   *\n\t   * @return {number}\n\t   *         THe x position in pixels of the mouse pointer.\n\t   */\n\t\n\t\n\t  MouseTimeDisplay.prototype.calculateDistance = function calculateDistance(event) {\n\t    return Dom.getPointerPosition(this.el().parentNode, event).x;\n\t  };\n\t\n\t  /**\n\t   * This takes in a horizontal position for the bar and returns a clamped position.\n\t   * Clamped position means that it will keep the position greater than half the width\n\t   * of the tooltip and smaller than the player width minus half the width o the tooltip.\n\t   * It will only clamp the position if `keepTooltipsInside` option is set.\n\t   *\n\t   * @param {number} position\n\t   *        The position the bar wants to be\n\t   *\n\t   * @return {number}\n\t   *         The (potentially) new clamped position.\n\t   *\n\t   * @private\n\t   */\n\t\n\t\n\t  MouseTimeDisplay.prototype.clampPosition_ = function clampPosition_(position) {\n\t    if (!this.keepTooltipsInside) {\n\t      return position;\n\t    }\n\t\n\t    var playerWidth = parseFloat((0, _computedStyle2['default'])(this.player().el(), 'width'));\n\t    var tooltipWidth = parseFloat((0, _computedStyle2['default'])(this.tooltip, 'width'));\n\t    var tooltipWidthHalf = tooltipWidth / 2;\n\t    var actualPosition = position;\n\t\n\t    if (position < tooltipWidthHalf) {\n\t      actualPosition = Math.ceil(tooltipWidthHalf);\n\t    } else if (position > playerWidth - tooltipWidthHalf) {\n\t      actualPosition = Math.floor(playerWidth - tooltipWidthHalf);\n\t    }\n\t\n\t    return actualPosition;\n\t  };\n\t\n\t  return MouseTimeDisplay;\n\t}(_component2['default']);\n\t\n\t_component2['default'].registerComponent('MouseTimeDisplay', MouseTimeDisplay);\n\texports['default'] = MouseTimeDisplay;\n\n\n/***/ },\n/* 79 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\texports.__esModule = true;\n\t\n\tvar _button = __webpack_require__(61);\n\t\n\tvar _button2 = _interopRequireDefault(_button);\n\t\n\tvar _component = __webpack_require__(16);\n\t\n\tvar _component2 = _interopRequireDefault(_component);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /**\n\t                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * @file fullscreen-toggle.js\n\t                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                */\n\t\n\t\n\t/**\n\t * Toggle fullscreen video\n\t *\n\t * @extends Button\n\t */\n\tvar FullscreenToggle = function (_Button) {\n\t  _inherits(FullscreenToggle, _Button);\n\t\n\t  /**\n\t   * Creates an instance of this class.\n\t   *\n\t   * @param {Player} player\n\t   *        The `Player` that this class should be attached to.\n\t   *\n\t   * @param {Object} [options]\n\t   *        The key/value store of player options.\n\t   */\n\t  function FullscreenToggle(player, options) {\n\t    _classCallCheck(this, FullscreenToggle);\n\t\n\t    var _this = _possibleConstructorReturn(this, _Button.call(this, player, options));\n\t\n\t    _this.on(player, 'fullscreenchange', _this.handleFullscreenChange);\n\t    return _this;\n\t  }\n\t\n\t  /**\n\t   * Builds the default DOM `className`.\n\t   *\n\t   * @return {string}\n\t   *         The DOM `className` for this object.\n\t   */\n\t\n\t\n\t  FullscreenToggle.prototype.buildCSSClass = function buildCSSClass() {\n\t    return 'vjs-fullscreen-control ' + _Button.prototype.buildCSSClass.call(this);\n\t  };\n\t\n\t  /**\n\t   * Handles fullscreenchange on the player and change control text accordingly.\n\t   *\n\t   * @param {EventTarget~Event} [event]\n\t   *        The {@link Player#fullscreenchange} event that caused this function to be\n\t   *        called.\n\t   *\n\t   * @listens Player#fullscreenchange\n\t   */\n\t\n\t\n\t  FullscreenToggle.prototype.handleFullscreenChange = function handleFullscreenChange(event) {\n\t    if (this.player_.isFullscreen()) {\n\t      this.controlText('Non-Fullscreen');\n\t    } else {\n\t      this.controlText('Fullscreen');\n\t    }\n\t  };\n\t\n\t  /**\n\t   * This gets called when an `FullscreenToggle` is \"clicked\". See\n\t   * {@link ClickableComponent} for more detailed information on what a click can be.\n\t   *\n\t   * @param {EventTarget~Event} [event]\n\t   *        The `keydown`, `tap`, or `click` event that caused this function to be\n\t   *        called.\n\t   *\n\t   * @listens tap\n\t   * @listens click\n\t   */\n\t\n\t\n\t  FullscreenToggle.prototype.handleClick = function handleClick(event) {\n\t    if (!this.player_.isFullscreen()) {\n\t      this.player_.requestFullscreen();\n\t    } else {\n\t      this.player_.exitFullscreen();\n\t    }\n\t  };\n\t\n\t  return FullscreenToggle;\n\t}(_button2['default']);\n\t\n\t/**\n\t * The text that should display over the `FullscreenToggle`s controls. Added for localization.\n\t *\n\t * @type {string}\n\t * @private\n\t */\n\t\n\t\n\tFullscreenToggle.prototype.controlText_ = 'Fullscreen';\n\t\n\t_component2['default'].registerComponent('FullscreenToggle', FullscreenToggle);\n\texports['default'] = FullscreenToggle;\n\n\n/***/ },\n/* 80 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\texports.__esModule = true;\n\t\n\tvar _component = __webpack_require__(16);\n\t\n\tvar _component2 = _interopRequireDefault(_component);\n\t\n\t__webpack_require__(81);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /**\n\t                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * @file volume-control.js\n\t                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                */\n\t\n\t\n\t// Required children\n\t\n\t\n\t/**\n\t * The component for controlling the volume level\n\t *\n\t * @extends Component\n\t */\n\tvar VolumeControl = function (_Component) {\n\t  _inherits(VolumeControl, _Component);\n\t\n\t  /**\n\t   * Creates an instance of this class.\n\t   *\n\t   * @param {Player} player\n\t   *        The `Player` that this class should be attached to.\n\t   *\n\t   * @param {Object} [options={}]\n\t   *        The key/value store of player options.\n\t   */\n\t  function VolumeControl(player, options) {\n\t    _classCallCheck(this, VolumeControl);\n\t\n\t    // hide volume controls when they're not supported by the current tech\n\t    var _this = _possibleConstructorReturn(this, _Component.call(this, player, options));\n\t\n\t    if (player.tech_ && player.tech_.featuresVolumeControl === false) {\n\t      _this.addClass('vjs-hidden');\n\t    }\n\t    _this.on(player, 'loadstart', function () {\n\t      if (player.tech_.featuresVolumeControl === false) {\n\t        this.addClass('vjs-hidden');\n\t      } else {\n\t        this.removeClass('vjs-hidden');\n\t      }\n\t    });\n\t    return _this;\n\t  }\n\t\n\t  /**\n\t   * Create the `Component`'s DOM element\n\t   *\n\t   * @return {Element}\n\t   *         The element that was created.\n\t   */\n\t\n\t\n\t  VolumeControl.prototype.createEl = function createEl() {\n\t    return _Component.prototype.createEl.call(this, 'div', {\n\t      className: 'vjs-volume-control vjs-control'\n\t    });\n\t  };\n\t\n\t  return VolumeControl;\n\t}(_component2['default']);\n\t\n\t/**\n\t * Default options for the `VolumeControl`\n\t *\n\t * @type {Object}\n\t * @private\n\t */\n\t\n\t\n\tVolumeControl.prototype.options_ = {\n\t  children: ['volumeBar']\n\t};\n\t\n\t_component2['default'].registerComponent('VolumeControl', VolumeControl);\n\texports['default'] = VolumeControl;\n\n\n/***/ },\n/* 81 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\texports.__esModule = true;\n\t\n\tvar _slider = __webpack_require__(73);\n\t\n\tvar _slider2 = _interopRequireDefault(_slider);\n\t\n\tvar _component = __webpack_require__(16);\n\t\n\tvar _component2 = _interopRequireDefault(_component);\n\t\n\tvar _fn = __webpack_require__(17);\n\t\n\tvar Fn = _interopRequireWildcard(_fn);\n\t\n\t__webpack_require__(82);\n\t\n\tfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj['default'] = obj; return newObj; } }\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /**\n\t                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * @file volume-bar.js\n\t                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                */\n\t\n\t\n\t// Required children\n\t\n\t\n\t/**\n\t * The bar that contains the volume level and can be clicked on to adjust the level\n\t *\n\t * @extends Slider\n\t */\n\tvar VolumeBar = function (_Slider) {\n\t  _inherits(VolumeBar, _Slider);\n\t\n\t  /**\n\t   * Creates an instance of this class.\n\t   *\n\t   * @param {Player} player\n\t   *        The `Player` that this class should be attached to.\n\t   *\n\t   * @param {Object} [options]\n\t   *        The key/value store of player options.\n\t   */\n\t  function VolumeBar(player, options) {\n\t    _classCallCheck(this, VolumeBar);\n\t\n\t    var _this = _possibleConstructorReturn(this, _Slider.call(this, player, options));\n\t\n\t    _this.on(player, 'volumechange', _this.updateARIAAttributes);\n\t    player.ready(Fn.bind(_this, _this.updateARIAAttributes));\n\t    return _this;\n\t  }\n\t\n\t  /**\n\t   * Create the `Component`'s DOM element\n\t   *\n\t   * @return {Element}\n\t   *         The element that was created.\n\t   */\n\t\n\t\n\t  VolumeBar.prototype.createEl = function createEl() {\n\t    return _Slider.prototype.createEl.call(this, 'div', {\n\t      className: 'vjs-volume-bar vjs-slider-bar'\n\t    }, {\n\t      'aria-label': 'volume level'\n\t    });\n\t  };\n\t\n\t  /**\n\t   * Handle movement events on the {@link VolumeMenuButton}.\n\t   *\n\t   * @param {EventTarget~Event} event\n\t   *        The event that caused this function to run.\n\t   *\n\t   * @listens mousemove\n\t   */\n\t\n\t\n\t  VolumeBar.prototype.handleMouseMove = function handleMouseMove(event) {\n\t    this.checkMuted();\n\t    this.player_.volume(this.calculateDistance(event));\n\t  };\n\t\n\t  /**\n\t   * If the player is muted unmute it.\n\t   */\n\t\n\t\n\t  VolumeBar.prototype.checkMuted = function checkMuted() {\n\t    if (this.player_.muted()) {\n\t      this.player_.muted(false);\n\t    }\n\t  };\n\t\n\t  /**\n\t   * Get percent of volume level\n\t   *\n\t   * @return {number}\n\t   *         Volume level percent as a decimal number.\n\t   */\n\t\n\t\n\t  VolumeBar.prototype.getPercent = function getPercent() {\n\t    if (this.player_.muted()) {\n\t      return 0;\n\t    }\n\t    return this.player_.volume();\n\t  };\n\t\n\t  /**\n\t   * Increase volume level for keyboard users\n\t   */\n\t\n\t\n\t  VolumeBar.prototype.stepForward = function stepForward() {\n\t    this.checkMuted();\n\t    this.player_.volume(this.player_.volume() + 0.1);\n\t  };\n\t\n\t  /**\n\t   * Decrease volume level for keyboard users\n\t   */\n\t\n\t\n\t  VolumeBar.prototype.stepBack = function stepBack() {\n\t    this.checkMuted();\n\t    this.player_.volume(this.player_.volume() - 0.1);\n\t  };\n\t\n\t  /**\n\t   * Update ARIA accessibility attributes\n\t   *\n\t   * @param {EventTarget~Event} [event]\n\t   *        The `volumechange` event that caused this function to run.\n\t   *\n\t   * @listens Player#volumechange\n\t   */\n\t\n\t\n\t  VolumeBar.prototype.updateARIAAttributes = function updateARIAAttributes(event) {\n\t    // Current value of volume bar as a percentage\n\t    var volume = (this.player_.volume() * 100).toFixed(2);\n\t\n\t    this.el_.setAttribute('aria-valuenow', volume);\n\t    this.el_.setAttribute('aria-valuetext', volume + '%');\n\t  };\n\t\n\t  return VolumeBar;\n\t}(_slider2['default']);\n\t\n\t/**\n\t * Default options for the `VolumeBar`\n\t *\n\t * @type {Object}\n\t * @private\n\t */\n\t\n\t\n\tVolumeBar.prototype.options_ = {\n\t  children: ['volumeLevel'],\n\t  barName: 'volumeLevel'\n\t};\n\t\n\t/**\n\t * Call the update event for this Slider when this event happens on the player.\n\t *\n\t * @type {string}\n\t */\n\tVolumeBar.prototype.playerEvent = 'volumechange';\n\t\n\t_component2['default'].registerComponent('VolumeBar', VolumeBar);\n\texports['default'] = VolumeBar;\n\n\n/***/ },\n/* 82 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\texports.__esModule = true;\n\t\n\tvar _component = __webpack_require__(16);\n\t\n\tvar _component2 = _interopRequireDefault(_component);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /**\n\t                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * @file volume-level.js\n\t                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                */\n\t\n\t\n\t/**\n\t * Shows volume level\n\t *\n\t * @extends Component\n\t */\n\tvar VolumeLevel = function (_Component) {\n\t  _inherits(VolumeLevel, _Component);\n\t\n\t  function VolumeLevel() {\n\t    _classCallCheck(this, VolumeLevel);\n\t\n\t    return _possibleConstructorReturn(this, _Component.apply(this, arguments));\n\t  }\n\t\n\t  /**\n\t   * Create the `Component`'s DOM element\n\t   *\n\t   * @return {Element}\n\t   *         The element that was created.\n\t   */\n\t  VolumeLevel.prototype.createEl = function createEl() {\n\t    return _Component.prototype.createEl.call(this, 'div', {\n\t      className: 'vjs-volume-level',\n\t      innerHTML: '<span class=\"vjs-control-text\"></span>'\n\t    });\n\t  };\n\t\n\t  return VolumeLevel;\n\t}(_component2['default']);\n\t\n\t_component2['default'].registerComponent('VolumeLevel', VolumeLevel);\n\texports['default'] = VolumeLevel;\n\n\n/***/ },\n/* 83 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\texports.__esModule = true;\n\t\n\tvar _fn = __webpack_require__(17);\n\t\n\tvar Fn = _interopRequireWildcard(_fn);\n\t\n\tvar _component = __webpack_require__(16);\n\t\n\tvar _component2 = _interopRequireDefault(_component);\n\t\n\tvar _popup = __webpack_require__(84);\n\t\n\tvar _popup2 = _interopRequireDefault(_popup);\n\t\n\tvar _popupButton = __webpack_require__(85);\n\t\n\tvar _popupButton2 = _interopRequireDefault(_popupButton);\n\t\n\tvar _muteToggle = __webpack_require__(86);\n\t\n\tvar _muteToggle2 = _interopRequireDefault(_muteToggle);\n\t\n\tvar _volumeBar = __webpack_require__(81);\n\t\n\tvar _volumeBar2 = _interopRequireDefault(_volumeBar);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\t\n\tfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj['default'] = obj; return newObj; } }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /**\n\t                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * @file volume-menu-button.js\n\t                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                */\n\t\n\t\n\t/**\n\t * Button for volume popup\n\t *\n\t * @extends PopupButton\n\t */\n\tvar VolumeMenuButton = function (_PopupButton) {\n\t  _inherits(VolumeMenuButton, _PopupButton);\n\t\n\t  /**\n\t   * Creates an instance of this class.\n\t   *\n\t   * @param {Player} player\n\t   *        The `Player` that this class should be attached to.\n\t   *\n\t   * @param {Object} [options={}]\n\t   *        The key/value store of player options.\n\t   */\n\t  function VolumeMenuButton(player) {\n\t    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\t\n\t    _classCallCheck(this, VolumeMenuButton);\n\t\n\t    // Default to inline\n\t    if (options.inline === undefined) {\n\t      options.inline = true;\n\t    }\n\t\n\t    // If the vertical option isn't passed at all, default to true.\n\t    if (options.vertical === undefined) {\n\t      // If an inline volumeMenuButton is used, we should default to using\n\t      // a horizontal slider for obvious reasons.\n\t      if (options.inline) {\n\t        options.vertical = false;\n\t      } else {\n\t        options.vertical = true;\n\t      }\n\t    }\n\t\n\t    // The vertical option needs to be set on the volumeBar as well,\n\t    // since that will need to be passed along to the VolumeBar constructor\n\t    options.volumeBar = options.volumeBar || {};\n\t    options.volumeBar.vertical = !!options.vertical;\n\t\n\t    // Same listeners as MuteToggle\n\t    var _this = _possibleConstructorReturn(this, _PopupButton.call(this, player, options));\n\t\n\t    _this.on(player, 'volumechange', _this.volumeUpdate);\n\t    _this.on(player, 'loadstart', _this.volumeUpdate);\n\t\n\t    // hide mute toggle if the current tech doesn't support volume control\n\t    function updateVisibility() {\n\t      if (player.tech_ && player.tech_.featuresVolumeControl === false) {\n\t        this.addClass('vjs-hidden');\n\t      } else {\n\t        this.removeClass('vjs-hidden');\n\t      }\n\t    }\n\t\n\t    updateVisibility.call(_this);\n\t    _this.on(player, 'loadstart', updateVisibility);\n\t\n\t    _this.on(_this.volumeBar, ['slideractive', 'focus'], function () {\n\t      this.addClass('vjs-slider-active');\n\t    });\n\t\n\t    _this.on(_this.volumeBar, ['sliderinactive', 'blur'], function () {\n\t      this.removeClass('vjs-slider-active');\n\t    });\n\t\n\t    _this.on(_this.volumeBar, ['focus'], function () {\n\t      this.addClass('vjs-lock-showing');\n\t    });\n\t\n\t    _this.on(_this.volumeBar, ['blur'], function () {\n\t      this.removeClass('vjs-lock-showing');\n\t    });\n\t    return _this;\n\t  }\n\t\n\t  /**\n\t   * Builds the default DOM `className`.\n\t   *\n\t   * @return {string}\n\t   *         The DOM `className` for this object.\n\t   */\n\t\n\t\n\t  VolumeMenuButton.prototype.buildCSSClass = function buildCSSClass() {\n\t    var orientationClass = '';\n\t\n\t    if (this.options_.vertical) {\n\t      orientationClass = 'vjs-volume-menu-button-vertical';\n\t    } else {\n\t      orientationClass = 'vjs-volume-menu-button-horizontal';\n\t    }\n\t\n\t    return 'vjs-volume-menu-button ' + _PopupButton.prototype.buildCSSClass.call(this) + ' ' + orientationClass;\n\t  };\n\t\n\t  /**\n\t   * Create the VolumeMenuButton popup\n\t   *\n\t   * @return {Popup}\n\t   *         The popup that was created\n\t   */\n\t\n\t\n\t  VolumeMenuButton.prototype.createPopup = function createPopup() {\n\t    var popup = new _popup2['default'](this.player_, {\n\t      contentElType: 'div'\n\t    });\n\t\n\t    var vb = new _volumeBar2['default'](this.player_, this.options_.volumeBar);\n\t\n\t    popup.addChild(vb);\n\t\n\t    this.menuContent = popup;\n\t    this.volumeBar = vb;\n\t\n\t    this.attachVolumeBarEvents();\n\t\n\t    return popup;\n\t  };\n\t\n\t  /**\n\t   * This gets called when an `VolumeMenuButton` is \"clicked\". See\n\t   * {@link ClickableComponent} for more detailed information on what a click can be.\n\t   *\n\t   * @param {EventTarget~Event} [event]\n\t   *        The `keydown`, `tap`, or `click` event that caused this function to be\n\t   *        called.\n\t   *\n\t   * @listens tap\n\t   * @listens click\n\t   */\n\t\n\t\n\t  VolumeMenuButton.prototype.handleClick = function handleClick(event) {\n\t    _muteToggle2['default'].prototype.handleClick.call(this);\n\t    _PopupButton.prototype.handleClick.call(this);\n\t  };\n\t\n\t  /**\n\t   * Add events listeners to the created `VolumeBar`.\n\t   */\n\t\n\t\n\t  VolumeMenuButton.prototype.attachVolumeBarEvents = function attachVolumeBarEvents() {\n\t    this.menuContent.on(['mousedown', 'touchdown'], Fn.bind(this, this.handleMouseDown));\n\t  };\n\t\n\t  /**\n\t   * Handle the `mousedown` and `touchdown` events on the `VolumeBar`\n\t   *\n\t   * @param {EventTarget~Event} [event]\n\t   *        The `mousedown` or `touchdown` event that caused this to run.\n\t   *\n\t   * @listens mousedown\n\t   * @listens touchdown\n\t   */\n\t\n\t\n\t  VolumeMenuButton.prototype.handleMouseDown = function handleMouseDown(event) {\n\t    this.on(['mousemove', 'touchmove'], Fn.bind(this.volumeBar, this.volumeBar.handleMouseMove));\n\t    this.on(this.el_.ownerDocument, ['mouseup', 'touchend'], this.handleMouseUp);\n\t  };\n\t\n\t  /**\n\t   * Handle the `mouseup` and `touchend` events on the `VolumeBar`\n\t   *\n\t   * @param {EventTarget~Event} [event]\n\t   *        The `mouseup` or `touchend` event that caused this to run.\n\t   *\n\t   * @listens mouseup\n\t   * @listens touchend\n\t   */\n\t\n\t\n\t  VolumeMenuButton.prototype.handleMouseUp = function handleMouseUp(event) {\n\t    this.off(['mousemove', 'touchmove'], Fn.bind(this.volumeBar, this.volumeBar.handleMouseMove));\n\t  };\n\t\n\t  return VolumeMenuButton;\n\t}(_popupButton2['default']);\n\t\n\t/**\n\t * @borrows MuteToggle#update as VolumeMenuButton#volumeUpdate\n\t */\n\t\n\t\n\tVolumeMenuButton.prototype.volumeUpdate = _muteToggle2['default'].prototype.update;\n\t\n\t/**\n\t * The text that should display over the `VolumeMenuButton`s controls. Added for localization.\n\t *\n\t * @type {string}\n\t * @private\n\t */\n\tVolumeMenuButton.prototype.controlText_ = 'Mute';\n\t\n\t_component2['default'].registerComponent('VolumeMenuButton', VolumeMenuButton);\n\texports['default'] = VolumeMenuButton;\n\n\n/***/ },\n/* 84 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\texports.__esModule = true;\n\t\n\tvar _component = __webpack_require__(16);\n\t\n\tvar _component2 = _interopRequireDefault(_component);\n\t\n\tvar _dom = __webpack_require__(8);\n\t\n\tvar Dom = _interopRequireWildcard(_dom);\n\t\n\tvar _fn = __webpack_require__(17);\n\t\n\tvar Fn = _interopRequireWildcard(_fn);\n\t\n\tvar _events = __webpack_require__(14);\n\t\n\tvar Events = _interopRequireWildcard(_events);\n\t\n\tfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj['default'] = obj; return newObj; } }\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /**\n\t                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * @file popup.js\n\t                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                */\n\t\n\t\n\t/**\n\t * The Popup component is used to build pop up controls.\n\t *\n\t * @extends Component\n\t */\n\tvar Popup = function (_Component) {\n\t  _inherits(Popup, _Component);\n\t\n\t  function Popup() {\n\t    _classCallCheck(this, Popup);\n\t\n\t    return _possibleConstructorReturn(this, _Component.apply(this, arguments));\n\t  }\n\t\n\t  /**\n\t   * Add a popup item to the popup\n\t   *\n\t   * @param {Object|string} component\n\t   *        Component or component type to add\n\t   *\n\t   */\n\t  Popup.prototype.addItem = function addItem(component) {\n\t    this.addChild(component);\n\t    component.on('click', Fn.bind(this, function () {\n\t      this.unlockShowing();\n\t    }));\n\t  };\n\t\n\t  /**\n\t   * Create the `PopupButton`s DOM element.\n\t   *\n\t   * @return {Element}\n\t   *         The element that gets created.\n\t   */\n\t\n\t\n\t  Popup.prototype.createEl = function createEl() {\n\t    var contentElType = this.options_.contentElType || 'ul';\n\t\n\t    this.contentEl_ = Dom.createEl(contentElType, {\n\t      className: 'vjs-menu-content'\n\t    });\n\t\n\t    var el = _Component.prototype.createEl.call(this, 'div', {\n\t      append: this.contentEl_,\n\t      className: 'vjs-menu'\n\t    });\n\t\n\t    el.appendChild(this.contentEl_);\n\t\n\t    // Prevent clicks from bubbling up. Needed for Popup Buttons,\n\t    // where a click on the parent is significant\n\t    Events.on(el, 'click', function (event) {\n\t      event.preventDefault();\n\t      event.stopImmediatePropagation();\n\t    });\n\t\n\t    return el;\n\t  };\n\t\n\t  return Popup;\n\t}(_component2['default']);\n\t\n\t_component2['default'].registerComponent('Popup', Popup);\n\texports['default'] = Popup;\n\n\n/***/ },\n/* 85 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\texports.__esModule = true;\n\t\n\tvar _clickableComponent = __webpack_require__(57);\n\t\n\tvar _clickableComponent2 = _interopRequireDefault(_clickableComponent);\n\t\n\tvar _component = __webpack_require__(16);\n\t\n\tvar _component2 = _interopRequireDefault(_component);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /**\n\t                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * @file popup-button.js\n\t                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                */\n\t\n\t\n\t/**\n\t * A button class for use with {@link Popup} controls\n\t *\n\t * @extends ClickableComponent\n\t */\n\tvar PopupButton = function (_ClickableComponent) {\n\t  _inherits(PopupButton, _ClickableComponent);\n\t\n\t  /**\n\t   * Create an instance of this class.\n\t   *\n\t   * @param {Player} player\n\t   *        The `Player` that this class should be attached to.\n\t   *\n\t   * @param {Object} [options]\n\t   *        The key/value store of player options.\n\t   */\n\t  function PopupButton(player) {\n\t    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\t\n\t    _classCallCheck(this, PopupButton);\n\t\n\t    var _this = _possibleConstructorReturn(this, _ClickableComponent.call(this, player, options));\n\t\n\t    _this.update();\n\t    return _this;\n\t  }\n\t\n\t  /**\n\t   * Update the `Popup` that this button is attached to.\n\t   */\n\t\n\t\n\t  PopupButton.prototype.update = function update() {\n\t    var popup = this.createPopup();\n\t\n\t    if (this.popup) {\n\t      this.removeChild(this.popup);\n\t    }\n\t\n\t    this.popup = popup;\n\t    this.addChild(popup);\n\t\n\t    if (this.items && this.items.length === 0) {\n\t      this.hide();\n\t    } else if (this.items && this.items.length > 1) {\n\t      this.show();\n\t    }\n\t  };\n\t\n\t  /**\n\t   * Create a `Popup`. - Override with specific functionality for component\n\t   *\n\t   * @abstract\n\t   */\n\t\n\t\n\t  PopupButton.prototype.createPopup = function createPopup() {};\n\t\n\t  /**\n\t   * Create the `PopupButton`s DOM element.\n\t   *\n\t   * @return {Element}\n\t   *         The element that gets created.\n\t   */\n\t\n\t\n\t  PopupButton.prototype.createEl = function createEl() {\n\t    return _ClickableComponent.prototype.createEl.call(this, 'div', {\n\t      className: this.buildCSSClass()\n\t    });\n\t  };\n\t\n\t  /**\n\t   * Builds the default DOM `className`.\n\t   *\n\t   * @return {string}\n\t   *         The DOM `className` for this object.\n\t   */\n\t\n\t\n\t  PopupButton.prototype.buildCSSClass = function buildCSSClass() {\n\t    var menuButtonClass = 'vjs-menu-button';\n\t\n\t    // If the inline option is passed, we want to use different styles altogether.\n\t    if (this.options_.inline === true) {\n\t      menuButtonClass += '-inline';\n\t    } else {\n\t      menuButtonClass += '-popup';\n\t    }\n\t\n\t    return 'vjs-menu-button ' + menuButtonClass + ' ' + _ClickableComponent.prototype.buildCSSClass.call(this);\n\t  };\n\t\n\t  return PopupButton;\n\t}(_clickableComponent2['default']);\n\t\n\t_component2['default'].registerComponent('PopupButton', PopupButton);\n\texports['default'] = PopupButton;\n\n\n/***/ },\n/* 86 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\texports.__esModule = true;\n\t\n\tvar _button = __webpack_require__(61);\n\t\n\tvar _button2 = _interopRequireDefault(_button);\n\t\n\tvar _component = __webpack_require__(16);\n\t\n\tvar _component2 = _interopRequireDefault(_component);\n\t\n\tvar _dom = __webpack_require__(8);\n\t\n\tvar Dom = _interopRequireWildcard(_dom);\n\t\n\tfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj['default'] = obj; return newObj; } }\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /**\n\t                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * @file mute-toggle.js\n\t                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                */\n\t\n\t\n\t/**\n\t * A button component for muting the audio.\n\t *\n\t * @extends Button\n\t */\n\tvar MuteToggle = function (_Button) {\n\t  _inherits(MuteToggle, _Button);\n\t\n\t  /**\n\t   * Creates an instance of this class.\n\t   *\n\t   * @param {Player} player\n\t   *        The `Player` that this class should be attached to.\n\t   *\n\t   * @param {Object} [options]\n\t   *        The key/value store of player options.\n\t   */\n\t  function MuteToggle(player, options) {\n\t    _classCallCheck(this, MuteToggle);\n\t\n\t    var _this = _possibleConstructorReturn(this, _Button.call(this, player, options));\n\t\n\t    _this.on(player, 'volumechange', _this.update);\n\t\n\t    // hide mute toggle if the current tech doesn't support volume control\n\t    if (player.tech_ && player.tech_.featuresVolumeControl === false) {\n\t      _this.addClass('vjs-hidden');\n\t    }\n\t\n\t    _this.on(player, 'loadstart', function () {\n\t      // We need to update the button to account for a default muted state.\n\t      this.update();\n\t\n\t      if (player.tech_.featuresVolumeControl === false) {\n\t        this.addClass('vjs-hidden');\n\t      } else {\n\t        this.removeClass('vjs-hidden');\n\t      }\n\t    });\n\t    return _this;\n\t  }\n\t\n\t  /**\n\t   * Builds the default DOM `className`.\n\t   *\n\t   * @return {string}\n\t   *         The DOM `className` for this object.\n\t   */\n\t\n\t\n\t  MuteToggle.prototype.buildCSSClass = function buildCSSClass() {\n\t    return 'vjs-mute-control ' + _Button.prototype.buildCSSClass.call(this);\n\t  };\n\t\n\t  /**\n\t   * This gets called when an `MuteToggle` is \"clicked\". See\n\t   * {@link ClickableComponent} for more detailed information on what a click can be.\n\t   *\n\t   * @param {EventTarget~Event} [event]\n\t   *        The `keydown`, `tap`, or `click` event that caused this function to be\n\t   *        called.\n\t   *\n\t   * @listens tap\n\t   * @listens click\n\t   */\n\t\n\t\n\t  MuteToggle.prototype.handleClick = function handleClick(event) {\n\t    this.player_.muted(this.player_.muted() ? false : true);\n\t  };\n\t\n\t  /**\n\t   * Update the state of volume.\n\t   *\n\t   * @param {EventTarget~Event} [event]\n\t   *        The {@link Player#loadstart} event if this function was called through an\n\t   *        event.\n\t   *\n\t   * @listens Player#loadstart\n\t   */\n\t\n\t\n\t  MuteToggle.prototype.update = function update(event) {\n\t    var vol = this.player_.volume();\n\t    var level = 3;\n\t\n\t    if (vol === 0 || this.player_.muted()) {\n\t      level = 0;\n\t    } else if (vol < 0.33) {\n\t      level = 1;\n\t    } else if (vol < 0.67) {\n\t      level = 2;\n\t    }\n\t\n\t    // Don't rewrite the button text if the actual text doesn't change.\n\t    // This causes unnecessary and confusing information for screen reader users.\n\t    // This check is needed because this function gets called every time the volume level is changed.\n\t    var toMute = this.player_.muted() ? 'Unmute' : 'Mute';\n\t\n\t    if (this.controlText() !== toMute) {\n\t      this.controlText(toMute);\n\t    }\n\t\n\t    // TODO improve muted icon classes\n\t    for (var i = 0; i < 4; i++) {\n\t      Dom.removeElClass(this.el_, 'vjs-vol-' + i);\n\t    }\n\t    Dom.addElClass(this.el_, 'vjs-vol-' + level);\n\t  };\n\t\n\t  return MuteToggle;\n\t}(_button2['default']);\n\t\n\t/**\n\t * The text that should display over the `MuteToggle`s controls. Added for localization.\n\t *\n\t * @type {string}\n\t * @private\n\t */\n\t\n\t\n\tMuteToggle.prototype.controlText_ = 'Mute';\n\t\n\t_component2['default'].registerComponent('MuteToggle', MuteToggle);\n\texports['default'] = MuteToggle;\n\n\n/***/ },\n/* 87 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\texports.__esModule = true;\n\t\n\tvar _textTrackButton = __webpack_require__(88);\n\t\n\tvar _textTrackButton2 = _interopRequireDefault(_textTrackButton);\n\t\n\tvar _component = __webpack_require__(16);\n\t\n\tvar _component2 = _interopRequireDefault(_component);\n\t\n\tvar _chaptersTrackMenuItem = __webpack_require__(95);\n\t\n\tvar _chaptersTrackMenuItem2 = _interopRequireDefault(_chaptersTrackMenuItem);\n\t\n\tvar _toTitleCase = __webpack_require__(18);\n\t\n\tvar _toTitleCase2 = _interopRequireDefault(_toTitleCase);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /**\n\t                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * @file chapters-button.js\n\t                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                */\n\t\n\t\n\t/**\n\t * The button component for toggling and selecting chapters\n\t * Chapters act much differently than other text tracks\n\t * Cues are navigation vs. other tracks of alternative languages\n\t *\n\t * @extends TextTrackButton\n\t */\n\tvar ChaptersButton = function (_TextTrackButton) {\n\t  _inherits(ChaptersButton, _TextTrackButton);\n\t\n\t  /**\n\t   * Creates an instance of this class.\n\t   *\n\t   * @param {Player} player\n\t   *        The `Player` that this class should be attached to.\n\t   *\n\t   * @param {Object} [options]\n\t   *        The key/value store of player options.\n\t   *\n\t   * @param {Component~ReadyCallback} [ready]\n\t   *        The function to call when this function is ready.\n\t   */\n\t  function ChaptersButton(player, options, ready) {\n\t    _classCallCheck(this, ChaptersButton);\n\t\n\t    var _this = _possibleConstructorReturn(this, _TextTrackButton.call(this, player, options, ready));\n\t\n\t    _this.el_.setAttribute('aria-label', 'Chapters Menu');\n\t    return _this;\n\t  }\n\t\n\t  /**\n\t   * Builds the default DOM `className`.\n\t   *\n\t   * @return {string}\n\t   *         The DOM `className` for this object.\n\t   */\n\t\n\t\n\t  ChaptersButton.prototype.buildCSSClass = function buildCSSClass() {\n\t    return 'vjs-chapters-button ' + _TextTrackButton.prototype.buildCSSClass.call(this);\n\t  };\n\t\n\t  /**\n\t   * Update the menu based on the current state of its items.\n\t   *\n\t   * @param {EventTarget~Event} [event]\n\t   *        An event that triggered this function to run.\n\t   *\n\t   * @listens TextTrackList#addtrack\n\t   * @listens TextTrackList#removetrack\n\t   * @listens TextTrackList#change\n\t   */\n\t\n\t\n\t  ChaptersButton.prototype.update = function update(event) {\n\t    if (!this.track_ || event && (event.type === 'addtrack' || event.type === 'removetrack')) {\n\t      this.setTrack(this.findChaptersTrack());\n\t    }\n\t    _TextTrackButton.prototype.update.call(this);\n\t  };\n\t\n\t  /**\n\t   * Set the currently selected track for the chapters button.\n\t   *\n\t   * @param {TextTrack} track\n\t   *        The new track to select. Nothing will change if this is the currently selected\n\t   *        track.\n\t   */\n\t\n\t\n\t  ChaptersButton.prototype.setTrack = function setTrack(track) {\n\t    if (this.track_ === track) {\n\t      return;\n\t    }\n\t\n\t    if (!this.updateHandler_) {\n\t      this.updateHandler_ = this.update.bind(this);\n\t    }\n\t\n\t    // here this.track_ refers to the old track instance\n\t    if (this.track_) {\n\t      var remoteTextTrackEl = this.player_.remoteTextTrackEls().getTrackElementByTrack_(this.track_);\n\t\n\t      if (remoteTextTrackEl) {\n\t        remoteTextTrackEl.removeEventListener('load', this.updateHandler_);\n\t      }\n\t\n\t      this.track_ = null;\n\t    }\n\t\n\t    this.track_ = track;\n\t\n\t    // here this.track_ refers to the new track instance\n\t    if (this.track_) {\n\t      this.track_.mode = 'hidden';\n\t\n\t      var _remoteTextTrackEl = this.player_.remoteTextTrackEls().getTrackElementByTrack_(this.track_);\n\t\n\t      if (_remoteTextTrackEl) {\n\t        _remoteTextTrackEl.addEventListener('load', this.updateHandler_);\n\t      }\n\t    }\n\t  };\n\t\n\t  /**\n\t   * Find the track object that is currently in use by this ChaptersButton\n\t   *\n\t   * @return {TextTrack|undefined}\n\t   *         The current track or undefined if none was found.\n\t   */\n\t\n\t\n\t  ChaptersButton.prototype.findChaptersTrack = function findChaptersTrack() {\n\t    var tracks = this.player_.textTracks() || [];\n\t\n\t    for (var i = tracks.length - 1; i >= 0; i--) {\n\t      // We will always choose the last track as our chaptersTrack\n\t      var track = tracks[i];\n\t\n\t      if (track.kind === this.kind_) {\n\t        return track;\n\t      }\n\t    }\n\t  };\n\t\n\t  /**\n\t   * Get the caption for the ChaptersButton based on the track label. This will also\n\t   * use the current tracks localized kind as a fallback if a label does not exist.\n\t   *\n\t   * @return {string}\n\t   *         The tracks current label or the localized track kind.\n\t   */\n\t\n\t\n\t  ChaptersButton.prototype.getMenuCaption = function getMenuCaption() {\n\t    if (this.track_ && this.track_.label) {\n\t      return this.track_.label;\n\t    }\n\t    return this.localize((0, _toTitleCase2['default'])(this.kind_));\n\t  };\n\t\n\t  /**\n\t   * Create menu from chapter track\n\t   *\n\t   * @return {Menu}\n\t   *         New menu for the chapter buttons\n\t   */\n\t\n\t\n\t  ChaptersButton.prototype.createMenu = function createMenu() {\n\t    this.options_.title = this.getMenuCaption();\n\t    return _TextTrackButton.prototype.createMenu.call(this);\n\t  };\n\t\n\t  /**\n\t   * Create a menu item for each text track\n\t   *\n\t   * @return {TextTrackMenuItem[]}\n\t   *         Array of menu items\n\t   */\n\t\n\t\n\t  ChaptersButton.prototype.createItems = function createItems() {\n\t    var items = [];\n\t\n\t    if (!this.track_) {\n\t      return items;\n\t    }\n\t\n\t    var cues = this.track_.cues;\n\t\n\t    if (!cues) {\n\t      return items;\n\t    }\n\t\n\t    for (var i = 0, l = cues.length; i < l; i++) {\n\t      var cue = cues[i];\n\t      var mi = new _chaptersTrackMenuItem2['default'](this.player_, { track: this.track_, cue: cue });\n\t\n\t      items.push(mi);\n\t    }\n\t\n\t    return items;\n\t  };\n\t\n\t  return ChaptersButton;\n\t}(_textTrackButton2['default']);\n\t\n\t/**\n\t * `kind` of TextTrack to look for to associate it with this menu.\n\t *\n\t * @type {string}\n\t * @private\n\t */\n\t\n\t\n\tChaptersButton.prototype.kind_ = 'chapters';\n\t\n\t/**\n\t * The text that should display over the `ChaptersButton`s controls. Added for localization.\n\t *\n\t * @type {string}\n\t * @private\n\t */\n\tChaptersButton.prototype.controlText_ = 'Chapters';\n\t\n\t_component2['default'].registerComponent('ChaptersButton', ChaptersButton);\n\texports['default'] = ChaptersButton;\n\n\n/***/ },\n/* 88 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\texports.__esModule = true;\n\t\n\tvar _trackButton = __webpack_require__(89);\n\t\n\tvar _trackButton2 = _interopRequireDefault(_trackButton);\n\t\n\tvar _component = __webpack_require__(16);\n\t\n\tvar _component2 = _interopRequireDefault(_component);\n\t\n\tvar _textTrackMenuItem = __webpack_require__(92);\n\t\n\tvar _textTrackMenuItem2 = _interopRequireDefault(_textTrackMenuItem);\n\t\n\tvar _offTextTrackMenuItem = __webpack_require__(94);\n\t\n\tvar _offTextTrackMenuItem2 = _interopRequireDefault(_offTextTrackMenuItem);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /**\n\t                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * @file text-track-button.js\n\t                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                */\n\t\n\t\n\t/**\n\t * The base class for buttons that toggle specific text track types (e.g. subtitles)\n\t *\n\t * @extends MenuButton\n\t */\n\tvar TextTrackButton = function (_TrackButton) {\n\t  _inherits(TextTrackButton, _TrackButton);\n\t\n\t  /**\n\t   * Creates an instance of this class.\n\t   *\n\t   * @param {Player} player\n\t   *        The `Player` that this class should be attached to.\n\t   *\n\t   * @param {Object} [options={}]\n\t   *        The key/value store of player options.\n\t   */\n\t  function TextTrackButton(player) {\n\t    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\t\n\t    _classCallCheck(this, TextTrackButton);\n\t\n\t    options.tracks = player.textTracks();\n\t\n\t    return _possibleConstructorReturn(this, _TrackButton.call(this, player, options));\n\t  }\n\t\n\t  /**\n\t   * Create a menu item for each text track\n\t   *\n\t   * @param {TextTrackMenuItem[]} [items=[]]\n\t   *        Existing array of items to use during creation\n\t   *\n\t   * @return {TextTrackMenuItem[]}\n\t   *         Array of menu items that were created\n\t   */\n\t\n\t\n\t  TextTrackButton.prototype.createItems = function createItems() {\n\t    var items = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n\t\n\t    // Add an OFF menu item to turn all tracks off\n\t    items.push(new _offTextTrackMenuItem2['default'](this.player_, { kind: this.kind_ }));\n\t\n\t    var tracks = this.player_.textTracks();\n\t\n\t    if (!tracks) {\n\t      return items;\n\t    }\n\t\n\t    for (var i = 0; i < tracks.length; i++) {\n\t      var track = tracks[i];\n\t\n\t      // only add tracks that are of the appropriate kind and have a label\n\t      if (track.kind === this.kind_) {\n\t        items.push(new _textTrackMenuItem2['default'](this.player_, {\n\t          track: track,\n\t          // MenuItem is selectable\n\t          selectable: true\n\t        }));\n\t      }\n\t    }\n\t\n\t    return items;\n\t  };\n\t\n\t  return TextTrackButton;\n\t}(_trackButton2['default']);\n\t\n\t_component2['default'].registerComponent('TextTrackButton', TextTrackButton);\n\texports['default'] = TextTrackButton;\n\n\n/***/ },\n/* 89 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\texports.__esModule = true;\n\t\n\tvar _menuButton = __webpack_require__(90);\n\t\n\tvar _menuButton2 = _interopRequireDefault(_menuButton);\n\t\n\tvar _component = __webpack_require__(16);\n\t\n\tvar _component2 = _interopRequireDefault(_component);\n\t\n\tvar _fn = __webpack_require__(17);\n\t\n\tvar Fn = _interopRequireWildcard(_fn);\n\t\n\tfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj['default'] = obj; return newObj; } }\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /**\n\t                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * @file track-button.js\n\t                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                */\n\t\n\t\n\t/**\n\t * The base class for buttons that toggle specific  track types (e.g. subtitles).\n\t *\n\t * @extends MenuButton\n\t */\n\tvar TrackButton = function (_MenuButton) {\n\t  _inherits(TrackButton, _MenuButton);\n\t\n\t  /**\n\t   * Creates an instance of this class.\n\t   *\n\t   * @param {Player} player\n\t   *        The `Player` that this class should be attached to.\n\t   *\n\t   * @param {Object} [options]\n\t   *        The key/value store of player options.\n\t   */\n\t  function TrackButton(player, options) {\n\t    _classCallCheck(this, TrackButton);\n\t\n\t    var tracks = options.tracks;\n\t\n\t    var _this = _possibleConstructorReturn(this, _MenuButton.call(this, player, options));\n\t\n\t    if (_this.items.length <= 1) {\n\t      _this.hide();\n\t    }\n\t\n\t    if (!tracks) {\n\t      return _possibleConstructorReturn(_this);\n\t    }\n\t\n\t    var updateHandler = Fn.bind(_this, _this.update);\n\t\n\t    tracks.addEventListener('removetrack', updateHandler);\n\t    tracks.addEventListener('addtrack', updateHandler);\n\t\n\t    _this.player_.on('dispose', function () {\n\t      tracks.removeEventListener('removetrack', updateHandler);\n\t      tracks.removeEventListener('addtrack', updateHandler);\n\t    });\n\t    return _this;\n\t  }\n\t\n\t  return TrackButton;\n\t}(_menuButton2['default']);\n\t\n\t_component2['default'].registerComponent('TrackButton', TrackButton);\n\texports['default'] = TrackButton;\n\n\n/***/ },\n/* 90 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\texports.__esModule = true;\n\t\n\tvar _clickableComponent = __webpack_require__(57);\n\t\n\tvar _clickableComponent2 = _interopRequireDefault(_clickableComponent);\n\t\n\tvar _component = __webpack_require__(16);\n\t\n\tvar _component2 = _interopRequireDefault(_component);\n\t\n\tvar _menu = __webpack_require__(91);\n\t\n\tvar _menu2 = _interopRequireDefault(_menu);\n\t\n\tvar _dom = __webpack_require__(8);\n\t\n\tvar Dom = _interopRequireWildcard(_dom);\n\t\n\tvar _fn = __webpack_require__(17);\n\t\n\tvar Fn = _interopRequireWildcard(_fn);\n\t\n\tvar _toTitleCase = __webpack_require__(18);\n\t\n\tvar _toTitleCase2 = _interopRequireDefault(_toTitleCase);\n\t\n\tfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj['default'] = obj; return newObj; } }\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /**\n\t                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * @file menu-button.js\n\t                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                */\n\t\n\t\n\t/**\n\t * A `MenuButton` class for any popup {@link Menu}.\n\t *\n\t * @extends ClickableComponent\n\t */\n\tvar MenuButton = function (_ClickableComponent) {\n\t  _inherits(MenuButton, _ClickableComponent);\n\t\n\t  /**\n\t   * Creates an instance of this class.\n\t   *\n\t   * @param {Player} player\n\t   *        The `Player` that this class should be attached to.\n\t   *\n\t   * @param {Object} [options={}]\n\t   *        The key/value store of player options.\n\t   */\n\t  function MenuButton(player) {\n\t    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\t\n\t    _classCallCheck(this, MenuButton);\n\t\n\t    var _this = _possibleConstructorReturn(this, _ClickableComponent.call(this, player, options));\n\t\n\t    _this.update();\n\t\n\t    _this.enabled_ = true;\n\t\n\t    _this.el_.setAttribute('aria-haspopup', 'true');\n\t    _this.el_.setAttribute('role', 'menuitem');\n\t    _this.on('keydown', _this.handleSubmenuKeyPress);\n\t    return _this;\n\t  }\n\t\n\t  /**\n\t   * Update the menu based on the current state of its items.\n\t   */\n\t\n\t\n\t  MenuButton.prototype.update = function update() {\n\t    var menu = this.createMenu();\n\t\n\t    if (this.menu) {\n\t      this.removeChild(this.menu);\n\t    }\n\t\n\t    this.menu = menu;\n\t    this.addChild(menu);\n\t\n\t    /**\n\t     * Track the state of the menu button\n\t     *\n\t     * @type {Boolean}\n\t     * @private\n\t     */\n\t    this.buttonPressed_ = false;\n\t    this.el_.setAttribute('aria-expanded', 'false');\n\t\n\t    if (this.items && this.items.length === 0) {\n\t      this.hide();\n\t    } else if (this.items && this.items.length > 1) {\n\t      this.show();\n\t    }\n\t  };\n\t\n\t  /**\n\t   * Create the menu and add all items to it.\n\t   *\n\t   * @return {Menu}\n\t   *         The constructed menu\n\t   */\n\t\n\t\n\t  MenuButton.prototype.createMenu = function createMenu() {\n\t    var menu = new _menu2['default'](this.player_);\n\t\n\t    // Add a title list item to the top\n\t    if (this.options_.title) {\n\t      var title = Dom.createEl('li', {\n\t        className: 'vjs-menu-title',\n\t        innerHTML: (0, _toTitleCase2['default'])(this.options_.title),\n\t        tabIndex: -1\n\t      });\n\t\n\t      menu.children_.unshift(title);\n\t      Dom.insertElFirst(title, menu.contentEl());\n\t    }\n\t\n\t    this.items = this.createItems();\n\t\n\t    if (this.items) {\n\t      // Add menu items to the menu\n\t      for (var i = 0; i < this.items.length; i++) {\n\t        menu.addItem(this.items[i]);\n\t      }\n\t    }\n\t\n\t    return menu;\n\t  };\n\t\n\t  /**\n\t   * Create the list of menu items. Specific to each subclass.\n\t   *\n\t   * @abstract\n\t   */\n\t\n\t\n\t  MenuButton.prototype.createItems = function createItems() {};\n\t\n\t  /**\n\t   * Create the `MenuButtons`s DOM element.\n\t   *\n\t   * @return {Element}\n\t   *         The element that gets created.\n\t   */\n\t\n\t\n\t  MenuButton.prototype.createEl = function createEl() {\n\t    return _ClickableComponent.prototype.createEl.call(this, 'div', {\n\t      className: this.buildCSSClass()\n\t    });\n\t  };\n\t\n\t  /**\n\t   * Builds the default DOM `className`.\n\t   *\n\t   * @return {string}\n\t   *         The DOM `className` for this object.\n\t   */\n\t\n\t\n\t  MenuButton.prototype.buildCSSClass = function buildCSSClass() {\n\t    var menuButtonClass = 'vjs-menu-button';\n\t\n\t    // If the inline option is passed, we want to use different styles altogether.\n\t    if (this.options_.inline === true) {\n\t      menuButtonClass += '-inline';\n\t    } else {\n\t      menuButtonClass += '-popup';\n\t    }\n\t\n\t    return 'vjs-menu-button ' + menuButtonClass + ' ' + _ClickableComponent.prototype.buildCSSClass.call(this);\n\t  };\n\t\n\t  /**\n\t   * Handle a click on a `MenuButton`.\n\t   * See {@link ClickableComponent#handleClick} for instances where this is called.\n\t   *\n\t   * @param {EventTarget~Event} event\n\t   *        The `keydown`, `tap`, or `click` event that caused this function to be\n\t   *        called.\n\t   *\n\t   * @listens tap\n\t   * @listens click\n\t   */\n\t\n\t\n\t  MenuButton.prototype.handleClick = function handleClick(event) {\n\t    // When you click the button it adds focus, which will show the menu.\n\t    // So we'll remove focus when the mouse leaves the button. Focus is needed\n\t    // for tab navigation.\n\t\n\t    this.one(this.menu.contentEl(), 'mouseleave', Fn.bind(this, function (e) {\n\t      this.unpressButton();\n\t      this.el_.blur();\n\t    }));\n\t    if (this.buttonPressed_) {\n\t      this.unpressButton();\n\t    } else {\n\t      this.pressButton();\n\t    }\n\t  };\n\t\n\t  /**\n\t   * Handle tab, escape, down arrow, and up arrow keys for `MenuButton`. See\n\t   * {@link ClickableComponent#handleKeyPress} for instances where this is called.\n\t   *\n\t   * @param {EventTarget~Event} event\n\t   *        The `keydown` event that caused this function to be called.\n\t   *\n\t   * @listens keydown\n\t   */\n\t\n\t\n\t  MenuButton.prototype.handleKeyPress = function handleKeyPress(event) {\n\t\n\t    // Escape (27) key or Tab (9) key unpress the 'button'\n\t    if (event.which === 27 || event.which === 9) {\n\t      if (this.buttonPressed_) {\n\t        this.unpressButton();\n\t      }\n\t      // Don't preventDefault for Tab key - we still want to lose focus\n\t      if (event.which !== 9) {\n\t        event.preventDefault();\n\t      }\n\t      // Up (38) key or Down (40) key press the 'button'\n\t    } else if (event.which === 38 || event.which === 40) {\n\t      if (!this.buttonPressed_) {\n\t        this.pressButton();\n\t        event.preventDefault();\n\t      }\n\t    } else {\n\t      _ClickableComponent.prototype.handleKeyPress.call(this, event);\n\t    }\n\t  };\n\t\n\t  /**\n\t   * Handle a `keydown` event on a sub-menu. The listener for this is added in\n\t   * the constructor.\n\t   *\n\t   * @param {EventTarget~Event} event\n\t   *        Key press event\n\t   *\n\t   * @listens keydown\n\t   */\n\t\n\t\n\t  MenuButton.prototype.handleSubmenuKeyPress = function handleSubmenuKeyPress(event) {\n\t\n\t    // Escape (27) key or Tab (9) key unpress the 'button'\n\t    if (event.which === 27 || event.which === 9) {\n\t      if (this.buttonPressed_) {\n\t        this.unpressButton();\n\t      }\n\t      // Don't preventDefault for Tab key - we still want to lose focus\n\t      if (event.which !== 9) {\n\t        event.preventDefault();\n\t      }\n\t    }\n\t  };\n\t\n\t  /**\n\t   * Put the current `MenuButton` into a pressed state.\n\t   */\n\t\n\t\n\t  MenuButton.prototype.pressButton = function pressButton() {\n\t    if (this.enabled_) {\n\t      this.buttonPressed_ = true;\n\t      this.menu.lockShowing();\n\t      this.el_.setAttribute('aria-expanded', 'true');\n\t      // set the focus into the submenu\n\t      this.menu.focus();\n\t    }\n\t  };\n\t\n\t  /**\n\t   * Take the current `MenuButton` out of a pressed state.\n\t   */\n\t\n\t\n\t  MenuButton.prototype.unpressButton = function unpressButton() {\n\t    if (this.enabled_) {\n\t      this.buttonPressed_ = false;\n\t      this.menu.unlockShowing();\n\t      this.el_.setAttribute('aria-expanded', 'false');\n\t      // Set focus back to this menu button\n\t      this.el_.focus();\n\t    }\n\t  };\n\t\n\t  /**\n\t   * Disable the `MenuButton`. Don't allow it to be clicked.\n\t   *\n\t   * @return {MenuButton}\n\t   *         Returns itself; method can be chained.\n\t   */\n\t\n\t\n\t  MenuButton.prototype.disable = function disable() {\n\t    // Unpress, but don't force focus on this button\n\t    this.buttonPressed_ = false;\n\t    this.menu.unlockShowing();\n\t    this.el_.setAttribute('aria-expanded', 'false');\n\t\n\t    this.enabled_ = false;\n\t\n\t    return _ClickableComponent.prototype.disable.call(this);\n\t  };\n\t\n\t  /**\n\t   * Enable the `MenuButton`. Allow it to be clicked.\n\t   *\n\t   * @return {MenuButton}\n\t   *         Returns itself; method can be chained.\n\t   */\n\t\n\t\n\t  MenuButton.prototype.enable = function enable() {\n\t    this.enabled_ = true;\n\t\n\t    return _ClickableComponent.prototype.enable.call(this);\n\t  };\n\t\n\t  return MenuButton;\n\t}(_clickableComponent2['default']);\n\t\n\t_component2['default'].registerComponent('MenuButton', MenuButton);\n\texports['default'] = MenuButton;\n\n\n/***/ },\n/* 91 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\texports.__esModule = true;\n\t\n\tvar _component = __webpack_require__(16);\n\t\n\tvar _component2 = _interopRequireDefault(_component);\n\t\n\tvar _dom = __webpack_require__(8);\n\t\n\tvar Dom = _interopRequireWildcard(_dom);\n\t\n\tvar _fn = __webpack_require__(17);\n\t\n\tvar Fn = _interopRequireWildcard(_fn);\n\t\n\tvar _events = __webpack_require__(14);\n\t\n\tvar Events = _interopRequireWildcard(_events);\n\t\n\tfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj['default'] = obj; return newObj; } }\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /**\n\t                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * @file menu.js\n\t                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                */\n\t\n\t\n\t/**\n\t * The Menu component is used to build popup menus, including subtitle and\n\t * captions selection menus.\n\t *\n\t * @extends Component\n\t */\n\tvar Menu = function (_Component) {\n\t  _inherits(Menu, _Component);\n\t\n\t  /**\n\t   * Create an instance of this class.\n\t   *\n\t   * @param {Player} player\n\t   *        the player that this component should attach to\n\t   *\n\t   * @param {Object} [options]\n\t   *        Object of option names and values\n\t   *\n\t   */\n\t  function Menu(player, options) {\n\t    _classCallCheck(this, Menu);\n\t\n\t    var _this = _possibleConstructorReturn(this, _Component.call(this, player, options));\n\t\n\t    _this.focusedChild_ = -1;\n\t\n\t    _this.on('keydown', _this.handleKeyPress);\n\t    return _this;\n\t  }\n\t\n\t  /**\n\t   * Add a {@link MenuItem} to the menu.\n\t   *\n\t   * @param {Object|string} component\n\t   *        The name or instance of the `MenuItem` to add.\n\t   *\n\t   */\n\t\n\t\n\t  Menu.prototype.addItem = function addItem(component) {\n\t    this.addChild(component);\n\t    component.on('click', Fn.bind(this, function (event) {\n\t      this.unlockShowing();\n\t      // TODO: Need to set keyboard focus back to the menuButton\n\t    }));\n\t  };\n\t\n\t  /**\n\t   * Create the `Menu`s DOM element.\n\t   *\n\t   * @return {Element}\n\t   *         the element that was created\n\t   */\n\t\n\t\n\t  Menu.prototype.createEl = function createEl() {\n\t    var contentElType = this.options_.contentElType || 'ul';\n\t\n\t    this.contentEl_ = Dom.createEl(contentElType, {\n\t      className: 'vjs-menu-content'\n\t    });\n\t\n\t    this.contentEl_.setAttribute('role', 'menu');\n\t\n\t    var el = _Component.prototype.createEl.call(this, 'div', {\n\t      append: this.contentEl_,\n\t      className: 'vjs-menu'\n\t    });\n\t\n\t    el.setAttribute('role', 'presentation');\n\t    el.appendChild(this.contentEl_);\n\t\n\t    // Prevent clicks from bubbling up. Needed for Menu Buttons,\n\t    // where a click on the parent is significant\n\t    Events.on(el, 'click', function (event) {\n\t      event.preventDefault();\n\t      event.stopImmediatePropagation();\n\t    });\n\t\n\t    return el;\n\t  };\n\t\n\t  /**\n\t   * Handle a `keydown` event on this menu. This listener is added in the constructor.\n\t   *\n\t   * @param {EventTarget~Event} event\n\t   *        A `keydown` event that happened on the menu.\n\t   *\n\t   * @listens keydown\n\t   */\n\t\n\t\n\t  Menu.prototype.handleKeyPress = function handleKeyPress(event) {\n\t    // Left and Down Arrows\n\t    if (event.which === 37 || event.which === 40) {\n\t      event.preventDefault();\n\t      this.stepForward();\n\t\n\t      // Up and Right Arrows\n\t    } else if (event.which === 38 || event.which === 39) {\n\t      event.preventDefault();\n\t      this.stepBack();\n\t    }\n\t  };\n\t\n\t  /**\n\t   * Move to next (lower) menu item for keyboard users.\n\t   */\n\t\n\t\n\t  Menu.prototype.stepForward = function stepForward() {\n\t    var stepChild = 0;\n\t\n\t    if (this.focusedChild_ !== undefined) {\n\t      stepChild = this.focusedChild_ + 1;\n\t    }\n\t    this.focus(stepChild);\n\t  };\n\t\n\t  /**\n\t   * Move to previous (higher) menu item for keyboard users.\n\t   */\n\t\n\t\n\t  Menu.prototype.stepBack = function stepBack() {\n\t    var stepChild = 0;\n\t\n\t    if (this.focusedChild_ !== undefined) {\n\t      stepChild = this.focusedChild_ - 1;\n\t    }\n\t    this.focus(stepChild);\n\t  };\n\t\n\t  /**\n\t   * Set focus on a {@link MenuItem} in the `Menu`.\n\t   *\n\t   * @param {Object|string} [item=0]\n\t   *        Index of child item set focus on.\n\t   */\n\t\n\t\n\t  Menu.prototype.focus = function focus() {\n\t    var item = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n\t\n\t    var children = this.children().slice();\n\t    var haveTitle = children.length && children[0].className && /vjs-menu-title/.test(children[0].className);\n\t\n\t    if (haveTitle) {\n\t      children.shift();\n\t    }\n\t\n\t    if (children.length > 0) {\n\t      if (item < 0) {\n\t        item = 0;\n\t      } else if (item >= children.length) {\n\t        item = children.length - 1;\n\t      }\n\t\n\t      this.focusedChild_ = item;\n\t\n\t      children[item].el_.focus();\n\t    }\n\t  };\n\t\n\t  return Menu;\n\t}(_component2['default']);\n\t\n\t_component2['default'].registerComponent('Menu', Menu);\n\texports['default'] = Menu;\n\n\n/***/ },\n/* 92 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\texports.__esModule = true;\n\t\n\tvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\t\n\tvar _menuItem = __webpack_require__(93);\n\t\n\tvar _menuItem2 = _interopRequireDefault(_menuItem);\n\t\n\tvar _component = __webpack_require__(16);\n\t\n\tvar _component2 = _interopRequireDefault(_component);\n\t\n\tvar _fn = __webpack_require__(17);\n\t\n\tvar Fn = _interopRequireWildcard(_fn);\n\t\n\tvar _window = __webpack_require__(4);\n\t\n\tvar _window2 = _interopRequireDefault(_window);\n\t\n\tvar _document = __webpack_require__(5);\n\t\n\tvar _document2 = _interopRequireDefault(_document);\n\t\n\tfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj['default'] = obj; return newObj; } }\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /**\n\t                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * @file text-track-menu-item.js\n\t                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                */\n\t\n\t\n\t/**\n\t * The specific menu item type for selecting a language within a text track kind\n\t *\n\t * @extends MenuItem\n\t */\n\tvar TextTrackMenuItem = function (_MenuItem) {\n\t  _inherits(TextTrackMenuItem, _MenuItem);\n\t\n\t  /**\n\t   * Creates an instance of this class.\n\t   *\n\t   * @param {Player} player\n\t   *        The `Player` that this class should be attached to.\n\t   *\n\t   * @param {Object} [options]\n\t   *        The key/value store of player options.\n\t   */\n\t  function TextTrackMenuItem(player, options) {\n\t    _classCallCheck(this, TextTrackMenuItem);\n\t\n\t    var track = options.track;\n\t    var tracks = player.textTracks();\n\t\n\t    // Modify options for parent MenuItem class's init.\n\t    options.label = track.label || track.language || 'Unknown';\n\t    options.selected = track['default'] || track.mode === 'showing';\n\t\n\t    var _this = _possibleConstructorReturn(this, _MenuItem.call(this, player, options));\n\t\n\t    _this.track = track;\n\t\n\t    if (tracks) {\n\t      (function () {\n\t        var changeHandler = Fn.bind(_this, _this.handleTracksChange);\n\t\n\t        tracks.addEventListener('change', changeHandler);\n\t        _this.on('dispose', function () {\n\t          tracks.removeEventListener('change', changeHandler);\n\t        });\n\t      })();\n\t    }\n\t\n\t    // iOS7 doesn't dispatch change events to TextTrackLists when an\n\t    // associated track's mode changes. Without something like\n\t    // Object.observe() (also not present on iOS7), it's not\n\t    // possible to detect changes to the mode attribute and polyfill\n\t    // the change event. As a poor substitute, we manually dispatch\n\t    // change events whenever the controls modify the mode.\n\t    if (tracks && tracks.onchange === undefined) {\n\t      (function () {\n\t        var event = void 0;\n\t\n\t        _this.on(['tap', 'click'], function () {\n\t          if (_typeof(_window2['default'].Event) !== 'object') {\n\t            // Android 2.3 throws an Illegal Constructor error for window.Event\n\t            try {\n\t              event = new _window2['default'].Event('change');\n\t            } catch (err) {\n\t              // continue regardless of error\n\t            }\n\t          }\n\t\n\t          if (!event) {\n\t            event = _document2['default'].createEvent('Event');\n\t            event.initEvent('change', true, true);\n\t          }\n\t\n\t          tracks.dispatchEvent(event);\n\t        });\n\t      })();\n\t    }\n\t    return _this;\n\t  }\n\t\n\t  /**\n\t   * This gets called when an `TextTrackMenuItem` is \"clicked\". See\n\t   * {@link ClickableComponent} for more detailed information on what a click can be.\n\t   *\n\t   * @param {EventTarget~Event} event\n\t   *        The `keydown`, `tap`, or `click` event that caused this function to be\n\t   *        called.\n\t   *\n\t   * @listens tap\n\t   * @listens click\n\t   */\n\t\n\t\n\t  TextTrackMenuItem.prototype.handleClick = function handleClick(event) {\n\t    var kind = this.track.kind;\n\t    var tracks = this.player_.textTracks();\n\t\n\t    _MenuItem.prototype.handleClick.call(this, event);\n\t\n\t    if (!tracks) {\n\t      return;\n\t    }\n\t\n\t    for (var i = 0; i < tracks.length; i++) {\n\t      var track = tracks[i];\n\t\n\t      if (track.kind !== kind) {\n\t        continue;\n\t      }\n\t\n\t      if (track === this.track) {\n\t        track.mode = 'showing';\n\t      } else {\n\t        track.mode = 'disabled';\n\t      }\n\t    }\n\t  };\n\t\n\t  /**\n\t   * Handle text track list change\n\t   *\n\t   * @param {EventTarget~Event} event\n\t   *        The `change` event that caused this function to be called.\n\t   *\n\t   * @listens TextTrackList#change\n\t   */\n\t\n\t\n\t  TextTrackMenuItem.prototype.handleTracksChange = function handleTracksChange(event) {\n\t    this.selected(this.track.mode === 'showing');\n\t  };\n\t\n\t  return TextTrackMenuItem;\n\t}(_menuItem2['default']);\n\t\n\t_component2['default'].registerComponent('TextTrackMenuItem', TextTrackMenuItem);\n\texports['default'] = TextTrackMenuItem;\n\n\n/***/ },\n/* 93 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\texports.__esModule = true;\n\t\n\tvar _clickableComponent = __webpack_require__(57);\n\t\n\tvar _clickableComponent2 = _interopRequireDefault(_clickableComponent);\n\t\n\tvar _component = __webpack_require__(16);\n\t\n\tvar _component2 = _interopRequireDefault(_component);\n\t\n\tvar _obj = __webpack_require__(12);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /**\n\t                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * @file menu-item.js\n\t                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                */\n\t\n\t\n\t/**\n\t * The component for a menu item. `<li>`\n\t *\n\t * @extends ClickableComponent\n\t */\n\tvar MenuItem = function (_ClickableComponent) {\n\t  _inherits(MenuItem, _ClickableComponent);\n\t\n\t  /**\n\t   * Creates an instance of the this class.\n\t   *\n\t   * @param {Player} player\n\t   *        The `Player` that this class should be attached to.\n\t   *\n\t   * @param {Object} [options={}]\n\t   *        The key/value store of player options.\n\t   *\n\t   */\n\t  function MenuItem(player, options) {\n\t    _classCallCheck(this, MenuItem);\n\t\n\t    var _this = _possibleConstructorReturn(this, _ClickableComponent.call(this, player, options));\n\t\n\t    _this.selectable = options.selectable;\n\t\n\t    _this.selected(options.selected);\n\t\n\t    if (_this.selectable) {\n\t      // TODO: May need to be either menuitemcheckbox or menuitemradio,\n\t      //       and may need logical grouping of menu items.\n\t      _this.el_.setAttribute('role', 'menuitemcheckbox');\n\t    } else {\n\t      _this.el_.setAttribute('role', 'menuitem');\n\t    }\n\t    return _this;\n\t  }\n\t\n\t  /**\n\t   * Create the `MenuItem's DOM element\n\t   *\n\t   * @param {string} [type=li]\n\t   *        Element's node type, not actually used, always set to `li`.\n\t   *\n\t   * @param {Object} [props={}]\n\t   *        An object of properties that should be set on the element\n\t   *\n\t   * @param {Object} [attrs={}]\n\t   *        An object of attributes that should be set on the element\n\t   *\n\t   * @return {Element}\n\t   *         The element that gets created.\n\t   */\n\t\n\t\n\t  MenuItem.prototype.createEl = function createEl(type, props, attrs) {\n\t    // The control is textual, not just an icon\n\t    this.nonIconControl = true;\n\t\n\t    return _ClickableComponent.prototype.createEl.call(this, 'li', (0, _obj.assign)({\n\t      className: 'vjs-menu-item',\n\t      innerHTML: this.localize(this.options_.label),\n\t      tabIndex: -1\n\t    }, props), attrs);\n\t  };\n\t\n\t  /**\n\t   * Any click on a `MenuItem` puts int into the selected state.\n\t   * See {@link ClickableComponent#handleClick} for instances where this is called.\n\t   *\n\t   * @param {EventTarget~Event} event\n\t   *        The `keydown`, `tap`, or `click` event that caused this function to be\n\t   *        called.\n\t   *\n\t   * @listens tap\n\t   * @listens click\n\t   */\n\t\n\t\n\t  MenuItem.prototype.handleClick = function handleClick(event) {\n\t    this.selected(true);\n\t  };\n\t\n\t  /**\n\t   * Set the state for this menu item as selected or not.\n\t   *\n\t   * @param {boolean} selected\n\t   *        if the menu item is selected or not\n\t   */\n\t\n\t\n\t  MenuItem.prototype.selected = function selected(_selected) {\n\t    if (this.selectable) {\n\t      if (_selected) {\n\t        this.addClass('vjs-selected');\n\t        this.el_.setAttribute('aria-checked', 'true');\n\t        // aria-checked isn't fully supported by browsers/screen readers,\n\t        // so indicate selected state to screen reader in the control text.\n\t        this.controlText(', selected');\n\t      } else {\n\t        this.removeClass('vjs-selected');\n\t        this.el_.setAttribute('aria-checked', 'false');\n\t        // Indicate un-selected state to screen reader\n\t        // Note that a space clears out the selected state text\n\t        this.controlText(' ');\n\t      }\n\t    }\n\t  };\n\t\n\t  return MenuItem;\n\t}(_clickableComponent2['default']);\n\t\n\t_component2['default'].registerComponent('MenuItem', MenuItem);\n\texports['default'] = MenuItem;\n\n\n/***/ },\n/* 94 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\texports.__esModule = true;\n\t\n\tvar _textTrackMenuItem = __webpack_require__(92);\n\t\n\tvar _textTrackMenuItem2 = _interopRequireDefault(_textTrackMenuItem);\n\t\n\tvar _component = __webpack_require__(16);\n\t\n\tvar _component2 = _interopRequireDefault(_component);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /**\n\t                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * @file off-text-track-menu-item.js\n\t                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                */\n\t\n\t\n\t/**\n\t * A special menu item for turning of a specific type of text track\n\t *\n\t * @extends TextTrackMenuItem\n\t */\n\tvar OffTextTrackMenuItem = function (_TextTrackMenuItem) {\n\t  _inherits(OffTextTrackMenuItem, _TextTrackMenuItem);\n\t\n\t  /**\n\t   * Creates an instance of this class.\n\t   *\n\t   * @param {Player} player\n\t   *        The `Player` that this class should be attached to.\n\t   *\n\t   * @param {Object} [options]\n\t   *        The key/value store of player options.\n\t   */\n\t  function OffTextTrackMenuItem(player, options) {\n\t    _classCallCheck(this, OffTextTrackMenuItem);\n\t\n\t    // Create pseudo track info\n\t    // Requires options['kind']\n\t    options.track = {\n\t      player: player,\n\t      kind: options.kind,\n\t      label: options.kind + ' off',\n\t      'default': false,\n\t      mode: 'disabled'\n\t    };\n\t\n\t    // MenuItem is selectable\n\t    options.selectable = true;\n\t\n\t    var _this = _possibleConstructorReturn(this, _TextTrackMenuItem.call(this, player, options));\n\t\n\t    _this.selected(true);\n\t    return _this;\n\t  }\n\t\n\t  /**\n\t   * Handle text track change\n\t   *\n\t   * @param {EventTarget~Event} event\n\t   *        The event that caused this function to run\n\t   */\n\t\n\t\n\t  OffTextTrackMenuItem.prototype.handleTracksChange = function handleTracksChange(event) {\n\t    var tracks = this.player().textTracks();\n\t    var selected = true;\n\t\n\t    for (var i = 0, l = tracks.length; i < l; i++) {\n\t      var track = tracks[i];\n\t\n\t      if (track.kind === this.track.kind && track.mode === 'showing') {\n\t        selected = false;\n\t        break;\n\t      }\n\t    }\n\t\n\t    this.selected(selected);\n\t  };\n\t\n\t  return OffTextTrackMenuItem;\n\t}(_textTrackMenuItem2['default']);\n\t\n\t_component2['default'].registerComponent('OffTextTrackMenuItem', OffTextTrackMenuItem);\n\texports['default'] = OffTextTrackMenuItem;\n\n\n/***/ },\n/* 95 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\texports.__esModule = true;\n\t\n\tvar _menuItem = __webpack_require__(93);\n\t\n\tvar _menuItem2 = _interopRequireDefault(_menuItem);\n\t\n\tvar _component = __webpack_require__(16);\n\t\n\tvar _component2 = _interopRequireDefault(_component);\n\t\n\tvar _fn = __webpack_require__(17);\n\t\n\tvar Fn = _interopRequireWildcard(_fn);\n\t\n\tfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj['default'] = obj; return newObj; } }\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /**\n\t                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * @file chapters-track-menu-item.js\n\t                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                */\n\t\n\t\n\t/**\n\t * The chapter track menu item\n\t *\n\t * @extends MenuItem\n\t */\n\tvar ChaptersTrackMenuItem = function (_MenuItem) {\n\t  _inherits(ChaptersTrackMenuItem, _MenuItem);\n\t\n\t  /**\n\t   * Creates an instance of this class.\n\t   *\n\t   * @param {Player} player\n\t   *        The `Player` that this class should be attached to.\n\t   *\n\t   * @param {Object} [options]\n\t   *        The key/value store of player options.\n\t   */\n\t  function ChaptersTrackMenuItem(player, options) {\n\t    _classCallCheck(this, ChaptersTrackMenuItem);\n\t\n\t    var track = options.track;\n\t    var cue = options.cue;\n\t    var currentTime = player.currentTime();\n\t\n\t    // Modify options for parent MenuItem class's init.\n\t    options.selectable = true;\n\t    options.label = cue.text;\n\t    options.selected = cue.startTime <= currentTime && currentTime < cue.endTime;\n\t\n\t    var _this = _possibleConstructorReturn(this, _MenuItem.call(this, player, options));\n\t\n\t    _this.track = track;\n\t    _this.cue = cue;\n\t    track.addEventListener('cuechange', Fn.bind(_this, _this.update));\n\t    return _this;\n\t  }\n\t\n\t  /**\n\t   * This gets called when an `ChaptersTrackMenuItem` is \"clicked\". See\n\t   * {@link ClickableComponent} for more detailed information on what a click can be.\n\t   *\n\t   * @param {EventTarget~Event} [event]\n\t   *        The `keydown`, `tap`, or `click` event that caused this function to be\n\t   *        called.\n\t   *\n\t   * @listens tap\n\t   * @listens click\n\t   */\n\t\n\t\n\t  ChaptersTrackMenuItem.prototype.handleClick = function handleClick(event) {\n\t    _MenuItem.prototype.handleClick.call(this);\n\t    this.player_.currentTime(this.cue.startTime);\n\t    this.update(this.cue.startTime);\n\t  };\n\t\n\t  /**\n\t   * Update chapter menu item\n\t   *\n\t   * @param {EventTarget~Event} [event]\n\t   *        The `cuechange` event that caused this function to run.\n\t   *\n\t   * @listens TextTrack#cuechange\n\t   */\n\t\n\t\n\t  ChaptersTrackMenuItem.prototype.update = function update(event) {\n\t    var cue = this.cue;\n\t    var currentTime = this.player_.currentTime();\n\t\n\t    // vjs.log(currentTime, cue.startTime);\n\t    this.selected(cue.startTime <= currentTime && currentTime < cue.endTime);\n\t  };\n\t\n\t  return ChaptersTrackMenuItem;\n\t}(_menuItem2['default']);\n\t\n\t_component2['default'].registerComponent('ChaptersTrackMenuItem', ChaptersTrackMenuItem);\n\texports['default'] = ChaptersTrackMenuItem;\n\n\n/***/ },\n/* 96 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\texports.__esModule = true;\n\t\n\tvar _textTrackButton = __webpack_require__(88);\n\t\n\tvar _textTrackButton2 = _interopRequireDefault(_textTrackButton);\n\t\n\tvar _component = __webpack_require__(16);\n\t\n\tvar _component2 = _interopRequireDefault(_component);\n\t\n\tvar _fn = __webpack_require__(17);\n\t\n\tvar Fn = _interopRequireWildcard(_fn);\n\t\n\tfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj['default'] = obj; return newObj; } }\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /**\n\t                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * @file descriptions-button.js\n\t                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                */\n\t\n\t\n\t/**\n\t * The button component for toggling and selecting descriptions\n\t *\n\t * @extends TextTrackButton\n\t */\n\tvar DescriptionsButton = function (_TextTrackButton) {\n\t  _inherits(DescriptionsButton, _TextTrackButton);\n\t\n\t  /**\n\t   * Creates an instance of this class.\n\t   *\n\t   * @param {Player} player\n\t   *        The `Player` that this class should be attached to.\n\t   *\n\t   * @param {Object} [options]\n\t   *        The key/value store of player options.\n\t   *\n\t   * @param {Component~ReadyCallback} [ready]\n\t   *        The function to call when this component is ready.\n\t   */\n\t  function DescriptionsButton(player, options, ready) {\n\t    _classCallCheck(this, DescriptionsButton);\n\t\n\t    var _this = _possibleConstructorReturn(this, _TextTrackButton.call(this, player, options, ready));\n\t\n\t    _this.el_.setAttribute('aria-label', 'Descriptions Menu');\n\t\n\t    var tracks = player.textTracks();\n\t\n\t    if (tracks) {\n\t      (function () {\n\t        var changeHandler = Fn.bind(_this, _this.handleTracksChange);\n\t\n\t        tracks.addEventListener('change', changeHandler);\n\t        _this.on('dispose', function () {\n\t          tracks.removeEventListener('change', changeHandler);\n\t        });\n\t      })();\n\t    }\n\t    return _this;\n\t  }\n\t\n\t  /**\n\t   * Handle text track change\n\t   *\n\t   * @param {EventTarget~Event} event\n\t   *        The event that caused this function to run\n\t   *\n\t   * @listens TextTrackList#change\n\t   */\n\t\n\t\n\t  DescriptionsButton.prototype.handleTracksChange = function handleTracksChange(event) {\n\t    var tracks = this.player().textTracks();\n\t    var disabled = false;\n\t\n\t    // Check whether a track of a different kind is showing\n\t    for (var i = 0, l = tracks.length; i < l; i++) {\n\t      var track = tracks[i];\n\t\n\t      if (track.kind !== this.kind_ && track.mode === 'showing') {\n\t        disabled = true;\n\t        break;\n\t      }\n\t    }\n\t\n\t    // If another track is showing, disable this menu button\n\t    if (disabled) {\n\t      this.disable();\n\t    } else {\n\t      this.enable();\n\t    }\n\t  };\n\t\n\t  /**\n\t   * Builds the default DOM `className`.\n\t   *\n\t   * @return {string}\n\t   *         The DOM `className` for this object.\n\t   */\n\t\n\t\n\t  DescriptionsButton.prototype.buildCSSClass = function buildCSSClass() {\n\t    return 'vjs-descriptions-button ' + _TextTrackButton.prototype.buildCSSClass.call(this);\n\t  };\n\t\n\t  return DescriptionsButton;\n\t}(_textTrackButton2['default']);\n\t\n\t/**\n\t * `kind` of TextTrack to look for to associate it with this menu.\n\t *\n\t * @type {string}\n\t * @private\n\t */\n\t\n\t\n\tDescriptionsButton.prototype.kind_ = 'descriptions';\n\t\n\t/**\n\t * The text that should display over the `DescriptionsButton`s controls. Added for localization.\n\t *\n\t * @type {string}\n\t * @private\n\t */\n\tDescriptionsButton.prototype.controlText_ = 'Descriptions';\n\t\n\t_component2['default'].registerComponent('DescriptionsButton', DescriptionsButton);\n\texports['default'] = DescriptionsButton;\n\n\n/***/ },\n/* 97 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\texports.__esModule = true;\n\t\n\tvar _textTrackButton = __webpack_require__(88);\n\t\n\tvar _textTrackButton2 = _interopRequireDefault(_textTrackButton);\n\t\n\tvar _component = __webpack_require__(16);\n\t\n\tvar _component2 = _interopRequireDefault(_component);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /**\n\t                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * @file subtitles-button.js\n\t                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                */\n\t\n\t\n\t/**\n\t * The button component for toggling and selecting subtitles\n\t *\n\t * @extends TextTrackButton\n\t */\n\tvar SubtitlesButton = function (_TextTrackButton) {\n\t  _inherits(SubtitlesButton, _TextTrackButton);\n\t\n\t  /**\n\t   * Creates an instance of this class.\n\t   *\n\t   * @param {Player} player\n\t   *        The `Player` that this class should be attached to.\n\t   *\n\t   * @param {Object} [options]\n\t   *        The key/value store of player options.\n\t   *\n\t   * @param {Component~ReadyCallback} [ready]\n\t   *        The function to call when this component is ready.\n\t   */\n\t  function SubtitlesButton(player, options, ready) {\n\t    _classCallCheck(this, SubtitlesButton);\n\t\n\t    var _this = _possibleConstructorReturn(this, _TextTrackButton.call(this, player, options, ready));\n\t\n\t    _this.el_.setAttribute('aria-label', 'Subtitles Menu');\n\t    return _this;\n\t  }\n\t\n\t  /**\n\t   * Builds the default DOM `className`.\n\t   *\n\t   * @return {string}\n\t   *         The DOM `className` for this object.\n\t   */\n\t\n\t\n\t  SubtitlesButton.prototype.buildCSSClass = function buildCSSClass() {\n\t    return 'vjs-subtitles-button ' + _TextTrackButton.prototype.buildCSSClass.call(this);\n\t  };\n\t\n\t  return SubtitlesButton;\n\t}(_textTrackButton2['default']);\n\t\n\t/**\n\t * `kind` of TextTrack to look for to associate it with this menu.\n\t *\n\t * @type {string}\n\t * @private\n\t */\n\t\n\t\n\tSubtitlesButton.prototype.kind_ = 'subtitles';\n\t\n\t/**\n\t * The text that should display over the `SubtitlesButton`s controls. Added for localization.\n\t *\n\t * @type {string}\n\t * @private\n\t */\n\tSubtitlesButton.prototype.controlText_ = 'Subtitles';\n\t\n\t_component2['default'].registerComponent('SubtitlesButton', SubtitlesButton);\n\texports['default'] = SubtitlesButton;\n\n\n/***/ },\n/* 98 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\texports.__esModule = true;\n\t\n\tvar _textTrackButton = __webpack_require__(88);\n\t\n\tvar _textTrackButton2 = _interopRequireDefault(_textTrackButton);\n\t\n\tvar _component = __webpack_require__(16);\n\t\n\tvar _component2 = _interopRequireDefault(_component);\n\t\n\tvar _captionSettingsMenuItem = __webpack_require__(99);\n\t\n\tvar _captionSettingsMenuItem2 = _interopRequireDefault(_captionSettingsMenuItem);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /**\n\t                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * @file captions-button.js\n\t                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                */\n\t\n\t\n\t/**\n\t * The button component for toggling and selecting captions\n\t *\n\t * @extends TextTrackButton\n\t */\n\tvar CaptionsButton = function (_TextTrackButton) {\n\t  _inherits(CaptionsButton, _TextTrackButton);\n\t\n\t  /**\n\t   * Creates an instance of this class.\n\t   *\n\t   * @param {Player} player\n\t   *        The `Player` that this class should be attached to.\n\t   *\n\t   * @param {Object} [options]\n\t   *        The key/value store of player options.\n\t   *\n\t   * @param {Component~ReadyCallback} [ready]\n\t   *        The function to call when this component is ready.\n\t   */\n\t  function CaptionsButton(player, options, ready) {\n\t    _classCallCheck(this, CaptionsButton);\n\t\n\t    var _this = _possibleConstructorReturn(this, _TextTrackButton.call(this, player, options, ready));\n\t\n\t    _this.el_.setAttribute('aria-label', 'Captions Menu');\n\t    return _this;\n\t  }\n\t\n\t  /**\n\t   * Builds the default DOM `className`.\n\t   *\n\t   * @return {string}\n\t   *         The DOM `className` for this object.\n\t   */\n\t\n\t\n\t  CaptionsButton.prototype.buildCSSClass = function buildCSSClass() {\n\t    return 'vjs-captions-button ' + _TextTrackButton.prototype.buildCSSClass.call(this);\n\t  };\n\t\n\t  /**\n\t   * Update caption menu items\n\t   *\n\t   * @param {EventTarget~Event} [event]\n\t   *        The `addtrack` or `removetrack` event that caused this function to be\n\t   *        called.\n\t   *\n\t   * @listens TextTrackList#addtrack\n\t   * @listens TextTrackList#removetrack\n\t   */\n\t\n\t\n\t  CaptionsButton.prototype.update = function update(event) {\n\t    var threshold = 2;\n\t\n\t    _TextTrackButton.prototype.update.call(this);\n\t\n\t    // if native, then threshold is 1 because no settings button\n\t    if (this.player().tech_ && this.player().tech_.featuresNativeTextTracks) {\n\t      threshold = 1;\n\t    }\n\t\n\t    if (this.items && this.items.length > threshold) {\n\t      this.show();\n\t    } else {\n\t      this.hide();\n\t    }\n\t  };\n\t\n\t  /**\n\t   * Create caption menu items\n\t   *\n\t   * @return {CaptionSettingsMenuItem[]}\n\t   *         The array of current menu items.\n\t   */\n\t\n\t\n\t  CaptionsButton.prototype.createItems = function createItems() {\n\t    var items = [];\n\t\n\t    if (!(this.player().tech_ && this.player().tech_.featuresNativeTextTracks)) {\n\t      items.push(new _captionSettingsMenuItem2['default'](this.player_, { kind: this.kind_ }));\n\t    }\n\t\n\t    return _TextTrackButton.prototype.createItems.call(this, items);\n\t  };\n\t\n\t  return CaptionsButton;\n\t}(_textTrackButton2['default']);\n\t\n\t/**\n\t * `kind` of TextTrack to look for to associate it with this menu.\n\t *\n\t * @type {string}\n\t * @private\n\t */\n\t\n\t\n\tCaptionsButton.prototype.kind_ = 'captions';\n\t\n\t/**\n\t * The text that should display over the `CaptionsButton`s controls. Added for localization.\n\t *\n\t * @type {string}\n\t * @private\n\t */\n\tCaptionsButton.prototype.controlText_ = 'Captions';\n\t\n\t_component2['default'].registerComponent('CaptionsButton', CaptionsButton);\n\texports['default'] = CaptionsButton;\n\n\n/***/ },\n/* 99 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\texports.__esModule = true;\n\t\n\tvar _textTrackMenuItem = __webpack_require__(92);\n\t\n\tvar _textTrackMenuItem2 = _interopRequireDefault(_textTrackMenuItem);\n\t\n\tvar _component = __webpack_require__(16);\n\t\n\tvar _component2 = _interopRequireDefault(_component);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /**\n\t                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * @file caption-settings-menu-item.js\n\t                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                */\n\t\n\t\n\t/**\n\t * The menu item for caption track settings menu\n\t *\n\t * @extends TextTrackMenuItem\n\t */\n\tvar CaptionSettingsMenuItem = function (_TextTrackMenuItem) {\n\t  _inherits(CaptionSettingsMenuItem, _TextTrackMenuItem);\n\t\n\t  /**\n\t   * Creates an instance of this class.\n\t   *\n\t   * @param {Player} player\n\t   *        The `Player` that this class should be attached to.\n\t   *\n\t   * @param {Object} [options]\n\t   *        The key/value store of player options.\n\t   */\n\t  function CaptionSettingsMenuItem(player, options) {\n\t    _classCallCheck(this, CaptionSettingsMenuItem);\n\t\n\t    options.track = {\n\t      player: player,\n\t      kind: options.kind,\n\t      label: options.kind + ' settings',\n\t      selectable: false,\n\t      'default': false,\n\t      mode: 'disabled'\n\t    };\n\t\n\t    // CaptionSettingsMenuItem has no concept of 'selected'\n\t    options.selectable = false;\n\t\n\t    var _this = _possibleConstructorReturn(this, _TextTrackMenuItem.call(this, player, options));\n\t\n\t    _this.addClass('vjs-texttrack-settings');\n\t    _this.controlText(', opens ' + options.kind + ' settings dialog');\n\t    return _this;\n\t  }\n\t\n\t  /**\n\t   * This gets called when an `CaptionSettingsMenuItem` is \"clicked\". See\n\t   * {@link ClickableComponent} for more detailed information on what a click can be.\n\t   *\n\t   * @param {EventTarget~Event} [event]\n\t   *        The `keydown`, `tap`, or `click` event that caused this function to be\n\t   *        called.\n\t   *\n\t   * @listens tap\n\t   * @listens click\n\t   */\n\t\n\t\n\t  CaptionSettingsMenuItem.prototype.handleClick = function handleClick(event) {\n\t    this.player().getChild('textTrackSettings').show();\n\t    this.player().getChild('textTrackSettings').el_.focus();\n\t  };\n\t\n\t  return CaptionSettingsMenuItem;\n\t}(_textTrackMenuItem2['default']);\n\t\n\t_component2['default'].registerComponent('CaptionSettingsMenuItem', CaptionSettingsMenuItem);\n\texports['default'] = CaptionSettingsMenuItem;\n\n\n/***/ },\n/* 100 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\texports.__esModule = true;\n\t\n\tvar _trackButton = __webpack_require__(89);\n\t\n\tvar _trackButton2 = _interopRequireDefault(_trackButton);\n\t\n\tvar _component = __webpack_require__(16);\n\t\n\tvar _component2 = _interopRequireDefault(_component);\n\t\n\tvar _audioTrackMenuItem = __webpack_require__(101);\n\t\n\tvar _audioTrackMenuItem2 = _interopRequireDefault(_audioTrackMenuItem);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /**\n\t                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * @file audio-track-button.js\n\t                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                */\n\t\n\t\n\t/**\n\t * The base class for buttons that toggle specific {@link AudioTrack} types.\n\t *\n\t * @extends TrackButton\n\t */\n\tvar AudioTrackButton = function (_TrackButton) {\n\t  _inherits(AudioTrackButton, _TrackButton);\n\t\n\t  /**\n\t   * Creates an instance of this class.\n\t   *\n\t   * @param {Player} player\n\t   *        The `Player` that this class should be attached to.\n\t   *\n\t   * @param {Object} [options={}]\n\t   *        The key/value store of player options.\n\t   */\n\t  function AudioTrackButton(player) {\n\t    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\t\n\t    _classCallCheck(this, AudioTrackButton);\n\t\n\t    options.tracks = player.audioTracks && player.audioTracks();\n\t\n\t    var _this = _possibleConstructorReturn(this, _TrackButton.call(this, player, options));\n\t\n\t    _this.el_.setAttribute('aria-label', 'Audio Menu');\n\t    return _this;\n\t  }\n\t\n\t  /**\n\t   * Builds the default DOM `className`.\n\t   *\n\t   * @return {string}\n\t   *         The DOM `className` for this object.\n\t   */\n\t\n\t\n\t  AudioTrackButton.prototype.buildCSSClass = function buildCSSClass() {\n\t    return 'vjs-audio-button ' + _TrackButton.prototype.buildCSSClass.call(this);\n\t  };\n\t\n\t  /**\n\t   * Create a menu item for each audio track\n\t   *\n\t   * @param {AudioTrackMenuItem[]} [items=[]]\n\t   *        An array of existing menu items to use.\n\t   *\n\t   * @return {AudioTrackMenuItem[]}\n\t   *         An array of menu items\n\t   */\n\t\n\t\n\t  AudioTrackButton.prototype.createItems = function createItems() {\n\t    var items = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n\t\n\t    var tracks = this.player_.audioTracks && this.player_.audioTracks();\n\t\n\t    if (!tracks) {\n\t      return items;\n\t    }\n\t\n\t    for (var i = 0; i < tracks.length; i++) {\n\t      var track = tracks[i];\n\t\n\t      items.push(new _audioTrackMenuItem2['default'](this.player_, {\n\t        track: track,\n\t        // MenuItem is selectable\n\t        selectable: true\n\t      }));\n\t    }\n\t\n\t    return items;\n\t  };\n\t\n\t  return AudioTrackButton;\n\t}(_trackButton2['default']);\n\t\n\t/**\n\t * The text that should display over the `AudioTrackButton`s controls. Added for localization.\n\t *\n\t * @type {string}\n\t * @private\n\t */\n\t\n\t\n\tAudioTrackButton.prototype.controlText_ = 'Audio Track';\n\t_component2['default'].registerComponent('AudioTrackButton', AudioTrackButton);\n\texports['default'] = AudioTrackButton;\n\n\n/***/ },\n/* 101 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\texports.__esModule = true;\n\t\n\tvar _menuItem = __webpack_require__(93);\n\t\n\tvar _menuItem2 = _interopRequireDefault(_menuItem);\n\t\n\tvar _component = __webpack_require__(16);\n\t\n\tvar _component2 = _interopRequireDefault(_component);\n\t\n\tvar _fn = __webpack_require__(17);\n\t\n\tvar Fn = _interopRequireWildcard(_fn);\n\t\n\tfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj['default'] = obj; return newObj; } }\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /**\n\t                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * @file audio-track-menu-item.js\n\t                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                */\n\t\n\t\n\t/**\n\t * An {@link AudioTrack} {@link MenuItem}\n\t *\n\t * @extends MenuItem\n\t */\n\tvar AudioTrackMenuItem = function (_MenuItem) {\n\t  _inherits(AudioTrackMenuItem, _MenuItem);\n\t\n\t  /**\n\t   * Creates an instance of this class.\n\t   *\n\t   * @param {Player} player\n\t   *        The `Player` that this class should be attached to.\n\t   *\n\t   * @param {Object} [options]\n\t   *        The key/value store of player options.\n\t   */\n\t  function AudioTrackMenuItem(player, options) {\n\t    _classCallCheck(this, AudioTrackMenuItem);\n\t\n\t    var track = options.track;\n\t    var tracks = player.audioTracks();\n\t\n\t    // Modify options for parent MenuItem class's init.\n\t    options.label = track.label || track.language || 'Unknown';\n\t    options.selected = track.enabled;\n\t\n\t    var _this = _possibleConstructorReturn(this, _MenuItem.call(this, player, options));\n\t\n\t    _this.track = track;\n\t\n\t    if (tracks) {\n\t      (function () {\n\t        var changeHandler = Fn.bind(_this, _this.handleTracksChange);\n\t\n\t        tracks.addEventListener('change', changeHandler);\n\t        _this.on('dispose', function () {\n\t          tracks.removeEventListener('change', changeHandler);\n\t        });\n\t      })();\n\t    }\n\t    return _this;\n\t  }\n\t\n\t  /**\n\t   * This gets called when an `AudioTrackMenuItem is \"clicked\". See {@link ClickableComponent}\n\t   * for more detailed information on what a click can be.\n\t   *\n\t   * @param {EventTarget~Event} [event]\n\t   *        The `keydown`, `tap`, or `click` event that caused this function to be\n\t   *        called.\n\t   *\n\t   * @listens tap\n\t   * @listens click\n\t   */\n\t\n\t\n\t  AudioTrackMenuItem.prototype.handleClick = function handleClick(event) {\n\t    var tracks = this.player_.audioTracks();\n\t\n\t    _MenuItem.prototype.handleClick.call(this, event);\n\t\n\t    if (!tracks) {\n\t      return;\n\t    }\n\t\n\t    for (var i = 0; i < tracks.length; i++) {\n\t      var track = tracks[i];\n\t\n\t      track.enabled = track === this.track;\n\t    }\n\t  };\n\t\n\t  /**\n\t   * Handle any {@link AudioTrack} change.\n\t   *\n\t   * @param {EventTarget~Event} [event]\n\t   *        The {@link AudioTrackList#change} event that caused this to run.\n\t   *\n\t   * @listens AudioTrackList#change\n\t   */\n\t\n\t\n\t  AudioTrackMenuItem.prototype.handleTracksChange = function handleTracksChange(event) {\n\t    this.selected(this.track.enabled);\n\t  };\n\t\n\t  return AudioTrackMenuItem;\n\t}(_menuItem2['default']);\n\t\n\t_component2['default'].registerComponent('AudioTrackMenuItem', AudioTrackMenuItem);\n\texports['default'] = AudioTrackMenuItem;\n\n\n/***/ },\n/* 102 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\texports.__esModule = true;\n\t\n\tvar _menuButton = __webpack_require__(90);\n\t\n\tvar _menuButton2 = _interopRequireDefault(_menuButton);\n\t\n\tvar _menu = __webpack_require__(91);\n\t\n\tvar _menu2 = _interopRequireDefault(_menu);\n\t\n\tvar _playbackRateMenuItem = __webpack_require__(103);\n\t\n\tvar _playbackRateMenuItem2 = _interopRequireDefault(_playbackRateMenuItem);\n\t\n\tvar _component = __webpack_require__(16);\n\t\n\tvar _component2 = _interopRequireDefault(_component);\n\t\n\tvar _dom = __webpack_require__(8);\n\t\n\tvar Dom = _interopRequireWildcard(_dom);\n\t\n\tfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj['default'] = obj; return newObj; } }\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /**\n\t                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * @file playback-rate-menu-button.js\n\t                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                */\n\t\n\t\n\t/**\n\t * The component for controlling the playback rate.\n\t *\n\t * @extends MenuButton\n\t */\n\tvar PlaybackRateMenuButton = function (_MenuButton) {\n\t  _inherits(PlaybackRateMenuButton, _MenuButton);\n\t\n\t  /**\n\t   * Creates an instance of this class.\n\t   *\n\t   * @param {Player} player\n\t   *        The `Player` that this class should be attached to.\n\t   *\n\t   * @param {Object} [options]\n\t   *        The key/value store of player options.\n\t   */\n\t  function PlaybackRateMenuButton(player, options) {\n\t    _classCallCheck(this, PlaybackRateMenuButton);\n\t\n\t    var _this = _possibleConstructorReturn(this, _MenuButton.call(this, player, options));\n\t\n\t    _this.updateVisibility();\n\t    _this.updateLabel();\n\t\n\t    _this.on(player, 'loadstart', _this.updateVisibility);\n\t    _this.on(player, 'ratechange', _this.updateLabel);\n\t    return _this;\n\t  }\n\t\n\t  /**\n\t   * Create the `Component`'s DOM element\n\t   *\n\t   * @return {Element}\n\t   *         The element that was created.\n\t   */\n\t\n\t\n\t  PlaybackRateMenuButton.prototype.createEl = function createEl() {\n\t    var el = _MenuButton.prototype.createEl.call(this);\n\t\n\t    this.labelEl_ = Dom.createEl('div', {\n\t      className: 'vjs-playback-rate-value',\n\t      innerHTML: 1.0\n\t    });\n\t\n\t    el.appendChild(this.labelEl_);\n\t\n\t    return el;\n\t  };\n\t\n\t  /**\n\t   * Builds the default DOM `className`.\n\t   *\n\t   * @return {string}\n\t   *         The DOM `className` for this object.\n\t   */\n\t\n\t\n\t  PlaybackRateMenuButton.prototype.buildCSSClass = function buildCSSClass() {\n\t    return 'vjs-playback-rate ' + _MenuButton.prototype.buildCSSClass.call(this);\n\t  };\n\t\n\t  /**\n\t   * Create the playback rate menu\n\t   *\n\t   * @return {Menu}\n\t   *         Menu object populated with {@link PlaybackRateMenuItem}s\n\t   */\n\t\n\t\n\t  PlaybackRateMenuButton.prototype.createMenu = function createMenu() {\n\t    var menu = new _menu2['default'](this.player());\n\t    var rates = this.playbackRates();\n\t\n\t    if (rates) {\n\t      for (var i = rates.length - 1; i >= 0; i--) {\n\t        menu.addChild(new _playbackRateMenuItem2['default'](this.player(), { rate: rates[i] + 'x' }));\n\t      }\n\t    }\n\t\n\t    return menu;\n\t  };\n\t\n\t  /**\n\t   * Updates ARIA accessibility attributes\n\t   */\n\t\n\t\n\t  PlaybackRateMenuButton.prototype.updateARIAAttributes = function updateARIAAttributes() {\n\t    // Current playback rate\n\t    this.el().setAttribute('aria-valuenow', this.player().playbackRate());\n\t  };\n\t\n\t  /**\n\t   * This gets called when an `PlaybackRateMenuButton` is \"clicked\". See\n\t   * {@link ClickableComponent} for more detailed information on what a click can be.\n\t   *\n\t   * @param {EventTarget~Event} [event]\n\t   *        The `keydown`, `tap`, or `click` event that caused this function to be\n\t   *        called.\n\t   *\n\t   * @listens tap\n\t   * @listens click\n\t   */\n\t\n\t\n\t  PlaybackRateMenuButton.prototype.handleClick = function handleClick(event) {\n\t    // select next rate option\n\t    var currentRate = this.player().playbackRate();\n\t    var rates = this.playbackRates();\n\t\n\t    // this will select first one if the last one currently selected\n\t    var newRate = rates[0];\n\t\n\t    for (var i = 0; i < rates.length; i++) {\n\t      if (rates[i] > currentRate) {\n\t        newRate = rates[i];\n\t        break;\n\t      }\n\t    }\n\t    this.player().playbackRate(newRate);\n\t  };\n\t\n\t  /**\n\t   * Get possible playback rates\n\t   *\n\t   * @return {Array}\n\t   *         All possible playback rates\n\t   */\n\t\n\t\n\t  PlaybackRateMenuButton.prototype.playbackRates = function playbackRates() {\n\t    return this.options_.playbackRates || this.options_.playerOptions && this.options_.playerOptions.playbackRates;\n\t  };\n\t\n\t  /**\n\t   * Get whether playback rates is supported by the tech\n\t   * and an array of playback rates exists\n\t   *\n\t   * @return {boolean}\n\t   *         Whether changing playback rate is supported\n\t   */\n\t\n\t\n\t  PlaybackRateMenuButton.prototype.playbackRateSupported = function playbackRateSupported() {\n\t    return this.player().tech_ && this.player().tech_.featuresPlaybackRate && this.playbackRates() && this.playbackRates().length > 0;\n\t  };\n\t\n\t  /**\n\t   * Hide playback rate controls when they're no playback rate options to select\n\t   *\n\t   * @param {EventTarget~Event} [event]\n\t   *        The event that caused this function to run.\n\t   *\n\t   * @listens Player#loadstart\n\t   */\n\t\n\t\n\t  PlaybackRateMenuButton.prototype.updateVisibility = function updateVisibility(event) {\n\t    if (this.playbackRateSupported()) {\n\t      this.removeClass('vjs-hidden');\n\t    } else {\n\t      this.addClass('vjs-hidden');\n\t    }\n\t  };\n\t\n\t  /**\n\t   * Update button label when rate changed\n\t   *\n\t   * @param {EventTarget~Event} [event]\n\t   *        The event that caused this function to run.\n\t   *\n\t   * @listens Player#ratechange\n\t   */\n\t\n\t\n\t  PlaybackRateMenuButton.prototype.updateLabel = function updateLabel(event) {\n\t    if (this.playbackRateSupported()) {\n\t      this.labelEl_.innerHTML = this.player().playbackRate() + 'x';\n\t    }\n\t  };\n\t\n\t  return PlaybackRateMenuButton;\n\t}(_menuButton2['default']);\n\t\n\t/**\n\t * The text that should display over the `FullscreenToggle`s controls. Added for localization.\n\t *\n\t * @type {string}\n\t * @private\n\t */\n\t\n\t\n\tPlaybackRateMenuButton.prototype.controlText_ = 'Playback Rate';\n\t\n\t_component2['default'].registerComponent('PlaybackRateMenuButton', PlaybackRateMenuButton);\n\texports['default'] = PlaybackRateMenuButton;\n\n\n/***/ },\n/* 103 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\texports.__esModule = true;\n\t\n\tvar _menuItem = __webpack_require__(93);\n\t\n\tvar _menuItem2 = _interopRequireDefault(_menuItem);\n\t\n\tvar _component = __webpack_require__(16);\n\t\n\tvar _component2 = _interopRequireDefault(_component);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /**\n\t                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * @file playback-rate-menu-item.js\n\t                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                */\n\t\n\t\n\t/**\n\t * The specific menu item type for selecting a playback rate.\n\t *\n\t * @extends MenuItem\n\t */\n\tvar PlaybackRateMenuItem = function (_MenuItem) {\n\t  _inherits(PlaybackRateMenuItem, _MenuItem);\n\t\n\t  /**\n\t   * Creates an instance of this class.\n\t   *\n\t   * @param {Player} player\n\t   *        The `Player` that this class should be attached to.\n\t   *\n\t   * @param {Object} [options]\n\t   *        The key/value store of player options.\n\t   */\n\t  function PlaybackRateMenuItem(player, options) {\n\t    _classCallCheck(this, PlaybackRateMenuItem);\n\t\n\t    var label = options.rate;\n\t    var rate = parseFloat(label, 10);\n\t\n\t    // Modify options for parent MenuItem class's init.\n\t    options.label = label;\n\t    options.selected = rate === 1;\n\t\n\t    var _this = _possibleConstructorReturn(this, _MenuItem.call(this, player, options));\n\t\n\t    _this.label = label;\n\t    _this.rate = rate;\n\t\n\t    _this.on(player, 'ratechange', _this.update);\n\t    return _this;\n\t  }\n\t\n\t  /**\n\t   * This gets called when an `PlaybackRateMenuItem` is \"clicked\". See\n\t   * {@link ClickableComponent} for more detailed information on what a click can be.\n\t   *\n\t   * @param {EventTarget~Event} [event]\n\t   *        The `keydown`, `tap`, or `click` event that caused this function to be\n\t   *        called.\n\t   *\n\t   * @listens tap\n\t   * @listens click\n\t   */\n\t\n\t\n\t  PlaybackRateMenuItem.prototype.handleClick = function handleClick(event) {\n\t    _MenuItem.prototype.handleClick.call(this);\n\t    this.player().playbackRate(this.rate);\n\t  };\n\t\n\t  /**\n\t   * Update the PlaybackRateMenuItem when the playbackrate changes.\n\t   *\n\t   * @param {EventTarget~Event} [event]\n\t   *        The `ratechange` event that caused this function to run.\n\t   *\n\t   * @listens Player#ratechange\n\t   */\n\t\n\t\n\t  PlaybackRateMenuItem.prototype.update = function update(event) {\n\t    this.selected(this.player().playbackRate() === this.rate);\n\t  };\n\t\n\t  return PlaybackRateMenuItem;\n\t}(_menuItem2['default']);\n\t\n\t/**\n\t * The text that should display over the `PlaybackRateMenuItem`s controls. Added for localization.\n\t *\n\t * @type {string}\n\t * @private\n\t */\n\t\n\t\n\tPlaybackRateMenuItem.prototype.contentElType = 'button';\n\t\n\t_component2['default'].registerComponent('PlaybackRateMenuItem', PlaybackRateMenuItem);\n\texports['default'] = PlaybackRateMenuItem;\n\n\n/***/ },\n/* 104 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\texports.__esModule = true;\n\t\n\tvar _spacer = __webpack_require__(105);\n\t\n\tvar _spacer2 = _interopRequireDefault(_spacer);\n\t\n\tvar _component = __webpack_require__(16);\n\t\n\tvar _component2 = _interopRequireDefault(_component);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /**\n\t                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * @file custom-control-spacer.js\n\t                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                */\n\t\n\t\n\t/**\n\t * Spacer specifically meant to be used as an insertion point for new plugins, etc.\n\t *\n\t * @extends Spacer\n\t */\n\tvar CustomControlSpacer = function (_Spacer) {\n\t  _inherits(CustomControlSpacer, _Spacer);\n\t\n\t  function CustomControlSpacer() {\n\t    _classCallCheck(this, CustomControlSpacer);\n\t\n\t    return _possibleConstructorReturn(this, _Spacer.apply(this, arguments));\n\t  }\n\t\n\t  /**\n\t   * Builds the default DOM `className`.\n\t   *\n\t   * @return {string}\n\t   *         The DOM `className` for this object.\n\t   */\n\t  CustomControlSpacer.prototype.buildCSSClass = function buildCSSClass() {\n\t    return 'vjs-custom-control-spacer ' + _Spacer.prototype.buildCSSClass.call(this);\n\t  };\n\t\n\t  /**\n\t   * Create the `Component`'s DOM element\n\t   *\n\t   * @return {Element}\n\t   *         The element that was created.\n\t   */\n\t\n\t\n\t  CustomControlSpacer.prototype.createEl = function createEl() {\n\t    var el = _Spacer.prototype.createEl.call(this, {\n\t      className: this.buildCSSClass()\n\t    });\n\t\n\t    // No-flex/table-cell mode requires there be some content\n\t    // in the cell to fill the remaining space of the table.\n\t    el.innerHTML = '&nbsp;';\n\t    return el;\n\t  };\n\t\n\t  return CustomControlSpacer;\n\t}(_spacer2['default']);\n\t\n\t_component2['default'].registerComponent('CustomControlSpacer', CustomControlSpacer);\n\texports['default'] = CustomControlSpacer;\n\n\n/***/ },\n/* 105 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\texports.__esModule = true;\n\t\n\tvar _component = __webpack_require__(16);\n\t\n\tvar _component2 = _interopRequireDefault(_component);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /**\n\t                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * @file spacer.js\n\t                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                */\n\t\n\t\n\t/**\n\t * Just an empty spacer element that can be used as an append point for plugins, etc.\n\t * Also can be used to create space between elements when necessary.\n\t *\n\t * @extends Component\n\t */\n\tvar Spacer = function (_Component) {\n\t  _inherits(Spacer, _Component);\n\t\n\t  function Spacer() {\n\t    _classCallCheck(this, Spacer);\n\t\n\t    return _possibleConstructorReturn(this, _Component.apply(this, arguments));\n\t  }\n\t\n\t  /**\n\t   * Builds the default DOM `className`.\n\t   *\n\t   * @return {string}\n\t   *         The DOM `className` for this object.\n\t   */\n\t  Spacer.prototype.buildCSSClass = function buildCSSClass() {\n\t    return 'vjs-spacer ' + _Component.prototype.buildCSSClass.call(this);\n\t  };\n\t\n\t  /**\n\t   * Create the `Component`'s DOM element\n\t   *\n\t   * @return {Element}\n\t   *         The element that was created.\n\t   */\n\t\n\t\n\t  Spacer.prototype.createEl = function createEl() {\n\t    return _Component.prototype.createEl.call(this, 'div', {\n\t      className: this.buildCSSClass()\n\t    });\n\t  };\n\t\n\t  return Spacer;\n\t}(_component2['default']);\n\t\n\t_component2['default'].registerComponent('Spacer', Spacer);\n\t\n\texports['default'] = Spacer;\n\n\n/***/ },\n/* 106 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\texports.__esModule = true;\n\t\n\tvar _component = __webpack_require__(16);\n\t\n\tvar _component2 = _interopRequireDefault(_component);\n\t\n\tvar _modalDialog = __webpack_require__(28);\n\t\n\tvar _modalDialog2 = _interopRequireDefault(_modalDialog);\n\t\n\tvar _mergeOptions = __webpack_require__(19);\n\t\n\tvar _mergeOptions2 = _interopRequireDefault(_mergeOptions);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /**\n\t                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * @file error-display.js\n\t                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                */\n\t\n\t\n\t/**\n\t * A display that indicates an error has occurred. This means that the video\n\t * is unplayable.\n\t *\n\t * @extends ModalDialog\n\t */\n\tvar ErrorDisplay = function (_ModalDialog) {\n\t  _inherits(ErrorDisplay, _ModalDialog);\n\t\n\t  /**\n\t   * Creates an instance of this class.\n\t   *\n\t   * @param  {Player} player\n\t   *         The `Player` that this class should be attached to.\n\t   *\n\t   * @param  {Object} [options]\n\t   *         The key/value store of player options.\n\t   */\n\t  function ErrorDisplay(player, options) {\n\t    _classCallCheck(this, ErrorDisplay);\n\t\n\t    var _this = _possibleConstructorReturn(this, _ModalDialog.call(this, player, options));\n\t\n\t    _this.on(player, 'error', _this.open);\n\t    return _this;\n\t  }\n\t\n\t  /**\n\t   * Builds the default DOM `className`.\n\t   *\n\t   * @return {string}\n\t   *         The DOM `className` for this object.\n\t   *\n\t   * @deprecated Since version 5.\n\t   */\n\t\n\t\n\t  ErrorDisplay.prototype.buildCSSClass = function buildCSSClass() {\n\t    return 'vjs-error-display ' + _ModalDialog.prototype.buildCSSClass.call(this);\n\t  };\n\t\n\t  /**\n\t   * Gets the localized error message based on the `Player`s error.\n\t   *\n\t   * @return {string}\n\t   *         The `Player`s error message localized or an empty string.\n\t   */\n\t\n\t\n\t  ErrorDisplay.prototype.content = function content() {\n\t    var error = this.player().error();\n\t\n\t    return error ? this.localize(error.message) : '';\n\t  };\n\t\n\t  return ErrorDisplay;\n\t}(_modalDialog2['default']);\n\t\n\t/**\n\t * The default options for an `ErrorDisplay`.\n\t *\n\t * @private\n\t */\n\t\n\t\n\tErrorDisplay.prototype.options_ = (0, _mergeOptions2['default'])(_modalDialog2['default'].prototype.options_, {\n\t  fillAlways: true,\n\t  temporary: false,\n\t  uncloseable: true\n\t});\n\t\n\t_component2['default'].registerComponent('ErrorDisplay', ErrorDisplay);\n\texports['default'] = ErrorDisplay;\n\n\n/***/ },\n/* 107 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\texports.__esModule = true;\n\t\n\tvar _window = __webpack_require__(4);\n\t\n\tvar _window2 = _interopRequireDefault(_window);\n\t\n\tvar _component = __webpack_require__(16);\n\t\n\tvar _component2 = _interopRequireDefault(_component);\n\t\n\tvar _dom = __webpack_require__(8);\n\t\n\tvar _fn = __webpack_require__(17);\n\t\n\tvar Fn = _interopRequireWildcard(_fn);\n\t\n\tvar _obj = __webpack_require__(12);\n\t\n\tvar Obj = _interopRequireWildcard(_obj);\n\t\n\tvar _log = __webpack_require__(10);\n\t\n\tvar _log2 = _interopRequireDefault(_log);\n\t\n\tfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj['default'] = obj; return newObj; } }\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /**\n\t                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * @file text-track-settings.js\n\t                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                */\n\t\n\t\n\tvar LOCAL_STORAGE_KEY = 'vjs-text-track-settings';\n\t\n\tvar COLOR_BLACK = ['#000', 'Black'];\n\tvar COLOR_BLUE = ['#00F', 'Blue'];\n\tvar COLOR_CYAN = ['#0FF', 'Cyan'];\n\tvar COLOR_GREEN = ['#0F0', 'Green'];\n\tvar COLOR_MAGENTA = ['#F0F', 'Magenta'];\n\tvar COLOR_RED = ['#F00', 'Red'];\n\tvar COLOR_WHITE = ['#FFF', 'White'];\n\tvar COLOR_YELLOW = ['#FF0', 'Yellow'];\n\t\n\tvar OPACITY_OPAQUE = ['1', 'Opaque'];\n\tvar OPACITY_SEMI = ['0.5', 'Semi-Transparent'];\n\tvar OPACITY_TRANS = ['0', 'Transparent'];\n\t\n\t// Configuration for the various <select> elements in the DOM of this component.\n\t//\n\t// Possible keys include:\n\t//\n\t// `default`:\n\t//   The default option index. Only needs to be provided if not zero.\n\t// `parser`:\n\t//   A function which is used to parse the value from the selected option in\n\t//   a customized way.\n\t// `selector`:\n\t//   The selector used to find the associated <select> element.\n\tvar selectConfigs = {\n\t  backgroundColor: {\n\t    selector: '.vjs-bg-color > select',\n\t    id: 'captions-background-color-%s',\n\t    label: 'Color',\n\t    options: [COLOR_BLACK, COLOR_WHITE, COLOR_RED, COLOR_GREEN, COLOR_BLUE, COLOR_YELLOW, COLOR_MAGENTA, COLOR_CYAN]\n\t  },\n\t\n\t  backgroundOpacity: {\n\t    selector: '.vjs-bg-opacity > select',\n\t    id: 'captions-background-opacity-%s',\n\t    label: 'Transparency',\n\t    options: [OPACITY_OPAQUE, OPACITY_SEMI, OPACITY_TRANS]\n\t  },\n\t\n\t  color: {\n\t    selector: '.vjs-fg-color > select',\n\t    id: 'captions-foreground-color-%s',\n\t    label: 'Color',\n\t    options: [COLOR_WHITE, COLOR_BLACK, COLOR_RED, COLOR_GREEN, COLOR_BLUE, COLOR_YELLOW, COLOR_MAGENTA, COLOR_CYAN]\n\t  },\n\t\n\t  edgeStyle: {\n\t    selector: '.vjs-edge-style > select',\n\t    id: '%s',\n\t    label: 'Text Edge Style',\n\t    options: [['none', 'None'], ['raised', 'Raised'], ['depressed', 'Depressed'], ['uniform', 'Uniform'], ['dropshadow', 'Dropshadow']]\n\t  },\n\t\n\t  fontFamily: {\n\t    selector: '.vjs-font-family > select',\n\t    id: 'captions-font-family-%s',\n\t    label: 'Font Family',\n\t    options: [['proportionalSansSerif', 'Proportional Sans-Serif'], ['monospaceSansSerif', 'Monospace Sans-Serif'], ['proportionalSerif', 'Proportional Serif'], ['monospaceSerif', 'Monospace Serif'], ['casual', 'Casual'], ['script', 'Script'], ['small-caps', 'Small Caps']]\n\t  },\n\t\n\t  fontPercent: {\n\t    selector: '.vjs-font-percent > select',\n\t    id: 'captions-font-size-%s',\n\t    label: 'Font Size',\n\t    options: [['0.50', '50%'], ['0.75', '75%'], ['1.00', '100%'], ['1.25', '125%'], ['1.50', '150%'], ['1.75', '175%'], ['2.00', '200%'], ['3.00', '300%'], ['4.00', '400%']],\n\t    'default': 2,\n\t    parser: function parser(v) {\n\t      return v === '1.00' ? null : Number(v);\n\t    }\n\t  },\n\t\n\t  textOpacity: {\n\t    selector: '.vjs-text-opacity > select',\n\t    id: 'captions-foreground-opacity-%s',\n\t    label: 'Transparency',\n\t    options: [OPACITY_OPAQUE, OPACITY_SEMI]\n\t  },\n\t\n\t  // Options for this object are defined below.\n\t  windowColor: {\n\t    selector: '.vjs-window-color > select',\n\t    id: 'captions-window-color-%s',\n\t    label: 'Color'\n\t  },\n\t\n\t  // Options for this object are defined below.\n\t  windowOpacity: {\n\t    selector: '.vjs-window-opacity > select',\n\t    id: 'captions-window-opacity-%s',\n\t    label: 'Transparency',\n\t    options: [OPACITY_TRANS, OPACITY_SEMI, OPACITY_OPAQUE]\n\t  }\n\t};\n\t\n\tselectConfigs.windowColor.options = selectConfigs.backgroundColor.options;\n\t\n\t/**\n\t * Get the actual value of an option.\n\t *\n\t * @param  {string} value\n\t *         The value to get\n\t *\n\t * @param  {Function} [parser]\n\t *         Optional function to adjust the value.\n\t *\n\t * @return {Mixed}\n\t *         - Will be `undefined` if no value exists\n\t *         - Will be `undefined` if the given value is \"none\".\n\t *         - Will be the actual value otherwise.\n\t *\n\t * @private\n\t */\n\tfunction parseOptionValue(value, parser) {\n\t  if (parser) {\n\t    value = parser(value);\n\t  }\n\t\n\t  if (value && value !== 'none') {\n\t    return value;\n\t  }\n\t}\n\t\n\t/**\n\t * Gets the value of the selected <option> element within a <select> element.\n\t *\n\t * @param  {Element} el\n\t *         the element to look in\n\t *\n\t * @param  {Function} [parser]\n\t *         Optional function to adjust the value.\n\t *\n\t * @return {Mixed}\n\t *         - Will be `undefined` if no value exists\n\t *         - Will be `undefined` if the given value is \"none\".\n\t *         - Will be the actual value otherwise.\n\t *\n\t * @private\n\t */\n\tfunction getSelectedOptionValue(el, parser) {\n\t  var value = el.options[el.options.selectedIndex].value;\n\t\n\t  return parseOptionValue(value, parser);\n\t}\n\t\n\t/**\n\t * Sets the selected <option> element within a <select> element based on a\n\t * given value.\n\t *\n\t * @param {Element} el\n\t *        The element to look in.\n\t *\n\t * @param {string} value\n\t *        the property to look on.\n\t *\n\t * @param {Function} [parser]\n\t *        Optional function to adjust the value before comparing.\n\t *\n\t * @private\n\t */\n\tfunction setSelectedOption(el, value, parser) {\n\t  if (!value) {\n\t    return;\n\t  }\n\t\n\t  for (var i = 0; i < el.options.length; i++) {\n\t    if (parseOptionValue(el.options[i].value, parser) === value) {\n\t      el.selectedIndex = i;\n\t      break;\n\t    }\n\t  }\n\t}\n\t\n\t/**\n\t * Manipulate Text Tracks settings.\n\t *\n\t * @extends Component\n\t */\n\t\n\tvar TextTrackSettings = function (_Component) {\n\t  _inherits(TextTrackSettings, _Component);\n\t\n\t  /**\n\t   * Creates an instance of this class.\n\t   *\n\t   * @param {Player} player\n\t   *         The `Player` that this class should be attached to.\n\t   *\n\t   * @param {Object} [options]\n\t   *         The key/value store of player options.\n\t   */\n\t  function TextTrackSettings(player, options) {\n\t    _classCallCheck(this, TextTrackSettings);\n\t\n\t    var _this = _possibleConstructorReturn(this, _Component.call(this, player, options));\n\t\n\t    _this.setDefaults();\n\t    _this.hide();\n\t\n\t    _this.updateDisplay = Fn.bind(_this, _this.updateDisplay);\n\t\n\t    // Grab `persistTextTrackSettings` from the player options if not passed in child options\n\t    if (options.persistTextTrackSettings === undefined) {\n\t      _this.options_.persistTextTrackSettings = _this.options_.playerOptions.persistTextTrackSettings;\n\t    }\n\t\n\t    _this.on(_this.$('.vjs-done-button'), 'click', function () {\n\t      _this.saveSettings();\n\t      _this.hide();\n\t    });\n\t\n\t    _this.on(_this.$('.vjs-default-button'), 'click', function () {\n\t      _this.setDefaults();\n\t      _this.updateDisplay();\n\t    });\n\t\n\t    Obj.each(selectConfigs, function (config) {\n\t      _this.on(_this.$(config.selector), 'change', _this.updateDisplay);\n\t    });\n\t\n\t    if (_this.options_.persistTextTrackSettings) {\n\t      _this.restoreSettings();\n\t    }\n\t    return _this;\n\t  }\n\t\n\t  /**\n\t   * Create a <select> element with configured options.\n\t   *\n\t   * @param {string} key\n\t   *        Configuration key to use during creation.\n\t   *\n\t   * @return {Element}\n\t   *         The DOM element that gets created.\n\t   * @private\n\t   */\n\t\n\t\n\t  TextTrackSettings.prototype.createElSelect_ = function createElSelect_(key) {\n\t    var _this2 = this;\n\t\n\t    var config = selectConfigs[key];\n\t    var id = config.id.replace('%s', this.id_);\n\t\n\t    return [(0, _dom.createEl)('label', {\n\t      className: 'vjs-label',\n\t      textContent: config.label\n\t    }, {\n\t      'for': id\n\t    }), (0, _dom.createEl)('select', { id: id }, undefined, config.options.map(function (o) {\n\t      return (0, _dom.createEl)('option', {\n\t        textContent: _this2.localize(o[1]),\n\t        value: o[0]\n\t      });\n\t    }))];\n\t  };\n\t\n\t  /**\n\t   * Create foreground color element for the component\n\t   *\n\t   * @return {Element}\n\t   *         The element that was created.\n\t   *\n\t   * @private\n\t   */\n\t\n\t\n\t  TextTrackSettings.prototype.createElFgColor_ = function createElFgColor_() {\n\t    var legend = (0, _dom.createEl)('legend', {\n\t      textContent: this.localize('Text')\n\t    });\n\t\n\t    var select = this.createElSelect_('color');\n\t\n\t    var opacity = (0, _dom.createEl)('span', {\n\t      className: 'vjs-text-opacity vjs-opacity'\n\t    }, undefined, this.createElSelect_('textOpacity'));\n\t\n\t    return (0, _dom.createEl)('fieldset', {\n\t      className: 'vjs-fg-color vjs-tracksetting'\n\t    }, undefined, [legend].concat(select, opacity));\n\t  };\n\t\n\t  /**\n\t   * Create background color element for the component\n\t   *\n\t   * @return {Element}\n\t   *         The element that was created\n\t   *\n\t   * @private\n\t   */\n\t\n\t\n\t  TextTrackSettings.prototype.createElBgColor_ = function createElBgColor_() {\n\t    var legend = (0, _dom.createEl)('legend', {\n\t      textContent: this.localize('Background')\n\t    });\n\t\n\t    var select = this.createElSelect_('backgroundColor');\n\t\n\t    var opacity = (0, _dom.createEl)('span', {\n\t      className: 'vjs-bg-opacity vjs-opacity'\n\t    }, undefined, this.createElSelect_('backgroundOpacity'));\n\t\n\t    return (0, _dom.createEl)('fieldset', {\n\t      className: 'vjs-bg-color vjs-tracksetting'\n\t    }, undefined, [legend].concat(select, opacity));\n\t  };\n\t\n\t  /**\n\t   * Create window color element for the component\n\t   *\n\t   * @return {Element}\n\t   *         The element that was created\n\t   *\n\t   * @private\n\t   */\n\t\n\t\n\t  TextTrackSettings.prototype.createElWinColor_ = function createElWinColor_() {\n\t    var legend = (0, _dom.createEl)('legend', {\n\t      textContent: this.localize('Window')\n\t    });\n\t\n\t    var select = this.createElSelect_('windowColor');\n\t\n\t    var opacity = (0, _dom.createEl)('span', {\n\t      className: 'vjs-window-opacity vjs-opacity'\n\t    }, undefined, this.createElSelect_('windowOpacity'));\n\t\n\t    return (0, _dom.createEl)('fieldset', {\n\t      className: 'vjs-window-color vjs-tracksetting'\n\t    }, undefined, [legend].concat(select, opacity));\n\t  };\n\t\n\t  /**\n\t   * Create color elements for the component\n\t   *\n\t   * @return {Element}\n\t   *         The element that was created\n\t   *\n\t   * @private\n\t   */\n\t\n\t\n\t  TextTrackSettings.prototype.createElColors_ = function createElColors_() {\n\t    return (0, _dom.createEl)('div', {\n\t      className: 'vjs-tracksettings-colors'\n\t    }, undefined, [this.createElFgColor_(), this.createElBgColor_(), this.createElWinColor_()]);\n\t  };\n\t\n\t  /**\n\t   * Create font elements for the component\n\t   *\n\t   * @return {Element}\n\t   *         The element that was created.\n\t   *\n\t   * @private\n\t   */\n\t\n\t\n\t  TextTrackSettings.prototype.createElFont_ = function createElFont_() {\n\t    var fontPercent = (0, _dom.createEl)('div', {\n\t      className: 'vjs-font-percent vjs-tracksetting'\n\t    }, undefined, this.createElSelect_('fontPercent'));\n\t\n\t    var edgeStyle = (0, _dom.createEl)('div', {\n\t      className: 'vjs-edge-style vjs-tracksetting'\n\t    }, undefined, this.createElSelect_('edgeStyle'));\n\t\n\t    var fontFamily = (0, _dom.createEl)('div', {\n\t      className: 'vjs-font-family vjs-tracksetting'\n\t    }, undefined, this.createElSelect_('fontFamily'));\n\t\n\t    return (0, _dom.createEl)('div', {\n\t      className: 'vjs-tracksettings-font'\n\t    }, undefined, [fontPercent, edgeStyle, fontFamily]);\n\t  };\n\t\n\t  /**\n\t   * Create controls for the component\n\t   *\n\t   * @return {Element}\n\t   *         The element that was created.\n\t   *\n\t   * @private\n\t   */\n\t\n\t\n\t  TextTrackSettings.prototype.createElControls_ = function createElControls_() {\n\t    var defaultsButton = (0, _dom.createEl)('button', {\n\t      className: 'vjs-default-button',\n\t      textContent: this.localize('Defaults')\n\t    });\n\t\n\t    var doneButton = (0, _dom.createEl)('button', {\n\t      className: 'vjs-done-button',\n\t      textContent: 'Done'\n\t    });\n\t\n\t    return (0, _dom.createEl)('div', {\n\t      className: 'vjs-tracksettings-controls'\n\t    }, undefined, [defaultsButton, doneButton]);\n\t  };\n\t\n\t  /**\n\t   * Create the component's DOM element\n\t   *\n\t   * @return {Element}\n\t   *         The element that was created.\n\t   */\n\t\n\t\n\t  TextTrackSettings.prototype.createEl = function createEl() {\n\t    var settings = (0, _dom.createEl)('div', {\n\t      className: 'vjs-tracksettings'\n\t    }, undefined, [this.createElColors_(), this.createElFont_(), this.createElControls_()]);\n\t\n\t    var heading = (0, _dom.createEl)('div', {\n\t      className: 'vjs-control-text',\n\t      id: 'TTsettingsDialogLabel-' + this.id_,\n\t      textContent: 'Caption Settings Dialog'\n\t    }, {\n\t      'aria-level': '1',\n\t      'role': 'heading'\n\t    });\n\t\n\t    var description = (0, _dom.createEl)('div', {\n\t      className: 'vjs-control-text',\n\t      id: 'TTsettingsDialogDescription-' + this.id_,\n\t      textContent: 'Beginning of dialog window. Escape will cancel and close the window.'\n\t    });\n\t\n\t    var doc = (0, _dom.createEl)('div', undefined, {\n\t      role: 'document'\n\t    }, [heading, description, settings]);\n\t\n\t    return (0, _dom.createEl)('div', {\n\t      className: 'vjs-caption-settings vjs-modal-overlay',\n\t      tabIndex: -1\n\t    }, {\n\t      'role': 'dialog',\n\t      'aria-labelledby': heading.id,\n\t      'aria-describedby': description.id\n\t    }, doc);\n\t  };\n\t\n\t  /**\n\t   * Gets an object of text track settings (or null).\n\t   *\n\t   * @return {Object}\n\t   *         An object with config values parsed from the DOM or localStorage.\n\t   */\n\t\n\t\n\t  TextTrackSettings.prototype.getValues = function getValues() {\n\t    var _this3 = this;\n\t\n\t    return Obj.reduce(selectConfigs, function (accum, config, key) {\n\t      var value = getSelectedOptionValue(_this3.$(config.selector), config.parser);\n\t\n\t      if (value !== undefined) {\n\t        accum[key] = value;\n\t      }\n\t\n\t      return accum;\n\t    }, {});\n\t  };\n\t\n\t  /**\n\t   * Sets text track settings from an object of values.\n\t   *\n\t   * @param {Object} values\n\t   *        An object with config values parsed from the DOM or localStorage.\n\t   */\n\t\n\t\n\t  TextTrackSettings.prototype.setValues = function setValues(values) {\n\t    var _this4 = this;\n\t\n\t    Obj.each(selectConfigs, function (config, key) {\n\t      setSelectedOption(_this4.$(config.selector), values[key], config.parser);\n\t    });\n\t  };\n\t\n\t  /**\n\t   * Sets all <select> elements to their default values.\n\t   */\n\t\n\t\n\t  TextTrackSettings.prototype.setDefaults = function setDefaults() {\n\t    var _this5 = this;\n\t\n\t    Obj.each(selectConfigs, function (config) {\n\t      var index = config.hasOwnProperty('default') ? config['default'] : 0;\n\t\n\t      _this5.$(config.selector).selectedIndex = index;\n\t    });\n\t  };\n\t\n\t  /**\n\t   * Restore texttrack settings from localStorage\n\t   */\n\t\n\t\n\t  TextTrackSettings.prototype.restoreSettings = function restoreSettings() {\n\t    var values = void 0;\n\t\n\t    try {\n\t      values = JSON.parse(_window2['default'].localStorage.getItem(LOCAL_STORAGE_KEY));\n\t    } catch (err) {\n\t      _log2['default'].warn(err);\n\t    }\n\t\n\t    if (values) {\n\t      this.setValues(values);\n\t    }\n\t  };\n\t\n\t  /**\n\t   * Save text track settings to localStorage\n\t   */\n\t\n\t\n\t  TextTrackSettings.prototype.saveSettings = function saveSettings() {\n\t    if (!this.options_.persistTextTrackSettings) {\n\t      return;\n\t    }\n\t\n\t    var values = this.getValues();\n\t\n\t    try {\n\t      if (Object.keys(values).length) {\n\t        _window2['default'].localStorage.setItem(LOCAL_STORAGE_KEY, JSON.stringify(values));\n\t      } else {\n\t        _window2['default'].localStorage.removeItem(LOCAL_STORAGE_KEY);\n\t      }\n\t    } catch (err) {\n\t      _log2['default'].warn(err);\n\t    }\n\t  };\n\t\n\t  /**\n\t   * Update display of text track settings\n\t   */\n\t\n\t\n\t  TextTrackSettings.prototype.updateDisplay = function updateDisplay() {\n\t    var ttDisplay = this.player_.getChild('textTrackDisplay');\n\t\n\t    if (ttDisplay) {\n\t      ttDisplay.updateDisplay();\n\t    }\n\t  };\n\t\n\t  return TextTrackSettings;\n\t}(_component2['default']);\n\t\n\t_component2['default'].registerComponent('TextTrackSettings', TextTrackSettings);\n\t\n\texports['default'] = TextTrackSettings;\n\n\n/***/ },\n/* 108 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\texports.__esModule = true;\n\t\n\tvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\t\n\tvar _templateObject = _taggedTemplateLiteralLoose(['Text Tracks are being loaded from another origin but the crossorigin attribute isn\\'t used.\\n            This may prevent text tracks from loading.'], ['Text Tracks are being loaded from another origin but the crossorigin attribute isn\\'t used.\\n            This may prevent text tracks from loading.']);\n\t\n\tvar _tech = __webpack_require__(29);\n\t\n\tvar _tech2 = _interopRequireDefault(_tech);\n\t\n\tvar _component = __webpack_require__(16);\n\t\n\tvar _component2 = _interopRequireDefault(_component);\n\t\n\tvar _dom = __webpack_require__(8);\n\t\n\tvar Dom = _interopRequireWildcard(_dom);\n\t\n\tvar _url = __webpack_require__(35);\n\t\n\tvar Url = _interopRequireWildcard(_url);\n\t\n\tvar _fn = __webpack_require__(17);\n\t\n\tvar Fn = _interopRequireWildcard(_fn);\n\t\n\tvar _log = __webpack_require__(10);\n\t\n\tvar _log2 = _interopRequireDefault(_log);\n\t\n\tvar _tsml = __webpack_require__(13);\n\t\n\tvar _tsml2 = _interopRequireDefault(_tsml);\n\t\n\tvar _browser = __webpack_require__(11);\n\t\n\tvar browser = _interopRequireWildcard(_browser);\n\t\n\tvar _document = __webpack_require__(5);\n\t\n\tvar _document2 = _interopRequireDefault(_document);\n\t\n\tvar _window = __webpack_require__(4);\n\t\n\tvar _window2 = _interopRequireDefault(_window);\n\t\n\tvar _obj = __webpack_require__(12);\n\t\n\tvar _mergeOptions = __webpack_require__(19);\n\t\n\tvar _mergeOptions2 = _interopRequireDefault(_mergeOptions);\n\t\n\tvar _toTitleCase = __webpack_require__(18);\n\t\n\tvar _toTitleCase2 = _interopRequireDefault(_toTitleCase);\n\t\n\tfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj['default'] = obj; return newObj; } }\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\t\n\tfunction _taggedTemplateLiteralLoose(strings, raw) { strings.raw = raw; return strings; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /**\n\t                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * @file html5.js\n\t                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                */\n\t\n\t\n\t/**\n\t * HTML5 Media Controller - Wrapper for HTML5 Media API\n\t *\n\t * @mixes Tech~SouceHandlerAdditions\n\t * @extends Tech\n\t */\n\tvar Html5 = function (_Tech) {\n\t  _inherits(Html5, _Tech);\n\t\n\t  /**\n\t   * Create an instance of this Tech.\n\t   *\n\t   * @param {Object} [options]\n\t   *        The key/value store of player options.\n\t   *\n\t   * @param {Component~ReadyCallback} ready\n\t   *        Callback function to call when the `HTML5` Tech is ready.\n\t   */\n\t  function Html5(options, ready) {\n\t    _classCallCheck(this, Html5);\n\t\n\t    var _this = _possibleConstructorReturn(this, _Tech.call(this, options, ready));\n\t\n\t    var source = options.source;\n\t    var crossoriginTracks = false;\n\t\n\t    // Set the source if one is provided\n\t    // 1) Check if the source is new (if not, we want to keep the original so playback isn't interrupted)\n\t    // 2) Check to see if the network state of the tag was failed at init, and if so, reset the source\n\t    // anyway so the error gets fired.\n\t    if (source && (_this.el_.currentSrc !== source.src || options.tag && options.tag.initNetworkState_ === 3)) {\n\t      _this.setSource(source);\n\t    } else {\n\t      _this.handleLateInit_(_this.el_);\n\t    }\n\t\n\t    if (_this.el_.hasChildNodes()) {\n\t\n\t      var nodes = _this.el_.childNodes;\n\t      var nodesLength = nodes.length;\n\t      var removeNodes = [];\n\t\n\t      while (nodesLength--) {\n\t        var node = nodes[nodesLength];\n\t        var nodeName = node.nodeName.toLowerCase();\n\t\n\t        if (nodeName === 'track') {\n\t          if (!_this.featuresNativeTextTracks) {\n\t            // Empty video tag tracks so the built-in player doesn't use them also.\n\t            // This may not be fast enough to stop HTML5 browsers from reading the tags\n\t            // so we'll need to turn off any default tracks if we're manually doing\n\t            // captions and subtitles. videoElement.textTracks\n\t            removeNodes.push(node);\n\t          } else {\n\t            // store HTMLTrackElement and TextTrack to remote list\n\t            _this.remoteTextTrackEls().addTrackElement_(node);\n\t            _this.remoteTextTracks().addTrack_(node.track);\n\t            if (!crossoriginTracks && !_this.el_.hasAttribute('crossorigin') && Url.isCrossOrigin(node.src)) {\n\t              crossoriginTracks = true;\n\t            }\n\t          }\n\t        }\n\t      }\n\t\n\t      for (var i = 0; i < removeNodes.length; i++) {\n\t        _this.el_.removeChild(removeNodes[i]);\n\t      }\n\t    }\n\t\n\t    // TODO: add text tracks into this list\n\t    var trackTypes = ['audio', 'video'];\n\t\n\t    // ProxyNative Video/Audio Track\n\t    trackTypes.forEach(function (type) {\n\t      var elTracks = _this.el()[type + 'Tracks'];\n\t      var techTracks = _this[type + 'Tracks']();\n\t      var capitalType = (0, _toTitleCase2['default'])(type);\n\t\n\t      if (!_this['featuresNative' + capitalType + 'Tracks'] || !elTracks || !elTracks.addEventListener) {\n\t        return;\n\t      }\n\t\n\t      _this['handle' + capitalType + 'TrackChange_'] = function (e) {\n\t        techTracks.trigger({\n\t          type: 'change',\n\t          target: techTracks,\n\t          currentTarget: techTracks,\n\t          srcElement: techTracks\n\t        });\n\t      };\n\t\n\t      _this['handle' + capitalType + 'TrackAdd_'] = function (e) {\n\t        return techTracks.addTrack(e.track);\n\t      };\n\t      _this['handle' + capitalType + 'TrackRemove_'] = function (e) {\n\t        return techTracks.removeTrack(e.track);\n\t      };\n\t\n\t      elTracks.addEventListener('change', _this['handle' + capitalType + 'TrackChange_']);\n\t      elTracks.addEventListener('addtrack', _this['handle' + capitalType + 'TrackAdd_']);\n\t      elTracks.addEventListener('removetrack', _this['handle' + capitalType + 'TrackRemove_']);\n\t      _this['removeOld' + capitalType + 'Tracks_'] = function (e) {\n\t        return _this.removeOldTracks_(techTracks, elTracks);\n\t      };\n\t\n\t      // Remove (native) tracks that are not used anymore\n\t      _this.on('loadstart', _this['removeOld' + capitalType + 'Tracks_']);\n\t    });\n\t\n\t    if (_this.featuresNativeTextTracks) {\n\t      if (crossoriginTracks) {\n\t        _log2['default'].warn((0, _tsml2['default'])(_templateObject));\n\t      }\n\t\n\t      _this.handleTextTrackChange_ = Fn.bind(_this, _this.handleTextTrackChange);\n\t      _this.handleTextTrackAdd_ = Fn.bind(_this, _this.handleTextTrackAdd);\n\t      _this.handleTextTrackRemove_ = Fn.bind(_this, _this.handleTextTrackRemove);\n\t      _this.proxyNativeTextTracks_();\n\t    }\n\t\n\t    // Determine if native controls should be used\n\t    // Our goal should be to get the custom controls on mobile solid everywhere\n\t    // so we can remove this all together. Right now this will block custom\n\t    // controls on touch enabled laptops like the Chrome Pixel\n\t    if ((browser.TOUCH_ENABLED || browser.IS_IPHONE || browser.IS_NATIVE_ANDROID) && options.nativeControlsForTouch === true) {\n\t      _this.setControls(true);\n\t    }\n\t\n\t    // on iOS, we want to proxy `webkitbeginfullscreen` and `webkitendfullscreen`\n\t    // into a `fullscreenchange` event\n\t    _this.proxyWebkitFullscreen_();\n\t\n\t    _this.triggerReady();\n\t    return _this;\n\t  }\n\t\n\t  /**\n\t   * Dispose of `HTML5` media element and remove all tracks.\n\t   */\n\t\n\t\n\t  Html5.prototype.dispose = function dispose() {\n\t    var _this2 = this;\n\t\n\t    // Un-ProxyNativeTracks\n\t    ['audio', 'video', 'text'].forEach(function (type) {\n\t      var capitalType = (0, _toTitleCase2['default'])(type);\n\t      var tl = _this2.el_[type + 'Tracks'];\n\t\n\t      if (tl && tl.removeEventListener) {\n\t        tl.removeEventListener('change', _this2['handle' + capitalType + 'TrackChange_']);\n\t        tl.removeEventListener('addtrack', _this2['handle' + capitalType + 'TrackAdd_']);\n\t        tl.removeEventListener('removetrack', _this2['handle' + capitalType + 'TrackRemove_']);\n\t      }\n\t\n\t      // Stop removing old text tracks\n\t      if (tl) {\n\t        _this2.off('loadstart', _this2['removeOld' + capitalType + 'Tracks_']);\n\t      }\n\t    });\n\t\n\t    Html5.disposeMediaElement(this.el_);\n\t    // tech will handle clearing of the emulated track list\n\t    _Tech.prototype.dispose.call(this);\n\t  };\n\t\n\t  /**\n\t   * Create the `Html5` Tech's DOM element.\n\t   *\n\t   * @return {Element}\n\t   *         The element that gets created.\n\t   */\n\t\n\t\n\t  Html5.prototype.createEl = function createEl() {\n\t    var el = this.options_.tag;\n\t\n\t    // Check if this browser supports moving the element into the box.\n\t    // On the iPhone video will break if you move the element,\n\t    // So we have to create a brand new element.\n\t    // If we ingested the player div, we do not need to move the media element.\n\t    if (!el || !(this.options_.playerElIngest || this.movingMediaElementInDOM)) {\n\t\n\t      // If the original tag is still there, clone and remove it.\n\t      if (el) {\n\t        var clone = el.cloneNode(true);\n\t\n\t        if (el.parentNode) {\n\t          el.parentNode.insertBefore(clone, el);\n\t        }\n\t        Html5.disposeMediaElement(el);\n\t        el = clone;\n\t      } else {\n\t        el = _document2['default'].createElement('video');\n\t\n\t        // determine if native controls should be used\n\t        var tagAttributes = this.options_.tag && Dom.getElAttributes(this.options_.tag);\n\t        var attributes = (0, _mergeOptions2['default'])({}, tagAttributes);\n\t\n\t        if (!browser.TOUCH_ENABLED || this.options_.nativeControlsForTouch !== true) {\n\t          delete attributes.controls;\n\t        }\n\t\n\t        Dom.setElAttributes(el, (0, _obj.assign)(attributes, {\n\t          id: this.options_.techId,\n\t          'class': 'vjs-tech'\n\t        }));\n\t      }\n\t\n\t      el.playerId = this.options_.playerId;\n\t    }\n\t\n\t    // Update specific tag settings, in case they were overridden\n\t    var settingsAttrs = ['autoplay', 'preload', 'loop', 'muted'];\n\t\n\t    for (var i = settingsAttrs.length - 1; i >= 0; i--) {\n\t      var attr = settingsAttrs[i];\n\t      var overwriteAttrs = {};\n\t\n\t      if (typeof this.options_[attr] !== 'undefined') {\n\t        overwriteAttrs[attr] = this.options_[attr];\n\t      }\n\t      Dom.setElAttributes(el, overwriteAttrs);\n\t    }\n\t\n\t    return el;\n\t  };\n\t\n\t  /**\n\t   * This will be triggered if the loadstart event has already fired, before videojs was\n\t   * ready. Two known examples of when this can happen are:\n\t   * 1. If we're loading the playback object after it has started loading\n\t   * 2. The media is already playing the (often with autoplay on) then\n\t   *\n\t   * This function will fire another loadstart so that videojs can catchup.\n\t   *\n\t   * @fires Tech#loadstart\n\t   *\n\t   * @return {undefined}\n\t   *         returns nothing.\n\t   */\n\t\n\t\n\t  Html5.prototype.handleLateInit_ = function handleLateInit_(el) {\n\t    var _this3 = this;\n\t\n\t    if (el.networkState === 0 || el.networkState === 3) {\n\t      // The video element hasn't started loading the source yet\n\t      // or didn't find a source\n\t      return;\n\t    }\n\t\n\t    if (el.readyState === 0) {\n\t      var _ret = function () {\n\t        // NetworkState is set synchronously BUT loadstart is fired at the\n\t        // end of the current stack, usually before setInterval(fn, 0).\n\t        // So at this point we know loadstart may have already fired or is\n\t        // about to fire, and either way the player hasn't seen it yet.\n\t        // We don't want to fire loadstart prematurely here and cause a\n\t        // double loadstart so we'll wait and see if it happens between now\n\t        // and the next loop, and fire it if not.\n\t        // HOWEVER, we also want to make sure it fires before loadedmetadata\n\t        // which could also happen between now and the next loop, so we'll\n\t        // watch for that also.\n\t        var loadstartFired = false;\n\t        var setLoadstartFired = function setLoadstartFired() {\n\t          loadstartFired = true;\n\t        };\n\t\n\t        _this3.on('loadstart', setLoadstartFired);\n\t\n\t        var triggerLoadstart = function triggerLoadstart() {\n\t          // We did miss the original loadstart. Make sure the player\n\t          // sees loadstart before loadedmetadata\n\t          if (!loadstartFired) {\n\t            this.trigger('loadstart');\n\t          }\n\t        };\n\t\n\t        _this3.on('loadedmetadata', triggerLoadstart);\n\t\n\t        _this3.ready(function () {\n\t          this.off('loadstart', setLoadstartFired);\n\t          this.off('loadedmetadata', triggerLoadstart);\n\t\n\t          if (!loadstartFired) {\n\t            // We did miss the original native loadstart. Fire it now.\n\t            this.trigger('loadstart');\n\t          }\n\t        });\n\t\n\t        return {\n\t          v: void 0\n\t        };\n\t      }();\n\t\n\t      if ((typeof _ret === 'undefined' ? 'undefined' : _typeof(_ret)) === \"object\") return _ret.v;\n\t    }\n\t\n\t    // From here on we know that loadstart already fired and we missed it.\n\t    // The other readyState events aren't as much of a problem if we double\n\t    // them, so not going to go to as much trouble as loadstart to prevent\n\t    // that unless we find reason to.\n\t    var eventsToTrigger = ['loadstart'];\n\t\n\t    // loadedmetadata: newly equal to HAVE_METADATA (1) or greater\n\t    eventsToTrigger.push('loadedmetadata');\n\t\n\t    // loadeddata: newly increased to HAVE_CURRENT_DATA (2) or greater\n\t    if (el.readyState >= 2) {\n\t      eventsToTrigger.push('loadeddata');\n\t    }\n\t\n\t    // canplay: newly increased to HAVE_FUTURE_DATA (3) or greater\n\t    if (el.readyState >= 3) {\n\t      eventsToTrigger.push('canplay');\n\t    }\n\t\n\t    // canplaythrough: newly equal to HAVE_ENOUGH_DATA (4)\n\t    if (el.readyState >= 4) {\n\t      eventsToTrigger.push('canplaythrough');\n\t    }\n\t\n\t    // We still need to give the player time to add event listeners\n\t    this.ready(function () {\n\t      eventsToTrigger.forEach(function (type) {\n\t        this.trigger(type);\n\t      }, this);\n\t    });\n\t  };\n\t\n\t  /**\n\t   * Add event listeners to native text track events. This adds the native text tracks\n\t   * to our emulated {@link TextTrackList}.\n\t   */\n\t\n\t\n\t  Html5.prototype.proxyNativeTextTracks_ = function proxyNativeTextTracks_() {\n\t    var tt = this.el().textTracks;\n\t\n\t    if (tt) {\n\t      // Add tracks - if player is initialised after DOM loaded, textTracks\n\t      // will not trigger addtrack\n\t      for (var i = 0; i < tt.length; i++) {\n\t        this.textTracks().addTrack_(tt[i]);\n\t      }\n\t\n\t      if (tt.addEventListener) {\n\t        tt.addEventListener('change', this.handleTextTrackChange_);\n\t        tt.addEventListener('addtrack', this.handleTextTrackAdd_);\n\t        tt.addEventListener('removetrack', this.handleTextTrackRemove_);\n\t      }\n\t\n\t      // Remove (native) texttracks that are not used anymore\n\t      this.on('loadstart', this.removeOldTextTracks_);\n\t    }\n\t  };\n\t\n\t  /**\n\t   * Handle any {@link TextTrackList} `change` event.\n\t   *\n\t   * @param {EventTarget~Event} e\n\t   *        The `change` event that caused this to run.\n\t   *\n\t   * @listens TextTrackList#change\n\t   */\n\t\n\t\n\t  Html5.prototype.handleTextTrackChange = function handleTextTrackChange(e) {\n\t    var tt = this.textTracks();\n\t\n\t    this.textTracks().trigger({\n\t      type: 'change',\n\t      target: tt,\n\t      currentTarget: tt,\n\t      srcElement: tt\n\t    });\n\t  };\n\t\n\t  /**\n\t   * Handle any {@link TextTrackList} `addtrack` event.\n\t   *\n\t   * @param {EventTarget~Event} e\n\t   *        The `addtrack` event that caused this to run.\n\t   *\n\t   * @listens TextTrackList#addtrack\n\t   */\n\t\n\t\n\t  Html5.prototype.handleTextTrackAdd = function handleTextTrackAdd(e) {\n\t    this.textTracks().addTrack_(e.track);\n\t  };\n\t\n\t  /**\n\t   * Handle any {@link TextTrackList} `removetrack` event.\n\t   *\n\t   * @param {EventTarget~Event} e\n\t   *        The `removetrack` event that caused this to run.\n\t   *\n\t   * @listens TextTrackList#removetrack\n\t   */\n\t\n\t\n\t  Html5.prototype.handleTextTrackRemove = function handleTextTrackRemove(e) {\n\t    this.textTracks().removeTrack_(e.track);\n\t  };\n\t\n\t  /**\n\t   * This function removes any {@link AudioTrack}s, {@link VideoTrack}s, or\n\t   * {@link TextTrack}s that are not in the media elements TrackList.\n\t   *\n\t   * @param {TrackList} techTracks\n\t   *        HTML5 Tech's TrackList to search through\n\t   *\n\t   * @param {TrackList} elTracks\n\t   *        HTML5 media elements TrackList to search trough.\n\t   *\n\t   * @private\n\t   */\n\t\n\t\n\t  Html5.prototype.removeOldTracks_ = function removeOldTracks_(techTracks, elTracks) {\n\t    // This will loop over the techTracks and check if they are still used by the HTML5 media element\n\t    // If not, they will be removed from the emulated list\n\t    var removeTracks = [];\n\t\n\t    if (!elTracks) {\n\t      return;\n\t    }\n\t\n\t    for (var i = 0; i < techTracks.length; i++) {\n\t      var techTrack = techTracks[i];\n\t      var found = false;\n\t\n\t      for (var j = 0; j < elTracks.length; j++) {\n\t        if (elTracks[j] === techTrack) {\n\t          found = true;\n\t          break;\n\t        }\n\t      }\n\t\n\t      if (!found) {\n\t        removeTracks.push(techTrack);\n\t      }\n\t    }\n\t\n\t    for (var _i = 0; _i < removeTracks.length; _i++) {\n\t      var track = removeTracks[_i];\n\t\n\t      techTracks.removeTrack_(track);\n\t    }\n\t  };\n\t\n\t  /**\n\t   * Remove {@link TextTrack}s that dont exist in the native track list from our\n\t   * emulated {@link TextTrackList}.\n\t   *\n\t   * @listens Tech#loadstart\n\t   */\n\t\n\t\n\t  Html5.prototype.removeOldTextTracks_ = function removeOldTextTracks_(e) {\n\t    var techTracks = this.textTracks();\n\t    var elTracks = this.el().textTracks;\n\t\n\t    this.removeOldTracks_(techTracks, elTracks);\n\t  };\n\t\n\t  /**\n\t   * Called by {@link Player#play} to play using the `Html5` `Tech`.\n\t   */\n\t\n\t\n\t  Html5.prototype.play = function play() {\n\t    var playPromise = this.el_.play();\n\t\n\t    // Catch/silence error when a pause interrupts a play request\n\t    // on browsers which return a promise\n\t    if (playPromise !== undefined && typeof playPromise.then === 'function') {\n\t      playPromise.then(null, function (e) {});\n\t    }\n\t  };\n\t\n\t  /**\n\t   * Set current time for the `HTML5` tech.\n\t   *\n\t   * @param {number} seconds\n\t   *        Set the current time of the media to this.\n\t   */\n\t\n\t\n\t  Html5.prototype.setCurrentTime = function setCurrentTime(seconds) {\n\t    try {\n\t      this.el_.currentTime = seconds;\n\t    } catch (e) {\n\t      (0, _log2['default'])(e, 'Video is not ready. (Video.js)');\n\t      // this.warning(VideoJS.warnings.videoNotReady);\n\t    }\n\t  };\n\t\n\t  /**\n\t   * Get the current duration of the HTML5 media element.\n\t   *\n\t   * @return {number}\n\t   *         The duration of the media or 0 if there is no duration.\n\t   */\n\t\n\t\n\t  Html5.prototype.duration = function duration() {\n\t    var _this4 = this;\n\t\n\t    // Android Chrome will report duration as Infinity for VOD HLS until after\n\t    // playback has started, which triggers the live display erroneously.\n\t    // Return NaN if playback has not started and trigger a durationupdate once\n\t    // the duration can be reliably known.\n\t    if (this.el_.duration === Infinity && browser.IS_ANDROID && browser.IS_CHROME) {\n\t      if (this.el_.currentTime === 0) {\n\t        var _ret2 = function () {\n\t          // Wait for the first `timeupdate` with currentTime > 0 - there may be\n\t          // several with 0\n\t          var checkProgress = function checkProgress() {\n\t            if (_this4.el_.currentTime > 0) {\n\t              // Trigger durationchange for genuinely live video\n\t              if (_this4.el_.duration === Infinity) {\n\t                _this4.trigger('durationchange');\n\t              }\n\t              _this4.off('timeupdate', checkProgress);\n\t            }\n\t          };\n\t\n\t          _this4.on('timeupdate', checkProgress);\n\t          return {\n\t            v: NaN\n\t          };\n\t        }();\n\t\n\t        if ((typeof _ret2 === 'undefined' ? 'undefined' : _typeof(_ret2)) === \"object\") return _ret2.v;\n\t      }\n\t    }\n\t    return this.el_.duration || NaN;\n\t  };\n\t\n\t  /**\n\t   * Get the current width of the HTML5 media element.\n\t   *\n\t   * @return {number}\n\t   *         The width of the HTML5 media element.\n\t   */\n\t\n\t\n\t  Html5.prototype.width = function width() {\n\t    return this.el_.offsetWidth;\n\t  };\n\t\n\t  /**\n\t   * Get the current height of the HTML5 media element.\n\t   *\n\t   * @return {number}\n\t   *         The heigth of the HTML5 media element.\n\t   */\n\t\n\t\n\t  Html5.prototype.height = function height() {\n\t    return this.el_.offsetHeight;\n\t  };\n\t\n\t  /**\n\t   * Proxy iOS `webkitbeginfullscreen` and `webkitendfullscreen` into\n\t   * `fullscreenchange` event.\n\t   *\n\t   * @private\n\t   * @fires fullscreenchange\n\t   * @listens webkitendfullscreen\n\t   * @listens webkitbeginfullscreen\n\t   * @listens webkitbeginfullscreen\n\t   */\n\t\n\t\n\t  Html5.prototype.proxyWebkitFullscreen_ = function proxyWebkitFullscreen_() {\n\t    var _this5 = this;\n\t\n\t    if (!('webkitDisplayingFullscreen' in this.el_)) {\n\t      return;\n\t    }\n\t\n\t    var endFn = function endFn() {\n\t      this.trigger('fullscreenchange', { isFullscreen: false });\n\t    };\n\t\n\t    var beginFn = function beginFn() {\n\t      this.one('webkitendfullscreen', endFn);\n\t\n\t      this.trigger('fullscreenchange', { isFullscreen: true });\n\t    };\n\t\n\t    this.on('webkitbeginfullscreen', beginFn);\n\t    this.on('dispose', function () {\n\t      _this5.off('webkitbeginfullscreen', beginFn);\n\t      _this5.off('webkitendfullscreen', endFn);\n\t    });\n\t  };\n\t\n\t  /**\n\t   * Check if fullscreen is supported on the current playback device.\n\t   *\n\t   * @return {boolean}\n\t   *         - True if fullscreen is supported.\n\t   *         - False if fullscreen is not supported.\n\t   */\n\t\n\t\n\t  Html5.prototype.supportsFullScreen = function supportsFullScreen() {\n\t    if (typeof this.el_.webkitEnterFullScreen === 'function') {\n\t      var userAgent = _window2['default'].navigator && _window2['default'].navigator.userAgent || '';\n\t\n\t      // Seems to be broken in Chromium/Chrome && Safari in Leopard\n\t      if (/Android/.test(userAgent) || !/Chrome|Mac OS X 10.5/.test(userAgent)) {\n\t        return true;\n\t      }\n\t    }\n\t    return false;\n\t  };\n\t\n\t  /**\n\t   * Request that the `HTML5` Tech enter fullscreen.\n\t   */\n\t\n\t\n\t  Html5.prototype.enterFullScreen = function enterFullScreen() {\n\t    var video = this.el_;\n\t\n\t    if (video.paused && video.networkState <= video.HAVE_METADATA) {\n\t      // attempt to prime the video element for programmatic access\n\t      // this isn't necessary on the desktop but shouldn't hurt\n\t      this.el_.play();\n\t\n\t      // playing and pausing synchronously during the transition to fullscreen\n\t      // can get iOS ~6.1 devices into a play/pause loop\n\t      this.setTimeout(function () {\n\t        video.pause();\n\t        video.webkitEnterFullScreen();\n\t      }, 0);\n\t    } else {\n\t      video.webkitEnterFullScreen();\n\t    }\n\t  };\n\t\n\t  /**\n\t   * Request that the `HTML5` Tech exit fullscreen.\n\t   */\n\t\n\t\n\t  Html5.prototype.exitFullScreen = function exitFullScreen() {\n\t    this.el_.webkitExitFullScreen();\n\t  };\n\t\n\t  /**\n\t   * A getter/setter for the `Html5` Tech's source object.\n\t   * > Note: Please use {@link Html5#setSource}\n\t   *\n\t   * @param {Tech~SourceObject} [src]\n\t   *        The source object you want to set on the `HTML5` techs element.\n\t   *\n\t   * @return {Tech~SourceObject|undefined}\n\t   *         - The current source object when a source is not passed in.\n\t   *         - undefined when setting\n\t   *\n\t   * @deprecated Since version 5.\n\t   */\n\t\n\t\n\t  Html5.prototype.src = function src(_src) {\n\t    if (_src === undefined) {\n\t      return this.el_.src;\n\t    }\n\t\n\t    // Setting src through `src` instead of `setSrc` will be deprecated\n\t    this.setSrc(_src);\n\t  };\n\t\n\t  /**\n\t   * Reset the tech by removing all sources and then calling\n\t   * {@link Html5.resetMediaElement}.\n\t   */\n\t\n\t\n\t  Html5.prototype.reset = function reset() {\n\t    Html5.resetMediaElement(this.el_);\n\t  };\n\t\n\t  /**\n\t   * Get the current source on the `HTML5` Tech. Falls back to returning the source from\n\t   * the HTML5 media element.\n\t   *\n\t   * @return {Tech~SourceObject}\n\t   *         The current source object from the HTML5 tech. With a fallback to the\n\t   *         elements source.\n\t   */\n\t\n\t\n\t  Html5.prototype.currentSrc = function currentSrc() {\n\t    if (this.currentSource_) {\n\t      return this.currentSource_.src;\n\t    }\n\t    return this.el_.currentSrc;\n\t  };\n\t\n\t  /**\n\t   * Set controls attribute for the HTML5 media Element.\n\t   *\n\t   * @param {string} val\n\t   *        Value to set the controls attribute to\n\t   */\n\t\n\t\n\t  Html5.prototype.setControls = function setControls(val) {\n\t    this.el_.controls = !!val;\n\t  };\n\t\n\t  /**\n\t   * Create and returns a remote {@link TextTrack} object.\n\t   *\n\t   * @param {string} kind\n\t   *        `TextTrack` kind (subtitles, captions, descriptions, chapters, or metadata)\n\t   *\n\t   * @param {string} [label]\n\t   *        Label to identify the text track\n\t   *\n\t   * @param {string} [language]\n\t   *        Two letter language abbreviation\n\t   *\n\t   * @return {TextTrack}\n\t   *         The TextTrack that gets created.\n\t   */\n\t\n\t\n\t  Html5.prototype.addTextTrack = function addTextTrack(kind, label, language) {\n\t    if (!this.featuresNativeTextTracks) {\n\t      return _Tech.prototype.addTextTrack.call(this, kind, label, language);\n\t    }\n\t\n\t    return this.el_.addTextTrack(kind, label, language);\n\t  };\n\t\n\t  /**\n\t   * Creates either native TextTrack or an emulated TextTrack depending\n\t   * on the value of `featuresNativeTextTracks`\n\t   *\n\t   * @param {Object} options\n\t   *        The object should contain the options to intialize the TextTrack with.\n\t   *\n\t   * @param {string} [options.kind]\n\t   *        `TextTrack` kind (subtitles, captions, descriptions, chapters, or metadata).\n\t   *\n\t   * @param {string} [options.label].\n\t   *        Label to identify the text track\n\t   *\n\t   * @param {string} [options.language]\n\t   *        Two letter language abbreviation.\n\t   *\n\t   * @param {boolean} [options.default]\n\t   *        Default this track to on.\n\t   *\n\t   * @param {string} [options.id]\n\t   *        The internal id to assign this track.\n\t   *\n\t   * @param {string} [options.src]\n\t   *        A source url for the track.\n\t   *\n\t   * @return {HTMLTrackElement}\n\t   *         The track element that gets created.\n\t   */\n\t\n\t\n\t  Html5.prototype.createRemoteTextTrack = function createRemoteTextTrack(options) {\n\t    if (!this.featuresNativeTextTracks) {\n\t      return _Tech.prototype.createRemoteTextTrack.call(this, options);\n\t    }\n\t    var htmlTrackElement = _document2['default'].createElement('track');\n\t\n\t    if (options.kind) {\n\t      htmlTrackElement.kind = options.kind;\n\t    }\n\t    if (options.label) {\n\t      htmlTrackElement.label = options.label;\n\t    }\n\t    if (options.language || options.srclang) {\n\t      htmlTrackElement.srclang = options.language || options.srclang;\n\t    }\n\t    if (options['default']) {\n\t      htmlTrackElement['default'] = options['default'];\n\t    }\n\t    if (options.id) {\n\t      htmlTrackElement.id = options.id;\n\t    }\n\t    if (options.src) {\n\t      htmlTrackElement.src = options.src;\n\t    }\n\t\n\t    return htmlTrackElement;\n\t  };\n\t\n\t  /**\n\t   * Creates a remote text track object and returns an html track element.\n\t   *\n\t   * @param {Object} options The object should contain values for\n\t   * kind, language, label, and src (location of the WebVTT file)\n\t   * @param {Boolean} [manualCleanup=true] if set to false, the TextTrack will be\n\t   * automatically removed from the video element whenever the source changes\n\t   * @return {HTMLTrackElement} An Html Track Element.\n\t   * This can be an emulated {@link HTMLTrackElement} or a native one.\n\t   * @deprecated The default value of the \"manualCleanup\" parameter will default\n\t   * to \"false\" in upcoming versions of Video.js\n\t   */\n\t\n\t\n\t  Html5.prototype.addRemoteTextTrack = function addRemoteTextTrack(options, manualCleanup) {\n\t    var htmlTrackElement = _Tech.prototype.addRemoteTextTrack.call(this, options, manualCleanup);\n\t\n\t    if (this.featuresNativeTextTracks) {\n\t      this.el().appendChild(htmlTrackElement);\n\t    }\n\t\n\t    return htmlTrackElement;\n\t  };\n\t\n\t  /**\n\t   * Remove remote `TextTrack` from `TextTrackList` object\n\t   *\n\t   * @param {TextTrack} track\n\t   *        `TextTrack` object to remove\n\t   */\n\t\n\t\n\t  Html5.prototype.removeRemoteTextTrack = function removeRemoteTextTrack(track) {\n\t    _Tech.prototype.removeRemoteTextTrack.call(this, track);\n\t\n\t    if (this.featuresNativeTextTracks) {\n\t      var tracks = this.$$('track');\n\t\n\t      var i = tracks.length;\n\t\n\t      while (i--) {\n\t        if (track === tracks[i] || track === tracks[i].track) {\n\t          this.el().removeChild(tracks[i]);\n\t        }\n\t      }\n\t    }\n\t  };\n\t\n\t  return Html5;\n\t}(_tech2['default']);\n\t\n\t/* HTML5 Support Testing ---------------------------------------------------- */\n\t\n\tif (Dom.isReal()) {\n\t\n\t  /**\n\t   * Element for testing browser HTML5 media capabilities\n\t   *\n\t   * @type {Element}\n\t   * @constant\n\t   * @private\n\t   */\n\t  Html5.TEST_VID = _document2['default'].createElement('video');\n\t  var track = _document2['default'].createElement('track');\n\t\n\t  track.kind = 'captions';\n\t  track.srclang = 'en';\n\t  track.label = 'English';\n\t  Html5.TEST_VID.appendChild(track);\n\t}\n\t\n\t/**\n\t * Check if HTML5 media is supported by this browser/device.\n\t *\n\t * @return {boolean}\n\t *         - True if HTML5 media is supported.\n\t *         - False if HTML5 media is not supported.\n\t */\n\tHtml5.isSupported = function () {\n\t  // IE9 with no Media Player is a LIAR! (#984)\n\t  try {\n\t    Html5.TEST_VID.volume = 0.5;\n\t  } catch (e) {\n\t    return false;\n\t  }\n\t\n\t  return !!(Html5.TEST_VID && Html5.TEST_VID.canPlayType);\n\t};\n\t\n\t/**\n\t * Check if the volume can be changed in this browser/device.\n\t * Volume cannot be changed in a lot of mobile devices.\n\t * Specifically, it can't be changed from 1 on iOS.\n\t *\n\t * @return {boolean}\n\t *         - True if volume can be controlled\n\t *         - False otherwise\n\t */\n\tHtml5.canControlVolume = function () {\n\t  // IE will error if Windows Media Player not installed #3315\n\t  try {\n\t    var volume = Html5.TEST_VID.volume;\n\t\n\t    Html5.TEST_VID.volume = volume / 2 + 0.1;\n\t    return volume !== Html5.TEST_VID.volume;\n\t  } catch (e) {\n\t    return false;\n\t  }\n\t};\n\t\n\t/**\n\t * Check if the playback rate can be changed in this browser/device.\n\t *\n\t * @return {boolean}\n\t *         - True if playback rate can be controlled\n\t *         - False otherwise\n\t */\n\tHtml5.canControlPlaybackRate = function () {\n\t  // Playback rate API is implemented in Android Chrome, but doesn't do anything\n\t  // https://github.com/videojs/video.js/issues/3180\n\t  if (browser.IS_ANDROID && browser.IS_CHROME) {\n\t    return false;\n\t  }\n\t  // IE will error if Windows Media Player not installed #3315\n\t  try {\n\t    var playbackRate = Html5.TEST_VID.playbackRate;\n\t\n\t    Html5.TEST_VID.playbackRate = playbackRate / 2 + 0.1;\n\t    return playbackRate !== Html5.TEST_VID.playbackRate;\n\t  } catch (e) {\n\t    return false;\n\t  }\n\t};\n\t\n\t/**\n\t * Check to see if native `TextTrack`s are supported by this browser/device.\n\t *\n\t * @return {boolean}\n\t *         - True if native `TextTrack`s are supported.\n\t *         - False otherwise\n\t */\n\tHtml5.supportsNativeTextTracks = function () {\n\t  return browser.IS_ANY_SAFARI;\n\t};\n\t\n\t/**\n\t * Check to see if native `VideoTrack`s are supported by this browser/device\n\t *\n\t * @return {boolean}\n\t *        - True if native `VideoTrack`s are supported.\n\t *        - False otherwise\n\t */\n\tHtml5.supportsNativeVideoTracks = function () {\n\t  return !!(Html5.TEST_VID && Html5.TEST_VID.videoTracks);\n\t};\n\t\n\t/**\n\t * Check to see if native `AudioTrack`s are supported by this browser/device\n\t *\n\t * @return {boolean}\n\t *        - True if native `AudioTrack`s are supported.\n\t *        - False otherwise\n\t */\n\tHtml5.supportsNativeAudioTracks = function () {\n\t  return !!(Html5.TEST_VID && Html5.TEST_VID.audioTracks);\n\t};\n\t\n\t/**\n\t * An array of events available on the Html5 tech.\n\t *\n\t * @private\n\t * @type {Array}\n\t */\n\tHtml5.Events = ['loadstart', 'suspend', 'abort', 'error', 'emptied', 'stalled', 'loadedmetadata', 'loadeddata', 'canplay', 'canplaythrough', 'playing', 'waiting', 'seeking', 'seeked', 'ended', 'durationchange', 'timeupdate', 'progress', 'play', 'pause', 'ratechange', 'volumechange'];\n\t\n\t/**\n\t * Boolean indicating whether the `Tech` supports volume control.\n\t *\n\t * @type {boolean}\n\t * @default {@link Html5.canControlVolume}\n\t */\n\tHtml5.prototype.featuresVolumeControl = Html5.canControlVolume();\n\t\n\t/**\n\t * Boolean indicating whether the `Tech` supports changing the speed at which the media\n\t * plays. Examples:\n\t *   - Set player to play 2x (twice) as fast\n\t *   - Set player to play 0.5x (half) as fast\n\t *\n\t * @type {boolean}\n\t * @default {@link Html5.canControlPlaybackRate}\n\t */\n\tHtml5.prototype.featuresPlaybackRate = Html5.canControlPlaybackRate();\n\t\n\t/**\n\t * Boolean indicating whether the `HTML5` tech currently supports the media element\n\t * moving in the DOM. iOS breaks if you move the media element, so this is set this to\n\t * false there. Everywhere else this should be true.\n\t *\n\t * @type {boolean}\n\t * @default\n\t */\n\tHtml5.prototype.movingMediaElementInDOM = !browser.IS_IOS;\n\t\n\t// TODO: Previous comment: No longer appears to be used. Can probably be removed.\n\t//       Is this true?\n\t/**\n\t * Boolean indicating whether the `HTML5` tech currently supports automatic media resize\n\t * when going into fullscreen.\n\t *\n\t * @type {boolean}\n\t * @default\n\t */\n\tHtml5.prototype.featuresFullscreenResize = true;\n\t\n\t/**\n\t * Boolean indicating whether the `HTML5` tech currently supports the progress event.\n\t * If this is false, manual `progress` events will be triggred instead.\n\t *\n\t * @type {boolean}\n\t * @default\n\t */\n\tHtml5.prototype.featuresProgressEvents = true;\n\t\n\t/**\n\t * Boolean indicating whether the `HTML5` tech currently supports the timeupdate event.\n\t * If this is false, manual `timeupdate` events will be triggred instead.\n\t *\n\t * @default\n\t */\n\tHtml5.prototype.featuresTimeupdateEvents = true;\n\t\n\t/**\n\t * Boolean indicating whether the `HTML5` tech currently supports native `TextTrack`s.\n\t *\n\t * @type {boolean}\n\t * @default {@link Html5.supportsNativeTextTracks}\n\t */\n\tHtml5.prototype.featuresNativeTextTracks = Html5.supportsNativeTextTracks();\n\t\n\t/**\n\t * Boolean indicating whether the `HTML5` tech currently supports native `VideoTrack`s.\n\t *\n\t * @type {boolean}\n\t * @default {@link Html5.supportsNativeVideoTracks}\n\t */\n\tHtml5.prototype.featuresNativeVideoTracks = Html5.supportsNativeVideoTracks();\n\t\n\t/**\n\t * Boolean indicating whether the `HTML5` tech currently supports native `AudioTrack`s.\n\t *\n\t * @type {boolean}\n\t * @default {@link Html5.supportsNativeAudioTracks}\n\t */\n\tHtml5.prototype.featuresNativeAudioTracks = Html5.supportsNativeAudioTracks();\n\t\n\t// HTML5 Feature detection and Device Fixes --------------------------------- //\n\tvar canPlayType = Html5.TEST_VID && Html5.TEST_VID.constructor.prototype.canPlayType;\n\tvar mpegurlRE = /^application\\/(?:x-|vnd\\.apple\\.)mpegurl/i;\n\tvar mp4RE = /^video\\/mp4/i;\n\t\n\tHtml5.patchCanPlayType = function () {\n\t\n\t  // Android 4.0 and above can play HLS to some extent but it reports being unable to do so\n\t  if (browser.ANDROID_VERSION >= 4.0 && !browser.IS_FIREFOX) {\n\t    Html5.TEST_VID.constructor.prototype.canPlayType = function (type) {\n\t      if (type && mpegurlRE.test(type)) {\n\t        return 'maybe';\n\t      }\n\t      return canPlayType.call(this, type);\n\t    };\n\t\n\t    // Override Android 2.2 and less canPlayType method which is broken\n\t  } else if (browser.IS_OLD_ANDROID) {\n\t    Html5.TEST_VID.constructor.prototype.canPlayType = function (type) {\n\t      if (type && mp4RE.test(type)) {\n\t        return 'maybe';\n\t      }\n\t      return canPlayType.call(this, type);\n\t    };\n\t  }\n\t};\n\t\n\tHtml5.unpatchCanPlayType = function () {\n\t  var r = Html5.TEST_VID.constructor.prototype.canPlayType;\n\t\n\t  Html5.TEST_VID.constructor.prototype.canPlayType = canPlayType;\n\t  return r;\n\t};\n\t\n\t// by default, patch the media element\n\tHtml5.patchCanPlayType();\n\t\n\tHtml5.disposeMediaElement = function (el) {\n\t  if (!el) {\n\t    return;\n\t  }\n\t\n\t  if (el.parentNode) {\n\t    el.parentNode.removeChild(el);\n\t  }\n\t\n\t  // remove any child track or source nodes to prevent their loading\n\t  while (el.hasChildNodes()) {\n\t    el.removeChild(el.firstChild);\n\t  }\n\t\n\t  // remove any src reference. not setting `src=''` because that causes a warning\n\t  // in firefox\n\t  el.removeAttribute('src');\n\t\n\t  // force the media element to update its loading state by calling load()\n\t  // however IE on Windows 7N has a bug that throws an error so need a try/catch (#793)\n\t  if (typeof el.load === 'function') {\n\t    // wrapping in an iife so it's not deoptimized (#1060#discussion_r10324473)\n\t    (function () {\n\t      try {\n\t        el.load();\n\t      } catch (e) {\n\t        // not supported\n\t      }\n\t    })();\n\t  }\n\t};\n\t\n\tHtml5.resetMediaElement = function (el) {\n\t  if (!el) {\n\t    return;\n\t  }\n\t\n\t  var sources = el.querySelectorAll('source');\n\t  var i = sources.length;\n\t\n\t  while (i--) {\n\t    el.removeChild(sources[i]);\n\t  }\n\t\n\t  // remove any src reference.\n\t  // not setting `src=''` because that throws an error\n\t  el.removeAttribute('src');\n\t\n\t  if (typeof el.load === 'function') {\n\t    // wrapping in an iife so it's not deoptimized (#1060#discussion_r10324473)\n\t    (function () {\n\t      try {\n\t        el.load();\n\t      } catch (e) {\n\t        // satisfy linter\n\t      }\n\t    })();\n\t  }\n\t};\n\t\n\t/* Native HTML5 element property wrapping ----------------------------------- */\n\t// Wrap native properties with a getter\n\t[\n\t/**\n\t * Get the value of `paused` from the media element. `paused` indicates whether the media element\n\t * is currently paused or not.\n\t *\n\t * @method Html5#paused\n\t * @return {boolean}\n\t *         The value of `paused` from the media element.\n\t *\n\t * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-paused}\n\t */\n\t'paused',\n\t\n\t/**\n\t * Get the value of `currentTime` from the media element. `currentTime` indicates\n\t * the current second that the media is at in playback.\n\t *\n\t * @method Html5#currentTime\n\t * @return {number}\n\t *         The value of `currentTime` from the media element.\n\t *\n\t * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-currenttime}\n\t */\n\t'currentTime',\n\t\n\t/**\n\t * Get the value of `buffered` from the media element. `buffered` is a `TimeRange`\n\t * object that represents the parts of the media that are already downloaded and\n\t * available for playback.\n\t *\n\t * @method Html5#buffered\n\t * @return {TimeRange}\n\t *         The value of `buffered` from the media element.\n\t *\n\t * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-buffered}\n\t */\n\t'buffered',\n\t\n\t/**\n\t * Get the value of `volume` from the media element. `volume` indicates\n\t * the current playback volume of audio for a media. `volume` will be a value from 0\n\t * (silent) to 1 (loudest and default).\n\t *\n\t * @method Html5#volume\n\t * @return {number}\n\t *         The value of `volume` from the media element. Value will be between 0-1.\n\t *\n\t * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-a-volume}\n\t */\n\t'volume',\n\t\n\t/**\n\t * Get the value of `muted` from the media element. `muted` indicates\n\t * that the volume for the media should be set to silent. This does not actually change\n\t * the `volume` attribute.\n\t *\n\t * @method Html5#muted\n\t * @return {boolean}\n\t *         - True if the value of `volume` should be ignored and the audio set to silent.\n\t *         - False if the value of `volume` should be used.\n\t *\n\t * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-muted}\n\t */\n\t'muted',\n\t\n\t/**\n\t * Get the value of `poster` from the media element. `poster` indicates\n\t * that the url of an image file that can/will be shown when no media data is available.\n\t *\n\t * @method Html5#poster\n\t * @return {string}\n\t *         The value of `poster` from the media element. Value will be a url to an\n\t *         image.\n\t *\n\t * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#attr-video-poster}\n\t */\n\t'poster',\n\t\n\t/**\n\t * Get the value of `preload` from the media element. `preload` indicates\n\t * what should download before the media is interacted with. It can have the following\n\t * values:\n\t * - none: nothing should be downloaded\n\t * - metadata: poster and the first few frames of the media may be downloaded to get\n\t *   media dimensions and other metadata\n\t * - auto: allow the media and metadata for the media to be downloaded before\n\t *    interaction\n\t *\n\t * @method Html5#preload\n\t * @return {string}\n\t *         The value of `preload` from the media element. Will be 'none', 'metadata',\n\t *         or 'auto'.\n\t *\n\t * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#attr-media-preload}\n\t */\n\t'preload',\n\t\n\t/**\n\t * Get the value of `autoplay` from the media element. `autoplay` indicates\n\t * that the media should start to play as soon as the page is ready.\n\t *\n\t * @method Html5#autoplay\n\t * @return {boolean}\n\t *         - The value of `autoplay` from the media element.\n\t *         - True indicates that the media should start as soon as the page loads.\n\t *         - False indicates that the media should not start as soon as the page loads.\n\t *\n\t * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#attr-media-autoplay}\n\t */\n\t'autoplay',\n\t\n\t/**\n\t * Get the value of `controls` from the media element. `controls` indicates\n\t * whether the native media controls should be shown or hidden.\n\t *\n\t * @method Html5#controls\n\t * @return {boolean}\n\t *         - The value of `controls` from the media element.\n\t *         - True indicates that native controls should be showing.\n\t *         - False indicates that native controls should be hidden.\n\t *\n\t * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#attr-media-controls}\n\t */\n\t'controls',\n\t\n\t/**\n\t * Get the value of `loop` from the media element. `loop` indicates\n\t * that the media should return to the start of the media and continue playing once\n\t * it reaches the end.\n\t *\n\t * @method Html5#loop\n\t * @return {boolean}\n\t *         - The value of `loop` from the media element.\n\t *         - True indicates that playback should seek back to start once\n\t *           the end of a media is reached.\n\t *         - False indicates that playback should not loop back to the start when the\n\t *           end of the media is reached.\n\t *\n\t * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#attr-media-loop}\n\t */\n\t'loop',\n\t\n\t/**\n\t * Get the value of the `error` from the media element. `error` indicates any\n\t * MediaError that may have occured during playback. If error returns null there is no\n\t * current error.\n\t *\n\t * @method Html5#error\n\t * @return {MediaError|null}\n\t *         The value of `error` from the media element. Will be `MediaError` if there\n\t *         is a current error and null otherwise.\n\t *\n\t * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-error}\n\t */\n\t'error',\n\t\n\t/**\n\t * Get the value of `seeking` from the media element. `seeking` indicates whether the\n\t * media is currently seeking to a new position or not.\n\t *\n\t * @method Html5#seeking\n\t * @return {boolean}\n\t *         - The value of `seeking` from the media element.\n\t *         - True indicates that the media is currently seeking to a new position.\n\t *         - Flase indicates that the media is not seeking to a new position at this time.\n\t *\n\t * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-seeking}\n\t */\n\t'seeking',\n\t\n\t/**\n\t * Get the value of `seekable` from the media element. `seekable` returns a\n\t * `TimeRange` object indicating ranges of time that can currently be `seeked` to.\n\t *\n\t * @method Html5#seekable\n\t * @return {TimeRange}\n\t *         The value of `seekable` from the media element. A `TimeRange` object\n\t *         indicating the current ranges of time that can be seeked to.\n\t *\n\t * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-seekable}\n\t */\n\t'seekable',\n\t\n\t/**\n\t * Get the value of `ended` from the media element. `ended` indicates whether\n\t * the media has reached the end or not.\n\t *\n\t * @method Html5#ended\n\t * @return {boolean}\n\t *         - The value of `ended` from the media element.\n\t *         - True indicates that the media has ended.\n\t *         - False indicates that the media has not ended.\n\t *\n\t * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-ended}\n\t */\n\t'ended',\n\t\n\t/**\n\t * Get the value of `defaultMuted` from the media element. `defaultMuted` indicates\n\t * whether the media should start muted or not. Only changes the default state of the\n\t * media. `muted` and `defaultMuted` can have different values. `muted` indicates the\n\t * current state.\n\t *\n\t * @method Html5#defaultMuted\n\t * @return {boolean}\n\t *         - The value of `defaultMuted` from the media element.\n\t *         - True indicates that the media should start muted.\n\t *         - False indicates that the media should not start muted\n\t *\n\t * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-defaultmuted}\n\t */\n\t'defaultMuted',\n\t\n\t/**\n\t * Get the value of `playbackRate` from the media element. `playbackRate` indicates\n\t * the rate at which the media is currently playing back. Examples:\n\t *   - if playbackRate is set to 2, media will play twice as fast.\n\t *   - if playbackRate is set to 0.5, media will play half as fast.\n\t *\n\t * @method Html5#playbackRate\n\t * @return {number}\n\t *         The value of `playbackRate` from the media element. A number indicating\n\t *         the current playback speed of the media, where 1 is normal speed.\n\t *\n\t * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-playbackrate}\n\t */\n\t'playbackRate',\n\t\n\t/**\n\t * Get the value of `played` from the media element. `played` returns a `TimeRange`\n\t * object representing points in the media timeline that have been played.\n\t *\n\t * @method Html5#played\n\t * @return {TimeRange}\n\t *         The value of `played` from the media element. A `TimeRange` object indicating\n\t *         the ranges of time that have been played.\n\t *\n\t * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-played}\n\t */\n\t'played',\n\t\n\t/**\n\t * Get the value of `networkState` from the media element. `networkState` indicates\n\t * the current network state. It returns an enumeration from the following list:\n\t * - 0: NETWORK_EMPTY\n\t * - 1: NEWORK_IDLE\n\t * - 2: NETWORK_LOADING\n\t * - 3: NETWORK_NO_SOURCE\n\t *\n\t * @method Html5#networkState\n\t * @return {number}\n\t *         The value of `networkState` from the media element. This will be a number\n\t *         from the list in the description.\n\t *\n\t * @see [Spec] {@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-networkstate}\n\t */\n\t'networkState',\n\t\n\t/**\n\t * Get the value of `readyState` from the media element. `readyState` indicates\n\t * the current state of the media element. It returns an enumeration from the\n\t * following list:\n\t * - 0: HAVE_NOTHING\n\t * - 1: HAVE_METADATA\n\t * - 2: HAVE_CURRENT_DATA\n\t * - 3: HAVE_FUTURE_DATA\n\t * - 4: HAVE_ENOUGH_DATA\n\t *\n\t * @method Html5#readyState\n\t * @return {number}\n\t *         The value of `readyState` from the media element. This will be a number\n\t *         from the list in the description.\n\t *\n\t * @see [Spec] {@link https://www.w3.org/TR/html5/embedded-content-0.html#ready-states}\n\t */\n\t'readyState',\n\t\n\t/**\n\t * Get the value of `videoWidth` from the video element. `videoWidth` indicates\n\t * the current width of the video in css pixels.\n\t *\n\t * @method Html5#videoWidth\n\t * @return {number}\n\t *         The value of `videoWidth` from the video element. This will be a number\n\t *         in css pixels.\n\t *\n\t * @see [Spec] {@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-video-videowidth}\n\t */\n\t'videoWidth',\n\t\n\t/**\n\t * Get the value of `videoHeight` from the video element. `videoHeigth` indicates\n\t * the current height of the video in css pixels.\n\t *\n\t * @method Html5#videoHeight\n\t * @return {number}\n\t *         The value of `videoHeight` from the video element. This will be a number\n\t *         in css pixels.\n\t *\n\t * @see [Spec] {@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-video-videowidth}\n\t */\n\t'videoHeight'].forEach(function (prop) {\n\t  Html5.prototype[prop] = function () {\n\t    return this.el_[prop];\n\t  };\n\t});\n\t\n\t// Wrap native properties with a setter in this format:\n\t// set + toTitleCase(name)\n\t[\n\t/**\n\t * Set the value of `volume` on the media element. `volume` indicates the current\n\t * audio level as a percentage in decimal form. This means that 1 is 100%, 0.5 is 50%, and\n\t * so on.\n\t *\n\t * @method Html5#setVolume\n\t * @param {number} percentAsDecimal\n\t *        The volume percent as a decimal. Valid range is from 0-1.\n\t *\n\t * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-a-volume}\n\t */\n\t'volume',\n\t\n\t/**\n\t * Set the value of `muted` on the media element. `muted` indicates the current\n\t * audio level should be silent.\n\t *\n\t * @method Html5#setMuted\n\t * @param {boolean} muted\n\t *        - True if the audio should be set to silent\n\t *        - False otherwise\n\t *\n\t * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-muted}\n\t */\n\t'muted',\n\t\n\t/**\n\t * Set the value of `src` on the media element. `src` indicates the current\n\t * {@link Tech~SourceObject} for the media.\n\t *\n\t * @method Html5#setSrc\n\t * @param {Tech~SourceObject} src\n\t *        The source object to set as the current source.\n\t *\n\t * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-src}\n\t */\n\t'src',\n\t\n\t/**\n\t * Set the value of `poster` on the media element. `poster` is the url to\n\t * an image file that can/will be shown when no media data is available.\n\t *\n\t * @method Html5#setPoster\n\t * @param {string} poster\n\t *        The url to an image that should be used as the `poster` for the media\n\t *        element.\n\t *\n\t * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#attr-media-poster}\n\t */\n\t'poster',\n\t\n\t/**\n\t * Set the value of `preload` on the media element. `preload` indicates\n\t * what should download before the media is interacted with. It can have the following\n\t * values:\n\t * - none: nothing should be downloaded\n\t * - metadata: poster and the first few frames of the media may be downloaded to get\n\t *   media dimensions and other metadata\n\t * - auto: allow the media and metadata for the media to be downloaded before\n\t *    interaction\n\t *\n\t * @method Html5#setPreload\n\t * @param {string} preload\n\t *         The value of `preload` to set on the media element. Must be 'none', 'metadata',\n\t *         or 'auto'.\n\t *\n\t * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#attr-media-preload}\n\t */\n\t'preload',\n\t\n\t/**\n\t * Set the value of `autoplay` on the media element. `autoplay` indicates\n\t * that the media should start to play as soon as the page is ready.\n\t *\n\t * @method Html5#setAutoplay\n\t * @param {boolean} autoplay\n\t *         - True indicates that the media should start as soon as the page loads.\n\t *         - False indicates that the media should not start as soon as the page loads.\n\t *\n\t * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#attr-media-autoplay}\n\t */\n\t'autoplay',\n\t\n\t/**\n\t * Set the value of `loop` on the media element. `loop` indicates\n\t * that the media should return to the start of the media and continue playing once\n\t * it reaches the end.\n\t *\n\t * @method Html5#setLoop\n\t * @param {boolean} loop\n\t *         - True indicates that playback should seek back to start once\n\t *           the end of a media is reached.\n\t *         - False indicates that playback should not loop back to the start when the\n\t *           end of the media is reached.\n\t *\n\t * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#attr-media-loop}\n\t */\n\t'loop',\n\t\n\t/**\n\t * Set the value of `playbackRate` on the media element. `playbackRate` indicates\n\t * the rate at which the media should play back. Examples:\n\t *   - if playbackRate is set to 2, media will play twice as fast.\n\t *   - if playbackRate is set to 0.5, media will play half as fast.\n\t *\n\t * @method Html5#setPlaybackRate\n\t * @return {number}\n\t *         The value of `playbackRate` from the media element. A number indicating\n\t *         the current playback speed of the media, where 1 is normal speed.\n\t *\n\t * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-playbackrate}\n\t */\n\t'playbackRate'].forEach(function (prop) {\n\t  Html5.prototype['set' + (0, _toTitleCase2['default'])(prop)] = function (v) {\n\t    this.el_[prop] = v;\n\t  };\n\t});\n\t\n\t// wrap native functions with a function\n\t[\n\t/**\n\t * A wrapper around the media elements `pause` function. This will call the `HTML5`\n\t * media elements `pause` function.\n\t *\n\t * @method Html5#pause\n\t * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-pause}\n\t */\n\t'pause',\n\t\n\t/**\n\t * A wrapper around the media elements `load` function. This will call the `HTML5`s\n\t * media element `load` function.\n\t *\n\t * @method Html5#load\n\t * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-load}\n\t */\n\t'load'].forEach(function (prop) {\n\t  Html5.prototype[prop] = function () {\n\t    return this.el_[prop]();\n\t  };\n\t});\n\t\n\t_tech2['default'].withSourceHandlers(Html5);\n\t\n\t/**\n\t * Native source handler for Html5, simply passes the source to the media element.\n\t *\n\t * @proprety {Tech~SourceObject} source\n\t *        The source object\n\t *\n\t * @proprety {Html5} tech\n\t *        The instance of the HTML5 tech.\n\t */\n\tHtml5.nativeSourceHandler = {};\n\t\n\t/**\n\t * Check if the media element can play the given mime type.\n\t *\n\t * @param {string} type\n\t *        The mimetype to check\n\t *\n\t * @return {string}\n\t *         'probably', 'maybe', or '' (empty string)\n\t */\n\tHtml5.nativeSourceHandler.canPlayType = function (type) {\n\t  // IE9 on Windows 7 without MediaPlayer throws an error here\n\t  // https://github.com/videojs/video.js/issues/519\n\t  try {\n\t    return Html5.TEST_VID.canPlayType(type);\n\t  } catch (e) {\n\t    return '';\n\t  }\n\t};\n\t\n\t/**\n\t * Check if the media element can handle a source natively.\n\t *\n\t * @param {Tech~SourceObject} source\n\t *         The source object\n\t *\n\t * @param {Object} [options]\n\t *         Options to be passed to the tech.\n\t *\n\t * @return {string}\n\t *         'probably', 'maybe', or '' (empty string).\n\t */\n\tHtml5.nativeSourceHandler.canHandleSource = function (source, options) {\n\t\n\t  // If a type was provided we should rely on that\n\t  if (source.type) {\n\t    return Html5.nativeSourceHandler.canPlayType(source.type);\n\t\n\t    // If no type, fall back to checking 'video/[EXTENSION]'\n\t  } else if (source.src) {\n\t    var ext = Url.getFileExtension(source.src);\n\t\n\t    return Html5.nativeSourceHandler.canPlayType('video/' + ext);\n\t  }\n\t\n\t  return '';\n\t};\n\t\n\t/**\n\t * Pass the source to the native media element.\n\t *\n\t * @param {Tech~SourceObject} source\n\t *        The source object\n\t *\n\t * @param {Html5} tech\n\t *        The instance of the Html5 tech\n\t *\n\t * @param {Object} [options]\n\t *        The options to pass to the source\n\t */\n\tHtml5.nativeSourceHandler.handleSource = function (source, tech, options) {\n\t  tech.setSrc(source.src);\n\t};\n\t\n\t/**\n\t * A noop for the native dispose function, as cleanup is not needed.\n\t */\n\tHtml5.nativeSourceHandler.dispose = function () {};\n\t\n\t// Register the native source handler\n\tHtml5.registerSourceHandler(Html5.nativeSourceHandler);\n\t\n\t_component2['default'].registerComponent('Html5', Html5);\n\t_tech2['default'].registerTech('Html5', Html5);\n\texports['default'] = Html5;\n\n\n/***/ },\n/* 109 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\texports.__esModule = true;\n\t\n\tvar _player = __webpack_require__(21);\n\t\n\tvar _player2 = _interopRequireDefault(_player);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\t\n\t/**\n\t * The method for registering a video.js plugin. {@link videojs:videojs.registerPlugin].\n\t *\n\t * @param {string} name\n\t *        The name of the plugin that is being registered\n\t *\n\t * @param {plugins:PluginFn} init\n\t *        The function that gets run when a `Player` initializes.\n\t */\n\tvar plugin = function plugin(name, init) {\n\t  _player2['default'].prototype[name] = init;\n\t}; /**\n\t    * @file plugins.js\n\t    * @module plugins\n\t    */\n\texports['default'] = plugin;\n\n\n/***/ },\n/* 110 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\texports.__esModule = true;\n\t\n\tvar _trackEnums = __webpack_require__(33);\n\t\n\tvar _track = __webpack_require__(34);\n\t\n\tvar _track2 = _interopRequireDefault(_track);\n\t\n\tvar _mergeOptions = __webpack_require__(19);\n\t\n\tvar _mergeOptions2 = _interopRequireDefault(_mergeOptions);\n\t\n\tvar _browser = __webpack_require__(11);\n\t\n\tvar browser = _interopRequireWildcard(_browser);\n\t\n\tfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj['default'] = obj; return newObj; } }\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\t/**\n\t * A representation of a single `AudioTrack`. If it is part of an {@link AudioTrackList}\n\t * only one `AudioTrack` in the list will be enabled at a time.\n\t *\n\t * @see [Spec]{@link https://html.spec.whatwg.org/multipage/embedded-content.html#audiotrack}\n\t * @extends Track\n\t */\n\tvar AudioTrack = function (_Track) {\n\t  _inherits(AudioTrack, _Track);\n\t\n\t  /**\n\t   * Create an instance of this class.\n\t   *\n\t   * @param {Object} [options={}]\n\t   *        Object of option names and values\n\t   *\n\t   * @param {AudioTrack~Kind} [options.kind='']\n\t   *        A valid audio track kind\n\t   *\n\t   * @param {string} [options.id='vjs_track_' + Guid.newGUID()]\n\t   *        A unique id for this AudioTrack.\n\t   *\n\t   * @param {string} [options.label='']\n\t   *        The menu label for this track.\n\t   *\n\t   * @param {string} [options.language='']\n\t   *        A valid two character language code.\n\t   *\n\t   * @param {boolean} [options.enabled]\n\t   *        If this track is the one that is currently playing. If this track is part of\n\t   *        an {@link AudioTrackList}, only one {@link AudioTrack} will be enabled.\n\t   */\n\t  function AudioTrack() {\n\t    var _this, _ret;\n\t\n\t    var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\t\n\t    _classCallCheck(this, AudioTrack);\n\t\n\t    var settings = (0, _mergeOptions2['default'])(options, {\n\t      kind: _trackEnums.AudioTrackKind[options.kind] || ''\n\t    });\n\t    // on IE8 this will be a document element\n\t    // for every other browser this will be a normal object\n\t    var track = (_this = _possibleConstructorReturn(this, _Track.call(this, settings)), _this);\n\t    var enabled = false;\n\t\n\t    if (browser.IS_IE8) {\n\t      for (var prop in AudioTrack.prototype) {\n\t        if (prop !== 'constructor') {\n\t          track[prop] = AudioTrack.prototype[prop];\n\t        }\n\t      }\n\t    }\n\t    /**\n\t     * @member {boolean} enabled\n\t     *         If this `AudioTrack` is enabled or not. When setting this will\n\t     *         fire {@link AudioTrack#enabledchange} if the state of enabled is changed.\n\t     *\n\t     * @fires VideoTrack#selectedchange\n\t     */\n\t    Object.defineProperty(track, 'enabled', {\n\t      get: function get() {\n\t        return enabled;\n\t      },\n\t      set: function set(newEnabled) {\n\t        // an invalid or unchanged value\n\t        if (typeof newEnabled !== 'boolean' || newEnabled === enabled) {\n\t          return;\n\t        }\n\t        enabled = newEnabled;\n\t\n\t        /**\n\t         * An event that fires when enabled changes on this track. This allows\n\t         * the AudioTrackList that holds this track to act accordingly.\n\t         *\n\t         * > Note: This is not part of the spec! Native tracks will do\n\t         *         this internally without an event.\n\t         *\n\t         * @event AudioTrack#enabledchange\n\t         * @type {EventTarget~Event}\n\t         */\n\t        this.trigger('enabledchange');\n\t      }\n\t    });\n\t\n\t    // if the user sets this track to selected then\n\t    // set selected to that true value otherwise\n\t    // we keep it false\n\t    if (settings.enabled) {\n\t      track.enabled = settings.enabled;\n\t    }\n\t    track.loaded_ = true;\n\t\n\t    return _ret = track, _possibleConstructorReturn(_this, _ret);\n\t  }\n\t\n\t  return AudioTrack;\n\t}(_track2['default']);\n\t\n\texports['default'] = AudioTrack;\n\n\n/***/ },\n/* 111 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\texports.__esModule = true;\n\t\n\tvar _trackEnums = __webpack_require__(33);\n\t\n\tvar _track = __webpack_require__(34);\n\t\n\tvar _track2 = _interopRequireDefault(_track);\n\t\n\tvar _mergeOptions = __webpack_require__(19);\n\t\n\tvar _mergeOptions2 = _interopRequireDefault(_mergeOptions);\n\t\n\tvar _browser = __webpack_require__(11);\n\t\n\tvar browser = _interopRequireWildcard(_browser);\n\t\n\tfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj['default'] = obj; return newObj; } }\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\t/**\n\t * A representation of a single `VideoTrack`.\n\t *\n\t * @see [Spec]{@link https://html.spec.whatwg.org/multipage/embedded-content.html#videotrack}\n\t * @extends Track\n\t */\n\tvar VideoTrack = function (_Track) {\n\t  _inherits(VideoTrack, _Track);\n\t\n\t  /**\n\t   * Create an instance of this class.\n\t   *\n\t   * @param {Object} [options={}]\n\t   *        Object of option names and values\n\t   *\n\t   * @param {string} [options.kind='']\n\t   *        A valid {@link VideoTrack~Kind}\n\t   *\n\t   * @param {string} [options.id='vjs_track_' + Guid.newGUID()]\n\t   *        A unique id for this AudioTrack.\n\t   *\n\t   * @param {string} [options.label='']\n\t   *        The menu label for this track.\n\t   *\n\t   * @param {string} [options.language='']\n\t   *        A valid two character language code.\n\t   *\n\t   * @param {boolean} [options.selected]\n\t   *        If this track is the one that is currently playing.\n\t   */\n\t  function VideoTrack() {\n\t    var _this, _ret;\n\t\n\t    var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\t\n\t    _classCallCheck(this, VideoTrack);\n\t\n\t    var settings = (0, _mergeOptions2['default'])(options, {\n\t      kind: _trackEnums.VideoTrackKind[options.kind] || ''\n\t    });\n\t\n\t    // on IE8 this will be a document element\n\t    // for every other browser this will be a normal object\n\t    var track = (_this = _possibleConstructorReturn(this, _Track.call(this, settings)), _this);\n\t    var selected = false;\n\t\n\t    if (browser.IS_IE8) {\n\t      for (var prop in VideoTrack.prototype) {\n\t        if (prop !== 'constructor') {\n\t          track[prop] = VideoTrack.prototype[prop];\n\t        }\n\t      }\n\t    }\n\t\n\t    /**\n\t     * @member {boolean} selected\n\t     *         If this `VideoTrack` is selected or not. When setting this will\n\t     *         fire {@link VideoTrack#selectedchange} if the state of selected changed.\n\t     *\n\t     * @fires VideoTrack#selectedchange\n\t     */\n\t    Object.defineProperty(track, 'selected', {\n\t      get: function get() {\n\t        return selected;\n\t      },\n\t      set: function set(newSelected) {\n\t        // an invalid or unchanged value\n\t        if (typeof newSelected !== 'boolean' || newSelected === selected) {\n\t          return;\n\t        }\n\t        selected = newSelected;\n\t\n\t        /**\n\t         * An event that fires when selected changes on this track. This allows\n\t         * the VideoTrackList that holds this track to act accordingly.\n\t         *\n\t         * > Note: This is not part of the spec! Native tracks will do\n\t         *         this internally without an event.\n\t         *\n\t         * @event VideoTrack#selectedchange\n\t         * @type {EventTarget~Event}\n\t         */\n\t        this.trigger('selectedchange');\n\t      }\n\t    });\n\t\n\t    // if the user sets this track to selected then\n\t    // set selected to that true value otherwise\n\t    // we keep it false\n\t    if (settings.selected) {\n\t      track.selected = settings.selected;\n\t    }\n\t\n\t    return _ret = track, _possibleConstructorReturn(_this, _ret);\n\t  }\n\t\n\t  return VideoTrack;\n\t}(_track2['default']);\n\t\n\texports['default'] = VideoTrack;\n\n\n/***/ },\n/* 112 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\texports.__esModule = true;\n\t\n\tvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\t\n\tvar _log = __webpack_require__(10);\n\t\n\tvar _log2 = _interopRequireDefault(_log);\n\t\n\tvar _obj = __webpack_require__(12);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\t\n\t/**\n\t * @file extend.js\n\t * @module extend\n\t */\n\t\n\t/**\n\t * A combination of node inherits and babel's inherits (after transpile).\n\t * Both work the same but node adds `super_` to the subClass\n\t * and Bable adds the superClass as __proto__. Both seem useful.\n\t *\n\t * @param {Object} subClass\n\t *        The class to inherit to\n\t *\n\t * @param {Object} superClass\n\t *        The class to inherit from\n\t *\n\t * @private\n\t */\n\tvar _inherits = function _inherits(subClass, superClass) {\n\t  if (typeof superClass !== 'function' && superClass !== null) {\n\t    throw new TypeError('Super expression must either be null or a function, not ' + (typeof superClass === 'undefined' ? 'undefined' : _typeof(superClass)));\n\t  }\n\t\n\t  subClass.prototype = Object.create(superClass && superClass.prototype, {\n\t    constructor: {\n\t      value: subClass,\n\t      enumerable: false,\n\t      writable: true,\n\t      configurable: true\n\t    }\n\t  });\n\t\n\t  if (superClass) {\n\t    // node\n\t    subClass.super_ = superClass;\n\t  }\n\t};\n\t\n\t/**\n\t * Function for subclassing using the same inheritance that\n\t * videojs uses internally\n\t *\n\t * @param {Object} superClass\n\t *        The class to inherit from\n\t *\n\t * @param {Object} [subClassMethods={}]\n\t *        The class to inherit to\n\t *\n\t * @return {Object}\n\t *         The new object with subClassMethods that inherited superClass.\n\t */\n\tvar extendFn = function extendFn(superClass) {\n\t  var subClassMethods = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\t\n\t  var subClass = function subClass() {\n\t    superClass.apply(this, arguments);\n\t  };\n\t\n\t  var methods = {};\n\t\n\t  if ((0, _obj.isObject)(subClassMethods)) {\n\t    if (typeof subClassMethods.init === 'function') {\n\t      _log2['default'].warn('Constructor logic via init() is deprecated; please use constructor() instead.');\n\t      subClassMethods.constructor = subClassMethods.init;\n\t    }\n\t    if (subClassMethods.constructor !== Object.prototype.constructor) {\n\t      subClass = subClassMethods.constructor;\n\t    }\n\t    methods = subClassMethods;\n\t  } else if (typeof subClassMethods === 'function') {\n\t    subClass = subClassMethods;\n\t  }\n\t\n\t  _inherits(subClass, superClass);\n\t\n\t  // Extend subObj's prototype with functions and other properties from props\n\t  for (var name in methods) {\n\t    if (methods.hasOwnProperty(name)) {\n\t      subClass.prototype[name] = methods[name];\n\t    }\n\t  }\n\t\n\t  return subClass;\n\t};\n\t\n\texports['default'] = extendFn;\n\n\n/***/ },\n/* 113 */\n/***/ function(module, exports) {\n\n\t/**\n\t * Basic Ad support plugin for video.js.\n\t *\n\t * Common code to support ad integrations.\n\t */\n\t(function(window, videojs, undefined) {\n\t'use strict';\n\t\n\tvar\n\t\n\t  VIDEO_EVENTS = videojs.getComponent('Html5').Events,\n\t\n\t  /**\n\t   * If ads are not playing, pauses the player at the next available\n\t   * opportunity. Has no effect if ads have started. This function is necessary\n\t   * because pausing a video element while processing a `play` event on iOS can\n\t   * cause the video element to continuously toggle between playing and paused\n\t   * states.\n\t   *\n\t   * @param {object} player The video player\n\t   */\n\t  cancelContentPlay = function(player) {\n\t    if (player.ads.cancelPlayTimeout) {\n\t      // another cancellation is already in flight, so do nothing\n\t      return;\n\t    }\n\t    player.ads.cancelPlayTimeout = window.setTimeout(function() {\n\t      // deregister the cancel timeout so subsequent cancels are scheduled\n\t      player.ads.cancelPlayTimeout = null;\n\t\n\t      // pause playback so ads can be handled.\n\t      if (!player.paused()) {\n\t        player.pause();\n\t      }\n\t\n\t      // add a contentplayback handler to resume playback when ads finish.\n\t      player.one('contentplayback', function() {\n\t        if (player.paused()) {\n\t          player.play();\n\t        }\n\t      });\n\t    }, 1);\n\t  },\n\t\n\t  /**\n\t   * Returns an object that captures the portions of player state relevant to\n\t   * video playback. The result of this function can be passed to\n\t   * restorePlayerSnapshot with a player to return the player to the state it\n\t   * was in when this function was invoked.\n\t   * @param {object} player The videojs player object\n\t   */\n\t  getPlayerSnapshot = function(player) {\n\t    var\n\t      tech = player.$('.vjs-tech'),\n\t      tracks = player.remoteTextTracks ? player.remoteTextTracks() : [],\n\t      track,\n\t      i,\n\t      suppressedTracks = [],\n\t      snapshot = {\n\t        ended: player.ended(),\n\t        currentSrc: player.currentSrc(),\n\t        src: player.src(),\n\t        currentTime: player.currentTime(),\n\t        type: player.currentType()\n\t      };\n\t\n\t    if (tech) {\n\t      snapshot.nativePoster = tech.poster;\n\t      snapshot.style = tech.getAttribute('style');\n\t    }\n\t\n\t    i = tracks.length;\n\t    while (i--) {\n\t      track = tracks[i];\n\t      suppressedTracks.push({\n\t        track: track,\n\t        mode: track.mode\n\t      });\n\t      track.mode = 'disabled';\n\t    }\n\t    snapshot.suppressedTracks = suppressedTracks;\n\t\n\t    return snapshot;\n\t  },\n\t\n\t  /**\n\t   * Attempts to modify the specified player so that its state is equivalent to\n\t   * the state of the snapshot.\n\t   * @param {object} snapshot - the player state to apply\n\t   */\n\t  restorePlayerSnapshot = function(player, snapshot) {\n\t    var\n\t      // the playback tech\n\t      tech = player.$('.vjs-tech'),\n\t\n\t      // the number of remaining attempts to restore the snapshot\n\t      attempts = 20,\n\t\n\t      suppressedTracks = snapshot.suppressedTracks,\n\t      trackSnapshot,\n\t      restoreTracks =  function() {\n\t        var i = suppressedTracks.length;\n\t        while (i--) {\n\t          trackSnapshot = suppressedTracks[i];\n\t          trackSnapshot.track.mode = trackSnapshot.mode;\n\t        }\n\t      },\n\t\n\t      // finish restoring the playback state\n\t      resume = function() {\n\t        var\n\t          ended = false,\n\t          updateEnded = function() {\n\t            ended = true;\n\t          };\n\t        player.currentTime(snapshot.currentTime);\n\t\n\t        // Resume playback if this wasn't a postroll\n\t        if (!snapshot.ended) {\n\t          player.play();\n\t        } else {\n\t          // On iOS 8.1, the \"ended\" event will not fire if you seek\n\t          // directly to the end of a video. To make that behavior\n\t          // consistent with the standard, fire a synthetic event if\n\t          // \"ended\" does not fire within 250ms. Note that the ended\n\t          // event should occur whether the browser actually has data\n\t          // available for that position\n\t          // (https://html.spec.whatwg.org/multipage/embedded-content.html#seeking),\n\t          // so it should not be necessary to wait for the seek to\n\t          // indicate completion.\n\t          player.ads.resumeEndedTimeout = window.setTimeout(function() {\n\t            if (!ended) {\n\t              player.play();\n\t            }\n\t            player.off('ended', updateEnded);\n\t            player.ads.resumeEndedTimeout = null;\n\t          }, 250);\n\t          player.on('ended', updateEnded);\n\t\n\t          // Need to clear the resume/ended timeout on dispose. If it fires\n\t          // after a player is disposed, an error will be thrown!\n\t          player.on('dispose', function() {\n\t            window.clearTimeout(player.ads.resumeEndedTimeout);\n\t          });\n\t        }\n\t      },\n\t\n\t      // determine if the video element has loaded enough of the snapshot source\n\t      // to be ready to apply the rest of the state\n\t      tryToResume = function() {\n\t\n\t        // tryToResume can either have been called through the `contentcanplay`\n\t        // event or fired through setTimeout.\n\t        // When tryToResume is called, we should make sure to clear out the other\n\t        // way it could've been called by removing the listener and clearing out\n\t        // the timeout.\n\t        player.off('contentcanplay', tryToResume);\n\t        if (player.ads.tryToResumeTimeout_) {\n\t          player.clearTimeout(player.ads.tryToResumeTimeout_);\n\t          player.ads.tryToResumeTimeout_ = null;\n\t        }\n\t\n\t        // Tech may have changed depending on the differences in sources of the\n\t        // original video and that of the ad\n\t        tech = player.el().querySelector('.vjs-tech');\n\t\n\t        if (tech.readyState > 1) {\n\t          // some browsers and media aren't \"seekable\".\n\t          // readyState greater than 1 allows for seeking without exceptions\n\t          return resume();\n\t        }\n\t\n\t        if (tech.seekable === undefined) {\n\t          // if the tech doesn't expose the seekable time ranges, try to\n\t          // resume playback immediately\n\t          return resume();\n\t        }\n\t\n\t        if (tech.seekable.length > 0) {\n\t          // if some period of the video is seekable, resume playback\n\t          return resume();\n\t        }\n\t\n\t        // delay a bit and then check again unless we're out of attempts\n\t        if (attempts--) {\n\t          window.setTimeout(tryToResume, 50);\n\t        } else {\n\t          (function() {\n\t            try {\n\t              resume();\n\t            } catch(e) {\n\t              videojs.log.warn('Failed to resume the content after an advertisement', e);\n\t            }\n\t          })();\n\t        }\n\t      },\n\t\n\t      // whether the video element has been modified since the\n\t      // snapshot was taken\n\t      srcChanged;\n\t\n\t    if (snapshot.nativePoster) {\n\t      tech.poster = snapshot.nativePoster;\n\t    }\n\t\n\t    if ('style' in snapshot) {\n\t      // overwrite all css style properties to restore state precisely\n\t      tech.setAttribute('style', snapshot.style || '');\n\t    }\n\t\n\t    // Determine whether the player needs to be restored to its state\n\t    // before ad playback began. With a custom ad display or burned-in\n\t    // ads, the content player state hasn't been modified and so no\n\t    // restoration is required\n\t\n\t    srcChanged = player.src() !== snapshot.src || player.currentSrc() !== snapshot.currentSrc;\n\t\n\t    if (srcChanged) {\n\t      // on ios7, fiddling with textTracks too early will cause safari to crash\n\t      player.one('contentloadedmetadata', restoreTracks);\n\t\n\t      // if the src changed for ad playback, reset it\n\t      player.src({ src: snapshot.currentSrc, type: snapshot.type });\n\t      // safari requires a call to `load` to pick up a changed source\n\t      player.load();\n\t      // and then resume from the snapshots time once the original src has loaded\n\t      // in some browsers (firefox) `canplay` may not fire correctly.\n\t      // Reace the `canplay` event with a timeout.\n\t      player.one('contentcanplay', tryToResume);\n\t      player.ads.tryToResumeTimeout_ = player.setTimeout(tryToResume, 2000);\n\t    } else if (!player.ended() || !snapshot.ended) {\n\t      // if we didn't change the src, just restore the tracks\n\t      restoreTracks();\n\t      // the src didn't change and this wasn't a postroll\n\t      // just resume playback at the current time.\n\t      player.play();\n\t    }\n\t  },\n\t\n\t  /**\n\t   * Remove the poster attribute from the video element tech, if present. When\n\t   * reusing a video element for multiple videos, the poster image will briefly\n\t   * reappear while the new source loads. Removing the attribute ahead of time\n\t   * prevents the poster from showing up between videos.\n\t   * @param {object} player The videojs player object\n\t   */\n\t  removeNativePoster = function(player) {\n\t    var tech = player.$('.vjs-tech');\n\t    if (tech) {\n\t      tech.removeAttribute('poster');\n\t    }\n\t  },\n\t\n\t  // ---------------------------------------------------------------------------\n\t  // Ad Framework\n\t  // ---------------------------------------------------------------------------\n\t\n\t  // default framework settings\n\t  defaults = {\n\t    // maximum amount of time in ms to wait to receive `adsready` from the ad\n\t    // implementation after play has been requested. Ad implementations are\n\t    // expected to load any dynamic libraries and make any requests to determine\n\t    // ad policies for a video during this time.\n\t    timeout: 5000,\n\t\n\t    // maximum amount of time in ms to wait for the ad implementation to start\n\t    // linear ad mode after `readyforpreroll` has fired. This is in addition to\n\t    // the standard timeout.\n\t    prerollTimeout: 100,\n\t\n\t    // maximum amount of time in ms to wait for the ad implementation to start\n\t    // linear ad mode after `contentended` has fired.\n\t    postrollTimeout: 100,\n\t\n\t    // when truthy, instructs the plugin to output additional information about\n\t    // plugin state to the video.js log. On most devices, the video.js log is\n\t    // the same as the developer console.\n\t    debug: false\n\t  },\n\t\n\t  adFramework = function(options) {\n\t    var player = this;\n\t    var settings = videojs.mergeOptions(defaults, options);\n\t    var fsmHandler;\n\t\n\t    // prefix all video element events during ad playback\n\t    // if the video element emits ad-related events directly,\n\t    // plugins that aren't ad-aware will break. prefixing allows\n\t    // plugins that wish to handle ad events to do so while\n\t    // avoiding the complexity for common usage\n\t    (function() {\n\t      var videoEvents = VIDEO_EVENTS.concat([\n\t        'firstplay',\n\t        'loadedalldata'\n\t      ]);\n\t\n\t      var returnTrue = function() { return true; };\n\t\n\t      var triggerEvent = function(type, event) {\n\t        // pretend we called stopImmediatePropagation because we want the native\n\t        // element events to continue propagating\n\t        event.isImmediatePropagationStopped = returnTrue;\n\t        event.cancelBubble = true;\n\t        event.isPropagationStopped = returnTrue;\n\t        player.trigger({\n\t          type: type + event.type,\n\t          state: player.ads.state,\n\t          originalEvent: event\n\t        });\n\t      };\n\t\n\t      player.on(videoEvents, function redispatch(event) {\n\t        if (player.ads.state === 'ad-playback') {\n\t          triggerEvent('ad', event);\n\t        } else if (player.ads.state === 'content-playback' && event.type === 'ended') {\n\t          triggerEvent('content', event);\n\t        } else if (player.ads.state === 'content-resuming') {\n\t          if (player.ads.snapshot) {\n\t            // the video element was recycled for ad playback\n\t            if (player.currentSrc() !== player.ads.snapshot.currentSrc) {\n\t              if (event.type === 'loadstart') {\n\t                return;\n\t              }\n\t              return triggerEvent('content', event);\n\t\n\t            // we ended playing postrolls and the video itself\n\t            // the content src is back in place\n\t            } else if (player.ads.snapshot.ended) {\n\t              if ((event.type === 'pause' ||\n\t                  event.type === 'ended')) {\n\t                // after loading a video, the natural state is to not be started\n\t                // in this case, it actually has, so, we do it manually\n\t                player.addClass('vjs-has-started');\n\t                // let `pause` and `ended` events through, naturally\n\t                return;\n\t              }\n\t              // prefix all other events in content-resuming with `content`\n\t              return triggerEvent('content', event);\n\t            }\n\t          }\n\t          if (event.type !== 'playing') {\n\t            triggerEvent('content', event);\n\t          }\n\t        }\n\t      });\n\t    })();\n\t\n\t    // We now auto-play when an ad gets loaded if we're playing ads in the same video element as the content.\n\t    // The problem is that in IE11, we cannot play in addurationchange but in iOS8, we cannot play from adcanplay.\n\t    // This will allow ad-integrations from needing to do this themselves.\n\t    player.on(['addurationchange', 'adcanplay'], function() {\n\t      if (player.currentSrc() === player.ads.snapshot.currentSrc) {\n\t        return;\n\t      }\n\t\n\t      player.play();\n\t    });\n\t\n\t    // replace the ad initializer with the ad namespace\n\t    player.ads = {\n\t      state: 'content-set',\n\t\n\t      // Call this when an ad response has been received and there are\n\t      // linear ads ready to be played.\n\t      startLinearAdMode: function() {\n\t        if (player.ads.state === 'preroll?' ||\n\t            player.ads.state === 'content-playback' ||\n\t            player.ads.state === 'postroll?') {\n\t          player.trigger('adstart');\n\t        }\n\t      },\n\t\n\t      // Call this when a linear ad pod has finished playing.\n\t      endLinearAdMode: function() {\n\t        if (player.ads.state === 'ad-playback') {\n\t          player.trigger('adend');\n\t        }\n\t      },\n\t\n\t      // Call this when an ad response has been received but there are no\n\t      // linear ads to be played (i.e. no ads available, or overlays).\n\t      // This has no effect if we are already in a linear ad mode.  Always\n\t      // use endLinearAdMode() to exit from linear ad-playback state.\n\t      skipLinearAdMode: function() {\n\t        if (player.ads.state !== 'ad-playback') {\n\t          player.trigger('adskip');\n\t        }\n\t      }\n\t    };\n\t\n\t    fsmHandler = function(event) {\n\t      // Ad Playback State Machine\n\t      var fsm = {\n\t        'content-set': {\n\t          events: {\n\t            'adscanceled': function() {\n\t              this.state = 'content-playback';\n\t            },\n\t            'adsready': function() {\n\t              this.state = 'ads-ready';\n\t            },\n\t            'play': function() {\n\t              this.state = 'ads-ready?';\n\t              cancelContentPlay(player);\n\t              // remove the poster so it doesn't flash between videos\n\t              removeNativePoster(player);\n\t            },\n\t            'adserror': function() {\n\t              this.state = 'content-playback';\n\t            },\n\t            'adskip': function() {\n\t              this.state = 'content-playback';\n\t            }\n\t          }\n\t        },\n\t        'ads-ready': {\n\t          events: {\n\t            'play': function() {\n\t              this.state = 'preroll?';\n\t              cancelContentPlay(player);\n\t            },\n\t            'adskip': function() {\n\t              this.state = 'content-playback';\n\t            },\n\t            'adserror': function() {\n\t              this.state = 'content-playback';\n\t            }\n\t          }\n\t        },\n\t        'preroll?': {\n\t          enter: function() {\n\t            // change class to show that we're waiting on ads\n\t            player.addClass('vjs-ad-loading');\n\t            // schedule an adtimeout event to fire if we waited too long\n\t            player.ads.adTimeoutTimeout = window.setTimeout(function() {\n\t              player.trigger('adtimeout');\n\t            }, settings.prerollTimeout);\n\t            // signal to ad plugin that it's their opportunity to play a preroll\n\t            player.trigger('readyforpreroll');\n\t          },\n\t          leave: function() {\n\t            window.clearTimeout(player.ads.adTimeoutTimeout);\n\t            player.removeClass('vjs-ad-loading');\n\t          },\n\t          events: {\n\t            'play': function() {\n\t              cancelContentPlay(player);\n\t            },\n\t            'adstart': function() {\n\t              this.state = 'ad-playback';\n\t            },\n\t            'adskip': function() {\n\t              this.state = 'content-playback';\n\t            },\n\t            'adtimeout': function() {\n\t              this.state = 'content-playback';\n\t            },\n\t            'adserror': function() {\n\t              this.state = 'content-playback';\n\t            }\n\t          }\n\t        },\n\t        'ads-ready?': {\n\t          enter: function() {\n\t            player.addClass('vjs-ad-loading');\n\t            player.ads.adTimeoutTimeout = window.setTimeout(function() {\n\t              player.trigger('adtimeout');\n\t            }, settings.timeout);\n\t          },\n\t          leave: function() {\n\t            window.clearTimeout(player.ads.adTimeoutTimeout);\n\t            player.removeClass('vjs-ad-loading');\n\t          },\n\t          events: {\n\t            'play': function() {\n\t              cancelContentPlay(player);\n\t            },\n\t            'adscanceled': function() {\n\t              this.state = 'content-playback';\n\t            },\n\t            'adsready': function() {\n\t              this.state = 'preroll?';\n\t            },\n\t            'adskip': function() {\n\t              this.state = 'content-playback';\n\t            },\n\t            'adtimeout': function() {\n\t              this.state = 'content-playback';\n\t            },\n\t            'adserror': function() {\n\t              this.state = 'content-playback';\n\t            }\n\t          }\n\t        },\n\t        'ad-playback': {\n\t          enter: function() {\n\t            // capture current player state snapshot (playing, currentTime, src)\n\t            this.snapshot = getPlayerSnapshot(player);\n\t\n\t            // add css to the element to indicate and ad is playing.\n\t            player.addClass('vjs-ad-playing');\n\t\n\t            // remove the poster so it doesn't flash between ads\n\t            removeNativePoster(player);\n\t\n\t            // We no longer need to supress play events once an ad is playing.\n\t            // Clear it if we were.\n\t            if (player.ads.cancelPlayTimeout) {\n\t              window.clearTimeout(player.ads.cancelPlayTimeout);\n\t              player.ads.cancelPlayTimeout = null;\n\t            }\n\t          },\n\t          leave: function() {\n\t            player.removeClass('vjs-ad-playing');\n\t            restorePlayerSnapshot(player, this.snapshot);\n\t            // trigger 'adend' as a consistent notification\n\t            // event that we're exiting ad-playback.\n\t            if (player.ads.triggerevent !== 'adend') {\n\t              player.trigger('adend');\n\t            }\n\t          },\n\t          events: {\n\t            'adend': function() {\n\t              this.state = 'content-resuming';\n\t            },\n\t            'adserror': function() {\n\t              this.state = 'content-resuming';\n\t            }\n\t          }\n\t        },\n\t        'content-resuming': {\n\t          enter: function() {\n\t            if (this.snapshot.ended) {\n\t              window.clearTimeout(player.ads._fireEndedTimeout);\n\t              // in some cases, ads are played in a swf or another video element\n\t              // so we do not get an ended event in this state automatically.\n\t              // If we don't get an ended event we can use, we need to trigger\n\t              // one ourselves or else we won't actually ever end the current video.\n\t              player.ads._fireEndedTimeout = window.setTimeout(function() {\n\t                player.trigger('ended');\n\t              }, 1000);\n\t            }\n\t          },\n\t          leave: function() {\n\t            window.clearTimeout(player.ads._fireEndedTimeout);\n\t          },\n\t          events: {\n\t            'contentupdate': function() {\n\t              this.state = 'content-set';\n\t            },\n\t            contentresumed: function() {\n\t              this.state = 'content-playback';\n\t            },\n\t            'playing': function() {\n\t              this.state = 'content-playback';\n\t            },\n\t            'ended': function() {\n\t              this.state = 'content-playback';\n\t            }\n\t          }\n\t        },\n\t        'postroll?': {\n\t          enter: function() {\n\t            this.snapshot = getPlayerSnapshot(player);\n\t\n\t            player.addClass('vjs-ad-loading');\n\t\n\t            player.ads.adTimeoutTimeout = window.setTimeout(function() {\n\t              player.trigger('adtimeout');\n\t            }, settings.postrollTimeout);\n\t          },\n\t          leave: function() {\n\t            window.clearTimeout(player.ads.adTimeoutTimeout);\n\t            player.removeClass('vjs-ad-loading');\n\t          },\n\t          events: {\n\t            'adstart': function() {\n\t              this.state = 'ad-playback';\n\t            },\n\t            'adskip': function() {\n\t              this.state = 'content-resuming';\n\t              window.setTimeout(function() {\n\t                player.trigger('ended');\n\t              }, 1);\n\t            },\n\t            'adtimeout': function() {\n\t              this.state = 'content-resuming';\n\t              window.setTimeout(function() {\n\t                player.trigger('ended');\n\t              }, 1);\n\t            },\n\t            'adserror': function() {\n\t              this.state = 'content-resuming';\n\t              window.setTimeout(function() {\n\t                player.trigger('ended');\n\t              }, 1);\n\t            }\n\t          }\n\t        },\n\t        'content-playback': {\n\t          enter: function() {\n\t            // make sure that any cancelPlayTimeout is cleared\n\t            if (player.ads.cancelPlayTimeout) {\n\t              window.clearTimeout(player.ads.cancelPlayTimeout);\n\t              player.ads.cancelPlayTimeout = null;\n\t            }\n\t            // this will cause content to start if a user initiated\n\t            // 'play' event was canceled earlier.\n\t            player.trigger({\n\t              type: 'contentplayback',\n\t              triggerevent: player.ads.triggerevent\n\t            });\n\t          },\n\t          events: {\n\t            // in the case of a timeout, adsready might come in late.\n\t            'adsready': function() {\n\t              player.trigger('readyforpreroll');\n\t            },\n\t            'adstart': function() {\n\t              this.state = 'ad-playback';\n\t            },\n\t            'contentupdate': function() {\n\t              if (player.paused()) {\n\t                this.state = 'content-set';\n\t              } else {\n\t                this.state = 'ads-ready?';\n\t              }\n\t            },\n\t            'contentended': function() {\n\t              this.state = 'postroll?';\n\t            }\n\t          }\n\t        }\n\t      };\n\t\n\t      (function(state) {\n\t        var noop = function() {};\n\t\n\t        // process the current event with a noop default handler\n\t        ((fsm[state].events || {})[event.type] || noop).apply(player.ads);\n\t\n\t        // check whether the state has changed\n\t        if (state !== player.ads.state) {\n\t\n\t          // record the event that caused the state transition\n\t          player.ads.triggerevent = event.type;\n\t\n\t          // execute leave/enter callbacks if present\n\t          (fsm[state].leave || noop).apply(player.ads);\n\t          (fsm[player.ads.state].enter || noop).apply(player.ads);\n\t\n\t          // output debug logging\n\t          if (settings.debug) {\n\t            videojs.log('ads', player.ads.triggerevent + ' triggered: ' + state + ' -> ' + player.ads.state);\n\t          }\n\t        }\n\t\n\t      })(player.ads.state);\n\t\n\t    };\n\t\n\t    // register for the events we're interested in\n\t    player.on(VIDEO_EVENTS.concat([\n\t      // events emitted by ad plugin\n\t      'adtimeout',\n\t      'contentupdate',\n\t      'contentplaying',\n\t      'contentended',\n\t      'contentresumed',\n\t\n\t      // events emitted by third party ad implementors\n\t      'adsready',\n\t      'adserror',\n\t      'adscanceled',\n\t      'adstart',  // startLinearAdMode()\n\t      'adend',    // endLinearAdMode()\n\t      'adskip'    // skipLinearAdMode()\n\t    ]), fsmHandler);\n\t\n\t    // keep track of the current content source\n\t    // if you want to change the src of the video without triggering\n\t    // the ad workflow to restart, you can update this variable before\n\t    // modifying the player's source\n\t    player.ads.contentSrc = player.currentSrc();\n\t\n\t    // implement 'contentupdate' event.\n\t    (function(){\n\t      var\n\t        // check if a new src has been set, if so, trigger contentupdate\n\t        checkSrc = function() {\n\t          var src;\n\t          if (player.ads.state !== 'ad-playback') {\n\t            src = player.currentSrc();\n\t            if (src !== player.ads.contentSrc) {\n\t              player.trigger({\n\t                type: 'contentupdate',\n\t                oldValue: player.ads.contentSrc,\n\t                newValue: src\n\t              });\n\t              player.ads.contentSrc = src;\n\t            }\n\t          }\n\t        };\n\t      // loadstart reliably indicates a new src has been set\n\t      player.on('loadstart', checkSrc);\n\t      // check immediately in case we missed the loadstart\n\t      window.setTimeout(checkSrc, 1);\n\t    })();\n\t\n\t    // kick off the fsm\n\t    if (!player.paused()) {\n\t      // simulate a play event if we're autoplaying\n\t      fsmHandler({type:'play'});\n\t    }\n\t\n\t  };\n\t\n\t  // register the ad plugin framework\n\t  videojs.plugin('ads', adFramework);\n\t\n\t})(window, videojs);\n\n\n/***/ },\n/* 114 */\n/***/ function(module, exports) {\n\n\t/**\n\t * Copyright 2014 Google Inc.\n\t *\n\t * Licensed under the Apache License, Version 2.0 (the \"License\");\n\t * you may not use this file except in compliance with the License.\n\t * You may obtain a copy of the License at\n\t *\n\t *     http://www.apache.org/licenses/LICENSE-2.0\n\t *\n\t * Unless required by applicable law or agreed to in writing, software\n\t * distributed under the License is distributed on an \"AS IS\" BASIS,\n\t * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n\t * See the License for the specific language governing permissions and\n\t * limitations under the License.\n\t *\n\t * IMA SDK integration plugin for Video.js. For more information see\n\t * https://www.github.com/googleads/videojs-ima\n\t */\n\t\n\t(function(vjs) {\n\t  'use strict';\n\t  var extend = function(obj) {\n\t    var arg;\n\t    var index;\n\t    var key;\n\t    for (index = 1; index < arguments.length; index++) {\n\t      arg = arguments[index];\n\t      for (key in arg) {\n\t        if (arg.hasOwnProperty(key)) {\n\t          obj[key] = arg[key];\n\t        }\n\t      }\n\t    }\n\t    return obj;\n\t  };\n\t\n\t  var ima_defaults = {\n\t    debug: false,\n\t    timeout: 5000,\n\t    prerollTimeout: 100,\n\t    adLabel: 'Advertisement',\n\t    showControlsForJSAds: true\n\t  };\n\t\n\t  var init = function(options, readyCallback) {\n\t    this.ima = new ImaPlugin(this, options, readyCallback);\n\t  };\n\t\n\t  var ImaPlugin = function(player, options, readyCallback) {\n\t    this.player = player;\n\t\n\t    /**\n\t     * Assigns the unique id and class names to the given element as well as the style class\n\t     * @param element\n\t     * @param controlName\n\t     * @private\n\t     */\n\t    var assignControlAttributes_ = function(element, controlName) {\n\t      element.id = this.controlPrefix + controlName;\n\t      element.className = this.controlPrefix + controlName + ' ' + controlName;\n\t    }.bind(this);\n\t\n\t    /**\n\t     * Returns a regular expression to test a string for the given className\n\t     * @param className\n\t     * @returns {RegExp}\n\t     * @private\n\t     */\n\t    var getClassRegexp_ = function(className){\n\t      // Matches on\n\t      // (beginning of string OR NOT word char)\n\t      // classname\n\t      // (negative lookahead word char OR end of string)\n\t      return new RegExp('(^|[^A-Za-z-])' + className + '((?![A-Za-z-])|$)', 'gi');\n\t    };\n\t\n\t    /**\n\t     * Adds a class to the given element if it doesn't already have the class\n\t     * @param element\n\t     * @param classToAdd\n\t     * @private\n\t     */\n\t    var addClass_ = function(element, classToAdd){\n\t      if(getClassRegexp_(classToAdd).test(element.className)){\n\t        return element;\n\t      }\n\t\n\t      return element.className = element.className.trim() + ' ' + classToAdd;\n\t    };\n\t\n\t    /**\n\t     * Removes a class from the given element if it has the given class\n\t     * @param element\n\t     * @param classToRemove\n\t     * @private\n\t     */\n\t    var removeClass_ = function(element, classToRemove){\n\t      var classRegexp = getClassRegexp_(classToRemove);\n\t\n\t      if(!classRegexp.test(element.className)){\n\t        return element;\n\t      }\n\t\n\t      return element.className = element.className.trim().replace(classRegexp, '');\n\t    };\n\t\n\t    /**\n\t     * Creates the ad container passed to the IMA SDK.\n\t     * @private\n\t     */\n\t    var createAdContainer_ = function() {\n\t      // The adContainerDiv is the DOM of the element that will house\n\t      // the ads and ad controls.\n\t      this.vjsControls = this.player.getChild('controlBar');\n\t      this.adContainerDiv =\n\t          this.vjsControls.el().parentNode.appendChild(\n\t              document.createElement('div'));\n\t      assignControlAttributes_(this.adContainerDiv, 'ima-ad-container');\n\t      this.adContainerDiv.style.position = \"absolute\";\n\t      this.adContainerDiv.style.zIndex = 1111;\n\t      this.adContainerDiv.addEventListener(\n\t          'mouseenter',\n\t          showAdControls_,\n\t          false);\n\t      this.adContainerDiv.addEventListener(\n\t          'mouseleave',\n\t          hideAdControls_,\n\t          false);\n\t      createControls_();\n\t      this.adDisplayContainer =\n\t          new google.ima.AdDisplayContainer(this.adContainerDiv, this.contentPlayer);\n\t    }.bind(this);\n\t\n\t    /**\n\t     * Creates the controls for the ad.\n\t     * @private\n\t     */\n\t    var createControls_ = function() {\n\t      this.controlsDiv = document.createElement('div');\n\t      assignControlAttributes_(this.controlsDiv, 'ima-controls-div');\n\t      this.controlsDiv.style.width = '100%';\n\t      this.countdownDiv = document.createElement('div');\n\t      assignControlAttributes_(this.countdownDiv, 'ima-countdown-div');\n\t      this.countdownDiv.innerHTML = this.settings.adLabel;\n\t      this.countdownDiv.style.display = this.showCountdown ? 'block' : 'none';\n\t      this.seekBarDiv = document.createElement('div');\n\t      assignControlAttributes_(this.seekBarDiv, 'ima-seek-bar-div');\n\t      this.seekBarDiv.style.width = '100%';\n\t      this.progressDiv = document.createElement('div');\n\t      assignControlAttributes_(this.progressDiv, 'ima-progress-div');\n\t      this.playPauseDiv = document.createElement('div');\n\t      assignControlAttributes_(this.playPauseDiv, 'ima-play-pause-div');\n\t      addClass_(this.playPauseDiv, 'ima-playing');\n\t      this.playPauseDiv.addEventListener(\n\t          'click',\n\t          onAdPlayPauseClick_,\n\t          false);\n\t      this.muteDiv = document.createElement('div');\n\t      assignControlAttributes_(this.muteDiv, 'ima-mute-div');\n\t      addClass_(this.muteDiv, 'ima-non-muted');\n\t      this.muteDiv.addEventListener(\n\t          'click',\n\t          onAdMuteClick_,\n\t          false);\n\t      this.sliderDiv = document.createElement('div');\n\t      assignControlAttributes_(this.sliderDiv, 'ima-slider-div');\n\t      this.sliderDiv.addEventListener(\n\t          'mousedown',\n\t          onAdVolumeSliderMouseDown_,\n\t          false);\n\t      this.sliderLevelDiv = document.createElement('div');\n\t      assignControlAttributes_(this.sliderLevelDiv, 'ima-slider-level-div');\n\t      this.fullscreenDiv = document.createElement('div');\n\t      assignControlAttributes_(this.fullscreenDiv, 'ima-fullscreen-div');\n\t      addClass_(this.fullscreenDiv, 'ima-non-fullscreen');\n\t      this.fullscreenDiv.addEventListener(\n\t          'click',\n\t          onAdFullscreenClick_,\n\t          false);\n\t      this.adContainerDiv.appendChild(this.controlsDiv);\n\t      this.controlsDiv.appendChild(this.countdownDiv);\n\t      this.controlsDiv.appendChild(this.seekBarDiv);\n\t      this.controlsDiv.appendChild(this.playPauseDiv);\n\t      this.controlsDiv.appendChild(this.muteDiv);\n\t      this.controlsDiv.appendChild(this.sliderDiv);\n\t      this.controlsDiv.appendChild(this.fullscreenDiv);\n\t      this.seekBarDiv.appendChild(this.progressDiv);\n\t      this.sliderDiv.appendChild(this.sliderLevelDiv);\n\t    }.bind(this);\n\t\n\t    /**\n\t     * Initializes the AdDisplayContainer. On mobile, this must be done as a\n\t     * result of user action.\n\t     */\n\t    this.initializeAdDisplayContainer = function() {\n\t      this.adDisplayContainerInitialized = true;\n\t      this.adDisplayContainer.initialize();\n\t    }.bind(this);\n\t\n\t    /**\n\t     * Creates the AdsRequest and request ads through the AdsLoader.\n\t     */\n\t    this.requestAds = function() {\n\t      if (!this.adDisplayContainerInitialized) {\n\t        this.adDisplayContainer.initialize();\n\t      }\n\t      var adsRequest = new google.ima.AdsRequest();\n\t      if (this.settings.adTagUrl) {\n\t        adsRequest.adTagUrl = this.settings.adTagUrl;\n\t      } else {\n\t        adsRequest.adsResponse = this.settings.adsResponse;\n\t      }\n\t      if (this.settings.forceNonLinearFullSlot) {\n\t        adsRequest.forceNonLinearFullSlot = true;\n\t      }\n\t\n\t      adsRequest.linearAdSlotWidth = this.getPlayerWidth();\n\t      adsRequest.linearAdSlotHeight = this.getPlayerHeight();\n\t      adsRequest.nonLinearAdSlotWidth =\n\t          this.settings.nonLinearWidth || this.getPlayerWidth();\n\t      adsRequest.nonLinearAdSlotHeight =\n\t          this.settings.nonLinearHeight || (this.getPlayerHeight() / 3);\n\t\n\t      this.adsLoader.requestAds(adsRequest);\n\t    }.bind(this);\n\t\n\t    /**\n\t     * Listener for the ADS_MANAGER_LOADED event. Creates the AdsManager,\n\t     * sets up event listeners, and triggers the 'adsready' event for\n\t     * videojs-ads-contrib.\n\t     * @private\n\t     */\n\t    var onAdsManagerLoaded_ = function(adsManagerLoadedEvent) {\n\t      this.adsManager = adsManagerLoadedEvent.getAdsManager(\n\t          this.contentPlayheadTracker, this.adsRenderingSettings);\n\t\n\t      this.adsManager.addEventListener(\n\t          google.ima.AdErrorEvent.Type.AD_ERROR,\n\t          onAdError_);\n\t      this.adsManager.addEventListener(\n\t          google.ima.AdEvent.Type.AD_BREAK_READY,\n\t          onAdBreakReady_);\n\t      this.adsManager.addEventListener(\n\t          google.ima.AdEvent.Type.CONTENT_PAUSE_REQUESTED,\n\t          this.onContentPauseRequested_);\n\t      this.adsManager.addEventListener(\n\t          google.ima.AdEvent.Type.CONTENT_RESUME_REQUESTED,\n\t          this.onContentResumeRequested_);\n\t      this.adsManager.addEventListener(\n\t          google.ima.AdEvent.Type.ALL_ADS_COMPLETED,\n\t          onAllAdsCompleted_);\n\t\n\t      this.adsManager.addEventListener(\n\t          google.ima.AdEvent.Type.LOADED,\n\t          onAdLoaded_);\n\t      this.adsManager.addEventListener(\n\t          google.ima.AdEvent.Type.STARTED,\n\t          onAdStarted_);\n\t      this.adsManager.addEventListener(\n\t          google.ima.AdEvent.Type.CLICK,\n\t          onAdPlayPauseClick_);\n\t      this.adsManager.addEventListener(\n\t          google.ima.AdEvent.Type.COMPLETE,\n\t          this.onAdComplete_);\n\t      this.adsManager.addEventListener(\n\t          google.ima.AdEvent.Type.SKIPPED,\n\t          this.onAdComplete_);\n\t\n\t      if (!this.autoPlayAdBreaks) {\n\t        try {\n\t          var initWidth = this.getPlayerWidth();\n\t          var initHeight = this.getPlayerHeight();\n\t          this.adsManagerDimensions.width = initWidth;\n\t          this.adsManagerDimensions.height = initHeight;\n\t          this.adsManager.init(\n\t              initWidth,\n\t              initHeight,\n\t              google.ima.ViewMode.NORMAL);\n\t          this.adsManager.setVolume(this.player.muted() ? 0 : this.player.volume());\n\t        } catch (adError) {\n\t          onAdError_(adError);\n\t        }\n\t      }\n\t\n\t      this.player.trigger('adsready');\n\t    }.bind(this);\n\t\n\t    /**\n\t     * DEPRECATED: Use startFromReadyCallback\n\t     * Start ad playback, or content video playback in the absence of a\n\t     * pre-roll.\n\t     */\n\t    this.start = function() {\n\t      window.console.log(\n\t          'WARNING: player.ima.start is deprecated. Use ' +\n\t              'player.ima.startFromReadyCallback instead.');\n\t    };\n\t\n\t    /**\n\t     * Start ad playback, or content video playback in the absence of a\n\t     * pre-roll. **NOTE**: This method only needs to be called if you provide\n\t     * your own readyCallback as the second parameter to player.ima(). If you\n\t     * only provide options and do not provide your own readyCallback,\n\t     * **DO NOT** call this method. If you do provide your own readyCallback,\n\t     * you should call this method in the last line of that callback. For more\n\t     * info, see this method's usage in our advanced and playlist examples.\n\t     */\n\t    this.startFromReadyCallback = function() {\n\t      if (this.autoPlayAdBreaks) {\n\t        try {\n\t          this.adsManager.init(\n\t              this.getPlayerWidth(),\n\t              this.getPlayerHeight(),\n\t              google.ima.ViewMode.NORMAL);\n\t          this.adsManager.setVolume(this.player.muted() ? 0 : this.player.volume());\n\t          this.adsManager.start();\n\t        } catch (adError) {\n\t          onAdError_(adError);\n\t        }\n\t      }\n\t    }.bind(this);\n\t\n\t    /**\n\t     * Listener for errors fired by the AdsLoader.\n\t     * @param {google.ima.AdErrorEvent} event The error event thrown by the\n\t     *     AdsLoader. See\n\t     *     https://developers.google.com/interactive-media-ads/docs/sdks/html5/v3/apis#ima.AdError.Type\n\t     * @private\n\t     */\n\t    var onAdsLoaderError_ = function(event) {\n\t      window.console.log('AdsLoader error: ' + event.getError());\n\t      this.adContainerDiv.style.display = 'none';\n\t      if (this.adsManager) {\n\t        this.adsManager.destroy();\n\t      }\n\t      this.player.trigger({type: 'adserror', data: { AdError: event.getError(), AdErrorEvent: event }});\n\t    }.bind(this);\n\t\n\t    /**\n\t     * Listener for errors thrown by the AdsManager.\n\t     * @param {google.ima.AdErrorEvent} adErrorEvent The error event thrown by\n\t     *     the AdsManager.\n\t     * @private\n\t     */\n\t    var onAdError_ = function(adErrorEvent) {\n\t      var errorMessage = adErrorEvent.getError !== undefined ? adErrorEvent.getError() : adErrorEvent.stack;\n\t      window.console.log('Ad error: ' + errorMessage);\n\t      this.vjsControls.show();\n\t      this.adsManager.destroy();\n\t      this.adContainerDiv.style.display = 'none';\n\t      this.player.trigger({ type: 'adserror', data: { AdError: errorMessage, AdErrorEvent: adErrorEvent }});\n\t    }.bind(this);\n\t\n\t    /**\n\t     * Listener for AD_BREAK_READY. Passes event on to publisher's listener.\n\t     * @param {google.ima.AdEvent} adEvent AdEvent thrown by the AdsManager.\n\t     * @private\n\t     */\n\t    var onAdBreakReady_ = function(adEvent) {\n\t      this.adBreakReadyListener(adEvent);\n\t    }.bind(this);\n\t\n\t    /**\n\t     * Called by publishers in manual ad break playback mode to start an ad\n\t     * break.\n\t     */\n\t    this.playAdBreak = function() {\n\t      if (!this.autoPlayAdBreaks) {\n\t        this.adsManager.start();\n\t      }\n\t    }.bind(this);\n\t\n\t    /**\n\t     * Pauses the content video and displays the ad container so ads can play.\n\t     * @param {google.ima.AdEvent} adEvent The AdEvent thrown by the AdsManager.\n\t     * @private\n\t     */\n\t    this.onContentPauseRequested_ = function(adEvent) {\n\t      this.adsActive = true;\n\t      this.adPlaying = true;\n\t      this.contentSource = this.player.currentSrc();\n\t      this.player.off('ended', this.localContentEndedListener);\n\t      if (adEvent.getAd().getAdPodInfo().getPodIndex() != -1) {\n\t        // Skip this call for post-roll ads\n\t        this.player.ads.startLinearAdMode();\n\t      }\n\t      this.adContainerDiv.style.display = 'block';\n\t\n\t      var contentType = adEvent.getAd().getContentType();\n\t      if ((contentType === 'application/javascript') && !this.settings.showControlsForJSAds) {\n\t        this.controlsDiv.style.display = 'none';\n\t      } else {\n\t        this.controlsDiv.style.display = 'block';\n\t      }\n\t\n\t      this.vjsControls.hide();\n\t      showPlayButton();\n\t      this.player.pause();\n\t    }.bind(this);\n\t\n\t    /**\n\t     * Resumes content video and hides the ad container.\n\t     * @param {google.ima.AdEvent} adEvent The AdEvent thrown by the AdsManager.\n\t     * @private\n\t     */\n\t    this.onContentResumeRequested_ = function(adEvent) {\n\t      this.adsActive = false;\n\t      this.adPlaying = false;\n\t      this.player.on('ended', this.localContentEndedListener);\n\t      if (this.currentAd == null || // hide for post-roll only playlist\n\t          this.currentAd.isLinear()) { // don't hide for non-linear ads\n\t        this.adContainerDiv.style.display = 'none';\n\t      }\n\t      this.vjsControls.show();\n\t      if (!this.currentAd) {\n\t        // Something went wrong playing the ad\n\t        this.player.ads.endLinearAdMode();\n\t      } else if (!this.contentComplete &&\n\t          // Don't exit linear mode after post-roll or content will auto-replay\n\t          this.currentAd.getAdPodInfo().getPodIndex() != -1 ) {\n\t        this.player.ads.endLinearAdMode();\n\t      }\n\t      this.countdownDiv.innerHTML = '';\n\t    }.bind(this);\n\t\n\t    /**\n\t     * Records that ads have completed and calls contentAndAdsEndedListeners\n\t     * if content is also complete.\n\t     * @param {google.ima.AdEvent} adEvent The AdEvent thrown by the AdsManager.\n\t     * @private\n\t     */\n\t    var onAllAdsCompleted_ = function(adEvent) {\n\t      this.allAdsCompleted = true;\n\t      this.adContainerDiv.style.display = 'none';\n\t      if (this.contentComplete == true) {\n\t        if (this.contentPlayer.src != this.contentSource) {\n\t          this.player.src(this.contentSource);\n\t        }\n\t        for (var index in this.contentAndAdsEndedListeners) {\n\t          this.contentAndAdsEndedListeners[index]();\n\t        }\n\t      }\n\t    }.bind(this);\n\t\n\t    /**\n\t     * Starts the content video when a non-linear ad is loaded.\n\t     * @param {google.ima.AdEvent} adEvent The AdEvent thrown by the AdsManager.\n\t     * @private\n\t     */\n\t   var onAdLoaded_ = function(adEvent) {\n\t      if (!adEvent.getAd().isLinear()) {\n\t        this.player.play();\n\t      }\n\t    }.bind(this);\n\t\n\t    /**\n\t     * Starts the interval timer to check the current ad time when an ad starts\n\t     * playing.\n\t     * @param {google.ima.AdEvent} adEvent The AdEvent thrown by the AdsManager.\n\t     * @private\n\t     */\n\t    var onAdStarted_ = function(adEvent) {\n\t      this.currentAd = adEvent.getAd();\n\t      if (this.currentAd.isLinear()) {\n\t        this.adTrackingTimer = setInterval(\n\t            onAdPlayheadTrackerInterval_, 250);\n\t        // Don't bump container when controls are shown\n\t        removeClass_(this.adContainerDiv, 'bumpable-ima-ad-container');\n\t      } else {\n\t        // Bump container when controls are shown\n\t       addClass_(this.adContainerDiv, 'bumpable-ima-ad-container');\n\t      }\n\t    }.bind(this);\n\t\n\t    /**\n\t     * Clears the interval timer for current ad time when an ad completes.\n\t     * @param {google.ima.AdEvent} adEvent The AdEvent thrown by the AdsManager.\n\t     * @private\n\t     */\n\t    this.onAdComplete_ = function(adEvent) {\n\t      if (this.currentAd.isLinear()) {\n\t        clearInterval(this.adTrackingTimer);\n\t      }\n\t    }.bind(this);\n\t\n\t    /**\n\t     * Gets the current time and duration of the ad and calls the method to\n\t     * update the ad UI.\n\t     * @private\n\t     */\n\t    var onAdPlayheadTrackerInterval_ = function() {\n\t      var remainingTime = this.adsManager.getRemainingTime();\n\t      var duration =  this.currentAd.getDuration();\n\t      var currentTime = duration - remainingTime;\n\t      currentTime = currentTime > 0 ? currentTime : 0;\n\t      var isPod = false;\n\t      var totalAds = 0;\n\t      var adPosition;\n\t      if (this.currentAd.getAdPodInfo()) {\n\t        isPod = true;\n\t        adPosition = this.currentAd.getAdPodInfo().getAdPosition();\n\t        totalAds = this.currentAd.getAdPodInfo().getTotalAds();\n\t      }\n\t\n\t      // Update countdown timer data\n\t      var remainingMinutes = Math.floor(remainingTime / 60);\n\t      var remainingSeconds = Math.floor(remainingTime % 60);\n\t      if (remainingSeconds.toString().length < 2) {\n\t        remainingSeconds = '0' + remainingSeconds;\n\t      }\n\t      var podCount = ': ';\n\t      if (isPod && (totalAds > 1)) {\n\t        podCount = ' (' + adPosition + ' of ' + totalAds + '): ';\n\t      }\n\t      this.countdownDiv.innerHTML =\n\t          this.settings.adLabel + podCount +\n\t          remainingMinutes + ':' + remainingSeconds;\n\t\n\t      // Update UI\n\t      var playProgressRatio = currentTime / duration;\n\t      var playProgressPercent = playProgressRatio * 100;\n\t      this.progressDiv.style.width = playProgressPercent + '%';\n\t    }.bind(this);\n\t\n\t    this.getPlayerWidth = function() {\n\t      var retVal = parseInt(getComputedStyle(this.player.el()).width, 10) ||\n\t          this.player.width();\n\t      return retVal;\n\t    }.bind(this);\n\t\n\t    this.getPlayerHeight = function() {\n\t      var retVal = parseInt(getComputedStyle(this.player.el()).height, 10) ||\n\t          this.player.height();\n\t      return retVal;\n\t    }.bind(this);\n\t\n\t    /**\n\t     * Hides the ad controls on mouseout.\n\t     * @private\n\t     */\n\t    var hideAdControls_ = function() {\n\t      this.controlsDiv.style.height = '14px';\n\t      this.playPauseDiv.style.display = 'none';\n\t      this.muteDiv.style.display = 'none';\n\t      this.sliderDiv.style.display = 'none';\n\t      this.fullscreenDiv.style.display = 'none';\n\t    }.bind(this);\n\t\n\t    /**\n\t     * Shows ad controls on mouseover.\n\t     * @private\n\t     */\n\t    var showAdControls_ = function() {\n\t      this.controlsDiv.style.height = '37px';\n\t      this.playPauseDiv.style.display = 'block';\n\t      this.muteDiv.style.display = 'block';\n\t      this.sliderDiv.style.display = 'block';\n\t      this.fullscreenDiv.style.display = 'block';\n\t    }.bind(this);\n\t\n\t    /**\n\t     * Show pause and hide play button\n\t     */\n\t    var showPauseButton = function() {\n\t      addClass_(this.playPauseDiv, 'ima-paused');\n\t      removeClass_(this.playPauseDiv, 'ima-playing');\n\t    }.bind(this);\n\t\n\t    /**\n\t     * Show play and hide pause button\n\t     */\n\t    var showPlayButton = function() {\n\t      addClass_(this.playPauseDiv, 'ima-playing');\n\t      removeClass_(this.playPauseDiv, 'ima-paused');\n\t    }.bind(this);\n\t\n\t    /**\n\t     * Listener for clicks on the play/pause button during ad playback.\n\t     * @private\n\t     */\n\t    var onAdPlayPauseClick_ = function() {\n\t      if (this.adPlaying) {\n\t        showPauseButton();\n\t        this.adsManager.pause();\n\t        this.adPlaying = false;\n\t      } else {\n\t        showPlayButton();\n\t        this.adsManager.resume();\n\t        this.adPlaying = true;\n\t      }\n\t    }.bind(this);\n\t\n\t    /**\n\t     * Listener for clicks on the mute button during ad playback.\n\t     * @private\n\t     */\n\t    var onAdMuteClick_ = function() {\n\t      if (this.adMuted) {\n\t        addClass_(this.muteDiv, 'ima-non-muted');\n\t        removeClass_(this.muteDiv, 'ima-muted');\n\t        this.adsManager.setVolume(1);\n\t        // Bubble down to content player\n\t        this.player.muted(false);\n\t        this.adMuted = false;\n\t        this.sliderLevelDiv.style.width = this.player.volume() * 100 + \"%\";\n\t      } else {\n\t        addClass_(this.muteDiv, 'ima-muted');\n\t        removeClass_(this.muteDiv, 'ima-non-muted');\n\t        this.adsManager.setVolume(0);\n\t        // Bubble down to content player\n\t        this.player.muted(true);\n\t        this.adMuted = true;\n\t        this.sliderLevelDiv.style.width = \"0%\";\n\t      }\n\t    }.bind(this);\n\t\n\t    /* Listener for mouse down events during ad playback. Used for volume.\n\t     * @private\n\t     */\n\t    var onAdVolumeSliderMouseDown_ = function() {\n\t       document.addEventListener('mouseup', onMouseUp_, false);\n\t       document.addEventListener('mousemove', onMouseMove_, false);\n\t    };\n\t\n\t    /* Mouse movement listener used for volume slider.\n\t     * @private\n\t     */\n\t    var onMouseMove_ = function(event) {\n\t      setVolumeSlider_(event);\n\t    };\n\t\n\t    /* Mouse release listener used for volume slider.\n\t     * @private\n\t     */\n\t    var onMouseUp_ = function(event) {\n\t      setVolumeSlider_(event);\n\t      document.removeEventListener('mousemove', onMouseMove_);\n\t      document.removeEventListener('mouseup', onMouseUp_);\n\t    };\n\t\n\t    /* Utility function to set volume and associated UI\n\t     * @private\n\t     */\n\t    var setVolumeSlider_ = function(event) {\n\t      var percent =\n\t          (event.clientX - this.sliderDiv.getBoundingClientRect().left) /\n\t              this.sliderDiv.offsetWidth;\n\t      percent *= 100;\n\t      //Bounds value 0-100 if mouse is outside slider region.\n\t      percent = Math.min(Math.max(percent, 0), 100);\n\t      this.sliderLevelDiv.style.width = percent + \"%\";\n\t      this.player.volume(percent / 100); //0-1\n\t      this.adsManager.setVolume(percent / 100);\n\t      if (this.player.volume() == 0) {\n\t        addClass_(this.muteDiv, 'ima-muted');\n\t        removeClass_(this.muteDiv, 'ima-non-muted');\n\t        this.player.muted(true);\n\t        this.adMuted = true;\n\t      }\n\t      else\n\t      {\n\t        addClass_(this.muteDiv, 'ima-non-muted');\n\t        removeClass_(this.muteDiv, 'ima-muted');\n\t        this.player.muted(false);\n\t        this.adMuted = false;\n\t      }\n\t    }.bind(this);\n\t\n\t    /**\n\t     * Listener for clicks on the fullscreen button during ad playback.\n\t     * @private\n\t     */\n\t    var onAdFullscreenClick_ = function() {\n\t      if (this.player.isFullscreen()) {\n\t        this.player.exitFullscreen();\n\t      } else {\n\t        this.player.requestFullscreen();\n\t      }\n\t    }.bind(this);\n\t\n\t    /**\n\t     * Listens for the video.js player to change its fullscreen status. This\n\t     * keeps the fullscreen-ness of the AdContainer in sync with the player.\n\t     * @private\n\t     */\n\t    var onFullscreenChange_ = function() {\n\t      if (this.player.isFullscreen()) {\n\t        addClass_(this.fullscreenDiv, 'ima-fullscreen');\n\t        removeClass_(this.fullscreenDiv, 'ima-non-fullscreen');\n\t        if (this.adsManager) {\n\t          this.adsManager.resize(\n\t              window.screen.width,\n\t              window.screen.height,\n\t              google.ima.ViewMode.FULLSCREEN);\n\t        }\n\t      } else {\n\t        addClass_(this.fullscreenDiv, 'ima-non-fullscreen');\n\t        removeClass_(this.fullscreenDiv, 'ima-fullscreen');\n\t        if (this.adsManager) {\n\t          this.adsManager.resize(\n\t              this.getPlayerWidth(),\n\t              this.getPlayerHeight(),\n\t              google.ima.ViewMode.NORMAL);\n\t        }\n\t      }\n\t    }.bind(this);\n\t\n\t    /**\n\t     * Listens for the video.js player to change its volume. This keeps the ad\n\t     * volume in sync with the content volume if the volume of the player is\n\t     * changed while content is playing\n\t     * @private\n\t     */\n\t    var onVolumeChange_ = function() {\n\t      var newVolume = this.player.muted() ? 0 : this.player.volume();\n\t      if (this.adsManager) {\n\t        this.adsManager.setVolume(newVolume);\n\t      }\n\t      // Update UI\n\t      if (newVolume == 0) {\n\t        this.adMuted = true;\n\t        addClass_(this.muteDiv, 'ima-muted');\n\t        removeClass_(this.muteDiv, 'ima-non-muted');\n\t        this.sliderLevelDiv.style.width = '0%';\n\t      } else {\n\t        this.adMuted = false;\n\t        addClass_(this.muteDiv, 'ima-non-muted');\n\t        removeClass_(this.muteDiv, 'ima-muted');\n\t        this.sliderLevelDiv.style.width = newVolume * 100 + '%';\n\t      }\n\t    }.bind(this);\n\t\n\t    /**\n\t     * Seeks content to 00:00:00. This is used as an event handler for the\n\t     * loadedmetadata event, since seeking is not possible until that event has\n\t     * fired.\n\t     * @private\n\t     */\n\t    var seekContentToZero_ = function() {\n\t      this.player.off('loadedmetadata', seekContentToZero_);\n\t      this.player.currentTime(0);\n\t    }.bind(this);\n\t\n\t    /**\n\t     * Seeks content to 00:00:00 and starts playback. This is used as an event\n\t     * handler for the loadedmetadata event, since seeking is not possible until\n\t     * that event has fired.\n\t     * @private\n\t     */\n\t    var playContentFromZero_ = function() {\n\t      this.player.off('loadedmetadata', playContentFromZero_);\n\t      this.player.currentTime(0);\n\t      this.player.play();\n\t    }.bind(this);\n\t\n\t    /**\n\t     * Destroys the AdsManager, sets it to null, and calls contentComplete to\n\t     * reset correlators. Once this is done it requests ads again to keep the\n\t     * inventory available.\n\t     * @private\n\t     */\n\t    var resetIMA_ = function() {\n\t      this.adsActive = false;\n\t      this.adPlaying = false;\n\t      this.player.on('ended', this.localContentEndedListener);\n\t      if (this.currentAd && this.currentAd.isLinear()) {\n\t        this.adContainerDiv.style.display = 'none';\n\t      }\n\t      this.vjsControls.show();\n\t      this.player.ads.endLinearAdMode();\n\t      if (this.adTrackingTimer) {\n\t        // If this is called while an ad is playing, stop trying to get that\n\t        // ad's current time.\n\t        clearInterval(this.adTrackingTimer);\n\t      }\n\t      if (this.adsManager) {\n\t        this.adsManager.destroy();\n\t        this.adsManager = null;\n\t      }\n\t      if (this.adsLoader && !this.contentComplete) {\n\t        this.adsLoader.contentComplete();\n\t      }\n\t      this.contentComplete = false;\n\t      this.allAdsCompleted = false;\n\t    }.bind(this);\n\t\n\t    /**\n\t     * Ads an EventListener to the AdsManager. For a list of available events,\n\t     * see\n\t     * https://developers.google.com/interactive-media-ads/docs/sdks/html5/v3/apis#ima.AdEvent.Type\n\t     * @param {google.ima.AdEvent.Type} event The AdEvent.Type for which to listen.\n\t     * @param {function} callback The method to call when the event is fired.\n\t     */\n\t    this.addEventListener = function(event, callback) {\n\t      if (this.adsManager) {\n\t        this.adsManager.addEventListener(event, callback);\n\t      }\n\t    }.bind(this);\n\t\n\t    /**\n\t     * Returns the instance of the AdsManager.\n\t     * @return {google.ima.AdsManager} The AdsManager being used by the plugin.\n\t     */\n\t    this.getAdsManager = function() {\n\t      return this.adsManager;\n\t    }.bind(this);\n\t\n\t    /**\n\t     * DEPRECATED: Use setContentWithAdTag.\n\t     * Sets the content of the video player. You should use this method instead\n\t     * of setting the content src directly to ensure the proper ad tag is\n\t     * requested when the video content is loaded.\n\t     * @param {?string} contentSrc The URI for the content to be played. Leave\n\t     *     blank to use the existing content.\n\t     * @param {?string} adTag The ad tag to be requested when the content loads.\n\t     *     Leave blank to use the existing ad tag.\n\t     * @param {?boolean} playOnLoad True to play the content once it has loaded,\n\t     *     false to only load the content but not start playback.\n\t     */\n\t    this.setContent = function(contentSrc, adTag, playOnLoad) {\n\t      window.console.log(\n\t          'WARNING: player.ima.setContent is deprecated. Use ' +\n\t              'player.ima.setContentWithAdTag instead.');\n\t      this.setContentWithAdTag(contentSrc, adTag, playOnLoad);\n\t    }.bind(this);\n\t\n\t    /**\n\t     * Sets the content of the video player. You should use this method instead\n\t     * of setting the content src directly to ensure the proper ad tag is\n\t     * requested when the video content is loaded.\n\t     * @param {?string} contentSrc The URI for the content to be played. Leave\n\t     *     blank to use the existing content.\n\t     * @param {?string} adTag The ad tag to be requested when the content loads.\n\t     *     Leave blank to use the existing ad tag.\n\t     * @param {?boolean} playOnLoad True to play the content once it has loaded,\n\t     *     false to only load the content but not start playback.\n\t     */\n\t    this.setContentWithAdTag = function(contentSrc, adTag, playOnLoad) {\n\t      resetIMA_();\n\t      this.settings.adTagUrl = adTag ? adTag : this.settings.adTagUrl;\n\t      changeSource_(contentSrc, playOnLoad);\n\t    }.bind(this);\n\t\n\t    /**\n\t     * Sets the content of the video player. You should use this method instead\n\t     * of setting the content src directly to ensure the proper ads response is\n\t     * used when the video content is loaded.\n\t     * @param {?string} contentSrc The URI for the content to be played. Leave\n\t     *     blank to use the existing content.\n\t     * @param {?string} adsResponse The ads response to be requested when the\n\t     *     content loads. Leave blank to use the existing ads response.\n\t     * @param {?boolean} playOnLoad True to play the content once it has loaded,\n\t     *     false to only load the content but not start playback.\n\t     */\n\t    this.setContentWithAdsResponse = function(contentSrc, adsResponse, playOnLoad) {\n\t      resetIMA_();\n\t      this.settings.adsResponse = adsResponse ? adsResponse : this.settings.adsResponse;\n\t      changeSource_(contentSrc, playOnLoad);\n\t    }.bind(this);\n\t\n\t    /**\n\t     * Changes the player source.\n\t     * @param {?string} contentSrc The URI for the content to be played. Leave\n\t     *     blank to use the existing content.\n\t     * @param {?boolean} playOnLoad True to play the content once it has loaded,\n\t     *     false to only load the content but not start playback.\n\t     * @private\n\t     */\n\t    var changeSource_ = function(contentSrc, playOnLoad) {\n\t      // Only try to pause the player when initialised with a source already\n\t      if (!!this.player.currentSrc()) {\n\t        this.player.currentTime(0);\n\t        this.player.pause();\n\t      }\n\t      if (contentSrc) {\n\t        this.player.src(contentSrc);\n\t      }\n\t      if (playOnLoad) {\n\t        this.player.on('loadedmetadata', playContentFromZero_);\n\t      } else {\n\t        this.player.on('loadedmetadata', seekContentToZero_);\n\t      }\n\t    }.bind(this);\n\t\n\t    /**\n\t     * Adds a listener for the 'ended' event of the video player. This should be\n\t     * used instead of setting an 'ended' listener directly to ensure that the\n\t     * ima can do proper cleanup of the SDK before other event listeners\n\t     * are called.\n\t     * @param {function} listener The listener to be called when content completes.\n\t     */\n\t    this.addContentEndedListener = function(listener) {\n\t      this.contentEndedListeners.push(listener);\n\t    }.bind(this);\n\t\n\t    /**\n\t     * Adds a listener that will be called when content and all ads have\n\t     * finished playing.\n\t     * @param {function} listener The listener to be called when content and ads complete.\n\t     */\n\t    this.addContentAndAdsEndedListener = function(listener) {\n\t      this.contentAndAdsEndedListeners.push(listener);\n\t    }.bind(this);\n\t\n\t    /**\n\t     * Sets the listener to be called to trigger manual ad break playback.\n\t     * @param {function} listener The listener to be called to trigger manual ad break playback.\n\t     */\n\t    this.setAdBreakReadyListener = function(listener) {\n\t      this.adBreakReadyListener = listener;\n\t    }.bind(this);\n\t\n\t    /**\n\t     * Pauses the ad.\n\t     */\n\t    this.pauseAd = function() {\n\t      if (this.adsActive && this.adPlaying) {\n\t        showPauseButton();\n\t        this.adsManager.pause();\n\t        this.adPlaying = false;\n\t      }\n\t    }.bind(this);\n\t\n\t    /**\n\t     * Resumes the ad.\n\t     */\n\t    this.resumeAd = function() {\n\t      if (this.adsActive && !this.adPlaying) {\n\t        showPlayButton();\n\t        this.adsManager.resume();\n\t        this.adPlaying = true;\n\t      }\n\t    }.bind(this);\n\t\n\t    /**\n\t     * Set up intervals to check for seeking and update current video time.\n\t     * @private\n\t     */\n\t    var setUpPlayerIntervals_ = function() {\n\t      this.updateTimeIntervalHandle =\n\t          setInterval(updateCurrentTime_, this.seekCheckInterval);\n\t      this.seekCheckIntervalHandle =\n\t          setInterval(checkForSeeking_, this.seekCheckInterval);\n\t      this.resizeCheckIntervalHandle =\n\t          setInterval(checkForResize_, this.resizeCheckInterval);\n\t    }.bind(this);\n\t\n\t    /**\n\t     * Updates the current time of the video\n\t     * @private\n\t     */\n\t    var updateCurrentTime_ = function() {\n\t      if (!this.contentPlayheadTracker.seeking) {\n\t        this.contentPlayheadTracker.currentTime = this.player.currentTime();\n\t      }\n\t    }.bind(this);\n\t\n\t    /**\n\t     * Detects when the user is seeking through a video.\n\t     * This is used to prevent mid-rolls from playing while a user is seeking.\n\t     *\n\t     * There *is* a seeking property of the HTML5 video element, but it's not\n\t     * properly implemented on all platforms (e.g. mobile safari), so we have to\n\t     * check ourselves to be sure.\n\t     *\n\t     * @private\n\t     */\n\t    var checkForSeeking_ = function() {\n\t      var tempCurrentTime = this.player.currentTime();\n\t      var diff = (tempCurrentTime - this.contentPlayheadTracker.previousTime) * 1000;\n\t      if (Math.abs(diff) > this.seekCheckInterval + this.seekThreshold) {\n\t        this.contentPlayheadTracker.seeking = true;\n\t      } else {\n\t        this.contentPlayheadTracker.seeking = false;\n\t      }\n\t      this.contentPlayheadTracker.previousTime = this.player.currentTime();\n\t    }.bind(this);\n\t\n\t    /**\n\t     * Detects when the player is resized (for fluid support) and resizes the\n\t     * ads manager to match.\n\t     *\n\t     * @private\n\t     */\n\t    var checkForResize_ = function() {\n\t      var currentWidth = this.getPlayerWidth();\n\t      var currentHeight = this.getPlayerHeight();\n\t\n\t      if (this.adsManager && (currentWidth != this.adsManagerDimensions.width ||\n\t          currentHeight != this.adsManagerDimensions.height)) {\n\t        this.adsManagerDimensions.width = currentWidth;\n\t        this.adsManagerDimensions.height = currentHeight;\n\t        this.adsManager.resize(currentWidth, currentHeight, google.ima.ViewMode.NORMAL);\n\t      }\n\t    }.bind(this);\n\t\n\t    /**\n\t     * Changes the flag to show or hide the ad countdown timer.\n\t     *\n\t     * @param {boolean} showCountdownIn Show or hide the countdown timer.\n\t     */\n\t    this.setShowCountdown = function(showCountdownIn) {\n\t      this.showCountdown = showCountdownIn;\n\t      this.countdownDiv.style.display = this.showCountdown ? 'block' : 'none';\n\t    }.bind(this);\n\t\n\t    /**\n\t     * Current plugin version.\n\t     */\n\t    this.VERSION = '0.2.0';\n\t\n\t    /**\n\t     * Stores user-provided settings.\n\t     */\n\t    this.settings;\n\t\n\t    /**\n\t     * Used to prefix videojs ima\n\t     */\n\t    this.controlPrefix;\n\t\n\t    /**\n\t     * Video element playing content.\n\t     */\n\t    this.contentPlayer;\n\t\n\t    /**\n\t     * Boolean flag to show or hide the ad countdown timer.\n\t     */\n\t    this.showCountdown;\n\t\n\t    /**\n\t     * Boolena flag to enable manual ad break playback.\n\t     */\n\t    this.autoPlayAdBreaks;\n\t\n\t    /**\n\t     * Video.js control bar.\n\t     */\n\t    this.vjsControls;\n\t\n\t    /**\n\t     * Div used as an ad container.\n\t     */\n\t    this.adContainerDiv;\n\t\n\t    /**\n\t     * Div used to display ad controls.\n\t     */\n\t    this.controlsDiv;\n\t\n\t    /**\n\t     * Div used to display ad countdown timer.\n\t     */\n\t    this.countdownDiv;\n\t\n\t    /**\n\t     * Div used to display add seek bar.\n\t     */\n\t    this.seekBarDiv;\n\t\n\t    /**\n\t     * Div used to display ad progress (in seek bar).\n\t     */\n\t    this.progressDiv;\n\t\n\t    /**\n\t     * Div used to display ad play/pause button.\n\t     */\n\t    this.playPauseDiv;\n\t\n\t    /**\n\t     * Div used to display ad mute button.\n\t     */\n\t    this.muteDiv;\n\t\n\t    /**\n\t     * Div used by the volume slider.\n\t     */\n\t    this.sliderDiv;\n\t\n\t    /**\n\t     * Volume slider level visuals\n\t     */\n\t    this.sliderLevelDiv;\n\t\n\t    /**\n\t     * Div used to display ad fullscreen button.\n\t     */\n\t    this.fullscreenDiv;\n\t\n\t    /**\n\t     * IMA SDK AdDisplayContainer.\n\t     */\n\t    this.adDisplayContainer;\n\t\n\t    /**\n\t     * True if the AdDisplayContainer has been initialized. False otherwise.\n\t     */\n\t    this.adDisplayContainerInitialized = false;\n\t\n\t    /**\n\t     * IMA SDK AdsLoader\n\t     */\n\t    this.adsLoader;\n\t\n\t    /**\n\t     * IMA SDK AdsManager\n\t     */\n\t    this.adsManager;\n\t\n\t    /**\n\t     * IMA SDK AdsRenderingSettings.\n\t     */\n\t    this.adsRenderingSettings = null;\n\t\n\t    /**\n\t     * Ad tag URL. Should return VAST, VMAP, or ad rules.\n\t     */\n\t    this.adTagUrl;\n\t\n\t    /**\n\t     * VAST, VMAP, or ad rules response. Used in lieu of fetching a response\n\t     * from an ad tag URL.\n\t     */\n\t    this.adsResponse;\n\t\n\t    /**\n\t     * Current IMA SDK Ad.\n\t     */\n\t    this.currentAd;\n\t\n\t    /**\n\t     * Timer used to track content progress.\n\t     */\n\t    this.contentTrackingTimer;\n\t\n\t    /**\n\t     * Timer used to track ad progress.\n\t     */\n\t    this.adTrackingTimer;\n\t\n\t    /**\n\t     * True if ads are currently displayed, false otherwise.\n\t     * True regardless of ad pause state if an ad is currently being displayed.\n\t     */\n\t    this.adsActive = false;\n\t\n\t    /**\n\t     * True if ad is currently playing, false if ad is paused or ads are not\n\t     * currently displayed.\n\t     */\n\t    this.adPlaying = false;\n\t\n\t    /**\n\t     * True if the ad is muted, false otherwise.\n\t     */\n\t    this.adMuted = false;\n\t\n\t    /**\n\t     * True if our content video has completed, false otherwise.\n\t     */\n\t    this.contentComplete = false;\n\t\n\t    /**\n\t     * True if ALL_ADS_COMPLETED has fired, false until then.\n\t     */\n\t     this.allAdsCompleted = false;\n\t\n\t    /**\n\t     * Handle to interval that repeatedly updates current time.\n\t     */\n\t    this.updateTimeIntervalHandle;\n\t\n\t    /**\n\t     * Handle to interval that repeatedly checks for seeking.\n\t     */\n\t    this.seekCheckIntervalHandle;\n\t\n\t    /**\n\t     * Interval (ms) on which to check if the user is seeking through the\n\t     * content.\n\t     */\n\t    this.seekCheckInterval = 1000;\n\t\n\t    /**\n\t     * Handle to interval that repeatedly checks for player resize.\n\t     */\n\t    this.resizeCheckIntervalHandle;\n\t\n\t    /**\n\t     * Interval (ms) to check for player resize for fluid support.\n\t     */\n\t    this.resizeCheckInterval = 250;\n\t\n\t    /**\n\t     * Threshold by which to judge user seeking. We check every 1000 ms to see\n\t     * if the user is seeking. In order for us to decide that they are *not*\n\t     * seeking, the content video playhead must only change by 900-1100 ms\n\t     * between checks. Any greater change and we assume the user is seeking\n\t     * through the video.\n\t     */\n\t    this.seekThreshold = 100;\n\t\n\t    /**\n\t     * Stores data for the content playhead tracker.\n\t     */\n\t    this.contentPlayheadTracker = {\n\t      currentTime: 0,\n\t      previousTime: 0,\n\t      seeking: false,\n\t      duration: 0\n\t    };\n\t\n\t    /**\n\t     * Stores data for the ad playhead tracker.\n\t     */\n\t    this.adPlayheadTracker = {\n\t      currentTime: 0,\n\t      duration: 0,\n\t      isPod: false,\n\t      adPosition: 0,\n\t      totalAds: 0\n\t    };\n\t\n\t    /**\n\t     * Stores the dimensions for the ads manager.\n\t     */\n\t    this.adsManagerDimensions = {\n\t      width: 0,\n\t      height: 0\n\t    };\n\t\n\t    /**\n\t     * Content ended listeners passed by the publisher to the plugin. Publishers\n\t     * should allow the plugin to handle content ended to ensure proper support\n\t     * of custom ad playback.\n\t     */\n\t    this.contentEndedListeners = [];\n\t\n\t    /**\n\t     * Content and ads ended listeners passed by the publisher to the plugin.\n\t     * These will be called when the plugin detects that content *and all\n\t     * ads* have completed. This differs from the contentEndedListeners in that\n\t     * contentEndedListeners will fire between content ending and a post-roll\n\t     * playing, whereas the contentAndAdsEndedListeners will fire after the\n\t     * post-roll completes.\n\t     */\n\t    this.contentAndAdsEndedListeners = [];\n\t\n\t     /**\n\t      * Listener to be called to trigger manual ad break playback.\n\t      */\n\t    this.adBreakReadyListener = undefined;\n\t\n\t    /**\n\t     * Stores the content source so we can re-populate it manually after a\n\t     * post-roll on iOS.\n\t     */\n\t    this.contentSource = '';\n\t\n\t    /**\n\t     * Local content ended listener for contentComplete.\n\t     */\n\t    this.localContentEndedListener = function() {\n\t      if (this.adsLoader && !this.contentComplete) {\n\t        this.adsLoader.contentComplete();\n\t        this.contentComplete = true;\n\t      }\n\t      for (var index in this.contentEndedListeners) {\n\t        this.contentEndedListeners[index]();\n\t      }\n\t      if (this.allAdsCompleted) {\n\t        for (var index in this.contentAndAdsEndedListeners) {\n\t          this.contentAndAdsEndedListeners[index]();\n\t        }\n\t      }\n\t      clearInterval(this.updateTimeIntervalHandle);\n\t      clearInterval(this.seekCheckIntervalHandle);\n\t      clearInterval(this.resizeCheckIntervalHandle);\n\t      if(this.player.el()) {\n\t        this.player.one('play', setUpPlayerIntervals_);\n\t      }\n\t    }.bind(this);\n\t\n\t    this.playerDisposedListener = function(){\n\t      this.contentEndedListeners, this.contentAndAdsEndedListeners = [], [];\n\t      this.contentComplete = true;\n\t      this.player.off('ended', this.localContentEndedListener);\n\t\n\t      // Bug fix: https://github.com/googleads/videojs-ima/issues/306\n\t      if (this.player.ads.adTimeoutTimeout) {\n\t        clearTimeout(this.player.ads.adTimeoutTimeout);\n\t      }\n\t\n\t      var intervalsToClear = [this.updateTimeIntervalHandle, this.seekCheckIntervalHandle,\n\t        this.adTrackingTimer, this.resizeCheckIntervalHandle];\n\t      for (var index in intervalsToClear) {\n\t        var interval = intervalsToClear[index];\n\t        if (interval) {\n\t          clearInterval(interval);\n\t        }\n\t      }\n\t      if (this.adsManager) {\n\t        this.adsManager.destroy();\n\t        this.adsManager = null;\n\t      }\n\t    }.bind(this);\n\t\n\t    this.settings = extend({}, ima_defaults, options || {});\n\t\n\t    // Currently this isn't used but I can see it being needed in the future, so\n\t    // to avoid implementation problems with later updates I'm requiring it.\n\t    if (!this.settings['id']) {\n\t      window.console.log('Error: must provide id of video.js div');\n\t      return;\n\t    }\n\t\n\t    this.controlPrefix = (this.settings.id + '_') || '';\n\t\n\t    this.contentPlayer = document.getElementById(this.settings['id'] + '_html5_api');\n\t    // Default showing countdown timer to true.\n\t    this.showCountdown = true;\n\t    if (this.settings['showCountdown'] == false) {\n\t      this.showCountdown = false;\n\t    }\n\t\n\t    this.autoPlayAdBreaks = true;\n\t    if (this.settings['autoPlayAdBreaks'] == false) {\n\t      this.autoPlayAdBreaks = false;\n\t    }\n\t\n\t    player.one('play', setUpPlayerIntervals_);\n\t\n\t    player.on('ended', this.localContentEndedListener);\n\t    player.on('dispose', this.playerDisposedListener);\n\t\n\t    var contrib_ads_defaults = {\n\t      debug: this.settings.debug,\n\t      timeout: this.settings.timeout,\n\t      prerollTimeout: this.settings.prerollTimeout\n\t    };\n\t\n\t    var ads_plugin_settings =\n\t        extend({}, contrib_ads_defaults, options['contribAdsSettings'] || {});\n\t\n\t    player.ads(ads_plugin_settings);\n\t\n\t    this.adsRenderingSettings = new google.ima.AdsRenderingSettings();\n\t    this.adsRenderingSettings.restoreCustomPlaybackStateOnAdBreakComplete = true;\n\t    if (this.settings['adsRenderingSettings']) {\n\t      for (var setting in this.settings['adsRenderingSettings']) {\n\t        this.adsRenderingSettings[setting] =\n\t            this.settings['adsRenderingSettings'][setting];\n\t      }\n\t    }\n\t\n\t    if (this.settings['locale']) {\n\t      google.ima.settings.setLocale(this.settings['locale']);\n\t    }\n\t\n\t    createAdContainer_();\n\t    this.adsLoader = new google.ima.AdsLoader(this.adDisplayContainer);\n\t\n\t    this.adsLoader.getSettings().setVpaidMode(\n\t        google.ima.ImaSdkSettings.VpaidMode.ENABLED);\n\t    if (this.settings.vpaidAllowed == false) {\n\t      this.adsLoader.getSettings().setVpaidMode(\n\t          google.ima.ImaSdkSettings.VpaidMode.DISABLED);\n\t    }\n\t    if (this.settings.vpaidMode) {\n\t      this.adsLoader.getSettings().setVpaidMode(this.settings.vpaidMode);\n\t    }\n\t\n\t    if (this.settings.locale) {\n\t      this.adsLoader.getSettings().setLocale(this.settings.locale);\n\t    }\n\t\n\t    if (this.settings.numRedirects) {\n\t      this.adsLoader.getSettings().setNumRedirects(this.settings.numRedirects);\n\t    }\n\t\n\t    this.adsLoader.getSettings().setPlayerType('videojs-ima');\n\t    this.adsLoader.getSettings().setPlayerVersion(this.VERSION);\n\t    this.adsLoader.getSettings().setAutoPlayAdBreaks(this.autoPlayAdBreaks);\n\t\n\t    this.adsLoader.addEventListener(\n\t      google.ima.AdsManagerLoadedEvent.Type.ADS_MANAGER_LOADED,\n\t      onAdsManagerLoaded_,\n\t      false);\n\t    this.adsLoader.addEventListener(\n\t      google.ima.AdErrorEvent.Type.AD_ERROR,\n\t      onAdsLoaderError_,\n\t      false);\n\t\n\t    if (!readyCallback) {\n\t      readyCallback = this.startFromReadyCallback;\n\t    }\n\t    player.on('readyforpreroll', readyCallback);\n\t    player.ready(function() {\n\t      player.on('fullscreenchange', onFullscreenChange_);\n\t      player.on('volumechange', onVolumeChange_);\n\t    });\n\t  };\n\t\n\t  vjs.plugin('ima', init);\n\t}(window.videojs));\n\n\n/***/ },\n/* 115 */\n/***/ function(module, exports) {\n\n\t/*\n\t* videojs-ga - v0.5.1 - 2017-04-24\n\t* Copyright (c) 2017 Michael Bensoussan\n\t* Licensed MIT\n\t*/\n\t(function() {\n\t  var __indexOf = [].indexOf || function(item) { for (var i = 0, l = this.length; i < l; i++) { if (i in this && this[i] === item) return i; } return -1; };\n\t\n\t  videojs.plugin('ga', function(options) {\n\t    var adend, adpause, adserror, adskip, adstart, adtimeout, autoLabel, dataSetupOptions, defaultsEventsToTrack, end, ended, error, eventCategory, eventLabel, eventsToTrack, firstplay, fullscreen, getCurrentTime, getCurrentValue, init, interval, isFinite, loaded, parsedOptions, pause, percentsPlayedInterval, percentsPlayedMoments, percentsTracked, play, playing, resize, secondsPlayed, secondsPlayedInterval, secondsPlayedMoments, seekEnd, seekStart, seeking, sendbeacon, startTimeTracking, stopTimeTracking, timeupdate, trackPercent, trackReplaySeconds, trackSeconds, trackSeek, trackingTime, volumeChange,\n\t      _this = this;\n\t    if (options == null) {\n\t      options = {};\n\t    }\n\t    dataSetupOptions = {};\n\t    if (this.options_['data-setup']) {\n\t      parsedOptions = JSON.parse(this.options_['data-setup']);\n\t      if (parsedOptions.ga) {\n\t        dataSetupOptions = parsedOptions.ga;\n\t      }\n\t    }\n\t    defaultsEventsToTrack = ['loaded', 'percentsPlayed', 'secondsPlayed', 'start', 'end', 'seek', 'play', 'pause', 'resize', 'volumeChange', 'error', 'fullscreen', 'adstart', 'adpause', 'adend', 'adskip', 'adtimeout', 'adserror'];\n\t    eventsToTrack = options.eventsToTrack || dataSetupOptions.eventsToTrack || defaultsEventsToTrack;\n\t    eventCategory = options.eventCategory || dataSetupOptions.eventCategory || 'Video';\n\t    autoLabel = options.autoLabel != null ? options.autoLabel : true;\n\t    eventLabel = options.eventLabel || dataSetupOptions.eventLabel;\n\t    percentsPlayedInterval = options.percentsPlayedInterval || dataSetupOptions.percentsPlayedInterval || 10;\n\t    percentsPlayedMoments = options.percentsPlayedMoments || dataSetupOptions.percentsPlayedMoments || [];\n\t    secondsPlayedInterval = options.secondsPlayedInterval || dataSetupOptions.secondsPlayedInterval || 60;\n\t    secondsPlayedMoments = options.secondsPlayedMoments || dataSetupOptions.secondsPlayedMoments || [];\n\t    trackReplaySeconds = options.trackReplaySeconds;\n\t    percentsTracked = [];\n\t    seekStart = seekEnd = 0;\n\t    seeking = false;\n\t    ended = false;\n\t    trackingTime = false;\n\t    secondsPlayed = 0;\n\t    isFinite = void 0;\n\t    trackSeconds = void 0;\n\t    interval = void 0;\n\t    options.debug = options.debug || false;\n\t    init = function() {\n\t      isFinite = Number.isFinite(_this.duration());\n\t      trackSeconds = __indexOf.call(eventsToTrack, 'secondsPlayed') >= 0 && (!isFinite || options.trackFiniteSeconds);\n\t      if (!eventLabel && autoLabel) {\n\t        eventLabel = _this.currentSrc().split('/').slice(-1)[0].replace(/\\.(\\w{3,4})(\\?.*)?$/i, '');\n\t      }\n\t      if (!isFinite && !(options.eventCategory || dataSetupOptions.eventCategory)) {\n\t        eventCategory = 'Stream';\n\t      }\n\t      return startTimeTracking();\n\t    };\n\t    loaded = function() {\n\t      init();\n\t      if (__indexOf.call(eventsToTrack, 'loadedmetadata') >= 0) {\n\t        sendbeacon('loadedmetadata', true);\n\t      }\n\t    };\n\t    timeupdate = function() {\n\t      if (!isFinite) {\n\t        return;\n\t      }\n\t      if (__indexOf.call(eventsToTrack, 'percentsPlayed') >= 0) {\n\t        trackPercent();\n\t      }\n\t      if (__indexOf.call(eventsToTrack, 'seek') >= 0) {\n\t        trackSeek();\n\t      }\n\t    };\n\t    trackPercent = function() {\n\t      var currentTime, duration, percent, percentToTrack, percentsPlayed, _i, _len;\n\t      currentTime = _this.currentTime();\n\t      duration = _this.duration();\n\t      percentsPlayed = Math.round(currentTime / duration * 100);\n\t      percentToTrack = void 0;\n\t      if (!percentsPlayed || __indexOf.call(percentsTracked, percentsPlayed) >= 0) {\n\t        return;\n\t      }\n\t      for (_i = 0, _len = percentsPlayedMoments.length; _i < _len; _i++) {\n\t        percent = percentsPlayedMoments[_i];\n\t        if (percent === percentsPlayed) {\n\t          percentToTrack = percentsPlayed;\n\t        }\n\t      }\n\t      if (percentsPlayedInterval && !(percentsPlayed % percentsPlayedInterval)) {\n\t        percentToTrack = percent = percentsPlayed;\n\t      }\n\t      if (percentToTrack) {\n\t        sendbeacon('percent played', true, percentsPlayed);\n\t        return percentsTracked.push(percentsPlayed);\n\t      }\n\t    };\n\t    trackSeek = function() {\n\t      seekStart = seekEnd;\n\t      seekEnd = getCurrentValue();\n\t      if (Math.abs(seekStart - seekEnd) > 1) {\n\t        seeking = true;\n\t        sendbeacon('seek start', false, seekStart);\n\t        return sendbeacon('seek end', false, seekEnd);\n\t      }\n\t    };\n\t    startTimeTracking = function() {\n\t      var currentTime;\n\t      if (!trackSeconds || trackingTime) {\n\t        return;\n\t      }\n\t      trackingTime = true;\n\t      currentTime = getCurrentTime();\n\t      return interval = setInterval(function() {\n\t        if (!(getCurrentTime() > currentTime)) {\n\t          return;\n\t        }\n\t        secondsPlayed++;\n\t        if (__indexOf.call(secondsPlayedMoments, secondsPlayed) >= 0 || !(secondsPlayed % secondsPlayedInterval)) {\n\t          sendbeacon('seconds played', true, secondsPlayed);\n\t        }\n\t      }, 1000);\n\t    };\n\t    stopTimeTracking = function() {\n\t      clearInterval(interval);\n\t      return trackingTime = false;\n\t    };\n\t    firstplay = function() {\n\t      startTimeTracking();\n\t      if (__indexOf.call(eventsToTrack, 'start') >= 0 && !isFinite) {\n\t        return sendbeacon('start', true);\n\t      }\n\t    };\n\t    end = function() {\n\t      ended = true;\n\t      stopTimeTracking();\n\t      if (trackReplaySeconds) {\n\t        secondsPlayed = 0;\n\t      } else {\n\t        trackSeconds = false;\n\t      }\n\t      sendbeacon('end', true);\n\t    };\n\t    play = function() {\n\t      var currentTime;\n\t      startTimeTracking();\n\t      currentTime = getCurrentValue();\n\t      if (currentTime > 0 || __indexOf.call(eventsToTrack, 'start') < 0) {\n\t        sendbeacon('play', true, currentTime);\n\t      }\n\t      if (ended && currentTime === 0 && trackReplaySeconds) {\n\t        sendbeacon('start', true);\n\t      }\n\t      seeking = false;\n\t    };\n\t    playing = function() {\n\t      startTimeTracking();\n\t      seeking = false;\n\t    };\n\t    pause = function() {\n\t      var currentTime, duration;\n\t      stopTimeTracking();\n\t      currentTime = getCurrentValue();\n\t      duration = Math.round(this.duration());\n\t      if (currentTime !== duration && !seeking) {\n\t        sendbeacon('pause', false, currentTime);\n\t      }\n\t    };\n\t    volumeChange = function() {\n\t      var volume;\n\t      volume = this.muted() === true ? 0 : this.volume();\n\t      sendbeacon('volume change', false, volume);\n\t    };\n\t    resize = function() {\n\t      sendbeacon('resize - ' + this.width() + '*' + this.height(), true);\n\t    };\n\t    error = function() {\n\t      var currentTime;\n\t      currentTime = getCurrentValue();\n\t      sendbeacon('error', true, currentTime);\n\t    };\n\t    fullscreen = function() {\n\t      var currentTime;\n\t      currentTime = getCurrentValue();\n\t      if ((typeof this.isFullscreen === \"function\" ? this.isFullscreen() : void 0) || (typeof this.isFullScreen === \"function\" ? this.isFullScreen() : void 0)) {\n\t        sendbeacon('enter fullscreen', false, currentTime);\n\t      } else {\n\t        sendbeacon('exit fullscreen', false, currentTime);\n\t      }\n\t    };\n\t    adstart = function() {\n\t      stopTimeTracking();\n\t      if (__indexOf.call(eventsToTrack, 'adstart') >= 0) {\n\t        return sendbeacon('adstart', false, getCurrentValue());\n\t      }\n\t    };\n\t    adpause = function() {\n\t      return sendbeacon('adpause', false);\n\t    };\n\t    adend = function() {\n\t      startTimeTracking();\n\t      return sendbeacon('adend', true);\n\t    };\n\t    adskip = function() {\n\t      return sendbeacon('adskip', false);\n\t    };\n\t    adtimeout = function() {\n\t      return sendbeacon('adtimeout', true);\n\t    };\n\t    adserror = function(data) {\n\t      return sendbeacon('adserror', true, data != null ? data.AdError : void 0);\n\t    };\n\t    getCurrentValue = function() {\n\t      if (isFinite) {\n\t        return getCurrentTime();\n\t      } else {\n\t        return secondsPlayed;\n\t      }\n\t    };\n\t    getCurrentTime = function() {\n\t      return Math.round(_this.currentTime());\n\t    };\n\t    sendbeacon = function(action, nonInteraction, value) {\n\t      var eventFields;\n\t      eventFields = {\n\t        eventCategory: eventCategory,\n\t        eventAction: action,\n\t        nonInteraction: nonInteraction\n\t      };\n\t      if (eventLabel != null) {\n\t        eventFields.eventLabel = eventLabel;\n\t      }\n\t      if (value != null) {\n\t        eventFields.eventValue = value;\n\t      }\n\t      _this.trigger('gaEvent', eventFields);\n\t      if (options.sendGaEventDirectly && window.ga) {\n\t        ga('send', 'event', {\n\t          'eventCategory': eventCategory,\n\t          'eventAction': action,\n\t          'eventLabel': eventLabel,\n\t          'eventValue': value,\n\t          'nonInteraction': nonInteraction\n\t        });\n\t      }\n\t      if (options.debug) {\n\t        console.log(eventFields);\n\t      }\n\t    };\n\t    this.ready(function() {\n\t      this.on('loadedmetadata', loaded);\n\t      this.on('timeupdate', timeupdate);\n\t      this.one('firstplay', firstplay);\n\t      if (__indexOf.call(eventsToTrack, 'end') >= 0) {\n\t        this.on('ended', end);\n\t      }\n\t      if (__indexOf.call(eventsToTrack, 'play') >= 0) {\n\t        this.on('play', play);\n\t      }\n\t      this.on('playing', playing);\n\t      if (__indexOf.call(eventsToTrack, 'pause') >= 0) {\n\t        this.on('pause', pause);\n\t      }\n\t      if (__indexOf.call(eventsToTrack, 'volumeChange') >= 0) {\n\t        this.on('volumechange', volumeChange);\n\t      }\n\t      if (__indexOf.call(eventsToTrack, 'resize') >= 0) {\n\t        this.on('resize', resize);\n\t      }\n\t      if (__indexOf.call(eventsToTrack, 'error') >= 0) {\n\t        this.on('error', error);\n\t      }\n\t      if (__indexOf.call(eventsToTrack, 'fullscreen') >= 0) {\n\t        this.on('fullscreenchange', fullscreen);\n\t      }\n\t      if (__indexOf.call(eventsToTrack, 'adstart') >= 0) {\n\t        this.on('adstart', adstart);\n\t      }\n\t      if (__indexOf.call(eventsToTrack, 'adpause') >= 0) {\n\t        this.on('adpause', adpause);\n\t      }\n\t      if (__indexOf.call(eventsToTrack, 'adend') >= 0) {\n\t        this.on('adend', adend);\n\t      }\n\t      if (__indexOf.call(eventsToTrack, 'adskip') >= 0) {\n\t        this.on('adskip', adskip);\n\t      }\n\t      if (__indexOf.call(eventsToTrack, 'adtimeout') >= 0) {\n\t        this.on('adtimeout', adtimeout);\n\t      }\n\t      if (__indexOf.call(eventsToTrack, 'adserror') >= 0) {\n\t        return this.on('adserror', adserror);\n\t      }\n\t    });\n\t    return {\n\t      'sendbeacon': sendbeacon\n\t    };\n\t  });\n\t\n\t}).call(this);\n\n\n/***/ },\n/* 116 */\n/***/ function(module, exports) {\n\n\t/*!\n\t videojs-social - v1.5.2 - 2015-09-15\n\t * Copyright (c) 2015 Brightcove; Licensed https://accounts.brightcove.com/en/terms-and-conditions\n\t */\n\t\n\t/*! videojs-endscreen - v0.0.0 - 2014-10-13\n\t * Copyright (c) 2014 Brightcove\n\t * Modified by Hany alsamman for support videojs-5\n\t */\n\t(function (window, videojs) {\n\t    'use strict';\n\t\n\t    /**\n\t     * Initialize the plugin.\n\t     * @param options (optional) {object} configuration for the plugin\n\t     */\n\t    var endscreen = function (options) {\n\t        var player = this,\n\t            hasAds = !!(player.ads),\n\t            videoFinished = false,\n\t            adStarted = false,\n\t            adFinished = false;\n\t\n\t        /**\n\t         * videojs-ima3 appears to be firing an `adend` event at the start of the actual video when the ad\n\t         * is a postroll. We can account for it by checking if start was called and then if end was called.\n\t         * If a postroll is being run, it will bind displaying the Overlay to `adend` instead of `ended`.\n\t         */\n\t        if (hasAds) {\n\t            player.on('adstart', function () {\n\t                adStarted = true;\n\t                adFinished = false;\n\t            });\n\t\n\t            player.on('adend', function () {\n\t                if (adStarted) {\n\t                    adFinished = true;\n\t                }\n\t            });\n\t        }\n\t\n\t        player.on('ended', function () {\n\t            if (!videoFinished && (!hasAds || (adStarted && adFinished) || (!adStarted && !adFinished))) {\n\t                videoFinished = true;\n\t            }\n\t\n\t            if (videoFinished && hasAds && !adFinished) {\n\t                player.on('adend', function () {\n\t                    player.trigger('endscreen');\n\t                });\n\t            } else if (videoFinished) {\n\t                player.trigger('endscreen');\n\t            }\n\t        });\n\t    };\n\t\n\t    // register the plugin\n\t    videojs.plugin('endscreen', endscreen);\n\t})(window, window.videojs);\n\t\n\t/*! videojs-social - v0.0.0 - 2014-5-1\n\t * Copyright (c) 2014 Brightcove */\n\t(function (window, videojs) {\n\t    'use strict';\n\t\n\t    // Allocate all variables to be used\n\t    var defaults = {\n\t            title: '',\n\t            description: '',\n\t            url: '',\n\t            deeplinking: false,\n\t            displayAfterVideo: false,\n\t            offset: '00:00:00',\n\t            services: {\n\t                facebook: true,\n\t                google: true,\n\t                twitter: true,\n\t                tumblr: true,\n\t                pinterest: true,\n\t                linkedin: true\n\t            }\n\t        },\n\t        addEvent = function (el, type, callback) {\n\t            if (el.addEventListener) {\n\t                return el.addEventListener(type, callback, false);\n\t            }\n\t\n\t            // IE8 is onclick, not click\n\t            if (!el.addEventListener && type === 'click') {\n\t                type = 'onclick';\n\t            }\n\t            return el.attachEvent(type, callback);\n\t        },\n\t\n\t        removeEvent = function (el, type, callback) {\n\t            if (el.removeEventListener) {\n\t                return el.removeEventListener(type, callback, false);\n\t            }\n\t            if (!el.removeEventListener && type === 'click') {\n\t                type = 'onclick';\n\t            }\n\t            return el.detachEvent(type, callback);\n\t        },\n\t\n\t        social,\n\t        SocialButton,\n\t        SocialOverlay;\n\t\n\t    var handleEvent = function (e) {\n\t        e.preventDefault();\n\t        window.open(\n\t            this.href,\n\t            '_blank',\n\t            'width=600, height=400, top=100, left=100, titlebar=yes, modal=yes, resizable=yes, toolbar=no, status=1, location=no, menubar=no, centerscreen=yes'\n\t        );\n\t    };\n\t\n\t    /**\n\t     * Initialize the plugin.\n\t     * @param options (optional) {object} configuration for the plugin\n\t     */\n\t    social = function (options) {\n\t\n\t        var settings,\n\t            player = this;\n\t\n\t        // Merge options with the buttons defaults\n\t        settings = videojs.mergeOptions(defaults, options);\n\t\n\t        // If we are being re-initialized then remove the old stuff\n\t        if (player.controlBar.socialButton) {\n\t            player.controlBar.removeChild(player.controlBar.socialButton);\n\t            delete player.controlBar.socialButton;\n\t\n\t            if (player.socialOverlay) {\n\t                player.removeChild(player.socialOverlay);\n\t                delete player.socialOverlay;\n\t            }\n\t        }\n\t\n\t        // Add social button to player\n\t        player.controlBar.socialButton = player.controlBar.addChild('socialButton', settings);\n\t        player.socialOverlay = player.addChild('socialOverlay', settings);\n\t\n\t        // Add tabindex\n\t        player.controlBar.socialButton.el().setAttribute('tabindex', '0');\n\t\n\t        if (settings.displayAfterVideo) {\n\t            player.endscreen();\n\t            player.on('endscreen', function () {\n\t                player.socialOverlay.enableRestartButton();\n\t                player.socialOverlay.show();\n\t            });\n\t        }\n\t    };\n\t\n\t    /*\n\t     * The \"Share\" control bar button\n\t     */\n\t    SocialButton = videojs.extend(videojs.getComponent('Button'), {\n\t        constructor: function (player, options) {\n\t            videojs.getComponent('Button').call(this, player, options);\n\t\n\t            // Bind touchstart for mobile browsers and prevent default\n\t            this.on('touchstart', function (e) {\n\t                player.socialOverlay.update();\n\t                player.socialOverlay.disableRestartButton();\n\t                player.socialOverlay.show();\n\t                e.preventDefault();\n\t            });\n\t\n\t            // Bind click event for desktop browsers\n\t            this.on('click', function () {\n\t                player.socialOverlay.update();\n\t                player.socialOverlay.disableRestartButton();\n\t                player.socialOverlay.show();\n\t            });\n\t\n\t        }\n\t    });\n\t\n\t    SocialButton.prototype.createEl = function () {\n\t        return videojs.getComponent('ClickableComponent').prototype.createEl.call(this, 'div', {\n\t            className: 'vjs-share-control vjs-control',\n\t            innerHTML: '<div class=\"vjs-control-content\"><span class=\"vjs-control-text\">Share</span></div>'\n\t        }, {\n\t            role: 'button',\n\t            'aria-live': 'polite',\n\t        });\n\t    };\n\t\n\t    videojs.registerComponent('SocialButton', SocialButton);\n\t\n\t    /*\n\t     * The overlay panel that is toggled when the SocialButton is clicked\n\t     */\n\t    SocialOverlay = videojs.extend(videojs.getComponent('Component'), {\n\t        constructor: function (player, options) {\n\t\n\t            var embedCode,\n\t                start,\n\t                directLinkTextBox,\n\t                embedCodeTextBox,\n\t                offsetTextBox,\n\t                servicesHtml,\n\t                service,\n\t                restartButton;\n\t\n\t            // If we are being recreated, then remove our old self\n\t            if (player.socialOverlay) {\n\t                player.removeChild(player.socialOverlay);\n\t            }\n\t\n\t            videojs.getComponent('Component').call(this, player, options);\n\t\n\t            // set the direct link and embed code\n\t            this.el().querySelector('.vjs-social-embed-container input').setAttribute('value', this.getEmbedCode());\n\t            this.el().querySelector('.vjs-social-direct-link-container input').setAttribute('value', this._getUrlWithTime());\n\t\n\t            // Setup the Restart Button\n\t            restartButton = this.el().querySelector('.vjs-restart');\n\t            addEvent(restartButton, 'click', videojs.bind(this, this._restartPlayer));\n\t            addEvent(restartButton, 'activate', videojs.bind(this, this._restartPlayer));\n\t\n\t            // Hide offset if deeplinking is disabled\n\t            if (!options.deeplinking) {\n\t                start = this.el().querySelector('.vjs-social-start');\n\t                start.className += ' vjs-hidden ';\n\t            }\n\t\n\t            // Hide Embed code if disabled\n\t            if (options.removeEmbed && options.removeEmbed === true) {\n\t                this.el().querySelector('.vjs-social-embed-container').className += ' vjs-hidden ';\n\t            }\n\t\n\t            // Hide Direct Link\n\t            if (options.removeDirect && options.removeDirect === true) {\n\t                this.el().querySelector('.vjs-social-direct-link-container').className += ' vjs-hidden ';\n\t            }\n\t\n\t            // Add event to select the direct link when clicked\n\t            directLinkTextBox = this.el().querySelector('.direct-link-textbox');\n\t            addEvent(directLinkTextBox, 'click', function () {\n\t                this.select();\n\t            });\n\t\n\t            // Add event to select the embed code when clicked\n\t            embedCodeTextBox = this.el().querySelector('.embed-code-textbox');\n\t            addEvent(embedCodeTextBox, 'click', function () {\n\t                this.select();\n\t            });\n\t\n\t            this.offsetTextBox = this.el().querySelector('.start-offset-textbox');\n\t\n\t            // Bind changed event to the start offset\n\t            //  which will update the direct and embed links on changes and show it's current state\n\t            addEvent(this.offsetTextBox, 'change', videojs.bind(this, this.update));\n\t\n\t            // Bind the click event of the close button to hide the social overlay\n\t            this.closeButton = this.el().querySelector('.vjs-social-cancel');\n\t\n\t            // Catch escape key and hide dialog when pressed\n\t            addEvent(this.el(), 'keydown', function (event) {\n\t                if (player.socialOverlay.el().display !== 'none' && event.keyCode === 27) {\n\t                    // Hide the overlay, return focus to social button\n\t                    player.socialOverlay.hide();\n\t                }\n\t            }, true);\n\t\n\t\n\t            this.on('click', function (event) {\n\t                // if we clicked in the close button, we should close the overlay,\n\t                // this is specifically added to enable the closeButton in IE8\n\t                if (event.target === this.closeButton) {\n\t                    player.socialOverlay.hide();\n\t                }\n\t            });\n\t        },\n\t\n\t        update: function () {\n\t            var embedCodeTextBox = this.el().querySelector('.embed-code-textbox'),\n\t                directLinkTextBox;\n\t            var options = this.options_;\n\t\n\t            if (/^\\s*(0*[1-5]*\\d|0*[1-5]*\\d:[0-5]\\d|\\d+:[0-5]\\d:[0-5]\\d)\\s*$/.test(this.offsetTextBox.value)) {\n\t\n\t                directLinkTextBox = this.el().querySelector('.direct-link-textbox');\n\t\n\t                // update the validation state\n\t                this.offsetTextBox.className = this.offsetTextBox.className.replace(/(^|\\s)vjs-invalid/, '');\n\t\n\t                // Compute the new direct link\n\t                directLinkTextBox.value = this._getUrlWithTime();\n\t            } else {\n\t                this.offsetTextBox.className += ' vjs-invalid';\n\t            }\n\t\n\t            // Compute the new embed code\n\t            embedCodeTextBox.setAttribute('value', this.getEmbedCode());\n\t        },\n\t\n\t        enableRestartButton: function () {\n\t            var restartButton = this.el().querySelector('.vjs-restart');\n\t            restartButton.className = restartButton.className.replace(/\\bvjs\\-hidden\\b/, '');\n\t        },\n\t\n\t        disableRestartButton: function () {\n\t            var restartButton = this.el().querySelector('.vjs-restart');\n\t            if (!/\\bvjs-hidden\\b/.test(restartButton.className)) {\n\t                restartButton.className += ' vjs-hidden';\n\t            }\n\t        },\n\t\n\t        hide: function () {\n\t            var player = this.player();\n\t            videojs.getComponent('Component').prototype.hide.call(this);\n\t            if (this.previouslyPlaying) {\n\t                player.play();\n\t            }\n\t            // Set focus back to the social button for accessibility\n\t            player.controlBar.socialButton.el().focus();\n\t            player.trigger('sharing:closed');\n\t        },\n\t\n\t        show: function () {\n\t            var player = this.player();\n\t            videojs.getComponent('Component').prototype.show.call(this);\n\t            if (!player.paused()) {\n\t                this.previouslyPlaying = true;\n\t                player.pause();\n\t            }\n\t            player.trigger('sharing:opened');\n\t        }\n\t    });\n\t\n\t    SocialOverlay.prototype.createEl = function () {\n\t        var player = this.player(),\n\t            options = this.options_;\n\t\n\t        return videojs.getComponent('Component').prototype.createEl.call(this, 'div', {\n\t            className: 'vjs-social-overlay vjs-hidden',\n\t            'tabindex': -1,\n\t            innerHTML: '<div class=\"vjs-social-cancel\" role=\"button\">' +\n\t            '<div class=\"vjs-control-text\" aria-label=\"' + player.localize('Close button') + '\">' + player.localize('Close') + '</div>' +\n\t            '</div>' +\n\t            '<form>' +\n\t            '<legend>' + player.localize('Share Video') + ' ' + this._getTitle() + '</legend>' +\n\t            '<div class=\"vjs-social-link-options\">' +\n\t            '<label class=\"vjs-social-start\" aria-label=\"' + player.localize('Start From') + '\">' + player.localize('Start From') + ': <input class=\"start-offset-textbox\" type=\"text\" tabindex=\"9\" title=\"The offset must be specified using the following pattern: hh:mm:ss\" placeholder=\"hh:mm:ss\" maxlength=\"10\" value=\"' + options.offset + '\" /></label>' +\n\t            '<div class=\"vjs-social-direct-link-container\">' +\n\t            '<label class=\"vjs-social-link\" aria-label=\"Read Only: Direct Link To Content\">' + player.localize('Direct Link') + ': <input class=\"direct-link-textbox\" type=\"text\" tabindex=\"8\" readonly=\"true\" /></label>' +\n\t            '</div>' +\n\t            '</div>' +\n\t            '<div class=\"vjs-social-embed-container\">' +\n\t            '<label arial-label=\"Read Only: Embed Code\">' + player.localize('Embed Code') + ': <input class=\"embed-code-textbox\" type=\"text\" tabindex=\"10\" readonly=\"true\" /></label>' +\n\t            '</div>' +\n\t            '</form>' +\n\t            '<button tabindex=\"0\" class=\"vjs-restart vjs-hidden\">' +\n\t            '<div class=\"vjs-control-content\"><span class=\"vjs-control-text\">' + player.localize('Restart') + '</span></div>' +\n\t            '</button>'\n\t        }, {\n\t            'aria-role': 'dialog',\n\t            'aria-label': player.localize('Sharing Dialog'),\n\t        });\n\t    };\n\t\n\t    /*\n\t     * Computes the new embed code\n\t     */\n\t    SocialOverlay.prototype.getEmbedCode = function () {\n\t        // Declare variables\n\t        var offset, offsetTextBox, playerOptions, embedCode, urlTemplate, player, options;\n\t\n\t        player = this.player();\n\t        options = this.options_;\n\t\n\t        // Assign converted initial options offset value\n\t        offset = options.deeplinking ? this._convertOffset(options.offset) : null;\n\t        // If we can't find the offset control we should use the options value\n\t        offsetTextBox = player.el().querySelector('.start-offset-textbox');\n\t        if (offsetTextBox && options.deeplinking) {\n\t            offset = this._convertOffset(offsetTextBox.value);\n\t        }\n\t        // Get the player options so we can retrieve the account_id, player_id, and embed_id\n\t        playerOptions = player.options_;\n\t\n\t        // encode the URL for security\n\t        if (playerOptions['data-embed-url']) {\n\t            playerOptions['data-embed-url'] = encodeURI(playerOptions['data-embed-url']);\n\t        }\n\t\n\t        // Fallback Url Template\n\t        urlTemplate = '//players.brightcove.net/{{account_id}}/{{player_id}}_{{embed_id}}/index.html{{video_id}}';\n\t\n\t        // If in iframe use its URL\n\t        // jshint -W116\n\t        if (window.parent != window) {\n\t            urlTemplate = window.location.href;\n\t        }\n\t        // jshint +W116\n\t\n\t        // Embed code\n\t        if (options.embedCode) {\n\t            embedCode = options.embedCode;\n\t        } else {\n\t            embedCode = '<iframe src=\\'' + urlTemplate + '{{offset}}\\' allowfullscreen frameborder=0></iframe>';\n\t        }\n\t\n\t        // Construct the embed code snippet. Replace values with known template params.\n\t        return embedCode\n\t            .replace('{{account_id}}', playerOptions['data-account'])\n\t            .replace('{{player_id}}', playerOptions['data-player'])\n\t            .replace('{{embed_id}}', playerOptions['data-embed'])\n\t            .replace('{{video_id}}', (player.mediainfo && player.mediainfo.id) ? '?videoId=' + player.mediainfo.id : '')\n\t            .replace('{{offset}}', offset ? '#t=' + offset : '');\n\t    };\n\t\n\t    /*\n\t     * Determines the URL to be dispayed in the share dialog\n\t     */\n\t    SocialOverlay.prototype._getUrl = function () {\n\t        var url,\n\t            options = this.options_;\n\t\n\t        // Determine the custom base url\n\t        // In IE8, window.parent doesn't === window, but it does == equal it.\n\t        // jshint -W116\n\t        if (options.url) {\n\t            url = options.url;\n\t        } else if (window.parent != window) {\n\t            url = document.referrer;\n\t        } else {\n\t            url = window.location.href;\n\t        }\n\t        // jshint +W116\n\t\n\t        return url;\n\t    };\n\t\n\t    SocialOverlay.prototype._getUrlWithTime = function () {\n\t        var options = this.options_,\n\t            url = this._getUrl(),\n\t            offset;\n\t\n\t        // Get the start offset textbox (Only include offset if deeplinking is enabled)\n\t        if (options.deeplinking) {\n\t            offset = this._convertOffset(this.el().querySelector('.start-offset-textbox').value);\n\t        }\n\t\n\t        // Append the offset if available\n\t        if (offset) {\n\t            url = url + '#t=' + offset;\n\t        }\n\t\n\t        return url;\n\t    };\n\t\n\t    /*\n\t     * Updates the title based on the media date or the custom options setting\n\t     */\n\t    SocialOverlay.prototype._getTitle = function () {\n\t        var playerOptions,\n\t            options = this.options_,\n\t            player = this.player(),\n\t            title = options.title;\n\t\n\t        // If there's no title try and find one in the options\n\t        if (!title) {\n\t\n\t            // Get player options\n\t            playerOptions = player.options_;\n\t\n\t            // Search the player options data media for a title\n\t            if (playerOptions['data-media'] && playerOptions['data-media'].title) {\n\t                title = playerOptions['data-media'].title;\n\t            }\n\t        }\n\t\n\t        return title || '';\n\t    };\n\t    /*\n\t     * Converts an offset from hh:mm:ss to the YouTube format of 1h27m14s\n\t     */\n\t    SocialOverlay.prototype._convertOffset = function (offset) {\n\t\n\t        var segments,\n\t            seconds = 0,\n\t            multiples = [1, 60, 3600],\n\t            ret = '',\n\t            i,\n\t            s;\n\t\n\t        if (offset) {\n\t            segments = offset.split(':');\n\t            if (segments.length >= 1 && segments.length <= 3) {\n\t                // Parse each segment into an integer to remove leading zeros and other dentritis\n\t                for (i = 0; i < segments.length; ++i) {\n\t                    s = parseInt(segments[i], 10) * multiples[segments.length - 1 - i];\n\t                    if (isNaN(s)) {\n\t                        return '';\n\t                    }\n\t                    seconds += s;\n\t                }\n\t                ret = '';\n\t                if (seconds >= 3600 && Math.floor(seconds / 3600) !== 0) {\n\t                    ret = Math.floor(seconds / 3600) + 'h';\n\t                    seconds = seconds % 3600;\n\t                }\n\t\n\t                if (seconds >= 60 && Math.floor(seconds / 60) !== 0) {\n\t                    ret += Math.floor(seconds / 60) + 'm';\n\t                    seconds = seconds % 60;\n\t                }\n\t\n\t                if (seconds > 0) {\n\t                    ret += seconds + 's';\n\t                }\n\t\n\t                return ret;\n\t\n\t            }\n\t        }\n\t\n\t        return '';\n\t    };\n\t\n\t    SocialOverlay.prototype._restartPlayer = function () {\n\t        var player = this.player();\n\t        player.socialOverlay.hide();\n\t        player.currentTime(0);\n\t        player.play();\n\t    };\n\t\n\t    videojs.registerComponent('SocialOverlay', SocialOverlay);\n\t\n\t    // register the plugin\n\t    videojs.plugin('social', social);\n\t\n\t    // End the closure\n\t})(window, window.videojs);\n\n\n/***/ },\n/* 117 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, '__esModule', {\n\t  value: true\n\t});\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\t\n\tvar _videoJs = __webpack_require__(3);\n\t\n\tvar _videoJs2 = _interopRequireDefault(_videoJs);\n\t\n\tvar ClickableComponent = _videoJs2['default'].getComponent('ClickableComponent');\n\t\n\t// Default options for the plugin.\n\tvar defaults = {\n\t  text: 'Download'\n\t};\n\t\n\t/**\n\t * Stack CSS class names.\n\t * @return {String}\n\t */\n\tvar buildCSSClass = function buildCSSClass() {\n\t  return 'vjs-download-button-control ' + ClickableComponent.prototype.buildCSSClass();\n\t};\n\t\n\t/**\n\t * Function to invoke when the player is ready.\n\t *\n\t * @function onPlayerReady\n\t * @param    {Player} player\n\t * @param    {Object} [options={}]\n\t */\n\tvar onPlayerReady = function onPlayerReady(player, options) {\n\t  player.addClass('vjs-download-button');\n\t\n\t  if (!player.controlBar.childNameIndex_.hasOwnProperty('DownloadButton')) {\n\t    var linkProps = {\n\t      className: buildCSSClass(),\n\t      href: player.currentSrc(),\n\t      title: options.text,\n\t      download: ''\n\t    };\n\t    var linkAttrs = {\n\t      'aria-live': 'polite',\n\t      'aria-label': options.text\n\t    };\n\t\n\t    player.controlBar.addChild(new ClickableComponent(undefined, {\n\t      el: ClickableComponent.prototype.createEl('a', linkProps, linkAttrs)\n\t    }));\n\t  }\n\t};\n\t\n\t/**\n\t * A video.js plugin.\n\t *\n\t * In the plugin function, the value of `this` is a video.js `Player`\n\t * instance. You cannot rely on the player being in a \"ready\" state here,\n\t * depending on how the plugin is invoked. This may or may not be important\n\t * to you; if not, remove the wait for \"ready\"!\n\t *\n\t * @function downloadButton\n\t * @param    {Object} [options={}]\n\t *           An object of options left to the plugin author to define.\n\t */\n\tvar downloadButton = function downloadButton(options) {\n\t  var _this = this;\n\t\n\t  this.ready(function () {\n\t    onPlayerReady(_this, _videoJs2['default'].mergeOptions(defaults, options));\n\t  });\n\t};\n\t\n\t// Register the plugin with video.js.\n\t_videoJs2['default'].plugin('downloadButton', downloadButton);\n\t\n\t// Include the version number.\n\tdownloadButton.VERSION = '__VERSION__';\n\t\n\texports['default'] = downloadButton;\n\tmodule.exports = exports['default'];\n\n/***/ },\n/* 118 */,\n/* 119 */,\n/* 120 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\texports.default = wjplayer;\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tvar google = window.google;\n\t\n\t/**\n\t * Creates a new player and places it to container with the specified id.\n\t *\n\t * @example\n\t * // Create a video player\n\t * var player = wjplayer({\n\t *  containerId: 'player-container',\n\t *   sources: [{\n\t *     src: '//vjs.zencdn.net/v/oceans.mp4',\n\t *     type: 'video/mp4'\n\t *   }]\n\t * );\n\t *\n\t * // Specify resolution and label of each source\n\t * var player = wjplayer({\n\t *  containerId: 'player-container',\n\t *  defaultQuality: 'high',\n\t *  // sourcesWithRes array will be passed to videojs-resolution-switcher\n\t *  sourcesWithRes: [\n\t *  {\n\t *    src: 'path-to-video-low-quality.m3u8',\n\t *    type: 'application/x-mpegURL',\n\t *    res: 360,\n\t *    label: 'SD'\n\t *  },\n\t *  {\n\t *    src: 'path-to-video-high-quality.m3u8',\n\t *    type: 'application/x-mpegURL',\n\t *    res: 720,\n\t *    label: 'HD'\n\t *  }]\n\t * });\n\t *\n\t * // Create an audio player\n\t *  var audioPlayer = wjplayer({\n\t *    containerId: 'player-container',\n\t *    playerType: 'audio',\n\t *    sources: [{\n\t *      src: '//vjs.zencdn.net/v/oceans.mp3',\n\t *      type: 'video/mp3'\n\t *    }]\n\t *  });\n\t *\n\t *  // Insert ads\n\t *  var player = wjplayer({\n\t *    containerId: 'player-container',\n\t *    sources: [{\n\t *      src: '//vjs.zencdn.net/v/oceans.mp4',\n\t *      type: 'video/mp4'\n\t *    }],\n\t *    ads: {\n\t *      adTagUrl: '//example.com/vmap.xml'\n\t *    }\n\t *  });\n\t *\n\t * @param {Object} options\n\t *   Configuration options.\n\t *\n\t * @param {String} options.containerId\n\t *   REQUIRED id of the container\n\t *   where player shoud be inserted (appendChild() will be used)\n\t *\n\t * @param {Array} options.sources\n\t *   REQUIRED IF `sourcesWithRes` IS NOT PROVIDED\n\t *   Array of sources to pass to player.src()\n\t *   @see http://docs.videojs.com/docs/api/player.html#Methodssrc\n\t *\n\t * @param {Array} options.sourcesWithRes\n\t *   REQUIRED IF `sources` IS NOT PROVIDED\n\t *   Array of sources to pass to player.updateSrc()\n\t *   @see https://github.com/kmoskwiak/videojs-resolution-switcher#updatesrcsource\n\t *\n\t * @param {String} options.playerId\n\t *   id to assign to the player element.\n\t *   Defaults to \"player\"\n\t *\n\t * @param {String} options.playerType\n\t *   \"video\" or \"audio\"\n\t *   Defaults to \"video\"\n\t *\n\t * @param {String|Number} options.defaultQuality\n\t *   \"low\", \"high\" or Number\n\t *   @see https://github.com/kmoskwiak/videojs-resolution-switcher#avalible-options\n\t *\n\t * @param {String} options.pathToSwf\n\t *   Path to flash player file (will be passed to videojs as videojs.options.flash.swf)\n\t *\n\t * @param {String} options.locale\n\t *  If specified, will be set as player and ads locale.\n\t *  This may be any ISO 639-1 (two-letter) code.\n\t *\n\t * @param {Boolean} options.autoplay\n\t *   Defaults to false\n\t *\n\t * @param {Boolean} options.controls\n\t *   Defaults to true\n\t *\n\t * @param {Boolean} options.loop\n\t *   The loop attribute causes the video to start over as soon as it ends.\n\t *   Defaults to false\n\t *\n\t * @param {String} options.preload\n\t *   Defaults to \"metadata\"\n\t *\n\t * @param {String} options.poster\n\t *   The width attribute sets the display width of the video (in pixels).\n\t *   This will take effect only if `options.classes` param is set\n\t *   (`vjs-fill` class, used by defaults, sets player width and height to 100%).\n\t *\n\t * @param {Number} options.width\n\t *   The height attribute sets the display height of the video (in pixels).\n\t *\n\t * @param {Number} options.height\n\t *   Player height\n\t *\n\t * @param {Object} options.videojs\n\t *   Any additilnal ptions to pass to videojs.\n\t *   @see  http://docs.videojs.com/docs/guides/options.html\n\t *\n\t * @param {Boolean} options.muted\n\t *   Indicates whether the player should be muted by default.\n\t *   Defaults to false\n\t *\n\t * @param {String} options.skin\n\t *   Skin name.\n\t *   Defaults to \"default\"\n\t *\n\t * @param {Array} options.classes\n\t *   CSS classnames to assign to the player in addition to `video-js`.\n\t *   By default, the following classes are used:\n\t *   `['vjs-default-skin',\n\t *   'vjs-fill',\n\t *   'vjs-big-play-centered']`\n\t *\n\t * @param {Boolean} options.stretch\n\t *   Indicates whether video should stretch to fit the container.\n\t *   Defaults to false\n\t *\n\t * @param {Boolean} options.playOnClick\n\t *   If true, click/touch event on player will start/stop the playback even if controls are disabled.\n\t *   Defaults to false\n\t *\n\t * @param {Boolean|Object} options.downloadButton\n\t *   Indicates whether a download button should be shown in control bar.\n\t * @param {String} options.downloadButton.text\n\t *   Button title.\n\t *   Defaults to \"Download\"\n\t *\n\t * @param {String} options.volumeStyle\n\t *   \"horizontal\" or \"vertical\".\n\t *   Defaults to \"vertical\"\n\t *\n\t * @param {Boolean|Object} options.panorama\n\t *   Used for pamoramic (360-degree) videos.\n\t *   Pass true or options object for videojs-panorama plugin\n\t *   @see https://github.com/yanwsh/videojs-panorama\n\t *   Defaults to false\n\t *\n\t * @param {String} options.crossorigin\n\t *   Used with videojs-panorama plugin.\n\t *   Pass \"anonymous\" to avoid cross domain issue\n\t *   (will work on Chrome and Firefox, not Safari)\n\t *   @see https://github.com/yanwsh/videojs-panorama#cross-domian-issue\n\t *\n\t * @param {Object} options.ads\n\t *   Settings for videojs-ima plugin.\n\t *   @see https://github.com/googleads/videojs-ima#additional-settings\n\t * @param {String} options.ads.adTagUrl\n\t *   Tag url. The only requried setting here.\n\t * @param {String} options.ads.adLabel\n\t *   Replaces the \"Advertisement\" text in the ad label.\n\t * @param {Boolean} options.ads.showControlsForJSAds\n\t *   Defaults to false\n\t *\n\t * @param {Object} options.share\n\t *   Will be passed to videojs-social plugin.\n\t *   @see https://github.com/neuron-digital/videojs-social for details.\n\t * @param {String} options.share.url\n\t *   This is the URL that points to your custom web page\n\t *   which has your video and the meta tags for sharing.\n\t * @param {String} options.share.embedCode\n\t *   Iframe embed code for sharing the video.\n\t *\n\t * @return {Object} the player object.\n\t */\n\tfunction wjplayer(options) {\n\t  return new WJPlayer(options);\n\t}\n\t\n\tvar WJPlayer = function () {\n\t  function WJPlayer(options) {\n\t    _classCallCheck(this, WJPlayer);\n\t\n\t    if (!((typeof options === 'undefined' ? 'undefined' : _typeof(options)) === 'object' && options.containerId)) {\n\t      throw new Error('options.containerId isn\\'t specified');\n\t    }\n\t\n\t    this.defaults = {\n\t      playerId: 'player',\n\t      playerType: 'video',\n\t      sources: [],\n\t      sourcesWithRes: [],\n\t      pathToSwf: '',\n\t      poster: '',\n\t      autoplay: false,\n\t      controls: true,\n\t      loop: false,\n\t      muted: false,\n\t      preload: 'metadata',\n\t      volumeStyle: 'vertical',\n\t      stretch: false,\n\t      playOnClick: false,\n\t      skin: 'default',\n\t      classes: [],\n\t      enableResolutionSwitcher: false\n\t    };\n\t\n\t    this.browser = {\n\t      IS_IOS: /iP(hone|ad|od)/i.test(navigator.userAgent),\n\t      IS_ANDROID: /Android/.test(navigator.userAgent),\n\t      IS_IE: document.documentMode || /Edge/.test(navigator.userAgent), // detect IE8 and above, and edge\n\t      IS_IE11: !!window.MSInputMethodContext && !!document.documentMode\n\t    };\n\t    this.browser.IS_MOBILE = this.browser.IS_IOS || this.browser.IS_ANDROID;\n\t\n\t    this.clickEvent = this.browser.IS_MOBILE ? 'touchend' : 'click';\n\t\n\t    this.options = videojs.mergeOptions(this.defaults, options);\n\t\n\t    // will be passed to videojs\n\t    this.options.videojs = videojs.mergeOptions({\n\t      controls: this.options.controls,\n\t      preload: this.options.preload,\n\t      loop: this.options.loop,\n\t      poster: this.options.poster,\n\t      language: this.options.locale,\n\t      html5: {\n\t        hlsjsConfig: {}\n\t      },\n\t      plugins: {},\n\t      controlBar: {}\n\t    }, this.options.videojs);\n\t\n\t    this.options.classes = ['video-js'].concat(Array.isArray(options.classes) ? options.classes : ['vjs-fill', 'vjs-big-play-centered']);\n\t\n\t    if (this.options.volumeStyle === 'vertical') {\n\t      this.options.videojs.controlBar.volumeMenuButton = {\n\t        inline: false,\n\t        vertical: true\n\t      };\n\t    }\n\t\n\t    if (this.options.playerType === 'video' && videojs.Hls && (!this.browser.IS_MOBILE || this.options.sourcesWithRes.length)) {\n\t      if (this.browser.IS_IE11) {\n\t        // https://github.com/videojs/videojs-contrib-hls/blob/ab9a3986411ca15e3b4983dc03de8d32e9c686a2/README.md#ie11\n\t        // on IE11 force using flash\n\t        this.options.videojs.techOrder = ['flash'];\n\t\n\t        if (!this.options.sources.length && this.options.sourcesWithRes.length) {\n\t          this.options.sources = this.options.sourcesWithRes;\n\t        }\n\t      } else {\n\t        this.options.enableResolutionSwitcher = true;\n\t        // will be passed to videoJsResolutionSwitcher plugin\n\t        this.options.videojs.plugins.videoJsResolutionSwitcher = {\n\t          default: this.options.defaultQuality,\n\t          dynamicLabel: true\n\t        };\n\t      }\n\t    }\n\t\n\t    if (this.options.ads && this.options.ads.adTagUrl) {\n\t      // will be passed to ima plugin\n\t      this.options.ads = videojs.mergeOptions({\n\t        id: this.options.playerId,\n\t        locale: this.options.locale,\n\t        showControlsForJSAds: false\n\t      }, this.options.ads);\n\t    } else {\n\t      this.options.ads = {};\n\t    }\n\t\n\t    this.init();\n\t\n\t    return this.player;\n\t  }\n\t\n\t  _createClass(WJPlayer, [{\n\t    key: 'init',\n\t    value: function init() {\n\t      var _this = this;\n\t\n\t      this.createPlayer();\n\t\n\t      if (this.options.pathToSwf) {\n\t        videojs.options.flash.swf = this.options.pathToSwf;\n\t      }\n\t\n\t      if (this.options.share) {\n\t        videojs.addLanguage('ru', {\n\t          'Share Video': 'Поделиться',\n\t          'Direct Link': 'Прямая ссылка',\n\t          'Embed Code': 'Код для встраивания плеера'\n\t        });\n\t      }\n\t\n\t      // Init player\n\t      this.player = videojs(this.options.playerId, this.options.videojs, function () {\n\t        if (!!_this.options.panorama && _this.player.panorama) {\n\t          _this.player.panorama(_typeof(_this.options.panorama) === 'object' ? _this.options.panorama : {});\n\t          window.addEventListener('resize', function () {\n\t            var canvas = _this.player.getChild('Canvas');\n\t            return canvas.handleResize();\n\t          });\n\t        }\n\t\n\t        // Init resolution switcher plugin\n\t        if (_this.options.enableResolutionSwitcher && _this.options.sourcesWithRes.length) {\n\t          _this.player.updateSrc(_this.options.sourcesWithRes);\n\t        }\n\t\n\t        // Init download button plugin\n\t        if (_this.options.downloadButton && _this.player.downloadButton) {\n\t          _this.player.downloadButton(_this.options.downloadButton);\n\t        }\n\t\n\t        // Init share plugin\n\t        if (_this.options.share) {\n\t          _this.player.social(_this.options.share);\n\t        }\n\t\n\t        if (_this.options.loop) {\n\t          _this.player.loadingSpinner.hide();\n\t        }\n\t\n\t        // autoplay is not supported on mobile devices\n\t        if (_this.options.autoplay && !_this.browser.IS_MOBILE) {\n\t          _this.initAds();\n\t          _this.play();\n\t        } else if (_this.browser.IS_MOBILE) {\n\t          // init ads and start playback on tap\n\t          _this.player.one(_this.clickEvent, function () {\n\t            _this.initAds();\n\t            _this.play();\n\t          });\n\t        } else {\n\t          _this.initAds();\n\t        }\n\t\n\t        // allow to start/stop the playback on click even if controls are disabled\n\t        if (_this.options.playOnClick) {\n\t          _this.player.on(_this.clickEvent, function () {\n\t            if (_this.player.paused()) {\n\t              _this.player.play();\n\t            } else {\n\t              _this.player.pause();\n\t            }\n\t          });\n\t        }\n\t      });\n\t      if (typeof this.player.qualityPickerPlugin === 'function') {\n\t        this.player.qualityPickerPlugin({});\n\t      }\n\t    }\n\t  }, {\n\t    key: 'createPlayer',\n\t    value: function createPlayer() {\n\t      this.container = document.getElementById(this.options.containerId);\n\t\n\t      var classes = this.options.classes;\n\t      classes.push('vjs-' + this.options.skin + '-skin');\n\t\n\t      if (this.browser.IS_IE) {\n\t        classes.push('ie');\n\t      }\n\t\n\t      if (this.options.stretch) {\n\t        classes.push('vjs-stretch');\n\t      }\n\t\n\t      var dumbPlayer = document.createElement(this.options.playerType);\n\t      dumbPlayer.id = this.options.playerId;\n\t      dumbPlayer.className = classes.join(' ');\n\t\n\t      if (this.options.crossorigin) {\n\t        dumbPlayer.setAttribute('crossorigin', this.options.crossorigin);\n\t      }\n\t\n\t      if (this.options.muted) {\n\t        dumbPlayer.setAttribute('muted', '');\n\t      }\n\t\n\t      this.options.sources.forEach(function (source) {\n\t        var contentSrc = document.createElement('source');\n\t        contentSrc.setAttribute('src', source.src);\n\t        contentSrc.setAttribute('type', source.type);\n\t        dumbPlayer.appendChild(contentSrc);\n\t      });\n\t\n\t      this.container.appendChild(dumbPlayer);\n\t    }\n\t  }, {\n\t    key: 'play',\n\t    value: function play() {\n\t      this.player.play();\n\t      this.options.autoplay && this.player.autoplay(true);\n\t    }\n\t  }, {\n\t    key: 'initAds',\n\t    value: function initAds() {\n\t      if (!this.options.ads || !this.options.ads.adTagUrl || !this.player.ima) {\n\t        return;\n\t      }\n\t\n\t      this.player.ima(this.options.ads);\n\t      this.player.ima.initializeAdDisplayContainer();\n\t      this.player.ima.requestAds();\n\t    }\n\t  }]);\n\n\t  return WJPlayer;\n\t}();\n\n\tmodule.exports = exports['default'];\n\n/***/ },\n/* 121 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar require;var require;(function(f){if(true){module.exports=f()}else if(typeof define===\"function\"&&define.amd){define([],f)}else{var g;if(typeof window!==\"undefined\"){g=window}else if(typeof global!==\"undefined\"){g=global}else if(typeof self!==\"undefined\"){g=self}else{g=this}g.Hls = f()}})(function(){var define,module,exports;return (function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return require(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(_dereq_,module,exports){\n\t// Copyright Joyent, Inc. and other Node contributors.\n\t//\n\t// Permission is hereby granted, free of charge, to any person obtaining a\n\t// copy of this software and associated documentation files (the\n\t// \"Software\"), to deal in the Software without restriction, including\n\t// without limitation the rights to use, copy, modify, merge, publish,\n\t// distribute, sublicense, and/or sell copies of the Software, and to permit\n\t// persons to whom the Software is furnished to do so, subject to the\n\t// following conditions:\n\t//\n\t// The above copyright notice and this permission notice shall be included\n\t// in all copies or substantial portions of the Software.\n\t//\n\t// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n\t// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n\t// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n\t// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n\t// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n\t// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n\t// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\t\n\tfunction EventEmitter() {\n\t  this._events = this._events || {};\n\t  this._maxListeners = this._maxListeners || undefined;\n\t}\n\tmodule.exports = EventEmitter;\n\t\n\t// Backwards-compat with node 0.10.x\n\tEventEmitter.EventEmitter = EventEmitter;\n\t\n\tEventEmitter.prototype._events = undefined;\n\tEventEmitter.prototype._maxListeners = undefined;\n\t\n\t// By default EventEmitters will print a warning if more than 10 listeners are\n\t// added to it. This is a useful default which helps finding memory leaks.\n\tEventEmitter.defaultMaxListeners = 10;\n\t\n\t// Obviously not all Emitters should be limited to 10. This function allows\n\t// that to be increased. Set to zero for unlimited.\n\tEventEmitter.prototype.setMaxListeners = function(n) {\n\t  if (!isNumber(n) || n < 0 || isNaN(n))\n\t    throw TypeError('n must be a positive number');\n\t  this._maxListeners = n;\n\t  return this;\n\t};\n\t\n\tEventEmitter.prototype.emit = function(type) {\n\t  var er, handler, len, args, i, listeners;\n\t\n\t  if (!this._events)\n\t    this._events = {};\n\t\n\t  // If there is no 'error' event listener then throw.\n\t  if (type === 'error') {\n\t    if (!this._events.error ||\n\t        (isObject(this._events.error) && !this._events.error.length)) {\n\t      er = arguments[1];\n\t      if (er instanceof Error) {\n\t        throw er; // Unhandled 'error' event\n\t      } else {\n\t        // At least give some kind of context to the user\n\t        var err = new Error('Uncaught, unspecified \"error\" event. (' + er + ')');\n\t        err.context = er;\n\t        throw err;\n\t      }\n\t    }\n\t  }\n\t\n\t  handler = this._events[type];\n\t\n\t  if (isUndefined(handler))\n\t    return false;\n\t\n\t  if (isFunction(handler)) {\n\t    switch (arguments.length) {\n\t      // fast cases\n\t      case 1:\n\t        handler.call(this);\n\t        break;\n\t      case 2:\n\t        handler.call(this, arguments[1]);\n\t        break;\n\t      case 3:\n\t        handler.call(this, arguments[1], arguments[2]);\n\t        break;\n\t      // slower\n\t      default:\n\t        args = Array.prototype.slice.call(arguments, 1);\n\t        handler.apply(this, args);\n\t    }\n\t  } else if (isObject(handler)) {\n\t    args = Array.prototype.slice.call(arguments, 1);\n\t    listeners = handler.slice();\n\t    len = listeners.length;\n\t    for (i = 0; i < len; i++)\n\t      listeners[i].apply(this, args);\n\t  }\n\t\n\t  return true;\n\t};\n\t\n\tEventEmitter.prototype.addListener = function(type, listener) {\n\t  var m;\n\t\n\t  if (!isFunction(listener))\n\t    throw TypeError('listener must be a function');\n\t\n\t  if (!this._events)\n\t    this._events = {};\n\t\n\t  // To avoid recursion in the case that type === \"newListener\"! Before\n\t  // adding it to the listeners, first emit \"newListener\".\n\t  if (this._events.newListener)\n\t    this.emit('newListener', type,\n\t              isFunction(listener.listener) ?\n\t              listener.listener : listener);\n\t\n\t  if (!this._events[type])\n\t    // Optimize the case of one listener. Don't need the extra array object.\n\t    this._events[type] = listener;\n\t  else if (isObject(this._events[type]))\n\t    // If we've already got an array, just append.\n\t    this._events[type].push(listener);\n\t  else\n\t    // Adding the second element, need to change to array.\n\t    this._events[type] = [this._events[type], listener];\n\t\n\t  // Check for listener leak\n\t  if (isObject(this._events[type]) && !this._events[type].warned) {\n\t    if (!isUndefined(this._maxListeners)) {\n\t      m = this._maxListeners;\n\t    } else {\n\t      m = EventEmitter.defaultMaxListeners;\n\t    }\n\t\n\t    if (m && m > 0 && this._events[type].length > m) {\n\t      this._events[type].warned = true;\n\t      console.error('(node) warning: possible EventEmitter memory ' +\n\t                    'leak detected. %d listeners added. ' +\n\t                    'Use emitter.setMaxListeners() to increase limit.',\n\t                    this._events[type].length);\n\t      if (typeof console.trace === 'function') {\n\t        // not supported in IE 10\n\t        console.trace();\n\t      }\n\t    }\n\t  }\n\t\n\t  return this;\n\t};\n\t\n\tEventEmitter.prototype.on = EventEmitter.prototype.addListener;\n\t\n\tEventEmitter.prototype.once = function(type, listener) {\n\t  if (!isFunction(listener))\n\t    throw TypeError('listener must be a function');\n\t\n\t  var fired = false;\n\t\n\t  function g() {\n\t    this.removeListener(type, g);\n\t\n\t    if (!fired) {\n\t      fired = true;\n\t      listener.apply(this, arguments);\n\t    }\n\t  }\n\t\n\t  g.listener = listener;\n\t  this.on(type, g);\n\t\n\t  return this;\n\t};\n\t\n\t// emits a 'removeListener' event iff the listener was removed\n\tEventEmitter.prototype.removeListener = function(type, listener) {\n\t  var list, position, length, i;\n\t\n\t  if (!isFunction(listener))\n\t    throw TypeError('listener must be a function');\n\t\n\t  if (!this._events || !this._events[type])\n\t    return this;\n\t\n\t  list = this._events[type];\n\t  length = list.length;\n\t  position = -1;\n\t\n\t  if (list === listener ||\n\t      (isFunction(list.listener) && list.listener === listener)) {\n\t    delete this._events[type];\n\t    if (this._events.removeListener)\n\t      this.emit('removeListener', type, listener);\n\t\n\t  } else if (isObject(list)) {\n\t    for (i = length; i-- > 0;) {\n\t      if (list[i] === listener ||\n\t          (list[i].listener && list[i].listener === listener)) {\n\t        position = i;\n\t        break;\n\t      }\n\t    }\n\t\n\t    if (position < 0)\n\t      return this;\n\t\n\t    if (list.length === 1) {\n\t      list.length = 0;\n\t      delete this._events[type];\n\t    } else {\n\t      list.splice(position, 1);\n\t    }\n\t\n\t    if (this._events.removeListener)\n\t      this.emit('removeListener', type, listener);\n\t  }\n\t\n\t  return this;\n\t};\n\t\n\tEventEmitter.prototype.removeAllListeners = function(type) {\n\t  var key, listeners;\n\t\n\t  if (!this._events)\n\t    return this;\n\t\n\t  // not listening for removeListener, no need to emit\n\t  if (!this._events.removeListener) {\n\t    if (arguments.length === 0)\n\t      this._events = {};\n\t    else if (this._events[type])\n\t      delete this._events[type];\n\t    return this;\n\t  }\n\t\n\t  // emit removeListener for all listeners on all events\n\t  if (arguments.length === 0) {\n\t    for (key in this._events) {\n\t      if (key === 'removeListener') continue;\n\t      this.removeAllListeners(key);\n\t    }\n\t    this.removeAllListeners('removeListener');\n\t    this._events = {};\n\t    return this;\n\t  }\n\t\n\t  listeners = this._events[type];\n\t\n\t  if (isFunction(listeners)) {\n\t    this.removeListener(type, listeners);\n\t  } else if (listeners) {\n\t    // LIFO order\n\t    while (listeners.length)\n\t      this.removeListener(type, listeners[listeners.length - 1]);\n\t  }\n\t  delete this._events[type];\n\t\n\t  return this;\n\t};\n\t\n\tEventEmitter.prototype.listeners = function(type) {\n\t  var ret;\n\t  if (!this._events || !this._events[type])\n\t    ret = [];\n\t  else if (isFunction(this._events[type]))\n\t    ret = [this._events[type]];\n\t  else\n\t    ret = this._events[type].slice();\n\t  return ret;\n\t};\n\t\n\tEventEmitter.prototype.listenerCount = function(type) {\n\t  if (this._events) {\n\t    var evlistener = this._events[type];\n\t\n\t    if (isFunction(evlistener))\n\t      return 1;\n\t    else if (evlistener)\n\t      return evlistener.length;\n\t  }\n\t  return 0;\n\t};\n\t\n\tEventEmitter.listenerCount = function(emitter, type) {\n\t  return emitter.listenerCount(type);\n\t};\n\t\n\tfunction isFunction(arg) {\n\t  return typeof arg === 'function';\n\t}\n\t\n\tfunction isNumber(arg) {\n\t  return typeof arg === 'number';\n\t}\n\t\n\tfunction isObject(arg) {\n\t  return typeof arg === 'object' && arg !== null;\n\t}\n\t\n\tfunction isUndefined(arg) {\n\t  return arg === void 0;\n\t}\n\t\n\t},{}],2:[function(_dereq_,module,exports){\n\t/* jshint ignore:start */\r\n\t(function(root) { \r\n\t/* jshint ignore:end */\r\n\t\r\n\t  var HASH_SPLIT = /^([^#]*)(.*)$/;\r\n\t  var QUERY_SPLIT = /^([^\\?]*)(.*)$/;\r\n\t  var DOMAIN_SPLIT = /^(([a-z]+:\\/\\/)?[^:\\/]+(?::[0-9]+)?)?(\\/?.*)$/i;\r\n\t\r\n\t  var URLToolkit = {\r\n\t    // build an absolute URL from a relative one using the provided baseURL\r\n\t    // if relativeURL is an absolute URL it will be returned as is.\r\n\t    buildAbsoluteURL: function(baseURL, relativeURL) {\r\n\t      // remove any remaining space and CRLF\r\n\t      relativeURL = relativeURL.trim();\r\n\t      if (/^[a-z]+:/i.test(relativeURL)) {\r\n\t        // complete url, not relative\r\n\t        return relativeURL;\r\n\t      }\r\n\t\r\n\t      var relativeURLQuery = null;\r\n\t      var relativeURLHash = null;\r\n\t\r\n\t      var relativeURLHashSplit = HASH_SPLIT.exec(relativeURL);\r\n\t      if (relativeURLHashSplit) {\r\n\t        relativeURLHash = relativeURLHashSplit[2];\r\n\t        relativeURL = relativeURLHashSplit[1];\r\n\t      }\r\n\t      var relativeURLQuerySplit = QUERY_SPLIT.exec(relativeURL);\r\n\t      if (relativeURLQuerySplit) {\r\n\t        relativeURLQuery = relativeURLQuerySplit[2];\r\n\t        relativeURL = relativeURLQuerySplit[1];\r\n\t      }\r\n\t\r\n\t      var baseURLHashSplit = HASH_SPLIT.exec(baseURL);\r\n\t      if (baseURLHashSplit) {\r\n\t        baseURL = baseURLHashSplit[1];\r\n\t      }\r\n\t      var baseURLQuerySplit = QUERY_SPLIT.exec(baseURL);\r\n\t      if (baseURLQuerySplit) {\r\n\t        baseURL = baseURLQuerySplit[1];\r\n\t      }\r\n\t\r\n\t      var baseURLDomainSplit = DOMAIN_SPLIT.exec(baseURL);\r\n\t      if (!baseURLDomainSplit) {\r\n\t        throw new Error('Error trying to parse base URL.');\r\n\t      }\r\n\t      \r\n\t      // e.g. 'http://', 'https://', ''\r\n\t      var baseURLProtocol = baseURLDomainSplit[2] || '';\r\n\t      // e.g. 'http://example.com', '//example.com', 'example.com', ''\r\n\t      var baseURLProtocolDomain = baseURLDomainSplit[1] || '';\r\n\t      // e.g. '/a/b/c/playlist.m3u8', 'a/b/c/playlist.m3u8'\r\n\t      var baseURLPath = baseURLDomainSplit[3];\r\n\t      if (baseURLPath.indexOf('/') !== 0 && baseURLProtocolDomain !== '') {\r\n\t        // this handles a base url of http://example.com (missing last slash)\r\n\t        baseURLPath = '/'+baseURLPath;\r\n\t      }\r\n\t\r\n\t      var builtURL = null;\r\n\t      if (/^\\/\\//.test(relativeURL)) {\r\n\t        // relative url starts wth '//' so copy protocol (which may be '' if baseUrl didn't provide one)\r\n\t        builtURL = baseURLProtocol+URLToolkit.buildAbsolutePath('', relativeURL.substring(2));\r\n\t      }\r\n\t      else if (/^\\//.test(relativeURL)) {\r\n\t        // relative url starts with '/' so start from root of domain\r\n\t        builtURL = baseURLProtocolDomain+'/'+URLToolkit.buildAbsolutePath('', relativeURL.substring(1));\r\n\t      }\r\n\t      else {\r\n\t        builtURL = URLToolkit.buildAbsolutePath(baseURLProtocolDomain+baseURLPath, relativeURL);\r\n\t      }\r\n\t\r\n\t      // put the query and hash parts back\r\n\t      if (relativeURLQuery) {\r\n\t        builtURL += relativeURLQuery;\r\n\t      }\r\n\t      if (relativeURLHash) {\r\n\t        builtURL += relativeURLHash;\r\n\t      }\r\n\t      return builtURL;\r\n\t    },\r\n\t\r\n\t    // build an absolute path using the provided basePath\r\n\t    // adapted from https://developer.mozilla.org/en-US/docs/Web/API/document/cookie#Using_relative_URLs_in_the_path_parameter\r\n\t    // this does not handle the case where relativePath is \"/\" or \"//\". These cases should be handled outside this.\r\n\t    buildAbsolutePath: function(basePath, relativePath) {\r\n\t      var sRelPath = relativePath;\r\n\t      var nUpLn, sDir = '', sPath = basePath.replace(/[^\\/]*$/, sRelPath.replace(/(\\/|^)(?:\\.?\\/+)+/g, '$1'));\r\n\t      for (var nEnd, nStart = 0; nEnd = sPath.indexOf('/../', nStart), nEnd > -1; nStart = nEnd + nUpLn) {\r\n\t        nUpLn = /^\\/(?:\\.\\.\\/)*/.exec(sPath.slice(nEnd))[0].length;\r\n\t        sDir = (sDir + sPath.substring(nStart, nEnd)).replace(new RegExp('(?:\\\\\\/+[^\\\\\\/]*){0,' + ((nUpLn - 1) / 3) + '}$'), '/');\r\n\t      }\r\n\t      return sDir + sPath.substr(nStart);\r\n\t    }\r\n\t  };\r\n\t\r\n\t/* jshint ignore:start */\r\n\t  if(typeof exports === 'object' && typeof module === 'object')\r\n\t    module.exports = URLToolkit;\r\n\t  else if(typeof define === 'function' && define.amd)\r\n\t    define([], function() { return URLToolkit; });\r\n\t  else if(typeof exports === 'object')\r\n\t    exports[\"URLToolkit\"] = URLToolkit;\r\n\t  else\r\n\t    root[\"URLToolkit\"] = URLToolkit;\r\n\t})(this);\r\n\t/* jshint ignore:end */\r\n\t\n\t},{}],3:[function(_dereq_,module,exports){\n\tvar bundleFn = arguments[3];\n\tvar sources = arguments[4];\n\tvar cache = arguments[5];\n\t\n\tvar stringify = JSON.stringify;\n\t\n\tmodule.exports = function (fn, options) {\n\t    var wkey;\n\t    var cacheKeys = Object.keys(cache);\n\t\n\t    for (var i = 0, l = cacheKeys.length; i < l; i++) {\n\t        var key = cacheKeys[i];\n\t        var exp = cache[key].exports;\n\t        // Using babel as a transpiler to use esmodule, the export will always\n\t        // be an object with the default export as a property of it. To ensure\n\t        // the existing api and babel esmodule exports are both supported we\n\t        // check for both\n\t        if (exp === fn || exp && exp.default === fn) {\n\t            wkey = key;\n\t            break;\n\t        }\n\t    }\n\t\n\t    if (!wkey) {\n\t        wkey = Math.floor(Math.pow(16, 8) * Math.random()).toString(16);\n\t        var wcache = {};\n\t        for (var i = 0, l = cacheKeys.length; i < l; i++) {\n\t            var key = cacheKeys[i];\n\t            wcache[key] = key;\n\t        }\n\t        sources[wkey] = [\n\t            Function(['require','module','exports'], '(' + fn + ')(self)'),\n\t            wcache\n\t        ];\n\t    }\n\t    var skey = Math.floor(Math.pow(16, 8) * Math.random()).toString(16);\n\t\n\t    var scache = {}; scache[wkey] = wkey;\n\t    sources[skey] = [\n\t        Function(['require'], (\n\t            // try to call default if defined to also support babel esmodule\n\t            // exports\n\t            'var f = require(' + stringify(wkey) + ');' +\n\t            '(f.default ? f.default : f)(self);'\n\t        )),\n\t        scache\n\t    ];\n\t\n\t    var workerSources = {};\n\t    resolveSources(skey);\n\t\n\t    function resolveSources(key) {\n\t        workerSources[key] = true;\n\t\n\t        for (var depPath in sources[key][1]) {\n\t            var depKey = sources[key][1][depPath];\n\t            if (!workerSources[depKey]) {\n\t                resolveSources(depKey);\n\t            }\n\t        }\n\t    }\n\t\n\t    var src = '(' + bundleFn + ')({'\n\t        + Object.keys(workerSources).map(function (key) {\n\t            return stringify(key) + ':['\n\t                + sources[key][0]\n\t                + ',' + stringify(sources[key][1]) + ']'\n\t            ;\n\t        }).join(',')\n\t        + '},{},[' + stringify(skey) + '])'\n\t    ;\n\t\n\t    var URL = window.URL || window.webkitURL || window.mozURL || window.msURL;\n\t\n\t    var blob = new Blob([src], { type: 'text/javascript' });\n\t    if (options && options.bare) { return blob; }\n\t    var workerUrl = URL.createObjectURL(blob);\n\t    var worker = new Worker(workerUrl);\n\t    worker.objectURL = workerUrl;\n\t    return worker;\n\t};\n\t\n\t},{}],4:[function(_dereq_,module,exports){\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _events = _dereq_(28);\n\t\n\tvar _events2 = _interopRequireDefault(_events);\n\t\n\tvar _eventHandler = _dereq_(27);\n\t\n\tvar _eventHandler2 = _interopRequireDefault(_eventHandler);\n\t\n\tvar _bufferHelper = _dereq_(30);\n\t\n\tvar _bufferHelper2 = _interopRequireDefault(_bufferHelper);\n\t\n\tvar _errors = _dereq_(26);\n\t\n\tvar _logger = _dereq_(45);\n\t\n\tvar _ewmaBandwidthEstimator = _dereq_(9);\n\t\n\tvar _ewmaBandwidthEstimator2 = _interopRequireDefault(_ewmaBandwidthEstimator);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /*\n\t                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * simple ABR Controller\n\tcompute next level based on last fragment bw heuristics\n\timplement an abandon rules triggered if we have less than 2 frag buffered and if computed bw shows that we risk buffer stalling\n\t                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                */\n\t\n\tvar AbrController = function (_EventHandler) {\n\t  _inherits(AbrController, _EventHandler);\n\t\n\t  function AbrController(hls) {\n\t    _classCallCheck(this, AbrController);\n\t\n\t    var _this = _possibleConstructorReturn(this, (AbrController.__proto__ || Object.getPrototypeOf(AbrController)).call(this, hls, _events2.default.FRAG_LOADING, _events2.default.FRAG_LOADED, _events2.default.FRAG_BUFFERED, _events2.default.ERROR));\n\t\n\t    _this.lastLoadedFragLevel = 0;\n\t    _this._autoLevelCapping = -1;\n\t    _this._nextAutoLevel = -1;\n\t    _this.hls = hls;\n\t    _this.onCheck = _this.abandonRulesCheck.bind(_this);\n\t    return _this;\n\t  }\n\t\n\t  _createClass(AbrController, [{\n\t    key: 'destroy',\n\t    value: function destroy() {\n\t      this.clearTimer();\n\t      _eventHandler2.default.prototype.destroy.call(this);\n\t    }\n\t  }, {\n\t    key: 'onFragLoading',\n\t    value: function onFragLoading(data) {\n\t      var frag = data.frag;\n\t      if (frag.type === 'main') {\n\t        if (!this.timer) {\n\t          this.timer = setInterval(this.onCheck, 100);\n\t        }\n\t        // lazy init of bw Estimator, rationale is that we use different params for Live/VoD\n\t        // so we need to wait for stream manifest / playlist type to instantiate it.\n\t        if (!this.bwEstimator) {\n\t          var hls = this.hls,\n\t              level = data.frag.level,\n\t              isLive = hls.levels[level].details.live,\n\t              config = hls.config,\n\t              ewmaFast = void 0,\n\t              ewmaSlow = void 0;\n\t\n\t          if (isLive) {\n\t            ewmaFast = config.abrEwmaFastLive;\n\t            ewmaSlow = config.abrEwmaSlowLive;\n\t          } else {\n\t            ewmaFast = config.abrEwmaFastVoD;\n\t            ewmaSlow = config.abrEwmaSlowVoD;\n\t          }\n\t          this.bwEstimator = new _ewmaBandwidthEstimator2.default(hls, ewmaSlow, ewmaFast, config.abrEwmaDefaultEstimate);\n\t        }\n\t        this.fragCurrent = frag;\n\t      }\n\t    }\n\t  }, {\n\t    key: 'abandonRulesCheck',\n\t    value: function abandonRulesCheck() {\n\t      /*\n\t        monitor fragment retrieval time...\n\t        we compute expected time of arrival of the complete fragment.\n\t        we compare it to expected time of buffer starvation\n\t      */\n\t      var hls = this.hls,\n\t          v = hls.media,\n\t          frag = this.fragCurrent,\n\t          loader = frag.loader,\n\t          minAutoLevel = this.minAutoLevel;\n\t\n\t      // if loader has been destroyed or loading has been aborted, stop timer and return\n\t      if (!loader || loader.stats && loader.stats.aborted) {\n\t        _logger.logger.warn('frag loader destroy or aborted, disarm abandonRules');\n\t        this.clearTimer();\n\t        return;\n\t      }\n\t      var stats = loader.stats;\n\t      /* only monitor frag retrieval time if\n\t      (video not paused OR first fragment being loaded(ready state === HAVE_NOTHING = 0)) AND autoswitching enabled AND not lowest level (=> means that we have several levels) */\n\t      if (v && (!v.paused && v.playbackRate !== 0 || !v.readyState) && frag.autoLevel && frag.level) {\n\t        var requestDelay = performance.now() - stats.trequest,\n\t            playbackRate = Math.abs(v.playbackRate);\n\t        // monitor fragment load progress after half of expected fragment duration,to stabilize bitrate\n\t        if (requestDelay > 500 * frag.duration / playbackRate) {\n\t          var levels = hls.levels,\n\t              loadRate = Math.max(1, stats.bw ? stats.bw / 8 : stats.loaded * 1000 / requestDelay),\n\t              // byte/s; at least 1 byte/s to avoid division by zero\n\t          // compute expected fragment length using frag duration and level bitrate. also ensure that expected len is gte than already loaded size\n\t          level = levels[frag.level],\n\t              levelBitrate = level.realBitrate ? Math.max(level.realBitrate, level.bitrate) : level.bitrate,\n\t              expectedLen = stats.total ? stats.total : Math.max(stats.loaded, Math.round(frag.duration * levelBitrate / 8)),\n\t              pos = v.currentTime,\n\t              fragLoadedDelay = (expectedLen - stats.loaded) / loadRate,\n\t              bufferStarvationDelay = (_bufferHelper2.default.bufferInfo(v, pos, hls.config.maxBufferHole).end - pos) / playbackRate;\n\t          // consider emergency switch down only if we have less than 2 frag buffered AND\n\t          // time to finish loading current fragment is bigger than buffer starvation delay\n\t          // ie if we risk buffer starvation if bw does not increase quickly\n\t          if (bufferStarvationDelay < 2 * frag.duration / playbackRate && fragLoadedDelay > bufferStarvationDelay) {\n\t            var fragLevelNextLoadedDelay = void 0,\n\t                nextLoadLevel = void 0;\n\t            // lets iterate through lower level and try to find the biggest one that could avoid rebuffering\n\t            // we start from current level - 1 and we step down , until we find a matching level\n\t            for (nextLoadLevel = frag.level - 1; nextLoadLevel > minAutoLevel; nextLoadLevel--) {\n\t              // compute time to load next fragment at lower level\n\t              // 0.8 : consider only 80% of current bw to be conservative\n\t              // 8 = bits per byte (bps/Bps)\n\t              var levelNextBitrate = levels[nextLoadLevel].realBitrate ? Math.max(levels[nextLoadLevel].realBitrate, levels[nextLoadLevel].bitrate) : levels[nextLoadLevel].bitrate;\n\t              fragLevelNextLoadedDelay = frag.duration * levelNextBitrate / (8 * 0.8 * loadRate);\n\t              if (fragLevelNextLoadedDelay < bufferStarvationDelay) {\n\t                // we found a lower level that be rebuffering free with current estimated bw !\n\t                break;\n\t              }\n\t            }\n\t            // only emergency switch down if it takes less time to load new fragment at lowest level instead\n\t            // of finishing loading current one ...\n\t            if (fragLevelNextLoadedDelay < fragLoadedDelay) {\n\t              _logger.logger.warn('loading too slow, abort fragment loading and switch to level ' + nextLoadLevel + ':fragLoadedDelay[' + nextLoadLevel + ']<fragLoadedDelay[' + (frag.level - 1) + '];bufferStarvationDelay:' + fragLevelNextLoadedDelay.toFixed(1) + '<' + fragLoadedDelay.toFixed(1) + ':' + bufferStarvationDelay.toFixed(1));\n\t              // force next load level in auto mode\n\t              hls.nextLoadLevel = nextLoadLevel;\n\t              // update bw estimate for this fragment before cancelling load (this will help reducing the bw)\n\t              this.bwEstimator.sample(requestDelay, stats.loaded);\n\t              //abort fragment loading\n\t              loader.abort();\n\t              // stop abandon rules timer\n\t              this.clearTimer();\n\t              hls.trigger(_events2.default.FRAG_LOAD_EMERGENCY_ABORTED, { frag: frag, stats: stats });\n\t            }\n\t          }\n\t        }\n\t      }\n\t    }\n\t  }, {\n\t    key: 'onFragLoaded',\n\t    value: function onFragLoaded(data) {\n\t      var frag = data.frag;\n\t      if (frag.type === 'main') {\n\t        // stop monitoring bw once frag loaded\n\t        this.clearTimer();\n\t        // store level id after successful fragment load\n\t        this.lastLoadedFragLevel = frag.level;\n\t        // reset forced auto level value so that next level will be selected\n\t        this._nextAutoLevel = -1;\n\t\n\t        // compute level average bitrate\n\t        var level = this.hls.levels[frag.level];\n\t        var loadedBytes = (level.loaded ? level.loaded.bytes : 0) + data.stats.loaded;\n\t        var loadedDuration = (level.loaded ? level.loaded.duration : 0) + data.frag.duration;\n\t        level.loaded = { bytes: loadedBytes, duration: loadedDuration };\n\t        level.realBitrate = Math.round(8 * loadedBytes / loadedDuration);\n\t        // if fragment has been loaded to perform a bitrate test,\n\t        if (data.frag.bitrateTest) {\n\t          var stats = data.stats;\n\t          stats.tparsed = stats.tbuffered = stats.tload;\n\t          this.onFragBuffered(data);\n\t        }\n\t      }\n\t    }\n\t  }, {\n\t    key: 'onFragBuffered',\n\t    value: function onFragBuffered(data) {\n\t      var stats = data.stats,\n\t          frag = data.frag;\n\t      // only update stats on first frag buffering\n\t      // if same frag is loaded multiple times, it might be in browser cache, and loaded quickly\n\t      // and leading to wrong bw estimation\n\t      // on bitrate test, also only update stats once (if tload = tbuffered == on FRAG_LOADED)\n\t      if (stats.aborted !== true && frag.loadCounter === 1 && frag.type === 'main' && (!frag.bitrateTest || stats.tload === stats.tbuffered)) {\n\t        // use tparsed-trequest instead of tbuffered-trequest to compute fragLoadingProcessing; rationale is that  buffer appending only happens once media is attached\n\t        // in case we use config.startFragPrefetch while media is not attached yet, fragment might be parsed while media not attached yet, but it will only be buffered on media attached\n\t        // as a consequence it could happen really late in the process. meaning that appending duration might appears huge ... leading to underestimated throughput estimation\n\t        var fragLoadingProcessingMs = stats.tparsed - stats.trequest;\n\t        _logger.logger.log('latency/loading/parsing/append/kbps:' + Math.round(stats.tfirst - stats.trequest) + '/' + Math.round(stats.tload - stats.tfirst) + '/' + Math.round(stats.tparsed - stats.tload) + '/' + Math.round(stats.tbuffered - stats.tparsed) + '/' + Math.round(8 * stats.loaded / (stats.tbuffered - stats.trequest)));\n\t        this.bwEstimator.sample(fragLoadingProcessingMs, stats.loaded);\n\t        // if fragment has been loaded to perform a bitrate test, (hls.startLevel = -1), store bitrate test delay duration\n\t        if (frag.bitrateTest) {\n\t          this.bitrateTestDelay = fragLoadingProcessingMs / 1000;\n\t        } else {\n\t          this.bitrateTestDelay = 0;\n\t        }\n\t      }\n\t    }\n\t  }, {\n\t    key: 'onError',\n\t    value: function onError(data) {\n\t      // stop timer in case of frag loading error\n\t      switch (data.details) {\n\t        case _errors.ErrorDetails.FRAG_LOAD_ERROR:\n\t        case _errors.ErrorDetails.FRAG_LOAD_TIMEOUT:\n\t          this.clearTimer();\n\t          break;\n\t        default:\n\t          break;\n\t      }\n\t    }\n\t  }, {\n\t    key: 'clearTimer',\n\t    value: function clearTimer() {\n\t      if (this.timer) {\n\t        clearInterval(this.timer);\n\t        this.timer = null;\n\t      }\n\t    }\n\t\n\t    /** Return the capping/max level value that could be used by automatic level selection algorithm **/\n\t\n\t  }, {\n\t    key: 'findBestLevel',\n\t    value: function findBestLevel(currentLevel, currentFragDuration, currentBw, minAutoLevel, maxAutoLevel, maxFetchDuration, bwFactor, bwUpFactor, levels) {\n\t      for (var i = maxAutoLevel; i >= minAutoLevel; i--) {\n\t        var levelInfo = levels[i],\n\t            levelDetails = levelInfo.details,\n\t            avgDuration = levelDetails ? levelDetails.totalduration / levelDetails.fragments.length : currentFragDuration,\n\t            live = levelDetails ? levelDetails.live : false,\n\t            adjustedbw = void 0;\n\t        // follow algorithm captured from stagefright :\n\t        // https://android.googlesource.com/platform/frameworks/av/+/master/media/libstagefright/httplive/LiveSession.cpp\n\t        // Pick the highest bandwidth stream below or equal to estimated bandwidth.\n\t        // consider only 80% of the available bandwidth, but if we are switching up,\n\t        // be even more conservative (70%) to avoid overestimating and immediately\n\t        // switching back.\n\t        if (i <= currentLevel) {\n\t          adjustedbw = bwFactor * currentBw;\n\t        } else {\n\t          adjustedbw = bwUpFactor * currentBw;\n\t        }\n\t        var bitrate = levels[i].realBitrate ? Math.max(levels[i].realBitrate, levels[i].bitrate) : levels[i].bitrate,\n\t            fetchDuration = bitrate * avgDuration / adjustedbw;\n\t\n\t        _logger.logger.trace('level/adjustedbw/bitrate/avgDuration/maxFetchDuration/fetchDuration: ' + i + '/' + Math.round(adjustedbw) + '/' + bitrate + '/' + avgDuration + '/' + maxFetchDuration + '/' + fetchDuration);\n\t        // if adjusted bw is greater than level bitrate AND\n\t        if (adjustedbw > bitrate && (\n\t        // fragment fetchDuration unknown OR live stream OR fragment fetchDuration less than max allowed fetch duration, then this level matches\n\t        // we don't account for max Fetch Duration for live streams, this is to avoid switching down when near the edge of live sliding window ...\n\t        !fetchDuration || live || fetchDuration < maxFetchDuration)) {\n\t          // as we are looping from highest to lowest, this will return the best achievable quality level\n\t\n\t          return i;\n\t        }\n\t      }\n\t      // not enough time budget even with quality level 0 ... rebuffering might happen\n\t      return -1;\n\t    }\n\t  }, {\n\t    key: 'autoLevelCapping',\n\t    get: function get() {\n\t      return this._autoLevelCapping;\n\t    }\n\t\n\t    /** set the capping/max level value that could be used by automatic level selection algorithm **/\n\t    ,\n\t    set: function set(newLevel) {\n\t      this._autoLevelCapping = newLevel;\n\t    }\n\t  }, {\n\t    key: 'nextAutoLevel',\n\t    get: function get() {\n\t      var nextAutoLevel = this._nextAutoLevel,\n\t          bwEstimator = this.bwEstimator,\n\t          hls = this.hls,\n\t          levels = hls.levels,\n\t          minAutoBitrate = hls.config.minAutoBitrate;\n\t      // in case next auto level has been forced, and bw not available or not reliable\n\t      if (nextAutoLevel !== -1 && (!bwEstimator || !bwEstimator.canEstimate())) {\n\t        // cap next auto level by max auto level\n\t        return Math.min(nextAutoLevel, this.maxAutoLevel);\n\t      }\n\t      // compute next level using ABR logic\n\t      var nextABRAutoLevel = this.nextABRAutoLevel;\n\t      if (nextAutoLevel !== -1) {\n\t        // nextAutoLevel is defined, use it to cap ABR computed quality level\n\t        nextABRAutoLevel = Math.min(nextAutoLevel, nextABRAutoLevel);\n\t      }\n\t      if (minAutoBitrate !== undefined) {\n\t        var levelNextBitrate = levels[nextABRAutoLevel].realBitrate ? Math.max(levels[nextABRAutoLevel].realBitrate, levels[nextABRAutoLevel].bitrate) : levels[nextABRAutoLevel].bitrate;\n\t        while (levelNextBitrate < minAutoBitrate) {\n\t          nextABRAutoLevel++;\n\t        }\n\t      }\n\t      return nextABRAutoLevel;\n\t    },\n\t    set: function set(nextLevel) {\n\t      this._nextAutoLevel = nextLevel;\n\t    }\n\t  }, {\n\t    key: 'minAutoLevel',\n\t    get: function get() {\n\t      var hls = this.hls,\n\t          levels = hls.levels,\n\t          minAutoBitrate = hls.config.minAutoBitrate,\n\t          len = levels ? levels.length : 0;\n\t      for (var i = 0; i < len; i++) {\n\t        var levelNextBitrate = levels[i].realBitrate ? Math.max(levels[i].realBitrate, levels[i].bitrate) : levels[i].bitrate;\n\t        if (levelNextBitrate > minAutoBitrate) {\n\t          return i;\n\t        }\n\t      }\n\t      return 0;\n\t    }\n\t  }, {\n\t    key: 'maxAutoLevel',\n\t    get: function get() {\n\t      var levels = this.hls.levels,\n\t          autoLevelCapping = this._autoLevelCapping,\n\t          maxAutoLevel;\n\t      if (autoLevelCapping === -1 && levels && levels.length) {\n\t        maxAutoLevel = levels.length - 1;\n\t      } else {\n\t        maxAutoLevel = autoLevelCapping;\n\t      }\n\t      return maxAutoLevel;\n\t    }\n\t  }, {\n\t    key: 'nextABRAutoLevel',\n\t    get: function get() {\n\t      var hls = this.hls,\n\t          maxAutoLevel = this.maxAutoLevel,\n\t          levels = hls.levels,\n\t          config = hls.config,\n\t          minAutoLevel = this.minAutoLevel;\n\t      var v = hls.media,\n\t          currentLevel = this.lastLoadedFragLevel,\n\t          currentFragDuration = this.fragCurrent ? this.fragCurrent.duration : 0,\n\t          pos = v ? v.currentTime : 0,\n\t\n\t      // playbackRate is the absolute value of the playback rate; if v.playbackRate is 0, we use 1 to load as\n\t      // if we're playing back at the normal rate.\n\t      playbackRate = v && v.playbackRate !== 0 ? Math.abs(v.playbackRate) : 1.0,\n\t          avgbw = this.bwEstimator ? this.bwEstimator.getEstimate() : config.abrEwmaDefaultEstimate,\n\t\n\t      // bufferStarvationDelay is the wall-clock time left until the playback buffer is exhausted.\n\t      bufferStarvationDelay = (_bufferHelper2.default.bufferInfo(v, pos, config.maxBufferHole).end - pos) / playbackRate;\n\t\n\t      // First, look to see if we can find a level matching with our avg bandwidth AND that could also guarantee no rebuffering at all\n\t      var bestLevel = this.findBestLevel(currentLevel, currentFragDuration, avgbw, minAutoLevel, maxAutoLevel, bufferStarvationDelay, config.abrBandWidthFactor, config.abrBandWidthUpFactor, levels);\n\t      if (bestLevel >= 0) {\n\t        return bestLevel;\n\t      } else {\n\t        _logger.logger.trace('rebuffering expected to happen, lets try to find a quality level minimizing the rebuffering');\n\t        // not possible to get rid of rebuffering ... let's try to find level that will guarantee less than maxStarvationDelay of rebuffering\n\t        // if no matching level found, logic will return 0\n\t        var maxStarvationDelay = currentFragDuration ? Math.min(currentFragDuration, config.maxStarvationDelay) : config.maxStarvationDelay,\n\t            bwFactor = config.abrBandWidthFactor,\n\t            bwUpFactor = config.abrBandWidthUpFactor;\n\t        if (bufferStarvationDelay === 0) {\n\t          // in case buffer is empty, let's check if previous fragment was loaded to perform a bitrate test\n\t          var bitrateTestDelay = this.bitrateTestDelay;\n\t          if (bitrateTestDelay) {\n\t            // if it is the case, then we need to adjust our max starvation delay using maxLoadingDelay config value\n\t            // max video loading delay used in  automatic start level selection :\n\t            // in that mode ABR controller will ensure that video loading time (ie the time to fetch the first fragment at lowest quality level +\n\t            // the time to fetch the fragment at the appropriate quality level is less than ```maxLoadingDelay``` )\n\t            // cap maxLoadingDelay and ensure it is not bigger 'than bitrate test' frag duration\n\t            var maxLoadingDelay = currentFragDuration ? Math.min(currentFragDuration, config.maxLoadingDelay) : config.maxLoadingDelay;\n\t            maxStarvationDelay = maxLoadingDelay - bitrateTestDelay;\n\t            _logger.logger.trace('bitrate test took ' + Math.round(1000 * bitrateTestDelay) + 'ms, set first fragment max fetchDuration to ' + Math.round(1000 * maxStarvationDelay) + ' ms');\n\t            // don't use conservative factor on bitrate test\n\t            bwFactor = bwUpFactor = 1;\n\t          }\n\t        }\n\t        bestLevel = this.findBestLevel(currentLevel, currentFragDuration, avgbw, minAutoLevel, maxAutoLevel, bufferStarvationDelay + maxStarvationDelay, bwFactor, bwUpFactor, levels);\n\t        return Math.max(bestLevel, 0);\n\t      }\n\t    }\n\t  }]);\n\t\n\t  return AbrController;\n\t}(_eventHandler2.default);\n\t\n\texports.default = AbrController;\n\t\n\t},{\"26\":26,\"27\":27,\"28\":28,\"30\":30,\"45\":45,\"9\":9}],5:[function(_dereq_,module,exports){\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _binarySearch = _dereq_(41);\n\t\n\tvar _binarySearch2 = _interopRequireDefault(_binarySearch);\n\t\n\tvar _bufferHelper = _dereq_(30);\n\t\n\tvar _bufferHelper2 = _interopRequireDefault(_bufferHelper);\n\t\n\tvar _demuxer = _dereq_(22);\n\t\n\tvar _demuxer2 = _interopRequireDefault(_demuxer);\n\t\n\tvar _events = _dereq_(28);\n\t\n\tvar _events2 = _interopRequireDefault(_events);\n\t\n\tvar _eventHandler = _dereq_(27);\n\t\n\tvar _eventHandler2 = _interopRequireDefault(_eventHandler);\n\t\n\tvar _levelHelper = _dereq_(31);\n\t\n\tvar _levelHelper2 = _interopRequireDefault(_levelHelper);\n\t\n\tvar _timeRanges = _dereq_(46);\n\t\n\tvar _timeRanges2 = _interopRequireDefault(_timeRanges);\n\t\n\tvar _errors = _dereq_(26);\n\t\n\tvar _logger = _dereq_(45);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /*\n\t                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * Audio Stream Controller\n\t                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               */\n\t\n\tvar State = {\n\t  STOPPED: 'STOPPED',\n\t  STARTING: 'STARTING',\n\t  IDLE: 'IDLE',\n\t  PAUSED: 'PAUSED',\n\t  KEY_LOADING: 'KEY_LOADING',\n\t  FRAG_LOADING: 'FRAG_LOADING',\n\t  FRAG_LOADING_WAITING_RETRY: 'FRAG_LOADING_WAITING_RETRY',\n\t  WAITING_TRACK: 'WAITING_TRACK',\n\t  PARSING: 'PARSING',\n\t  PARSED: 'PARSED',\n\t  BUFFER_FLUSHING: 'BUFFER_FLUSHING',\n\t  ENDED: 'ENDED',\n\t  ERROR: 'ERROR',\n\t  WAITING_INIT_PTS: 'WAITING_INIT_PTS'\n\t};\n\t\n\tvar AudioStreamController = function (_EventHandler) {\n\t  _inherits(AudioStreamController, _EventHandler);\n\t\n\t  function AudioStreamController(hls) {\n\t    _classCallCheck(this, AudioStreamController);\n\t\n\t    var _this = _possibleConstructorReturn(this, (AudioStreamController.__proto__ || Object.getPrototypeOf(AudioStreamController)).call(this, hls, _events2.default.MEDIA_ATTACHED, _events2.default.MEDIA_DETACHING, _events2.default.AUDIO_TRACKS_UPDATED, _events2.default.AUDIO_TRACK_SWITCHING, _events2.default.AUDIO_TRACK_LOADED, _events2.default.KEY_LOADED, _events2.default.FRAG_LOADED, _events2.default.FRAG_PARSING_INIT_SEGMENT, _events2.default.FRAG_PARSING_DATA, _events2.default.FRAG_PARSED, _events2.default.ERROR, _events2.default.BUFFER_CREATED, _events2.default.BUFFER_APPENDED, _events2.default.BUFFER_FLUSHED, _events2.default.INIT_PTS_FOUND));\n\t\n\t    _this.config = hls.config;\n\t    _this.audioCodecSwap = false;\n\t    _this.ticks = 0;\n\t    _this._state = State.STOPPED;\n\t    _this.ontick = _this.tick.bind(_this);\n\t    _this.initPTS = [];\n\t    _this.waitingFragment = null;\n\t    return _this;\n\t  }\n\t\n\t  _createClass(AudioStreamController, [{\n\t    key: 'destroy',\n\t    value: function destroy() {\n\t      this.stopLoad();\n\t      if (this.timer) {\n\t        clearInterval(this.timer);\n\t        this.timer = null;\n\t      }\n\t      _eventHandler2.default.prototype.destroy.call(this);\n\t      this.state = State.STOPPED;\n\t    }\n\t\n\t    //Signal that video PTS was found\n\t\n\t  }, {\n\t    key: 'onInitPtsFound',\n\t    value: function onInitPtsFound(data) {\n\t      var demuxerId = data.id,\n\t          cc = data.cc,\n\t          initPTS = data.initPTS;\n\t      if (demuxerId === 'main') {\n\t        //Always update the new INIT PTS\n\t        //Can change due level switch\n\t        this.initPTS[cc] = initPTS;\n\t        _logger.logger.log('InitPTS for cc:' + cc + ' found from video track:' + initPTS);\n\t\n\t        //If we are waiting we need to demux/remux the waiting frag\n\t        //With the new initPTS\n\t        if (this.state === State.WAITING_INIT_PTS) {\n\t          _logger.logger.log('sending pending audio frag to demuxer');\n\t          this.state = State.FRAG_LOADING;\n\t          //We have audio frag waiting or video pts\n\t          //Let process it\n\t          this.onFragLoaded(this.waitingFragment);\n\t          //Lets clean the waiting frag\n\t          this.waitingFragment = null;\n\t        }\n\t      }\n\t    }\n\t  }, {\n\t    key: 'startLoad',\n\t    value: function startLoad(startPosition) {\n\t      if (this.tracks) {\n\t        var lastCurrentTime = this.lastCurrentTime;\n\t        this.stopLoad();\n\t        if (!this.timer) {\n\t          this.timer = setInterval(this.ontick, 100);\n\t        }\n\t        this.fragLoadError = 0;\n\t        if (lastCurrentTime > 0 && startPosition === -1) {\n\t          _logger.logger.log('audio:override startPosition with lastCurrentTime @' + lastCurrentTime.toFixed(3));\n\t          this.state = State.IDLE;\n\t        } else {\n\t          this.lastCurrentTime = this.startPosition ? this.startPosition : startPosition;\n\t          this.state = State.STARTING;\n\t        }\n\t        this.nextLoadPosition = this.startPosition = this.lastCurrentTime;\n\t        this.tick();\n\t      } else {\n\t        this.startPosition = startPosition;\n\t        this.state = State.STOPPED;\n\t      }\n\t    }\n\t  }, {\n\t    key: 'stopLoad',\n\t    value: function stopLoad() {\n\t      var frag = this.fragCurrent;\n\t      if (frag) {\n\t        if (frag.loader) {\n\t          frag.loader.abort();\n\t        }\n\t        this.fragCurrent = null;\n\t      }\n\t      this.fragPrevious = null;\n\t      if (this.demuxer) {\n\t        this.demuxer.destroy();\n\t        this.demuxer = null;\n\t      }\n\t      this.state = State.STOPPED;\n\t    }\n\t  }, {\n\t    key: 'tick',\n\t    value: function tick() {\n\t      this.ticks++;\n\t      if (this.ticks === 1) {\n\t        this.doTick();\n\t        if (this.ticks > 1) {\n\t          setTimeout(this.tick, 1);\n\t        }\n\t        this.ticks = 0;\n\t      }\n\t    }\n\t  }, {\n\t    key: 'doTick',\n\t    value: function doTick() {\n\t      var _this2 = this;\n\t\n\t      var pos,\n\t          track,\n\t          trackDetails,\n\t          hls = this.hls,\n\t          config = hls.config;\n\t      //logger.log('audioStream:' + this.state);\n\t      var now;\n\t      var retryDate;\n\t      var isSeeking;\n\t\n\t      var _ret = function () {\n\t        switch (_this2.state) {\n\t          case State.ERROR:\n\t          //don't do anything in error state to avoid breaking further ...\n\t          case State.PAUSED:\n\t          //don't do anything in paused state either ...\n\t          case State.BUFFER_FLUSHING:\n\t            break;\n\t          case State.STARTING:\n\t            _this2.state = State.WAITING_TRACK;\n\t            _this2.loadedmetadata = false;\n\t            break;\n\t          case State.IDLE:\n\t            var tracks = _this2.tracks;\n\t            // audio tracks not received => exit loop\n\t            if (!tracks) {\n\t              break;\n\t            }\n\t            // if video not attached AND\n\t            // start fragment already requested OR start frag prefetch disable\n\t            // exit loop\n\t            // => if media not attached but start frag prefetch is enabled and start frag not requested yet, we will not exit loop\n\t            if (!_this2.media && (_this2.startFragRequested || !config.startFragPrefetch)) {\n\t              break;\n\t            }\n\t            // determine next candidate fragment to be loaded, based on current position and\n\t            //  end of buffer position\n\t            // if we have not yet loaded any fragment, start loading from start position\n\t            if (_this2.loadedmetadata) {\n\t              pos = _this2.media.currentTime;\n\t            } else {\n\t              pos = _this2.nextLoadPosition;\n\t            }\n\t            var media = _this2.mediaBuffer ? _this2.mediaBuffer : _this2.media,\n\t                bufferInfo = _bufferHelper2.default.bufferInfo(media, pos, config.maxBufferHole),\n\t                bufferLen = bufferInfo.len,\n\t                bufferEnd = bufferInfo.end,\n\t                fragPrevious = _this2.fragPrevious,\n\t                maxBufLen = config.maxMaxBufferLength,\n\t                audioSwitch = _this2.audioSwitch,\n\t                trackId = _this2.trackId;\n\t\n\t            // if buffer length is less than maxBufLen try to load a new fragment\n\t            if (bufferLen < maxBufLen && trackId < tracks.length) {\n\t              trackDetails = tracks[trackId].details;\n\t              // if track info not retrieved yet, switch state and wait for track retrieval\n\t              if (typeof trackDetails === 'undefined') {\n\t                _this2.state = State.WAITING_TRACK;\n\t                break;\n\t              }\n\t\n\t              // we just got done loading the final fragment, check if we need to finalize media stream\n\t              if (!audioSwitch && !trackDetails.live && fragPrevious && fragPrevious.sn === trackDetails.endSN) {\n\t                // if we are not seeking or if we are seeking but everything (almost) til the end is buffered, let's signal eos\n\t                // we don't compare exactly media.duration === bufferInfo.end as there could be some subtle media duration difference when switching\n\t                // between different renditions. using half frag duration should help cope with these cases.\n\t                if (!_this2.media.seeking || _this2.media.duration - bufferEnd < fragPrevious.duration / 2) {\n\t                  // Finalize the media stream\n\t                  _this2.hls.trigger(_events2.default.BUFFER_EOS, { type: 'audio' });\n\t                  _this2.state = State.ENDED;\n\t                  break;\n\t                }\n\t              }\n\t\n\t              // find fragment index, contiguous with end of buffer position\n\t              var fragments = trackDetails.fragments,\n\t                  fragLen = fragments.length,\n\t                  start = fragments[0].start,\n\t                  end = fragments[fragLen - 1].start + fragments[fragLen - 1].duration,\n\t                  frag = void 0;\n\t\n\t              // When switching audio track, reload audio as close as possible to currentTime\n\t              if (audioSwitch) {\n\t                if (trackDetails.live && !trackDetails.PTSKnown) {\n\t                  _logger.logger.log('switching audiotrack, live stream, unknown PTS,load first fragment');\n\t                  bufferEnd = 0;\n\t                } else {\n\t                  bufferEnd = pos;\n\t                  // if currentTime (pos) is less than alt audio playlist start time, it means that alt audio is ahead of currentTime\n\t                  if (trackDetails.PTSKnown && pos < start) {\n\t                    // if everything is buffered from pos to start or if audio buffer upfront, let's seek to start\n\t                    if (bufferInfo.end > start || bufferInfo.nextStart) {\n\t                      _logger.logger.log('alt audio track ahead of main track, seek to start of alt audio track');\n\t                      _this2.media.currentTime = start + 0.05;\n\t                    } else {\n\t                      return {\n\t                        v: void 0\n\t                      };\n\t                    }\n\t                  }\n\t                }\n\t              }\n\t\n\t              // if bufferEnd before start of playlist, load first fragment\n\t              if (bufferEnd <= start) {\n\t                frag = fragments[0];\n\t                if (trackDetails.live && frag.loadIdx && frag.loadIdx === _this2.fragLoadIdx) {\n\t                  // we just loaded this first fragment, and we are still lagging behind the start of the live playlist\n\t                  // let's force seek to start\n\t                  var nextBuffered = bufferInfo.nextStart ? bufferInfo.nextStart : start;\n\t                  _logger.logger.log('no alt audio available @currentTime:' + _this2.media.currentTime + ', seeking @' + (nextBuffered + 0.05));\n\t                  _this2.media.currentTime = nextBuffered + 0.05;\n\t                  return {\n\t                    v: void 0\n\t                  };\n\t                }\n\t              } else {\n\t                (function () {\n\t                  var foundFrag = void 0;\n\t                  var maxFragLookUpTolerance = config.maxFragLookUpTolerance;\n\t                  if (bufferEnd < end) {\n\t                    if (bufferEnd > end - maxFragLookUpTolerance) {\n\t                      maxFragLookUpTolerance = 0;\n\t                    }\n\t                    foundFrag = _binarySearch2.default.search(fragments, function (candidate) {\n\t                      // offset should be within fragment boundary - config.maxFragLookUpTolerance\n\t                      // this is to cope with situations like\n\t                      // bufferEnd = 9.991\n\t                      // frag[Ø] : [0,10]\n\t                      // frag[1] : [10,20]\n\t                      // bufferEnd is within frag[0] range ... although what we are expecting is to return frag[1] here\n\t                      //              frag start               frag start+duration\n\t                      //                  |-----------------------------|\n\t                      //              <--->                         <--->\n\t                      //  ...--------><-----------------------------><---------....\n\t                      // previous frag         matching fragment         next frag\n\t                      //  return -1             return 0                 return 1\n\t                      //logger.log(`level/sn/start/end/bufEnd:${level}/${candidate.sn}/${candidate.start}/${(candidate.start+candidate.duration)}/${bufferEnd}`);\n\t                      if (candidate.start + candidate.duration - maxFragLookUpTolerance <= bufferEnd) {\n\t                        return 1;\n\t                      } else if (candidate.start - maxFragLookUpTolerance > bufferEnd) {\n\t                        return -1;\n\t                      }\n\t                      return 0;\n\t                    });\n\t                    if (!foundFrag) {\n\t                      _logger.logger.log('frag not found @bufferEnd/start:' + bufferEnd + '/' + start);\n\t                    }\n\t                  } else {\n\t                    // reach end of playlist\n\t                    foundFrag = fragments[fragLen - 1];\n\t                  }\n\t                  if (foundFrag) {\n\t                    frag = foundFrag;\n\t                    start = foundFrag.start;\n\t                    //logger.log('find SN matching with pos:' +  bufferEnd + ':' + frag.sn);\n\t                    if (fragPrevious && frag.level === fragPrevious.level && frag.sn === fragPrevious.sn) {\n\t                      if (frag.sn < trackDetails.endSN) {\n\t                        frag = fragments[frag.sn + 1 - trackDetails.startSN];\n\t                        _logger.logger.log('SN just loaded, load next one: ' + frag.sn);\n\t                      } else {\n\t                        frag = null;\n\t                      }\n\t                    }\n\t                  }\n\t                })();\n\t              }\n\t              if (frag) {\n\t                //logger.log('      loading frag ' + i +',pos/bufEnd:' + pos.toFixed(3) + '/' + bufferEnd.toFixed(3));\n\t                if (frag.decryptdata.uri != null && frag.decryptdata.key == null) {\n\t                  _logger.logger.log('Loading key for ' + frag.sn + ' of [' + trackDetails.startSN + ' ,' + trackDetails.endSN + '],track ' + trackId);\n\t                  _this2.state = State.KEY_LOADING;\n\t                  hls.trigger(_events2.default.KEY_LOADING, { frag: frag });\n\t                } else {\n\t                  _logger.logger.log('Loading ' + frag.sn + ' of [' + trackDetails.startSN + ' ,' + trackDetails.endSN + '],track ' + trackId + ', currentTime:' + pos + ',bufferEnd:' + bufferEnd.toFixed(3));\n\t                  // ensure that we are not reloading the same fragments in loop ...\n\t                  if (_this2.fragLoadIdx !== undefined) {\n\t                    _this2.fragLoadIdx++;\n\t                  } else {\n\t                    _this2.fragLoadIdx = 0;\n\t                  }\n\t                  if (frag.loadCounter) {\n\t                    frag.loadCounter++;\n\t                    var maxThreshold = config.fragLoadingLoopThreshold;\n\t                    // if this frag has already been loaded 3 times, and if it has been reloaded recently\n\t                    if (frag.loadCounter > maxThreshold && Math.abs(_this2.fragLoadIdx - frag.loadIdx) < maxThreshold) {\n\t                      hls.trigger(_events2.default.ERROR, { type: _errors.ErrorTypes.MEDIA_ERROR, details: _errors.ErrorDetails.FRAG_LOOP_LOADING_ERROR, fatal: false, frag: frag });\n\t                      return {\n\t                        v: void 0\n\t                      };\n\t                    }\n\t                  } else {\n\t                    frag.loadCounter = 1;\n\t                  }\n\t                  frag.loadIdx = _this2.fragLoadIdx;\n\t                  _this2.fragCurrent = frag;\n\t                  _this2.startFragRequested = true;\n\t                  _this2.nextLoadPosition = frag.start + frag.duration;\n\t                  hls.trigger(_events2.default.FRAG_LOADING, { frag: frag });\n\t                  _this2.state = State.FRAG_LOADING;\n\t                }\n\t              }\n\t            }\n\t            break;\n\t          case State.WAITING_TRACK:\n\t            track = _this2.tracks[_this2.trackId];\n\t            // check if playlist is already loaded\n\t            if (track && track.details) {\n\t              _this2.state = State.IDLE;\n\t            }\n\t            break;\n\t          case State.FRAG_LOADING_WAITING_RETRY:\n\t            now = performance.now();\n\t            retryDate = _this2.retryDate;\n\t\n\t            media = _this2.media;\n\t            isSeeking = media && media.seeking;\n\t            // if current time is gt than retryDate, or if media seeking let's switch to IDLE state to retry loading\n\t\n\t            if (!retryDate || now >= retryDate || isSeeking) {\n\t              _logger.logger.log('audioStreamController: retryDate reached, switch back to IDLE state');\n\t              _this2.state = State.IDLE;\n\t            }\n\t            break;\n\t          case State.WAITING_INIT_PTS:\n\t          case State.STOPPED:\n\t          case State.FRAG_LOADING:\n\t          case State.PARSING:\n\t          case State.PARSED:\n\t          case State.ENDED:\n\t            break;\n\t          default:\n\t            break;\n\t        }\n\t      }();\n\t\n\t      if ((typeof _ret === 'undefined' ? 'undefined' : _typeof(_ret)) === \"object\") return _ret.v;\n\t    }\n\t  }, {\n\t    key: 'onMediaAttached',\n\t    value: function onMediaAttached(data) {\n\t      var media = this.media = this.mediaBuffer = data.media;\n\t      this.onvseeking = this.onMediaSeeking.bind(this);\n\t      this.onvended = this.onMediaEnded.bind(this);\n\t      media.addEventListener('seeking', this.onvseeking);\n\t      media.addEventListener('ended', this.onvended);\n\t      var config = this.config;\n\t      if (this.tracks && config.autoStartLoad) {\n\t        this.startLoad(config.startPosition);\n\t      }\n\t    }\n\t  }, {\n\t    key: 'onMediaDetaching',\n\t    value: function onMediaDetaching() {\n\t      var media = this.media;\n\t      if (media && media.ended) {\n\t        _logger.logger.log('MSE detaching and video ended, reset startPosition');\n\t        this.startPosition = this.lastCurrentTime = 0;\n\t      }\n\t\n\t      // reset fragment loading counter on MSE detaching to avoid reporting FRAG_LOOP_LOADING_ERROR after error recovery\n\t      var tracks = this.tracks;\n\t      if (tracks) {\n\t        // reset fragment load counter\n\t        tracks.forEach(function (track) {\n\t          if (track.details) {\n\t            track.details.fragments.forEach(function (fragment) {\n\t              fragment.loadCounter = undefined;\n\t            });\n\t          }\n\t        });\n\t      }\n\t      // remove video listeners\n\t      if (media) {\n\t        media.removeEventListener('seeking', this.onvseeking);\n\t        media.removeEventListener('ended', this.onvended);\n\t        this.onvseeking = this.onvseeked = this.onvended = null;\n\t      }\n\t      this.media = this.mediaBuffer = null;\n\t      this.loadedmetadata = false;\n\t      this.stopLoad();\n\t    }\n\t  }, {\n\t    key: 'onMediaSeeking',\n\t    value: function onMediaSeeking() {\n\t      if (this.state === State.ENDED) {\n\t        // switch to IDLE state to check for potential new fragment\n\t        this.state = State.IDLE;\n\t      }\n\t      if (this.media) {\n\t        this.lastCurrentTime = this.media.currentTime;\n\t      }\n\t      // avoid reporting fragment loop loading error in case user is seeking several times on same position\n\t      if (this.fragLoadIdx !== undefined) {\n\t        this.fragLoadIdx += 2 * this.config.fragLoadingLoopThreshold;\n\t      }\n\t      // tick to speed up processing\n\t      this.tick();\n\t    }\n\t  }, {\n\t    key: 'onMediaEnded',\n\t    value: function onMediaEnded() {\n\t      // reset startPosition and lastCurrentTime to restart playback @ stream beginning\n\t      this.startPosition = this.lastCurrentTime = 0;\n\t    }\n\t  }, {\n\t    key: 'onAudioTracksUpdated',\n\t    value: function onAudioTracksUpdated(data) {\n\t      _logger.logger.log('audio tracks updated');\n\t      this.tracks = data.audioTracks;\n\t    }\n\t  }, {\n\t    key: 'onAudioTrackSwitching',\n\t    value: function onAudioTrackSwitching(data) {\n\t      // if any URL found on new audio track, it is an alternate audio track\n\t      var altAudio = !!data.url;\n\t      this.trackId = data.id;\n\t      this.state = State.IDLE;\n\t\n\t      this.fragCurrent = null;\n\t      this.state = State.PAUSED;\n\t      this.waitingFragment = null;\n\t      // destroy useless demuxer when switching audio to main\n\t      if (!altAudio) {\n\t        if (this.demuxer) {\n\t          this.demuxer.destroy();\n\t          this.demuxer = null;\n\t        }\n\t      } else {\n\t        // switching to audio track, start timer if not already started\n\t        if (!this.timer) {\n\t          this.timer = setInterval(this.ontick, 100);\n\t        }\n\t      }\n\t\n\t      //should we switch tracks ?\n\t      if (altAudio) {\n\t        this.audioSwitch = true;\n\t        //main audio track are handled by stream-controller, just do something if switching to alt audio track\n\t        this.state = State.IDLE;\n\t        // increase fragment load Index to avoid frag loop loading error after buffer flush\n\t        if (this.fragLoadIdx !== undefined) {\n\t          this.fragLoadIdx += 2 * this.config.fragLoadingLoopThreshold;\n\t        }\n\t      }\n\t      this.tick();\n\t    }\n\t  }, {\n\t    key: 'onAudioTrackLoaded',\n\t    value: function onAudioTrackLoaded(data) {\n\t      var newDetails = data.details,\n\t          trackId = data.id,\n\t          track = this.tracks[trackId],\n\t          duration = newDetails.totalduration,\n\t          sliding = 0;\n\t\n\t      _logger.logger.log('track ' + trackId + ' loaded [' + newDetails.startSN + ',' + newDetails.endSN + '],duration:' + duration);\n\t\n\t      if (newDetails.live) {\n\t        var curDetails = track.details;\n\t        if (curDetails && newDetails.fragments.length > 0) {\n\t          // we already have details for that level, merge them\n\t          _levelHelper2.default.mergeDetails(curDetails, newDetails);\n\t          sliding = newDetails.fragments[0].start;\n\t          // TODO\n\t          //this.liveSyncPosition = this.computeLivePosition(sliding, curDetails);\n\t          if (newDetails.PTSKnown) {\n\t            _logger.logger.log('live audio playlist sliding:' + sliding.toFixed(3));\n\t          } else {\n\t            _logger.logger.log('live audio playlist - outdated PTS, unknown sliding');\n\t          }\n\t        } else {\n\t          newDetails.PTSKnown = false;\n\t          _logger.logger.log('live audio playlist - first load, unknown sliding');\n\t        }\n\t      } else {\n\t        newDetails.PTSKnown = false;\n\t      }\n\t      track.details = newDetails;\n\t\n\t      // compute start position\n\t      if (!this.startFragRequested) {\n\t        // compute start position if set to -1. use it straight away if value is defined\n\t        if (this.startPosition === -1) {\n\t          // first, check if start time offset has been set in playlist, if yes, use this value\n\t          var startTimeOffset = newDetails.startTimeOffset;\n\t          if (!isNaN(startTimeOffset)) {\n\t            _logger.logger.log('start time offset found in playlist, adjust startPosition to ' + startTimeOffset);\n\t            this.startPosition = startTimeOffset;\n\t          } else {\n\t            this.startPosition = 0;\n\t          }\n\t        }\n\t        this.nextLoadPosition = this.startPosition;\n\t      }\n\t      // only switch batck to IDLE state if we were waiting for track to start downloading a new fragment\n\t      if (this.state === State.WAITING_TRACK) {\n\t        this.state = State.IDLE;\n\t      }\n\t      //trigger handler right now\n\t      this.tick();\n\t    }\n\t  }, {\n\t    key: 'onKeyLoaded',\n\t    value: function onKeyLoaded() {\n\t      if (this.state === State.KEY_LOADING) {\n\t        this.state = State.IDLE;\n\t        this.tick();\n\t      }\n\t    }\n\t  }, {\n\t    key: 'onFragLoaded',\n\t    value: function onFragLoaded(data) {\n\t      var fragCurrent = this.fragCurrent;\n\t      if (this.state === State.FRAG_LOADING && fragCurrent && data.frag.type === 'audio' && data.frag.level === fragCurrent.level && data.frag.sn === fragCurrent.sn) {\n\t        this.state = State.PARSING;\n\t        // transmux the MPEG-TS data to ISO-BMFF segments\n\t        this.stats = data.stats;\n\t        var track = this.tracks[this.trackId],\n\t            details = track.details,\n\t            duration = details.totalduration,\n\t            start = fragCurrent.start,\n\t            trackId = fragCurrent.level,\n\t            sn = fragCurrent.sn,\n\t            cc = fragCurrent.cc,\n\t            audioCodec = this.config.defaultAudioCodec || track.audioCodec;\n\t        this.appended = false;\n\t        if (!this.demuxer) {\n\t          this.demuxer = new _demuxer2.default(this.hls, 'audio');\n\t        }\n\t        //Check if we have video initPTS\n\t        // If not we need to wait for it\n\t        var initPTS = this.initPTS[cc];\n\t        if (initPTS !== undefined) {\n\t          this.pendingBuffering = true;\n\t          _logger.logger.log('Demuxing ' + sn + ' of [' + details.startSN + ' ,' + details.endSN + '],track ' + trackId);\n\t          // time Offset is accurate if level PTS is known, or if playlist is not sliding (not live)\n\t          var accurateTimeOffset = false; //details.PTSKnown || !details.live;\n\t          this.demuxer.push(data.payload, audioCodec, null, start, cc, trackId, sn, duration, fragCurrent.decryptdata, accurateTimeOffset, initPTS);\n\t        } else {\n\t          _logger.logger.log('unknown video PTS for continuity counter ' + cc + ', waiting for video PTS before demuxing audio frag ' + sn + ' of [' + details.startSN + ' ,' + details.endSN + '],track ' + trackId);\n\t          this.waitingFragment = data;\n\t          this.state = State.WAITING_INIT_PTS;\n\t        }\n\t      }\n\t      this.fragLoadError = 0;\n\t    }\n\t  }, {\n\t    key: 'onFragParsingInitSegment',\n\t    value: function onFragParsingInitSegment(data) {\n\t      var fragCurrent = this.fragCurrent;\n\t      if (fragCurrent && data.id === 'audio' && data.sn === fragCurrent.sn && data.level === fragCurrent.level && this.state === State.PARSING) {\n\t        var tracks = data.tracks,\n\t            track = void 0;\n\t\n\t        // delete any video track found on audio demuxer\n\t        if (tracks.video) {\n\t          delete tracks.video;\n\t        }\n\t\n\t        // include levelCodec in audio and video tracks\n\t        track = tracks.audio;\n\t        if (track) {\n\t          track.levelCodec = 'mp4a.40.2';\n\t          track.id = data.id;\n\t          this.hls.trigger(_events2.default.BUFFER_CODECS, tracks);\n\t          _logger.logger.log('audio track:audio,container:' + track.container + ',codecs[level/parsed]=[' + track.levelCodec + '/' + track.codec + ']');\n\t          var initSegment = track.initSegment;\n\t          if (initSegment) {\n\t            var appendObj = { type: 'audio', data: initSegment, parent: 'audio', content: 'initSegment' };\n\t            if (this.audioSwitch) {\n\t              this.pendingData = [appendObj];\n\t            } else {\n\t              this.appended = true;\n\t              // arm pending Buffering flag before appending a segment\n\t              this.pendingBuffering = true;\n\t              this.hls.trigger(_events2.default.BUFFER_APPENDING, appendObj);\n\t            }\n\t          }\n\t          //trigger handler right now\n\t          this.tick();\n\t        }\n\t      }\n\t    }\n\t  }, {\n\t    key: 'onFragParsingData',\n\t    value: function onFragParsingData(data) {\n\t      var _this3 = this;\n\t\n\t      var fragCurrent = this.fragCurrent;\n\t      if (fragCurrent && data.id === 'audio' && data.type === 'audio' && data.sn === fragCurrent.sn && data.level === fragCurrent.level && this.state === State.PARSING) {\n\t        (function () {\n\t          var trackId = _this3.trackId,\n\t              track = _this3.tracks[trackId],\n\t              frag = _this3.fragCurrent,\n\t              hls = _this3.hls;\n\t\n\t          _logger.logger.log('parsed ' + data.type + ',PTS:[' + data.startPTS.toFixed(3) + ',' + data.endPTS.toFixed(3) + '],DTS:[' + data.startDTS.toFixed(3) + '/' + data.endDTS.toFixed(3) + '],nb:' + data.nb);\n\t          _levelHelper2.default.updateFragPTSDTS(track.details, frag.sn, data.startPTS, data.endPTS);\n\t\n\t          var audioSwitch = _this3.audioSwitch,\n\t              media = _this3.media,\n\t              appendOnBufferFlush = false;\n\t          //Only flush audio from old audio tracks when PTS is known on new audio track\n\t          if (audioSwitch && media) {\n\t            if (media.readyState) {\n\t              var currentTime = media.currentTime;\n\t              _logger.logger.log('switching audio track : currentTime:' + currentTime);\n\t              if (currentTime >= data.startPTS) {\n\t                _logger.logger.log('switching audio track : flushing all audio');\n\t                _this3.state = State.BUFFER_FLUSHING;\n\t                hls.trigger(_events2.default.BUFFER_FLUSHING, { startOffset: 0, endOffset: Number.POSITIVE_INFINITY, type: 'audio' });\n\t                appendOnBufferFlush = true;\n\t                //Lets announce that the initial audio track switch flush occur\n\t                _this3.audioSwitch = false;\n\t                hls.trigger(_events2.default.AUDIO_TRACK_SWITCHED, { id: trackId });\n\t              }\n\t            } else {\n\t              //Lets announce that the initial audio track switch flush occur\n\t              _this3.audioSwitch = false;\n\t              hls.trigger(_events2.default.AUDIO_TRACK_SWITCHED, { id: trackId });\n\t            }\n\t          }\n\t\n\t          var pendingData = _this3.pendingData;\n\t          if (!_this3.audioSwitch) {\n\t            [data.data1, data.data2].forEach(function (buffer) {\n\t              if (buffer) {\n\t                pendingData.push({ type: data.type, data: buffer, parent: 'audio', content: 'data' });\n\t              }\n\t            });\n\t            if (!appendOnBufferFlush && pendingData.length) {\n\t              pendingData.forEach(function (appendObj) {\n\t                // arm pending Buffering flag before appending a segment\n\t                _this3.pendingBuffering = true;\n\t                _this3.hls.trigger(_events2.default.BUFFER_APPENDING, appendObj);\n\t              });\n\t              _this3.pendingData = [];\n\t              _this3.appended = true;\n\t            }\n\t          }\n\t          //trigger handler right now\n\t          _this3.tick();\n\t        })();\n\t      }\n\t    }\n\t  }, {\n\t    key: 'onFragParsed',\n\t    value: function onFragParsed(data) {\n\t      var fragCurrent = this.fragCurrent;\n\t      if (fragCurrent && data.id === 'audio' && data.sn === fragCurrent.sn && data.level === fragCurrent.level && this.state === State.PARSING) {\n\t        this.stats.tparsed = performance.now();\n\t        this.state = State.PARSED;\n\t        this._checkAppendedParsed();\n\t      }\n\t    }\n\t  }, {\n\t    key: 'onBufferCreated',\n\t    value: function onBufferCreated(data) {\n\t      var audioTrack = data.tracks.audio;\n\t      if (audioTrack) {\n\t        this.mediaBuffer = audioTrack.buffer;\n\t        this.loadedmetadata = true;\n\t      }\n\t    }\n\t  }, {\n\t    key: 'onBufferAppended',\n\t    value: function onBufferAppended(data) {\n\t      if (data.parent === 'audio') {\n\t        var state = this.state;\n\t        if (state === State.PARSING || state === State.PARSED) {\n\t          // check if all buffers have been appended\n\t          this.pendingBuffering = data.pending > 0;\n\t          this._checkAppendedParsed();\n\t        }\n\t      }\n\t    }\n\t  }, {\n\t    key: '_checkAppendedParsed',\n\t    value: function _checkAppendedParsed() {\n\t      //trigger handler right now\n\t      if (this.state === State.PARSED && (!this.appended || !this.pendingBuffering)) {\n\t        var frag = this.fragCurrent,\n\t            stats = this.stats,\n\t            hls = this.hls;\n\t        if (frag) {\n\t          this.fragPrevious = frag;\n\t          stats.tbuffered = performance.now();\n\t          hls.trigger(_events2.default.FRAG_BUFFERED, { stats: stats, frag: frag, id: 'audio' });\n\t          var media = this.mediaBuffer ? this.mediaBuffer : this.media;\n\t          _logger.logger.log('audio buffered : ' + _timeRanges2.default.toString(media.buffered));\n\t          if (this.audioSwitch && this.appended) {\n\t            this.audioSwitch = false;\n\t            hls.trigger(_events2.default.AUDIO_TRACK_SWITCHED, { id: this.trackId });\n\t          }\n\t          this.state = State.IDLE;\n\t        }\n\t        this.tick();\n\t      }\n\t    }\n\t  }, {\n\t    key: 'onError',\n\t    value: function onError(data) {\n\t      var frag = data.frag;\n\t      // don't handle frag error not related to audio fragment\n\t      if (frag && frag.type !== 'audio') {\n\t        return;\n\t      }\n\t      switch (data.details) {\n\t        case _errors.ErrorDetails.FRAG_LOAD_ERROR:\n\t        case _errors.ErrorDetails.FRAG_LOAD_TIMEOUT:\n\t          if (!data.fatal) {\n\t            var loadError = this.fragLoadError;\n\t            if (loadError) {\n\t              loadError++;\n\t            } else {\n\t              loadError = 1;\n\t            }\n\t            var config = this.config;\n\t            if (loadError <= config.fragLoadingMaxRetry) {\n\t              this.fragLoadError = loadError;\n\t              // reset load counter to avoid frag loop loading error\n\t              frag.loadCounter = 0;\n\t              // exponential backoff capped to config.fragLoadingMaxRetryTimeout\n\t              var delay = Math.min(Math.pow(2, loadError - 1) * config.fragLoadingRetryDelay, config.fragLoadingMaxRetryTimeout);\n\t              _logger.logger.warn('audioStreamController: frag loading failed, retry in ' + delay + ' ms');\n\t              this.retryDate = performance.now() + delay;\n\t              // retry loading state\n\t              this.state = State.FRAG_LOADING_WAITING_RETRY;\n\t            } else {\n\t              _logger.logger.error('audioStreamController: ' + data.details + ' reaches max retry, redispatch as fatal ...');\n\t              // redispatch same error but with fatal set to true\n\t              data.fatal = true;\n\t              this.hls.trigger(_events2.default.ERROR, data);\n\t              this.state = State.ERROR;\n\t            }\n\t          }\n\t          break;\n\t        case _errors.ErrorDetails.FRAG_LOOP_LOADING_ERROR:\n\t        case _errors.ErrorDetails.AUDIO_TRACK_LOAD_ERROR:\n\t        case _errors.ErrorDetails.AUDIO_TRACK_LOAD_TIMEOUT:\n\t        case _errors.ErrorDetails.KEY_LOAD_ERROR:\n\t        case _errors.ErrorDetails.KEY_LOAD_TIMEOUT:\n\t          //  when in ERROR state, don't switch back to IDLE state in case a non-fatal error is received\n\t          if (this.state !== State.ERROR) {\n\t            // if fatal error, stop processing, otherwise move to IDLE to retry loading\n\t            this.state = data.fatal ? State.ERROR : State.IDLE;\n\t            _logger.logger.warn('audioStreamController: ' + data.details + ' while loading frag,switch to ' + this.state + ' state ...');\n\t          }\n\t          break;\n\t        default:\n\t          break;\n\t      }\n\t    }\n\t  }, {\n\t    key: 'onBufferFlushed',\n\t    value: function onBufferFlushed() {\n\t      var _this4 = this;\n\t\n\t      var pendingData = this.pendingData;\n\t      if (pendingData && pendingData.length) {\n\t        _logger.logger.log('appending pending audio data on Buffer Flushed');\n\t        pendingData.forEach(function (appendObj) {\n\t          _this4.hls.trigger(_events2.default.BUFFER_APPENDING, appendObj);\n\t        });\n\t        this.appended = true;\n\t        this.pendingData = [];\n\t        this.state = State.PARSED;\n\t      } else {\n\t        // move to IDLE once flush complete. this should trigger new fragment loading\n\t        this.state = State.IDLE;\n\t        // reset reference to frag\n\t        this.fragPrevious = null;\n\t        this.tick();\n\t      }\n\t    }\n\t  }, {\n\t    key: 'state',\n\t    set: function set(nextState) {\n\t      if (this.state !== nextState) {\n\t        var previousState = this.state;\n\t        this._state = nextState;\n\t        _logger.logger.log('audio stream:' + previousState + '->' + nextState);\n\t      }\n\t    },\n\t    get: function get() {\n\t      return this._state;\n\t    }\n\t  }]);\n\t\n\t  return AudioStreamController;\n\t}(_eventHandler2.default);\n\t\n\texports.default = AudioStreamController;\n\t\n\t},{\"22\":22,\"26\":26,\"27\":27,\"28\":28,\"30\":30,\"31\":31,\"41\":41,\"45\":45,\"46\":46}],6:[function(_dereq_,module,exports){\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _events = _dereq_(28);\n\t\n\tvar _events2 = _interopRequireDefault(_events);\n\t\n\tvar _eventHandler = _dereq_(27);\n\t\n\tvar _eventHandler2 = _interopRequireDefault(_eventHandler);\n\t\n\tvar _logger = _dereq_(45);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /*\n\t                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * audio track controller\n\t                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               */\n\t\n\tvar AudioTrackController = function (_EventHandler) {\n\t  _inherits(AudioTrackController, _EventHandler);\n\t\n\t  function AudioTrackController(hls) {\n\t    _classCallCheck(this, AudioTrackController);\n\t\n\t    var _this = _possibleConstructorReturn(this, (AudioTrackController.__proto__ || Object.getPrototypeOf(AudioTrackController)).call(this, hls, _events2.default.MANIFEST_LOADING, _events2.default.MANIFEST_LOADED, _events2.default.AUDIO_TRACK_LOADED));\n\t\n\t    _this.ticks = 0;\n\t    _this.ontick = _this.tick.bind(_this);\n\t    return _this;\n\t  }\n\t\n\t  _createClass(AudioTrackController, [{\n\t    key: 'destroy',\n\t    value: function destroy() {\n\t      _eventHandler2.default.prototype.destroy.call(this);\n\t    }\n\t  }, {\n\t    key: 'tick',\n\t    value: function tick() {\n\t      this.ticks++;\n\t      if (this.ticks === 1) {\n\t        this.doTick();\n\t        if (this.ticks > 1) {\n\t          setTimeout(this.tick, 1);\n\t        }\n\t        this.ticks = 0;\n\t      }\n\t    }\n\t  }, {\n\t    key: 'doTick',\n\t    value: function doTick() {\n\t      this.updateTrack(this.trackId);\n\t    }\n\t  }, {\n\t    key: 'onManifestLoading',\n\t    value: function onManifestLoading() {\n\t      // reset audio tracks on manifest loading\n\t      this.tracks = [];\n\t      this.trackId = -1;\n\t    }\n\t  }, {\n\t    key: 'onManifestLoaded',\n\t    value: function onManifestLoaded(data) {\n\t      var _this2 = this;\n\t\n\t      var tracks = data.audioTracks || [];\n\t      var defaultFound = false;\n\t      this.tracks = tracks;\n\t      this.hls.trigger(_events2.default.AUDIO_TRACKS_UPDATED, { audioTracks: tracks });\n\t      // loop through available audio tracks and autoselect default if needed\n\t      var id = 0;\n\t      tracks.forEach(function (track) {\n\t        if (track.default) {\n\t          _this2.audioTrack = id;\n\t          defaultFound = true;\n\t          return;\n\t        }\n\t        id++;\n\t      });\n\t      if (defaultFound === false && tracks.length) {\n\t        _logger.logger.log('no default audio track defined, use first audio track as default');\n\t        this.audioTrack = 0;\n\t      }\n\t    }\n\t  }, {\n\t    key: 'onAudioTrackLoaded',\n\t    value: function onAudioTrackLoaded(data) {\n\t      if (data.id < this.tracks.length) {\n\t        _logger.logger.log('audioTrack ' + data.id + ' loaded');\n\t        this.tracks[data.id].details = data.details;\n\t        // check if current playlist is a live playlist\n\t        if (data.details.live && !this.timer) {\n\t          // if live playlist we will have to reload it periodically\n\t          // set reload period to playlist target duration\n\t          this.timer = setInterval(this.ontick, 1000 * data.details.targetduration);\n\t        }\n\t        if (!data.details.live && this.timer) {\n\t          // playlist is not live and timer is armed : stopping it\n\t          clearInterval(this.timer);\n\t          this.timer = null;\n\t        }\n\t      }\n\t    }\n\t\n\t    /** get alternate audio tracks list from playlist **/\n\t\n\t  }, {\n\t    key: 'setAudioTrackInternal',\n\t    value: function setAudioTrackInternal(newId) {\n\t      // check if level idx is valid\n\t      if (newId >= 0 && newId < this.tracks.length) {\n\t        // stopping live reloading timer if any\n\t        if (this.timer) {\n\t          clearInterval(this.timer);\n\t          this.timer = null;\n\t        }\n\t        this.trackId = newId;\n\t        _logger.logger.log('switching to audioTrack ' + newId);\n\t        var audioTrack = this.tracks[newId],\n\t            hls = this.hls,\n\t            type = audioTrack.type,\n\t            url = audioTrack.url,\n\t            eventObj = { id: newId, type: type, url: url };\n\t        // keep AUDIO_TRACK_SWITCH for legacy reason\n\t        hls.trigger(_events2.default.AUDIO_TRACK_SWITCH, eventObj);\n\t        hls.trigger(_events2.default.AUDIO_TRACK_SWITCHING, eventObj);\n\t        // check if we need to load playlist for this audio Track\n\t        var details = audioTrack.details;\n\t        if (url && (details === undefined || details.live === true)) {\n\t          // track not retrieved yet, or live playlist we need to (re)load it\n\t          _logger.logger.log('(re)loading playlist for audioTrack ' + newId);\n\t          hls.trigger(_events2.default.AUDIO_TRACK_LOADING, { url: url, id: newId });\n\t        }\n\t      }\n\t    }\n\t  }, {\n\t    key: 'updateTrack',\n\t    value: function updateTrack(newId) {\n\t      // check if level idx is valid\n\t      if (newId >= 0 && newId < this.tracks.length) {\n\t        // stopping live reloading timer if any\n\t        if (this.timer) {\n\t          clearInterval(this.timer);\n\t          this.timer = null;\n\t        }\n\t        this.trackId = newId;\n\t        _logger.logger.log('updating audioTrack ' + newId);\n\t        var audioTrack = this.tracks[newId],\n\t            url = audioTrack.url;\n\t        // check if we need to load playlist for this audio Track\n\t        var details = audioTrack.details;\n\t        if (url && (details === undefined || details.live === true)) {\n\t          // track not retrieved yet, or live playlist we need to (re)load it\n\t          _logger.logger.log('(re)loading playlist for audioTrack ' + newId);\n\t          this.hls.trigger(_events2.default.AUDIO_TRACK_LOADING, { url: url, id: newId });\n\t        }\n\t      }\n\t    }\n\t  }, {\n\t    key: 'audioTracks',\n\t    get: function get() {\n\t      return this.tracks;\n\t    }\n\t\n\t    /** get index of the selected audio track (index in audio track lists) **/\n\t\n\t  }, {\n\t    key: 'audioTrack',\n\t    get: function get() {\n\t      return this.trackId;\n\t    }\n\t\n\t    /** select an audio track, based on its index in audio track lists**/\n\t    ,\n\t    set: function set(audioTrackId) {\n\t      if (this.trackId !== audioTrackId || this.tracks[audioTrackId].details === undefined) {\n\t        this.setAudioTrackInternal(audioTrackId);\n\t      }\n\t    }\n\t  }]);\n\t\n\t  return AudioTrackController;\n\t}(_eventHandler2.default);\n\t\n\texports.default = AudioTrackController;\n\t\n\t},{\"27\":27,\"28\":28,\"45\":45}],7:[function(_dereq_,module,exports){\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _events = _dereq_(28);\n\t\n\tvar _events2 = _interopRequireDefault(_events);\n\t\n\tvar _eventHandler = _dereq_(27);\n\t\n\tvar _eventHandler2 = _interopRequireDefault(_eventHandler);\n\t\n\tvar _logger = _dereq_(45);\n\t\n\tvar _errors = _dereq_(26);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /*\n\t                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * Buffer Controller\n\t                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               */\n\t\n\tvar BufferController = function (_EventHandler) {\n\t  _inherits(BufferController, _EventHandler);\n\t\n\t  function BufferController(hls) {\n\t    _classCallCheck(this, BufferController);\n\t\n\t    // the value that we have set mediasource.duration to\n\t    // (the actual duration may be tweaked slighly by the browser)\n\t    var _this = _possibleConstructorReturn(this, (BufferController.__proto__ || Object.getPrototypeOf(BufferController)).call(this, hls, _events2.default.MEDIA_ATTACHING, _events2.default.MEDIA_DETACHING, _events2.default.MANIFEST_PARSED, _events2.default.BUFFER_RESET, _events2.default.BUFFER_APPENDING, _events2.default.BUFFER_CODECS, _events2.default.BUFFER_EOS, _events2.default.BUFFER_FLUSHING, _events2.default.LEVEL_PTS_UPDATED, _events2.default.LEVEL_UPDATED));\n\t\n\t    _this._msDuration = null;\n\t    // the value that we want to set mediaSource.duration to\n\t    _this._levelDuration = null;\n\t\n\t    // Source Buffer listeners\n\t    _this.onsbue = _this.onSBUpdateEnd.bind(_this);\n\t    _this.onsbe = _this.onSBUpdateError.bind(_this);\n\t    _this.pendingTracks = {};\n\t    _this.tracks = {};\n\t    return _this;\n\t  }\n\t\n\t  _createClass(BufferController, [{\n\t    key: 'destroy',\n\t    value: function destroy() {\n\t      _eventHandler2.default.prototype.destroy.call(this);\n\t    }\n\t  }, {\n\t    key: 'onLevelPtsUpdated',\n\t    value: function onLevelPtsUpdated(data) {\n\t      var type = data.type;\n\t      var audioTrack = this.tracks.audio;\n\t\n\t      // Adjusting `SourceBuffer.timestampOffset` (desired point in the timeline where the next frames should be appended)\n\t      // in Chrome browser when we detect MPEG audio container and time delta between level PTS and `SourceBuffer.timestampOffset`\n\t      // is greater than 100ms (this is enough to handle seek for VOD or level change for LIVE videos). At the time of change we issue\n\t      // `SourceBuffer.abort()` and adjusting `SourceBuffer.timestampOffset` if `SourceBuffer.updating` is false or awaiting `updateend`\n\t      // event if SB is in updating state.\n\t      // More info here: https://github.com/dailymotion/hls.js/issues/332#issuecomment-257986486\n\t\n\t      if (type === 'audio' && audioTrack && audioTrack.container === 'audio/mpeg') {\n\t        // Chrome audio mp3 track\n\t        var audioBuffer = this.sourceBuffer.audio;\n\t        var delta = Math.abs(audioBuffer.timestampOffset - data.start);\n\t\n\t        // adjust timestamp offset if time delta is greater than 100ms\n\t        if (delta > 0.1) {\n\t          var updating = audioBuffer.updating;\n\t\n\t          try {\n\t            audioBuffer.abort();\n\t          } catch (err) {\n\t            updating = true;\n\t            _logger.logger.warn('can not abort audio buffer: ' + err);\n\t          }\n\t\n\t          if (!updating) {\n\t            _logger.logger.warn('change mpeg audio timestamp offset from ' + audioBuffer.timestampOffset + ' to ' + data.start);\n\t            audioBuffer.timestampOffset = data.start;\n\t          } else {\n\t            this.audioTimestampOffset = data.start;\n\t          }\n\t        }\n\t      }\n\t    }\n\t  }, {\n\t    key: 'onManifestParsed',\n\t    value: function onManifestParsed(data) {\n\t      var audioExpected = data.audio,\n\t          videoExpected = data.video,\n\t          sourceBufferNb = 0;\n\t      // in case of alt audio 2 BUFFER_CODECS events will be triggered, one per stream controller\n\t      // sourcebuffers will be created all at once when the expected nb of tracks will be reached\n\t      // in case alt audio is not used, only one BUFFER_CODEC event will be fired from main stream controller\n\t      // it will contain the expected nb of source buffers, no need to compute it\n\t      if (data.altAudio && (audioExpected || videoExpected)) {\n\t        sourceBufferNb = (audioExpected ? 1 : 0) + (videoExpected ? 1 : 0);\n\t        _logger.logger.log(sourceBufferNb + ' sourceBuffer(s) expected');\n\t      }\n\t      this.sourceBufferNb = sourceBufferNb;\n\t    }\n\t  }, {\n\t    key: 'onMediaAttaching',\n\t    value: function onMediaAttaching(data) {\n\t      var media = this.media = data.media;\n\t      if (media) {\n\t        // setup the media source\n\t        var ms = this.mediaSource = new MediaSource();\n\t        //Media Source listeners\n\t        this.onmso = this.onMediaSourceOpen.bind(this);\n\t        this.onmse = this.onMediaSourceEnded.bind(this);\n\t        this.onmsc = this.onMediaSourceClose.bind(this);\n\t        ms.addEventListener('sourceopen', this.onmso);\n\t        ms.addEventListener('sourceended', this.onmse);\n\t        ms.addEventListener('sourceclose', this.onmsc);\n\t        // link video and media Source\n\t        media.src = URL.createObjectURL(ms);\n\t      }\n\t    }\n\t  }, {\n\t    key: 'onMediaDetaching',\n\t    value: function onMediaDetaching() {\n\t      _logger.logger.log('media source detaching');\n\t      var ms = this.mediaSource;\n\t      if (ms) {\n\t        if (ms.readyState === 'open') {\n\t          try {\n\t            // endOfStream could trigger exception if any sourcebuffer is in updating state\n\t            // we don't really care about checking sourcebuffer state here,\n\t            // as we are anyway detaching the MediaSource\n\t            // let's just avoid this exception to propagate\n\t            ms.endOfStream();\n\t          } catch (err) {\n\t            _logger.logger.warn('onMediaDetaching:' + err.message + ' while calling endOfStream');\n\t          }\n\t        }\n\t        ms.removeEventListener('sourceopen', this.onmso);\n\t        ms.removeEventListener('sourceended', this.onmse);\n\t        ms.removeEventListener('sourceclose', this.onmsc);\n\t\n\t        // Detach properly the MediaSource from the HTMLMediaElement as\n\t        // suggested in https://github.com/w3c/media-source/issues/53.\n\t        if (this.media) {\n\t          URL.revokeObjectURL(this.media.src);\n\t          this.media.removeAttribute('src');\n\t          this.media.load();\n\t        }\n\t\n\t        this.mediaSource = null;\n\t        this.media = null;\n\t        this.pendingTracks = {};\n\t        this.tracks = {};\n\t        this.sourceBuffer = {};\n\t        this.flushRange = [];\n\t        this.segments = [];\n\t        this.appended = 0;\n\t      }\n\t      this.onmso = this.onmse = this.onmsc = null;\n\t      this.hls.trigger(_events2.default.MEDIA_DETACHED);\n\t    }\n\t  }, {\n\t    key: 'onMediaSourceOpen',\n\t    value: function onMediaSourceOpen() {\n\t      _logger.logger.log('media source opened');\n\t      this.hls.trigger(_events2.default.MEDIA_ATTACHED, { media: this.media });\n\t      var mediaSource = this.mediaSource;\n\t      if (mediaSource) {\n\t        // once received, don't listen anymore to sourceopen event\n\t        mediaSource.removeEventListener('sourceopen', this.onmso);\n\t      }\n\t      this.checkPendingTracks();\n\t    }\n\t  }, {\n\t    key: 'checkPendingTracks',\n\t    value: function checkPendingTracks() {\n\t      // if any buffer codecs pending, check if we have enough to create sourceBuffers\n\t      var pendingTracks = this.pendingTracks,\n\t          pendingTracksNb = Object.keys(pendingTracks).length;\n\t      // if any pending tracks and (if nb of pending tracks gt or equal than expected nb or if unknown expected nb)\n\t      if (pendingTracksNb && (this.sourceBufferNb <= pendingTracksNb || this.sourceBufferNb === 0)) {\n\t        // ok, let's create them now !\n\t        this.createSourceBuffers(pendingTracks);\n\t        this.pendingTracks = {};\n\t        // append any pending segments now !\n\t        this.doAppending();\n\t      }\n\t    }\n\t  }, {\n\t    key: 'onMediaSourceClose',\n\t    value: function onMediaSourceClose() {\n\t      _logger.logger.log('media source closed');\n\t    }\n\t  }, {\n\t    key: 'onMediaSourceEnded',\n\t    value: function onMediaSourceEnded() {\n\t      _logger.logger.log('media source ended');\n\t    }\n\t  }, {\n\t    key: 'onSBUpdateEnd',\n\t    value: function onSBUpdateEnd() {\n\t      // update timestampOffset\n\t      if (this.audioTimestampOffset) {\n\t        var audioBuffer = this.sourceBuffer.audio;\n\t        _logger.logger.warn('change mpeg audio timestamp offset from ' + audioBuffer.timestampOffset + ' to ' + this.audioTimestampOffset);\n\t        audioBuffer.timestampOffset = this.audioTimestampOffset;\n\t        delete this.audioTimestampOffset;\n\t      }\n\t\n\t      if (this._needsFlush) {\n\t        this.doFlush();\n\t      }\n\t\n\t      if (this._needsEos) {\n\t        this.checkEos();\n\t      }\n\t      this.appending = false;\n\t      var parent = this.parent;\n\t      // count nb of pending segments waiting for appending on this sourcebuffer\n\t      var pending = this.segments.reduce(function (counter, segment) {\n\t        return segment.parent === parent ? counter + 1 : counter;\n\t      }, 0);\n\t      this.hls.trigger(_events2.default.BUFFER_APPENDED, { parent: parent, pending: pending });\n\t\n\t      // don't append in flushing mode\n\t      if (!this._needsFlush) {\n\t        this.doAppending();\n\t      }\n\t\n\t      this.updateMediaElementDuration();\n\t    }\n\t  }, {\n\t    key: 'onSBUpdateError',\n\t    value: function onSBUpdateError(event) {\n\t      _logger.logger.error('sourceBuffer error:' + event);\n\t      // according to http://www.w3.org/TR/media-source/#sourcebuffer-append-error\n\t      // this error might not always be fatal (it is fatal if decode error is set, in that case\n\t      // it will be followed by a mediaElement error ...)\n\t      this.hls.trigger(_events2.default.ERROR, { type: _errors.ErrorTypes.MEDIA_ERROR, details: _errors.ErrorDetails.BUFFER_APPENDING_ERROR, fatal: false });\n\t      // we don't need to do more than that, as accordin to the spec, updateend will be fired just after\n\t    }\n\t  }, {\n\t    key: 'onBufferReset',\n\t    value: function onBufferReset() {\n\t      var sourceBuffer = this.sourceBuffer;\n\t      for (var type in sourceBuffer) {\n\t        var sb = sourceBuffer[type];\n\t        try {\n\t          this.mediaSource.removeSourceBuffer(sb);\n\t          sb.removeEventListener('updateend', this.onsbue);\n\t          sb.removeEventListener('error', this.onsbe);\n\t        } catch (err) {}\n\t      }\n\t      this.sourceBuffer = {};\n\t      this.flushRange = [];\n\t      this.segments = [];\n\t      this.appended = 0;\n\t    }\n\t  }, {\n\t    key: 'onBufferCodecs',\n\t    value: function onBufferCodecs(tracks) {\n\t      // if source buffer(s) not created yet, appended buffer tracks in this.pendingTracks\n\t      // if sourcebuffers already created, do nothing ...\n\t      if (Object.keys(this.sourceBuffer).length === 0) {\n\t        for (var trackName in tracks) {\n\t          this.pendingTracks[trackName] = tracks[trackName];\n\t        }\n\t        var mediaSource = this.mediaSource;\n\t        if (mediaSource && mediaSource.readyState === 'open') {\n\t          // try to create sourcebuffers if mediasource opened\n\t          this.checkPendingTracks();\n\t        }\n\t      }\n\t    }\n\t  }, {\n\t    key: 'createSourceBuffers',\n\t    value: function createSourceBuffers(tracks) {\n\t      var sourceBuffer = this.sourceBuffer,\n\t          mediaSource = this.mediaSource;\n\t\n\t      for (var trackName in tracks) {\n\t        if (!sourceBuffer[trackName]) {\n\t          var track = tracks[trackName];\n\t          // use levelCodec as first priority\n\t          var codec = track.levelCodec || track.codec;\n\t          var mimeType = track.container + ';codecs=' + codec;\n\t          _logger.logger.log('creating sourceBuffer(' + mimeType + ')');\n\t          try {\n\t            var sb = sourceBuffer[trackName] = mediaSource.addSourceBuffer(mimeType);\n\t            sb.addEventListener('updateend', this.onsbue);\n\t            sb.addEventListener('error', this.onsbe);\n\t            this.tracks[trackName] = { codec: codec, container: track.container };\n\t            track.buffer = sb;\n\t          } catch (err) {\n\t            _logger.logger.error('error while trying to add sourceBuffer:' + err.message);\n\t            this.hls.trigger(_events2.default.ERROR, { type: _errors.ErrorTypes.MEDIA_ERROR, details: _errors.ErrorDetails.BUFFER_ADD_CODEC_ERROR, fatal: false, err: err, mimeType: mimeType });\n\t          }\n\t        }\n\t      }\n\t      this.hls.trigger(_events2.default.BUFFER_CREATED, { tracks: tracks });\n\t    }\n\t  }, {\n\t    key: 'onBufferAppending',\n\t    value: function onBufferAppending(data) {\n\t      if (!this._needsFlush) {\n\t        if (!this.segments) {\n\t          this.segments = [data];\n\t        } else {\n\t          this.segments.push(data);\n\t        }\n\t        this.doAppending();\n\t      }\n\t    }\n\t  }, {\n\t    key: 'onBufferAppendFail',\n\t    value: function onBufferAppendFail(data) {\n\t      _logger.logger.error('sourceBuffer error:', data.event);\n\t      // according to http://www.w3.org/TR/media-source/#sourcebuffer-append-error\n\t      // this error might not always be fatal (it is fatal if decode error is set, in that case\n\t      // it will be followed by a mediaElement error ...)\n\t      this.hls.trigger(_events2.default.ERROR, { type: _errors.ErrorTypes.MEDIA_ERROR, details: _errors.ErrorDetails.BUFFER_APPENDING_ERROR, fatal: false, frag: this.fragCurrent });\n\t    }\n\t\n\t    // on BUFFER_EOS mark matching sourcebuffer(s) as ended and trigger checkEos()\n\t\n\t  }, {\n\t    key: 'onBufferEos',\n\t    value: function onBufferEos(data) {\n\t      var sb = this.sourceBuffer;\n\t      var dataType = data.type;\n\t      for (var type in sb) {\n\t        if (!dataType || type === dataType) {\n\t          if (!sb[type].ended) {\n\t            sb[type].ended = true;\n\t            _logger.logger.log(type + ' sourceBuffer now EOS');\n\t          }\n\t        }\n\t      }\n\t      this.checkEos();\n\t    }\n\t\n\t    // if all source buffers are marked as ended, signal endOfStream() to MediaSource.\n\t\n\t  }, {\n\t    key: 'checkEos',\n\t    value: function checkEos() {\n\t      var sb = this.sourceBuffer,\n\t          mediaSource = this.mediaSource;\n\t      if (!mediaSource || mediaSource.readyState !== 'open') {\n\t        this._needsEos = false;\n\t        return;\n\t      }\n\t      for (var type in sb) {\n\t        var sbobj = sb[type];\n\t        if (!sbobj.ended) {\n\t          return;\n\t        }\n\t        if (sbobj.updating) {\n\t          this._needsEos = true;\n\t          return;\n\t        }\n\t      }\n\t      _logger.logger.log('all media data available, signal endOfStream() to MediaSource and stop loading fragment');\n\t      //Notify the media element that it now has all of the media data\n\t      try {\n\t        mediaSource.endOfStream();\n\t      } catch (e) {\n\t        _logger.logger.warn('exception while calling mediaSource.endOfStream()');\n\t      }\n\t      this._needsEos = false;\n\t    }\n\t  }, {\n\t    key: 'onBufferFlushing',\n\t    value: function onBufferFlushing(data) {\n\t      this.flushRange.push({ start: data.startOffset, end: data.endOffset, type: data.type });\n\t      // attempt flush immediatly\n\t      this.flushBufferCounter = 0;\n\t      this.doFlush();\n\t    }\n\t  }, {\n\t    key: 'onLevelUpdated',\n\t    value: function onLevelUpdated(event) {\n\t      var details = event.details;\n\t      if (details.fragments.length === 0) {\n\t        return;\n\t      }\n\t      this._levelDuration = details.totalduration + details.fragments[0].start;\n\t      this.updateMediaElementDuration();\n\t    }\n\t\n\t    // https://github.com/dailymotion/hls.js/issues/355\n\t\n\t  }, {\n\t    key: 'updateMediaElementDuration',\n\t    value: function updateMediaElementDuration() {\n\t      var media = this.media,\n\t          mediaSource = this.mediaSource,\n\t          sourceBuffer = this.sourceBuffer,\n\t          levelDuration = this._levelDuration;\n\t      if (levelDuration === null || !media || !mediaSource || !sourceBuffer || media.readyState === 0 || mediaSource.readyState !== 'open') {\n\t        return;\n\t      }\n\t      for (var type in sourceBuffer) {\n\t        if (sourceBuffer[type].updating) {\n\t          // can't set duration whilst a buffer is updating\n\t          return;\n\t        }\n\t      }\n\t      if (this._msDuration === null) {\n\t        // initialise to the value that the media source is reporting\n\t        this._msDuration = mediaSource.duration;\n\t      }\n\t      var duration = media.duration;\n\t      // levelDuration was the last value we set.\n\t      // not using mediaSource.duration as the browser may tweak this value\n\t      // only update mediasource duration if its value increase, this is to avoid\n\t      // flushing already buffered portion when switching between quality level\n\t      if (levelDuration > this._msDuration && levelDuration > duration || duration === Infinity || isNaN(duration)) {\n\t        _logger.logger.log('Updating mediasource duration to ' + levelDuration.toFixed(3));\n\t        this._msDuration = mediaSource.duration = levelDuration;\n\t      }\n\t    }\n\t  }, {\n\t    key: 'doFlush',\n\t    value: function doFlush() {\n\t      // loop through all buffer ranges to flush\n\t      while (this.flushRange.length) {\n\t        var range = this.flushRange[0];\n\t        // flushBuffer will abort any buffer append in progress and flush Audio/Video Buffer\n\t        if (this.flushBuffer(range.start, range.end, range.type)) {\n\t          // range flushed, remove from flush array\n\t          this.flushRange.shift();\n\t          this.flushBufferCounter = 0;\n\t        } else {\n\t          this._needsFlush = true;\n\t          // avoid looping, wait for SB update end to retrigger a flush\n\t          return;\n\t        }\n\t      }\n\t      if (this.flushRange.length === 0) {\n\t        // everything flushed\n\t        this._needsFlush = false;\n\t\n\t        // let's recompute this.appended, which is used to avoid flush looping\n\t        var appended = 0;\n\t        var sourceBuffer = this.sourceBuffer;\n\t        try {\n\t          for (var type in sourceBuffer) {\n\t            appended += sourceBuffer[type].buffered.length;\n\t          }\n\t        } catch (error) {\n\t          // error could be thrown while accessing buffered, in case sourcebuffer has already been removed from MediaSource\n\t          // this is harmess at this stage, catch this to avoid reporting an internal exception\n\t          _logger.logger.error('error while accessing sourceBuffer.buffered');\n\t        }\n\t        this.appended = appended;\n\t        this.hls.trigger(_events2.default.BUFFER_FLUSHED);\n\t      }\n\t    }\n\t  }, {\n\t    key: 'doAppending',\n\t    value: function doAppending() {\n\t      var hls = this.hls,\n\t          sourceBuffer = this.sourceBuffer,\n\t          segments = this.segments;\n\t      if (Object.keys(sourceBuffer).length) {\n\t        if (this.media.error) {\n\t          this.segments = [];\n\t          _logger.logger.error('trying to append although a media error occured, flush segment and abort');\n\t          return;\n\t        }\n\t        if (this.appending) {\n\t          //logger.log(`sb appending in progress`);\n\t          return;\n\t        }\n\t        if (segments && segments.length) {\n\t          var segment = segments.shift();\n\t          try {\n\t            var type = segment.type,\n\t                sb = sourceBuffer[type];\n\t            if (sb) {\n\t              if (!sb.updating) {\n\t                // reset sourceBuffer ended flag before appending segment\n\t                sb.ended = false;\n\t                //logger.log(`appending ${segment.content} ${type} SB, size:${segment.data.length}, ${segment.parent}`);\n\t                this.parent = segment.parent;\n\t                sb.appendBuffer(segment.data);\n\t                this.appendError = 0;\n\t                this.appended++;\n\t                this.appending = true;\n\t              } else {\n\t                segments.unshift(segment);\n\t              }\n\t            } else {\n\t              // in case we don't have any source buffer matching with this segment type,\n\t              // it means that Mediasource fails to create sourcebuffer\n\t              // discard this segment, and trigger update end\n\t              this.onSBUpdateEnd();\n\t            }\n\t          } catch (err) {\n\t            // in case any error occured while appending, put back segment in segments table\n\t            _logger.logger.error('error while trying to append buffer:' + err.message);\n\t            segments.unshift(segment);\n\t            var event = { type: _errors.ErrorTypes.MEDIA_ERROR };\n\t            if (err.code !== 22) {\n\t              if (this.appendError) {\n\t                this.appendError++;\n\t              } else {\n\t                this.appendError = 1;\n\t              }\n\t              event.details = _errors.ErrorDetails.BUFFER_APPEND_ERROR;\n\t              event.frag = this.fragCurrent;\n\t              /* with UHD content, we could get loop of quota exceeded error until\n\t                browser is able to evict some data from sourcebuffer. retrying help recovering this\n\t              */\n\t              if (this.appendError > hls.config.appendErrorMaxRetry) {\n\t                _logger.logger.log('fail ' + hls.config.appendErrorMaxRetry + ' times to append segment in sourceBuffer');\n\t                segments = [];\n\t                event.fatal = true;\n\t                hls.trigger(_events2.default.ERROR, event);\n\t                return;\n\t              } else {\n\t                event.fatal = false;\n\t                hls.trigger(_events2.default.ERROR, event);\n\t              }\n\t            } else {\n\t              // QuotaExceededError: http://www.w3.org/TR/html5/infrastructure.html#quotaexceedederror\n\t              // let's stop appending any segments, and report BUFFER_FULL_ERROR error\n\t              this.segments = [];\n\t              event.details = _errors.ErrorDetails.BUFFER_FULL_ERROR;\n\t              event.fatal = false;\n\t              hls.trigger(_events2.default.ERROR, event);\n\t              return;\n\t            }\n\t          }\n\t        }\n\t      }\n\t    }\n\t\n\t    /*\n\t      flush specified buffered range,\n\t      return true once range has been flushed.\n\t      as sourceBuffer.remove() is asynchronous, flushBuffer will be retriggered on sourceBuffer update end\n\t    */\n\t\n\t  }, {\n\t    key: 'flushBuffer',\n\t    value: function flushBuffer(startOffset, endOffset, typeIn) {\n\t      var sb,\n\t          i,\n\t          bufStart,\n\t          bufEnd,\n\t          flushStart,\n\t          flushEnd,\n\t          sourceBuffer = this.sourceBuffer;\n\t      if (Object.keys(sourceBuffer).length) {\n\t        _logger.logger.log('flushBuffer,pos/start/end: ' + this.media.currentTime.toFixed(3) + '/' + startOffset + '/' + endOffset);\n\t        // safeguard to avoid infinite looping : don't try to flush more than the nb of appended segments\n\t        if (this.flushBufferCounter < this.appended) {\n\t          for (var type in sourceBuffer) {\n\t            // check if sourcebuffer type is defined (typeIn): if yes, let's only flush this one\n\t            // if no, let's flush all sourcebuffers\n\t            if (typeIn && type !== typeIn) {\n\t              continue;\n\t            }\n\t            sb = sourceBuffer[type];\n\t            // we are going to flush buffer, mark source buffer as 'not ended'\n\t            sb.ended = false;\n\t            if (!sb.updating) {\n\t              try {\n\t                for (i = 0; i < sb.buffered.length; i++) {\n\t                  bufStart = sb.buffered.start(i);\n\t                  bufEnd = sb.buffered.end(i);\n\t                  // workaround firefox not able to properly flush multiple buffered range.\n\t                  if (navigator.userAgent.toLowerCase().indexOf('firefox') !== -1 && endOffset === Number.POSITIVE_INFINITY) {\n\t                    flushStart = startOffset;\n\t                    flushEnd = endOffset;\n\t                  } else {\n\t                    flushStart = Math.max(bufStart, startOffset);\n\t                    flushEnd = Math.min(bufEnd, endOffset);\n\t                  }\n\t                  /* sometimes sourcebuffer.remove() does not flush\n\t                     the exact expected time range.\n\t                     to avoid rounding issues/infinite loop,\n\t                     only flush buffer range of length greater than 500ms.\n\t                  */\n\t                  if (Math.min(flushEnd, bufEnd) - flushStart > 0.5) {\n\t                    this.flushBufferCounter++;\n\t                    _logger.logger.log('flush ' + type + ' [' + flushStart + ',' + flushEnd + '], of [' + bufStart + ',' + bufEnd + '], pos:' + this.media.currentTime);\n\t                    sb.remove(flushStart, flushEnd);\n\t                    return false;\n\t                  }\n\t                }\n\t              } catch (e) {\n\t                _logger.logger.warn('exception while accessing sourcebuffer, it might have been removed from MediaSource');\n\t              }\n\t            } else {\n\t              //logger.log('abort ' + type + ' append in progress');\n\t              // this will abort any appending in progress\n\t              //sb.abort();\n\t              _logger.logger.warn('cannot flush, sb updating in progress');\n\t              return false;\n\t            }\n\t          }\n\t        } else {\n\t          _logger.logger.warn('abort flushing too many retries');\n\t        }\n\t        _logger.logger.log('buffer flushed');\n\t      }\n\t      // everything flushed !\n\t      return true;\n\t    }\n\t  }]);\n\t\n\t  return BufferController;\n\t}(_eventHandler2.default);\n\t\n\texports.default = BufferController;\n\t\n\t},{\"26\":26,\"27\":27,\"28\":28,\"45\":45}],8:[function(_dereq_,module,exports){\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _events = _dereq_(28);\n\t\n\tvar _events2 = _interopRequireDefault(_events);\n\t\n\tvar _eventHandler = _dereq_(27);\n\t\n\tvar _eventHandler2 = _interopRequireDefault(_eventHandler);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /*\n\t                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * cap stream level to media size dimension controller\n\t                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               */\n\t\n\tvar CapLevelController = function (_EventHandler) {\n\t  _inherits(CapLevelController, _EventHandler);\n\t\n\t  function CapLevelController(hls) {\n\t    _classCallCheck(this, CapLevelController);\n\t\n\t    return _possibleConstructorReturn(this, (CapLevelController.__proto__ || Object.getPrototypeOf(CapLevelController)).call(this, hls, _events2.default.FPS_DROP_LEVEL_CAPPING, _events2.default.MEDIA_ATTACHING, _events2.default.MANIFEST_PARSED));\n\t  }\n\t\n\t  _createClass(CapLevelController, [{\n\t    key: 'destroy',\n\t    value: function destroy() {\n\t      if (this.hls.config.capLevelToPlayerSize) {\n\t        this.media = this.restrictedLevels = null;\n\t        this.autoLevelCapping = Number.POSITIVE_INFINITY;\n\t        if (this.timer) {\n\t          this.timer = clearInterval(this.timer);\n\t        }\n\t      }\n\t    }\n\t  }, {\n\t    key: 'onFpsDropLevelCapping',\n\t    value: function onFpsDropLevelCapping(data) {\n\t      if (!this.restrictedLevels) {\n\t        this.restrictedLevels = [];\n\t      }\n\t      if (!this.isLevelRestricted(data.droppedLevel)) {\n\t        this.restrictedLevels.push(data.droppedLevel);\n\t      }\n\t    }\n\t  }, {\n\t    key: 'onMediaAttaching',\n\t    value: function onMediaAttaching(data) {\n\t      this.media = data.media instanceof HTMLVideoElement ? data.media : null;\n\t    }\n\t  }, {\n\t    key: 'onManifestParsed',\n\t    value: function onManifestParsed(data) {\n\t      var hls = this.hls;\n\t      if (hls.config.capLevelToPlayerSize) {\n\t        this.autoLevelCapping = Number.POSITIVE_INFINITY;\n\t        this.levels = data.levels;\n\t        hls.firstLevel = this.getMaxLevel(data.firstLevel);\n\t        clearInterval(this.timer);\n\t        this.timer = setInterval(this.detectPlayerSize.bind(this), 1000);\n\t        this.detectPlayerSize();\n\t      }\n\t    }\n\t  }, {\n\t    key: 'detectPlayerSize',\n\t    value: function detectPlayerSize() {\n\t      if (this.media) {\n\t        var levelsLength = this.levels ? this.levels.length : 0;\n\t        if (levelsLength) {\n\t          var hls = this.hls;\n\t          hls.autoLevelCapping = this.getMaxLevel(levelsLength - 1);\n\t          if (hls.autoLevelCapping > this.autoLevelCapping) {\n\t            // if auto level capping has a higher value for the previous one, flush the buffer using nextLevelSwitch\n\t            // usually happen when the user go to the fullscreen mode.\n\t            hls.streamController.nextLevelSwitch();\n\t          }\n\t          this.autoLevelCapping = hls.autoLevelCapping;\n\t        }\n\t      }\n\t    }\n\t\n\t    /*\n\t    * returns level should be the one with the dimensions equal or greater than the media (player) dimensions (so the video will be downscaled)\n\t    */\n\t\n\t  }, {\n\t    key: 'getMaxLevel',\n\t    value: function getMaxLevel(capLevelIndex) {\n\t      var result = 0,\n\t          i = void 0,\n\t          level = void 0,\n\t          mWidth = this.mediaWidth,\n\t          mHeight = this.mediaHeight,\n\t          lWidth = 0,\n\t          lHeight = 0;\n\t\n\t      for (i = 0; i <= capLevelIndex; i++) {\n\t        level = this.levels[i];\n\t        if (this.isLevelRestricted(i)) {\n\t          break;\n\t        }\n\t        result = i;\n\t        lWidth = level.width;\n\t        lHeight = level.height;\n\t        if (mWidth <= lWidth || mHeight <= lHeight) {\n\t          break;\n\t        }\n\t      }\n\t      return result;\n\t    }\n\t  }, {\n\t    key: 'isLevelRestricted',\n\t    value: function isLevelRestricted(level) {\n\t      return this.restrictedLevels && this.restrictedLevels.indexOf(level) !== -1 ? true : false;\n\t    }\n\t  }, {\n\t    key: 'contentScaleFactor',\n\t    get: function get() {\n\t      var pixelRatio = 1;\n\t      try {\n\t        pixelRatio = window.devicePixelRatio;\n\t      } catch (e) {}\n\t      return pixelRatio;\n\t    }\n\t  }, {\n\t    key: 'mediaWidth',\n\t    get: function get() {\n\t      var width = void 0;\n\t      var media = this.media;\n\t      if (media) {\n\t        width = media.width || media.clientWidth || media.offsetWidth;\n\t        width *= this.contentScaleFactor;\n\t      }\n\t      return width;\n\t    }\n\t  }, {\n\t    key: 'mediaHeight',\n\t    get: function get() {\n\t      var height = void 0;\n\t      var media = this.media;\n\t      if (media) {\n\t        height = media.height || media.clientHeight || media.offsetHeight;\n\t        height *= this.contentScaleFactor;\n\t      }\n\t      return height;\n\t    }\n\t  }]);\n\t\n\t  return CapLevelController;\n\t}(_eventHandler2.default);\n\t\n\texports.default = CapLevelController;\n\t\n\t},{\"27\":27,\"28\":28}],9:[function(_dereq_,module,exports){\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }(); /*\n\tandwidth Estimator\n\theavily inspired from shaka-player\n\tracks bandwidth samples and estimates available bandwidth.\n\tased on the minimum of two exponentially-weighted moving averages with\n\tdifferent half-lives.\n\tn\t\n\tvar _ewma = _dereq_(44);\n\t\n\tvar _ewma2 = _interopRequireDefault(_ewma);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tvar EwmaBandWidthEstimator = function () {\n\t  function EwmaBandWidthEstimator(hls, slow, fast, defaultEstimate) {\n\t    _classCallCheck(this, EwmaBandWidthEstimator);\n\t\n\t    this.hls = hls;\n\t    this.defaultEstimate_ = defaultEstimate;\n\t    this.minWeight_ = 0.001;\n\t    this.minDelayMs_ = 50;\n\t    this.slow_ = new _ewma2.default(slow);\n\t    this.fast_ = new _ewma2.default(fast);\n\t  }\n\t\n\t  _createClass(EwmaBandWidthEstimator, [{\n\t    key: 'sample',\n\t    value: function sample(durationMs, numBytes) {\n\t      durationMs = Math.max(durationMs, this.minDelayMs_);\n\t      var bandwidth = 8000 * numBytes / durationMs,\n\t\n\t      //console.log('instant bw:'+ Math.round(bandwidth));\n\t      // we weight sample using loading duration....\n\t      weight = durationMs / 1000;\n\t      this.fast_.sample(weight, bandwidth);\n\t      this.slow_.sample(weight, bandwidth);\n\t    }\n\t  }, {\n\t    key: 'canEstimate',\n\t    value: function canEstimate() {\n\t      var fast = this.fast_;\n\t      return fast && fast.getTotalWeight() >= this.minWeight_;\n\t    }\n\t  }, {\n\t    key: 'getEstimate',\n\t    value: function getEstimate() {\n\t      if (this.canEstimate()) {\n\t        //console.log('slow estimate:'+ Math.round(this.slow_.getEstimate()));\n\t        //console.log('fast estimate:'+ Math.round(this.fast_.getEstimate()));\n\t        // Take the minimum of these two estimates.  This should have the effect of\n\t        // adapting down quickly, but up more slowly.\n\t        return Math.min(this.fast_.getEstimate(), this.slow_.getEstimate());\n\t      } else {\n\t        return this.defaultEstimate_;\n\t      }\n\t    }\n\t  }, {\n\t    key: 'destroy',\n\t    value: function destroy() {}\n\t  }]);\n\t\n\t  return EwmaBandWidthEstimator;\n\t}();\n\t\n\texports.default = EwmaBandWidthEstimator;\n\t\n\t},{\"44\":44}],10:[function(_dereq_,module,exports){\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _events = _dereq_(28);\n\t\n\tvar _events2 = _interopRequireDefault(_events);\n\t\n\tvar _eventHandler = _dereq_(27);\n\t\n\tvar _eventHandler2 = _interopRequireDefault(_eventHandler);\n\t\n\tvar _logger = _dereq_(45);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /*\n\tontroller\n\t                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               */\n\t\n\tvar FPSController = function (_EventHandler) {\n\t  _inherits(FPSController, _EventHandler);\n\t\n\t  function FPSController(hls) {\n\t    _classCallCheck(this, FPSController);\n\t\n\t    return _possibleConstructorReturn(this, (FPSController.__proto__ || Object.getPrototypeOf(FPSController)).call(this, hls, _events2.default.MEDIA_ATTACHING));\n\t  }\n\t\n\t  _createClass(FPSController, [{\n\t    key: 'destroy',\n\t    value: function destroy() {\n\t      if (this.timer) {\n\t        clearInterval(this.timer);\n\t      }\n\t      this.isVideoPlaybackQualityAvailable = false;\n\t    }\n\t  }, {\n\t    key: 'onMediaAttaching',\n\t    value: function onMediaAttaching(data) {\n\t      var config = this.hls.config;\n\t      if (config.capLevelOnFPSDrop) {\n\t        var video = this.video = data.media instanceof HTMLVideoElement ? data.media : null;\n\t        if (typeof video.getVideoPlaybackQuality === 'function') {\n\t          this.isVideoPlaybackQualityAvailable = true;\n\t        }\n\t        clearInterval(this.timer);\n\t        this.timer = setInterval(this.checkFPSInterval.bind(this), config.fpsDroppedMonitoringPeriod);\n\t      }\n\t    }\n\t  }, {\n\t    key: 'checkFPS',\n\t    value: function checkFPS(video, decodedFrames, droppedFrames) {\n\t      var currentTime = performance.now();\n\t      if (decodedFrames) {\n\t        if (this.lastTime) {\n\t          var currentPeriod = currentTime - this.lastTime,\n\t              currentDropped = droppedFrames - this.lastDroppedFrames,\n\t              currentDecoded = decodedFrames - this.lastDecodedFrames,\n\t              droppedFPS = 1000 * currentDropped / currentPeriod,\n\t              hls = this.hls;\n\t          hls.trigger(_events2.default.FPS_DROP, { currentDropped: currentDropped, currentDecoded: currentDecoded, totalDroppedFrames: droppedFrames });\n\t          if (droppedFPS > 0) {\n\t            //logger.log('checkFPS : droppedFPS/decodedFPS:' + droppedFPS/(1000 * currentDecoded / currentPeriod));\n\t            if (currentDropped > hls.config.fpsDroppedMonitoringThreshold * currentDecoded) {\n\t              var currentLevel = hls.currentLevel;\n\t              _logger.logger.warn('drop FPS ratio greater than max allowed value for currentLevel: ' + currentLevel);\n\t              if (currentLevel > 0 && (hls.autoLevelCapping === -1 || hls.autoLevelCapping >= currentLevel)) {\n\t                currentLevel = currentLevel - 1;\n\t                hls.trigger(_events2.default.FPS_DROP_LEVEL_CAPPING, { level: currentLevel, droppedLevel: hls.currentLevel });\n\t                hls.autoLevelCapping = currentLevel;\n\t                hls.streamController.nextLevelSwitch();\n\t              }\n\t            }\n\t          }\n\t        }\n\t        this.lastTime = currentTime;\n\t        this.lastDroppedFrames = droppedFrames;\n\t        this.lastDecodedFrames = decodedFrames;\n\t      }\n\t    }\n\t  }, {\n\t    key: 'checkFPSInterval',\n\t    value: function checkFPSInterval() {\n\t      var video = this.video;\n\t      if (video) {\n\t        if (this.isVideoPlaybackQualityAvailable) {\n\t          var videoPlaybackQuality = video.getVideoPlaybackQuality();\n\t          this.checkFPS(video, videoPlaybackQuality.totalVideoFrames, videoPlaybackQuality.droppedVideoFrames);\n\t        } else {\n\t          this.checkFPS(video, video.webkitDecodedFrameCount, video.webkitDroppedFrameCount);\n\t        }\n\t      }\n\t    }\n\t  }]);\n\t\n\t  return FPSController;\n\t}(_eventHandler2.default);\n\t\n\texports.default = FPSController;\n\t\n\t},{\"27\":27,\"28\":28,\"45\":45}],11:[function(_dereq_,module,exports){\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _events = _dereq_(28);\n\t\n\tvar _events2 = _interopRequireDefault(_events);\n\t\n\tvar _eventHandler = _dereq_(27);\n\t\n\tvar _eventHandler2 = _interopRequireDefault(_eventHandler);\n\t\n\tvar _logger = _dereq_(45);\n\t\n\tvar _errors = _dereq_(26);\n\t\n\tvar _bufferHelper = _dereq_(30);\n\t\n\tvar _bufferHelper2 = _interopRequireDefault(_bufferHelper);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /*\n\t                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * Level Controller\n\t                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               */\n\t\n\tvar LevelController = function (_EventHandler) {\n\t  _inherits(LevelController, _EventHandler);\n\t\n\t  function LevelController(hls) {\n\t    _classCallCheck(this, LevelController);\n\t\n\t    var _this = _possibleConstructorReturn(this, (LevelController.__proto__ || Object.getPrototypeOf(LevelController)).call(this, hls, _events2.default.MANIFEST_LOADED, _events2.default.LEVEL_LOADED, _events2.default.FRAG_LOADED, _events2.default.ERROR));\n\t\n\t    _this.ontick = _this.tick.bind(_this);\n\t    _this._manualLevel = _this._autoLevelCapping = -1;\n\t    return _this;\n\t  }\n\t\n\t  _createClass(LevelController, [{\n\t    key: 'destroy',\n\t    value: function destroy() {\n\t      if (this.timer) {\n\t        clearTimeout(this.timer);\n\t        this.timer = null;\n\t      }\n\t      this._manualLevel = -1;\n\t    }\n\t  }, {\n\t    key: 'startLoad',\n\t    value: function startLoad() {\n\t      this.canload = true;\n\t      var levels = this._levels;\n\t      // clean up live level details to force reload them, and reset load errors\n\t      if (levels) {\n\t        levels.forEach(function (level) {\n\t          level.loadError = 0;\n\t          var levelDetails = level.details;\n\t          if (levelDetails && levelDetails.live) {\n\t            level.details = undefined;\n\t          }\n\t        });\n\t      }\n\t      // speed up live playlist refresh if timer exists\n\t      if (this.timer) {\n\t        this.tick();\n\t      }\n\t    }\n\t  }, {\n\t    key: 'stopLoad',\n\t    value: function stopLoad() {\n\t      this.canload = false;\n\t    }\n\t  }, {\n\t    key: 'onManifestLoaded',\n\t    value: function onManifestLoaded(data) {\n\t      var levels0 = [],\n\t          levels = [],\n\t          bitrateStart,\n\t          bitrateSet = {},\n\t          videoCodecFound = false,\n\t          audioCodecFound = false,\n\t          hls = this.hls,\n\t          brokenmp4inmp3 = /chrome|firefox/.test(navigator.userAgent.toLowerCase()),\n\t          checkSupported = function checkSupported(type, codec) {\n\t        return MediaSource.isTypeSupported(type + '/mp4;codecs=' + codec);\n\t      };\n\t\n\t      // regroup redundant level together\n\t      data.levels.forEach(function (level) {\n\t        if (level.videoCodec) {\n\t          videoCodecFound = true;\n\t        }\n\t        // erase audio codec info if browser does not support mp4a.40.34. demuxer will autodetect codec and fallback to mpeg/audio\n\t        if (brokenmp4inmp3 && level.audioCodec && level.audioCodec.indexOf('mp4a.40.34') !== -1) {\n\t          level.audioCodec = undefined;\n\t        }\n\t        if (level.audioCodec || level.attrs && level.attrs.AUDIO) {\n\t          audioCodecFound = true;\n\t        }\n\t        var redundantLevelId = bitrateSet[level.bitrate];\n\t        if (redundantLevelId === undefined) {\n\t          bitrateSet[level.bitrate] = levels0.length;\n\t          level.url = [level.url];\n\t          level.urlId = 0;\n\t          levels0.push(level);\n\t        } else {\n\t          levels0[redundantLevelId].url.push(level.url);\n\t        }\n\t      });\n\t\n\t      // remove audio-only level if we also have levels with audio+video codecs signalled\n\t      if (videoCodecFound && audioCodecFound) {\n\t        levels0.forEach(function (level) {\n\t          if (level.videoCodec) {\n\t            levels.push(level);\n\t          }\n\t        });\n\t      } else {\n\t        levels = levels0;\n\t      }\n\t      // only keep level with supported audio/video codecs\n\t      levels = levels.filter(function (level) {\n\t        var audioCodec = level.audioCodec,\n\t            videoCodec = level.videoCodec;\n\t        return (!audioCodec || checkSupported('audio', audioCodec)) && (!videoCodec || checkSupported('video', videoCodec));\n\t      });\n\t\n\t      if (levels.length) {\n\t        // start bitrate is the first bitrate of the manifest\n\t        bitrateStart = levels[0].bitrate;\n\t        // sort level on bitrate\n\t        levels.sort(function (a, b) {\n\t          return a.bitrate - b.bitrate;\n\t        });\n\t        this._levels = levels;\n\t        // find index of first level in sorted levels\n\t        for (var i = 0; i < levels.length; i++) {\n\t          if (levels[i].bitrate === bitrateStart) {\n\t            this._firstLevel = i;\n\t            _logger.logger.log('manifest loaded,' + levels.length + ' level(s) found, first bitrate:' + bitrateStart);\n\t            break;\n\t          }\n\t        }\n\t        hls.trigger(_events2.default.MANIFEST_PARSED, { levels: levels, firstLevel: this._firstLevel, stats: data.stats, audio: audioCodecFound, video: videoCodecFound, altAudio: data.audioTracks.length > 0 });\n\t      } else {\n\t        hls.trigger(_events2.default.ERROR, { type: _errors.ErrorTypes.MEDIA_ERROR, details: _errors.ErrorDetails.MANIFEST_INCOMPATIBLE_CODECS_ERROR, fatal: true, url: hls.url, reason: 'no level with compatible codecs found in manifest' });\n\t      }\n\t      return;\n\t    }\n\t  }, {\n\t    key: 'setLevelInternal',\n\t    value: function setLevelInternal(newLevel) {\n\t      var levels = this._levels;\n\t      // check if level idx is valid\n\t      if (newLevel >= 0 && newLevel < levels.length) {\n\t        // stopping live reloading timer if any\n\t        if (this.timer) {\n\t          clearTimeout(this.timer);\n\t          this.timer = null;\n\t        }\n\t        if (this._level !== newLevel) {\n\t          _logger.logger.log('switching to level ' + newLevel);\n\t          this._level = newLevel;\n\t          this.hls.trigger(_events2.default.LEVEL_SWITCH, { level: newLevel });\n\t        }\n\t        var level = levels[newLevel],\n\t            levelDetails = level.details;\n\t        // check if we need to load playlist for this level\n\t        if (!levelDetails || levelDetails.live === true) {\n\t          // level not retrieved yet, or live playlist we need to (re)load it\n\t          var urlId = level.urlId;\n\t          this.hls.trigger(_events2.default.LEVEL_LOADING, { url: level.url[urlId], level: newLevel, id: urlId });\n\t        }\n\t      } else {\n\t        // invalid level id given, trigger error\n\t        this.hls.trigger(_events2.default.ERROR, { type: _errors.ErrorTypes.OTHER_ERROR, details: _errors.ErrorDetails.LEVEL_SWITCH_ERROR, level: newLevel, fatal: false, reason: 'invalid level idx' });\n\t      }\n\t    }\n\t  }, {\n\t    key: 'onError',\n\t    value: function onError(data) {\n\t      if (data.fatal) {\n\t        return;\n\t      }\n\t\n\t      var details = data.details,\n\t          hls = this.hls,\n\t          levelId = void 0,\n\t          level = void 0,\n\t          levelError = false,\n\t          abrController = hls.abrController,\n\t          minAutoLevel = abrController.minAutoLevel;\n\t      // try to recover not fatal errors\n\t      switch (details) {\n\t        case _errors.ErrorDetails.FRAG_LOAD_ERROR:\n\t        case _errors.ErrorDetails.FRAG_LOAD_TIMEOUT:\n\t        case _errors.ErrorDetails.FRAG_LOOP_LOADING_ERROR:\n\t        case _errors.ErrorDetails.KEY_LOAD_ERROR:\n\t        case _errors.ErrorDetails.KEY_LOAD_TIMEOUT:\n\t          levelId = data.frag.level;\n\t          break;\n\t        case _errors.ErrorDetails.LEVEL_LOAD_ERROR:\n\t        case _errors.ErrorDetails.LEVEL_LOAD_TIMEOUT:\n\t          levelId = data.context.level;\n\t          levelError = true;\n\t          break;\n\t        case _errors.ErrorDetails.REMUX_ALLOC_ERROR:\n\t          levelId = data.level;\n\t          break;\n\t        default:\n\t          break;\n\t      }\n\t      /* try to switch to a redundant stream if any available.\n\t       * if no redundant stream available, emergency switch down (if in auto mode and current level not 0)\n\t       * otherwise, we cannot recover this network error ...\n\t       */\n\t      if (levelId !== undefined) {\n\t        level = this._levels[levelId];\n\t        if (!level.loadError) {\n\t          level.loadError = 1;\n\t        } else {\n\t          level.loadError++;\n\t        }\n\t        // if any redundant streams available and if we haven't try them all (level.loadError is reseted on successful frag/level load.\n\t        // if level.loadError reaches nbRedundantLevel it means that we tried them all, no hope  => let's switch down\n\t        var nbRedundantLevel = level.url.length;\n\t        if (nbRedundantLevel > 1 && level.loadError < nbRedundantLevel) {\n\t          level.urlId = (level.urlId + 1) % nbRedundantLevel;\n\t          level.details = undefined;\n\t          _logger.logger.warn('level controller,' + details + ' for level ' + levelId + ': switching to redundant stream id ' + level.urlId);\n\t        } else {\n\t          // we could try to recover if in auto mode and current level not lowest level (0)\n\t          var recoverable = this._manualLevel === -1 && levelId;\n\t          if (recoverable) {\n\t            _logger.logger.warn('level controller,' + details + ': switch-down for next fragment');\n\t            abrController.nextAutoLevel = Math.max(minAutoLevel, levelId - 1);\n\t          } else if (level && level.details && level.details.live) {\n\t            _logger.logger.warn('level controller,' + details + ' on live stream, discard');\n\t            if (levelError) {\n\t              // reset this._level so that another call to set level() will retrigger a frag load\n\t              this._level = undefined;\n\t            }\n\t            // other errors are handled by stream controller\n\t          } else if (details === _errors.ErrorDetails.LEVEL_LOAD_ERROR || details === _errors.ErrorDetails.LEVEL_LOAD_TIMEOUT) {\n\t            var media = hls.media,\n\t\n\t            // 0.5 : tolerance needed as some browsers stalls playback before reaching buffered end\n\t            mediaBuffered = media && _bufferHelper2.default.isBuffered(media, media.currentTime) && _bufferHelper2.default.isBuffered(media, media.currentTime + 0.5);\n\t            if (mediaBuffered) {\n\t              var retryDelay = hls.config.levelLoadingRetryDelay;\n\t              _logger.logger.warn('level controller,' + details + ', but media buffered, retry in ' + retryDelay + 'ms');\n\t              this.timer = setTimeout(this.ontick, retryDelay);\n\t            } else {\n\t              _logger.logger.error('cannot recover ' + details + ' error');\n\t              this._level = undefined;\n\t              // stopping live reloading timer if any\n\t              if (this.timer) {\n\t                clearTimeout(this.timer);\n\t                this.timer = null;\n\t              }\n\t              // redispatch same error but with fatal set to true\n\t              data.fatal = true;\n\t              hls.trigger(_events2.default.ERROR, data);\n\t            }\n\t          }\n\t        }\n\t      }\n\t    }\n\t\n\t    // reset level load error counter on successful frag loaded\n\t\n\t  }, {\n\t    key: 'onFragLoaded',\n\t    value: function onFragLoaded(data) {\n\t      var fragLoaded = data.frag;\n\t      if (fragLoaded && fragLoaded.type === 'main') {\n\t        var level = this._levels[fragLoaded.level];\n\t        if (level) {\n\t          level.loadError = 0;\n\t        }\n\t      }\n\t    }\n\t  }, {\n\t    key: 'onLevelLoaded',\n\t    value: function onLevelLoaded(data) {\n\t      var levelId = data.level;\n\t      // only process level loaded events matching with expected level\n\t      if (levelId === this._level) {\n\t        var curLevel = this._levels[levelId];\n\t        // reset level load error counter on successful level loaded\n\t        curLevel.loadError = 0;\n\t        var newDetails = data.details;\n\t        // if current playlist is a live playlist, arm a timer to reload it\n\t        if (newDetails.live) {\n\t          var reloadInterval = 1000 * (newDetails.averagetargetduration ? newDetails.averagetargetduration : newDetails.targetduration),\n\t              curDetails = curLevel.details;\n\t          if (curDetails && newDetails.endSN === curDetails.endSN) {\n\t            // follow HLS Spec, If the client reloads a Playlist file and finds that it has not\n\t            // changed then it MUST wait for a period of one-half the target\n\t            // duration before retrying.\n\t            reloadInterval /= 2;\n\t            _logger.logger.log('same live playlist, reload twice faster');\n\t          }\n\t          // decrement reloadInterval with level loading delay\n\t          reloadInterval -= performance.now() - data.stats.trequest;\n\t          // in any case, don't reload more than every second\n\t          reloadInterval = Math.max(1000, Math.round(reloadInterval));\n\t          _logger.logger.log('live playlist, reload in ' + reloadInterval + ' ms');\n\t          this.timer = setTimeout(this.ontick, reloadInterval);\n\t        } else {\n\t          this.timer = null;\n\t        }\n\t      }\n\t    }\n\t  }, {\n\t    key: 'tick',\n\t    value: function tick() {\n\t      var levelId = this._level;\n\t      if (levelId !== undefined && this.canload) {\n\t        var level = this._levels[levelId],\n\t            urlId = level.urlId;\n\t        this.hls.trigger(_events2.default.LEVEL_LOADING, { url: level.url[urlId], level: levelId, id: urlId });\n\t      }\n\t    }\n\t  }, {\n\t    key: 'levels',\n\t    get: function get() {\n\t      return this._levels;\n\t    }\n\t  }, {\n\t    key: 'level',\n\t    get: function get() {\n\t      return this._level;\n\t    },\n\t    set: function set(newLevel) {\n\t      var levels = this._levels;\n\t      if (levels && levels.length > newLevel) {\n\t        if (this._level !== newLevel || levels[newLevel].details === undefined) {\n\t          this.setLevelInternal(newLevel);\n\t        }\n\t      }\n\t    }\n\t  }, {\n\t    key: 'manualLevel',\n\t    get: function get() {\n\t      return this._manualLevel;\n\t    },\n\t    set: function set(newLevel) {\n\t      this._manualLevel = newLevel;\n\t      if (this._startLevel === undefined) {\n\t        this._startLevel = newLevel;\n\t      }\n\t      if (newLevel !== -1) {\n\t        this.level = newLevel;\n\t      }\n\t    }\n\t  }, {\n\t    key: 'firstLevel',\n\t    get: function get() {\n\t      return this._firstLevel;\n\t    },\n\t    set: function set(newLevel) {\n\t      this._firstLevel = newLevel;\n\t    }\n\t  }, {\n\t    key: 'startLevel',\n\t    get: function get() {\n\t      // hls.startLevel takes precedence over config.startLevel\n\t      // if none of these values are defined, fallback on this._firstLevel (first quality level appearing in variant manifest)\n\t      if (this._startLevel === undefined) {\n\t        var configStartLevel = this.hls.config.startLevel;\n\t        if (configStartLevel !== undefined) {\n\t          return configStartLevel;\n\t        } else {\n\t          return this._firstLevel;\n\t        }\n\t      } else {\n\t        return this._startLevel;\n\t      }\n\t    },\n\t    set: function set(newLevel) {\n\t      // if not in autostart level, ensure startLevel is greater than minAutoLevel\n\t      if (newLevel !== -1) {\n\t        newLevel = Math.max(newLevel, this.hls.abrController.minAutoLevel);\n\t      }\n\t      this._startLevel = newLevel;\n\t    }\n\t  }, {\n\t    key: 'nextLoadLevel',\n\t    get: function get() {\n\t      if (this._manualLevel !== -1) {\n\t        return this._manualLevel;\n\t      } else {\n\t        return this.hls.abrController.nextAutoLevel;\n\t      }\n\t    },\n\t    set: function set(nextLevel) {\n\t      this.level = nextLevel;\n\t      if (this._manualLevel === -1) {\n\t        this.hls.abrController.nextAutoLevel = nextLevel;\n\t      }\n\t    }\n\t  }]);\n\t\n\t  return LevelController;\n\t}(_eventHandler2.default);\n\t\n\texports.default = LevelController;\n\t\n\t},{\"26\":26,\"27\":27,\"28\":28,\"30\":30,\"45\":45}],12:[function(_dereq_,module,exports){\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _binarySearch = _dereq_(41);\n\t\n\tvar _binarySearch2 = _interopRequireDefault(_binarySearch);\n\t\n\tvar _bufferHelper = _dereq_(30);\n\t\n\tvar _bufferHelper2 = _interopRequireDefault(_bufferHelper);\n\t\n\tvar _demuxer = _dereq_(22);\n\t\n\tvar _demuxer2 = _interopRequireDefault(_demuxer);\n\t\n\tvar _events = _dereq_(28);\n\t\n\tvar _events2 = _interopRequireDefault(_events);\n\t\n\tvar _eventHandler = _dereq_(27);\n\t\n\tvar _eventHandler2 = _interopRequireDefault(_eventHandler);\n\t\n\tvar _levelHelper = _dereq_(31);\n\t\n\tvar _levelHelper2 = _interopRequireDefault(_levelHelper);\n\t\n\tvar _timeRanges = _dereq_(46);\n\t\n\tvar _timeRanges2 = _interopRequireDefault(_timeRanges);\n\t\n\tvar _errors = _dereq_(26);\n\t\n\tvar _logger = _dereq_(45);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /*\n\t                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * Stream Controller\n\t                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               */\n\t\n\tvar State = {\n\t  STOPPED: 'STOPPED',\n\t  IDLE: 'IDLE',\n\t  KEY_LOADING: 'KEY_LOADING',\n\t  FRAG_LOADING: 'FRAG_LOADING',\n\t  FRAG_LOADING_WAITING_RETRY: 'FRAG_LOADING_WAITING_RETRY',\n\t  WAITING_LEVEL: 'WAITING_LEVEL',\n\t  PARSING: 'PARSING',\n\t  PARSED: 'PARSED',\n\t  BUFFER_FLUSHING: 'BUFFER_FLUSHING',\n\t  ENDED: 'ENDED',\n\t  ERROR: 'ERROR'\n\t};\n\t\n\tvar StreamController = function (_EventHandler) {\n\t  _inherits(StreamController, _EventHandler);\n\t\n\t  function StreamController(hls) {\n\t    _classCallCheck(this, StreamController);\n\t\n\t    var _this = _possibleConstructorReturn(this, (StreamController.__proto__ || Object.getPrototypeOf(StreamController)).call(this, hls, _events2.default.MEDIA_ATTACHED, _events2.default.MEDIA_DETACHING, _events2.default.MANIFEST_LOADING, _events2.default.MANIFEST_PARSED, _events2.default.LEVEL_LOADED, _events2.default.KEY_LOADED, _events2.default.FRAG_LOADED, _events2.default.FRAG_LOAD_EMERGENCY_ABORTED, _events2.default.FRAG_PARSING_INIT_SEGMENT, _events2.default.FRAG_PARSING_DATA, _events2.default.FRAG_PARSED, _events2.default.ERROR, _events2.default.AUDIO_TRACK_SWITCHING, _events2.default.AUDIO_TRACK_SWITCHED, _events2.default.BUFFER_CREATED, _events2.default.BUFFER_APPENDED, _events2.default.BUFFER_FLUSHED));\n\t\n\t    _this.config = hls.config;\n\t    _this.audioCodecSwap = false;\n\t    _this.ticks = 0;\n\t    _this._state = State.STOPPED;\n\t    _this.ontick = _this.tick.bind(_this);\n\t    return _this;\n\t  }\n\t\n\t  _createClass(StreamController, [{\n\t    key: 'destroy',\n\t    value: function destroy() {\n\t      this.stopLoad();\n\t      if (this.timer) {\n\t        clearInterval(this.timer);\n\t        this.timer = null;\n\t      }\n\t      _eventHandler2.default.prototype.destroy.call(this);\n\t      this.state = State.STOPPED;\n\t    }\n\t  }, {\n\t    key: 'startLoad',\n\t    value: function startLoad(startPosition) {\n\t      if (this.levels) {\n\t        var lastCurrentTime = this.lastCurrentTime,\n\t            hls = this.hls;\n\t        this.stopLoad();\n\t        if (!this.timer) {\n\t          this.timer = setInterval(this.ontick, 100);\n\t        }\n\t        this.level = -1;\n\t        this.fragLoadError = 0;\n\t        if (!this.startFragRequested) {\n\t          // determine load level\n\t          var startLevel = hls.startLevel;\n\t          if (startLevel === -1) {\n\t            // -1 : guess start Level by doing a bitrate test by loading first fragment of lowest quality level\n\t            startLevel = 0;\n\t            this.bitrateTest = true;\n\t          }\n\t          // set new level to playlist loader : this will trigger start level load\n\t          // hls.nextLoadLevel remains until it is set to a new value or until a new frag is successfully loaded\n\t          this.level = hls.nextLoadLevel = startLevel;\n\t          this.loadedmetadata = false;\n\t        }\n\t        // if startPosition undefined but lastCurrentTime set, set startPosition to last currentTime\n\t        if (lastCurrentTime > 0 && startPosition === -1) {\n\t          _logger.logger.log('override startPosition with lastCurrentTime @' + lastCurrentTime.toFixed(3));\n\t          startPosition = lastCurrentTime;\n\t        }\n\t        this.state = State.IDLE;\n\t        this.nextLoadPosition = this.startPosition = this.lastCurrentTime = startPosition;\n\t        this.tick();\n\t      } else {\n\t        _logger.logger.warn('cannot start loading as manifest not parsed yet');\n\t        this.state = State.STOPPED;\n\t      }\n\t    }\n\t  }, {\n\t    key: 'stopLoad',\n\t    value: function stopLoad() {\n\t      var frag = this.fragCurrent;\n\t      if (frag) {\n\t        if (frag.loader) {\n\t          frag.loader.abort();\n\t        }\n\t        this.fragCurrent = null;\n\t      }\n\t      this.fragPrevious = null;\n\t      if (this.demuxer) {\n\t        this.demuxer.destroy();\n\t        this.demuxer = null;\n\t      }\n\t      this.state = State.STOPPED;\n\t    }\n\t  }, {\n\t    key: 'tick',\n\t    value: function tick() {\n\t      this.ticks++;\n\t      if (this.ticks === 1) {\n\t        this.doTick();\n\t        if (this.ticks > 1) {\n\t          setTimeout(this.tick, 1);\n\t        }\n\t        this.ticks = 0;\n\t      }\n\t    }\n\t  }, {\n\t    key: 'doTick',\n\t    value: function doTick() {\n\t      switch (this.state) {\n\t        case State.ERROR:\n\t          //don't do anything in error state to avoid breaking further ...\n\t          break;\n\t        case State.BUFFER_FLUSHING:\n\t          // in buffer flushing state, reset fragLoadError counter\n\t          this.fragLoadError = 0;\n\t          break;\n\t        case State.IDLE:\n\t          // when this returns false there was an error and we shall return immediatly\n\t          // from current tick\n\t          if (!this._doTickIdle()) {\n\t            return;\n\t          }\n\t          break;\n\t        case State.WAITING_LEVEL:\n\t          var level = this.levels[this.level];\n\t          // check if playlist is already loaded\n\t          if (level && level.details) {\n\t            this.state = State.IDLE;\n\t          }\n\t          break;\n\t        case State.FRAG_LOADING_WAITING_RETRY:\n\t          var now = performance.now();\n\t          var retryDate = this.retryDate;\n\t          // if current time is gt than retryDate, or if media seeking let's switch to IDLE state to retry loading\n\t          if (!retryDate || now >= retryDate || this.media && this.media.seeking) {\n\t            _logger.logger.log('mediaController: retryDate reached, switch back to IDLE state');\n\t            this.state = State.IDLE;\n\t          }\n\t          break;\n\t        case State.ERROR:\n\t        case State.STOPPED:\n\t        case State.FRAG_LOADING:\n\t        case State.PARSING:\n\t        case State.PARSED:\n\t        case State.ENDED:\n\t          break;\n\t        default:\n\t          break;\n\t      }\n\t      // check buffer\n\t      this._checkBuffer();\n\t      // check/update current fragment\n\t      this._checkFragmentChanged();\n\t    }\n\t\n\t    // Ironically the \"idle\" state is the on we do the most logic in it seems ....\n\t    // NOTE: Maybe we could rather schedule a check for buffer length after half of the currently\n\t    //       played segment, or on pause/play/seek instead of naively checking every 100ms?\n\t\n\t  }, {\n\t    key: '_doTickIdle',\n\t    value: function _doTickIdle() {\n\t      var hls = this.hls,\n\t          config = hls.config,\n\t          media = this.media;\n\t\n\t      // if video not attached AND\n\t      // start fragment already requested OR start frag prefetch disable\n\t      // exit loop\n\t      // => if start level loaded and media not attached but start frag prefetch is enabled and start frag not requested yet, we will not exit loop\n\t      if (this.levelLastLoaded !== undefined && !media && (this.startFragRequested || !config.startFragPrefetch)) {\n\t        return true;\n\t      }\n\t\n\t      // if we have not yet loaded any fragment, start loading from start position\n\t      var pos = void 0;\n\t      if (this.loadedmetadata) {\n\t        pos = media.currentTime;\n\t      } else {\n\t        pos = this.nextLoadPosition;\n\t      }\n\t      // determine next load level\n\t      var level = hls.nextLoadLevel,\n\t          levelInfo = this.levels[level],\n\t          levelBitrate = levelInfo.bitrate,\n\t          maxBufLen = void 0;\n\t\n\t      // compute max Buffer Length that we could get from this load level, based on level bitrate. don't buffer more than 60 MB and more than 30s\n\t      if (levelBitrate) {\n\t        maxBufLen = Math.max(8 * config.maxBufferSize / levelBitrate, config.maxBufferLength);\n\t      } else {\n\t        maxBufLen = config.maxBufferLength;\n\t      }\n\t      maxBufLen = Math.min(maxBufLen, config.maxMaxBufferLength);\n\t\n\t      // determine next candidate fragment to be loaded, based on current position and end of buffer position\n\t      // ensure up to `config.maxMaxBufferLength` of buffer upfront\n\t\n\t      var bufferInfo = _bufferHelper2.default.bufferInfo(this.mediaBuffer ? this.mediaBuffer : media, pos, config.maxBufferHole),\n\t          bufferLen = bufferInfo.len;\n\t      // Stay idle if we are still with buffer margins\n\t      if (bufferLen >= maxBufLen) {\n\t        return true;\n\t      }\n\t\n\t      // if buffer length is less than maxBufLen try to load a new fragment ...\n\t      _logger.logger.trace('buffer length of ' + bufferLen.toFixed(3) + ' is below max of ' + maxBufLen.toFixed(3) + '. checking for more payload ...');\n\t\n\t      // set next load level : this will trigger a playlist load if needed\n\t      this.level = hls.nextLoadLevel = level;\n\t\n\t      var levelDetails = levelInfo.details;\n\t      // if level info not retrieved yet, switch state and wait for level retrieval\n\t      // if live playlist, ensure that new playlist has been refreshed to avoid loading/try to load\n\t      // a useless and outdated fragment (that might even introduce load error if it is already out of the live playlist)\n\t      if (typeof levelDetails === 'undefined' || levelDetails.live && this.levelLastLoaded !== level) {\n\t        this.state = State.WAITING_LEVEL;\n\t        return true;\n\t      }\n\t\n\t      // we just got done loading the final fragment, check if we need to finalize media stream\n\t      var fragPrevious = this.fragPrevious;\n\t      if (!levelDetails.live && fragPrevious && fragPrevious.sn === levelDetails.endSN) {\n\t        // if everything (almost) til the end is buffered, let's signal eos\n\t        // we don't compare exactly media.duration === bufferInfo.end as there could be some subtle media duration difference\n\t        // using half frag duration should help cope with these cases.\n\t        // also cope with almost zero last frag duration (max last frag duration with 200ms) refer to https://github.com/dailymotion/hls.js/pull/657\n\t        if (media.duration - Math.max(bufferInfo.end, fragPrevious.start) <= Math.max(0.2, fragPrevious.duration / 2)) {\n\t          // Finalize the media stream\n\t          var data = {};\n\t          if (this.altAudio) {\n\t            data.type = 'video';\n\t          }\n\t          this.hls.trigger(_events2.default.BUFFER_EOS, data);\n\t          this.state = State.ENDED;\n\t          return true;\n\t        }\n\t      }\n\t\n\t      // if we have the levelDetails for the selected variant, lets continue enrichen our stream (load keys/fragments or trigger EOS, etc..)\n\t      return this._fetchPayloadOrEos(pos, bufferInfo, levelDetails);\n\t    }\n\t  }, {\n\t    key: '_fetchPayloadOrEos',\n\t    value: function _fetchPayloadOrEos(pos, bufferInfo, levelDetails) {\n\t      var fragPrevious = this.fragPrevious,\n\t          level = this.level,\n\t          fragments = levelDetails.fragments,\n\t          fragLen = fragments.length;\n\t\n\t      // empty playlist\n\t      if (fragLen === 0) {\n\t        return false;\n\t      }\n\t\n\t      // find fragment index, contiguous with end of buffer position\n\t      var start = fragments[0].start,\n\t          end = fragments[fragLen - 1].start + fragments[fragLen - 1].duration,\n\t          bufferEnd = bufferInfo.end,\n\t          frag = void 0;\n\t\n\t      // in case of live playlist we need to ensure that requested position is not located before playlist start\n\t      if (levelDetails.live) {\n\t        var initialLiveManifestSize = this.config.initialLiveManifestSize;\n\t        if (fragLen < initialLiveManifestSize) {\n\t          _logger.logger.warn('Can not start playback of a level, reason: not enough fragments ' + fragLen + ' < ' + initialLiveManifestSize);\n\t          return false;\n\t        }\n\t\n\t        frag = this._ensureFragmentAtLivePoint(levelDetails, bufferEnd, start, end, fragPrevious, fragments, fragLen);\n\t        // if it explicitely returns null don't load any fragment and exit function now\n\t        if (frag === null) {\n\t          return false;\n\t        }\n\t      } else {\n\t        // VoD playlist: if bufferEnd before start of playlist, load first fragment\n\t        if (bufferEnd < start) {\n\t          frag = fragments[0];\n\t        }\n\t      }\n\t      if (!frag) {\n\t        frag = this._findFragment(start, fragPrevious, fragLen, fragments, bufferEnd, end, levelDetails);\n\t      }\n\t      if (frag) {\n\t        return this._loadFragmentOrKey(frag, level, levelDetails, pos, bufferEnd);\n\t      }\n\t      return true;\n\t    }\n\t  }, {\n\t    key: '_ensureFragmentAtLivePoint',\n\t    value: function _ensureFragmentAtLivePoint(levelDetails, bufferEnd, start, end, fragPrevious, fragments, fragLen) {\n\t      var config = this.hls.config,\n\t          media = this.media;\n\t\n\t      var frag = void 0;\n\t\n\t      // check if requested position is within seekable boundaries :\n\t      //logger.log(`start/pos/bufEnd/seeking:${start.toFixed(3)}/${pos.toFixed(3)}/${bufferEnd.toFixed(3)}/${this.media.seeking}`);\n\t      var maxLatency = config.liveMaxLatencyDuration !== undefined ? config.liveMaxLatencyDuration : config.liveMaxLatencyDurationCount * levelDetails.targetduration;\n\t\n\t      if (bufferEnd < Math.max(start - config.maxFragLookUpTolerance, end - maxLatency)) {\n\t        var liveSyncPosition = this.liveSyncPosition = this.computeLivePosition(start, levelDetails);\n\t        _logger.logger.log('buffer end: ' + bufferEnd.toFixed(3) + ' is located too far from the end of live sliding playlist, reset currentTime to : ' + liveSyncPosition.toFixed(3));\n\t        bufferEnd = liveSyncPosition;\n\t        if (media && media.readyState && media.duration > liveSyncPosition) {\n\t          media.currentTime = liveSyncPosition;\n\t        }\n\t      }\n\t\n\t      // if end of buffer greater than live edge, don't load any fragment\n\t      // this could happen if live playlist intermittently slides in the past.\n\t      // level 1 loaded [182580161,182580167]\n\t      // level 1 loaded [182580162,182580169]\n\t      // Loading 182580168 of [182580162 ,182580169],level 1 ..\n\t      // Loading 182580169 of [182580162 ,182580169],level 1 ..\n\t      // level 1 loaded [182580162,182580168] <============= here we should have bufferEnd > end. in that case break to avoid reloading 182580168\n\t      // level 1 loaded [182580164,182580171]\n\t      //\n\t      // don't return null in case media not loaded yet (readystate === 0)\n\t      if (levelDetails.PTSKnown && bufferEnd > end && media && media.readyState) {\n\t        return null;\n\t      }\n\t\n\t      if (this.startFragRequested && !levelDetails.PTSKnown) {\n\t        /* we are switching level on live playlist, but we don't have any PTS info for that quality level ...\n\t           try to load frag matching with next SN.\n\t           even if SN are not synchronized between playlists, loading this frag will help us\n\t           compute playlist sliding and find the right one after in case it was not the right consecutive one */\n\t        if (fragPrevious) {\n\t          var targetSN = fragPrevious.sn + 1;\n\t          if (targetSN >= levelDetails.startSN && targetSN <= levelDetails.endSN) {\n\t            frag = fragments[targetSN - levelDetails.startSN];\n\t            _logger.logger.log('live playlist, switching playlist, load frag with next SN: ' + frag.sn);\n\t          }\n\t        }\n\t        if (!frag) {\n\t          /* we have no idea about which fragment should be loaded.\n\t             so let's load mid fragment. it will help computing playlist sliding and find the right one\n\t          */\n\t          frag = fragments[Math.min(fragLen - 1, Math.round(fragLen / 2))];\n\t          _logger.logger.log('live playlist, switching playlist, unknown, load middle frag : ' + frag.sn);\n\t        }\n\t      }\n\t      return frag;\n\t    }\n\t  }, {\n\t    key: '_findFragment',\n\t    value: function _findFragment(start, fragPrevious, fragLen, fragments, bufferEnd, end, levelDetails) {\n\t      var config = this.hls.config;\n\t\n\t      var frag = void 0,\n\t          foundFrag = void 0,\n\t          maxFragLookUpTolerance = config.maxFragLookUpTolerance;\n\t\n\t      if (bufferEnd < end) {\n\t        if (bufferEnd > end - maxFragLookUpTolerance) {\n\t          maxFragLookUpTolerance = 0;\n\t        }\n\t        foundFrag = _binarySearch2.default.search(fragments, function (candidate) {\n\t          // offset should be within fragment boundary - config.maxFragLookUpTolerance\n\t          // this is to cope with situations like\n\t          // bufferEnd = 9.991\n\t          // frag[Ø] : [0,10]\n\t          // frag[1] : [10,20]\n\t          // bufferEnd is within frag[0] range ... although what we are expecting is to return frag[1] here\n\t          //              frag start               frag start+duration\n\t          //                  |-----------------------------|\n\t          //              <--->                         <--->\n\t          //  ...--------><-----------------------------><---------....\n\t          // previous frag         matching fragment         next frag\n\t          //  return -1             return 0                 return 1\n\t          //logger.log(`level/sn/start/end/bufEnd:${level}/${candidate.sn}/${candidate.start}/${(candidate.start+candidate.duration)}/${bufferEnd}`);\n\t          if (candidate.start + candidate.duration - maxFragLookUpTolerance <= bufferEnd) {\n\t            return 1;\n\t          } // if maxFragLookUpTolerance will have negative value then don't return -1 for first element\n\t          else if (candidate.start - maxFragLookUpTolerance > bufferEnd && candidate.start) {\n\t              return -1;\n\t            }\n\t          return 0;\n\t        });\n\t      } else {\n\t        // reach end of playlist\n\t        foundFrag = fragments[fragLen - 1];\n\t      }\n\t      if (foundFrag) {\n\t        frag = foundFrag;\n\t        start = foundFrag.start;\n\t        //logger.log('find SN matching with pos:' +  bufferEnd + ':' + frag.sn);\n\t        if (fragPrevious && frag.level === fragPrevious.level && frag.sn === fragPrevious.sn) {\n\t          if (frag.sn < levelDetails.endSN) {\n\t            var deltaPTS = fragPrevious.deltaPTS,\n\t                curSNIdx = frag.sn - levelDetails.startSN;\n\t            // if there is a significant delta between audio and video, larger than max allowed hole,\n\t            // and if previous remuxed fragment did not start with a keyframe. (fragPrevious.dropped)\n\t            // let's try to load previous fragment again to get last keyframe\n\t            // then we will reload again current fragment (that way we should be able to fill the buffer hole ...)\n\t            if (deltaPTS && deltaPTS > config.maxBufferHole && fragPrevious.dropped && curSNIdx) {\n\t              frag = fragments[curSNIdx - 1];\n\t              _logger.logger.warn('SN just loaded, with large PTS gap between audio and video, maybe frag is not starting with a keyframe ? load previous one to try to overcome this');\n\t              // decrement previous frag load counter to avoid frag loop loading error when next fragment will get reloaded\n\t              fragPrevious.loadCounter--;\n\t            } else {\n\t              frag = fragments[curSNIdx + 1];\n\t              _logger.logger.log('SN just loaded, load next one: ' + frag.sn);\n\t            }\n\t          } else {\n\t            frag = null;\n\t          }\n\t        }\n\t      }\n\t      return frag;\n\t    }\n\t  }, {\n\t    key: '_loadFragmentOrKey',\n\t    value: function _loadFragmentOrKey(frag, level, levelDetails, pos, bufferEnd) {\n\t      var hls = this.hls,\n\t          config = hls.config;\n\t\n\t      //logger.log('loading frag ' + i +',pos/bufEnd:' + pos.toFixed(3) + '/' + bufferEnd.toFixed(3));\n\t      if (frag.decryptdata.uri != null && frag.decryptdata.key == null) {\n\t        _logger.logger.log('Loading key for ' + frag.sn + ' of [' + levelDetails.startSN + ' ,' + levelDetails.endSN + '],level ' + level);\n\t        this.state = State.KEY_LOADING;\n\t        hls.trigger(_events2.default.KEY_LOADING, { frag: frag });\n\t      } else {\n\t        _logger.logger.log('Loading ' + frag.sn + ' of [' + levelDetails.startSN + ' ,' + levelDetails.endSN + '],level ' + level + ', currentTime:' + pos.toFixed(3) + ',bufferEnd:' + bufferEnd.toFixed(3));\n\t        // ensure that we are not reloading the same fragments in loop ...\n\t        if (this.fragLoadIdx !== undefined) {\n\t          this.fragLoadIdx++;\n\t        } else {\n\t          this.fragLoadIdx = 0;\n\t        }\n\t        if (frag.loadCounter) {\n\t          frag.loadCounter++;\n\t          var maxThreshold = config.fragLoadingLoopThreshold;\n\t          // if this frag has already been loaded 3 times, and if it has been reloaded recently\n\t          if (frag.loadCounter > maxThreshold && Math.abs(this.fragLoadIdx - frag.loadIdx) < maxThreshold) {\n\t            hls.trigger(_events2.default.ERROR, { type: _errors.ErrorTypes.MEDIA_ERROR, details: _errors.ErrorDetails.FRAG_LOOP_LOADING_ERROR, fatal: false, frag: frag });\n\t            return false;\n\t          }\n\t        } else {\n\t          frag.loadCounter = 1;\n\t        }\n\t        frag.loadIdx = this.fragLoadIdx;\n\t        this.fragCurrent = frag;\n\t        this.startFragRequested = true;\n\t        this.nextLoadPosition = frag.start + frag.duration;\n\t        frag.autoLevel = hls.autoLevelEnabled;\n\t        frag.bitrateTest = this.bitrateTest;\n\t        hls.trigger(_events2.default.FRAG_LOADING, { frag: frag });\n\t        // lazy demuxer init, as this could take some time ... do it during frag loading\n\t        if (!this.demuxer) {\n\t          this.demuxer = new _demuxer2.default(hls, 'main');\n\t        }\n\t        this.state = State.FRAG_LOADING;\n\t        return true;\n\t      }\n\t    }\n\t  }, {\n\t    key: 'getBufferRange',\n\t    value: function getBufferRange(position) {\n\t      return _binarySearch2.default.search(this.bufferRange, function (range) {\n\t        if (position < range.start) {\n\t          return -1;\n\t        } else if (position > range.end) {\n\t          return 1;\n\t        }\n\t        return 0;\n\t      });\n\t    }\n\t  }, {\n\t    key: 'followingBufferRange',\n\t    value: function followingBufferRange(range) {\n\t      if (range) {\n\t        // try to get range of next fragment (500ms after this range)\n\t        return this.getBufferRange(range.end + 0.5);\n\t      }\n\t      return null;\n\t    }\n\t  }, {\n\t    key: '_checkFragmentChanged',\n\t    value: function _checkFragmentChanged() {\n\t      var rangeCurrent,\n\t          currentTime,\n\t          video = this.media;\n\t      if (video && video.readyState && video.seeking === false) {\n\t        currentTime = video.currentTime;\n\t        /* if video element is in seeked state, currentTime can only increase.\n\t          (assuming that playback rate is positive ...)\n\t          As sometimes currentTime jumps back to zero after a\n\t          media decode error, check this, to avoid seeking back to\n\t          wrong position after a media decode error\n\t        */\n\t        if (currentTime > video.playbackRate * this.lastCurrentTime) {\n\t          this.lastCurrentTime = currentTime;\n\t        }\n\t        if (_bufferHelper2.default.isBuffered(video, currentTime)) {\n\t          rangeCurrent = this.getBufferRange(currentTime);\n\t        } else if (_bufferHelper2.default.isBuffered(video, currentTime + 0.1)) {\n\t          /* ensure that FRAG_CHANGED event is triggered at startup,\n\t            when first video frame is displayed and playback is paused.\n\t            add a tolerance of 100ms, in case current position is not buffered,\n\t            check if current pos+100ms is buffered and use that buffer range\n\t            for FRAG_CHANGED event reporting */\n\t          rangeCurrent = this.getBufferRange(currentTime + 0.1);\n\t        }\n\t        if (rangeCurrent) {\n\t          var fragPlaying = rangeCurrent.frag;\n\t          if (fragPlaying !== this.fragPlaying) {\n\t            this.fragPlaying = fragPlaying;\n\t            this.hls.trigger(_events2.default.FRAG_CHANGED, { frag: fragPlaying });\n\t          }\n\t        }\n\t      }\n\t    }\n\t\n\t    /*\n\t      on immediate level switch :\n\t       - pause playback if playing\n\t       - cancel any pending load request\n\t       - and trigger a buffer flush\n\t    */\n\t\n\t  }, {\n\t    key: 'immediateLevelSwitch',\n\t    value: function immediateLevelSwitch() {\n\t      _logger.logger.log('immediateLevelSwitch');\n\t      if (!this.immediateSwitch) {\n\t        this.immediateSwitch = true;\n\t        var media = this.media,\n\t            previouslyPaused = void 0;\n\t        if (media) {\n\t          previouslyPaused = media.paused;\n\t          media.pause();\n\t        } else {\n\t          // don't restart playback after instant level switch in case media not attached\n\t          previouslyPaused = true;\n\t        }\n\t        this.previouslyPaused = previouslyPaused;\n\t      }\n\t      var fragCurrent = this.fragCurrent;\n\t      if (fragCurrent && fragCurrent.loader) {\n\t        fragCurrent.loader.abort();\n\t      }\n\t      this.fragCurrent = null;\n\t      // increase fragment load Index to avoid frag loop loading error after buffer flush\n\t      this.fragLoadIdx += 2 * this.config.fragLoadingLoopThreshold;\n\t      // flush everything\n\t      this.flushMainBuffer(0, Number.POSITIVE_INFINITY);\n\t    }\n\t\n\t    /*\n\t       on immediate level switch end, after new fragment has been buffered :\n\t        - nudge video decoder by slightly adjusting video currentTime (if currentTime buffered)\n\t        - resume the playback if needed\n\t    */\n\t\n\t  }, {\n\t    key: 'immediateLevelSwitchEnd',\n\t    value: function immediateLevelSwitchEnd() {\n\t      var media = this.media;\n\t      if (media && media.buffered.length) {\n\t        this.immediateSwitch = false;\n\t        if (_bufferHelper2.default.isBuffered(media, media.currentTime)) {\n\t          // only nudge if currentTime is buffered\n\t          media.currentTime -= 0.0001;\n\t        }\n\t        if (!this.previouslyPaused) {\n\t          media.play();\n\t        }\n\t      }\n\t    }\n\t  }, {\n\t    key: 'nextLevelSwitch',\n\t    value: function nextLevelSwitch() {\n\t      /* try to switch ASAP without breaking video playback :\n\t         in order to ensure smooth but quick level switching,\n\t        we need to find the next flushable buffer range\n\t        we should take into account new segment fetch time\n\t      */\n\t      var media = this.media;\n\t      // ensure that media is defined and that metadata are available (to retrieve currentTime)\n\t      if (media && media.readyState) {\n\t        var fetchdelay = void 0,\n\t            currentRange = void 0,\n\t            nextRange = void 0;\n\t        // increase fragment load Index to avoid frag loop loading error after buffer flush\n\t        this.fragLoadIdx += 2 * this.config.fragLoadingLoopThreshold;\n\t        currentRange = this.getBufferRange(media.currentTime);\n\t        if (currentRange && currentRange.start > 1) {\n\t          // flush buffer preceding current fragment (flush until current fragment start offset)\n\t          // minus 1s to avoid video freezing, that could happen if we flush keyframe of current video ...\n\t          this.flushMainBuffer(0, currentRange.start - 1);\n\t        }\n\t        if (!media.paused) {\n\t          // add a safety delay of 1s\n\t          var nextLevelId = this.hls.nextLoadLevel,\n\t              nextLevel = this.levels[nextLevelId],\n\t              fragLastKbps = this.fragLastKbps;\n\t          if (fragLastKbps && this.fragCurrent) {\n\t            fetchdelay = this.fragCurrent.duration * nextLevel.bitrate / (1000 * fragLastKbps) + 1;\n\t          } else {\n\t            fetchdelay = 0;\n\t          }\n\t        } else {\n\t          fetchdelay = 0;\n\t        }\n\t        //logger.log('fetchdelay:'+fetchdelay);\n\t        // find buffer range that will be reached once new fragment will be fetched\n\t        nextRange = this.getBufferRange(media.currentTime + fetchdelay);\n\t        if (nextRange) {\n\t          // we can flush buffer range following this one without stalling playback\n\t          nextRange = this.followingBufferRange(nextRange);\n\t          if (nextRange) {\n\t            // if we are here, we can also cancel any loading/demuxing in progress, as they are useless\n\t            var fragCurrent = this.fragCurrent;\n\t            if (fragCurrent && fragCurrent.loader) {\n\t              fragCurrent.loader.abort();\n\t            }\n\t            this.fragCurrent = null;\n\t            // flush position is the start position of this new buffer\n\t            this.flushMainBuffer(nextRange.start, Number.POSITIVE_INFINITY);\n\t          }\n\t        }\n\t      }\n\t    }\n\t  }, {\n\t    key: 'flushMainBuffer',\n\t    value: function flushMainBuffer(startOffset, endOffset) {\n\t      this.state = State.BUFFER_FLUSHING;\n\t      var flushScope = { startOffset: startOffset, endOffset: endOffset };\n\t      // if alternate audio tracks are used, only flush video, otherwise flush everything\n\t      if (this.altAudio) {\n\t        flushScope.type = 'video';\n\t      }\n\t      this.hls.trigger(_events2.default.BUFFER_FLUSHING, flushScope);\n\t    }\n\t  }, {\n\t    key: 'onMediaAttached',\n\t    value: function onMediaAttached(data) {\n\t      var media = this.media = this.mediaBuffer = data.media;\n\t      this.onvseeking = this.onMediaSeeking.bind(this);\n\t      this.onvseeked = this.onMediaSeeked.bind(this);\n\t      this.onvended = this.onMediaEnded.bind(this);\n\t      media.addEventListener('seeking', this.onvseeking);\n\t      media.addEventListener('seeked', this.onvseeked);\n\t      media.addEventListener('ended', this.onvended);\n\t      var config = this.config;\n\t      if (this.levels && config.autoStartLoad) {\n\t        this.hls.startLoad(config.startPosition);\n\t      }\n\t    }\n\t  }, {\n\t    key: 'onMediaDetaching',\n\t    value: function onMediaDetaching() {\n\t      var media = this.media;\n\t      if (media && media.ended) {\n\t        _logger.logger.log('MSE detaching and video ended, reset startPosition');\n\t        this.startPosition = this.lastCurrentTime = 0;\n\t      }\n\t\n\t      // reset fragment loading counter on MSE detaching to avoid reporting FRAG_LOOP_LOADING_ERROR after error recovery\n\t      var levels = this.levels;\n\t      if (levels) {\n\t        // reset fragment load counter\n\t        levels.forEach(function (level) {\n\t          if (level.details) {\n\t            level.details.fragments.forEach(function (fragment) {\n\t              fragment.loadCounter = undefined;\n\t            });\n\t          }\n\t        });\n\t      }\n\t      // remove video listeners\n\t      if (media) {\n\t        media.removeEventListener('seeking', this.onvseeking);\n\t        media.removeEventListener('seeked', this.onvseeked);\n\t        media.removeEventListener('ended', this.onvended);\n\t        this.onvseeking = this.onvseeked = this.onvended = null;\n\t      }\n\t      this.media = this.mediaBuffer = null;\n\t      this.loadedmetadata = false;\n\t      this.stopLoad();\n\t    }\n\t  }, {\n\t    key: 'onMediaSeeking',\n\t    value: function onMediaSeeking() {\n\t      var media = this.media,\n\t          currentTime = media ? media.currentTime : undefined,\n\t          config = this.config;\n\t      _logger.logger.log('media seeking to ' + currentTime.toFixed(3));\n\t      if (this.state === State.FRAG_LOADING) {\n\t        var mediaBuffer = this.mediaBuffer ? this.mediaBuffer : media;\n\t        var bufferInfo = _bufferHelper2.default.bufferInfo(mediaBuffer, currentTime, this.config.maxBufferHole),\n\t            fragCurrent = this.fragCurrent;\n\t        // check if we are seeking to a unbuffered area AND if frag loading is in progress\n\t        if (bufferInfo.len === 0 && fragCurrent) {\n\t          var tolerance = config.maxFragLookUpTolerance,\n\t              fragStartOffset = fragCurrent.start - tolerance,\n\t              fragEndOffset = fragCurrent.start + fragCurrent.duration + tolerance;\n\t          // check if we seek position will be out of currently loaded frag range : if out cancel frag load, if in, don't do anything\n\t          if (currentTime < fragStartOffset || currentTime > fragEndOffset) {\n\t            if (fragCurrent.loader) {\n\t              _logger.logger.log('seeking outside of buffer while fragment load in progress, cancel fragment load');\n\t              fragCurrent.loader.abort();\n\t            }\n\t            this.fragCurrent = null;\n\t            this.fragPrevious = null;\n\t            // switch to IDLE state to load new fragment\n\t            this.state = State.IDLE;\n\t          } else {\n\t            _logger.logger.log('seeking outside of buffer but within currently loaded fragment range');\n\t          }\n\t        }\n\t      } else if (this.state === State.ENDED) {\n\t        // switch to IDLE state to check for potential new fragment\n\t        this.state = State.IDLE;\n\t      }\n\t      if (media) {\n\t        this.lastCurrentTime = currentTime;\n\t      }\n\t      // avoid reporting fragment loop loading error in case user is seeking several times on same position\n\t      if (this.state !== State.FRAG_LOADING && this.fragLoadIdx !== undefined) {\n\t        this.fragLoadIdx += 2 * config.fragLoadingLoopThreshold;\n\t      }\n\t      // in case seeking occurs although no media buffered, adjust startPosition and nextLoadPosition to seek target\n\t      if (!this.loadedmetadata) {\n\t        this.nextLoadPosition = this.startPosition = currentTime;\n\t      }\n\t      // tick to speed up processing\n\t      this.tick();\n\t    }\n\t  }, {\n\t    key: 'onMediaSeeked',\n\t    value: function onMediaSeeked() {\n\t      _logger.logger.log('media seeked to ' + this.media.currentTime.toFixed(3));\n\t      // tick to speed up FRAGMENT_PLAYING triggering\n\t      this.tick();\n\t    }\n\t  }, {\n\t    key: 'onMediaEnded',\n\t    value: function onMediaEnded() {\n\t      _logger.logger.log('media ended');\n\t      // reset startPosition and lastCurrentTime to restart playback @ stream beginning\n\t      this.startPosition = this.lastCurrentTime = 0;\n\t    }\n\t  }, {\n\t    key: 'onManifestLoading',\n\t    value: function onManifestLoading() {\n\t      // reset buffer on manifest loading\n\t      _logger.logger.log('trigger BUFFER_RESET');\n\t      this.hls.trigger(_events2.default.BUFFER_RESET);\n\t      this.bufferRange = [];\n\t      this.stalled = false;\n\t      this.startPosition = this.lastCurrentTime = 0;\n\t    }\n\t  }, {\n\t    key: 'onManifestParsed',\n\t    value: function onManifestParsed(data) {\n\t      var aac = false,\n\t          heaac = false,\n\t          codec;\n\t      data.levels.forEach(function (level) {\n\t        // detect if we have different kind of audio codecs used amongst playlists\n\t        codec = level.audioCodec;\n\t        if (codec) {\n\t          if (codec.indexOf('mp4a.40.2') !== -1) {\n\t            aac = true;\n\t          }\n\t          if (codec.indexOf('mp4a.40.5') !== -1) {\n\t            heaac = true;\n\t          }\n\t        }\n\t      });\n\t      this.audioCodecSwitch = aac && heaac;\n\t      if (this.audioCodecSwitch) {\n\t        _logger.logger.log('both AAC/HE-AAC audio found in levels; declaring level codec as HE-AAC');\n\t      }\n\t      this.levels = data.levels;\n\t      this.startLevelLoaded = false;\n\t      this.startFragRequested = false;\n\t      var config = this.config;\n\t      if (config.autoStartLoad) {\n\t        this.hls.startLoad(config.startPosition);\n\t      }\n\t    }\n\t  }, {\n\t    key: 'onLevelLoaded',\n\t    value: function onLevelLoaded(data) {\n\t      var newDetails = data.details,\n\t          newLevelId = data.level,\n\t          curLevel = this.levels[newLevelId],\n\t          duration = newDetails.totalduration,\n\t          sliding = 0;\n\t\n\t      _logger.logger.log('level ' + newLevelId + ' loaded [' + newDetails.startSN + ',' + newDetails.endSN + '],duration:' + duration);\n\t      this.levelLastLoaded = newLevelId;\n\t\n\t      if (newDetails.live) {\n\t        var curDetails = curLevel.details;\n\t        if (curDetails && newDetails.fragments.length > 0) {\n\t          // we already have details for that level, merge them\n\t          _levelHelper2.default.mergeDetails(curDetails, newDetails);\n\t          sliding = newDetails.fragments[0].start;\n\t          this.liveSyncPosition = this.computeLivePosition(sliding, curDetails);\n\t          if (newDetails.PTSKnown) {\n\t            _logger.logger.log('live playlist sliding:' + sliding.toFixed(3));\n\t          } else {\n\t            _logger.logger.log('live playlist - outdated PTS, unknown sliding');\n\t          }\n\t        } else {\n\t          newDetails.PTSKnown = false;\n\t          _logger.logger.log('live playlist - first load, unknown sliding');\n\t        }\n\t      } else {\n\t        newDetails.PTSKnown = false;\n\t      }\n\t      // override level info\n\t      curLevel.details = newDetails;\n\t      this.hls.trigger(_events2.default.LEVEL_UPDATED, { details: newDetails, level: newLevelId });\n\t\n\t      if (this.startFragRequested === false) {\n\t        // compute start position if set to -1. use it straight away if value is defined\n\t        if (this.startPosition === -1 || this.lastCurrentTime === -1) {\n\t          // first, check if start time offset has been set in playlist, if yes, use this value\n\t          var startTimeOffset = newDetails.startTimeOffset;\n\t          if (!isNaN(startTimeOffset)) {\n\t            if (startTimeOffset < 0) {\n\t              _logger.logger.log('negative start time offset ' + startTimeOffset + ', count from end of last fragment');\n\t              startTimeOffset = sliding + duration + startTimeOffset;\n\t            }\n\t            _logger.logger.log('start time offset found in playlist, adjust startPosition to ' + startTimeOffset);\n\t            this.startPosition = startTimeOffset;\n\t          } else {\n\t            // if live playlist, set start position to be fragment N-this.config.liveSyncDurationCount (usually 3)\n\t            if (newDetails.live) {\n\t              this.startPosition = this.computeLivePosition(sliding, newDetails);\n\t              _logger.logger.log('configure startPosition to ' + this.startPosition);\n\t            } else {\n\t              this.startPosition = 0;\n\t            }\n\t          }\n\t          this.lastCurrentTime = this.startPosition;\n\t        }\n\t        this.nextLoadPosition = this.startPosition;\n\t      }\n\t      // only switch batck to IDLE state if we were waiting for level to start downloading a new fragment\n\t      if (this.state === State.WAITING_LEVEL) {\n\t        this.state = State.IDLE;\n\t      }\n\t      //trigger handler right now\n\t      this.tick();\n\t    }\n\t  }, {\n\t    key: 'onKeyLoaded',\n\t    value: function onKeyLoaded() {\n\t      if (this.state === State.KEY_LOADING) {\n\t        this.state = State.IDLE;\n\t        this.tick();\n\t      }\n\t    }\n\t  }, {\n\t    key: 'onFragLoaded',\n\t    value: function onFragLoaded(data) {\n\t      var fragCurrent = this.fragCurrent,\n\t          fragLoaded = data.frag;\n\t      if (this.state === State.FRAG_LOADING && fragCurrent && fragLoaded.type === 'main' && fragLoaded.level === fragCurrent.level && fragLoaded.sn === fragCurrent.sn) {\n\t        var stats = data.stats,\n\t            currentLevel = this.levels[fragCurrent.level],\n\t            details = currentLevel.details;\n\t        _logger.logger.log('Loaded  ' + fragCurrent.sn + ' of [' + details.startSN + ' ,' + details.endSN + '],level ' + fragCurrent.level);\n\t        // reset frag bitrate test in any case after frag loaded event\n\t        this.bitrateTest = false;\n\t        // if this frag was loaded to perform a bitrate test AND if hls.nextLoadLevel is greater than 0\n\t        // then this means that we should be able to load a fragment at a higher quality level\n\t        if (fragLoaded.bitrateTest === true && this.hls.nextLoadLevel) {\n\t          // switch back to IDLE state ... we just loaded a fragment to determine adequate start bitrate and initialize autoswitch algo\n\t          this.state = State.IDLE;\n\t          this.startFragRequested = false;\n\t          stats.tparsed = stats.tbuffered = performance.now();\n\t          this.hls.trigger(_events2.default.FRAG_BUFFERED, { stats: stats, frag: fragCurrent, id: 'main' });\n\t          this.tick();\n\t        } else {\n\t          this.state = State.PARSING;\n\t          // transmux the MPEG-TS data to ISO-BMFF segments\n\t          this.stats = stats;\n\t          var duration = details.totalduration,\n\t              start = !isNaN(fragCurrent.startDTS) ? fragCurrent.startDTS : fragCurrent.start,\n\t              level = fragCurrent.level,\n\t              sn = fragCurrent.sn,\n\t              audioCodec = this.config.defaultAudioCodec || currentLevel.audioCodec;\n\t          if (this.audioCodecSwap) {\n\t            _logger.logger.log('swapping playlist audio codec');\n\t            if (audioCodec === undefined) {\n\t              audioCodec = this.lastAudioCodec;\n\t            }\n\t            if (audioCodec) {\n\t              if (audioCodec.indexOf('mp4a.40.5') !== -1) {\n\t                audioCodec = 'mp4a.40.2';\n\t              } else {\n\t                audioCodec = 'mp4a.40.5';\n\t              }\n\t            }\n\t          }\n\t          this.pendingBuffering = true;\n\t          this.appended = false;\n\t          _logger.logger.log('Parsing ' + sn + ' of [' + details.startSN + ' ,' + details.endSN + '],level ' + level + ', cc ' + fragCurrent.cc);\n\t          var demuxer = this.demuxer;\n\t          if (!demuxer) {\n\t            demuxer = this.demuxer = new _demuxer2.default(this.hls, 'main');\n\t          }\n\t          // time Offset is accurate if level PTS is known, or if playlist is not sliding (not live) and if media is not seeking (this is to overcome potential timestamp drifts between playlists and fragments)\n\t          var media = this.media;\n\t          var mediaSeeking = media && media.seeking;\n\t          var accurateTimeOffset = !mediaSeeking && (details.PTSKnown || !details.live);\n\t          demuxer.push(data.payload, audioCodec, currentLevel.videoCodec, start, fragCurrent.cc, level, sn, duration, fragCurrent.decryptdata, accurateTimeOffset, null);\n\t        }\n\t      }\n\t      this.fragLoadError = 0;\n\t    }\n\t  }, {\n\t    key: 'onFragParsingInitSegment',\n\t    value: function onFragParsingInitSegment(data) {\n\t      var fragCurrent = this.fragCurrent;\n\t      if (fragCurrent && data.id === 'main' && data.sn === fragCurrent.sn && data.level === fragCurrent.level && this.state === State.PARSING) {\n\t        var tracks = data.tracks,\n\t            trackName,\n\t            track;\n\t\n\t        // if audio track is expected to come from audio stream controller, discard any coming from main\n\t        if (tracks.audio && this.altAudio) {\n\t          delete tracks.audio;\n\t        }\n\t        // include levelCodec in audio and video tracks\n\t        track = tracks.audio;\n\t        if (track) {\n\t          var audioCodec = this.levels[this.level].audioCodec,\n\t              ua = navigator.userAgent.toLowerCase();\n\t          if (audioCodec && this.audioCodecSwap) {\n\t            _logger.logger.log('swapping playlist audio codec');\n\t            if (audioCodec.indexOf('mp4a.40.5') !== -1) {\n\t              audioCodec = 'mp4a.40.2';\n\t            } else {\n\t              audioCodec = 'mp4a.40.5';\n\t            }\n\t          }\n\t          // in case AAC and HE-AAC audio codecs are signalled in manifest\n\t          // force HE-AAC , as it seems that most browsers prefers that way,\n\t          // except for mono streams OR on FF\n\t          // these conditions might need to be reviewed ...\n\t          if (this.audioCodecSwitch) {\n\t            // don't force HE-AAC if mono stream\n\t            if (track.metadata.channelCount !== 1 &&\n\t            // don't force HE-AAC if firefox\n\t            ua.indexOf('firefox') === -1) {\n\t              audioCodec = 'mp4a.40.5';\n\t            }\n\t          }\n\t          // HE-AAC is broken on Android, always signal audio codec as AAC even if variant manifest states otherwise\n\t          if (ua.indexOf('android') !== -1 && track.container !== 'audio/mpeg') {\n\t            // Exclude mpeg audio\n\t            audioCodec = 'mp4a.40.2';\n\t            _logger.logger.log('Android: force audio codec to ' + audioCodec);\n\t          }\n\t          track.levelCodec = audioCodec;\n\t          track.id = data.id;\n\t        }\n\t        track = tracks.video;\n\t        if (track) {\n\t          track.levelCodec = this.levels[this.level].videoCodec;\n\t          track.id = data.id;\n\t        }\n\t\n\t        // if remuxer specify that a unique track needs to generated,\n\t        // let's merge all tracks together\n\t        if (data.unique) {\n\t          var mergedTrack = {\n\t            codec: '',\n\t            levelCodec: ''\n\t          };\n\t          for (trackName in data.tracks) {\n\t            track = tracks[trackName];\n\t            mergedTrack.container = track.container;\n\t            if (mergedTrack.codec) {\n\t              mergedTrack.codec += ',';\n\t              mergedTrack.levelCodec += ',';\n\t            }\n\t            if (track.codec) {\n\t              mergedTrack.codec += track.codec;\n\t            }\n\t            if (track.levelCodec) {\n\t              mergedTrack.levelCodec += track.levelCodec;\n\t            }\n\t          }\n\t          tracks = { audiovideo: mergedTrack };\n\t        }\n\t        this.hls.trigger(_events2.default.BUFFER_CODECS, tracks);\n\t        // loop through tracks that are going to be provided to bufferController\n\t        for (trackName in tracks) {\n\t          track = tracks[trackName];\n\t          _logger.logger.log('main track:' + trackName + ',container:' + track.container + ',codecs[level/parsed]=[' + track.levelCodec + '/' + track.codec + ']');\n\t          var initSegment = track.initSegment;\n\t          if (initSegment) {\n\t            this.appended = true;\n\t            // arm pending Buffering flag before appending a segment\n\t            this.pendingBuffering = true;\n\t            this.hls.trigger(_events2.default.BUFFER_APPENDING, { type: trackName, data: initSegment, parent: 'main', content: 'initSegment' });\n\t          }\n\t        }\n\t        //trigger handler right now\n\t        this.tick();\n\t      }\n\t    }\n\t  }, {\n\t    key: 'onFragParsingData',\n\t    value: function onFragParsingData(data) {\n\t      var _this2 = this;\n\t\n\t      var fragCurrent = this.fragCurrent;\n\t      if (fragCurrent && data.id === 'main' && data.sn === fragCurrent.sn && data.level === fragCurrent.level && !(data.type === 'audio' && this.altAudio) && // filter out main audio if audio track is loaded through audio stream controller\n\t      this.state === State.PARSING) {\n\t        var level = this.levels[this.level],\n\t            frag = this.fragCurrent;\n\t\n\t        _logger.logger.log('Parsed ' + data.type + ',PTS:[' + data.startPTS.toFixed(3) + ',' + data.endPTS.toFixed(3) + '],DTS:[' + data.startDTS.toFixed(3) + '/' + data.endDTS.toFixed(3) + '],nb:' + data.nb + ',dropped:' + (data.dropped || 0));\n\t\n\t        var drift = _levelHelper2.default.updateFragPTSDTS(level.details, frag.sn, data.startPTS, data.endPTS, data.startDTS, data.endDTS),\n\t            hls = this.hls;\n\t        hls.trigger(_events2.default.LEVEL_PTS_UPDATED, { details: level.details, level: this.level, drift: drift, type: data.type, start: data.startPTS, end: data.endPTS });\n\t\n\t        // has remuxer dropped video frames located before first keyframe ?\n\t        if (data.type === 'video') {\n\t          frag.dropped = data.dropped;\n\t        }\n\t\n\t        [data.data1, data.data2].forEach(function (buffer) {\n\t          if (buffer) {\n\t            _this2.appended = true;\n\t            // arm pending Buffering flag before appending a segment\n\t            _this2.pendingBuffering = true;\n\t            hls.trigger(_events2.default.BUFFER_APPENDING, { type: data.type, data: buffer, parent: 'main', content: 'data' });\n\t          }\n\t        });\n\t        //trigger handler right now\n\t        this.tick();\n\t      }\n\t    }\n\t  }, {\n\t    key: 'onFragParsed',\n\t    value: function onFragParsed(data) {\n\t      var fragCurrent = this.fragCurrent;\n\t      if (fragCurrent && data.id === 'main' && data.sn === fragCurrent.sn && data.level === fragCurrent.level && this.state === State.PARSING) {\n\t        this.stats.tparsed = performance.now();\n\t        this.state = State.PARSED;\n\t        this._checkAppendedParsed();\n\t      }\n\t    }\n\t  }, {\n\t    key: 'onAudioTrackSwitching',\n\t    value: function onAudioTrackSwitching(data) {\n\t      // if any URL found on new audio track, it is an alternate audio track\n\t      var altAudio = !!data.url,\n\t          trackId = data.id;\n\t      // if we switch on main audio, ensure that main fragment scheduling is synced with media.buffered\n\t      // don't do anything if we switch to alt audio: audio stream controller is handling it.\n\t      // we will just have to change buffer scheduling on audioTrackSwitched\n\t      if (!altAudio) {\n\t        if (this.mediaBuffer !== this.media) {\n\t          _logger.logger.log('switching on main audio, use media.buffered to schedule main fragment loading');\n\t          this.mediaBuffer = this.media;\n\t          var fragCurrent = this.fragCurrent;\n\t          // we need to refill audio buffer from main: cancel any frag loading to speed up audio switch\n\t          if (fragCurrent.loader) {\n\t            _logger.logger.log('switching to main audio track, cancel main fragment load');\n\t            fragCurrent.loader.abort();\n\t          }\n\t          this.fragCurrent = null;\n\t          this.fragPrevious = null;\n\t          // destroy demuxer to force init segment generation (following audio switch)\n\t          if (this.demuxer) {\n\t            this.demuxer.destroy();\n\t            this.demuxer = null;\n\t          }\n\t          // switch to IDLE state to load new fragment\n\t          this.state = State.IDLE;\n\t        }\n\t        var hls = this.hls;\n\t        // switching to main audio, flush all audio and trigger track switched\n\t        hls.trigger(_events2.default.BUFFER_FLUSHING, { startOffset: 0, endOffset: Number.POSITIVE_INFINITY, type: 'audio' });\n\t        hls.trigger(_events2.default.AUDIO_TRACK_SWITCHED, { id: trackId });\n\t        this.altAudio = false;\n\t      }\n\t    }\n\t  }, {\n\t    key: 'onAudioTrackSwitched',\n\t    value: function onAudioTrackSwitched(data) {\n\t      var trackId = data.id,\n\t          altAudio = !!this.hls.audioTracks[trackId].url;\n\t      if (altAudio) {\n\t        var videoBuffer = this.videoBuffer;\n\t        // if we switched on alternate audio, ensure that main fragment scheduling is synced with video sourcebuffer buffered\n\t        if (videoBuffer && this.mediaBuffer !== videoBuffer) {\n\t          _logger.logger.log('switching on alternate audio, use video.buffered to schedule main fragment loading');\n\t          this.mediaBuffer = videoBuffer;\n\t        }\n\t      }\n\t      this.altAudio = altAudio;\n\t      this.tick();\n\t    }\n\t  }, {\n\t    key: 'onBufferCreated',\n\t    value: function onBufferCreated(data) {\n\t      var tracks = data.tracks,\n\t          mediaTrack = void 0,\n\t          name = void 0,\n\t          alternate = false;\n\t      for (var type in tracks) {\n\t        var track = tracks[type];\n\t        if (track.id === 'main') {\n\t          name = type;\n\t          mediaTrack = track;\n\t          // keep video source buffer reference\n\t          if (type === 'video') {\n\t            this.videoBuffer = tracks[type].buffer;\n\t          }\n\t        } else {\n\t          alternate = true;\n\t        }\n\t      }\n\t      if (alternate && mediaTrack) {\n\t        _logger.logger.log('alternate track found, use ' + name + '.buffered to schedule main fragment loading');\n\t        this.mediaBuffer = mediaTrack.buffer;\n\t      } else {\n\t        this.mediaBuffer = this.media;\n\t      }\n\t    }\n\t  }, {\n\t    key: 'onBufferAppended',\n\t    value: function onBufferAppended(data) {\n\t      if (data.parent === 'main') {\n\t        var state = this.state;\n\t        if (state === State.PARSING || state === State.PARSED) {\n\t          // check if all buffers have been appended\n\t          this.pendingBuffering = data.pending > 0;\n\t          this._checkAppendedParsed();\n\t        }\n\t      }\n\t    }\n\t  }, {\n\t    key: '_checkAppendedParsed',\n\t    value: function _checkAppendedParsed() {\n\t      var _this3 = this;\n\t\n\t      //trigger handler right now\n\t      if (this.state === State.PARSED && (!this.appended || !this.pendingBuffering)) {\n\t        var frag = this.fragCurrent;\n\t        if (frag) {\n\t          (function () {\n\t            var media = _this3.mediaBuffer ? _this3.mediaBuffer : _this3.media;\n\t            _logger.logger.log('main buffered : ' + _timeRanges2.default.toString(media.buffered));\n\t            // filter potentially evicted bufferRange. this is to avoid memleak on live streams\n\t            var bufferRange = _this3.bufferRange.filter(function (range) {\n\t              return _bufferHelper2.default.isBuffered(media, (range.start + range.end) / 2);\n\t            });\n\t            // push new range\n\t            bufferRange.push({ type: frag.type, start: frag.startPTS, end: frag.endPTS, frag: frag });\n\t            // sort, as we use BinarySearch for lookup in getBufferRange ...\n\t            _this3.bufferRange = bufferRange.sort(function (a, b) {\n\t              return a.start - b.start;\n\t            });\n\t            _this3.fragPrevious = frag;\n\t            var stats = _this3.stats;\n\t            stats.tbuffered = performance.now();\n\t            // we should get rid of this.fragLastKbps\n\t            _this3.fragLastKbps = Math.round(8 * stats.total / (stats.tbuffered - stats.tfirst));\n\t            _this3.hls.trigger(_events2.default.FRAG_BUFFERED, { stats: stats, frag: frag, id: 'main' });\n\t            _this3.state = State.IDLE;\n\t          })();\n\t        }\n\t        this.tick();\n\t      }\n\t    }\n\t  }, {\n\t    key: 'onError',\n\t    value: function onError(data) {\n\t      var frag = data.frag || this.fragCurrent;\n\t      // don't handle frag error not related to main fragment\n\t      if (frag && frag.type !== 'main') {\n\t        return;\n\t      }\n\t      var media = this.media,\n\t\n\t      // 0.5 : tolerance needed as some browsers stalls playback before reaching buffered end\n\t      mediaBuffered = media && _bufferHelper2.default.isBuffered(media, media.currentTime) && _bufferHelper2.default.isBuffered(media, media.currentTime + 0.5);\n\t      switch (data.details) {\n\t        case _errors.ErrorDetails.FRAG_LOAD_ERROR:\n\t        case _errors.ErrorDetails.FRAG_LOAD_TIMEOUT:\n\t        case _errors.ErrorDetails.KEY_LOAD_ERROR:\n\t        case _errors.ErrorDetails.KEY_LOAD_TIMEOUT:\n\t          if (!data.fatal) {\n\t            var loadError = this.fragLoadError;\n\t            if (loadError) {\n\t              loadError++;\n\t            } else {\n\t              loadError = 1;\n\t            }\n\t            var config = this.config;\n\t            // keep retrying / don't raise fatal network error if current position is buffered or if in automode with current level not 0\n\t            if (loadError <= config.fragLoadingMaxRetry || mediaBuffered || frag.autoLevel && frag.level) {\n\t              this.fragLoadError = loadError;\n\t              // reset load counter to avoid frag loop loading error\n\t              frag.loadCounter = 0;\n\t              // exponential backoff capped to config.fragLoadingMaxRetryTimeout\n\t              var delay = Math.min(Math.pow(2, loadError - 1) * config.fragLoadingRetryDelay, config.fragLoadingMaxRetryTimeout);\n\t              _logger.logger.warn('mediaController: frag loading failed, retry in ' + delay + ' ms');\n\t              this.retryDate = performance.now() + delay;\n\t              // retry loading state\n\t              // if loadedmetadata is not set, it means that we are emergency switch down on first frag\n\t              // in that case, reset startFragRequested flag\n\t              if (!this.loadedmetadata) {\n\t                this.startFragRequested = false;\n\t                this.nextLoadPosition = this.startPosition;\n\t              }\n\t              this.state = State.FRAG_LOADING_WAITING_RETRY;\n\t            } else {\n\t              _logger.logger.error('mediaController: ' + data.details + ' reaches max retry, redispatch as fatal ...');\n\t              // redispatch same error but with fatal set to true\n\t              data.fatal = true;\n\t              this.hls.trigger(_events2.default.ERROR, data);\n\t              this.state = State.ERROR;\n\t            }\n\t          }\n\t          break;\n\t        case _errors.ErrorDetails.FRAG_LOOP_LOADING_ERROR:\n\t          if (!data.fatal) {\n\t            // if buffer is not empty\n\t            if (mediaBuffered) {\n\t              // try to reduce max buffer length : rationale is that we could get\n\t              // frag loop loading error because of buffer eviction\n\t              this._reduceMaxBufferLength(frag.duration);\n\t              this.state = State.IDLE;\n\t            } else {\n\t              // buffer empty. report as fatal if in manual mode or if lowest level.\n\t              // level controller takes care of emergency switch down logic\n\t              if (!frag.autoLevel || frag.level === 0) {\n\t                // redispatch same error but with fatal set to true\n\t                data.fatal = true;\n\t                this.hls.trigger(_events2.default.ERROR, data);\n\t                this.state = State.ERROR;\n\t              }\n\t            }\n\t          }\n\t          break;\n\t        case _errors.ErrorDetails.LEVEL_LOAD_ERROR:\n\t        case _errors.ErrorDetails.LEVEL_LOAD_TIMEOUT:\n\t          if (this.state !== State.ERROR) {\n\t            if (data.fatal) {\n\t              // if fatal error, stop processing\n\t              this.state = State.ERROR;\n\t              _logger.logger.warn('streamController: ' + data.details + ',switch to ' + this.state + ' state ...');\n\t            } else {\n\t              // in cas of non fatal error while waiting level load to be completed, switch back to IDLE\n\t              if (this.state === State.WAITING_LEVEL) {\n\t                this.state = State.IDLE;\n\t              }\n\t            }\n\t          }\n\t          break;\n\t        case _errors.ErrorDetails.BUFFER_FULL_ERROR:\n\t          // if in appending state\n\t          if (this.state === State.PARSING || this.state === State.PARSED) {\n\t            // reduce max buf len if current position is buffered\n\t            if (mediaBuffered) {\n\t              this._reduceMaxBufferLength(frag.duration);\n\t              this.state = State.IDLE;\n\t            } else {\n\t              // current position is not buffered, but browser is still complaining about buffer full error\n\t              // this happens on IE/Edge, refer to https://github.com/dailymotion/hls.js/pull/708\n\t              // in that case flush the whole buffer to recover\n\t              _logger.logger.warn('buffer full error also media.currentTime is not buffered, flush everything');\n\t              this.fragCurrent = null;\n\t              // flush everything\n\t              this.flushMainBuffer(0, Number.POSITIVE_INFINITY);\n\t            }\n\t          }\n\t          break;\n\t        default:\n\t          break;\n\t      }\n\t    }\n\t  }, {\n\t    key: '_reduceMaxBufferLength',\n\t    value: function _reduceMaxBufferLength(minLength) {\n\t      var config = this.config;\n\t      if (config.maxMaxBufferLength >= minLength) {\n\t        // reduce max buffer length as it might be too high. we do this to avoid loop flushing ...\n\t        config.maxMaxBufferLength /= 2;\n\t        _logger.logger.warn('reduce max buffer length to ' + config.maxMaxBufferLength + 's and switch to IDLE state');\n\t        // increase fragment load Index to avoid frag loop loading error after buffer flush\n\t        this.fragLoadIdx += 2 * config.fragLoadingLoopThreshold;\n\t      }\n\t    }\n\t  }, {\n\t    key: '_checkBuffer',\n\t    value: function _checkBuffer() {\n\t      var media = this.media;\n\t      // if ready state different from HAVE_NOTHING (numeric value 0), we are allowed to seek\n\t      if (media && media.readyState) {\n\t        var currentTime = media.currentTime,\n\t            mediaBuffer = this.mediaBuffer ? this.mediaBuffer : media,\n\t            buffered = mediaBuffer.buffered;\n\t        // adjust currentTime to start position on loaded metadata\n\t        if (!this.loadedmetadata && buffered.length && !media.seeking) {\n\t          this.loadedmetadata = true;\n\t          // only adjust currentTime if different from startPosition or if startPosition not buffered\n\t          // at that stage, there should be only one buffered range, as we reach that code after first fragment has been buffered\n\t          var startPosition = this.startPosition,\n\t              startPositionBuffered = _bufferHelper2.default.isBuffered(mediaBuffer, startPosition);\n\t          // if currentTime not matching with expected startPosition or startPosition not buffered\n\t          if (currentTime !== startPosition || !startPositionBuffered) {\n\t            _logger.logger.log('target start position:' + startPosition);\n\t            // if startPosition not buffered, let's seek to buffered.start(0)\n\t            if (!startPositionBuffered) {\n\t              startPosition = buffered.start(0);\n\t              _logger.logger.log('target start position not buffered, seek to buffered.start(0) ' + startPosition);\n\t            }\n\t            _logger.logger.log('adjust currentTime from ' + currentTime + ' to ' + startPosition);\n\t            media.currentTime = startPosition;\n\t          }\n\t        } else if (this.immediateSwitch) {\n\t          this.immediateLevelSwitchEnd();\n\t        } else {\n\t          var bufferInfo = _bufferHelper2.default.bufferInfo(media, currentTime, 0),\n\t              expectedPlaying = !(media.paused || // not playing when media is paused\n\t          media.ended || // not playing when media is ended\n\t          media.buffered.length === 0),\n\t              // not playing if nothing buffered\n\t          jumpThreshold = 0.5,\n\t              // tolerance needed as some browsers stalls playback before reaching buffered range end\n\t          playheadMoving = currentTime !== this.lastCurrentTime,\n\t              config = this.config;\n\t\n\t          if (playheadMoving) {\n\t            // played moving, but was previously stalled => now not stuck anymore\n\t            if (this.stallReported) {\n\t              _logger.logger.warn('playback not stuck anymore @' + currentTime + ', after ' + Math.round(performance.now() - this.stalled) + 'ms');\n\t              this.stallReported = false;\n\t            }\n\t            this.stalled = undefined;\n\t            this.nudgeRetry = 0;\n\t          } else {\n\t            // playhead not moving\n\t            if (expectedPlaying) {\n\t              // playhead not moving BUT media expected to play\n\t              var tnow = performance.now();\n\t              var hls = this.hls;\n\t              if (!this.stalled) {\n\t                // stall just detected, store current time\n\t                this.stalled = tnow;\n\t                this.stallReported = false;\n\t              } else {\n\t                // playback already stalled, check stalling duration\n\t                // if stalling for more than a given threshold, let's try to recover\n\t                var stalledDuration = tnow - this.stalled;\n\t                var bufferLen = bufferInfo.len;\n\t                var nudgeRetry = this.nudgeRetry || 0;\n\t                // have we reached stall deadline ?\n\t                if (bufferLen <= jumpThreshold && stalledDuration > config.lowBufferWatchdogPeriod * 1000) {\n\t                  // report stalled error once\n\t                  if (!this.stallReported) {\n\t                    this.stallReported = true;\n\t                    _logger.logger.warn('playback stalling in low buffer @' + currentTime);\n\t                    hls.trigger(_events2.default.ERROR, { type: _errors.ErrorTypes.MEDIA_ERROR, details: _errors.ErrorDetails.BUFFER_STALLED_ERROR, fatal: false, buffer: bufferLen });\n\t                  }\n\t                  // if buffer len is below threshold, try to jump to start of next buffer range if close\n\t                  // no buffer available @ currentTime, check if next buffer is close (within a config.maxSeekHole second range)\n\t                  var nextBufferStart = bufferInfo.nextStart,\n\t                      delta = nextBufferStart - currentTime;\n\t                  if (nextBufferStart && delta < config.maxSeekHole && delta > 0) {\n\t                    this.nudgeRetry = ++nudgeRetry;\n\t                    var nudgeOffset = nudgeRetry * config.nudgeOffset;\n\t                    // next buffer is close ! adjust currentTime to nextBufferStart\n\t                    // this will ensure effective video decoding\n\t                    _logger.logger.log('adjust currentTime from ' + media.currentTime + ' to next buffered @ ' + nextBufferStart + ' + nudge ' + nudgeOffset);\n\t                    media.currentTime = nextBufferStart + nudgeOffset;\n\t                    // reset stalled so to rearm watchdog timer\n\t                    this.stalled = undefined;\n\t                    hls.trigger(_events2.default.ERROR, { type: _errors.ErrorTypes.MEDIA_ERROR, details: _errors.ErrorDetails.BUFFER_SEEK_OVER_HOLE, fatal: false, hole: nextBufferStart + nudgeOffset - currentTime });\n\t                  }\n\t                } else if (bufferLen > jumpThreshold && stalledDuration > config.highBufferWatchdogPeriod * 1000) {\n\t                  // report stalled error once\n\t                  if (!this.stallReported) {\n\t                    this.stallReported = true;\n\t                    _logger.logger.warn('playback stalling in high buffer @' + currentTime);\n\t                    hls.trigger(_events2.default.ERROR, { type: _errors.ErrorTypes.MEDIA_ERROR, details: _errors.ErrorDetails.BUFFER_STALLED_ERROR, fatal: false, buffer: bufferLen });\n\t                  }\n\t                  // reset stalled so to rearm watchdog timer\n\t                  this.stalled = undefined;\n\t                  this.nudgeRetry = ++nudgeRetry;\n\t                  if (nudgeRetry < config.nudgeMaxRetry) {\n\t                    var _currentTime = media.currentTime;\n\t                    var targetTime = _currentTime + nudgeRetry * config.nudgeOffset;\n\t                    _logger.logger.log('adjust currentTime from ' + _currentTime + ' to ' + targetTime);\n\t                    // playback stalled in buffered area ... let's nudge currentTime to try to overcome this\n\t                    media.currentTime = targetTime;\n\t                    hls.trigger(_events2.default.ERROR, { type: _errors.ErrorTypes.MEDIA_ERROR, details: _errors.ErrorDetails.BUFFER_NUDGE_ON_STALL, fatal: false });\n\t                  } else {\n\t                    _logger.logger.error('still stuck in high buffer @' + currentTime + ' after ' + config.nudgeMaxRetry + ', raise fatal error');\n\t                    hls.trigger(_events2.default.ERROR, { type: _errors.ErrorTypes.MEDIA_ERROR, details: _errors.ErrorDetails.BUFFER_STALLED_ERROR, fatal: true });\n\t                  }\n\t                }\n\t              }\n\t            }\n\t          }\n\t        }\n\t      }\n\t    }\n\t  }, {\n\t    key: 'onFragLoadEmergencyAborted',\n\t    value: function onFragLoadEmergencyAborted() {\n\t      this.state = State.IDLE;\n\t      // if loadedmetadata is not set, it means that we are emergency switch down on first frag\n\t      // in that case, reset startFragRequested flag\n\t      if (!this.loadedmetadata) {\n\t        this.startFragRequested = false;\n\t        this.nextLoadPosition = this.startPosition;\n\t      }\n\t      this.tick();\n\t    }\n\t  }, {\n\t    key: 'onBufferFlushed',\n\t    value: function onBufferFlushed() {\n\t      /* after successful buffer flushing, filter flushed fragments from bufferRange\n\t        use mediaBuffered instead of media (so that we will check against video.buffered ranges in case of alt audio track)\n\t      */\n\t      var media = this.mediaBuffer ? this.mediaBuffer : this.media;\n\t      this.bufferRange = this.bufferRange.filter(function (range) {\n\t        return _bufferHelper2.default.isBuffered(media, (range.start + range.end) / 2);\n\t      });\n\t\n\t      // increase fragment load Index to avoid frag loop loading error after buffer flush\n\t      this.fragLoadIdx += 2 * this.config.fragLoadingLoopThreshold;\n\t      // move to IDLE once flush complete. this should trigger new fragment loading\n\t      this.state = State.IDLE;\n\t      // reset reference to frag\n\t      this.fragPrevious = null;\n\t    }\n\t  }, {\n\t    key: 'swapAudioCodec',\n\t    value: function swapAudioCodec() {\n\t      this.audioCodecSwap = !this.audioCodecSwap;\n\t    }\n\t  }, {\n\t    key: 'computeLivePosition',\n\t    value: function computeLivePosition(sliding, levelDetails) {\n\t      var targetLatency = this.config.liveSyncDuration !== undefined ? this.config.liveSyncDuration : this.config.liveSyncDurationCount * levelDetails.targetduration;\n\t      return sliding + Math.max(0, levelDetails.totalduration - targetLatency);\n\t    }\n\t  }, {\n\t    key: 'state',\n\t    set: function set(nextState) {\n\t      if (this.state !== nextState) {\n\t        var previousState = this.state;\n\t        this._state = nextState;\n\t        _logger.logger.log('main stream:' + previousState + '->' + nextState);\n\t        this.hls.trigger(_events2.default.STREAM_STATE_TRANSITION, { previousState: previousState, nextState: nextState });\n\t      }\n\t    },\n\t    get: function get() {\n\t      return this._state;\n\t    }\n\t  }, {\n\t    key: 'currentLevel',\n\t    get: function get() {\n\t      var media = this.media;\n\t      if (media) {\n\t        var range = this.getBufferRange(media.currentTime);\n\t        if (range) {\n\t          return range.frag.level;\n\t        }\n\t      }\n\t      return -1;\n\t    }\n\t  }, {\n\t    key: 'nextBufferRange',\n\t    get: function get() {\n\t      var media = this.media;\n\t      if (media) {\n\t        // first get end range of current fragment\n\t        return this.followingBufferRange(this.getBufferRange(media.currentTime));\n\t      } else {\n\t        return null;\n\t      }\n\t    }\n\t  }, {\n\t    key: 'nextLevel',\n\t    get: function get() {\n\t      var range = this.nextBufferRange;\n\t      if (range) {\n\t        return range.frag.level;\n\t      } else {\n\t        return -1;\n\t      }\n\t    }\n\t  }, {\n\t    key: 'liveSyncPosition',\n\t    get: function get() {\n\t      return this._liveSyncPosition;\n\t    },\n\t    set: function set(value) {\n\t      this._liveSyncPosition = value;\n\t    }\n\t  }]);\n\t\n\t  return StreamController;\n\t}(_eventHandler2.default);\n\t\n\texports.default = StreamController;\n\t\n\t},{\"22\":22,\"26\":26,\"27\":27,\"28\":28,\"30\":30,\"31\":31,\"41\":41,\"45\":45,\"46\":46}],13:[function(_dereq_,module,exports){\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _events = _dereq_(28);\n\t\n\tvar _events2 = _interopRequireDefault(_events);\n\t\n\tvar _eventHandler = _dereq_(27);\n\t\n\tvar _eventHandler2 = _interopRequireDefault(_eventHandler);\n\t\n\tvar _cea608Parser = _dereq_(42);\n\t\n\tvar _cea608Parser2 = _interopRequireDefault(_cea608Parser);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /*\n\t                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * Timeline Controller\n\t                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               */\n\t\n\tvar TimelineController = function (_EventHandler) {\n\t  _inherits(TimelineController, _EventHandler);\n\t\n\t  function TimelineController(hls) {\n\t    _classCallCheck(this, TimelineController);\n\t\n\t    var _this = _possibleConstructorReturn(this, (TimelineController.__proto__ || Object.getPrototypeOf(TimelineController)).call(this, hls, _events2.default.MEDIA_ATTACHING, _events2.default.MEDIA_DETACHING, _events2.default.FRAG_PARSING_USERDATA, _events2.default.MANIFEST_LOADING, _events2.default.FRAG_LOADED, _events2.default.LEVEL_SWITCH));\n\t\n\t    _this.hls = hls;\n\t    _this.config = hls.config;\n\t    _this.enabled = true;\n\t    _this.Cues = hls.config.cueHandler;\n\t\n\t    if (_this.config.enableCEA708Captions) {\n\t      var self = _this;\n\t      var sendAddTrackEvent = function sendAddTrackEvent(track, media) {\n\t        var e = null;\n\t        try {\n\t          e = new window.Event('addtrack');\n\t        } catch (err) {\n\t          //for IE11\n\t          e = document.createEvent('Event');\n\t          e.initEvent('addtrack', false, false);\n\t        }\n\t        e.track = track;\n\t        media.dispatchEvent(e);\n\t      };\n\t\n\t      var channel1 = {\n\t        'newCue': function newCue(startTime, endTime, screen) {\n\t          if (!self.textTrack1) {\n\t            //Enable reuse of existing text track.\n\t            var existingTrack1 = self.getExistingTrack('1');\n\t            if (!existingTrack1) {\n\t              self.textTrack1 = self.createTextTrack('captions', 'English', 'en');\n\t              self.textTrack1.textTrack1 = true;\n\t            } else {\n\t              self.textTrack1 = existingTrack1;\n\t              self.clearCurrentCues(self.textTrack1);\n\t\n\t              sendAddTrackEvent(self.textTrack1, self.media);\n\t            }\n\t          }\n\t\n\t          self.Cues.newCue(self.textTrack1, startTime, endTime, screen);\n\t        }\n\t      };\n\t\n\t      var channel2 = {\n\t        'newCue': function newCue(startTime, endTime, screen) {\n\t          if (!self.textTrack2) {\n\t            //Enable reuse of existing text track.\n\t            var existingTrack2 = self.getExistingTrack('2');\n\t            if (!existingTrack2) {\n\t              self.textTrack2 = self.createTextTrack('captions', 'Spanish', 'es');\n\t              self.textTrack2.textTrack2 = true;\n\t            } else {\n\t              self.textTrack2 = existingTrack2;\n\t              self.clearCurrentCues(self.textTrack2);\n\t\n\t              sendAddTrackEvent(self.textTrack2, self.media);\n\t            }\n\t          }\n\t\n\t          self.Cues.newCue(self.textTrack2, startTime, endTime, screen);\n\t        }\n\t      };\n\t\n\t      _this.cea608Parser = new _cea608Parser2.default(0, channel1, channel2);\n\t    }\n\t    return _this;\n\t  }\n\t\n\t  _createClass(TimelineController, [{\n\t    key: 'clearCurrentCues',\n\t    value: function clearCurrentCues(track) {\n\t      if (track && track.cues) {\n\t        while (track.cues.length > 0) {\n\t          track.removeCue(track.cues[0]);\n\t        }\n\t      }\n\t    }\n\t  }, {\n\t    key: 'getExistingTrack',\n\t    value: function getExistingTrack(channelNumber) {\n\t      var media = this.media;\n\t      if (media) {\n\t        for (var i = 0; i < media.textTracks.length; i++) {\n\t          var textTrack = media.textTracks[i];\n\t          var propName = 'textTrack' + channelNumber;\n\t          if (textTrack[propName] === true) {\n\t            return textTrack;\n\t          }\n\t        }\n\t      }\n\t      return null;\n\t    }\n\t  }, {\n\t    key: 'createTextTrack',\n\t    value: function createTextTrack(kind, label, lang) {\n\t      if (this.media) {\n\t        return this.media.addTextTrack(kind, label, lang);\n\t      }\n\t    }\n\t  }, {\n\t    key: 'destroy',\n\t    value: function destroy() {\n\t      _eventHandler2.default.prototype.destroy.call(this);\n\t    }\n\t  }, {\n\t    key: 'onMediaAttaching',\n\t    value: function onMediaAttaching(data) {\n\t      this.media = data.media;\n\t    }\n\t  }, {\n\t    key: 'onMediaDetaching',\n\t    value: function onMediaDetaching() {\n\t      this.clearCurrentCues(this.textTrack1);\n\t      this.clearCurrentCues(this.textTrack2);\n\t    }\n\t  }, {\n\t    key: 'onManifestLoading',\n\t    value: function onManifestLoading() {\n\t      this.lastPts = Number.NEGATIVE_INFINITY;\n\t    }\n\t  }, {\n\t    key: 'onLevelSwitch',\n\t    value: function onLevelSwitch() {\n\t      if (this.hls.currentLevel.closedCaptions === 'NONE') {\n\t        this.enabled = false;\n\t      } else {\n\t        this.enabled = true;\n\t      }\n\t    }\n\t  }, {\n\t    key: 'onFragLoaded',\n\t    value: function onFragLoaded(data) {\n\t      if (data.frag.type === 'main') {\n\t        var pts = data.frag.start; //Number.POSITIVE_INFINITY;\n\t        // if this is a frag for a previously loaded timerange, remove all captions\n\t        // TODO: consider just removing captions for the timerange\n\t        if (pts <= this.lastPts) {\n\t          this.clearCurrentCues(this.textTrack1);\n\t          this.clearCurrentCues(this.textTrack2);\n\t        }\n\t        this.lastPts = pts;\n\t      }\n\t    }\n\t  }, {\n\t    key: 'onFragParsingUserdata',\n\t    value: function onFragParsingUserdata(data) {\n\t      // push all of the CEA-708 messages into the interpreter\n\t      // immediately. It will create the proper timestamps based on our PTS value\n\t      if (this.enabled && this.config.enableCEA708Captions) {\n\t        for (var i = 0; i < data.samples.length; i++) {\n\t          var ccdatas = this.extractCea608Data(data.samples[i].bytes);\n\t          this.cea608Parser.addData(data.samples[i].pts, ccdatas);\n\t        }\n\t      }\n\t    }\n\t  }, {\n\t    key: 'extractCea608Data',\n\t    value: function extractCea608Data(byteArray) {\n\t      var count = byteArray[0] & 31;\n\t      var position = 2;\n\t      var tmpByte, ccbyte1, ccbyte2, ccValid, ccType;\n\t      var actualCCBytes = [];\n\t\n\t      for (var j = 0; j < count; j++) {\n\t        tmpByte = byteArray[position++];\n\t        ccbyte1 = 0x7F & byteArray[position++];\n\t        ccbyte2 = 0x7F & byteArray[position++];\n\t        ccValid = (4 & tmpByte) === 0 ? false : true;\n\t        ccType = 3 & tmpByte;\n\t\n\t        if (ccbyte1 === 0 && ccbyte2 === 0) {\n\t          continue;\n\t        }\n\t\n\t        if (ccValid) {\n\t          if (ccType === 0) // || ccType === 1\n\t            {\n\t              actualCCBytes.push(ccbyte1);\n\t              actualCCBytes.push(ccbyte2);\n\t            }\n\t        }\n\t      }\n\t      return actualCCBytes;\n\t    }\n\t  }]);\n\t\n\t  return TimelineController;\n\t}(_eventHandler2.default);\n\t\n\texports.default = TimelineController;\n\t\n\t},{\"27\":27,\"28\":28,\"42\":42}],14:[function(_dereq_,module,exports){\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tvar AESCrypto = function () {\n\t  function AESCrypto(subtle, iv) {\n\t    _classCallCheck(this, AESCrypto);\n\t\n\t    this.subtle = subtle;\n\t    this.aesIV = iv;\n\t  }\n\t\n\t  _createClass(AESCrypto, [{\n\t    key: 'decrypt',\n\t    value: function decrypt(data, key) {\n\t      return this.subtle.decrypt({ name: 'AES-CBC', iv: this.aesIV }, key, data);\n\t    }\n\t  }]);\n\t\n\t  return AESCrypto;\n\t}();\n\t\n\texports.default = AESCrypto;\n\t\n\t},{}],15:[function(_dereq_,module,exports){\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tvar AESDecryptor = function () {\n\t  function AESDecryptor() {\n\t    _classCallCheck(this, AESDecryptor);\n\t\n\t    // Static after running initTable\n\t    this.rcon = [0x0, 0x1, 0x2, 0x4, 0x8, 0x10, 0x20, 0x40, 0x80, 0x1b, 0x36];\n\t\n\t    this.subMix = [];\n\t    this.subMix[0] = new Uint32Array(256);\n\t    this.subMix[1] = new Uint32Array(256);\n\t    this.subMix[2] = new Uint32Array(256);\n\t    this.subMix[3] = new Uint32Array(256);\n\t\n\t    this.invSubMix = [];\n\t    this.invSubMix[0] = new Uint32Array(256);\n\t    this.invSubMix[1] = new Uint32Array(256);\n\t    this.invSubMix[2] = new Uint32Array(256);\n\t    this.invSubMix[3] = new Uint32Array(256);\n\t\n\t    this.sBox = new Uint32Array(256);\n\t    this.invSBox = new Uint32Array(256);\n\t\n\t    // Changes during runtime\n\t    this.key = new Uint32Array(0);\n\t\n\t    this.initTable();\n\t  }\n\t\n\t  // Using view.getUint32() also swaps the byte order.\n\t\n\t\n\t  _createClass(AESDecryptor, [{\n\t    key: 'uint8ArrayToUint32Array_',\n\t    value: function uint8ArrayToUint32Array_(arrayBuffer) {\n\t      var view = new DataView(arrayBuffer);\n\t      var newArray = new Uint32Array(4);\n\t      for (var i = 0; i < newArray.length; i++) {\n\t        newArray[i] = view.getUint32(i * 4);\n\t      }\n\t      return newArray;\n\t    }\n\t  }, {\n\t    key: 'initTable',\n\t    value: function initTable() {\n\t      var sBox = this.sBox;\n\t      var invSBox = this.invSBox;\n\t      var subMix0 = this.subMix[0];\n\t      var subMix1 = this.subMix[1];\n\t      var subMix2 = this.subMix[2];\n\t      var subMix3 = this.subMix[3];\n\t      var invSubMix0 = this.invSubMix[0];\n\t      var invSubMix1 = this.invSubMix[1];\n\t      var invSubMix2 = this.invSubMix[2];\n\t      var invSubMix3 = this.invSubMix[3];\n\t\n\t      var d = new Uint32Array(256);\n\t      var x = 0;\n\t      var xi = 0;\n\t      var i = 0;\n\t      for (i = 0; i < 256; i++) {\n\t        if (i < 128) {\n\t          d[i] = i << 1;\n\t        } else {\n\t          d[i] = i << 1 ^ 0x11b;\n\t        }\n\t      }\n\t\n\t      for (i = 0; i < 256; i++) {\n\t        var sx = xi ^ xi << 1 ^ xi << 2 ^ xi << 3 ^ xi << 4;\n\t        sx = sx >>> 8 ^ sx & 0xff ^ 0x63;\n\t        sBox[x] = sx;\n\t        invSBox[sx] = x;\n\t\n\t        // Compute multiplication\n\t        var x2 = d[x];\n\t        var x4 = d[x2];\n\t        var x8 = d[x4];\n\t\n\t        // Compute sub/invSub bytes, mix columns tables\n\t        var t = d[sx] * 0x101 ^ sx * 0x1010100;\n\t        subMix0[x] = t << 24 | t >>> 8;\n\t        subMix1[x] = t << 16 | t >>> 16;\n\t        subMix2[x] = t << 8 | t >>> 24;\n\t        subMix3[x] = t;\n\t\n\t        // Compute inv sub bytes, inv mix columns tables\n\t        t = x8 * 0x1010101 ^ x4 * 0x10001 ^ x2 * 0x101 ^ x * 0x1010100;\n\t        invSubMix0[sx] = t << 24 | t >>> 8;\n\t        invSubMix1[sx] = t << 16 | t >>> 16;\n\t        invSubMix2[sx] = t << 8 | t >>> 24;\n\t        invSubMix3[sx] = t;\n\t\n\t        // Compute next counter\n\t        if (!x) {\n\t          x = xi = 1;\n\t        } else {\n\t          x = x2 ^ d[d[d[x8 ^ x2]]];\n\t          xi ^= d[d[xi]];\n\t        }\n\t      }\n\t    }\n\t  }, {\n\t    key: 'expandKey',\n\t    value: function expandKey(keyBuffer) {\n\t      // convert keyBuffer to Uint32Array\n\t      var key = this.uint8ArrayToUint32Array_(keyBuffer);\n\t      var sameKey = true;\n\t      var offset = 0;\n\t\n\t      while (offset < key.length && sameKey) {\n\t        sameKey = key[offset] === this.key[offset];\n\t        offset++;\n\t      }\n\t\n\t      if (sameKey) {\n\t        return;\n\t      }\n\t\n\t      this.key = key;\n\t      var keySize = this.keySize = key.length;\n\t\n\t      if (keySize !== 4 && keySize !== 6 && keySize !== 8) {\n\t        throw new Error('Invalid aes key size=' + keySize);\n\t      }\n\t\n\t      var ksRows = this.ksRows = (keySize + 6 + 1) * 4;\n\t      var ksRow = void 0;\n\t      var invKsRow = void 0;\n\t\n\t      var keySchedule = this.keySchedule = new Uint32Array(this.ksRows);\n\t      var invKeySchedule = this.invKeySchedule = new Uint32Array(this.ksRows);\n\t      var sbox = this.sBox;\n\t      var rcon = this.rcon;\n\t\n\t      var invSubMix0 = this.invSubMix[0];\n\t      var invSubMix1 = this.invSubMix[1];\n\t      var invSubMix2 = this.invSubMix[2];\n\t      var invSubMix3 = this.invSubMix[3];\n\t\n\t      var prev = void 0;\n\t      var t = void 0;\n\t\n\t      for (ksRow = 0; ksRow < ksRows; ksRow++) {\n\t        if (ksRow < keySize) {\n\t          prev = keySchedule[ksRow] = key[ksRow];\n\t          continue;\n\t        }\n\t        t = prev;\n\t\n\t        if (ksRow % keySize === 0) {\n\t          // Rot word\n\t          t = t << 8 | t >>> 24;\n\t\n\t          // Sub word\n\t          t = sbox[t >>> 24] << 24 | sbox[t >>> 16 & 0xff] << 16 | sbox[t >>> 8 & 0xff] << 8 | sbox[t & 0xff];\n\t\n\t          // Mix Rcon\n\t          t ^= rcon[ksRow / keySize | 0] << 24;\n\t        } else if (keySize > 6 && ksRow % keySize === 4) {\n\t          // Sub word\n\t          t = sbox[t >>> 24] << 24 | sbox[t >>> 16 & 0xff] << 16 | sbox[t >>> 8 & 0xff] << 8 | sbox[t & 0xff];\n\t        }\n\t\n\t        keySchedule[ksRow] = prev = (keySchedule[ksRow - keySize] ^ t) >>> 0;\n\t      }\n\t\n\t      for (invKsRow = 0; invKsRow < ksRows; invKsRow++) {\n\t        ksRow = ksRows - invKsRow;\n\t        if (invKsRow & 3) {\n\t          t = keySchedule[ksRow];\n\t        } else {\n\t          t = keySchedule[ksRow - 4];\n\t        }\n\t\n\t        if (invKsRow < 4 || ksRow <= 4) {\n\t          invKeySchedule[invKsRow] = t;\n\t        } else {\n\t          invKeySchedule[invKsRow] = invSubMix0[sbox[t >>> 24]] ^ invSubMix1[sbox[t >>> 16 & 0xff]] ^ invSubMix2[sbox[t >>> 8 & 0xff]] ^ invSubMix3[sbox[t & 0xff]];\n\t        }\n\t\n\t        invKeySchedule[invKsRow] = invKeySchedule[invKsRow] >>> 0;\n\t      }\n\t    }\n\t\n\t    // Adding this as a method greatly improves performance.\n\t\n\t  }, {\n\t    key: 'networkToHostOrderSwap',\n\t    value: function networkToHostOrderSwap(word) {\n\t      return word << 24 | (word & 0xff00) << 8 | (word & 0xff0000) >> 8 | word >>> 24;\n\t    }\n\t  }, {\n\t    key: 'decrypt',\n\t    value: function decrypt(inputArrayBuffer, offset, aesIV) {\n\t      var nRounds = this.keySize + 6;\n\t      var invKeySchedule = this.invKeySchedule;\n\t      var invSBOX = this.invSBox;\n\t\n\t      var invSubMix0 = this.invSubMix[0];\n\t      var invSubMix1 = this.invSubMix[1];\n\t      var invSubMix2 = this.invSubMix[2];\n\t      var invSubMix3 = this.invSubMix[3];\n\t\n\t      var initVector = this.uint8ArrayToUint32Array_(aesIV);\n\t      var initVector0 = initVector[0];\n\t      var initVector1 = initVector[1];\n\t      var initVector2 = initVector[2];\n\t      var initVector3 = initVector[3];\n\t\n\t      var inputInt32 = new Int32Array(inputArrayBuffer);\n\t      var outputInt32 = new Int32Array(inputInt32.length);\n\t\n\t      var t0 = void 0,\n\t          t1 = void 0,\n\t          t2 = void 0,\n\t          t3 = void 0;\n\t      var s0 = void 0,\n\t          s1 = void 0,\n\t          s2 = void 0,\n\t          s3 = void 0;\n\t      var inputWords0 = void 0,\n\t          inputWords1 = void 0,\n\t          inputWords2 = void 0,\n\t          inputWords3 = void 0;\n\t\n\t      var ksRow, i;\n\t\n\t      while (offset < inputInt32.length) {\n\t        inputWords0 = this.networkToHostOrderSwap(inputInt32[offset]);\n\t        inputWords1 = this.networkToHostOrderSwap(inputInt32[offset + 1]);\n\t        inputWords2 = this.networkToHostOrderSwap(inputInt32[offset + 2]);\n\t        inputWords3 = this.networkToHostOrderSwap(inputInt32[offset + 3]);\n\t\n\t        s0 = inputWords0 ^ invKeySchedule[0];\n\t        s1 = inputWords3 ^ invKeySchedule[1];\n\t        s2 = inputWords2 ^ invKeySchedule[2];\n\t        s3 = inputWords1 ^ invKeySchedule[3];\n\t\n\t        ksRow = 4;\n\t\n\t        // Iterate through the rounds of decryption\n\t        for (i = 1; i < nRounds; i++) {\n\t          t0 = invSubMix0[s0 >>> 24] ^ invSubMix1[s1 >> 16 & 0xff] ^ invSubMix2[s2 >> 8 & 0xff] ^ invSubMix3[s3 & 0xff] ^ invKeySchedule[ksRow];\n\t          t1 = invSubMix0[s1 >>> 24] ^ invSubMix1[s2 >> 16 & 0xff] ^ invSubMix2[s3 >> 8 & 0xff] ^ invSubMix3[s0 & 0xff] ^ invKeySchedule[ksRow + 1];\n\t          t2 = invSubMix0[s2 >>> 24] ^ invSubMix1[s3 >> 16 & 0xff] ^ invSubMix2[s0 >> 8 & 0xff] ^ invSubMix3[s1 & 0xff] ^ invKeySchedule[ksRow + 2];\n\t          t3 = invSubMix0[s3 >>> 24] ^ invSubMix1[s0 >> 16 & 0xff] ^ invSubMix2[s1 >> 8 & 0xff] ^ invSubMix3[s2 & 0xff] ^ invKeySchedule[ksRow + 3];\n\t          // Update state\n\t          s0 = t0;\n\t          s1 = t1;\n\t          s2 = t2;\n\t          s3 = t3;\n\t\n\t          ksRow = ksRow + 4;\n\t        }\n\t\n\t        // Shift rows, sub bytes, add round key\n\t        t0 = invSBOX[s0 >>> 24] << 24 ^ invSBOX[s1 >> 16 & 0xff] << 16 ^ invSBOX[s2 >> 8 & 0xff] << 8 ^ invSBOX[s3 & 0xff] ^ invKeySchedule[ksRow];\n\t        t1 = invSBOX[s1 >>> 24] << 24 ^ invSBOX[s2 >> 16 & 0xff] << 16 ^ invSBOX[s3 >> 8 & 0xff] << 8 ^ invSBOX[s0 & 0xff] ^ invKeySchedule[ksRow + 1];\n\t        t2 = invSBOX[s2 >>> 24] << 24 ^ invSBOX[s3 >> 16 & 0xff] << 16 ^ invSBOX[s0 >> 8 & 0xff] << 8 ^ invSBOX[s1 & 0xff] ^ invKeySchedule[ksRow + 2];\n\t        t3 = invSBOX[s3 >>> 24] << 24 ^ invSBOX[s0 >> 16 & 0xff] << 16 ^ invSBOX[s1 >> 8 & 0xff] << 8 ^ invSBOX[s2 & 0xff] ^ invKeySchedule[ksRow + 3];\n\t        ksRow = ksRow + 3;\n\t\n\t        // Write\n\t        outputInt32[offset] = this.networkToHostOrderSwap(t0 ^ initVector0);\n\t        outputInt32[offset + 1] = this.networkToHostOrderSwap(t3 ^ initVector1);\n\t        outputInt32[offset + 2] = this.networkToHostOrderSwap(t2 ^ initVector2);\n\t        outputInt32[offset + 3] = this.networkToHostOrderSwap(t1 ^ initVector3);\n\t\n\t        // reset initVector to last 4 unsigned int\n\t        initVector0 = inputWords0;\n\t        initVector1 = inputWords1;\n\t        initVector2 = inputWords2;\n\t        initVector3 = inputWords3;\n\t\n\t        offset = offset + 4;\n\t      }\n\t\n\t      return outputInt32.buffer;\n\t    }\n\t  }, {\n\t    key: 'destroy',\n\t    value: function destroy() {\n\t      this.key = undefined;\n\t      this.keySize = undefined;\n\t      this.ksRows = undefined;\n\t\n\t      this.sBox = undefined;\n\t      this.invSBox = undefined;\n\t      this.subMix = undefined;\n\t      this.invSubMix = undefined;\n\t      this.keySchedule = undefined;\n\t      this.invKeySchedule = undefined;\n\t\n\t      this.rcon = undefined;\n\t    }\n\t  }]);\n\t\n\t  return AESDecryptor;\n\t}();\n\t\n\texports.default = AESDecryptor;\n\t\n\t},{}],16:[function(_dereq_,module,exports){\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _aesCrypto = _dereq_(14);\n\t\n\tvar _aesCrypto2 = _interopRequireDefault(_aesCrypto);\n\t\n\tvar _fastAesKey = _dereq_(17);\n\t\n\tvar _fastAesKey2 = _interopRequireDefault(_fastAesKey);\n\t\n\tvar _aesDecryptor = _dereq_(15);\n\t\n\tvar _aesDecryptor2 = _interopRequireDefault(_aesDecryptor);\n\t\n\tvar _errors = _dereq_(26);\n\t\n\tvar _logger = _dereq_(45);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\t/*globals self: false */\n\t\n\tvar Decrypter = function () {\n\t  function Decrypter(observer, config) {\n\t    _classCallCheck(this, Decrypter);\n\t\n\t    this.observer = observer;\n\t    this.config = config;\n\t    try {\n\t      var browserCrypto = crypto ? crypto : self.crypto;\n\t      this.subtle = browserCrypto.subtle || browserCrypto.webkitSubtle;\n\t    } catch (e) {}\n\t    this.disableWebCrypto = !this.subtle;\n\t  }\n\t\n\t  _createClass(Decrypter, [{\n\t    key: 'decrypt',\n\t    value: function decrypt(data, key, iv, callback) {\n\t      var _this = this;\n\t\n\t      if (this.disableWebCrypto && this.config.enableSoftwareAES) {\n\t        _logger.logger.log('JS AES decrypt');\n\t        var decryptor = this.decryptor;\n\t        if (!decryptor) {\n\t          this.decryptor = decryptor = new _aesDecryptor2.default();\n\t        }\n\t        decryptor.expandKey(key);\n\t        callback(decryptor.decrypt(data, 0, iv));\n\t      } else {\n\t        (function () {\n\t          _logger.logger.log('WebCrypto AES decrypt');\n\t          var subtle = _this.subtle;\n\t          if (_this.key !== key) {\n\t            _this.key = key;\n\t            _this.fastAesKey = new _fastAesKey2.default(subtle, key);\n\t          }\n\t\n\t          _this.fastAesKey.expandKey().then(function (aesKey) {\n\t            // decrypt using web crypto\n\t            var crypto = new _aesCrypto2.default(subtle, iv);\n\t            crypto.decrypt(data, aesKey).then(function (result) {\n\t              callback(result);\n\t            });\n\t          }).catch(function (err) {\n\t            _this.onWebCryptoError(err, data, key, iv, callback);\n\t          });\n\t        })();\n\t      }\n\t    }\n\t  }, {\n\t    key: 'onWebCryptoError',\n\t    value: function onWebCryptoError(err, data, key, iv, callback) {\n\t      if (this.config.enableSoftwareAES) {\n\t        _logger.logger.log('WebCrypto Error, disable WebCrypto API');\n\t        this.disableWebCrypto = true;\n\t        this.decrypt(data, key, iv, callback);\n\t      } else {\n\t        _logger.logger.error('decrypting error : ' + err.message);\n\t        this.observer.trigger(Event.ERROR, { type: _errors.ErrorTypes.MEDIA_ERROR, details: _errors.ErrorDetails.FRAG_DECRYPT_ERROR, fatal: true, reason: err.message });\n\t      }\n\t    }\n\t  }, {\n\t    key: 'destroy',\n\t    value: function destroy() {\n\t      var decryptor = this.decryptor;\n\t      if (decryptor) {\n\t        decryptor.destroy();\n\t        this.decryptor = undefined;\n\t      }\n\t    }\n\t  }]);\n\t\n\t  return Decrypter;\n\t}();\n\t\n\texports.default = Decrypter;\n\t\n\t},{\"14\":14,\"15\":15,\"17\":17,\"26\":26,\"45\":45}],17:[function(_dereq_,module,exports){\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tvar FastAESKey = function () {\n\t  function FastAESKey(subtle, key) {\n\t    _classCallCheck(this, FastAESKey);\n\t\n\t    this.subtle = subtle;\n\t    this.key = key;\n\t  }\n\t\n\t  _createClass(FastAESKey, [{\n\t    key: 'expandKey',\n\t    value: function expandKey() {\n\t      return this.subtle.importKey('raw', this.key, { name: 'AES-CBC' }, false, ['encrypt', 'decrypt']);\n\t    }\n\t  }]);\n\t\n\t  return FastAESKey;\n\t}();\n\t\n\texports.default = FastAESKey;\n\t\n\t},{}],18:[function(_dereq_,module,exports){\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }(); /**\n\tdemuxer\n\tn\t\n\t\n\tvar _adts = _dereq_(19);\n\t\n\tvar _adts2 = _interopRequireDefault(_adts);\n\t\n\tvar _logger = _dereq_(45);\n\t\n\tvar _id = _dereq_(24);\n\t\n\tvar _id2 = _interopRequireDefault(_id);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tvar AACDemuxer = function () {\n\t  function AACDemuxer(observer, id, remuxerClass, config, typeSupported) {\n\t    _classCallCheck(this, AACDemuxer);\n\t\n\t    this.observer = observer;\n\t    this.id = id;\n\t    this.remuxerClass = remuxerClass;\n\t    this.config = config;\n\t    this.remuxer = new this.remuxerClass(observer, id, config, typeSupported);\n\t    this.insertDiscontinuity();\n\t  }\n\t\n\t  _createClass(AACDemuxer, [{\n\t    key: 'insertDiscontinuity',\n\t    value: function insertDiscontinuity() {\n\t      this._aacTrack = { container: 'audio/adts', type: 'audio', id: -1, sequenceNumber: 0, isAAC: true, samples: [], len: 0 };\n\t    }\n\t  }, {\n\t    key: 'push',\n\t\n\t\n\t    // feed incoming data to the front of the parsing pipeline\n\t    value: function push(data, audioCodec, videoCodec, timeOffset, cc, level, sn, duration, accurateTimeOffset, defaultInitPTS) {\n\t      var track,\n\t          id3 = new _id2.default(data),\n\t          pts = 90 * id3.timeStamp,\n\t          config,\n\t          frameLength,\n\t          frameDuration,\n\t          frameIndex,\n\t          offset,\n\t          headerLength,\n\t          stamp,\n\t          len,\n\t          aacSample;\n\t\n\t      var contiguous = false;\n\t      if (cc !== this.lastCC) {\n\t        _logger.logger.log(this.id + ' discontinuity detected');\n\t        this.lastCC = cc;\n\t        this.insertDiscontinuity();\n\t        this.remuxer.switchLevel();\n\t        this.remuxer.insertDiscontinuity();\n\t      } else if (level !== this.lastLevel) {\n\t        _logger.logger.log('audio track switch detected');\n\t        this.lastLevel = level;\n\t        this.remuxer.switchLevel();\n\t        this.insertDiscontinuity();\n\t      } else if (sn === this.lastSN + 1) {\n\t        contiguous = true;\n\t      }\n\t      track = this._aacTrack;\n\t      this.lastSN = sn;\n\t      this.lastLevel = level;\n\t\n\t      // look for ADTS header (0xFFFx)\n\t      for (offset = id3.length, len = data.length; offset < len - 1; offset++) {\n\t        if (data[offset] === 0xff && (data[offset + 1] & 0xf0) === 0xf0) {\n\t          break;\n\t        }\n\t      }\n\t\n\t      if (!track.audiosamplerate) {\n\t        config = _adts2.default.getAudioConfig(this.observer, data, offset, audioCodec);\n\t        track.config = config.config;\n\t        track.audiosamplerate = config.samplerate;\n\t        track.channelCount = config.channelCount;\n\t        track.codec = config.codec;\n\t        track.manifestCodec = config.manifestCodec;\n\t        track.duration = duration;\n\t        _logger.logger.log('parsed codec:' + track.codec + ',rate:' + config.samplerate + ',nb channel:' + config.channelCount);\n\t      }\n\t      frameIndex = 0;\n\t      frameDuration = 1024 * 90000 / track.audiosamplerate;\n\t      while (offset + 5 < len) {\n\t        // The protection skip bit tells us if we have 2 bytes of CRC data at the end of the ADTS header\n\t        headerLength = !!(data[offset + 1] & 0x01) ? 7 : 9;\n\t        // retrieve frame size\n\t        frameLength = (data[offset + 3] & 0x03) << 11 | data[offset + 4] << 3 | (data[offset + 5] & 0xE0) >>> 5;\n\t        frameLength -= headerLength;\n\t        //stamp = pes.pts;\n\t\n\t        if (frameLength > 0 && offset + headerLength + frameLength <= len) {\n\t          stamp = pts + frameIndex * frameDuration;\n\t          //logger.log(`AAC frame, offset/length/total/pts:${offset+headerLength}/${frameLength}/${data.byteLength}/${(stamp/90).toFixed(0)}`);\n\t          aacSample = { unit: data.subarray(offset + headerLength, offset + headerLength + frameLength), pts: stamp, dts: stamp };\n\t          track.samples.push(aacSample);\n\t          track.len += frameLength;\n\t          offset += frameLength + headerLength;\n\t          frameIndex++;\n\t          // look for ADTS header (0xFFFx)\n\t          for (; offset < len - 1; offset++) {\n\t            if (data[offset] === 0xff && (data[offset + 1] & 0xf0) === 0xf0) {\n\t              break;\n\t            }\n\t          }\n\t        } else {\n\t          break;\n\t        }\n\t      }\n\t      this.remuxer.remux(level, sn, cc, track, { samples: [] }, { samples: [{ pts: pts, dts: pts, unit: id3.payload }] }, { samples: [] }, timeOffset, contiguous, accurateTimeOffset, defaultInitPTS);\n\t    }\n\t  }, {\n\t    key: 'destroy',\n\t    value: function destroy() {}\n\t  }], [{\n\t    key: 'probe',\n\t    value: function probe(data) {\n\t      // check if data contains ID3 timestamp and ADTS sync worc\n\t      var id3 = new _id2.default(data),\n\t          offset,\n\t          len;\n\t      if (id3.hasTimeStamp) {\n\t        // look for ADTS header (0xFFFx)\n\t        for (offset = id3.length, len = data.length; offset < len - 1; offset++) {\n\t          if (data[offset] === 0xff && (data[offset + 1] & 0xf0) === 0xf0) {\n\t            //logger.log('ADTS sync word found !');\n\t            return true;\n\t          }\n\t        }\n\t      }\n\t      return false;\n\t    }\n\t  }]);\n\t\n\t  return AACDemuxer;\n\t}();\n\t\n\texports.default = AACDemuxer;\n\t\n\t},{\"19\":19,\"24\":24,\"45\":45}],19:[function(_dereq_,module,exports){\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }(); /**\n\tparser helper\n\tn\t\n\t\n\tvar _logger = _dereq_(45);\n\t\n\tvar _errors = _dereq_(26);\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tvar ADTS = function () {\n\t  function ADTS() {\n\t    _classCallCheck(this, ADTS);\n\t  }\n\t\n\t  _createClass(ADTS, null, [{\n\t    key: 'getAudioConfig',\n\t    value: function getAudioConfig(observer, data, offset, audioCodec) {\n\t      var adtsObjectType,\n\t          // :int\n\t      adtsSampleingIndex,\n\t          // :int\n\t      adtsExtensionSampleingIndex,\n\t          // :int\n\t      adtsChanelConfig,\n\t          // :int\n\t      config,\n\t          userAgent = navigator.userAgent.toLowerCase(),\n\t          manifestCodec = audioCodec,\n\t          adtsSampleingRates = [96000, 88200, 64000, 48000, 44100, 32000, 24000, 22050, 16000, 12000, 11025, 8000, 7350];\n\t      // byte 2\n\t      adtsObjectType = ((data[offset + 2] & 0xC0) >>> 6) + 1;\n\t      adtsSampleingIndex = (data[offset + 2] & 0x3C) >>> 2;\n\t      if (adtsSampleingIndex > adtsSampleingRates.length - 1) {\n\t        observer.trigger(Event.ERROR, { type: _errors.ErrorTypes.MEDIA_ERROR, details: _errors.ErrorDetails.FRAG_PARSING_ERROR, fatal: true, reason: 'invalid ADTS sampling index:' + adtsSampleingIndex });\n\t        return;\n\t      }\n\t      adtsChanelConfig = (data[offset + 2] & 0x01) << 2;\n\t      // byte 3\n\t      adtsChanelConfig |= (data[offset + 3] & 0xC0) >>> 6;\n\t      _logger.logger.log('manifest codec:' + audioCodec + ',ADTS data:type:' + adtsObjectType + ',sampleingIndex:' + adtsSampleingIndex + '[' + adtsSampleingRates[adtsSampleingIndex] + 'Hz],channelConfig:' + adtsChanelConfig);\n\t      // firefox: freq less than 24kHz = AAC SBR (HE-AAC)\n\t      if (/firefox/i.test(userAgent)) {\n\t        if (adtsSampleingIndex >= 6) {\n\t          adtsObjectType = 5;\n\t          config = new Array(4);\n\t          // HE-AAC uses SBR (Spectral Band Replication) , high frequencies are constructed from low frequencies\n\t          // there is a factor 2 between frame sample rate and output sample rate\n\t          // multiply frequency by 2 (see table below, equivalent to substract 3)\n\t          adtsExtensionSampleingIndex = adtsSampleingIndex - 3;\n\t        } else {\n\t          adtsObjectType = 2;\n\t          config = new Array(2);\n\t          adtsExtensionSampleingIndex = adtsSampleingIndex;\n\t        }\n\t        // Android : always use AAC\n\t      } else if (userAgent.indexOf('android') !== -1) {\n\t        adtsObjectType = 2;\n\t        config = new Array(2);\n\t        adtsExtensionSampleingIndex = adtsSampleingIndex;\n\t      } else {\n\t        /*  for other browsers (Chrome/Vivaldi/Opera ...)\n\t            always force audio type to be HE-AAC SBR, as some browsers do not support audio codec switch properly (like Chrome ...)\n\t        */\n\t        adtsObjectType = 5;\n\t        config = new Array(4);\n\t        // if (manifest codec is HE-AAC or HE-AACv2) OR (manifest codec not specified AND frequency less than 24kHz)\n\t        if (audioCodec && (audioCodec.indexOf('mp4a.40.29') !== -1 || audioCodec.indexOf('mp4a.40.5') !== -1) || !audioCodec && adtsSampleingIndex >= 6) {\n\t          // HE-AAC uses SBR (Spectral Band Replication) , high frequencies are constructed from low frequencies\n\t          // there is a factor 2 between frame sample rate and output sample rate\n\t          // multiply frequency by 2 (see table below, equivalent to substract 3)\n\t          adtsExtensionSampleingIndex = adtsSampleingIndex - 3;\n\t        } else {\n\t          // if (manifest codec is AAC) AND (frequency less than 24kHz AND nb channel is 1) OR (manifest codec not specified and mono audio)\n\t          // Chrome fails to play back with low frequency AAC LC mono when initialized with HE-AAC.  This is not a problem with stereo.\n\t          if (audioCodec && audioCodec.indexOf('mp4a.40.2') !== -1 && adtsSampleingIndex >= 6 && adtsChanelConfig === 1 || !audioCodec && adtsChanelConfig === 1) {\n\t            adtsObjectType = 2;\n\t            config = new Array(2);\n\t          }\n\t          adtsExtensionSampleingIndex = adtsSampleingIndex;\n\t        }\n\t      }\n\t      /* refer to http://wiki.multimedia.cx/index.php?title=MPEG-4_Audio#Audio_Specific_Config\n\t          ISO 14496-3 (AAC).pdf - Table 1.13 — Syntax of AudioSpecificConfig()\n\t        Audio Profile / Audio Object Type\n\t        0: Null\n\t        1: AAC Main\n\t        2: AAC LC (Low Complexity)\n\t        3: AAC SSR (Scalable Sample Rate)\n\t        4: AAC LTP (Long Term Prediction)\n\t        5: SBR (Spectral Band Replication)\n\t        6: AAC Scalable\n\t       sampling freq\n\t        0: 96000 Hz\n\t        1: 88200 Hz\n\t        2: 64000 Hz\n\t        3: 48000 Hz\n\t        4: 44100 Hz\n\t        5: 32000 Hz\n\t        6: 24000 Hz\n\t        7: 22050 Hz\n\t        8: 16000 Hz\n\t        9: 12000 Hz\n\t        10: 11025 Hz\n\t        11: 8000 Hz\n\t        12: 7350 Hz\n\t        13: Reserved\n\t        14: Reserved\n\t        15: frequency is written explictly\n\t        Channel Configurations\n\t        These are the channel configurations:\n\t        0: Defined in AOT Specifc Config\n\t        1: 1 channel: front-center\n\t        2: 2 channels: front-left, front-right\n\t      */\n\t      // audioObjectType = profile => profile, the MPEG-4 Audio Object Type minus 1\n\t      config[0] = adtsObjectType << 3;\n\t      // samplingFrequencyIndex\n\t      config[0] |= (adtsSampleingIndex & 0x0E) >> 1;\n\t      config[1] |= (adtsSampleingIndex & 0x01) << 7;\n\t      // channelConfiguration\n\t      config[1] |= adtsChanelConfig << 3;\n\t      if (adtsObjectType === 5) {\n\t        // adtsExtensionSampleingIndex\n\t        config[1] |= (adtsExtensionSampleingIndex & 0x0E) >> 1;\n\t        config[2] = (adtsExtensionSampleingIndex & 0x01) << 7;\n\t        // adtsObjectType (force to 2, chrome is checking that object type is less than 5 ???\n\t        //    https://chromium.googlesource.com/chromium/src.git/+/master/media/formats/mp4/aac.cc\n\t        config[2] |= 2 << 2;\n\t        config[3] = 0;\n\t      }\n\t      return { config: config, samplerate: adtsSampleingRates[adtsSampleingIndex], channelCount: adtsChanelConfig, codec: 'mp4a.40.' + adtsObjectType, manifestCodec: manifestCodec };\n\t    }\n\t  }]);\n\t\n\t  return ADTS;\n\t}();\n\t\n\texports.default = ADTS;\n\t\n\t},{\"26\":26,\"45\":45}],20:[function(_dereq_,module,exports){\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }(); /*  inline demuxer.\n\t                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      *   probe fragments and instantiate appropriate demuxer depending on content type (TSDemuxer, AACDemuxer, ...)\n\tn\t\n\tvar _events = _dereq_(28);\n\t\n\tvar _events2 = _interopRequireDefault(_events);\n\t\n\tvar _errors = _dereq_(26);\n\t\n\tvar _decrypter = _dereq_(16);\n\t\n\tvar _decrypter2 = _interopRequireDefault(_decrypter);\n\t\n\tvar _aacdemuxer = _dereq_(18);\n\t\n\tvar _aacdemuxer2 = _interopRequireDefault(_aacdemuxer);\n\t\n\tvar _tsdemuxer = _dereq_(25);\n\t\n\tvar _tsdemuxer2 = _interopRequireDefault(_tsdemuxer);\n\t\n\tvar _mp4Remuxer = _dereq_(38);\n\t\n\tvar _mp4Remuxer2 = _interopRequireDefault(_mp4Remuxer);\n\t\n\tvar _passthroughRemuxer = _dereq_(39);\n\t\n\tvar _passthroughRemuxer2 = _interopRequireDefault(_passthroughRemuxer);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tvar DemuxerInline = function () {\n\t  function DemuxerInline(hls, id, typeSupported) {\n\t    var config = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : null;\n\t\n\t    _classCallCheck(this, DemuxerInline);\n\t\n\t    this.hls = hls;\n\t    this.id = id;\n\t    this.config = this.hls.config || config;\n\t    this.typeSupported = typeSupported;\n\t  }\n\t\n\t  _createClass(DemuxerInline, [{\n\t    key: 'destroy',\n\t    value: function destroy() {\n\t      var demuxer = this.demuxer;\n\t      if (demuxer) {\n\t        demuxer.destroy();\n\t      }\n\t    }\n\t  }, {\n\t    key: 'push',\n\t    value: function push(data, audioCodec, videoCodec, timeOffset, cc, level, sn, duration, decryptdata, accurateTimeOffset, defaultInitPTS) {\n\t      if (data.byteLength > 0 && decryptdata != null && decryptdata.key != null && decryptdata.method === 'AES-128') {\n\t        if (this.decrypter == null) {\n\t          this.decrypter = new _decrypter2.default(this.hls, this.config);\n\t        }\n\t        var localthis = this;\n\t        // performance.now() not available on WebWorker, at least on Safari Desktop\n\t        var startTime;\n\t        try {\n\t          startTime = performance.now();\n\t        } catch (error) {\n\t          startTime = Date.now();\n\t        }\n\t        this.decrypter.decrypt(data, decryptdata.key.buffer, decryptdata.iv.buffer, function (decryptedData) {\n\t          var endTime;\n\t          try {\n\t            endTime = performance.now();\n\t          } catch (error) {\n\t            endTime = Date.now();\n\t          }\n\t          localthis.hls.trigger(_events2.default.FRAG_DECRYPTED, { level: level, sn: sn, stats: { tstart: startTime, tdecrypt: endTime } });\n\t          localthis.pushDecrypted(new Uint8Array(decryptedData), audioCodec, videoCodec, timeOffset, cc, level, sn, duration, accurateTimeOffset, defaultInitPTS);\n\t        });\n\t      } else {\n\t        this.pushDecrypted(new Uint8Array(data), audioCodec, videoCodec, timeOffset, cc, level, sn, duration, accurateTimeOffset, defaultInitPTS);\n\t      }\n\t    }\n\t  }, {\n\t    key: 'pushDecrypted',\n\t    value: function pushDecrypted(data, audioCodec, videoCodec, timeOffset, cc, level, sn, duration, accurateTimeOffset, defaultInitPTS) {\n\t      var demuxer = this.demuxer;\n\t      if (!demuxer ||\n\t      // in case of continuity change, we might switch from content type (AAC container to TS container for example)\n\t      // so let's check that current demuxer is still valid\n\t      cc !== this.cc && !demuxer.probe(data)) {\n\t        var hls = this.hls,\n\t            id = this.id,\n\t            config = this.config,\n\t            typeSupported = this.typeSupported;\n\t        // probe for content type\n\t        if (_tsdemuxer2.default.probe(data)) {\n\t          if (this.typeSupported.mp2t === true) {\n\t            demuxer = new _tsdemuxer2.default(hls, id, _passthroughRemuxer2.default, config, typeSupported);\n\t          } else {\n\t            demuxer = new _tsdemuxer2.default(hls, id, _mp4Remuxer2.default, config, typeSupported);\n\t          }\n\t          demuxer.probe = _tsdemuxer2.default.probe;\n\t        } else if (_aacdemuxer2.default.probe(data)) {\n\t          demuxer = new _aacdemuxer2.default(hls, id, _mp4Remuxer2.default, config, typeSupported);\n\t          demuxer.probe = _aacdemuxer2.default.probe;\n\t        } else {\n\t          hls.trigger(_events2.default.ERROR, { type: _errors.ErrorTypes.MEDIA_ERROR, id: id, details: _errors.ErrorDetails.FRAG_PARSING_ERROR, fatal: true, reason: 'no demux matching with content found' });\n\t          return;\n\t        }\n\t        this.demuxer = demuxer;\n\t      }\n\t      demuxer.push(data, audioCodec, videoCodec, timeOffset, cc, level, sn, duration, accurateTimeOffset, defaultInitPTS);\n\t      this.cc = cc;\n\t    }\n\t  }]);\n\t\n\t  return DemuxerInline;\n\t}();\n\t\n\texports.default = DemuxerInline;\n\t\n\t},{\"16\":16,\"18\":18,\"25\":25,\"26\":26,\"28\":28,\"38\":38,\"39\":39}],21:[function(_dereq_,module,exports){\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _demuxerInline = _dereq_(20);\n\t\n\tvar _demuxerInline2 = _interopRequireDefault(_demuxerInline);\n\t\n\tvar _events = _dereq_(28);\n\t\n\tvar _events2 = _interopRequireDefault(_events);\n\t\n\tvar _logger = _dereq_(45);\n\t\n\tvar _events3 = _dereq_(1);\n\t\n\tvar _events4 = _interopRequireDefault(_events3);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\t/* demuxer web worker.\n\t *  - listen to worker message, and trigger DemuxerInline upon reception of Fragments.\n\t *  - provides MP4 Boxes back to main thread using [transferable objects](https://developers.google.com/web/updates/2011/12/Transferable-Objects-Lightning-Fast) in order to minimize message passing overhead.\n\t */\n\t\n\tvar DemuxerWorker = function DemuxerWorker(self) {\n\t  // observer setup\n\t  var observer = new _events4.default();\n\t  observer.trigger = function trigger(event) {\n\t    for (var _len = arguments.length, data = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n\t      data[_key - 1] = arguments[_key];\n\t    }\n\t\n\t    observer.emit.apply(observer, [event, event].concat(data));\n\t  };\n\t\n\t  observer.off = function off(event) {\n\t    for (var _len2 = arguments.length, data = Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {\n\t      data[_key2 - 1] = arguments[_key2];\n\t    }\n\t\n\t    observer.removeListener.apply(observer, [event].concat(data));\n\t  };\n\t\n\t  var forwardMessage = function forwardMessage(ev, data) {\n\t    self.postMessage({ event: ev, data: data });\n\t  };\n\t\n\t  self.addEventListener('message', function (ev) {\n\t    var data = ev.data;\n\t    //console.log('demuxer cmd:' + data.cmd);\n\t    switch (data.cmd) {\n\t      case 'init':\n\t        var config = JSON.parse(data.config);\n\t        self.demuxer = new _demuxerInline2.default(observer, data.id, data.typeSupported, config);\n\t        try {\n\t          (0, _logger.enableLogs)(config.debug === true);\n\t        } catch (err) {\n\t          console.warn('demuxerWorker: unable to enable logs');\n\t        }\n\t        // signal end of worker init\n\t        forwardMessage('init', null);\n\t        break;\n\t      case 'demux':\n\t        self.demuxer.push(data.data, data.audioCodec, data.videoCodec, data.timeOffset, data.cc, data.level, data.sn, data.duration, data.decryptdata, data.accurateTimeOffset, data.defaultInitPTS);\n\t        break;\n\t      default:\n\t        break;\n\t    }\n\t  });\n\t\n\t  // forward events to main thread\n\t  observer.on(_events2.default.FRAG_DECRYPTED, forwardMessage);\n\t  observer.on(_events2.default.FRAG_PARSING_INIT_SEGMENT, forwardMessage);\n\t  observer.on(_events2.default.FRAG_PARSED, forwardMessage);\n\t  observer.on(_events2.default.ERROR, forwardMessage);\n\t  observer.on(_events2.default.FRAG_PARSING_METADATA, forwardMessage);\n\t  observer.on(_events2.default.FRAG_PARSING_USERDATA, forwardMessage);\n\t  observer.on(_events2.default.INIT_PTS_FOUND, forwardMessage);\n\t\n\t  // special case for FRAG_PARSING_DATA: pass data1/data2 as transferable object (no copy)\n\t  observer.on(_events2.default.FRAG_PARSING_DATA, function (ev, data) {\n\t    var data1 = data.data1.buffer,\n\t        data2 = data.data2.buffer;\n\t    // remove data1 and data2 reference from data to avoid copying them ...\n\t    delete data.data1;\n\t    delete data.data2;\n\t    self.postMessage({ event: ev, data: data, data1: data1, data2: data2 }, [data1, data2]);\n\t  });\n\t};\n\t\n\texports.default = DemuxerWorker;\n\t\n\t},{\"1\":1,\"20\":20,\"28\":28,\"45\":45}],22:[function(_dereq_,module,exports){\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _events = _dereq_(28);\n\t\n\tvar _events2 = _interopRequireDefault(_events);\n\t\n\tvar _demuxerInline = _dereq_(20);\n\t\n\tvar _demuxerInline2 = _interopRequireDefault(_demuxerInline);\n\t\n\tvar _demuxerWorker = _dereq_(21);\n\t\n\tvar _demuxerWorker2 = _interopRequireDefault(_demuxerWorker);\n\t\n\tvar _logger = _dereq_(45);\n\t\n\tvar _errors = _dereq_(26);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tvar Demuxer = function () {\n\t  function Demuxer(hls, id) {\n\t    _classCallCheck(this, Demuxer);\n\t\n\t    this.hls = hls;\n\t    this.id = id;\n\t    var typeSupported = {\n\t      mp4: MediaSource.isTypeSupported('video/mp4'),\n\t      mp2t: hls.config.enableMP2TPassThrough && MediaSource.isTypeSupported('video/mp2t'),\n\t      mpeg: MediaSource.isTypeSupported('audio/mpeg'),\n\t      mp3: MediaSource.isTypeSupported('audio/mp4; codecs=\"mp3\"')\n\t    };\n\t    if (hls.config.enableWorker && typeof Worker !== 'undefined') {\n\t      _logger.logger.log('demuxing in webworker');\n\t      var w = void 0;\n\t      try {\n\t        var work = _dereq_(3);\n\t        w = this.w = work(_demuxerWorker2.default);\n\t        this.onwmsg = this.onWorkerMessage.bind(this);\n\t        w.addEventListener('message', this.onwmsg);\n\t        w.onerror = function (event) {\n\t          hls.trigger(_events2.default.ERROR, { type: _errors.ErrorTypes.OTHER_ERROR, details: _errors.ErrorDetails.INTERNAL_EXCEPTION, fatal: true, event: 'demuxerWorker', err: { message: event.message + ' (' + event.filename + ':' + event.lineno + ')' } });\n\t        };\n\t        w.postMessage({ cmd: 'init', typeSupported: typeSupported, id: id, config: JSON.stringify(hls.config) });\n\t      } catch (err) {\n\t        _logger.logger.error('error while initializing DemuxerWorker, fallback on DemuxerInline');\n\t        if (w) {\n\t          // revoke the Object URL that was used to create demuxer worker, so as not to leak it\n\t          URL.revokeObjectURL(w.objectURL);\n\t        }\n\t        this.demuxer = new _demuxerInline2.default(hls, id, typeSupported);\n\t        this.w = undefined;\n\t      }\n\t    } else {\n\t      this.demuxer = new _demuxerInline2.default(hls, id, typeSupported);\n\t    }\n\t    this.demuxInitialized = true;\n\t  }\n\t\n\t  _createClass(Demuxer, [{\n\t    key: 'destroy',\n\t    value: function destroy() {\n\t      var w = this.w;\n\t      if (w) {\n\t        w.removeEventListener('message', this.onwmsg);\n\t        w.terminate();\n\t        this.w = null;\n\t      } else {\n\t        var demuxer = this.demuxer;\n\t        if (demuxer) {\n\t          demuxer.destroy();\n\t          this.demuxer = null;\n\t        }\n\t      }\n\t    }\n\t  }, {\n\t    key: 'push',\n\t    value: function push(data, audioCodec, videoCodec, timeOffset, cc, level, sn, duration, decryptdata, accurateTimeOffset, defaultInitPTS) {\n\t      var w = this.w;\n\t      if (w) {\n\t        // post fragment payload as transferable objects (no copy)\n\t        w.postMessage({ cmd: 'demux', data: data, audioCodec: audioCodec, videoCodec: videoCodec, timeOffset: timeOffset, cc: cc, level: level, sn: sn, duration: duration, decryptdata: decryptdata, accurateTimeOffset: accurateTimeOffset, defaultInitPTS: defaultInitPTS }, [data]);\n\t      } else {\n\t        var demuxer = this.demuxer;\n\t        if (demuxer) {\n\t          demuxer.push(data, audioCodec, videoCodec, timeOffset, cc, level, sn, duration, decryptdata, accurateTimeOffset, defaultInitPTS);\n\t        }\n\t      }\n\t    }\n\t  }, {\n\t    key: 'onWorkerMessage',\n\t    value: function onWorkerMessage(ev) {\n\t      var data = ev.data,\n\t          hls = this.hls;\n\t      //console.log('onWorkerMessage:' + data.event);\n\t      switch (data.event) {\n\t        case 'init':\n\t          // revoke the Object URL that was used to create demuxer worker, so as not to leak it\n\t          URL.revokeObjectURL(this.w.objectURL);\n\t          break;\n\t        // special case for FRAG_PARSING_DATA: data1 and data2 are transferable objects\n\t        case _events2.default.FRAG_PARSING_DATA:\n\t          data.data.data1 = new Uint8Array(data.data1);\n\t          data.data.data2 = new Uint8Array(data.data2);\n\t        /* falls through */\n\t        default:\n\t          hls.trigger(data.event, data.data);\n\t          break;\n\t      }\n\t    }\n\t  }]);\n\t\n\t  return Demuxer;\n\t}();\n\t\n\texports.default = Demuxer;\n\t\n\t},{\"20\":20,\"21\":21,\"26\":26,\"28\":28,\"3\":3,\"45\":45}],23:[function(_dereq_,module,exports){\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }(); /**\n\t                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      * Parser for exponential Golomb codes, a variable-bitwidth number encoding scheme used by h264.\n\tn\t\n\tvar _logger = _dereq_(45);\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tvar ExpGolomb = function () {\n\t  function ExpGolomb(data) {\n\t    _classCallCheck(this, ExpGolomb);\n\t\n\t    this.data = data;\n\t    // the number of bytes left to examine in this.data\n\t    this.bytesAvailable = data.byteLength;\n\t    // the current word being examined\n\t    this.word = 0; // :uint\n\t    // the number of bits left to examine in the current word\n\t    this.bitsAvailable = 0; // :uint\n\t  }\n\t\n\t  // ():void\n\t\n\t\n\t  _createClass(ExpGolomb, [{\n\t    key: 'loadWord',\n\t    value: function loadWord() {\n\t      var data = this.data,\n\t          bytesAvailable = this.bytesAvailable,\n\t          position = data.byteLength - bytesAvailable,\n\t          workingBytes = new Uint8Array(4),\n\t          availableBytes = Math.min(4, bytesAvailable);\n\t      if (availableBytes === 0) {\n\t        throw new Error('no bytes available');\n\t      }\n\t      workingBytes.set(data.subarray(position, position + availableBytes));\n\t      this.word = new DataView(workingBytes.buffer).getUint32(0);\n\t      // track the amount of this.data that has been processed\n\t      this.bitsAvailable = availableBytes * 8;\n\t      this.bytesAvailable -= availableBytes;\n\t    }\n\t\n\t    // (count:int):void\n\t\n\t  }, {\n\t    key: 'skipBits',\n\t    value: function skipBits(count) {\n\t      var skipBytes; // :int\n\t      if (this.bitsAvailable > count) {\n\t        this.word <<= count;\n\t        this.bitsAvailable -= count;\n\t      } else {\n\t        count -= this.bitsAvailable;\n\t        skipBytes = count >> 3;\n\t        count -= skipBytes >> 3;\n\t        this.bytesAvailable -= skipBytes;\n\t        this.loadWord();\n\t        this.word <<= count;\n\t        this.bitsAvailable -= count;\n\t      }\n\t    }\n\t\n\t    // (size:int):uint\n\t\n\t  }, {\n\t    key: 'readBits',\n\t    value: function readBits(size) {\n\t      var bits = Math.min(this.bitsAvailable, size),\n\t          // :uint\n\t      valu = this.word >>> 32 - bits; // :uint\n\t      if (size > 32) {\n\t        _logger.logger.error('Cannot read more than 32 bits at a time');\n\t      }\n\t      this.bitsAvailable -= bits;\n\t      if (this.bitsAvailable > 0) {\n\t        this.word <<= bits;\n\t      } else if (this.bytesAvailable > 0) {\n\t        this.loadWord();\n\t      }\n\t      bits = size - bits;\n\t      if (bits > 0 && this.bitsAvailable) {\n\t        return valu << bits | this.readBits(bits);\n\t      } else {\n\t        return valu;\n\t      }\n\t    }\n\t\n\t    // ():uint\n\t\n\t  }, {\n\t    key: 'skipLZ',\n\t    value: function skipLZ() {\n\t      var leadingZeroCount; // :uint\n\t      for (leadingZeroCount = 0; leadingZeroCount < this.bitsAvailable; ++leadingZeroCount) {\n\t        if (0 !== (this.word & 0x80000000 >>> leadingZeroCount)) {\n\t          // the first bit of working word is 1\n\t          this.word <<= leadingZeroCount;\n\t          this.bitsAvailable -= leadingZeroCount;\n\t          return leadingZeroCount;\n\t        }\n\t      }\n\t      // we exhausted word and still have not found a 1\n\t      this.loadWord();\n\t      return leadingZeroCount + this.skipLZ();\n\t    }\n\t\n\t    // ():void\n\t\n\t  }, {\n\t    key: 'skipUEG',\n\t    value: function skipUEG() {\n\t      this.skipBits(1 + this.skipLZ());\n\t    }\n\t\n\t    // ():void\n\t\n\t  }, {\n\t    key: 'skipEG',\n\t    value: function skipEG() {\n\t      this.skipBits(1 + this.skipLZ());\n\t    }\n\t\n\t    // ():uint\n\t\n\t  }, {\n\t    key: 'readUEG',\n\t    value: function readUEG() {\n\t      var clz = this.skipLZ(); // :uint\n\t      return this.readBits(clz + 1) - 1;\n\t    }\n\t\n\t    // ():int\n\t\n\t  }, {\n\t    key: 'readEG',\n\t    value: function readEG() {\n\t      var valu = this.readUEG(); // :int\n\t      if (0x01 & valu) {\n\t        // the number is odd if the low order bit is set\n\t        return 1 + valu >>> 1; // add 1 to make it even, and divide by 2\n\t      } else {\n\t        return -1 * (valu >>> 1); // divide by two then make it negative\n\t      }\n\t    }\n\t\n\t    // Some convenience functions\n\t    // :Boolean\n\t\n\t  }, {\n\t    key: 'readBoolean',\n\t    value: function readBoolean() {\n\t      return 1 === this.readBits(1);\n\t    }\n\t\n\t    // ():int\n\t\n\t  }, {\n\t    key: 'readUByte',\n\t    value: function readUByte() {\n\t      return this.readBits(8);\n\t    }\n\t\n\t    // ():int\n\t\n\t  }, {\n\t    key: 'readUShort',\n\t    value: function readUShort() {\n\t      return this.readBits(16);\n\t    }\n\t    // ():int\n\t\n\t  }, {\n\t    key: 'readUInt',\n\t    value: function readUInt() {\n\t      return this.readBits(32);\n\t    }\n\t\n\t    /**\n\t     * Advance the ExpGolomb decoder past a scaling list. The scaling\n\t     * list is optionally transmitted as part of a sequence parameter\n\t     * set and is not relevant to transmuxing.\n\t     * @param count {number} the number of entries in this scaling list\n\t     * @see Recommendation ITU-T H.264, Section 7.3.2.1.1.1\n\t     */\n\t\n\t  }, {\n\t    key: 'skipScalingList',\n\t    value: function skipScalingList(count) {\n\t      var lastScale = 8,\n\t          nextScale = 8,\n\t          j,\n\t          deltaScale;\n\t      for (j = 0; j < count; j++) {\n\t        if (nextScale !== 0) {\n\t          deltaScale = this.readEG();\n\t          nextScale = (lastScale + deltaScale + 256) % 256;\n\t        }\n\t        lastScale = nextScale === 0 ? lastScale : nextScale;\n\t      }\n\t    }\n\t\n\t    /**\n\t     * Read a sequence parameter set and return some interesting video\n\t     * properties. A sequence parameter set is the H264 metadata that\n\t     * describes the properties of upcoming video frames.\n\t     * @param data {Uint8Array} the bytes of a sequence parameter set\n\t     * @return {object} an object with configuration parsed from the\n\t     * sequence parameter set, including the dimensions of the\n\t     * associated video frames.\n\t     */\n\t\n\t  }, {\n\t    key: 'readSPS',\n\t    value: function readSPS() {\n\t      var frameCropLeftOffset = 0,\n\t          frameCropRightOffset = 0,\n\t          frameCropTopOffset = 0,\n\t          frameCropBottomOffset = 0,\n\t          profileIdc,\n\t          profileCompat,\n\t          levelIdc,\n\t          numRefFramesInPicOrderCntCycle,\n\t          picWidthInMbsMinus1,\n\t          picHeightInMapUnitsMinus1,\n\t          frameMbsOnlyFlag,\n\t          scalingListCount,\n\t          i,\n\t          readUByte = this.readUByte.bind(this),\n\t          readBits = this.readBits.bind(this),\n\t          readUEG = this.readUEG.bind(this),\n\t          readBoolean = this.readBoolean.bind(this),\n\t          skipBits = this.skipBits.bind(this),\n\t          skipEG = this.skipEG.bind(this),\n\t          skipUEG = this.skipUEG.bind(this),\n\t          skipScalingList = this.skipScalingList.bind(this);\n\t\n\t      readUByte();\n\t      profileIdc = readUByte(); // profile_idc\n\t      profileCompat = readBits(5); // constraint_set[0-4]_flag, u(5)\n\t      skipBits(3); // reserved_zero_3bits u(3),\n\t      levelIdc = readUByte(); //level_idc u(8)\n\t      skipUEG(); // seq_parameter_set_id\n\t      // some profiles have more optional data we don't need\n\t      if (profileIdc === 100 || profileIdc === 110 || profileIdc === 122 || profileIdc === 244 || profileIdc === 44 || profileIdc === 83 || profileIdc === 86 || profileIdc === 118 || profileIdc === 128) {\n\t        var chromaFormatIdc = readUEG();\n\t        if (chromaFormatIdc === 3) {\n\t          skipBits(1); // separate_colour_plane_flag\n\t        }\n\t        skipUEG(); // bit_depth_luma_minus8\n\t        skipUEG(); // bit_depth_chroma_minus8\n\t        skipBits(1); // qpprime_y_zero_transform_bypass_flag\n\t        if (readBoolean()) {\n\t          // seq_scaling_matrix_present_flag\n\t          scalingListCount = chromaFormatIdc !== 3 ? 8 : 12;\n\t          for (i = 0; i < scalingListCount; i++) {\n\t            if (readBoolean()) {\n\t              // seq_scaling_list_present_flag[ i ]\n\t              if (i < 6) {\n\t                skipScalingList(16);\n\t              } else {\n\t                skipScalingList(64);\n\t              }\n\t            }\n\t          }\n\t        }\n\t      }\n\t      skipUEG(); // log2_max_frame_num_minus4\n\t      var picOrderCntType = readUEG();\n\t      if (picOrderCntType === 0) {\n\t        readUEG(); //log2_max_pic_order_cnt_lsb_minus4\n\t      } else if (picOrderCntType === 1) {\n\t        skipBits(1); // delta_pic_order_always_zero_flag\n\t        skipEG(); // offset_for_non_ref_pic\n\t        skipEG(); // offset_for_top_to_bottom_field\n\t        numRefFramesInPicOrderCntCycle = readUEG();\n\t        for (i = 0; i < numRefFramesInPicOrderCntCycle; i++) {\n\t          skipEG(); // offset_for_ref_frame[ i ]\n\t        }\n\t      }\n\t      skipUEG(); // max_num_ref_frames\n\t      skipBits(1); // gaps_in_frame_num_value_allowed_flag\n\t      picWidthInMbsMinus1 = readUEG();\n\t      picHeightInMapUnitsMinus1 = readUEG();\n\t      frameMbsOnlyFlag = readBits(1);\n\t      if (frameMbsOnlyFlag === 0) {\n\t        skipBits(1); // mb_adaptive_frame_field_flag\n\t      }\n\t      skipBits(1); // direct_8x8_inference_flag\n\t      if (readBoolean()) {\n\t        // frame_cropping_flag\n\t        frameCropLeftOffset = readUEG();\n\t        frameCropRightOffset = readUEG();\n\t        frameCropTopOffset = readUEG();\n\t        frameCropBottomOffset = readUEG();\n\t      }\n\t      var pixelRatio = [1, 1];\n\t      if (readBoolean()) {\n\t        // vui_parameters_present_flag\n\t        if (readBoolean()) {\n\t          // aspect_ratio_info_present_flag\n\t          var aspectRatioIdc = readUByte();\n\t          switch (aspectRatioIdc) {\n\t            case 1:\n\t              pixelRatio = [1, 1];break;\n\t            case 2:\n\t              pixelRatio = [12, 11];break;\n\t            case 3:\n\t              pixelRatio = [10, 11];break;\n\t            case 4:\n\t              pixelRatio = [16, 11];break;\n\t            case 5:\n\t              pixelRatio = [40, 33];break;\n\t            case 6:\n\t              pixelRatio = [24, 11];break;\n\t            case 7:\n\t              pixelRatio = [20, 11];break;\n\t            case 8:\n\t              pixelRatio = [32, 11];break;\n\t            case 9:\n\t              pixelRatio = [80, 33];break;\n\t            case 10:\n\t              pixelRatio = [18, 11];break;\n\t            case 11:\n\t              pixelRatio = [15, 11];break;\n\t            case 12:\n\t              pixelRatio = [64, 33];break;\n\t            case 13:\n\t              pixelRatio = [160, 99];break;\n\t            case 14:\n\t              pixelRatio = [4, 3];break;\n\t            case 15:\n\t              pixelRatio = [3, 2];break;\n\t            case 16:\n\t              pixelRatio = [2, 1];break;\n\t            case 255:\n\t              {\n\t                pixelRatio = [readUByte() << 8 | readUByte(), readUByte() << 8 | readUByte()];\n\t                break;\n\t              }\n\t          }\n\t        }\n\t      }\n\t      return {\n\t        width: Math.ceil((picWidthInMbsMinus1 + 1) * 16 - frameCropLeftOffset * 2 - frameCropRightOffset * 2),\n\t        height: (2 - frameMbsOnlyFlag) * (picHeightInMapUnitsMinus1 + 1) * 16 - (frameMbsOnlyFlag ? 2 : 4) * (frameCropTopOffset + frameCropBottomOffset),\n\t        pixelRatio: pixelRatio\n\t      };\n\t    }\n\t  }, {\n\t    key: 'readSliceType',\n\t    value: function readSliceType() {\n\t      // skip NALu type\n\t      this.readUByte();\n\t      // discard first_mb_in_slice\n\t      this.readUEG();\n\t      // return slice_type\n\t      return this.readUEG();\n\t    }\n\t  }]);\n\t\n\t  return ExpGolomb;\n\t}();\n\t\n\texports.default = ExpGolomb;\n\t\n\t},{\"45\":45}],24:[function(_dereq_,module,exports){\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }(); /**\n\tparser\n\tn\t\n\t\n\tvar _logger = _dereq_(45);\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\t//import Hex from '../utils/hex';\n\t\n\tvar ID3 = function () {\n\t  function ID3(data) {\n\t    _classCallCheck(this, ID3);\n\t\n\t    this._hasTimeStamp = false;\n\t    var offset = 0,\n\t        byte1,\n\t        byte2,\n\t        byte3,\n\t        byte4,\n\t        tagSize,\n\t        endPos,\n\t        header,\n\t        len;\n\t    do {\n\t      header = this.readUTF(data, offset, 3);\n\t      offset += 3;\n\t      // first check for ID3 header\n\t      if (header === 'ID3') {\n\t        // skip 24 bits\n\t        offset += 3;\n\t        // retrieve tag(s) length\n\t        byte1 = data[offset++] & 0x7f;\n\t        byte2 = data[offset++] & 0x7f;\n\t        byte3 = data[offset++] & 0x7f;\n\t        byte4 = data[offset++] & 0x7f;\n\t        tagSize = (byte1 << 21) + (byte2 << 14) + (byte3 << 7) + byte4;\n\t        endPos = offset + tagSize;\n\t        //logger.log(`ID3 tag found, size/end: ${tagSize}/${endPos}`);\n\t\n\t        // read ID3 tags\n\t        this._parseID3Frames(data, offset, endPos);\n\t        offset = endPos;\n\t      } else if (header === '3DI') {\n\t        // http://id3.org/id3v2.4.0-structure chapter 3.4.   ID3v2 footer\n\t        offset += 7;\n\t        _logger.logger.log('3DI footer found, end: ' + offset);\n\t      } else {\n\t        offset -= 3;\n\t        len = offset;\n\t        if (len) {\n\t          //logger.log(`ID3 len: ${len}`);\n\t          if (!this.hasTimeStamp) {\n\t            _logger.logger.warn('ID3 tag found, but no timestamp');\n\t          }\n\t          this._length = len;\n\t          this._payload = data.subarray(0, len);\n\t        }\n\t        return;\n\t      }\n\t    } while (true);\n\t  }\n\t\n\t  _createClass(ID3, [{\n\t    key: 'readUTF',\n\t    value: function readUTF(data, start, len) {\n\t\n\t      var result = '',\n\t          offset = start,\n\t          end = start + len;\n\t      do {\n\t        result += String.fromCharCode(data[offset++]);\n\t      } while (offset < end);\n\t      return result;\n\t    }\n\t  }, {\n\t    key: '_parseID3Frames',\n\t    value: function _parseID3Frames(data, offset, endPos) {\n\t      var tagId, tagLen, tagStart, tagFlags, timestamp;\n\t      while (offset + 8 <= endPos) {\n\t        tagId = this.readUTF(data, offset, 4);\n\t        offset += 4;\n\t\n\t        tagLen = data[offset++] << 24 + data[offset++] << 16 + data[offset++] << 8 + data[offset++];\n\t\n\t        tagFlags = data[offset++] << 8 + data[offset++];\n\t\n\t        tagStart = offset;\n\t        //logger.log(\"ID3 tag id:\" + tagId);\n\t        switch (tagId) {\n\t          case 'PRIV':\n\t            //logger.log('parse frame:' + Hex.hexDump(data.subarray(offset,endPos)));\n\t            // owner should be \"com.apple.streaming.transportStreamTimestamp\"\n\t            if (this.readUTF(data, offset, 44) === 'com.apple.streaming.transportStreamTimestamp') {\n\t              offset += 44;\n\t              // smelling even better ! we found the right descriptor\n\t              // skip null character (string end) + 3 first bytes\n\t              offset += 4;\n\t\n\t              // timestamp is 33 bit expressed as a big-endian eight-octet number, with the upper 31 bits set to zero.\n\t              var pts33Bit = data[offset++] & 0x1;\n\t              this._hasTimeStamp = true;\n\t\n\t              timestamp = ((data[offset++] << 23) + (data[offset++] << 15) + (data[offset++] << 7) + data[offset++]) / 45;\n\t\n\t              if (pts33Bit) {\n\t                timestamp += 47721858.84; // 2^32 / 90\n\t              }\n\t              timestamp = Math.round(timestamp);\n\t              _logger.logger.trace('ID3 timestamp found: ' + timestamp);\n\t              this._timeStamp = timestamp;\n\t            }\n\t            break;\n\t          default:\n\t            break;\n\t        }\n\t      }\n\t    }\n\t  }, {\n\t    key: 'hasTimeStamp',\n\t    get: function get() {\n\t      return this._hasTimeStamp;\n\t    }\n\t  }, {\n\t    key: 'timeStamp',\n\t    get: function get() {\n\t      return this._timeStamp;\n\t    }\n\t  }, {\n\t    key: 'length',\n\t    get: function get() {\n\t      return this._length;\n\t    }\n\t  }, {\n\t    key: 'payload',\n\t    get: function get() {\n\t      return this._payload;\n\t    }\n\t  }]);\n\t\n\t  return ID3;\n\t}();\n\t\n\texports.default = ID3;\n\t\n\t},{\"45\":45}],25:[function(_dereq_,module,exports){\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }(); /**\n\thighly optimized TS demuxer:\n\tparse PAT, PMT\n\textract PES packet from audio and video PIDs\n\textract AVC/H264 NAL units and AAC/ADTS samples from PES packet\n\ttrigger the remuxer upon parsing completion\n\tit also tries to workaround as best as it can audio codec switch (HE-AAC to AAC and vice versa), without having to restart the MediaSource.\n\tit also controls the remuxing process :\n\tupon discontinuity or level switch detection, it will also notifies the remuxer so that it can reset its state.\n\tn\t\n\t// import Hex from '../utils/hex';\n\t\n\t\n\tvar _adts = _dereq_(19);\n\t\n\tvar _adts2 = _interopRequireDefault(_adts);\n\t\n\tvar _events = _dereq_(28);\n\t\n\tvar _events2 = _interopRequireDefault(_events);\n\t\n\tvar _expGolomb = _dereq_(23);\n\t\n\tvar _expGolomb2 = _interopRequireDefault(_expGolomb);\n\t\n\tvar _logger = _dereq_(45);\n\t\n\tvar _errors = _dereq_(26);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tvar TSDemuxer = function () {\n\t  function TSDemuxer(observer, id, remuxerClass, config, typeSupported) {\n\t    _classCallCheck(this, TSDemuxer);\n\t\n\t    this.observer = observer;\n\t    this.id = id;\n\t    this.remuxerClass = remuxerClass;\n\t    this.config = config;\n\t    this.typeSupported = typeSupported;\n\t    this.lastCC = 0;\n\t    this.remuxer = new this.remuxerClass(observer, id, config, typeSupported);\n\t  }\n\t\n\t  _createClass(TSDemuxer, [{\n\t    key: 'switchLevel',\n\t    value: function switchLevel() {\n\t      this.pmtParsed = false;\n\t      this._pmtId = -1;\n\t      this._avcTrack = { container: 'video/mp2t', type: 'video', id: -1, sequenceNumber: 0, samples: [], len: 0, dropped: 0 };\n\t      this._audioTrack = { container: 'video/mp2t', type: 'audio', id: -1, sequenceNumber: 0, samples: [], len: 0, isAAC: true };\n\t      this._id3Track = { type: 'id3', id: -1, sequenceNumber: 0, samples: [], len: 0 };\n\t      this._txtTrack = { type: 'text', id: -1, sequenceNumber: 0, samples: [], len: 0 };\n\t      // flush any partial content\n\t      this.aacOverFlow = null;\n\t      this.aacLastPTS = null;\n\t      this.avcSample = null;\n\t      this.remuxer.switchLevel();\n\t    }\n\t  }, {\n\t    key: 'insertDiscontinuity',\n\t    value: function insertDiscontinuity() {\n\t      this.switchLevel();\n\t      this.remuxer.insertDiscontinuity();\n\t    }\n\t\n\t    // feed incoming data to the front of the parsing pipeline\n\t\n\t  }, {\n\t    key: 'push',\n\t    value: function push(data, audioCodec, videoCodec, timeOffset, cc, level, sn, duration, accurateTimeOffset, defaultInitPTS) {\n\t      var start,\n\t          len = data.length,\n\t          stt,\n\t          pid,\n\t          atf,\n\t          offset,\n\t          pes,\n\t          codecsOnly = this.remuxer.passthrough,\n\t          unknownPIDs = false;\n\t\n\t      this.audioCodec = audioCodec;\n\t      this.videoCodec = videoCodec;\n\t      this._duration = duration;\n\t      this.contiguous = false;\n\t      this.accurateTimeOffset = accurateTimeOffset;\n\t      if (cc !== this.lastCC) {\n\t        _logger.logger.log('discontinuity detected');\n\t        this.insertDiscontinuity();\n\t        this.lastCC = cc;\n\t      }\n\t      if (level !== this.lastLevel) {\n\t        _logger.logger.log('level switch detected');\n\t        this.switchLevel();\n\t        this.lastLevel = level;\n\t      } else if (sn === this.lastSN + 1) {\n\t        this.contiguous = true;\n\t      }\n\t      this.lastSN = sn;\n\t\n\t      var pmtParsed = this.pmtParsed,\n\t          avcTrack = this._avcTrack,\n\t          audioTrack = this._audioTrack,\n\t          id3Track = this._id3Track,\n\t          avcId = avcTrack.id,\n\t          audioId = audioTrack.id,\n\t          id3Id = id3Track.id,\n\t          pmtId = this._pmtId,\n\t          avcData = avcTrack.pesData,\n\t          audioData = audioTrack.pesData,\n\t          id3Data = id3Track.pesData,\n\t          parsePAT = this._parsePAT,\n\t          parsePMT = this._parsePMT,\n\t          parsePES = this._parsePES,\n\t          parseAVCPES = this._parseAVCPES.bind(this),\n\t          parseAACPES = this._parseAACPES.bind(this),\n\t          parseMPEGPES = this._parseMPEGPES.bind(this),\n\t          parseID3PES = this._parseID3PES.bind(this);\n\t\n\t      // don't parse last TS packet if incomplete\n\t      len -= len % 188;\n\t      // loop through TS packets\n\t      for (start = 0; start < len; start += 188) {\n\t        if (data[start] === 0x47) {\n\t          stt = !!(data[start + 1] & 0x40);\n\t          // pid is a 13-bit field starting at the last bit of TS[1]\n\t          pid = ((data[start + 1] & 0x1f) << 8) + data[start + 2];\n\t          atf = (data[start + 3] & 0x30) >> 4;\n\t          // if an adaption field is present, its length is specified by the fifth byte of the TS packet header.\n\t          if (atf > 1) {\n\t            offset = start + 5 + data[start + 4];\n\t            // continue if there is only adaptation field\n\t            if (offset === start + 188) {\n\t              continue;\n\t            }\n\t          } else {\n\t            offset = start + 4;\n\t          }\n\t          switch (pid) {\n\t            case avcId:\n\t              if (stt) {\n\t                if (avcData && (pes = parsePES(avcData))) {\n\t                  parseAVCPES(pes, false);\n\t                  if (codecsOnly) {\n\t                    // if we have video codec info AND\n\t                    // if audio PID is undefined OR if we have audio codec info,\n\t                    // we have all codec info !\n\t                    if (avcTrack.codec && (audioId === -1 || audioTrack.codec)) {\n\t                      this.remux(level, sn, cc, data, timeOffset);\n\t                      return;\n\t                    }\n\t                  }\n\t                }\n\t                avcData = { data: [], size: 0 };\n\t              }\n\t              if (avcData) {\n\t                avcData.data.push(data.subarray(offset, start + 188));\n\t                avcData.size += start + 188 - offset;\n\t              }\n\t              break;\n\t            case audioId:\n\t              if (stt) {\n\t                if (audioData && (pes = parsePES(audioData))) {\n\t                  if (audioTrack.isAAC) {\n\t                    parseAACPES(pes);\n\t                  } else {\n\t                    parseMPEGPES(pes);\n\t                  }\n\t                  if (codecsOnly) {\n\t                    // here we now that we have audio codec info\n\t                    // if video PID is undefined OR if we have video codec info,\n\t                    // we have all codec infos !\n\t                    if (audioTrack.codec && (avcId === -1 || avcTrack.codec)) {\n\t                      this.remux(level, sn, cc, data, timeOffset);\n\t                      return;\n\t                    }\n\t                  }\n\t                }\n\t                audioData = { data: [], size: 0 };\n\t              }\n\t              if (audioData) {\n\t                audioData.data.push(data.subarray(offset, start + 188));\n\t                audioData.size += start + 188 - offset;\n\t              }\n\t              break;\n\t            case id3Id:\n\t              if (stt) {\n\t                if (id3Data && (pes = parsePES(id3Data))) {\n\t                  parseID3PES(pes);\n\t                }\n\t                id3Data = { data: [], size: 0 };\n\t              }\n\t              if (id3Data) {\n\t                id3Data.data.push(data.subarray(offset, start + 188));\n\t                id3Data.size += start + 188 - offset;\n\t              }\n\t              break;\n\t            case 0:\n\t              if (stt) {\n\t                offset += data[offset] + 1;\n\t              }\n\t              pmtId = this._pmtId = parsePAT(data, offset);\n\t              break;\n\t            case pmtId:\n\t              if (stt) {\n\t                offset += data[offset] + 1;\n\t              }\n\t              var parsedPIDs = parsePMT(data, offset, this.typeSupported.mpeg === true || this.typeSupported.mp3 === true);\n\t\n\t              // only update track id if track PID found while parsing PMT\n\t              // this is to avoid resetting the PID to -1 in case\n\t              // track PID transiently disappears from the stream\n\t              // this could happen in case of transient missing audio samples for example\n\t              avcId = parsedPIDs.avc;\n\t              if (avcId > 0) {\n\t                avcTrack.id = avcId;\n\t              }\n\t              audioId = parsedPIDs.audio;\n\t              if (audioId > 0) {\n\t                audioTrack.id = audioId;\n\t                audioTrack.isAAC = parsedPIDs.isAAC;\n\t              }\n\t              id3Id = parsedPIDs.id3;\n\t              if (id3Id > 0) {\n\t                id3Track.id = id3Id;\n\t              }\n\t              if (unknownPIDs && !pmtParsed) {\n\t                _logger.logger.log('reparse from beginning');\n\t                unknownPIDs = false;\n\t                // we set it to -188, the += 188 in the for loop will reset start to 0\n\t                start = -188;\n\t              }\n\t              pmtParsed = this.pmtParsed = true;\n\t              break;\n\t            case 17:\n\t            case 0x1fff:\n\t              break;\n\t            default:\n\t              unknownPIDs = true;\n\t              break;\n\t          }\n\t        } else {\n\t          this.observer.trigger(_events2.default.ERROR, { type: _errors.ErrorTypes.MEDIA_ERROR, id: this.id, details: _errors.ErrorDetails.FRAG_PARSING_ERROR, fatal: false, reason: 'TS packet did not start with 0x47' });\n\t        }\n\t      }\n\t      // try to parse last PES packets\n\t      if (avcData && (pes = parsePES(avcData))) {\n\t        parseAVCPES(pes, true);\n\t        avcTrack.pesData = null;\n\t      } else {\n\t        // either avcData null or PES truncated, keep it for next frag parsing\n\t        avcTrack.pesData = avcData;\n\t      }\n\t\n\t      if (audioData && (pes = parsePES(audioData))) {\n\t        if (audioTrack.isAAC) {\n\t          parseAACPES(pes);\n\t        } else {\n\t          parseMPEGPES(pes);\n\t        }\n\t        audioTrack.pesData = null;\n\t      } else {\n\t        if (audioData && audioData.size) {\n\t          _logger.logger.log('last AAC PES packet truncated,might overlap between fragments');\n\t        }\n\t        // either audioData null or PES truncated, keep it for next frag parsing\n\t        audioTrack.pesData = audioData;\n\t      }\n\t\n\t      if (id3Data && (pes = parsePES(id3Data))) {\n\t        parseID3PES(pes);\n\t        id3Track.pesData = null;\n\t      } else {\n\t        // either id3Data null or PES truncated, keep it for next frag parsing\n\t        id3Track.pesData = id3Data;\n\t      }\n\t      this.remux(level, sn, cc, null, timeOffset, defaultInitPTS);\n\t    }\n\t  }, {\n\t    key: 'remux',\n\t    value: function remux(level, sn, cc, data, timeOffset, defaultInitPTS) {\n\t      var avcTrack = this._avcTrack,\n\t          samples = avcTrack.samples,\n\t          nbNalu = 0,\n\t          naluLen = 0;\n\t\n\t      // compute total/avc sample length and nb of NAL units\n\t      for (var i = 0; i < samples.length; i++) {\n\t        var sample = samples[i],\n\t            units = sample.units.units,\n\t            nbUnits = units.length,\n\t            sampleLen = 0;\n\t        for (var j = 0; j < nbUnits; j++) {\n\t          sampleLen += units[j].data.length;\n\t        }\n\t        naluLen += sampleLen;\n\t        nbNalu += nbUnits;\n\t        sample.length = sampleLen;\n\t      }\n\t      avcTrack.len = naluLen;\n\t      avcTrack.nbNalu = nbNalu;\n\t      this.remuxer.remux(level, sn, cc, this._audioTrack, this._avcTrack, this._id3Track, this._txtTrack, timeOffset, this.contiguous, this.accurateTimeOffset, defaultInitPTS, data);\n\t    }\n\t  }, {\n\t    key: 'destroy',\n\t    value: function destroy() {\n\t      this.switchLevel();\n\t      this._initPTS = this._initDTS = undefined;\n\t      this._duration = 0;\n\t    }\n\t  }, {\n\t    key: '_parsePAT',\n\t    value: function _parsePAT(data, offset) {\n\t      // skip the PSI header and parse the first PMT entry\n\t      return (data[offset + 10] & 0x1F) << 8 | data[offset + 11];\n\t      //logger.log('PMT PID:'  + this._pmtId);\n\t    }\n\t  }, {\n\t    key: '_parsePMT',\n\t    value: function _parsePMT(data, offset, mpegSupported) {\n\t      var sectionLength,\n\t          tableEnd,\n\t          programInfoLength,\n\t          pid,\n\t          result = { audio: -1, avc: -1, id3: -1, isAAC: true };\n\t      sectionLength = (data[offset + 1] & 0x0f) << 8 | data[offset + 2];\n\t      tableEnd = offset + 3 + sectionLength - 4;\n\t      // to determine where the table is, we have to figure out how\n\t      // long the program info descriptors are\n\t      programInfoLength = (data[offset + 10] & 0x0f) << 8 | data[offset + 11];\n\t      // advance the offset to the first entry in the mapping table\n\t      offset += 12 + programInfoLength;\n\t      while (offset < tableEnd) {\n\t        pid = (data[offset + 1] & 0x1F) << 8 | data[offset + 2];\n\t        switch (data[offset]) {\n\t          // ISO/IEC 13818-7 ADTS AAC (MPEG-2 lower bit-rate audio)\n\t          case 0x0f:\n\t            //logger.log('AAC PID:'  + pid);\n\t            if (result.audio === -1) {\n\t              result.audio = pid;\n\t            }\n\t            break;\n\t          // Packetized metadata (ID3)\n\t          case 0x15:\n\t            //logger.log('ID3 PID:'  + pid);\n\t            if (result.id3 === -1) {\n\t              result.id3 = pid;\n\t            }\n\t            break;\n\t          // ITU-T Rec. H.264 and ISO/IEC 14496-10 (lower bit-rate video)\n\t          case 0x1b:\n\t            //logger.log('AVC PID:'  + pid);\n\t            if (result.avc === -1) {\n\t              result.avc = pid;\n\t            }\n\t            break;\n\t          // ISO/IEC 11172-3 (MPEG-1 audio)\n\t          // or ISO/IEC 13818-3 (MPEG-2 halved sample rate audio)\n\t          case 0x03:\n\t          case 0x04:\n\t            //logger.log('MPEG PID:'  + pid);\n\t            if (!mpegSupported) {\n\t              _logger.logger.log('MPEG audio found, not supported in this browser for now');\n\t            } else if (result.audio === -1) {\n\t              result.audio = pid;\n\t              result.isAAC = false;\n\t            }\n\t            break;\n\t          case 0x24:\n\t            _logger.logger.warn('HEVC stream type found, not supported for now');\n\t            break;\n\t          default:\n\t            _logger.logger.log('unkown stream type:' + data[offset]);\n\t            break;\n\t        }\n\t        // move to the next table entry\n\t        // skip past the elementary stream descriptors, if present\n\t        offset += ((data[offset + 3] & 0x0F) << 8 | data[offset + 4]) + 5;\n\t      }\n\t      return result;\n\t    }\n\t  }, {\n\t    key: '_parsePES',\n\t    value: function _parsePES(stream) {\n\t      var i = 0,\n\t          frag,\n\t          pesFlags,\n\t          pesPrefix,\n\t          pesLen,\n\t          pesHdrLen,\n\t          pesData,\n\t          pesPts,\n\t          pesDts,\n\t          payloadStartOffset,\n\t          data = stream.data;\n\t      // safety check\n\t      if (!stream || stream.size === 0) {\n\t        return null;\n\t      }\n\t\n\t      // we might need up to 19 bytes to read PES header\n\t      // if first chunk of data is less than 19 bytes, let's merge it with following ones until we get 19 bytes\n\t      // usually only one merge is needed (and this is rare ...)\n\t      while (data[0].length < 19 && data.length > 1) {\n\t        var newData = new Uint8Array(data[0].length + data[1].length);\n\t        newData.set(data[0]);\n\t        newData.set(data[1], data[0].length);\n\t        data[0] = newData;\n\t        data.splice(1, 1);\n\t      }\n\t      //retrieve PTS/DTS from first fragment\n\t      frag = data[0];\n\t      pesPrefix = (frag[0] << 16) + (frag[1] << 8) + frag[2];\n\t      if (pesPrefix === 1) {\n\t        pesLen = (frag[4] << 8) + frag[5];\n\t        // if PES parsed length is not zero and greater than total received length, stop parsing. PES might be truncated\n\t        // minus 6 : PES header size\n\t        if (pesLen && pesLen > stream.size - 6) {\n\t          return null;\n\t        }\n\t        pesFlags = frag[7];\n\t        if (pesFlags & 0xC0) {\n\t          /* PES header described here : http://dvd.sourceforge.net/dvdinfo/pes-hdr.html\n\t              as PTS / DTS is 33 bit we cannot use bitwise operator in JS,\n\t              as Bitwise operators treat their operands as a sequence of 32 bits */\n\t          pesPts = (frag[9] & 0x0E) * 536870912 + // 1 << 29\n\t          (frag[10] & 0xFF) * 4194304 + // 1 << 22\n\t          (frag[11] & 0xFE) * 16384 + // 1 << 14\n\t          (frag[12] & 0xFF) * 128 + // 1 << 7\n\t          (frag[13] & 0xFE) / 2;\n\t          // check if greater than 2^32 -1\n\t          if (pesPts > 4294967295) {\n\t            // decrement 2^33\n\t            pesPts -= 8589934592;\n\t          }\n\t          if (pesFlags & 0x40) {\n\t            pesDts = (frag[14] & 0x0E) * 536870912 + // 1 << 29\n\t            (frag[15] & 0xFF) * 4194304 + // 1 << 22\n\t            (frag[16] & 0xFE) * 16384 + // 1 << 14\n\t            (frag[17] & 0xFF) * 128 + // 1 << 7\n\t            (frag[18] & 0xFE) / 2;\n\t            // check if greater than 2^32 -1\n\t            if (pesDts > 4294967295) {\n\t              // decrement 2^33\n\t              pesDts -= 8589934592;\n\t            }\n\t            if (pesPts - pesDts > 60 * 90000) {\n\t              _logger.logger.warn(Math.round((pesPts - pesDts) / 90000) + 's delta between PTS and DTS, align them');\n\t              pesPts = pesDts;\n\t            }\n\t          } else {\n\t            pesDts = pesPts;\n\t          }\n\t        }\n\t        pesHdrLen = frag[8];\n\t        // 9 bytes : 6 bytes for PES header + 3 bytes for PES extension\n\t        payloadStartOffset = pesHdrLen + 9;\n\t\n\t        stream.size -= payloadStartOffset;\n\t        //reassemble PES packet\n\t        pesData = new Uint8Array(stream.size);\n\t        for (var j = 0, dataLen = data.length; j < dataLen; j++) {\n\t          frag = data[j];\n\t          var len = frag.byteLength;\n\t          if (payloadStartOffset) {\n\t            if (payloadStartOffset > len) {\n\t              // trim full frag if PES header bigger than frag\n\t              payloadStartOffset -= len;\n\t              continue;\n\t            } else {\n\t              // trim partial frag if PES header smaller than frag\n\t              frag = frag.subarray(payloadStartOffset);\n\t              len -= payloadStartOffset;\n\t              payloadStartOffset = 0;\n\t            }\n\t          }\n\t          pesData.set(frag, i);\n\t          i += len;\n\t        }\n\t        if (pesLen) {\n\t          // payload size : remove PES header + PES extension\n\t          pesLen -= pesHdrLen + 3;\n\t        }\n\t        return { data: pesData, pts: pesPts, dts: pesDts, len: pesLen };\n\t      } else {\n\t        return null;\n\t      }\n\t    }\n\t  }, {\n\t    key: 'pushAccesUnit',\n\t    value: function pushAccesUnit(avcSample, avcTrack) {\n\t      if (avcSample.units.units.length && avcSample.frame) {\n\t        // only push AVC sample if starting with a keyframe is not mandatory OR\n\t        //    if keyframe already found in this fragment OR\n\t        //       keyframe found in last fragment (track.sps) AND\n\t        //          samples already appended (we already found a keyframe in this fragment) OR fragment is contiguous\n\t        if (!this.config.forceKeyFrameOnDiscontinuity || avcSample.key === true || avcTrack.sps && (avcTrack.samples.length || this.contiguous)) {\n\t          avcTrack.samples.push(avcSample);\n\t        } else {\n\t          // dropped samples, track it\n\t          avcTrack.dropped++;\n\t        }\n\t      }\n\t      if (avcSample.debug.length) {\n\t        _logger.logger.log(avcSample.pts + '/' + avcSample.dts + ':' + avcSample.debug + ',' + avcSample.units.length);\n\t      }\n\t    }\n\t  }, {\n\t    key: '_parseAVCPES',\n\t    value: function _parseAVCPES(pes, last) {\n\t      var _this = this;\n\t\n\t      //logger.log('parse new PES');\n\t      var track = this._avcTrack,\n\t          units = this._parseAVCNALu(pes.data),\n\t          debug = false,\n\t          expGolombDecoder,\n\t          avcSample = this.avcSample,\n\t          push,\n\t          i;\n\t      //free pes.data to save up some memory\n\t      pes.data = null;\n\t\n\t      units.forEach(function (unit) {\n\t        switch (unit.type) {\n\t          //NDR\n\t          case 1:\n\t            push = true;\n\t            if (debug && avcSample) {\n\t              avcSample.debug += 'NDR ';\n\t            }\n\t            avcSample.frame = true;\n\t            // retrieve slice type by parsing beginning of NAL unit (follow H264 spec, slice_header definition) to detect keyframe embedded in NDR\n\t            var data = unit.data;\n\t            if (data.length > 4) {\n\t              var sliceType = new _expGolomb2.default(data).readSliceType();\n\t              // 2 : I slice, 4 : SI slice, 7 : I slice, 9: SI slice\n\t              // SI slice : A slice that is coded using intra prediction only and using quantisation of the prediction samples.\n\t              // An SI slice can be coded such that its decoded samples can be constructed identically to an SP slice.\n\t              // I slice: A slice that is not an SI slice that is decoded using intra prediction only.\n\t              //if (sliceType === 2 || sliceType === 7) {\n\t              if (sliceType === 2 || sliceType === 4 || sliceType === 7 || sliceType === 9) {\n\t                avcSample.key = true;\n\t              }\n\t            }\n\t            break;\n\t          //IDR\n\t          case 5:\n\t            push = true;\n\t            // handle PES not starting with AUD\n\t            if (!avcSample) {\n\t              avcSample = _this.avcSample = _this._createAVCSample(true, pes.pts, pes.dts, '');\n\t            }\n\t            if (debug) {\n\t              avcSample.debug += 'IDR ';\n\t            }\n\t            avcSample.key = true;\n\t            avcSample.frame = true;\n\t            break;\n\t          //SEI\n\t          case 6:\n\t            push = true;\n\t            if (debug && avcSample) {\n\t              avcSample.debug += 'SEI ';\n\t            }\n\t            expGolombDecoder = new _expGolomb2.default(_this.discardEPB(unit.data));\n\t\n\t            // skip frameType\n\t            expGolombDecoder.readUByte();\n\t\n\t            var payloadType = 0;\n\t            var payloadSize = 0;\n\t            var endOfCaptions = false;\n\t            var b = 0;\n\t\n\t            while (!endOfCaptions && expGolombDecoder.bytesAvailable > 1) {\n\t              payloadType = 0;\n\t              do {\n\t                b = expGolombDecoder.readUByte();\n\t                payloadType += b;\n\t              } while (b === 0xFF);\n\t\n\t              // Parse payload size.\n\t              payloadSize = 0;\n\t              do {\n\t                b = expGolombDecoder.readUByte();\n\t                payloadSize += b;\n\t              } while (b === 0xFF);\n\t\n\t              // TODO: there can be more than one payload in an SEI packet...\n\t              // TODO: need to read type and size in a while loop to get them all\n\t              if (payloadType === 4 && expGolombDecoder.bytesAvailable !== 0) {\n\t\n\t                endOfCaptions = true;\n\t\n\t                var countryCode = expGolombDecoder.readUByte();\n\t\n\t                if (countryCode === 181) {\n\t                  var providerCode = expGolombDecoder.readUShort();\n\t\n\t                  if (providerCode === 49) {\n\t                    var userStructure = expGolombDecoder.readUInt();\n\t\n\t                    if (userStructure === 0x47413934) {\n\t                      var userDataType = expGolombDecoder.readUByte();\n\t\n\t                      // Raw CEA-608 bytes wrapped in CEA-708 packet\n\t                      if (userDataType === 3) {\n\t                        var firstByte = expGolombDecoder.readUByte();\n\t                        var secondByte = expGolombDecoder.readUByte();\n\t\n\t                        var totalCCs = 31 & firstByte;\n\t                        var byteArray = [firstByte, secondByte];\n\t\n\t                        for (i = 0; i < totalCCs; i++) {\n\t                          // 3 bytes per CC\n\t                          byteArray.push(expGolombDecoder.readUByte());\n\t                          byteArray.push(expGolombDecoder.readUByte());\n\t                          byteArray.push(expGolombDecoder.readUByte());\n\t                        }\n\t\n\t                        _this._insertSampleInOrder(_this._txtTrack.samples, { type: 3, pts: pes.pts, bytes: byteArray });\n\t                      }\n\t                    }\n\t                  }\n\t                }\n\t              } else if (payloadSize < expGolombDecoder.bytesAvailable) {\n\t                for (i = 0; i < payloadSize; i++) {\n\t                  expGolombDecoder.readUByte();\n\t                }\n\t              }\n\t            }\n\t            break;\n\t          //SPS\n\t          case 7:\n\t            push = true;\n\t            if (debug && avcSample) {\n\t              avcSample.debug += 'SPS ';\n\t            }\n\t            if (!track.sps) {\n\t              expGolombDecoder = new _expGolomb2.default(unit.data);\n\t              var config = expGolombDecoder.readSPS();\n\t              track.width = config.width;\n\t              track.height = config.height;\n\t              track.pixelRatio = config.pixelRatio;\n\t              track.sps = [unit.data];\n\t              track.duration = _this._duration;\n\t              var codecarray = unit.data.subarray(1, 4);\n\t              var codecstring = 'avc1.';\n\t              for (i = 0; i < 3; i++) {\n\t                var h = codecarray[i].toString(16);\n\t                if (h.length < 2) {\n\t                  h = '0' + h;\n\t                }\n\t                codecstring += h;\n\t              }\n\t              track.codec = codecstring;\n\t            }\n\t            break;\n\t          //PPS\n\t          case 8:\n\t            push = true;\n\t            if (debug && avcSample) {\n\t              avcSample.debug += 'PPS ';\n\t            }\n\t            if (!track.pps) {\n\t              track.pps = [unit.data];\n\t            }\n\t            break;\n\t          // AUD\n\t          case 9:\n\t            push = false;\n\t            if (avcSample) {\n\t              _this.pushAccesUnit(avcSample, track);\n\t            }\n\t            avcSample = _this.avcSample = _this._createAVCSample(false, pes.pts, pes.dts, debug ? 'AUD ' : '');\n\t            break;\n\t          // Filler Data\n\t          case 12:\n\t            push = false;\n\t            break;\n\t          default:\n\t            push = false;\n\t            if (avcSample) {\n\t              avcSample.debug += 'unknown NAL ' + unit.type + ' ';\n\t            }\n\t            break;\n\t        }\n\t        if (avcSample && push) {\n\t          var _units = avcSample.units;\n\t          _units.units.push(unit);\n\t        }\n\t      });\n\t      // if last PES packet, push samples\n\t      if (last && avcSample) {\n\t        this.pushAccesUnit(avcSample, track);\n\t        this.avcSample = null;\n\t      }\n\t    }\n\t  }, {\n\t    key: '_createAVCSample',\n\t    value: function _createAVCSample(key, pts, dts, debug) {\n\t      return { key: key, pts: pts, dts: dts, units: { units: [], length: 0 }, debug: debug };\n\t    }\n\t  }, {\n\t    key: '_insertSampleInOrder',\n\t    value: function _insertSampleInOrder(arr, data) {\n\t      var len = arr.length;\n\t      if (len > 0) {\n\t        if (data.pts >= arr[len - 1].pts) {\n\t          arr.push(data);\n\t        } else {\n\t          for (var pos = len - 1; pos >= 0; pos--) {\n\t            if (data.pts < arr[pos].pts) {\n\t              arr.splice(pos, 0, data);\n\t              break;\n\t            }\n\t          }\n\t        }\n\t      } else {\n\t        arr.push(data);\n\t      }\n\t    }\n\t  }, {\n\t    key: '_getLastNalUnit',\n\t    value: function _getLastNalUnit() {\n\t      var avcSample = this.avcSample,\n\t          lastUnit = void 0;\n\t      // try to fallback to previous sample if current one is empty\n\t      if (!avcSample || avcSample.units.units.length === 0) {\n\t        var track = this._avcTrack,\n\t            samples = track.samples;\n\t        avcSample = samples[samples.length - 1];\n\t      }\n\t      if (avcSample) {\n\t        var units = avcSample.units.units;\n\t        lastUnit = units[units.length - 1];\n\t      }\n\t      return lastUnit;\n\t    }\n\t  }, {\n\t    key: '_parseAVCNALu',\n\t    value: function _parseAVCNALu(array) {\n\t      var i = 0,\n\t          len = array.byteLength,\n\t          value,\n\t          overflow,\n\t          track = this._avcTrack,\n\t          state = track.naluState || 0,\n\t          lastState = state;\n\t      var units = [],\n\t          unit,\n\t          unitType,\n\t          lastUnitStart = -1,\n\t          lastUnitType;\n\t      //logger.log('PES:' + Hex.hexDump(array));\n\t\n\t      if (state === -1) {\n\t        // special use case where we found 3 or 4-byte start codes exactly at the end of previous PES packet\n\t        lastUnitStart = 0;\n\t        // NALu type is value read from offset 0\n\t        lastUnitType = array[0] & 0x1f;\n\t        state = 0;\n\t        i = 1;\n\t      }\n\t\n\t      while (i < len) {\n\t        value = array[i++];\n\t        // optimization. state 0 and 1 are the predominant case. let's handle them outside of the switch/case\n\t        if (!state) {\n\t          state = value ? 0 : 1;\n\t          continue;\n\t        }\n\t        if (state === 1) {\n\t          state = value ? 0 : 2;\n\t          continue;\n\t        }\n\t        // here we have state either equal to 2 or 3\n\t        if (!value) {\n\t          state = 3;\n\t        } else if (value === 1) {\n\t          if (lastUnitStart >= 0) {\n\t            unit = { data: array.subarray(lastUnitStart, i - state - 1), type: lastUnitType };\n\t            //logger.log('pushing NALU, type/size:' + unit.type + '/' + unit.data.byteLength);\n\t            units.push(unit);\n\t          } else {\n\t            // lastUnitStart is undefined => this is the first start code found in this PES packet\n\t            // first check if start code delimiter is overlapping between 2 PES packets,\n\t            // ie it started in last packet (lastState not zero)\n\t            // and ended at the beginning of this PES packet (i <= 4 - lastState)\n\t            var lastUnit = this._getLastNalUnit();\n\t            if (lastUnit) {\n\t              if (lastState && i <= 4 - lastState) {\n\t                // start delimiter overlapping between PES packets\n\t                // strip start delimiter bytes from the end of last NAL unit\n\t                // check if lastUnit had a state different from zero\n\t                if (lastUnit.state) {\n\t                  // strip last bytes\n\t                  lastUnit.data = lastUnit.data.subarray(0, lastUnit.data.byteLength - lastState);\n\t                }\n\t              }\n\t              // If NAL units are not starting right at the beginning of the PES packet, push preceding data into previous NAL unit.\n\t              overflow = i - state - 1;\n\t              if (overflow > 0) {\n\t                //logger.log('first NALU found with overflow:' + overflow);\n\t                var tmp = new Uint8Array(lastUnit.data.byteLength + overflow);\n\t                tmp.set(lastUnit.data, 0);\n\t                tmp.set(array.subarray(0, overflow), lastUnit.data.byteLength);\n\t                lastUnit.data = tmp;\n\t              }\n\t            }\n\t          }\n\t          // check if we can read unit type\n\t          if (i < len) {\n\t            unitType = array[i] & 0x1f;\n\t            //logger.log('find NALU @ offset:' + i + ',type:' + unitType);\n\t            lastUnitStart = i;\n\t            lastUnitType = unitType;\n\t            state = 0;\n\t          } else {\n\t            // not enough byte to read unit type. let's read it on next PES parsing\n\t            state = -1;\n\t          }\n\t        } else {\n\t          state = 0;\n\t        }\n\t      }\n\t      if (lastUnitStart >= 0 && state >= 0) {\n\t        unit = { data: array.subarray(lastUnitStart, len), type: lastUnitType, state: state };\n\t        units.push(unit);\n\t        //logger.log('pushing NALU, type/size/state:' + unit.type + '/' + unit.data.byteLength + '/' + state);\n\t      }\n\t      // no NALu found\n\t      if (units.length === 0) {\n\t        // append pes.data to previous NAL unit\n\t        var _lastUnit = this._getLastNalUnit();\n\t        if (_lastUnit) {\n\t          var _tmp = new Uint8Array(_lastUnit.data.byteLength + array.byteLength);\n\t          _tmp.set(_lastUnit.data, 0);\n\t          _tmp.set(array, _lastUnit.data.byteLength);\n\t          _lastUnit.data = _tmp;\n\t        }\n\t      }\n\t      track.naluState = state;\n\t      return units;\n\t    }\n\t\n\t    /**\n\t     * remove Emulation Prevention bytes from a RBSP\n\t     */\n\t\n\t  }, {\n\t    key: 'discardEPB',\n\t    value: function discardEPB(data) {\n\t      var length = data.byteLength,\n\t          EPBPositions = [],\n\t          i = 1,\n\t          newLength,\n\t          newData;\n\t\n\t      // Find all `Emulation Prevention Bytes`\n\t      while (i < length - 2) {\n\t        if (data[i] === 0 && data[i + 1] === 0 && data[i + 2] === 0x03) {\n\t          EPBPositions.push(i + 2);\n\t          i += 2;\n\t        } else {\n\t          i++;\n\t        }\n\t      }\n\t\n\t      // If no Emulation Prevention Bytes were found just return the original\n\t      // array\n\t      if (EPBPositions.length === 0) {\n\t        return data;\n\t      }\n\t\n\t      // Create a new array to hold the NAL unit data\n\t      newLength = length - EPBPositions.length;\n\t      newData = new Uint8Array(newLength);\n\t      var sourceIndex = 0;\n\t\n\t      for (i = 0; i < newLength; sourceIndex++, i++) {\n\t        if (sourceIndex === EPBPositions[0]) {\n\t          // Skip this byte\n\t          sourceIndex++;\n\t          // Remove this position index\n\t          EPBPositions.shift();\n\t        }\n\t        newData[i] = data[sourceIndex];\n\t      }\n\t      return newData;\n\t    }\n\t  }, {\n\t    key: '_parseAACPES',\n\t    value: function _parseAACPES(pes) {\n\t      var track = this._audioTrack,\n\t          data = pes.data,\n\t          pts = pes.pts,\n\t          startOffset = 0,\n\t          aacOverFlow = this.aacOverFlow,\n\t          aacLastPTS = this.aacLastPTS,\n\t          config,\n\t          frameLength,\n\t          frameDuration,\n\t          frameIndex,\n\t          offset,\n\t          headerLength,\n\t          stamp,\n\t          len,\n\t          aacSample;\n\t      if (aacOverFlow) {\n\t        var tmp = new Uint8Array(aacOverFlow.byteLength + data.byteLength);\n\t        tmp.set(aacOverFlow, 0);\n\t        tmp.set(data, aacOverFlow.byteLength);\n\t        //logger.log(`AAC: append overflowing ${aacOverFlow.byteLength} bytes to beginning of new PES`);\n\t        data = tmp;\n\t      }\n\t      // look for ADTS header (0xFFFx)\n\t      for (offset = startOffset, len = data.length; offset < len - 1; offset++) {\n\t        if (data[offset] === 0xff && (data[offset + 1] & 0xf0) === 0xf0) {\n\t          break;\n\t        }\n\t      }\n\t      // if ADTS header does not start straight from the beginning of the PES payload, raise an error\n\t      if (offset) {\n\t        var reason, fatal;\n\t        if (offset < len - 1) {\n\t          reason = 'AAC PES did not start with ADTS header,offset:' + offset;\n\t          fatal = false;\n\t        } else {\n\t          reason = 'no ADTS header found in AAC PES';\n\t          fatal = true;\n\t        }\n\t        _logger.logger.warn('parsing error:' + reason);\n\t        this.observer.trigger(_events2.default.ERROR, { type: _errors.ErrorTypes.MEDIA_ERROR, id: this.id, details: _errors.ErrorDetails.FRAG_PARSING_ERROR, fatal: fatal, reason: reason });\n\t        if (fatal) {\n\t          return;\n\t        }\n\t      }\n\t      if (!track.audiosamplerate) {\n\t        var audioCodec = this.audioCodec;\n\t        config = _adts2.default.getAudioConfig(this.observer, data, offset, audioCodec);\n\t        track.config = config.config;\n\t        track.audiosamplerate = config.samplerate;\n\t        track.channelCount = config.channelCount;\n\t        track.codec = config.codec;\n\t        track.manifestCodec = config.manifestCodec;\n\t        track.duration = this._duration;\n\t        _logger.logger.log('parsed codec:' + track.codec + ',rate:' + config.samplerate + ',nb channel:' + config.channelCount);\n\t      }\n\t      frameIndex = 0;\n\t      frameDuration = 1024 * 90000 / track.audiosamplerate;\n\t\n\t      // if last AAC frame is overflowing, we should ensure timestamps are contiguous:\n\t      // first sample PTS should be equal to last sample PTS + frameDuration\n\t      if (aacOverFlow && aacLastPTS) {\n\t        var newPTS = aacLastPTS + frameDuration;\n\t        if (Math.abs(newPTS - pts) > 1) {\n\t          _logger.logger.log('AAC: align PTS for overlapping frames by ' + Math.round((newPTS - pts) / 90));\n\t          pts = newPTS;\n\t        }\n\t      }\n\t\n\t      while (offset + 5 < len) {\n\t        // The protection skip bit tells us if we have 2 bytes of CRC data at the end of the ADTS header\n\t        headerLength = !!(data[offset + 1] & 0x01) ? 7 : 9;\n\t        // retrieve frame size\n\t        frameLength = (data[offset + 3] & 0x03) << 11 | data[offset + 4] << 3 | (data[offset + 5] & 0xE0) >>> 5;\n\t        frameLength -= headerLength;\n\t        //stamp = pes.pts;\n\t\n\t        if (frameLength > 0 && offset + headerLength + frameLength <= len) {\n\t          stamp = pts + frameIndex * frameDuration;\n\t          //logger.log(`AAC frame, offset/length/total/pts:${offset+headerLength}/${frameLength}/${data.byteLength}/${(stamp/90).toFixed(0)}`);\n\t          aacSample = { unit: data.subarray(offset + headerLength, offset + headerLength + frameLength), pts: stamp, dts: stamp };\n\t          track.samples.push(aacSample);\n\t          track.len += frameLength;\n\t          offset += frameLength + headerLength;\n\t          frameIndex++;\n\t          // look for ADTS header (0xFFFx)\n\t          for (; offset < len - 1; offset++) {\n\t            if (data[offset] === 0xff && (data[offset + 1] & 0xf0) === 0xf0) {\n\t              break;\n\t            }\n\t          }\n\t        } else {\n\t          break;\n\t        }\n\t      }\n\t      if (offset < len) {\n\t        aacOverFlow = data.subarray(offset, len);\n\t        //logger.log(`AAC: overflow detected:${len-offset}`);\n\t      } else {\n\t        aacOverFlow = null;\n\t      }\n\t      this.aacOverFlow = aacOverFlow;\n\t      this.aacLastPTS = stamp;\n\t    }\n\t  }, {\n\t    key: '_parseMPEGPES',\n\t    value: function _parseMPEGPES(pes) {\n\t      var data = pes.data;\n\t      var pts = pes.pts;\n\t      var length = data.length;\n\t      var frameIndex = 0;\n\t      var offset = 0;\n\t      var parsed;\n\t\n\t      while (offset < length && (parsed = this._parseMpeg(data, offset, length, frameIndex++, pts)) > 0) {\n\t        offset += parsed;\n\t      }\n\t    }\n\t  }, {\n\t    key: '_onMpegFrame',\n\t    value: function _onMpegFrame(data, bitRate, sampleRate, channelCount, frameIndex, pts) {\n\t      var frameDuration = 1152 / sampleRate * 1000;\n\t      var stamp = pts + frameIndex * frameDuration;\n\t      var track = this._audioTrack;\n\t\n\t      track.config = [];\n\t      track.channelCount = channelCount;\n\t      track.audiosamplerate = sampleRate;\n\t      track.duration = this._duration;\n\t      track.samples.push({ unit: data, pts: stamp, dts: stamp });\n\t      track.len += data.length;\n\t    }\n\t  }, {\n\t    key: '_onMpegNoise',\n\t    value: function _onMpegNoise(data) {\n\t      _logger.logger.warn('mpeg audio has noise: ' + data.length + ' bytes');\n\t    }\n\t  }, {\n\t    key: '_parseMpeg',\n\t    value: function _parseMpeg(data, start, end, frameIndex, pts) {\n\t      var BitratesMap = [32, 64, 96, 128, 160, 192, 224, 256, 288, 320, 352, 384, 416, 448, 32, 48, 56, 64, 80, 96, 112, 128, 160, 192, 224, 256, 320, 384, 32, 40, 48, 56, 64, 80, 96, 112, 128, 160, 192, 224, 256, 320, 32, 48, 56, 64, 80, 96, 112, 128, 144, 160, 176, 192, 224, 256, 8, 16, 24, 32, 40, 48, 56, 64, 80, 96, 112, 128, 144, 160];\n\t      var SamplingRateMap = [44100, 48000, 32000, 22050, 24000, 16000, 11025, 12000, 8000];\n\t\n\t      if (start + 2 > end) {\n\t        return -1; // we need at least 2 bytes to detect sync pattern\n\t      }\n\t      if (data[start] === 0xFF || (data[start + 1] & 0xE0) === 0xE0) {\n\t        // Using http://www.datavoyage.com/mpgscript/mpeghdr.htm as a reference\n\t        if (start + 24 > end) {\n\t          return -1;\n\t        }\n\t        var headerB = data[start + 1] >> 3 & 3;\n\t        var headerC = data[start + 1] >> 1 & 3;\n\t        var headerE = data[start + 2] >> 4 & 15;\n\t        var headerF = data[start + 2] >> 2 & 3;\n\t        var headerG = !!(data[start + 2] & 2);\n\t        if (headerB !== 1 && headerE !== 0 && headerE !== 15 && headerF !== 3) {\n\t          var columnInBitrates = headerB === 3 ? 3 - headerC : headerC === 3 ? 3 : 4;\n\t          var bitRate = BitratesMap[columnInBitrates * 14 + headerE - 1] * 1000;\n\t          var columnInSampleRates = headerB === 3 ? 0 : headerB === 2 ? 1 : 2;\n\t          var sampleRate = SamplingRateMap[columnInSampleRates * 3 + headerF];\n\t          var padding = headerG ? 1 : 0;\n\t          var channelCount = data[start + 3] >> 6 === 3 ? 1 : 2; // If bits of channel mode are `11` then it is a single channel (Mono)\n\t          var frameLength = headerC === 3 ? (headerB === 3 ? 12 : 6) * bitRate / sampleRate + padding << 2 : (headerB === 3 ? 144 : 72) * bitRate / sampleRate + padding | 0;\n\t          if (start + frameLength > end) {\n\t            return -1;\n\t          }\n\t          if (this._onMpegFrame) {\n\t            this._onMpegFrame(data.subarray(start, start + frameLength), bitRate, sampleRate, channelCount, frameIndex, pts);\n\t          }\n\t          return frameLength;\n\t        }\n\t      }\n\t      // noise or ID3, trying to skip\n\t      var offset = start + 2;\n\t      while (offset < end) {\n\t        if (data[offset - 1] === 0xFF && (data[offset] & 0xE0) === 0xE0) {\n\t          // sync pattern is found\n\t          if (this._onMpegNoise) {\n\t            this._onMpegNoise(data.subarray(start, offset - 1));\n\t          }\n\t          return offset - start - 1;\n\t        }\n\t        offset++;\n\t      }\n\t      return -1;\n\t    }\n\t  }, {\n\t    key: '_parseID3PES',\n\t    value: function _parseID3PES(pes) {\n\t      this._id3Track.samples.push(pes);\n\t    }\n\t  }], [{\n\t    key: 'probe',\n\t    value: function probe(data) {\n\t      // a TS fragment should contain at least 3 TS packets, a PAT, a PMT, and one PID, each starting with 0x47\n\t      if (data.length >= 3 * 188 && data[0] === 0x47 && data[188] === 0x47 && data[2 * 188] === 0x47) {\n\t        return true;\n\t      } else {\n\t        return false;\n\t      }\n\t    }\n\t  }]);\n\t\n\t  return TSDemuxer;\n\t}();\n\t\n\texports.default = TSDemuxer;\n\t\n\t},{\"19\":19,\"23\":23,\"26\":26,\"28\":28,\"45\":45}],26:[function(_dereq_,module,exports){\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\tvar ErrorTypes = exports.ErrorTypes = {\n\t  // Identifier for a network error (loading error / timeout ...)\n\t  NETWORK_ERROR: 'networkError',\n\t  // Identifier for a media Error (video/parsing/mediasource error)\n\t  MEDIA_ERROR: 'mediaError',\n\t  // Identifier for a mux Error (demuxing/remuxing)\n\t  MUX_ERROR: 'muxError',\n\t  // Identifier for all other errors\n\t  OTHER_ERROR: 'otherError'\n\t};\n\t\n\tvar ErrorDetails = exports.ErrorDetails = {\n\t  // Identifier for a manifest load error - data: { url : faulty URL, response : { code: error code, text: error text }}\n\t  MANIFEST_LOAD_ERROR: 'manifestLoadError',\n\t  // Identifier for a manifest load timeout - data: { url : faulty URL, response : { code: error code, text: error text }}\n\t  MANIFEST_LOAD_TIMEOUT: 'manifestLoadTimeOut',\n\t  // Identifier for a manifest parsing error - data: { url : faulty URL, reason : error reason}\n\t  MANIFEST_PARSING_ERROR: 'manifestParsingError',\n\t  // Identifier for a manifest with only incompatible codecs error - data: { url : faulty URL, reason : error reason}\n\t  MANIFEST_INCOMPATIBLE_CODECS_ERROR: 'manifestIncompatibleCodecsError',\n\t  // Identifier for a level load error - data: { url : faulty URL, response : { code: error code, text: error text }}\n\t  LEVEL_LOAD_ERROR: 'levelLoadError',\n\t  // Identifier for a level load timeout - data: { url : faulty URL, response : { code: error code, text: error text }}\n\t  LEVEL_LOAD_TIMEOUT: 'levelLoadTimeOut',\n\t  // Identifier for a level switch error - data: { level : faulty level Id, event : error description}\n\t  LEVEL_SWITCH_ERROR: 'levelSwitchError',\n\t  // Identifier for an audio track load error - data: { url : faulty URL, response : { code: error code, text: error text }}\n\t  AUDIO_TRACK_LOAD_ERROR: 'audioTrackLoadError',\n\t  // Identifier for an audio track load timeout - data: { url : faulty URL, response : { code: error code, text: error text }}\n\t  AUDIO_TRACK_LOAD_TIMEOUT: 'audioTrackLoadTimeOut',\n\t  // Identifier for fragment load error - data: { frag : fragment object, response : { code: error code, text: error text }}\n\t  FRAG_LOAD_ERROR: 'fragLoadError',\n\t  // Identifier for fragment loop loading error - data: { frag : fragment object}\n\t  FRAG_LOOP_LOADING_ERROR: 'fragLoopLoadingError',\n\t  // Identifier for fragment load timeout error - data: { frag : fragment object}\n\t  FRAG_LOAD_TIMEOUT: 'fragLoadTimeOut',\n\t  // Identifier for a fragment decryption error event - data: parsing error description\n\t  FRAG_DECRYPT_ERROR: 'fragDecryptError',\n\t  // Identifier for a fragment parsing error event - data: { id : demuxer Id, reason : parsing error description }\n\t  // will be renamed DEMUX_PARSING_ERROR and switched to MUX_ERROR in the next major release\n\t  FRAG_PARSING_ERROR: 'fragParsingError',\n\t  // Identifier for a remux alloc error event - data: { id : demuxer Id, bytes : nb of bytes on which allocation failed , reason : error text }\n\t  REMUX_ALLOC_ERROR: 'remuxAllocError',\n\t  // Identifier for decrypt key load error - data: { frag : fragment object, response : { code: error code, text: error text }}\n\t  KEY_LOAD_ERROR: 'keyLoadError',\n\t  // Identifier for decrypt key load timeout error - data: { frag : fragment object}\n\t  KEY_LOAD_TIMEOUT: 'keyLoadTimeOut',\n\t  // Triggered when an exception occurs while adding a sourceBuffer to MediaSource - data : {  err : exception , mimeType : mimeType }\n\t  BUFFER_ADD_CODEC_ERROR: 'bufferAddCodecError',\n\t  // Identifier for a buffer append error - data: append error description\n\t  BUFFER_APPEND_ERROR: 'bufferAppendError',\n\t  // Identifier for a buffer appending error event - data: appending error description\n\t  BUFFER_APPENDING_ERROR: 'bufferAppendingError',\n\t  // Identifier for a buffer stalled error event\n\t  BUFFER_STALLED_ERROR: 'bufferStalledError',\n\t  // Identifier for a buffer full event\n\t  BUFFER_FULL_ERROR: 'bufferFullError',\n\t  // Identifier for a buffer seek over hole event\n\t  BUFFER_SEEK_OVER_HOLE: 'bufferSeekOverHole',\n\t  // Identifier for a buffer nudge on stall (playback is stuck although currentTime is in a buffered area)\n\t  BUFFER_NUDGE_ON_STALL: 'bufferNudgeOnStall',\n\t  // Identifier for an internal exception happening inside hls.js while handling an event\n\t  INTERNAL_EXCEPTION: 'internalException'\n\t};\n\t\n\t},{}],27:[function(_dereq_,module,exports){\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }(); /*\n\tn\tll objects in the event handling chain should inherit from this class\n\tn\tn\t\n\tvar _logger = _dereq_(45);\n\t\n\tvar _errors = _dereq_(26);\n\t\n\tvar _events = _dereq_(28);\n\t\n\tvar _events2 = _interopRequireDefault(_events);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tvar EventHandler = function () {\n\t  function EventHandler(hls) {\n\t    _classCallCheck(this, EventHandler);\n\t\n\t    this.hls = hls;\n\t    this.onEvent = this.onEvent.bind(this);\n\t\n\t    for (var _len = arguments.length, events = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n\t      events[_key - 1] = arguments[_key];\n\t    }\n\t\n\t    this.handledEvents = events;\n\t    this.useGenericHandler = true;\n\t\n\t    this.registerListeners();\n\t  }\n\t\n\t  _createClass(EventHandler, [{\n\t    key: 'destroy',\n\t    value: function destroy() {\n\t      this.unregisterListeners();\n\t    }\n\t  }, {\n\t    key: 'isEventHandler',\n\t    value: function isEventHandler() {\n\t      return _typeof(this.handledEvents) === 'object' && this.handledEvents.length && typeof this.onEvent === 'function';\n\t    }\n\t  }, {\n\t    key: 'registerListeners',\n\t    value: function registerListeners() {\n\t      if (this.isEventHandler()) {\n\t        this.handledEvents.forEach(function (event) {\n\t          if (event === 'hlsEventGeneric') {\n\t            throw new Error('Forbidden event name: ' + event);\n\t          }\n\t          this.hls.on(event, this.onEvent);\n\t        }.bind(this));\n\t      }\n\t    }\n\t  }, {\n\t    key: 'unregisterListeners',\n\t    value: function unregisterListeners() {\n\t      if (this.isEventHandler()) {\n\t        this.handledEvents.forEach(function (event) {\n\t          this.hls.off(event, this.onEvent);\n\t        }.bind(this));\n\t      }\n\t    }\n\t\n\t    /**\n\t     * arguments: event (string), data (any)\n\t     */\n\t\n\t  }, {\n\t    key: 'onEvent',\n\t    value: function onEvent(event, data) {\n\t      this.onEventGeneric(event, data);\n\t    }\n\t  }, {\n\t    key: 'onEventGeneric',\n\t    value: function onEventGeneric(event, data) {\n\t      var eventToFunction = function eventToFunction(event, data) {\n\t        var funcName = 'on' + event.replace('hls', '');\n\t        if (typeof this[funcName] !== 'function') {\n\t          throw new Error('Event ' + event + ' has no generic handler in this ' + this.constructor.name + ' class (tried ' + funcName + ')');\n\t        }\n\t        return this[funcName].bind(this, data);\n\t      };\n\t      try {\n\t        eventToFunction.call(this, event, data).call();\n\t      } catch (err) {\n\t        _logger.logger.error('internal error happened while processing ' + event + ':' + err.message);\n\t        this.hls.trigger(_events2.default.ERROR, { type: _errors.ErrorTypes.OTHER_ERROR, details: _errors.ErrorDetails.INTERNAL_EXCEPTION, fatal: false, event: event, err: err });\n\t      }\n\t    }\n\t  }]);\n\t\n\t  return EventHandler;\n\t}();\n\t\n\texports.default = EventHandler;\n\t\n\t},{\"26\":26,\"28\":28,\"45\":45}],28:[function(_dereq_,module,exports){\n\t'use strict';\n\t\n\tmodule.exports = {\n\t  // fired before MediaSource is attaching to media element - data: { media }\n\t  MEDIA_ATTACHING: 'hlsMediaAttaching',\n\t  // fired when MediaSource has been succesfully attached to media element - data: { }\n\t  MEDIA_ATTACHED: 'hlsMediaAttached',\n\t  // fired before detaching MediaSource from media element - data: { }\n\t  MEDIA_DETACHING: 'hlsMediaDetaching',\n\t  // fired when MediaSource has been detached from media element - data: { }\n\t  MEDIA_DETACHED: 'hlsMediaDetached',\n\t  // fired when we buffer is going to be resetted\n\t  BUFFER_RESET: 'hlsBufferReset',\n\t  // fired when we know about the codecs that we need buffers for to push into - data: {tracks : { container, codec, levelCodec, initSegment, metadata }}\n\t  BUFFER_CODECS: 'hlsBufferCodecs',\n\t  // fired when sourcebuffers have been created data: { tracks : tracks}\n\t  BUFFER_CREATED: 'hlsBufferCreated',\n\t  // fired when we append a segment to the buffer - data: { segment: segment object }\n\t  BUFFER_APPENDING: 'hlsBufferAppending',\n\t  // fired when we are done with appending a media segment to the buffer data : { parent : segment parent that triggered BUFFER_APPENDING , pending : nb of segments waiting for appending for this segment parent}\n\t  BUFFER_APPENDED: 'hlsBufferAppended',\n\t  // fired when the stream is finished and we want to notify the media buffer that there will be no more data\n\t  BUFFER_EOS: 'hlsBufferEos',\n\t  // fired when the media buffer should be flushed - data {startOffset, endOffset}\n\t  BUFFER_FLUSHING: 'hlsBufferFlushing',\n\t  // fired when the media has been flushed\n\t  BUFFER_FLUSHED: 'hlsBufferFlushed',\n\t  // fired to signal that a manifest loading starts - data: { url : manifestURL}\n\t  MANIFEST_LOADING: 'hlsManifestLoading',\n\t  // fired after manifest has been loaded - data: { levels : [available quality levels] , audioTracks : [ available audio tracks], url : manifestURL, stats : { trequest, tfirst, tload, mtime}}\n\t  MANIFEST_LOADED: 'hlsManifestLoaded',\n\t  // fired after manifest has been parsed - data: { levels : [available quality levels] , firstLevel : index of first quality level appearing in Manifest}\n\t  MANIFEST_PARSED: 'hlsManifestParsed',\n\t  // fired when a level playlist loading starts - data: { url : level URL  level : id of level being loaded}\n\t  LEVEL_LOADING: 'hlsLevelLoading',\n\t  // fired when a level playlist loading finishes - data: { details : levelDetails object, level : id of loaded level, stats : { trequest, tfirst, tload, mtime} }\n\t  LEVEL_LOADED: 'hlsLevelLoaded',\n\t  // fired when a level's details have been updated based on previous details, after it has been loaded. - data: { details : levelDetails object, level : id of updated level }\n\t  LEVEL_UPDATED: 'hlsLevelUpdated',\n\t  // fired when a level's PTS information has been updated after parsing a fragment - data: { details : levelDetails object, level : id of updated level, drift: PTS drift observed when parsing last fragment }\n\t  LEVEL_PTS_UPDATED: 'hlsLevelPtsUpdated',\n\t  // fired when a level switch is requested - data: { level : id of new level }\n\t  LEVEL_SWITCH: 'hlsLevelSwitch',\n\t  // fired to notify that audio track lists has been updated data: { audioTracks : audioTracks}\n\t  AUDIO_TRACKS_UPDATED: 'hlsAudioTracksUpdated',\n\t  // fired when an audio track switch occurs - data: {  id : audio track id} // deprecated\n\t  AUDIO_TRACK_SWITCH: 'hlsAudioTrackSwitch',\n\t  // fired when an audio track switching is requested - data: {  id : audio track id}\n\t  AUDIO_TRACK_SWITCHING: 'hlsAudioTrackSwitching',\n\t  // fired when an audio track switch actually occurs - data: {  id : audio track id}\n\t  AUDIO_TRACK_SWITCHED: 'hlsAudioTrackSwitched',\n\t  // fired when an audio track loading starts - data: { url : audio track URL  id : audio track id}\n\t  AUDIO_TRACK_LOADING: 'hlsAudioTrackLoading',\n\t  // fired when an audio track loading  finishes - data: { details : levelDetails object, id : audio track id, stats : { trequest, tfirst, tload, mtime} }\n\t  AUDIO_TRACK_LOADED: 'hlsAudioTrackLoaded',\n\t  // fired when the first timestamp is found. - data: { id : demuxer id, initPTS: initPTS }\n\t  INIT_PTS_FOUND: 'hlsInitPtsFound',\n\t  // fired when a fragment loading starts - data: { frag : fragment object}\n\t  FRAG_LOADING: 'hlsFragLoading',\n\t  // fired when a fragment loading is progressing - data: { frag : fragment object, { trequest, tfirst, loaded}}\n\t  FRAG_LOAD_PROGRESS: 'hlsFragLoadProgress',\n\t  // Identifier for fragment load aborting for emergency switch down - data: {frag : fragment object}\n\t  FRAG_LOAD_EMERGENCY_ABORTED: 'hlsFragLoadEmergencyAborted',\n\t  // fired when a fragment loading is completed - data: { frag : fragment object, payload : fragment payload, stats : { trequest, tfirst, tload, length}}\n\t  FRAG_LOADED: 'hlsFragLoaded',\n\t  // fired when a fragment has finished decrypting - data: { level : levelId, sn : sequence number }\n\t  FRAG_DECRYPTED: 'hlsFragDecrypted',\n\t  // fired when Init Segment has been extracted from fragment - data: { id : demuxer id, level : levelId, sn : sequence number, moov : moov MP4 box, codecs : codecs found while parsing fragment}\n\t  FRAG_PARSING_INIT_SEGMENT: 'hlsFragParsingInitSegment',\n\t  // fired when parsing sei text is completed - data: { id : demuxer id, , level : levelId, sn : sequence number, samples : [ sei samples pes ] }\n\t  FRAG_PARSING_USERDATA: 'hlsFragParsingUserdata',\n\t  // fired when parsing id3 is completed - data: { id : demuxer id, , level : levelId, sn : sequence number, samples : [ id3 samples pes ] }\n\t  FRAG_PARSING_METADATA: 'hlsFragParsingMetadata',\n\t  // fired when data have been extracted from fragment - data: { id : demuxer id, level : levelId, sn : sequence number, data1 : moof MP4 box or TS fragments, data2 : mdat MP4 box or null}\n\t  FRAG_PARSING_DATA: 'hlsFragParsingData',\n\t  // fired when fragment parsing is completed - data: { id : demuxer id; level : levelId, sn : sequence number, }\n\t  FRAG_PARSED: 'hlsFragParsed',\n\t  // fired when fragment remuxed MP4 boxes have all been appended into SourceBuffer - data: { id : demuxer id,frag : fragment object, stats : { trequest, tfirst, tload, tparsed, tbuffered, length} }\n\t  FRAG_BUFFERED: 'hlsFragBuffered',\n\t  // fired when fragment matching with current media position is changing - data : { id : demuxer id, frag : fragment object }\n\t  FRAG_CHANGED: 'hlsFragChanged',\n\t  // Identifier for a FPS drop event - data: {curentDropped, currentDecoded, totalDroppedFrames}\n\t  FPS_DROP: 'hlsFpsDrop',\n\t  //triggered when FPS drop triggers auto level capping - data: {level, droppedlevel}\n\t  FPS_DROP_LEVEL_CAPPING: 'hlsFpsDropLevelCapping',\n\t  // Identifier for an error event - data: { type : error type, details : error details, fatal : if true, hls.js cannot/will not try to recover, if false, hls.js will try to recover,other error specific data}\n\t  ERROR: 'hlsError',\n\t  // fired when hls.js instance starts destroying. Different from MEDIA_DETACHED as one could want to detach and reattach a media to the instance of hls.js to handle mid-rolls for example\n\t  DESTROYING: 'hlsDestroying',\n\t  // fired when a decrypt key loading starts - data: { frag : fragment object}\n\t  KEY_LOADING: 'hlsKeyLoading',\n\t  // fired when a decrypt key loading is completed - data: { frag : fragment object, payload : key payload, stats : { trequest, tfirst, tload, length}}\n\t  KEY_LOADED: 'hlsKeyLoaded',\n\t  // fired upon stream controller state transitions - data: {previousState, nextState}\n\t  STREAM_STATE_TRANSITION: 'hlsStreamStateTransition'\n\t};\n\t\n\t},{}],29:[function(_dereq_,module,exports){\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\t/**\n\t *  AAC helper\n\t */\n\t\n\tvar AAC = function () {\n\t  function AAC() {\n\t    _classCallCheck(this, AAC);\n\t  }\n\t\n\t  _createClass(AAC, null, [{\n\t    key: 'getSilentFrame',\n\t    value: function getSilentFrame(codec, channelCount) {\n\t      switch (codec) {\n\t        case 'mp4a.40.2':\n\t          if (channelCount === 1) {\n\t            return new Uint8Array([0x00, 0xc8, 0x00, 0x80, 0x23, 0x80]);\n\t          } else if (channelCount === 2) {\n\t            return new Uint8Array([0x21, 0x00, 0x49, 0x90, 0x02, 0x19, 0x00, 0x23, 0x80]);\n\t          } else if (channelCount === 3) {\n\t            return new Uint8Array([0x00, 0xc8, 0x00, 0x80, 0x20, 0x84, 0x01, 0x26, 0x40, 0x08, 0x64, 0x00, 0x8e]);\n\t          } else if (channelCount === 4) {\n\t            return new Uint8Array([0x00, 0xc8, 0x00, 0x80, 0x20, 0x84, 0x01, 0x26, 0x40, 0x08, 0x64, 0x00, 0x80, 0x2c, 0x80, 0x08, 0x02, 0x38]);\n\t          } else if (channelCount === 5) {\n\t            return new Uint8Array([0x00, 0xc8, 0x00, 0x80, 0x20, 0x84, 0x01, 0x26, 0x40, 0x08, 0x64, 0x00, 0x82, 0x30, 0x04, 0x99, 0x00, 0x21, 0x90, 0x02, 0x38]);\n\t          } else if (channelCount === 6) {\n\t            return new Uint8Array([0x00, 0xc8, 0x00, 0x80, 0x20, 0x84, 0x01, 0x26, 0x40, 0x08, 0x64, 0x00, 0x82, 0x30, 0x04, 0x99, 0x00, 0x21, 0x90, 0x02, 0x00, 0xb2, 0x00, 0x20, 0x08, 0xe0]);\n\t          }\n\t          break;\n\t        // handle HE-AAC below (mp4a.40.5 / mp4a.40.29)\n\t        default:\n\t          if (channelCount === 1) {\n\t            // ffmpeg -y -f lavfi -i \"aevalsrc=0:d=0.05\" -c:a libfdk_aac -profile:a aac_he -b:a 4k output.aac && hexdump -v -e '16/1 \"0x%x,\" \"\\n\"' -v output.aac\n\t            return new Uint8Array([0x1, 0x40, 0x22, 0x80, 0xa3, 0x4e, 0xe6, 0x80, 0xba, 0x8, 0x0, 0x0, 0x0, 0x1c, 0x6, 0xf1, 0xc1, 0xa, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5e]);\n\t          } else if (channelCount === 2) {\n\t            // ffmpeg -y -f lavfi -i \"aevalsrc=0|0:d=0.05\" -c:a libfdk_aac -profile:a aac_he_v2 -b:a 4k output.aac && hexdump -v -e '16/1 \"0x%x,\" \"\\n\"' -v output.aac\n\t            return new Uint8Array([0x1, 0x40, 0x22, 0x80, 0xa3, 0x5e, 0xe6, 0x80, 0xba, 0x8, 0x0, 0x0, 0x0, 0x0, 0x95, 0x0, 0x6, 0xf1, 0xa1, 0xa, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5e]);\n\t          } else if (channelCount === 3) {\n\t            // ffmpeg -y -f lavfi -i \"aevalsrc=0|0|0:d=0.05\" -c:a libfdk_aac -profile:a aac_he_v2 -b:a 4k output.aac && hexdump -v -e '16/1 \"0x%x,\" \"\\n\"' -v output.aac\n\t            return new Uint8Array([0x1, 0x40, 0x22, 0x80, 0xa3, 0x5e, 0xe6, 0x80, 0xba, 0x8, 0x0, 0x0, 0x0, 0x0, 0x95, 0x0, 0x6, 0xf1, 0xa1, 0xa, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5e]);\n\t          }\n\t          break;\n\t      }\n\t      return null;\n\t    }\n\t  }]);\n\t\n\t  return AAC;\n\t}();\n\t\n\texports.default = AAC;\n\t\n\t},{}],30:[function(_dereq_,module,exports){\n\t\"use strict\";\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\t/**\n\t * Buffer Helper class, providing methods dealing buffer length retrieval\n\t*/\n\t\n\tvar BufferHelper = function () {\n\t  function BufferHelper() {\n\t    _classCallCheck(this, BufferHelper);\n\t  }\n\t\n\t  _createClass(BufferHelper, null, [{\n\t    key: \"isBuffered\",\n\t    value: function isBuffered(media, position) {\n\t      if (media) {\n\t        var buffered = media.buffered;\n\t        for (var i = 0; i < buffered.length; i++) {\n\t          if (position >= buffered.start(i) && position <= buffered.end(i)) {\n\t            return true;\n\t          }\n\t        }\n\t      }\n\t      return false;\n\t    }\n\t  }, {\n\t    key: \"bufferInfo\",\n\t    value: function bufferInfo(media, pos, maxHoleDuration) {\n\t      if (media) {\n\t        var vbuffered = media.buffered,\n\t            buffered = [],\n\t            i;\n\t        for (i = 0; i < vbuffered.length; i++) {\n\t          buffered.push({ start: vbuffered.start(i), end: vbuffered.end(i) });\n\t        }\n\t        return this.bufferedInfo(buffered, pos, maxHoleDuration);\n\t      } else {\n\t        return { len: 0, start: 0, end: 0, nextStart: undefined };\n\t      }\n\t    }\n\t  }, {\n\t    key: \"bufferedInfo\",\n\t    value: function bufferedInfo(buffered, pos, maxHoleDuration) {\n\t      var buffered2 = [],\n\t\n\t      // bufferStart and bufferEnd are buffer boundaries around current video position\n\t      bufferLen,\n\t          bufferStart,\n\t          bufferEnd,\n\t          bufferStartNext,\n\t          i;\n\t      // sort on buffer.start/smaller end (IE does not always return sorted buffered range)\n\t      buffered.sort(function (a, b) {\n\t        var diff = a.start - b.start;\n\t        if (diff) {\n\t          return diff;\n\t        } else {\n\t          return b.end - a.end;\n\t        }\n\t      });\n\t      // there might be some small holes between buffer time range\n\t      // consider that holes smaller than maxHoleDuration are irrelevant and build another\n\t      // buffer time range representations that discards those holes\n\t      for (i = 0; i < buffered.length; i++) {\n\t        var buf2len = buffered2.length;\n\t        if (buf2len) {\n\t          var buf2end = buffered2[buf2len - 1].end;\n\t          // if small hole (value between 0 or maxHoleDuration ) or overlapping (negative)\n\t          if (buffered[i].start - buf2end < maxHoleDuration) {\n\t            // merge overlapping time ranges\n\t            // update lastRange.end only if smaller than item.end\n\t            // e.g.  [ 1, 15] with  [ 2,8] => [ 1,15] (no need to modify lastRange.end)\n\t            // whereas [ 1, 8] with  [ 2,15] => [ 1,15] ( lastRange should switch from [1,8] to [1,15])\n\t            if (buffered[i].end > buf2end) {\n\t              buffered2[buf2len - 1].end = buffered[i].end;\n\t            }\n\t          } else {\n\t            // big hole\n\t            buffered2.push(buffered[i]);\n\t          }\n\t        } else {\n\t          // first value\n\t          buffered2.push(buffered[i]);\n\t        }\n\t      }\n\t      for (i = 0, bufferLen = 0, bufferStart = bufferEnd = pos; i < buffered2.length; i++) {\n\t        var start = buffered2[i].start,\n\t            end = buffered2[i].end;\n\t        //logger.log('buf start/end:' + buffered.start(i) + '/' + buffered.end(i));\n\t        if (pos + maxHoleDuration >= start && pos < end) {\n\t          // play position is inside this buffer TimeRange, retrieve end of buffer position and buffer length\n\t          bufferStart = start;\n\t          bufferEnd = end;\n\t          bufferLen = bufferEnd - pos;\n\t        } else if (pos + maxHoleDuration < start) {\n\t          bufferStartNext = start;\n\t          break;\n\t        }\n\t      }\n\t      return { len: bufferLen, start: bufferStart, end: bufferEnd, nextStart: bufferStartNext };\n\t    }\n\t  }]);\n\t\n\t  return BufferHelper;\n\t}();\n\t\n\texports.default = BufferHelper;\n\t\n\t},{}],31:[function(_dereq_,module,exports){\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }(); /**\n\tevel Helper class, providing methods dealing with playlist sliding and drift\n\tn\t\n\tvar _logger = _dereq_(45);\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tvar LevelHelper = function () {\n\t  function LevelHelper() {\n\t    _classCallCheck(this, LevelHelper);\n\t  }\n\t\n\t  _createClass(LevelHelper, null, [{\n\t    key: 'mergeDetails',\n\t    value: function mergeDetails(oldDetails, newDetails) {\n\t      var start = Math.max(oldDetails.startSN, newDetails.startSN) - newDetails.startSN,\n\t          end = Math.min(oldDetails.endSN, newDetails.endSN) - newDetails.startSN,\n\t          delta = newDetails.startSN - oldDetails.startSN,\n\t          oldfragments = oldDetails.fragments,\n\t          newfragments = newDetails.fragments,\n\t          ccOffset = 0,\n\t          PTSFrag;\n\t\n\t      // check if old/new playlists have fragments in common\n\t      if (end < start) {\n\t        newDetails.PTSKnown = false;\n\t        return;\n\t      }\n\t      // loop through overlapping SN and update startPTS , cc, and duration if any found\n\t      for (var i = start; i <= end; i++) {\n\t        var oldFrag = oldfragments[delta + i],\n\t            newFrag = newfragments[i];\n\t        if (newFrag && oldFrag) {\n\t          ccOffset = oldFrag.cc - newFrag.cc;\n\t          if (!isNaN(oldFrag.startPTS)) {\n\t            newFrag.start = newFrag.startPTS = oldFrag.startPTS;\n\t            newFrag.endPTS = oldFrag.endPTS;\n\t            newFrag.duration = oldFrag.duration;\n\t            PTSFrag = newFrag;\n\t          }\n\t        }\n\t      }\n\t\n\t      if (ccOffset) {\n\t        _logger.logger.log('discontinuity sliding from playlist, take drift into account');\n\t        for (i = 0; i < newfragments.length; i++) {\n\t          newfragments[i].cc += ccOffset;\n\t        }\n\t      }\n\t\n\t      // if at least one fragment contains PTS info, recompute PTS information for all fragments\n\t      if (PTSFrag) {\n\t        LevelHelper.updateFragPTSDTS(newDetails, PTSFrag.sn, PTSFrag.startPTS, PTSFrag.endPTS, PTSFrag.startDTS, PTSFrag.endDTS);\n\t      } else {\n\t        // ensure that delta is within oldfragments range\n\t        // also adjust sliding in case delta is 0 (we could have old=[50-60] and new=old=[50-61])\n\t        // in that case we also need to adjust start offset of all fragments\n\t        if (delta >= 0 && delta < oldfragments.length) {\n\t          // adjust start by sliding offset\n\t          var sliding = oldfragments[delta].start;\n\t          for (i = 0; i < newfragments.length; i++) {\n\t            newfragments[i].start += sliding;\n\t          }\n\t        }\n\t      }\n\t      // if we are here, it means we have fragments overlapping between\n\t      // old and new level. reliable PTS info is thus relying on old level\n\t      newDetails.PTSKnown = oldDetails.PTSKnown;\n\t      return;\n\t    }\n\t  }, {\n\t    key: 'updateFragPTSDTS',\n\t    value: function updateFragPTSDTS(details, sn, startPTS, endPTS, startDTS, endDTS) {\n\t      var fragIdx, fragments, frag, i;\n\t      // exit if sn out of range\n\t      if (!details || sn < details.startSN || sn > details.endSN) {\n\t        return 0;\n\t      }\n\t      fragIdx = sn - details.startSN;\n\t      fragments = details.fragments;\n\t      frag = fragments[fragIdx];\n\t      if (!isNaN(frag.startPTS)) {\n\t        // delta PTS between audio and video\n\t        var deltaPTS = Math.abs(frag.startPTS - startPTS);\n\t        if (isNaN(frag.deltaPTS)) {\n\t          frag.deltaPTS = deltaPTS;\n\t        } else {\n\t          frag.deltaPTS = Math.max(deltaPTS, frag.deltaPTS);\n\t        }\n\t        startPTS = Math.min(startPTS, frag.startPTS);\n\t        endPTS = Math.max(endPTS, frag.endPTS);\n\t        startDTS = Math.min(startDTS, frag.startDTS);\n\t        endDTS = Math.max(endDTS, frag.endDTS);\n\t      }\n\t\n\t      var drift = startPTS - frag.start;\n\t\n\t      frag.start = frag.startPTS = startPTS;\n\t      frag.endPTS = endPTS;\n\t      frag.startDTS = startDTS;\n\t      frag.endDTS = endDTS;\n\t      frag.duration = endPTS - startPTS;\n\t      // adjust fragment PTS/duration from seqnum-1 to frag 0\n\t      for (i = fragIdx; i > 0; i--) {\n\t        LevelHelper.updatePTS(fragments, i, i - 1);\n\t      }\n\t\n\t      // adjust fragment PTS/duration from seqnum to last frag\n\t      for (i = fragIdx; i < fragments.length - 1; i++) {\n\t        LevelHelper.updatePTS(fragments, i, i + 1);\n\t      }\n\t      details.PTSKnown = true;\n\t      //logger.log(`                                            frag start/end:${startPTS.toFixed(3)}/${endPTS.toFixed(3)}`);\n\t\n\t      return drift;\n\t    }\n\t  }, {\n\t    key: 'updatePTS',\n\t    value: function updatePTS(fragments, fromIdx, toIdx) {\n\t      var fragFrom = fragments[fromIdx],\n\t          fragTo = fragments[toIdx],\n\t          fragToPTS = fragTo.startPTS;\n\t      // if we know startPTS[toIdx]\n\t      if (!isNaN(fragToPTS)) {\n\t        // update fragment duration.\n\t        // it helps to fix drifts between playlist reported duration and fragment real duration\n\t        if (toIdx > fromIdx) {\n\t          fragFrom.duration = fragToPTS - fragFrom.start;\n\t          if (fragFrom.duration < 0) {\n\t            _logger.logger.warn('negative duration computed for frag ' + fragFrom.sn + ',level ' + fragFrom.level + ', there should be some duration drift between playlist and fragment!');\n\t          }\n\t        } else {\n\t          fragTo.duration = fragFrom.start - fragToPTS;\n\t          if (fragTo.duration < 0) {\n\t            _logger.logger.warn('negative duration computed for frag ' + fragTo.sn + ',level ' + fragTo.level + ', there should be some duration drift between playlist and fragment!');\n\t          }\n\t        }\n\t      } else {\n\t        // we dont know startPTS[toIdx]\n\t        if (toIdx > fromIdx) {\n\t          fragTo.start = fragFrom.start + fragFrom.duration;\n\t        } else {\n\t          fragTo.start = fragFrom.start - fragTo.duration;\n\t        }\n\t      }\n\t    }\n\t  }]);\n\t\n\t  return LevelHelper;\n\t}();\n\t\n\texports.default = LevelHelper;\n\t\n\t},{\"45\":45}],32:[function(_dereq_,module,exports){\n\t/**\n\t * HLS interface\n\t */\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t//import FetchLoader from './utils/fetch-loader';\n\t\n\t\n\tvar _events = _dereq_(28);\n\t\n\tvar _events2 = _interopRequireDefault(_events);\n\t\n\tvar _errors = _dereq_(26);\n\t\n\tvar _playlistLoader = _dereq_(36);\n\t\n\tvar _playlistLoader2 = _interopRequireDefault(_playlistLoader);\n\t\n\tvar _fragmentLoader = _dereq_(34);\n\t\n\tvar _fragmentLoader2 = _interopRequireDefault(_fragmentLoader);\n\t\n\tvar _abrController = _dereq_(4);\n\t\n\tvar _abrController2 = _interopRequireDefault(_abrController);\n\t\n\tvar _bufferController = _dereq_(7);\n\t\n\tvar _bufferController2 = _interopRequireDefault(_bufferController);\n\t\n\tvar _capLevelController = _dereq_(8);\n\t\n\tvar _capLevelController2 = _interopRequireDefault(_capLevelController);\n\t\n\tvar _audioStreamController = _dereq_(5);\n\t\n\tvar _audioStreamController2 = _interopRequireDefault(_audioStreamController);\n\t\n\tvar _streamController = _dereq_(12);\n\t\n\tvar _streamController2 = _interopRequireDefault(_streamController);\n\t\n\tvar _levelController = _dereq_(11);\n\t\n\tvar _levelController2 = _interopRequireDefault(_levelController);\n\t\n\tvar _timelineController = _dereq_(13);\n\t\n\tvar _timelineController2 = _interopRequireDefault(_timelineController);\n\t\n\tvar _fpsController = _dereq_(10);\n\t\n\tvar _fpsController2 = _interopRequireDefault(_fpsController);\n\t\n\tvar _audioTrackController = _dereq_(6);\n\t\n\tvar _audioTrackController2 = _interopRequireDefault(_audioTrackController);\n\t\n\tvar _logger = _dereq_(45);\n\t\n\tvar _xhrLoader = _dereq_(47);\n\t\n\tvar _xhrLoader2 = _interopRequireDefault(_xhrLoader);\n\t\n\tvar _events3 = _dereq_(1);\n\t\n\tvar _events4 = _interopRequireDefault(_events3);\n\t\n\tvar _keyLoader = _dereq_(35);\n\t\n\tvar _keyLoader2 = _interopRequireDefault(_keyLoader);\n\t\n\tvar _cues = _dereq_(43);\n\t\n\tvar _cues2 = _interopRequireDefault(_cues);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tvar Hls = function () {\n\t  _createClass(Hls, null, [{\n\t    key: 'isSupported',\n\t    value: function isSupported() {\n\t      window.MediaSource = window.MediaSource || window.WebKitMediaSource;\n\t      return window.MediaSource && typeof window.MediaSource.isTypeSupported === 'function' && window.MediaSource.isTypeSupported('video/mp4; codecs=\"avc1.42E01E,mp4a.40.2\"');\n\t    }\n\t  }, {\n\t    key: 'version',\n\t    get: function get() {\n\t      // replaced with browserify-versionify transform\n\t      return '0.6.21';\n\t    }\n\t  }, {\n\t    key: 'Events',\n\t    get: function get() {\n\t      return _events2.default;\n\t    }\n\t  }, {\n\t    key: 'ErrorTypes',\n\t    get: function get() {\n\t      return _errors.ErrorTypes;\n\t    }\n\t  }, {\n\t    key: 'ErrorDetails',\n\t    get: function get() {\n\t      return _errors.ErrorDetails;\n\t    }\n\t  }, {\n\t    key: 'DefaultConfig',\n\t    get: function get() {\n\t      if (!Hls.defaultConfig) {\n\t        Hls.defaultConfig = {\n\t          autoStartLoad: true,\n\t          startPosition: -1,\n\t          defaultAudioCodec: undefined,\n\t          debug: false,\n\t          capLevelOnFPSDrop: false,\n\t          capLevelToPlayerSize: false,\n\t          initialLiveManifestSize: 1,\n\t          maxBufferLength: 30,\n\t          maxBufferSize: 60 * 1000 * 1000,\n\t          maxBufferHole: 0.5,\n\t          maxMaxBufferLength: 600,\n\t          maxSeekHole: 2,\n\t          lowBufferWatchdogPeriod: 0.5,\n\t          highBufferWatchdogPeriod: 3,\n\t          nudgeOffset: 0.1,\n\t          nudgeMaxRetry: 3,\n\t          maxFragLookUpTolerance: 0.2,\n\t          liveSyncDurationCount: 3,\n\t          liveMaxLatencyDurationCount: Infinity,\n\t          liveSyncDuration: undefined,\n\t          liveMaxLatencyDuration: undefined,\n\t          enableWorker: true,\n\t          enableSoftwareAES: true,\n\t          manifestLoadingTimeOut: 10000,\n\t          manifestLoadingMaxRetry: 1,\n\t          manifestLoadingRetryDelay: 1000,\n\t          manifestLoadingMaxRetryTimeout: 64000,\n\t          startLevel: undefined,\n\t          levelLoadingTimeOut: 10000,\n\t          levelLoadingMaxRetry: 4,\n\t          levelLoadingRetryDelay: 1000,\n\t          levelLoadingMaxRetryTimeout: 64000,\n\t          fragLoadingTimeOut: 20000,\n\t          fragLoadingMaxRetry: 6,\n\t          fragLoadingRetryDelay: 1000,\n\t          fragLoadingMaxRetryTimeout: 64000,\n\t          fragLoadingLoopThreshold: 3,\n\t          startFragPrefetch: false,\n\t          fpsDroppedMonitoringPeriod: 5000,\n\t          fpsDroppedMonitoringThreshold: 0.2,\n\t          appendErrorMaxRetry: 3,\n\t          loader: _xhrLoader2.default,\n\t          //loader: FetchLoader,\n\t          fLoader: undefined,\n\t          pLoader: undefined,\n\t          xhrSetup: undefined,\n\t          fetchSetup: undefined,\n\t          abrController: _abrController2.default,\n\t          bufferController: _bufferController2.default,\n\t          capLevelController: _capLevelController2.default,\n\t          fpsController: _fpsController2.default,\n\t          streamController: _streamController2.default,\n\t          audioStreamController: _audioStreamController2.default,\n\t          timelineController: _timelineController2.default,\n\t          cueHandler: _cues2.default,\n\t          enableCEA708Captions: true,\n\t          enableMP2TPassThrough: false,\n\t          stretchShortVideoTrack: false,\n\t          forceKeyFrameOnDiscontinuity: true,\n\t          abrEwmaFastLive: 3,\n\t          abrEwmaSlowLive: 9,\n\t          abrEwmaFastVoD: 3,\n\t          abrEwmaSlowVoD: 9,\n\t          abrEwmaDefaultEstimate: 5e5, // 500 kbps\n\t          abrBandWidthFactor: 0.95,\n\t          abrBandWidthUpFactor: 0.7,\n\t          maxStarvationDelay: 4,\n\t          maxLoadingDelay: 4,\n\t          minAutoBitrate: 0\n\t        };\n\t      }\n\t      return Hls.defaultConfig;\n\t    },\n\t    set: function set(defaultConfig) {\n\t      Hls.defaultConfig = defaultConfig;\n\t    }\n\t  }]);\n\t\n\t  function Hls() {\n\t    var config = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\t\n\t    _classCallCheck(this, Hls);\n\t\n\t    var defaultConfig = Hls.DefaultConfig;\n\t\n\t    if ((config.liveSyncDurationCount || config.liveMaxLatencyDurationCount) && (config.liveSyncDuration || config.liveMaxLatencyDuration)) {\n\t      throw new Error('Illegal hls.js config: don\\'t mix up liveSyncDurationCount/liveMaxLatencyDurationCount and liveSyncDuration/liveMaxLatencyDuration');\n\t    }\n\t\n\t    for (var prop in defaultConfig) {\n\t      if (prop in config) {\n\t        continue;\n\t      }\n\t      config[prop] = defaultConfig[prop];\n\t    }\n\t\n\t    if (config.liveMaxLatencyDurationCount !== undefined && config.liveMaxLatencyDurationCount <= config.liveSyncDurationCount) {\n\t      throw new Error('Illegal hls.js config: \"liveMaxLatencyDurationCount\" must be gt \"liveSyncDurationCount\"');\n\t    }\n\t\n\t    if (config.liveMaxLatencyDuration !== undefined && (config.liveMaxLatencyDuration <= config.liveSyncDuration || config.liveSyncDuration === undefined)) {\n\t      throw new Error('Illegal hls.js config: \"liveMaxLatencyDuration\" must be gt \"liveSyncDuration\"');\n\t    }\n\t\n\t    (0, _logger.enableLogs)(config.debug);\n\t    this.config = config;\n\t    // observer setup\n\t    var observer = this.observer = new _events4.default();\n\t    observer.trigger = function trigger(event) {\n\t      for (var _len = arguments.length, data = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n\t        data[_key - 1] = arguments[_key];\n\t      }\n\t\n\t      observer.emit.apply(observer, [event, event].concat(data));\n\t    };\n\t\n\t    observer.off = function off(event) {\n\t      for (var _len2 = arguments.length, data = Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {\n\t        data[_key2 - 1] = arguments[_key2];\n\t      }\n\t\n\t      observer.removeListener.apply(observer, [event].concat(data));\n\t    };\n\t    this.on = observer.on.bind(observer);\n\t    this.off = observer.off.bind(observer);\n\t    this.trigger = observer.trigger.bind(observer);\n\t    this.playlistLoader = new _playlistLoader2.default(this);\n\t    this.fragmentLoader = new _fragmentLoader2.default(this);\n\t    this.levelController = new _levelController2.default(this);\n\t    this.abrController = new config.abrController(this);\n\t    this.bufferController = new config.bufferController(this);\n\t    this.capLevelController = new config.capLevelController(this);\n\t    this.fpsController = new config.fpsController(this);\n\t    this.streamController = new config.streamController(this);\n\t    this.audioStreamController = new config.audioStreamController(this);\n\t    this.timelineController = new config.timelineController(this);\n\t    this.audioTrackController = new _audioTrackController2.default(this);\n\t    this.keyLoader = new _keyLoader2.default(this);\n\t  }\n\t\n\t  _createClass(Hls, [{\n\t    key: 'destroy',\n\t    value: function destroy() {\n\t      _logger.logger.log('destroy');\n\t      this.trigger(_events2.default.DESTROYING);\n\t      this.detachMedia();\n\t      this.playlistLoader.destroy();\n\t      this.fragmentLoader.destroy();\n\t      this.levelController.destroy();\n\t      this.abrController.destroy();\n\t      this.bufferController.destroy();\n\t      this.capLevelController.destroy();\n\t      this.fpsController.destroy();\n\t      this.streamController.destroy();\n\t      this.audioStreamController.destroy();\n\t      this.timelineController.destroy();\n\t      this.audioTrackController.destroy();\n\t      this.keyLoader.destroy();\n\t      this.url = null;\n\t      this.observer.removeAllListeners();\n\t    }\n\t  }, {\n\t    key: 'attachMedia',\n\t    value: function attachMedia(media) {\n\t      _logger.logger.log('attachMedia');\n\t      this.media = media;\n\t      this.trigger(_events2.default.MEDIA_ATTACHING, { media: media });\n\t    }\n\t  }, {\n\t    key: 'detachMedia',\n\t    value: function detachMedia() {\n\t      _logger.logger.log('detachMedia');\n\t      this.trigger(_events2.default.MEDIA_DETACHING);\n\t      this.media = null;\n\t    }\n\t  }, {\n\t    key: 'loadSource',\n\t    value: function loadSource(url) {\n\t      _logger.logger.log('loadSource:' + url);\n\t      this.url = url;\n\t      // when attaching to a source URL, trigger a playlist load\n\t      this.trigger(_events2.default.MANIFEST_LOADING, { url: url });\n\t    }\n\t  }, {\n\t    key: 'startLoad',\n\t    value: function startLoad() {\n\t      var startPosition = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : -1;\n\t\n\t      _logger.logger.log('startLoad(' + startPosition + ')');\n\t      this.levelController.startLoad();\n\t      this.streamController.startLoad(startPosition);\n\t      this.audioStreamController.startLoad(startPosition);\n\t    }\n\t  }, {\n\t    key: 'stopLoad',\n\t    value: function stopLoad() {\n\t      _logger.logger.log('stopLoad');\n\t      this.levelController.stopLoad();\n\t      this.streamController.stopLoad();\n\t      this.audioStreamController.stopLoad();\n\t    }\n\t  }, {\n\t    key: 'swapAudioCodec',\n\t    value: function swapAudioCodec() {\n\t      _logger.logger.log('swapAudioCodec');\n\t      this.streamController.swapAudioCodec();\n\t    }\n\t  }, {\n\t    key: 'recoverMediaError',\n\t    value: function recoverMediaError() {\n\t      _logger.logger.log('recoverMediaError');\n\t      var media = this.media;\n\t      this.detachMedia();\n\t      this.attachMedia(media);\n\t    }\n\t\n\t    /** Return all quality levels **/\n\t\n\t  }, {\n\t    key: 'levels',\n\t    get: function get() {\n\t      return this.levelController.levels;\n\t    }\n\t\n\t    /** Return current playback quality level **/\n\t\n\t  }, {\n\t    key: 'currentLevel',\n\t    get: function get() {\n\t      return this.streamController.currentLevel;\n\t    }\n\t\n\t    /* set quality level immediately (-1 for automatic level selection) */\n\t    ,\n\t    set: function set(newLevel) {\n\t      _logger.logger.log('set currentLevel:' + newLevel);\n\t      this.loadLevel = newLevel;\n\t      this.streamController.immediateLevelSwitch();\n\t    }\n\t\n\t    /** Return next playback quality level (quality level of next fragment) **/\n\t\n\t  }, {\n\t    key: 'nextLevel',\n\t    get: function get() {\n\t      return this.streamController.nextLevel;\n\t    }\n\t\n\t    /* set quality level for next fragment (-1 for automatic level selection) */\n\t    ,\n\t    set: function set(newLevel) {\n\t      _logger.logger.log('set nextLevel:' + newLevel);\n\t      this.levelController.manualLevel = newLevel;\n\t      this.streamController.nextLevelSwitch();\n\t    }\n\t\n\t    /** Return the quality level of current/last loaded fragment **/\n\t\n\t  }, {\n\t    key: 'loadLevel',\n\t    get: function get() {\n\t      return this.levelController.level;\n\t    }\n\t\n\t    /* set quality level for current/next loaded fragment (-1 for automatic level selection) */\n\t    ,\n\t    set: function set(newLevel) {\n\t      _logger.logger.log('set loadLevel:' + newLevel);\n\t      this.levelController.manualLevel = newLevel;\n\t    }\n\t\n\t    /** Return the quality level of next loaded fragment **/\n\t\n\t  }, {\n\t    key: 'nextLoadLevel',\n\t    get: function get() {\n\t      return this.levelController.nextLoadLevel;\n\t    }\n\t\n\t    /** set quality level of next loaded fragment **/\n\t    ,\n\t    set: function set(level) {\n\t      this.levelController.nextLoadLevel = level;\n\t    }\n\t\n\t    /** Return first level (index of first level referenced in manifest)\n\t    **/\n\t\n\t  }, {\n\t    key: 'firstLevel',\n\t    get: function get() {\n\t      return Math.max(this.levelController.firstLevel, this.abrController.minAutoLevel);\n\t    }\n\t\n\t    /** set first level (index of first level referenced in manifest)\n\t    **/\n\t    ,\n\t    set: function set(newLevel) {\n\t      _logger.logger.log('set firstLevel:' + newLevel);\n\t      this.levelController.firstLevel = newLevel;\n\t    }\n\t\n\t    /** Return start level (level of first fragment that will be played back)\n\t        if not overrided by user, first level appearing in manifest will be used as start level\n\t        if -1 : automatic start level selection, playback will start from level matching download bandwidth (determined from download of first segment)\n\t    **/\n\t\n\t  }, {\n\t    key: 'startLevel',\n\t    get: function get() {\n\t      return this.levelController.startLevel;\n\t    }\n\t\n\t    /** set  start level (level of first fragment that will be played back)\n\t        if not overrided by user, first level appearing in manifest will be used as start level\n\t        if -1 : automatic start level selection, playback will start from level matching download bandwidth (determined from download of first segment)\n\t    **/\n\t    ,\n\t    set: function set(newLevel) {\n\t      _logger.logger.log('set startLevel:' + newLevel);\n\t      this.levelController.startLevel = newLevel;\n\t    }\n\t\n\t    /** Return the capping/max level value that could be used by automatic level selection algorithm **/\n\t\n\t  }, {\n\t    key: 'autoLevelCapping',\n\t    get: function get() {\n\t      return this.abrController.autoLevelCapping;\n\t    }\n\t\n\t    /** set the capping/max level value that could be used by automatic level selection algorithm **/\n\t    ,\n\t    set: function set(newLevel) {\n\t      _logger.logger.log('set autoLevelCapping:' + newLevel);\n\t      this.abrController.autoLevelCapping = newLevel;\n\t    }\n\t\n\t    /* check if we are in automatic level selection mode */\n\t\n\t  }, {\n\t    key: 'autoLevelEnabled',\n\t    get: function get() {\n\t      return this.levelController.manualLevel === -1;\n\t    }\n\t\n\t    /* return manual level */\n\t\n\t  }, {\n\t    key: 'manualLevel',\n\t    get: function get() {\n\t      return this.levelController.manualLevel;\n\t    }\n\t\n\t    /** get alternate audio tracks list from playlist **/\n\t\n\t  }, {\n\t    key: 'audioTracks',\n\t    get: function get() {\n\t      return this.audioTrackController.audioTracks;\n\t    }\n\t\n\t    /** get index of the selected audio track (index in audio track lists) **/\n\t\n\t  }, {\n\t    key: 'audioTrack',\n\t    get: function get() {\n\t      return this.audioTrackController.audioTrack;\n\t    }\n\t\n\t    /** select an audio track, based on its index in audio track lists**/\n\t    ,\n\t    set: function set(audioTrackId) {\n\t      this.audioTrackController.audioTrack = audioTrackId;\n\t    }\n\t  }, {\n\t    key: 'liveSyncPosition',\n\t    get: function get() {\n\t      return this.streamController.liveSyncPosition;\n\t    }\n\t  }]);\n\t\n\t  return Hls;\n\t}();\n\t\n\texports.default = Hls;\n\t\n\t},{\"1\":1,\"10\":10,\"11\":11,\"12\":12,\"13\":13,\"26\":26,\"28\":28,\"34\":34,\"35\":35,\"36\":36,\"4\":4,\"43\":43,\"45\":45,\"47\":47,\"5\":5,\"6\":6,\"7\":7,\"8\":8}],33:[function(_dereq_,module,exports){\n\t'use strict';\n\t\n\t// This is mostly for support of the es6 module export\n\t// syntax with the babel compiler, it looks like it doesnt support\n\t// function exports like we are used to in node/commonjs\n\tmodule.exports = _dereq_(32).default;\n\t\n\t},{\"32\":32}],34:[function(_dereq_,module,exports){\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _events = _dereq_(28);\n\t\n\tvar _events2 = _interopRequireDefault(_events);\n\t\n\tvar _eventHandler = _dereq_(27);\n\t\n\tvar _eventHandler2 = _interopRequireDefault(_eventHandler);\n\t\n\tvar _errors = _dereq_(26);\n\t\n\tvar _logger = _dereq_(45);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /*\n\t                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * Fragment Loader\n\t                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               */\n\t\n\tvar FragmentLoader = function (_EventHandler) {\n\t  _inherits(FragmentLoader, _EventHandler);\n\t\n\t  function FragmentLoader(hls) {\n\t    _classCallCheck(this, FragmentLoader);\n\t\n\t    var _this = _possibleConstructorReturn(this, (FragmentLoader.__proto__ || Object.getPrototypeOf(FragmentLoader)).call(this, hls, _events2.default.FRAG_LOADING));\n\t\n\t    _this.loaders = {};\n\t    return _this;\n\t  }\n\t\n\t  _createClass(FragmentLoader, [{\n\t    key: 'destroy',\n\t    value: function destroy() {\n\t      var loaders = this.loaders;\n\t      for (var loaderName in loaders) {\n\t        var loader = loaders[loaderName];\n\t        if (loader) {\n\t          loader.destroy();\n\t        }\n\t      }\n\t      this.loaders = {};\n\t      _eventHandler2.default.prototype.destroy.call(this);\n\t    }\n\t  }, {\n\t    key: 'onFragLoading',\n\t    value: function onFragLoading(data) {\n\t      var frag = data.frag,\n\t          type = frag.type,\n\t          loader = this.loaders[type],\n\t          config = this.hls.config;\n\t\n\t      frag.loaded = 0;\n\t      if (loader) {\n\t        _logger.logger.warn('abort previous fragment loader for type:' + type);\n\t        loader.abort();\n\t      }\n\t      loader = this.loaders[type] = frag.loader = typeof config.fLoader !== 'undefined' ? new config.fLoader(config) : new config.loader(config);\n\t\n\t      var loaderContext = void 0,\n\t          loaderConfig = void 0,\n\t          loaderCallbacks = void 0;\n\t      loaderContext = { url: frag.url, frag: frag, responseType: 'arraybuffer', progressData: false };\n\t      var start = frag.byteRangeStartOffset,\n\t          end = frag.byteRangeEndOffset;\n\t      if (!isNaN(start) && !isNaN(end)) {\n\t        loaderContext.rangeStart = start;\n\t        loaderContext.rangeEnd = end;\n\t      }\n\t      loaderConfig = { timeout: config.fragLoadingTimeOut, maxRetry: 0, retryDelay: 0, maxRetryDelay: config.fragLoadingMaxRetryTimeout };\n\t      loaderCallbacks = { onSuccess: this.loadsuccess.bind(this), onError: this.loaderror.bind(this), onTimeout: this.loadtimeout.bind(this), onProgress: this.loadprogress.bind(this) };\n\t      loader.load(loaderContext, loaderConfig, loaderCallbacks);\n\t    }\n\t  }, {\n\t    key: 'loadsuccess',\n\t    value: function loadsuccess(response, stats, context) {\n\t      var payload = response.data,\n\t          frag = context.frag;\n\t      // detach fragment loader on load success\n\t      frag.loader = undefined;\n\t      this.loaders[frag.type] = undefined;\n\t      this.hls.trigger(_events2.default.FRAG_LOADED, { payload: payload, frag: frag, stats: stats });\n\t    }\n\t  }, {\n\t    key: 'loaderror',\n\t    value: function loaderror(response, context) {\n\t      var loader = context.loader;\n\t      if (loader) {\n\t        loader.abort();\n\t      }\n\t      this.loaders[context.type] = undefined;\n\t      this.hls.trigger(_events2.default.ERROR, { type: _errors.ErrorTypes.NETWORK_ERROR, details: _errors.ErrorDetails.FRAG_LOAD_ERROR, fatal: false, frag: context.frag, response: response });\n\t    }\n\t  }, {\n\t    key: 'loadtimeout',\n\t    value: function loadtimeout(stats, context) {\n\t      var loader = context.loader;\n\t      if (loader) {\n\t        loader.abort();\n\t      }\n\t      this.loaders[context.type] = undefined;\n\t      this.hls.trigger(_events2.default.ERROR, { type: _errors.ErrorTypes.NETWORK_ERROR, details: _errors.ErrorDetails.FRAG_LOAD_TIMEOUT, fatal: false, frag: context.frag });\n\t    }\n\t\n\t    // data will be used for progressive parsing\n\t\n\t  }, {\n\t    key: 'loadprogress',\n\t    value: function loadprogress(stats, context, data) {\n\t      // jshint ignore:line\n\t      var frag = context.frag;\n\t      frag.loaded = stats.loaded;\n\t      this.hls.trigger(_events2.default.FRAG_LOAD_PROGRESS, { frag: frag, stats: stats });\n\t    }\n\t  }]);\n\t\n\t  return FragmentLoader;\n\t}(_eventHandler2.default);\n\t\n\texports.default = FragmentLoader;\n\t\n\t},{\"26\":26,\"27\":27,\"28\":28,\"45\":45}],35:[function(_dereq_,module,exports){\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _events = _dereq_(28);\n\t\n\tvar _events2 = _interopRequireDefault(_events);\n\t\n\tvar _eventHandler = _dereq_(27);\n\t\n\tvar _eventHandler2 = _interopRequireDefault(_eventHandler);\n\t\n\tvar _errors = _dereq_(26);\n\t\n\tvar _logger = _dereq_(45);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /*\n\t                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * Decrypt key Loader\n\t                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               */\n\t\n\tvar KeyLoader = function (_EventHandler) {\n\t  _inherits(KeyLoader, _EventHandler);\n\t\n\t  function KeyLoader(hls) {\n\t    _classCallCheck(this, KeyLoader);\n\t\n\t    var _this = _possibleConstructorReturn(this, (KeyLoader.__proto__ || Object.getPrototypeOf(KeyLoader)).call(this, hls, _events2.default.KEY_LOADING));\n\t\n\t    _this.loaders = {};\n\t    _this.decryptkey = null;\n\t    _this.decrypturl = null;\n\t    return _this;\n\t  }\n\t\n\t  _createClass(KeyLoader, [{\n\t    key: 'destroy',\n\t    value: function destroy() {\n\t      for (var loaderName in this.loaders) {\n\t        var loader = this.loaders[loaderName];\n\t        if (loader) {\n\t          loader.destroy();\n\t        }\n\t      }\n\t      this.loaders = {};\n\t      _eventHandler2.default.prototype.destroy.call(this);\n\t    }\n\t  }, {\n\t    key: 'onKeyLoading',\n\t    value: function onKeyLoading(data) {\n\t      var frag = data.frag,\n\t          type = frag.type,\n\t          loader = this.loaders[type],\n\t          decryptdata = frag.decryptdata,\n\t          uri = decryptdata.uri;\n\t      // if uri is different from previous one or if decrypt key not retrieved yet\n\t      if (uri !== this.decrypturl || this.decryptkey === null) {\n\t        var config = this.hls.config;\n\t\n\t        if (loader) {\n\t          _logger.logger.warn('abort previous key loader for type:' + type);\n\t          loader.abort();\n\t        }\n\t        frag.loader = this.loaders[type] = new config.loader(config);\n\t        this.decrypturl = uri;\n\t        this.decryptkey = null;\n\t\n\t        var loaderContext = void 0,\n\t            loaderConfig = void 0,\n\t            loaderCallbacks = void 0;\n\t        loaderContext = { url: uri, frag: frag, responseType: 'arraybuffer' };\n\t        loaderConfig = { timeout: config.fragLoadingTimeOut, maxRetry: config.fragLoadingMaxRetry, retryDelay: config.fragLoadingRetryDelay, maxRetryDelay: config.fragLoadingMaxRetryTimeout };\n\t        loaderCallbacks = { onSuccess: this.loadsuccess.bind(this), onError: this.loaderror.bind(this), onTimeout: this.loadtimeout.bind(this) };\n\t        frag.loader.load(loaderContext, loaderConfig, loaderCallbacks);\n\t      } else if (this.decryptkey) {\n\t        // we already loaded this key, return it\n\t        decryptdata.key = this.decryptkey;\n\t        this.hls.trigger(_events2.default.KEY_LOADED, { frag: frag });\n\t      }\n\t    }\n\t  }, {\n\t    key: 'loadsuccess',\n\t    value: function loadsuccess(response, stats, context) {\n\t      var frag = context.frag;\n\t      this.decryptkey = frag.decryptdata.key = new Uint8Array(response.data);\n\t      // detach fragment loader on load success\n\t      frag.loader = undefined;\n\t      this.loaders[frag.type] = undefined;\n\t      this.hls.trigger(_events2.default.KEY_LOADED, { frag: frag });\n\t    }\n\t  }, {\n\t    key: 'loaderror',\n\t    value: function loaderror(response, context) {\n\t      var frag = context.frag,\n\t          loader = frag.loader;\n\t      if (loader) {\n\t        loader.abort();\n\t      }\n\t      this.loaders[context.type] = undefined;\n\t      this.hls.trigger(_events2.default.ERROR, { type: _errors.ErrorTypes.NETWORK_ERROR, details: _errors.ErrorDetails.KEY_LOAD_ERROR, fatal: false, frag: frag, response: response });\n\t    }\n\t  }, {\n\t    key: 'loadtimeout',\n\t    value: function loadtimeout(stats, context) {\n\t      var frag = context.frag,\n\t          loader = frag.loader;\n\t      if (loader) {\n\t        loader.abort();\n\t      }\n\t      this.loaders[context.type] = undefined;\n\t      this.hls.trigger(_events2.default.ERROR, { type: _errors.ErrorTypes.NETWORK_ERROR, details: _errors.ErrorDetails.KEY_LOAD_TIMEOUT, fatal: false, frag: frag });\n\t    }\n\t  }]);\n\t\n\t  return KeyLoader;\n\t}(_eventHandler2.default);\n\t\n\texports.default = KeyLoader;\n\t\n\t},{\"26\":26,\"27\":27,\"28\":28,\"45\":45}],36:[function(_dereq_,module,exports){\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }(); /**\n\tlaylist Loader\n\tn\t\n\tvar _urlToolkit = _dereq_(2);\n\t\n\tvar _urlToolkit2 = _interopRequireDefault(_urlToolkit);\n\t\n\tvar _events = _dereq_(28);\n\t\n\tvar _events2 = _interopRequireDefault(_events);\n\t\n\tvar _eventHandler = _dereq_(27);\n\t\n\tvar _eventHandler2 = _interopRequireDefault(_eventHandler);\n\t\n\tvar _errors = _dereq_(26);\n\t\n\tvar _attrList = _dereq_(40);\n\t\n\tvar _attrList2 = _interopRequireDefault(_attrList);\n\t\n\tvar _logger = _dereq_(45);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\t// https://regex101.com is your friend\n\tvar MASTER_PLAYLIST_REGEX = /#EXT-X-STREAM-INF:([^\\n\\r]*)[\\r\\n]+([^\\r\\n]+)/g;\n\tvar MASTER_PLAYLIST_MEDIA_REGEX = /#EXT-X-MEDIA:(.*)/g;\n\tvar LEVEL_PLAYLIST_REGEX_FAST = /#EXTINF:(\\d*(?:\\.\\d+)?)(?:,(.*))?|(?!#)(\\S.+)|#EXT-X-BYTERANGE: *(.+)|#EXT-X-PROGRAM-DATE-TIME:(.+)|#.*/g;\n\tvar LEVEL_PLAYLIST_REGEX_SLOW = /(?:(?:#(EXTM3U))|(?:#EXT-X-(PLAYLIST-TYPE):(.+))|(?:#EXT-X-(MEDIA-SEQUENCE): *(\\d+))|(?:#EXT-X-(TARGETDURATION): *(\\d+))|(?:#EXT-X-(KEY):(.+))|(?:#EXT-X-(START):(.+))|(?:#EXT-X-(ENDLIST))|(?:#EXT-X-(DISCONTINUITY-SEQ)UENCE:(\\d+))|(?:#EXT-X-(DIS)CONTINUITY))|(?:#EXT-X-(VERSION):(\\d+))|(?:#EXT-X-(MAP):(.+))|(?:(#)(.*):(.*))|(?:(#)(.*))(?:.*)\\r?\\n?/;\n\t\n\tvar LevelKey = function () {\n\t  function LevelKey() {\n\t    _classCallCheck(this, LevelKey);\n\t\n\t    this.method = null;\n\t    this.key = null;\n\t    this.iv = null;\n\t    this._uri = null;\n\t  }\n\t\n\t  _createClass(LevelKey, [{\n\t    key: 'uri',\n\t    get: function get() {\n\t      if (!this._uri && this.reluri) {\n\t        this._uri = _urlToolkit2.default.buildAbsoluteURL(this.baseuri, this.reluri);\n\t      }\n\t      return this._uri;\n\t    }\n\t  }]);\n\t\n\t  return LevelKey;\n\t}();\n\t\n\tvar Fragment = function () {\n\t  function Fragment() {\n\t    _classCallCheck(this, Fragment);\n\t\n\t    this._url = null;\n\t    this._byteRange = null;\n\t    this._decryptdata = null;\n\t    this.tagList = [];\n\t  }\n\t\n\t  _createClass(Fragment, [{\n\t    key: 'createInitializationVector',\n\t\n\t\n\t    /**\n\t     * Utility method for parseLevelPlaylist to create an initialization vector for a given segment\n\t     * @returns {Uint8Array}\n\t     */\n\t    value: function createInitializationVector(segmentNumber) {\n\t      var uint8View = new Uint8Array(16);\n\t\n\t      for (var i = 12; i < 16; i++) {\n\t        uint8View[i] = segmentNumber >> 8 * (15 - i) & 0xff;\n\t      }\n\t\n\t      return uint8View;\n\t    }\n\t\n\t    /**\n\t     * Utility method for parseLevelPlaylist to get a fragment's decryption data from the currently parsed encryption key data\n\t     * @param levelkey - a playlist's encryption info\n\t     * @param segmentNumber - the fragment's segment number\n\t     * @returns {*} - an object to be applied as a fragment's decryptdata\n\t     */\n\t\n\t  }, {\n\t    key: 'fragmentDecryptdataFromLevelkey',\n\t    value: function fragmentDecryptdataFromLevelkey(levelkey, segmentNumber) {\n\t      var decryptdata = levelkey;\n\t\n\t      if (levelkey && levelkey.method && levelkey.uri && !levelkey.iv) {\n\t        decryptdata = new LevelKey();\n\t        decryptdata.method = levelkey.method;\n\t        decryptdata.baseuri = levelkey.baseuri;\n\t        decryptdata.reluri = levelkey.reluri;\n\t        decryptdata.iv = this.createInitializationVector(segmentNumber);\n\t      }\n\t\n\t      return decryptdata;\n\t    }\n\t  }, {\n\t    key: 'cloneObj',\n\t    value: function cloneObj(obj) {\n\t      return JSON.parse(JSON.stringify(obj));\n\t    }\n\t  }, {\n\t    key: 'url',\n\t    get: function get() {\n\t      if (!this._url && this.relurl) {\n\t        this._url = _urlToolkit2.default.buildAbsoluteURL(this.baseurl, this.relurl);\n\t      }\n\t      return this._url;\n\t    },\n\t    set: function set(value) {\n\t      this._url = value;\n\t    }\n\t  }, {\n\t    key: 'programDateTime',\n\t    get: function get() {\n\t      if (!this._programDateTime && this.rawProgramDateTime) {\n\t        this._programDateTime = new Date(Date.parse(this.rawProgramDateTime));\n\t      }\n\t      return this._programDateTime;\n\t    }\n\t  }, {\n\t    key: 'byteRange',\n\t    get: function get() {\n\t      if (!this._byteRange) {\n\t        var byteRange = this._byteRange = [];\n\t        if (this.rawByteRange) {\n\t          var params = this.rawByteRange.split('@', 2);\n\t          if (params.length === 1) {\n\t            var lastByteRangeEndOffset = this.lastByteRangeEndOffset;\n\t            byteRange[0] = lastByteRangeEndOffset ? lastByteRangeEndOffset : 0;\n\t          } else {\n\t            byteRange[0] = parseInt(params[1]);\n\t          }\n\t          byteRange[1] = parseInt(params[0]) + byteRange[0];\n\t        }\n\t      }\n\t      return this._byteRange;\n\t    }\n\t  }, {\n\t    key: 'byteRangeStartOffset',\n\t    get: function get() {\n\t      return this.byteRange[0];\n\t    }\n\t  }, {\n\t    key: 'byteRangeEndOffset',\n\t    get: function get() {\n\t      return this.byteRange[1];\n\t    }\n\t  }, {\n\t    key: 'decryptdata',\n\t    get: function get() {\n\t      if (!this._decryptdata) {\n\t        this._decryptdata = this.fragmentDecryptdataFromLevelkey(this.levelkey, this.sn);\n\t      }\n\t      return this._decryptdata;\n\t    }\n\t  }]);\n\t\n\t  return Fragment;\n\t}();\n\t\n\tvar PlaylistLoader = function (_EventHandler) {\n\t  _inherits(PlaylistLoader, _EventHandler);\n\t\n\t  function PlaylistLoader(hls) {\n\t    _classCallCheck(this, PlaylistLoader);\n\t\n\t    var _this = _possibleConstructorReturn(this, (PlaylistLoader.__proto__ || Object.getPrototypeOf(PlaylistLoader)).call(this, hls, _events2.default.MANIFEST_LOADING, _events2.default.LEVEL_LOADING, _events2.default.AUDIO_TRACK_LOADING));\n\t\n\t    _this.loaders = {};\n\t    return _this;\n\t  }\n\t\n\t  _createClass(PlaylistLoader, [{\n\t    key: 'destroy',\n\t    value: function destroy() {\n\t      for (var loaderName in this.loaders) {\n\t        var loader = this.loaders[loaderName];\n\t        if (loader) {\n\t          loader.destroy();\n\t        }\n\t      }\n\t      this.loaders = {};\n\t      _eventHandler2.default.prototype.destroy.call(this);\n\t    }\n\t  }, {\n\t    key: 'onManifestLoading',\n\t    value: function onManifestLoading(data) {\n\t      this.load(data.url, { type: 'manifest' });\n\t    }\n\t  }, {\n\t    key: 'onLevelLoading',\n\t    value: function onLevelLoading(data) {\n\t      this.load(data.url, { type: 'level', level: data.level, id: data.id });\n\t    }\n\t  }, {\n\t    key: 'onAudioTrackLoading',\n\t    value: function onAudioTrackLoading(data) {\n\t      this.load(data.url, { type: 'audioTrack', id: data.id });\n\t    }\n\t  }, {\n\t    key: 'load',\n\t    value: function load(url, context) {\n\t      var loader = this.loaders[context.type];\n\t      if (loader) {\n\t        var loaderContext = loader.context;\n\t        if (loaderContext && loaderContext.url === url) {\n\t          _logger.logger.trace('playlist request ongoing');\n\t          return;\n\t        } else {\n\t          _logger.logger.warn('abort previous loader for type:' + context.type);\n\t          loader.abort();\n\t        }\n\t      }\n\t      var config = this.hls.config,\n\t          retry = void 0,\n\t          timeout = void 0,\n\t          retryDelay = void 0,\n\t          maxRetryDelay = void 0;\n\t      if (context.type === 'manifest') {\n\t        retry = config.manifestLoadingMaxRetry;\n\t        timeout = config.manifestLoadingTimeOut;\n\t        retryDelay = config.manifestLoadingRetryDelay;\n\t        maxRetryDelay = config.manifestLoadingMaxRetryTimeout;\n\t      } else {\n\t        retry = config.levelLoadingMaxRetry;\n\t        timeout = config.levelLoadingTimeOut;\n\t        retryDelay = config.levelLoadingRetryDelay;\n\t        maxRetryDelay = config.levelLoadingMaxRetryTimeout;\n\t        _logger.logger.log('loading playlist for ' + context.type + ' ' + (context.level || context.id));\n\t      }\n\t      loader = this.loaders[context.type] = context.loader = typeof config.pLoader !== 'undefined' ? new config.pLoader(config) : new config.loader(config);\n\t      context.url = url;\n\t      context.responseType = '';\n\t\n\t      var loaderConfig = void 0,\n\t          loaderCallbacks = void 0;\n\t      loaderConfig = { timeout: timeout, maxRetry: retry, retryDelay: retryDelay, maxRetryDelay: maxRetryDelay };\n\t      loaderCallbacks = { onSuccess: this.loadsuccess.bind(this), onError: this.loaderror.bind(this), onTimeout: this.loadtimeout.bind(this) };\n\t      loader.load(context, loaderConfig, loaderCallbacks);\n\t    }\n\t  }, {\n\t    key: 'resolve',\n\t    value: function resolve(url, baseUrl) {\n\t      return _urlToolkit2.default.buildAbsoluteURL(baseUrl, url);\n\t    }\n\t  }, {\n\t    key: 'parseMasterPlaylist',\n\t    value: function parseMasterPlaylist(string, baseurl) {\n\t      var levels = [],\n\t          result = void 0;\n\t      MASTER_PLAYLIST_REGEX.lastIndex = 0;\n\t      while ((result = MASTER_PLAYLIST_REGEX.exec(string)) != null) {\n\t        var level = {};\n\t\n\t        var attrs = level.attrs = new _attrList2.default(result[1]);\n\t        level.url = this.resolve(result[2], baseurl);\n\t\n\t        var resolution = attrs.decimalResolution('RESOLUTION');\n\t        if (resolution) {\n\t          level.width = resolution.width;\n\t          level.height = resolution.height;\n\t        }\n\t        level.bitrate = attrs.decimalInteger('AVERAGE-BANDWIDTH') || attrs.decimalInteger('BANDWIDTH');\n\t        level.name = attrs.NAME;\n\t\n\t        var codecs = attrs.CODECS;\n\t        if (codecs) {\n\t          codecs = codecs.split(/[ ,]+/);\n\t          for (var i = 0; i < codecs.length; i++) {\n\t            var codec = codecs[i];\n\t            if (codec.indexOf('avc1') !== -1) {\n\t              level.videoCodec = this.avc1toavcoti(codec);\n\t            } else {\n\t              level.audioCodec = codec;\n\t            }\n\t          }\n\t        }\n\t\n\t        levels.push(level);\n\t      }\n\t      return levels;\n\t    }\n\t  }, {\n\t    key: 'parseMasterPlaylistMedia',\n\t    value: function parseMasterPlaylistMedia(string, baseurl, type) {\n\t      var result = void 0,\n\t          medias = [];\n\t      MASTER_PLAYLIST_MEDIA_REGEX.lastIndex = 0;\n\t      while ((result = MASTER_PLAYLIST_MEDIA_REGEX.exec(string)) != null) {\n\t        var media = {};\n\t        var attrs = new _attrList2.default(result[1]);\n\t        if (attrs.TYPE === type) {\n\t          media.groupId = attrs['GROUP-ID'];\n\t          media.name = attrs.NAME;\n\t          media.type = type;\n\t          media.default = attrs.DEFAULT === 'YES';\n\t          media.autoselect = attrs.AUTOSELECT === 'YES';\n\t          media.forced = attrs.FORCED === 'YES';\n\t          if (attrs.URI) {\n\t            media.url = this.resolve(attrs.URI, baseurl);\n\t          }\n\t          media.lang = attrs.LANGUAGE;\n\t          if (!media.name) {\n\t            media.name = media.lang;\n\t          }\n\t          medias.push(media);\n\t        }\n\t      }\n\t      return medias;\n\t    }\n\t  }, {\n\t    key: 'avc1toavcoti',\n\t    value: function avc1toavcoti(codec) {\n\t      var result,\n\t          avcdata = codec.split('.');\n\t      if (avcdata.length > 2) {\n\t        result = avcdata.shift() + '.';\n\t        result += parseInt(avcdata.shift()).toString(16);\n\t        result += ('000' + parseInt(avcdata.shift()).toString(16)).substr(-4);\n\t      } else {\n\t        result = codec;\n\t      }\n\t      return result;\n\t    }\n\t  }, {\n\t    key: 'parseLevelPlaylist',\n\t    value: function parseLevelPlaylist(string, baseurl, id, type) {\n\t      var currentSN = 0,\n\t          totalduration = 0,\n\t          level = { type: null, version: null, url: baseurl, fragments: [], live: true, startSN: 0 },\n\t          levelkey = new LevelKey(),\n\t          cc = 0,\n\t          prevFrag = null,\n\t          frag = new Fragment(),\n\t          result,\n\t          i;\n\t\n\t      LEVEL_PLAYLIST_REGEX_FAST.lastIndex = 0;\n\t\n\t      while ((result = LEVEL_PLAYLIST_REGEX_FAST.exec(string)) !== null) {\n\t        var duration = result[1];\n\t        if (duration) {\n\t          // INF\n\t          frag.duration = parseFloat(duration);\n\t          // avoid sliced strings    https://github.com/dailymotion/hls.js/issues/939\n\t          var title = (' ' + result[2]).slice(1);\n\t          frag.title = title ? title : null;\n\t          frag.tagList.push(title ? ['INF', duration, title] : ['INF', duration]);\n\t        } else if (result[3]) {\n\t          // url\n\t          if (!isNaN(frag.duration)) {\n\t            var sn = currentSN++;\n\t            frag.type = type;\n\t            frag.start = totalduration;\n\t            frag.levelkey = levelkey;\n\t            frag.sn = sn;\n\t            frag.level = id;\n\t            frag.cc = cc;\n\t            frag.baseurl = baseurl;\n\t            // avoid sliced strings    https://github.com/dailymotion/hls.js/issues/939\n\t            frag.relurl = (' ' + result[3]).slice(1);\n\t\n\t            level.fragments.push(frag);\n\t            prevFrag = frag;\n\t            totalduration += frag.duration;\n\t\n\t            frag = new Fragment();\n\t          }\n\t        } else if (result[4]) {\n\t          // X-BYTERANGE\n\t          frag.rawByteRange = (' ' + result[4]).slice(1);\n\t          if (prevFrag) {\n\t            var lastByteRangeEndOffset = prevFrag.byteRangeEndOffset;\n\t            if (lastByteRangeEndOffset) {\n\t              frag.lastByteRangeEndOffset = lastByteRangeEndOffset;\n\t            }\n\t          }\n\t        } else if (result[5]) {\n\t          // PROGRAM-DATE-TIME\n\t          // avoid sliced strings    https://github.com/dailymotion/hls.js/issues/939\n\t          frag.rawProgramDateTime = (' ' + result[5]).slice(1);\n\t          frag.tagList.push(['PROGRAM-DATE-TIME', frag.rawProgramDateTime]);\n\t        } else {\n\t          result = result[0].match(LEVEL_PLAYLIST_REGEX_SLOW);\n\t          for (i = 1; i < result.length; i++) {\n\t            if (result[i] !== undefined) {\n\t              break;\n\t            }\n\t          }\n\t\n\t          // avoid sliced strings    https://github.com/dailymotion/hls.js/issues/939\n\t          var value1 = (' ' + result[i + 1]).slice(1);\n\t          var value2 = (' ' + result[i + 2]).slice(1);\n\t\n\t          switch (result[i]) {\n\t            case '#':\n\t              frag.tagList.push(value2 ? [value1, value2] : [value1]);\n\t              break;\n\t            case 'PLAYLIST-TYPE':\n\t              level.type = value1.toUpperCase();\n\t              break;\n\t            case 'MEDIA-SEQUENCE':\n\t              currentSN = level.startSN = parseInt(value1);\n\t              break;\n\t            case 'TARGETDURATION':\n\t              level.targetduration = parseFloat(value1);\n\t              break;\n\t            case 'VERSION':\n\t              level.version = parseInt(value1);\n\t              break;\n\t            case 'EXTM3U':\n\t              break;\n\t            case 'ENDLIST':\n\t              level.live = false;\n\t              break;\n\t            case 'DIS':\n\t              cc++;\n\t              frag.tagList.push(['DIS']);\n\t              break;\n\t            case 'DISCONTINUITY-SEQ':\n\t              cc = parseInt(value1);\n\t              break;\n\t            case 'KEY':\n\t              // https://tools.ietf.org/html/draft-pantos-http-live-streaming-08#section-3.4.4\n\t              var decryptparams = value1;\n\t              var keyAttrs = new _attrList2.default(decryptparams);\n\t              var decryptmethod = keyAttrs.enumeratedString('METHOD'),\n\t                  decrypturi = keyAttrs.URI,\n\t                  decryptiv = keyAttrs.hexadecimalInteger('IV');\n\t              if (decryptmethod) {\n\t                levelkey = new LevelKey();\n\t                if (decrypturi && decryptmethod === 'AES-128') {\n\t                  levelkey.method = decryptmethod;\n\t                  // URI to get the key\n\t                  levelkey.baseuri = baseurl;\n\t                  levelkey.reluri = decrypturi;\n\t                  levelkey.key = null;\n\t                  // Initialization Vector (IV)\n\t                  levelkey.iv = decryptiv;\n\t                }\n\t              }\n\t              break;\n\t            case 'START':\n\t              var startParams = value1;\n\t              var startAttrs = new _attrList2.default(startParams);\n\t              var startTimeOffset = startAttrs.decimalFloatingPoint('TIME-OFFSET');\n\t              //TIME-OFFSET can be 0\n\t              if (!isNaN(startTimeOffset)) {\n\t                level.startTimeOffset = startTimeOffset;\n\t              }\n\t              break;\n\t            case 'MAP':\n\t              var mapAttrs = new _attrList2.default(value1);\n\t              frag.relurl = mapAttrs.URI;\n\t              frag.rawByteRange = mapAttrs.BYTERANGE;\n\t              frag.baseurl = baseurl;\n\t              frag.level = id;\n\t              frag.type = type;\n\t              frag.sn = 'initSegment';\n\t              level.initSegment = frag;\n\t              frag = new Fragment();\n\t              break;\n\t            default:\n\t              _logger.logger.warn('line parsed but not handled: ' + result);\n\t              break;\n\t          }\n\t        }\n\t      }\n\t      frag = prevFrag;\n\t      //logger.log('found ' + level.fragments.length + ' fragments');\n\t      if (frag && !frag.relurl) {\n\t        level.fragments.pop();\n\t        totalduration -= frag.duration;\n\t      }\n\t      level.totalduration = totalduration;\n\t      level.averagetargetduration = totalduration / level.fragments.length;\n\t      level.endSN = currentSN - 1;\n\t      return level;\n\t    }\n\t  }, {\n\t    key: 'loadsuccess',\n\t    value: function loadsuccess(response, stats, context) {\n\t      var string = response.data,\n\t          url = response.url,\n\t          type = context.type,\n\t          id = context.id,\n\t          level = context.level,\n\t          hls = this.hls;\n\t\n\t      this.loaders[type] = undefined;\n\t      // responseURL not supported on some browsers (it is used to detect URL redirection)\n\t      // data-uri mode also not supported (but no need to detect redirection)\n\t      if (url === undefined || url.indexOf('data:') === 0) {\n\t        // fallback to initial URL\n\t        url = context.url;\n\t      }\n\t      stats.tload = performance.now();\n\t      //stats.mtime = new Date(target.getResponseHeader('Last-Modified'));\n\t      if (string.indexOf('#EXTM3U') === 0) {\n\t        if (string.indexOf('#EXTINF:') > 0) {\n\t          var isLevel = type !== 'audioTrack',\n\t              levelDetails = this.parseLevelPlaylist(string, url, (isLevel ? level : id) || 0, isLevel ? 'main' : 'audio');\n\t          if (type === 'manifest') {\n\t            // first request, stream manifest (no master playlist), fire manifest loaded event with level details\n\t            hls.trigger(_events2.default.MANIFEST_LOADED, { levels: [{ url: url, details: levelDetails }], audioTracks: [], url: url, stats: stats });\n\t          }\n\t          stats.tparsed = performance.now();\n\t          if (levelDetails.targetduration) {\n\t            if (isLevel) {\n\t              hls.trigger(_events2.default.LEVEL_LOADED, { details: levelDetails, level: level || 0, id: id || 0, stats: stats });\n\t            } else {\n\t              hls.trigger(_events2.default.AUDIO_TRACK_LOADED, { details: levelDetails, id: id, stats: stats });\n\t            }\n\t          } else {\n\t            hls.trigger(_events2.default.ERROR, { type: _errors.ErrorTypes.NETWORK_ERROR, details: _errors.ErrorDetails.MANIFEST_PARSING_ERROR, fatal: true, url: url, reason: 'invalid targetduration' });\n\t          }\n\t        } else {\n\t          var levels = this.parseMasterPlaylist(string, url);\n\t          // multi level playlist, parse level info\n\t          if (levels.length) {\n\t            var audiotracks = this.parseMasterPlaylistMedia(string, url, 'AUDIO');\n\t            if (audiotracks.length) {\n\t              // check if we have found an audio track embedded in main playlist (audio track without URI attribute)\n\t              var embeddedAudioFound = false;\n\t              audiotracks.forEach(function (audioTrack) {\n\t                if (!audioTrack.url) {\n\t                  embeddedAudioFound = true;\n\t                }\n\t              });\n\t              // if no embedded audio track defined, but audio codec signaled in quality level, we need to signal this main audio track\n\t              // this could happen with playlists with alt audio rendition in which quality levels (main) contains both audio+video. but with mixed audio track not signaled\n\t              if (embeddedAudioFound === false && levels[0].audioCodec && !levels[0].attrs.AUDIO) {\n\t                _logger.logger.log('audio codec signaled in quality level, but no embedded audio track signaled, create one');\n\t                audiotracks.unshift({ type: 'main', name: 'main' });\n\t              }\n\t            }\n\t            hls.trigger(_events2.default.MANIFEST_LOADED, { levels: levels, audioTracks: audiotracks, url: url, stats: stats });\n\t          } else {\n\t            hls.trigger(_events2.default.ERROR, { type: _errors.ErrorTypes.NETWORK_ERROR, details: _errors.ErrorDetails.MANIFEST_PARSING_ERROR, fatal: true, url: url, reason: 'no level found in manifest' });\n\t          }\n\t        }\n\t      } else {\n\t        hls.trigger(_events2.default.ERROR, { type: _errors.ErrorTypes.NETWORK_ERROR, details: _errors.ErrorDetails.MANIFEST_PARSING_ERROR, fatal: true, url: url, reason: 'no EXTM3U delimiter' });\n\t      }\n\t    }\n\t  }, {\n\t    key: 'loaderror',\n\t    value: function loaderror(response, context) {\n\t      var details,\n\t          fatal,\n\t          loader = context.loader;\n\t      switch (context.type) {\n\t        case 'manifest':\n\t          details = _errors.ErrorDetails.MANIFEST_LOAD_ERROR;\n\t          fatal = true;\n\t          break;\n\t        case 'level':\n\t          details = _errors.ErrorDetails.LEVEL_LOAD_ERROR;\n\t          fatal = false;\n\t          break;\n\t        case 'audioTrack':\n\t          details = _errors.ErrorDetails.AUDIO_TRACK_LOAD_ERROR;\n\t          fatal = false;\n\t          break;\n\t      }\n\t      if (loader) {\n\t        loader.abort();\n\t        this.loaders[context.type] = undefined;\n\t      }\n\t      this.hls.trigger(_events2.default.ERROR, { type: _errors.ErrorTypes.NETWORK_ERROR, details: details, fatal: fatal, url: loader.url, loader: loader, response: response, context: context });\n\t    }\n\t  }, {\n\t    key: 'loadtimeout',\n\t    value: function loadtimeout(stats, context) {\n\t      var details,\n\t          fatal,\n\t          loader = context.loader;\n\t      switch (context.type) {\n\t        case 'manifest':\n\t          details = _errors.ErrorDetails.MANIFEST_LOAD_TIMEOUT;\n\t          fatal = true;\n\t          break;\n\t        case 'level':\n\t          details = _errors.ErrorDetails.LEVEL_LOAD_TIMEOUT;\n\t          fatal = false;\n\t          break;\n\t        case 'audioTrack':\n\t          details = _errors.ErrorDetails.AUDIO_TRACK_LOAD_TIMEOUT;\n\t          fatal = false;\n\t          break;\n\t      }\n\t      if (loader) {\n\t        loader.abort();\n\t        this.loaders[context.type] = undefined;\n\t      }\n\t      this.hls.trigger(_events2.default.ERROR, { type: _errors.ErrorTypes.NETWORK_ERROR, details: details, fatal: fatal, url: loader.url, loader: loader, context: context });\n\t    }\n\t  }]);\n\t\n\t  return PlaylistLoader;\n\t}(_eventHandler2.default);\n\t\n\texports.default = PlaylistLoader;\n\t\n\t},{\"2\":2,\"26\":26,\"27\":27,\"28\":28,\"40\":40,\"45\":45}],37:[function(_dereq_,module,exports){\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\t/**\n\t * Generate MP4 Box\n\t*/\n\t\n\t//import Hex from '../utils/hex';\n\tvar MP4 = function () {\n\t  function MP4() {\n\t    _classCallCheck(this, MP4);\n\t  }\n\t\n\t  _createClass(MP4, null, [{\n\t    key: 'init',\n\t    value: function init() {\n\t      MP4.types = {\n\t        avc1: [], // codingname\n\t        avcC: [],\n\t        btrt: [],\n\t        dinf: [],\n\t        dref: [],\n\t        esds: [],\n\t        ftyp: [],\n\t        hdlr: [],\n\t        mdat: [],\n\t        mdhd: [],\n\t        mdia: [],\n\t        mfhd: [],\n\t        minf: [],\n\t        moof: [],\n\t        moov: [],\n\t        mp4a: [],\n\t        '.mp3': [],\n\t        mvex: [],\n\t        mvhd: [],\n\t        pasp: [],\n\t        sdtp: [],\n\t        stbl: [],\n\t        stco: [],\n\t        stsc: [],\n\t        stsd: [],\n\t        stsz: [],\n\t        stts: [],\n\t        tfdt: [],\n\t        tfhd: [],\n\t        traf: [],\n\t        trak: [],\n\t        trun: [],\n\t        trex: [],\n\t        tkhd: [],\n\t        vmhd: [],\n\t        smhd: []\n\t      };\n\t\n\t      var i;\n\t      for (i in MP4.types) {\n\t        if (MP4.types.hasOwnProperty(i)) {\n\t          MP4.types[i] = [i.charCodeAt(0), i.charCodeAt(1), i.charCodeAt(2), i.charCodeAt(3)];\n\t        }\n\t      }\n\t\n\t      var videoHdlr = new Uint8Array([0x00, // version 0\n\t      0x00, 0x00, 0x00, // flags\n\t      0x00, 0x00, 0x00, 0x00, // pre_defined\n\t      0x76, 0x69, 0x64, 0x65, // handler_type: 'vide'\n\t      0x00, 0x00, 0x00, 0x00, // reserved\n\t      0x00, 0x00, 0x00, 0x00, // reserved\n\t      0x00, 0x00, 0x00, 0x00, // reserved\n\t      0x56, 0x69, 0x64, 0x65, 0x6f, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x72, 0x00 // name: 'VideoHandler'\n\t      ]);\n\t\n\t      var audioHdlr = new Uint8Array([0x00, // version 0\n\t      0x00, 0x00, 0x00, // flags\n\t      0x00, 0x00, 0x00, 0x00, // pre_defined\n\t      0x73, 0x6f, 0x75, 0x6e, // handler_type: 'soun'\n\t      0x00, 0x00, 0x00, 0x00, // reserved\n\t      0x00, 0x00, 0x00, 0x00, // reserved\n\t      0x00, 0x00, 0x00, 0x00, // reserved\n\t      0x53, 0x6f, 0x75, 0x6e, 0x64, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x72, 0x00 // name: 'SoundHandler'\n\t      ]);\n\t\n\t      MP4.HDLR_TYPES = {\n\t        'video': videoHdlr,\n\t        'audio': audioHdlr\n\t      };\n\t\n\t      var dref = new Uint8Array([0x00, // version 0\n\t      0x00, 0x00, 0x00, // flags\n\t      0x00, 0x00, 0x00, 0x01, // entry_count\n\t      0x00, 0x00, 0x00, 0x0c, // entry_size\n\t      0x75, 0x72, 0x6c, 0x20, // 'url' type\n\t      0x00, // version 0\n\t      0x00, 0x00, 0x01 // entry_flags\n\t      ]);\n\t\n\t      var stco = new Uint8Array([0x00, // version\n\t      0x00, 0x00, 0x00, // flags\n\t      0x00, 0x00, 0x00, 0x00 // entry_count\n\t      ]);\n\t\n\t      MP4.STTS = MP4.STSC = MP4.STCO = stco;\n\t\n\t      MP4.STSZ = new Uint8Array([0x00, // version\n\t      0x00, 0x00, 0x00, // flags\n\t      0x00, 0x00, 0x00, 0x00, // sample_size\n\t      0x00, 0x00, 0x00, 0x00]);\n\t      MP4.VMHD = new Uint8Array([0x00, // version\n\t      0x00, 0x00, 0x01, // flags\n\t      0x00, 0x00, // graphicsmode\n\t      0x00, 0x00, 0x00, 0x00, 0x00, 0x00 // opcolor\n\t      ]);\n\t      MP4.SMHD = new Uint8Array([0x00, // version\n\t      0x00, 0x00, 0x00, // flags\n\t      0x00, 0x00, // balance\n\t      0x00, 0x00 // reserved\n\t      ]);\n\t\n\t      MP4.STSD = new Uint8Array([0x00, // version 0\n\t      0x00, 0x00, 0x00, // flags\n\t      0x00, 0x00, 0x00, 0x01]); // entry_count\n\t\n\t      var majorBrand = new Uint8Array([105, 115, 111, 109]); // isom\n\t      var avc1Brand = new Uint8Array([97, 118, 99, 49]); // avc1\n\t      var minorVersion = new Uint8Array([0, 0, 0, 1]);\n\t\n\t      MP4.FTYP = MP4.box(MP4.types.ftyp, majorBrand, minorVersion, majorBrand, avc1Brand);\n\t      MP4.DINF = MP4.box(MP4.types.dinf, MP4.box(MP4.types.dref, dref));\n\t    }\n\t  }, {\n\t    key: 'box',\n\t    value: function box(type) {\n\t      var payload = Array.prototype.slice.call(arguments, 1),\n\t          size = 8,\n\t          i = payload.length,\n\t          len = i,\n\t          result;\n\t      // calculate the total size we need to allocate\n\t      while (i--) {\n\t        size += payload[i].byteLength;\n\t      }\n\t      result = new Uint8Array(size);\n\t      result[0] = size >> 24 & 0xff;\n\t      result[1] = size >> 16 & 0xff;\n\t      result[2] = size >> 8 & 0xff;\n\t      result[3] = size & 0xff;\n\t      result.set(type, 4);\n\t      // copy the payload into the result\n\t      for (i = 0, size = 8; i < len; i++) {\n\t        // copy payload[i] array @ offset size\n\t        result.set(payload[i], size);\n\t        size += payload[i].byteLength;\n\t      }\n\t      return result;\n\t    }\n\t  }, {\n\t    key: 'hdlr',\n\t    value: function hdlr(type) {\n\t      return MP4.box(MP4.types.hdlr, MP4.HDLR_TYPES[type]);\n\t    }\n\t  }, {\n\t    key: 'mdat',\n\t    value: function mdat(data) {\n\t      return MP4.box(MP4.types.mdat, data);\n\t    }\n\t  }, {\n\t    key: 'mdhd',\n\t    value: function mdhd(timescale, duration) {\n\t      duration *= timescale;\n\t      return MP4.box(MP4.types.mdhd, new Uint8Array([0x00, // version 0\n\t      0x00, 0x00, 0x00, // flags\n\t      0x00, 0x00, 0x00, 0x02, // creation_time\n\t      0x00, 0x00, 0x00, 0x03, // modification_time\n\t      timescale >> 24 & 0xFF, timescale >> 16 & 0xFF, timescale >> 8 & 0xFF, timescale & 0xFF, // timescale\n\t      duration >> 24, duration >> 16 & 0xFF, duration >> 8 & 0xFF, duration & 0xFF, // duration\n\t      0x55, 0xc4, // 'und' language (undetermined)\n\t      0x00, 0x00]));\n\t    }\n\t  }, {\n\t    key: 'mdia',\n\t    value: function mdia(track) {\n\t      return MP4.box(MP4.types.mdia, MP4.mdhd(track.timescale, track.duration), MP4.hdlr(track.type), MP4.minf(track));\n\t    }\n\t  }, {\n\t    key: 'mfhd',\n\t    value: function mfhd(sequenceNumber) {\n\t      return MP4.box(MP4.types.mfhd, new Uint8Array([0x00, 0x00, 0x00, 0x00, // flags\n\t      sequenceNumber >> 24, sequenceNumber >> 16 & 0xFF, sequenceNumber >> 8 & 0xFF, sequenceNumber & 0xFF]));\n\t    }\n\t  }, {\n\t    key: 'minf',\n\t    value: function minf(track) {\n\t      if (track.type === 'audio') {\n\t        return MP4.box(MP4.types.minf, MP4.box(MP4.types.smhd, MP4.SMHD), MP4.DINF, MP4.stbl(track));\n\t      } else {\n\t        return MP4.box(MP4.types.minf, MP4.box(MP4.types.vmhd, MP4.VMHD), MP4.DINF, MP4.stbl(track));\n\t      }\n\t    }\n\t  }, {\n\t    key: 'moof',\n\t    value: function moof(sn, baseMediaDecodeTime, track) {\n\t      return MP4.box(MP4.types.moof, MP4.mfhd(sn), MP4.traf(track, baseMediaDecodeTime));\n\t    }\n\t    /**\n\t     * @param tracks... (optional) {array} the tracks associated with this movie\n\t     */\n\t\n\t  }, {\n\t    key: 'moov',\n\t    value: function moov(tracks) {\n\t      var i = tracks.length,\n\t          boxes = [];\n\t\n\t      while (i--) {\n\t        boxes[i] = MP4.trak(tracks[i]);\n\t      }\n\t\n\t      return MP4.box.apply(null, [MP4.types.moov, MP4.mvhd(tracks[0].timescale, tracks[0].duration)].concat(boxes).concat(MP4.mvex(tracks)));\n\t    }\n\t  }, {\n\t    key: 'mvex',\n\t    value: function mvex(tracks) {\n\t      var i = tracks.length,\n\t          boxes = [];\n\t\n\t      while (i--) {\n\t        boxes[i] = MP4.trex(tracks[i]);\n\t      }\n\t      return MP4.box.apply(null, [MP4.types.mvex].concat(boxes));\n\t    }\n\t  }, {\n\t    key: 'mvhd',\n\t    value: function mvhd(timescale, duration) {\n\t      duration *= timescale;\n\t      var bytes = new Uint8Array([0x00, // version 0\n\t      0x00, 0x00, 0x00, // flags\n\t      0x00, 0x00, 0x00, 0x01, // creation_time\n\t      0x00, 0x00, 0x00, 0x02, // modification_time\n\t      timescale >> 24 & 0xFF, timescale >> 16 & 0xFF, timescale >> 8 & 0xFF, timescale & 0xFF, // timescale\n\t      duration >> 24 & 0xFF, duration >> 16 & 0xFF, duration >> 8 & 0xFF, duration & 0xFF, // duration\n\t      0x00, 0x01, 0x00, 0x00, // 1.0 rate\n\t      0x01, 0x00, // 1.0 volume\n\t      0x00, 0x00, // reserved\n\t      0x00, 0x00, 0x00, 0x00, // reserved\n\t      0x00, 0x00, 0x00, 0x00, // reserved\n\t      0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0x00, 0x00, 0x00, // transformation: unity matrix\n\t      0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // pre_defined\n\t      0xff, 0xff, 0xff, 0xff // next_track_ID\n\t      ]);\n\t      return MP4.box(MP4.types.mvhd, bytes);\n\t    }\n\t  }, {\n\t    key: 'sdtp',\n\t    value: function sdtp(track) {\n\t      var samples = track.samples || [],\n\t          bytes = new Uint8Array(4 + samples.length),\n\t          flags,\n\t          i;\n\t      // leave the full box header (4 bytes) all zero\n\t      // write the sample table\n\t      for (i = 0; i < samples.length; i++) {\n\t        flags = samples[i].flags;\n\t        bytes[i + 4] = flags.dependsOn << 4 | flags.isDependedOn << 2 | flags.hasRedundancy;\n\t      }\n\t\n\t      return MP4.box(MP4.types.sdtp, bytes);\n\t    }\n\t  }, {\n\t    key: 'stbl',\n\t    value: function stbl(track) {\n\t      return MP4.box(MP4.types.stbl, MP4.stsd(track), MP4.box(MP4.types.stts, MP4.STTS), MP4.box(MP4.types.stsc, MP4.STSC), MP4.box(MP4.types.stsz, MP4.STSZ), MP4.box(MP4.types.stco, MP4.STCO));\n\t    }\n\t  }, {\n\t    key: 'avc1',\n\t    value: function avc1(track) {\n\t      var sps = [],\n\t          pps = [],\n\t          i,\n\t          data,\n\t          len;\n\t      // assemble the SPSs\n\t\n\t      for (i = 0; i < track.sps.length; i++) {\n\t        data = track.sps[i];\n\t        len = data.byteLength;\n\t        sps.push(len >>> 8 & 0xFF);\n\t        sps.push(len & 0xFF);\n\t        sps = sps.concat(Array.prototype.slice.call(data)); // SPS\n\t      }\n\t\n\t      // assemble the PPSs\n\t      for (i = 0; i < track.pps.length; i++) {\n\t        data = track.pps[i];\n\t        len = data.byteLength;\n\t        pps.push(len >>> 8 & 0xFF);\n\t        pps.push(len & 0xFF);\n\t        pps = pps.concat(Array.prototype.slice.call(data));\n\t      }\n\t\n\t      var avcc = MP4.box(MP4.types.avcC, new Uint8Array([0x01, // version\n\t      sps[3], // profile\n\t      sps[4], // profile compat\n\t      sps[5], // level\n\t      0xfc | 3, // lengthSizeMinusOne, hard-coded to 4 bytes\n\t      0xE0 | track.sps.length // 3bit reserved (111) + numOfSequenceParameterSets\n\t      ].concat(sps).concat([track.pps.length // numOfPictureParameterSets\n\t      ]).concat(pps))),\n\t          // \"PPS\"\n\t      width = track.width,\n\t          height = track.height,\n\t          hSpacing = track.pixelRatio[0],\n\t          vSpacing = track.pixelRatio[1];\n\t      //console.log('avcc:' + Hex.hexDump(avcc));\n\t      return MP4.box(MP4.types.avc1, new Uint8Array([0x00, 0x00, 0x00, // reserved\n\t      0x00, 0x00, 0x00, // reserved\n\t      0x00, 0x01, // data_reference_index\n\t      0x00, 0x00, // pre_defined\n\t      0x00, 0x00, // reserved\n\t      0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // pre_defined\n\t      width >> 8 & 0xFF, width & 0xff, // width\n\t      height >> 8 & 0xFF, height & 0xff, // height\n\t      0x00, 0x48, 0x00, 0x00, // horizresolution\n\t      0x00, 0x48, 0x00, 0x00, // vertresolution\n\t      0x00, 0x00, 0x00, 0x00, // reserved\n\t      0x00, 0x01, // frame_count\n\t      0x12, 0x64, 0x61, 0x69, 0x6C, //dailymotion/hls.js\n\t      0x79, 0x6D, 0x6F, 0x74, 0x69, 0x6F, 0x6E, 0x2F, 0x68, 0x6C, 0x73, 0x2E, 0x6A, 0x73, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // compressorname\n\t      0x00, 0x18, // depth = 24\n\t      0x11, 0x11]), // pre_defined = -1\n\t      avcc, MP4.box(MP4.types.btrt, new Uint8Array([0x00, 0x1c, 0x9c, 0x80, // bufferSizeDB\n\t      0x00, 0x2d, 0xc6, 0xc0, // maxBitrate\n\t      0x00, 0x2d, 0xc6, 0xc0])), // avgBitrate\n\t      MP4.box(MP4.types.pasp, new Uint8Array([hSpacing >> 24, // hSpacing\n\t      hSpacing >> 16 & 0xFF, hSpacing >> 8 & 0xFF, hSpacing & 0xFF, vSpacing >> 24, // vSpacing\n\t      vSpacing >> 16 & 0xFF, vSpacing >> 8 & 0xFF, vSpacing & 0xFF])));\n\t    }\n\t  }, {\n\t    key: 'esds',\n\t    value: function esds(track) {\n\t      var configlen = track.config.length;\n\t      return new Uint8Array([0x00, // version 0\n\t      0x00, 0x00, 0x00, // flags\n\t\n\t      0x03, // descriptor_type\n\t      0x17 + configlen, // length\n\t      0x00, 0x01, //es_id\n\t      0x00, // stream_priority\n\t\n\t      0x04, // descriptor_type\n\t      0x0f + configlen, // length\n\t      0x40, //codec : mpeg4_audio\n\t      0x15, // stream_type\n\t      0x00, 0x00, 0x00, // buffer_size\n\t      0x00, 0x00, 0x00, 0x00, // maxBitrate\n\t      0x00, 0x00, 0x00, 0x00, // avgBitrate\n\t\n\t      0x05 // descriptor_type\n\t      ].concat([configlen]).concat(track.config).concat([0x06, 0x01, 0x02])); // GASpecificConfig)); // length + audio config descriptor\n\t    }\n\t  }, {\n\t    key: 'mp4a',\n\t    value: function mp4a(track) {\n\t      var audiosamplerate = track.audiosamplerate;\n\t      return MP4.box(MP4.types.mp4a, new Uint8Array([0x00, 0x00, 0x00, // reserved\n\t      0x00, 0x00, 0x00, // reserved\n\t      0x00, 0x01, // data_reference_index\n\t      0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // reserved\n\t      0x00, track.channelCount, // channelcount\n\t      0x00, 0x10, // sampleSize:16bits\n\t      0x00, 0x00, 0x00, 0x00, // reserved2\n\t      audiosamplerate >> 8 & 0xFF, audiosamplerate & 0xff, //\n\t      0x00, 0x00]), MP4.box(MP4.types.esds, MP4.esds(track)));\n\t    }\n\t  }, {\n\t    key: 'mp3',\n\t    value: function mp3(track) {\n\t      var audiosamplerate = track.audiosamplerate;\n\t      return MP4.box(MP4.types['.mp3'], new Uint8Array([0x00, 0x00, 0x00, // reserved\n\t      0x00, 0x00, 0x00, // reserved\n\t      0x00, 0x01, // data_reference_index\n\t      0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // reserved\n\t      0x00, track.channelCount, // channelcount\n\t      0x00, 0x10, // sampleSize:16bits\n\t      0x00, 0x00, 0x00, 0x00, // reserved2\n\t      audiosamplerate >> 8 & 0xFF, audiosamplerate & 0xff, //\n\t      0x00, 0x00]));\n\t    }\n\t  }, {\n\t    key: 'stsd',\n\t    value: function stsd(track) {\n\t      if (track.type === 'audio') {\n\t        if (!track.isAAC && track.codec === 'mp3') {\n\t          return MP4.box(MP4.types.stsd, MP4.STSD, MP4.mp3(track));\n\t        }\n\t        return MP4.box(MP4.types.stsd, MP4.STSD, MP4.mp4a(track));\n\t      } else {\n\t        return MP4.box(MP4.types.stsd, MP4.STSD, MP4.avc1(track));\n\t      }\n\t    }\n\t  }, {\n\t    key: 'tkhd',\n\t    value: function tkhd(track) {\n\t      var id = track.id,\n\t          duration = track.duration * track.timescale,\n\t          width = track.width,\n\t          height = track.height;\n\t      return MP4.box(MP4.types.tkhd, new Uint8Array([0x00, // version 0\n\t      0x00, 0x00, 0x07, // flags\n\t      0x00, 0x00, 0x00, 0x00, // creation_time\n\t      0x00, 0x00, 0x00, 0x00, // modification_time\n\t      id >> 24 & 0xFF, id >> 16 & 0xFF, id >> 8 & 0xFF, id & 0xFF, // track_ID\n\t      0x00, 0x00, 0x00, 0x00, // reserved\n\t      duration >> 24, duration >> 16 & 0xFF, duration >> 8 & 0xFF, duration & 0xFF, // duration\n\t      0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // reserved\n\t      0x00, 0x00, // layer\n\t      0x00, 0x00, // alternate_group\n\t      0x00, 0x00, // non-audio track volume\n\t      0x00, 0x00, // reserved\n\t      0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0x00, 0x00, 0x00, // transformation: unity matrix\n\t      width >> 8 & 0xFF, width & 0xFF, 0x00, 0x00, // width\n\t      height >> 8 & 0xFF, height & 0xFF, 0x00, 0x00 // height\n\t      ]));\n\t    }\n\t  }, {\n\t    key: 'traf',\n\t    value: function traf(track, baseMediaDecodeTime) {\n\t      var sampleDependencyTable = MP4.sdtp(track),\n\t          id = track.id;\n\t      return MP4.box(MP4.types.traf, MP4.box(MP4.types.tfhd, new Uint8Array([0x00, // version 0\n\t      0x00, 0x00, 0x00, // flags\n\t      id >> 24, id >> 16 & 0XFF, id >> 8 & 0XFF, id & 0xFF])), MP4.box(MP4.types.tfdt, new Uint8Array([0x00, // version 0\n\t      0x00, 0x00, 0x00, // flags\n\t      baseMediaDecodeTime >> 24, baseMediaDecodeTime >> 16 & 0XFF, baseMediaDecodeTime >> 8 & 0XFF, baseMediaDecodeTime & 0xFF])), MP4.trun(track, sampleDependencyTable.length + 16 + // tfhd\n\t      16 + // tfdt\n\t      8 + // traf header\n\t      16 + // mfhd\n\t      8 + // moof header\n\t      8), // mdat header\n\t      sampleDependencyTable);\n\t    }\n\t\n\t    /**\n\t     * Generate a track box.\n\t     * @param track {object} a track definition\n\t     * @return {Uint8Array} the track box\n\t     */\n\t\n\t  }, {\n\t    key: 'trak',\n\t    value: function trak(track) {\n\t      track.duration = track.duration || 0xffffffff;\n\t      return MP4.box(MP4.types.trak, MP4.tkhd(track), MP4.mdia(track));\n\t    }\n\t  }, {\n\t    key: 'trex',\n\t    value: function trex(track) {\n\t      var id = track.id;\n\t      return MP4.box(MP4.types.trex, new Uint8Array([0x00, // version 0\n\t      0x00, 0x00, 0x00, // flags\n\t      id >> 24, id >> 16 & 0XFF, id >> 8 & 0XFF, id & 0xFF, // track_ID\n\t      0x00, 0x00, 0x00, 0x01, // default_sample_description_index\n\t      0x00, 0x00, 0x00, 0x00, // default_sample_duration\n\t      0x00, 0x00, 0x00, 0x00, // default_sample_size\n\t      0x00, 0x01, 0x00, 0x01 // default_sample_flags\n\t      ]));\n\t    }\n\t  }, {\n\t    key: 'trun',\n\t    value: function trun(track, offset) {\n\t      var samples = track.samples || [],\n\t          len = samples.length,\n\t          arraylen = 12 + 16 * len,\n\t          array = new Uint8Array(arraylen),\n\t          i,\n\t          sample,\n\t          duration,\n\t          size,\n\t          flags,\n\t          cts;\n\t      offset += 8 + arraylen;\n\t      array.set([0x00, // version 0\n\t      0x00, 0x0f, 0x01, // flags\n\t      len >>> 24 & 0xFF, len >>> 16 & 0xFF, len >>> 8 & 0xFF, len & 0xFF, // sample_count\n\t      offset >>> 24 & 0xFF, offset >>> 16 & 0xFF, offset >>> 8 & 0xFF, offset & 0xFF // data_offset\n\t      ], 0);\n\t      for (i = 0; i < len; i++) {\n\t        sample = samples[i];\n\t        duration = sample.duration;\n\t        size = sample.size;\n\t        flags = sample.flags;\n\t        cts = sample.cts;\n\t        array.set([duration >>> 24 & 0xFF, duration >>> 16 & 0xFF, duration >>> 8 & 0xFF, duration & 0xFF, // sample_duration\n\t        size >>> 24 & 0xFF, size >>> 16 & 0xFF, size >>> 8 & 0xFF, size & 0xFF, // sample_size\n\t        flags.isLeading << 2 | flags.dependsOn, flags.isDependedOn << 6 | flags.hasRedundancy << 4 | flags.paddingValue << 1 | flags.isNonSync, flags.degradPrio & 0xF0 << 8, flags.degradPrio & 0x0F, // sample_flags\n\t        cts >>> 24 & 0xFF, cts >>> 16 & 0xFF, cts >>> 8 & 0xFF, cts & 0xFF // sample_composition_time_offset\n\t        ], 12 + 16 * i);\n\t      }\n\t      return MP4.box(MP4.types.trun, array);\n\t    }\n\t  }, {\n\t    key: 'initSegment',\n\t    value: function initSegment(tracks) {\n\t      if (!MP4.types) {\n\t        MP4.init();\n\t      }\n\t      var movie = MP4.moov(tracks),\n\t          result;\n\t      result = new Uint8Array(MP4.FTYP.byteLength + movie.byteLength);\n\t      result.set(MP4.FTYP);\n\t      result.set(movie, MP4.FTYP.byteLength);\n\t      return result;\n\t    }\n\t  }]);\n\t\n\t  return MP4;\n\t}();\n\t\n\texports.default = MP4;\n\t\n\t},{}],38:[function(_dereq_,module,exports){\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }(); /**\n\tfMP4 remuxer\n\tn\t\n\tvar _aac = _dereq_(29);\n\t\n\tvar _aac2 = _interopRequireDefault(_aac);\n\t\n\tvar _events = _dereq_(28);\n\t\n\tvar _events2 = _interopRequireDefault(_events);\n\t\n\tvar _logger = _dereq_(45);\n\t\n\tvar _mp4Generator = _dereq_(37);\n\t\n\tvar _mp4Generator2 = _interopRequireDefault(_mp4Generator);\n\t\n\tvar _errors = _dereq_(26);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tvar MP4Remuxer = function () {\n\t  function MP4Remuxer(observer, id, config, typeSupported) {\n\t    _classCallCheck(this, MP4Remuxer);\n\t\n\t    this.observer = observer;\n\t    this.id = id;\n\t    this.config = config;\n\t    this.typeSupported = typeSupported;\n\t    this.ISGenerated = false;\n\t    this.PES2MP4SCALEFACTOR = 4;\n\t    this.PES_TIMESCALE = 90000;\n\t    this.MP4_TIMESCALE = this.PES_TIMESCALE / this.PES2MP4SCALEFACTOR;\n\t  }\n\t\n\t  _createClass(MP4Remuxer, [{\n\t    key: 'destroy',\n\t    value: function destroy() {}\n\t  }, {\n\t    key: 'insertDiscontinuity',\n\t    value: function insertDiscontinuity() {\n\t      this._initPTS = this._initDTS = undefined;\n\t    }\n\t  }, {\n\t    key: 'switchLevel',\n\t    value: function switchLevel() {\n\t      this.ISGenerated = false;\n\t    }\n\t  }, {\n\t    key: 'remux',\n\t    value: function remux(level, sn, cc, audioTrack, videoTrack, id3Track, textTrack, timeOffset, contiguous, accurateTimeOffset, defaultInitPTS) {\n\t      this.level = level;\n\t      this.sn = sn;\n\t      // generate Init Segment if needed\n\t      if (!this.ISGenerated) {\n\t        this.generateIS(audioTrack, videoTrack, timeOffset, cc);\n\t      }\n\t\n\t      if (defaultInitPTS !== null) {\n\t        this._initPTS = this._initDTS = defaultInitPTS;\n\t      }\n\t\n\t      if (this.ISGenerated) {\n\t        // Purposefully remuxing audio before video, so that remuxVideo can use nextAudioPts, which is\n\t        // calculated in remuxAudio.\n\t        //logger.log('nb AAC samples:' + audioTrack.samples.length);\n\t        if (audioTrack.samples.length) {\n\t          var audioData = this.remuxAudio(audioTrack, timeOffset, contiguous, accurateTimeOffset);\n\t          //logger.log('nb AVC samples:' + videoTrack.samples.length);\n\t          if (videoTrack.samples.length) {\n\t            var audioTrackLength = void 0;\n\t            if (audioData) {\n\t              audioTrackLength = audioData.endPTS - audioData.startPTS;\n\t            }\n\t            this.remuxVideo(videoTrack, timeOffset, contiguous, audioTrackLength);\n\t          }\n\t        } else {\n\t          var videoData = void 0;\n\t          //logger.log('nb AVC samples:' + videoTrack.samples.length);\n\t          if (videoTrack.samples.length) {\n\t            videoData = this.remuxVideo(videoTrack, timeOffset, contiguous);\n\t          }\n\t          if (videoData && audioTrack.codec) {\n\t            this.remuxEmptyAudio(audioTrack, timeOffset, contiguous, videoData);\n\t          }\n\t        }\n\t      }\n\t      //logger.log('nb ID3 samples:' + audioTrack.samples.length);\n\t      if (id3Track.samples.length) {\n\t        this.remuxID3(id3Track, timeOffset);\n\t      }\n\t      //logger.log('nb ID3 samples:' + audioTrack.samples.length);\n\t      if (textTrack.samples.length) {\n\t        this.remuxText(textTrack, timeOffset);\n\t      }\n\t      //notify end of parsing\n\t      this.observer.trigger(_events2.default.FRAG_PARSED, { id: this.id, level: this.level, sn: this.sn });\n\t    }\n\t  }, {\n\t    key: 'generateIS',\n\t    value: function generateIS(audioTrack, videoTrack, timeOffset, cc) {\n\t      var observer = this.observer,\n\t          audioSamples = audioTrack.samples,\n\t          videoSamples = videoTrack.samples,\n\t          pesTimeScale = this.PES_TIMESCALE,\n\t          typeSupported = this.typeSupported,\n\t          container = 'audio/mp4',\n\t          tracks = {},\n\t          data = { id: this.id, level: this.level, sn: this.sn, tracks: tracks, unique: false },\n\t          computePTSDTS = this._initPTS === undefined,\n\t          initPTS,\n\t          initDTS;\n\t\n\t      if (computePTSDTS) {\n\t        initPTS = initDTS = Infinity;\n\t      }\n\t      if (audioTrack.config && audioSamples.length) {\n\t        audioTrack.timescale = audioTrack.audiosamplerate;\n\t        // MP4 duration (track duration in seconds multiplied by timescale) is coded on 32 bits\n\t        // we know that each AAC sample contains 1024 frames....\n\t        // in order to avoid overflowing the 32 bit counter for large duration, we use smaller timescale (timescale/gcd)\n\t        // we just need to ensure that AAC sample duration will still be an integer (will be 1024/gcd)\n\t        if (audioTrack.timescale * audioTrack.duration > Math.pow(2, 32)) {\n\t          (function () {\n\t            var greatestCommonDivisor = function greatestCommonDivisor(a, b) {\n\t              if (!b) {\n\t                return a;\n\t              }\n\t              return greatestCommonDivisor(b, a % b);\n\t            };\n\t            audioTrack.timescale = audioTrack.audiosamplerate / greatestCommonDivisor(audioTrack.audiosamplerate, audioTrack.isAAC ? 1024 : 1152);\n\t          })();\n\t        }\n\t        _logger.logger.log('audio mp4 timescale :' + audioTrack.timescale);\n\t        if (!audioTrack.isAAC) {\n\t          if (typeSupported.mpeg) {\n\t            // Chrome and Safari\n\t            container = 'audio/mpeg';\n\t            audioTrack.codec = '';\n\t          } else if (typeSupported.mp3) {\n\t            // Firefox\n\t            audioTrack.codec = 'mp3';\n\t          }\n\t        }\n\t        tracks.audio = {\n\t          container: container,\n\t          codec: audioTrack.codec,\n\t          initSegment: !audioTrack.isAAC && typeSupported.mpeg ? new Uint8Array() : _mp4Generator2.default.initSegment([audioTrack]),\n\t          metadata: {\n\t            channelCount: audioTrack.channelCount\n\t          }\n\t        };\n\t        if (computePTSDTS) {\n\t          // remember first PTS of this demuxing context. for audio, PTS = DTS\n\t          initPTS = initDTS = audioSamples[0].pts - pesTimeScale * timeOffset;\n\t        }\n\t      }\n\t\n\t      if (videoTrack.sps && videoTrack.pps && videoSamples.length) {\n\t        videoTrack.timescale = this.MP4_TIMESCALE;\n\t        tracks.video = {\n\t          container: 'video/mp4',\n\t          codec: videoTrack.codec,\n\t          initSegment: _mp4Generator2.default.initSegment([videoTrack]),\n\t          metadata: {\n\t            width: videoTrack.width,\n\t            height: videoTrack.height\n\t          }\n\t        };\n\t        if (computePTSDTS) {\n\t          initPTS = Math.min(initPTS, videoSamples[0].pts - pesTimeScale * timeOffset);\n\t          initDTS = Math.min(initDTS, videoSamples[0].dts - pesTimeScale * timeOffset);\n\t          this.observer.trigger(_events2.default.INIT_PTS_FOUND, { id: this.id, initPTS: initPTS, cc: cc });\n\t        }\n\t      }\n\t\n\t      if (Object.keys(tracks).length) {\n\t        observer.trigger(_events2.default.FRAG_PARSING_INIT_SEGMENT, data);\n\t        this.ISGenerated = true;\n\t        if (computePTSDTS) {\n\t          this._initPTS = initPTS;\n\t          this._initDTS = initDTS;\n\t        }\n\t      } else {\n\t        observer.trigger(_events2.default.ERROR, { type: _errors.ErrorTypes.MEDIA_ERROR, id: this.id, details: _errors.ErrorDetails.FRAG_PARSING_ERROR, fatal: false, reason: 'no audio/video samples found' });\n\t      }\n\t    }\n\t  }, {\n\t    key: 'remuxVideo',\n\t    value: function remuxVideo(track, timeOffset, contiguous, audioTrackLength) {\n\t      var offset = 8,\n\t          pesTimeScale = this.PES_TIMESCALE,\n\t          pes2mp4ScaleFactor = this.PES2MP4SCALEFACTOR,\n\t          mp4SampleDuration,\n\t          mdat,\n\t          moof,\n\t          firstPTS,\n\t          firstDTS,\n\t          nextDTS,\n\t          lastPTS,\n\t          lastDTS,\n\t          inputSamples = track.samples,\n\t          outputSamples = [],\n\t          nbSamples = inputSamples.length,\n\t          ptsNormalize = this._PTSNormalize,\n\t          initDTS = this._initDTS;\n\t\n\t      // for (let i = 0; i < track.samples.length; i++) {\n\t      //   let avcSample = track.samples[i];\n\t      //   let units = avcSample.units.units;\n\t      //   let unitsString = '';\n\t      //   for (let j = 0; j < units.length ; j++) {\n\t      //     unitsString += units[j].type + ',';\n\t      //     if (units[j].data.length < 500) {\n\t      //       unitsString += Hex.hexDump(units[j].data);\n\t      //     }\n\t      //   }\n\t      //   logger.log(avcSample.pts + '/' + avcSample.dts + ',' + unitsString + avcSample.units.length);\n\t      // }\n\t\n\t      // sort video samples by DTS then PTS order\n\t      inputSamples.sort(function (a, b) {\n\t        var deltadts = a.dts - b.dts;\n\t        return deltadts ? deltadts : a.pts - b.pts;\n\t      });\n\t\n\t      // handle broken streams with PTS < DTS, tolerance up 200ms (18000 in 90kHz timescale)\n\t      var PTSDTSshift = inputSamples.reduce(function (prev, curr) {\n\t        return Math.max(Math.min(prev, curr.pts - curr.dts), -18000);\n\t      }, 0);\n\t      if (PTSDTSshift < 0) {\n\t        _logger.logger.warn('PTS < DTS detected in video samples, shifting DTS by ' + Math.round(PTSDTSshift / 90) + ' ms to overcome this issue');\n\t        for (var i = 0; i < inputSamples.length; i++) {\n\t          inputSamples[i].dts += PTSDTSshift;\n\t        }\n\t      }\n\t\n\t      // PTS is coded on 33bits, and can loop from -2^32 to 2^32\n\t      // ptsNormalize will make PTS/DTS value monotonic, we use last known DTS value as reference value\n\t      var nextAvcDts = void 0;\n\t      // contiguous fragments are consecutive fragments from same quality level (same level, new SN = old SN + 1)\n\t      if (contiguous) {\n\t        // if parsed fragment is contiguous with last one, let's use last DTS value as reference\n\t        nextAvcDts = this.nextAvcDts;\n\t      } else {\n\t        // if not contiguous, let's use target timeOffset\n\t        nextAvcDts = timeOffset * pesTimeScale;\n\t      }\n\t\n\t      // compute first DTS and last DTS, normalize them against reference value\n\t      var sample = inputSamples[0];\n\t      firstDTS = Math.max(ptsNormalize(sample.dts - initDTS, nextAvcDts), 0);\n\t      firstPTS = Math.max(ptsNormalize(sample.pts - initDTS, nextAvcDts), 0);\n\t\n\t      // check timestamp continuity accross consecutive fragments (this is to remove inter-fragment gap/hole)\n\t      var delta = Math.round((firstDTS - nextAvcDts) / 90);\n\t      // if fragment are contiguous, detect hole/overlapping between fragments\n\t      if (contiguous) {\n\t        if (delta) {\n\t          if (delta > 1) {\n\t            _logger.logger.log('AVC:' + delta + ' ms hole between fragments detected,filling it');\n\t          } else if (delta < -1) {\n\t            _logger.logger.log('AVC:' + -delta + ' ms overlapping between fragments detected');\n\t          }\n\t          // remove hole/gap : set DTS to next expected DTS\n\t          firstDTS = nextAvcDts;\n\t          inputSamples[0].dts = firstDTS + initDTS;\n\t          // offset PTS as well, ensure that PTS is smaller or equal than new DTS\n\t          firstPTS = Math.max(firstPTS - delta, nextAvcDts);\n\t          inputSamples[0].pts = firstPTS + initDTS;\n\t          _logger.logger.log('Video/PTS/DTS adjusted: ' + Math.round(firstPTS / 90) + '/' + Math.round(firstDTS / 90) + ',delta:' + delta + ' ms');\n\t        }\n\t      }\n\t      nextDTS = firstDTS;\n\t\n\t      // compute lastPTS/lastDTS\n\t      sample = inputSamples[inputSamples.length - 1];\n\t      lastDTS = Math.max(ptsNormalize(sample.dts - initDTS, nextAvcDts), 0);\n\t      lastPTS = Math.max(ptsNormalize(sample.pts - initDTS, nextAvcDts), 0);\n\t      lastPTS = Math.max(lastPTS, lastDTS);\n\t\n\t      var vendor = navigator.vendor,\n\t          userAgent = navigator.userAgent,\n\t          isSafari = vendor && vendor.indexOf('Apple') > -1 && userAgent && !userAgent.match('CriOS');\n\t\n\t      // on Safari let's signal the same sample duration for all samples\n\t      // sample duration (as expected by trun MP4 boxes), should be the delta between sample DTS\n\t      // set this constant duration as being the avg delta between consecutive DTS.\n\t      if (isSafari) {\n\t        mp4SampleDuration = Math.round((lastDTS - firstDTS) / (pes2mp4ScaleFactor * (inputSamples.length - 1)));\n\t      }\n\t\n\t      // normalize all PTS/DTS now ...\n\t      for (var _i = 0; _i < nbSamples; _i++) {\n\t        var _sample = inputSamples[_i];\n\t        if (isSafari) {\n\t          // sample DTS is computed using a constant decoding offset (mp4SampleDuration) between samples\n\t          _sample.dts = firstDTS + _i * pes2mp4ScaleFactor * mp4SampleDuration;\n\t        } else {\n\t          // ensure sample monotonic DTS\n\t          _sample.dts = Math.max(ptsNormalize(_sample.dts - initDTS, nextAvcDts), firstDTS);\n\t          // ensure dts is a multiple of scale factor to avoid rounding issues\n\t          _sample.dts = Math.round(_sample.dts / pes2mp4ScaleFactor) * pes2mp4ScaleFactor;\n\t        }\n\t        // we normalize PTS against nextAvcDts, we also substract initDTS (some streams don't start @ PTS O)\n\t        // and we ensure that computed value is greater or equal than sample DTS\n\t        _sample.pts = Math.max(ptsNormalize(_sample.pts - initDTS, nextAvcDts), _sample.dts);\n\t        // ensure pts is a multiple of scale factor to avoid rounding issues\n\t        _sample.pts = Math.round(_sample.pts / pes2mp4ScaleFactor) * pes2mp4ScaleFactor;\n\t      }\n\t\n\t      /* concatenate the video data and construct the mdat in place\n\t        (need 8 more bytes to fill length and mpdat type) */\n\t      var mdatSize = track.len + 4 * track.nbNalu + 8;\n\t      try {\n\t        mdat = new Uint8Array(mdatSize);\n\t      } catch (err) {\n\t        this.observer.trigger(_events2.default.ERROR, { type: _errors.ErrorTypes.MUX_ERROR, level: this.level, id: this.id, details: _errors.ErrorDetails.REMUX_ALLOC_ERROR, fatal: false, bytes: mdatSize, reason: 'fail allocating video mdat ' + mdatSize });\n\t        return;\n\t      }\n\t      var view = new DataView(mdat.buffer);\n\t      view.setUint32(0, mdatSize);\n\t      mdat.set(_mp4Generator2.default.types.mdat, 4);\n\t\n\t      for (var _i2 = 0; _i2 < nbSamples; _i2++) {\n\t        var avcSample = inputSamples[_i2],\n\t            avcSampleUnits = avcSample.units.units,\n\t            mp4SampleLength = 0,\n\t            compositionTimeOffset = void 0;\n\t        // convert NALU bitstream to MP4 format (prepend NALU with size field)\n\t        for (var j = 0, nbUnits = avcSampleUnits.length; j < nbUnits; j++) {\n\t          var unit = avcSampleUnits[j],\n\t              unitData = unit.data,\n\t              unitDataLen = unit.data.byteLength;\n\t          view.setUint32(offset, unitDataLen);\n\t          offset += 4;\n\t          mdat.set(unitData, offset);\n\t          offset += unitDataLen;\n\t          mp4SampleLength += 4 + unitDataLen;\n\t        }\n\t\n\t        if (!isSafari) {\n\t          // expected sample duration is the Decoding Timestamp diff of consecutive samples\n\t          if (_i2 < nbSamples - 1) {\n\t            mp4SampleDuration = inputSamples[_i2 + 1].dts - avcSample.dts;\n\t          } else {\n\t            var config = this.config,\n\t                lastFrameDuration = avcSample.dts - inputSamples[_i2 > 0 ? _i2 - 1 : _i2].dts;\n\t            if (config.stretchShortVideoTrack) {\n\t              // In some cases, a segment's audio track duration may exceed the video track duration.\n\t              // Since we've already remuxed audio, and we know how long the audio track is, we look to\n\t              // see if the delta to the next segment is longer than the minimum of maxBufferHole and\n\t              // maxSeekHole. If so, playback would potentially get stuck, so we artificially inflate\n\t              // the duration of the last frame to minimize any potential gap between segments.\n\t              var maxBufferHole = config.maxBufferHole,\n\t                  maxSeekHole = config.maxSeekHole,\n\t                  gapTolerance = Math.floor(Math.min(maxBufferHole, maxSeekHole) * pesTimeScale),\n\t                  deltaToFrameEnd = (audioTrackLength ? firstPTS + audioTrackLength * pesTimeScale : this.nextAudioPts) - avcSample.pts;\n\t              if (deltaToFrameEnd > gapTolerance) {\n\t                // We subtract lastFrameDuration from deltaToFrameEnd to try to prevent any video\n\t                // frame overlap. maxBufferHole/maxSeekHole should be >> lastFrameDuration anyway.\n\t                mp4SampleDuration = deltaToFrameEnd - lastFrameDuration;\n\t                if (mp4SampleDuration < 0) {\n\t                  mp4SampleDuration = lastFrameDuration;\n\t                }\n\t                _logger.logger.log('It is approximately ' + deltaToFrameEnd / 90 + ' ms to the next segment; using duration ' + mp4SampleDuration / 90 + ' ms for the last video frame.');\n\t              } else {\n\t                mp4SampleDuration = lastFrameDuration;\n\t              }\n\t            } else {\n\t              mp4SampleDuration = lastFrameDuration;\n\t            }\n\t          }\n\t          mp4SampleDuration /= pes2mp4ScaleFactor;\n\t          compositionTimeOffset = Math.round((avcSample.pts - avcSample.dts) / pes2mp4ScaleFactor);\n\t        } else {\n\t          compositionTimeOffset = Math.max(0, mp4SampleDuration * Math.round((avcSample.pts - avcSample.dts) / (pes2mp4ScaleFactor * mp4SampleDuration)));\n\t        }\n\t\n\t        //console.log('PTS/DTS/initDTS/normPTS/normDTS/relative PTS : ${avcSample.pts}/${avcSample.dts}/${initDTS}/${ptsnorm}/${dtsnorm}/${(avcSample.pts/4294967296).toFixed(3)}');\n\t        outputSamples.push({\n\t          size: mp4SampleLength,\n\t          // constant duration\n\t          duration: mp4SampleDuration,\n\t          cts: compositionTimeOffset,\n\t          flags: {\n\t            isLeading: 0,\n\t            isDependedOn: 0,\n\t            hasRedundancy: 0,\n\t            degradPrio: 0,\n\t            dependsOn: avcSample.key ? 2 : 1,\n\t            isNonSync: avcSample.key ? 0 : 1\n\t          }\n\t        });\n\t      }\n\t      // next AVC sample DTS should be equal to last sample DTS + last sample duration (in PES timescale)\n\t      this.nextAvcDts = lastDTS + mp4SampleDuration * pes2mp4ScaleFactor;\n\t      var dropped = track.dropped;\n\t      track.len = 0;\n\t      track.nbNalu = 0;\n\t      track.dropped = 0;\n\t      if (outputSamples.length && navigator.userAgent.toLowerCase().indexOf('chrome') > -1) {\n\t        var flags = outputSamples[0].flags;\n\t        // chrome workaround, mark first sample as being a Random Access Point to avoid sourcebuffer append issue\n\t        // https://code.google.com/p/chromium/issues/detail?id=229412\n\t        flags.dependsOn = 2;\n\t        flags.isNonSync = 0;\n\t      }\n\t      track.samples = outputSamples;\n\t      moof = _mp4Generator2.default.moof(track.sequenceNumber++, firstDTS / pes2mp4ScaleFactor, track);\n\t      track.samples = [];\n\t\n\t      var data = {\n\t        id: this.id,\n\t        level: this.level,\n\t        sn: this.sn,\n\t        data1: moof,\n\t        data2: mdat,\n\t        startPTS: firstPTS / pesTimeScale,\n\t        endPTS: (lastPTS + pes2mp4ScaleFactor * mp4SampleDuration) / pesTimeScale,\n\t        startDTS: firstDTS / pesTimeScale,\n\t        endDTS: this.nextAvcDts / pesTimeScale,\n\t        type: 'video',\n\t        nb: outputSamples.length,\n\t        dropped: dropped\n\t      };\n\t      this.observer.trigger(_events2.default.FRAG_PARSING_DATA, data);\n\t      return data;\n\t    }\n\t  }, {\n\t    key: 'remuxAudio',\n\t    value: function remuxAudio(track, timeOffset, contiguous, accurateTimeOffset) {\n\t      var pesTimeScale = this.PES_TIMESCALE,\n\t          mp4timeScale = track.timescale,\n\t          pes2mp4ScaleFactor = pesTimeScale / mp4timeScale,\n\t          expectedSampleDuration = track.timescale * (track.isAAC ? 1024 : 1152) / track.audiosamplerate,\n\t          pesFrameDuration = expectedSampleDuration * pes2mp4ScaleFactor,\n\t          ptsNormalize = this._PTSNormalize,\n\t          initDTS = this._initDTS,\n\t          rawMPEG = !track.isAAC && this.typeSupported.mpeg;\n\t\n\t      var view,\n\t          offset = rawMPEG ? 0 : 8,\n\t          audioSample,\n\t          mp4Sample,\n\t          unit,\n\t          mdat,\n\t          moof,\n\t          firstPTS,\n\t          firstDTS,\n\t          lastDTS,\n\t          pts,\n\t          dts,\n\t          ptsnorm,\n\t          dtsnorm,\n\t          outputSamples = [],\n\t          inputSamples = [],\n\t          fillFrame,\n\t          newStamp,\n\t          nextAudioPts;\n\t\n\t      track.samples.sort(function (a, b) {\n\t        return a.pts - b.pts;\n\t      });\n\t      inputSamples = track.samples;\n\t\n\t      // for audio samples, also consider consecutive fragments as being contiguous (even if a level switch occurs),\n\t      // for sake of clarity:\n\t      // consecutive fragments are frags with\n\t      //  - less than 100ms gaps between new time offset and next expected PTS OR\n\t      //  - less than 20 audio frames distance\n\t      // contiguous fragments are consecutive fragments from same quality level (same level, new SN = old SN + 1)\n\t      // this helps ensuring audio continuity\n\t      // and this also avoids audio glitches/cut when switching quality, or reporting wrong duration on first audio frame\n\t\n\t      nextAudioPts = this.nextAudioPts;\n\t      contiguous |= inputSamples.length && nextAudioPts && (Math.abs(timeOffset - nextAudioPts / pesTimeScale) < 0.1 || Math.abs(inputSamples[0].pts - nextAudioPts - this._initDTS) < 20 * pesFrameDuration);\n\t\n\t      if (!contiguous) {\n\t        // if fragments are not contiguous, let's use timeOffset to compute next Audio PTS\n\t        nextAudioPts = timeOffset * pesTimeScale;\n\t      }\n\t      // If the audio track is missing samples, the frames seem to get \"left-shifted\" within the\n\t      // resulting mp4 segment, causing sync issues and leaving gaps at the end of the audio segment.\n\t      // In an effort to prevent this from happening, we inject frames here where there are gaps.\n\t      // When possible, we inject a silent frame; when that's not possible, we duplicate the last\n\t      // frame.\n\t\n\t      // only inject/drop audio frames in case time offset is accurate\n\t      if (accurateTimeOffset && track.isAAC) {\n\t        for (var i = 0, nextPtsNorm = nextAudioPts; i < inputSamples.length;) {\n\t          // First, let's see how far off this frame is from where we expect it to be\n\t          var sample = inputSamples[i],\n\t              ptsNorm = ptsNormalize(sample.pts - initDTS, nextAudioPts),\n\t              delta = ptsNorm - nextPtsNorm;\n\t\n\t          // If we're overlapping by more than a duration, drop this sample\n\t          if (delta <= -pesFrameDuration) {\n\t            _logger.logger.warn('Dropping 1 audio frame @ ' + Math.round(nextPtsNorm / 90) / 1000 + 's due to ' + Math.round(Math.abs(delta / 90)) + ' ms overlap.');\n\t            inputSamples.splice(i, 1);\n\t            track.len -= sample.unit.length;\n\t            // Don't touch nextPtsNorm or i\n\t          }\n\t          // Otherwise, if we're more than a frame away from where we should be, insert missing frames\n\t          // also only inject silent audio frames if currentTime !== 0 (nextPtsNorm !== 0)\n\t          else if (delta >= pesFrameDuration && nextPtsNorm) {\n\t              var missing = Math.round(delta / pesFrameDuration);\n\t              _logger.logger.warn('Injecting ' + missing + ' audio frame @ ' + Math.round(nextPtsNorm / 90) / 1000 + 's due to ' + Math.round(delta / 90) + ' ms gap.');\n\t              for (var j = 0; j < missing; j++) {\n\t                newStamp = nextPtsNorm + initDTS;\n\t                newStamp = Math.max(newStamp, initDTS);\n\t                fillFrame = _aac2.default.getSilentFrame(track.manifestCodec || track.codec, track.channelCount);\n\t                if (!fillFrame) {\n\t                  _logger.logger.log('Unable to get silent frame for given audio codec; duplicating last frame instead.');\n\t                  fillFrame = sample.unit.subarray();\n\t                }\n\t                inputSamples.splice(i, 0, { unit: fillFrame, pts: newStamp, dts: newStamp });\n\t                track.len += fillFrame.length;\n\t                nextPtsNorm += pesFrameDuration;\n\t                i += 1;\n\t              }\n\t\n\t              // Adjust sample to next expected pts\n\t              sample.pts = sample.dts = nextPtsNorm + initDTS;\n\t              nextPtsNorm += pesFrameDuration;\n\t              i += 1;\n\t            }\n\t            // Otherwise, we're within half a frame duration, so just adjust pts\n\t            else {\n\t                if (Math.abs(delta) > 0.1 * pesFrameDuration) {\n\t                  //logger.log(`Invalid frame delta ${Math.round(ptsNorm - nextPtsNorm + pesFrameDuration)} at PTS ${Math.round(ptsNorm / 90)} (should be ${Math.round(pesFrameDuration)}).`);\n\t                }\n\t                nextPtsNorm += pesFrameDuration;\n\t                if (i === 0) {\n\t                  sample.pts = sample.dts = initDTS + nextAudioPts;\n\t                } else {\n\t                  sample.pts = sample.dts = inputSamples[i - 1].pts + pesFrameDuration;\n\t                }\n\t                i += 1;\n\t              }\n\t        }\n\t      }\n\t\n\t      for (var _j = 0, _nbSamples = inputSamples.length; _j < _nbSamples; _j++) {\n\t        audioSample = inputSamples[_j];\n\t        unit = audioSample.unit;\n\t        pts = audioSample.pts - initDTS;\n\t        dts = audioSample.dts - initDTS;\n\t        //logger.log(`Audio/PTS:${Math.round(pts/90)}`);\n\t        // if not first sample\n\t        if (lastDTS !== undefined) {\n\t          ptsnorm = ptsNormalize(pts, lastDTS);\n\t          dtsnorm = ptsNormalize(dts, lastDTS);\n\t          mp4Sample.duration = Math.round((dtsnorm - lastDTS) / pes2mp4ScaleFactor);\n\t        } else {\n\t          ptsnorm = ptsNormalize(pts, nextAudioPts);\n\t          dtsnorm = ptsNormalize(dts, nextAudioPts);\n\t          var _delta = Math.round(1000 * (ptsnorm - nextAudioPts) / pesTimeScale),\n\t              numMissingFrames = 0;\n\t          // if fragment are contiguous, detect hole/overlapping between fragments\n\t          // contiguous fragments are consecutive fragments from same quality level (same level, new SN = old SN + 1)\n\t          if (contiguous && track.isAAC) {\n\t            // log delta\n\t            if (_delta) {\n\t              if (_delta > 0) {\n\t                numMissingFrames = Math.round((ptsnorm - nextAudioPts) / pesFrameDuration);\n\t                _logger.logger.log(_delta + ' ms hole between AAC samples detected,filling it');\n\t                if (numMissingFrames > 0) {\n\t                  fillFrame = _aac2.default.getSilentFrame(track.manifestCodec || track.codec, track.channelCount);\n\t                  if (!fillFrame) {\n\t                    fillFrame = unit.subarray();\n\t                  }\n\t                  track.len += numMissingFrames * fillFrame.length;\n\t                }\n\t                // if we have frame overlap, overlapping for more than half a frame duraion\n\t              } else if (_delta < -12) {\n\t                // drop overlapping audio frames... browser will deal with it\n\t                _logger.logger.log(-_delta + ' ms overlapping between AAC samples detected, drop frame');\n\t                track.len -= unit.byteLength;\n\t                continue;\n\t              }\n\t              // set PTS/DTS to expected PTS/DTS\n\t              ptsnorm = dtsnorm = nextAudioPts;\n\t            }\n\t          }\n\t          // remember first PTS of our audioSamples, ensure value is positive\n\t          firstPTS = Math.max(0, ptsnorm);\n\t          firstDTS = Math.max(0, dtsnorm);\n\t          if (track.len > 0) {\n\t            /* concatenate the audio data and construct the mdat in place\n\t              (need 8 more bytes to fill length and mdat type) */\n\t\n\t            var mdatSize = rawMPEG ? track.len : track.len + 8;\n\t            try {\n\t              mdat = new Uint8Array(mdatSize);\n\t            } catch (err) {\n\t              this.observer.trigger(_events2.default.ERROR, { type: _errors.ErrorTypes.MUX_ERROR, level: this.level, id: this.id, details: _errors.ErrorDetails.REMUX_ALLOC_ERROR, fatal: false, bytes: mdatSize, reason: 'fail allocating audio mdat ' + mdatSize });\n\t              return;\n\t            }\n\t            if (!rawMPEG) {\n\t              view = new DataView(mdat.buffer);\n\t              view.setUint32(0, mdatSize);\n\t              mdat.set(_mp4Generator2.default.types.mdat, 4);\n\t            }\n\t          } else {\n\t            // no audio samples\n\t            return;\n\t          }\n\t          for (var _i3 = 0; _i3 < numMissingFrames; _i3++) {\n\t            newStamp = ptsnorm - (numMissingFrames - _i3) * pesFrameDuration;\n\t            fillFrame = _aac2.default.getSilentFrame(track.manifestCodec || track.codec, track.channelCount);\n\t            if (!fillFrame) {\n\t              _logger.logger.log('Unable to get silent frame for given audio codec; duplicating this frame instead.');\n\t              fillFrame = unit.subarray();\n\t            }\n\t            mdat.set(fillFrame, offset);\n\t            offset += fillFrame.byteLength;\n\t            mp4Sample = {\n\t              size: fillFrame.byteLength,\n\t              cts: 0,\n\t              duration: 1024,\n\t              flags: {\n\t                isLeading: 0,\n\t                isDependedOn: 0,\n\t                hasRedundancy: 0,\n\t                degradPrio: 0,\n\t                dependsOn: 1\n\t              }\n\t            };\n\t            outputSamples.push(mp4Sample);\n\t          }\n\t        }\n\t        mdat.set(unit, offset);\n\t        var unitLen = unit.byteLength;\n\t        offset += unitLen;\n\t        //console.log('PTS/DTS/initDTS/normPTS/normDTS/relative PTS : ${audioSample.pts}/${audioSample.dts}/${initDTS}/${ptsnorm}/${dtsnorm}/${(audioSample.pts/4294967296).toFixed(3)}');\n\t        mp4Sample = {\n\t          size: unitLen,\n\t          cts: 0,\n\t          duration: 0,\n\t          flags: {\n\t            isLeading: 0,\n\t            isDependedOn: 0,\n\t            hasRedundancy: 0,\n\t            degradPrio: 0,\n\t            dependsOn: 1\n\t          }\n\t        };\n\t        outputSamples.push(mp4Sample);\n\t        lastDTS = dtsnorm;\n\t      }\n\t      var lastSampleDuration = 0;\n\t      var nbSamples = outputSamples.length;\n\t      //set last sample duration as being identical to previous sample\n\t      if (nbSamples >= 2) {\n\t        lastSampleDuration = outputSamples[nbSamples - 2].duration;\n\t        mp4Sample.duration = lastSampleDuration;\n\t      }\n\t      if (nbSamples) {\n\t        // next audio sample PTS should be equal to last sample PTS + duration\n\t        this.nextAudioPts = ptsnorm + pes2mp4ScaleFactor * lastSampleDuration;\n\t        //logger.log('Audio/PTS/PTSend:' + audioSample.pts.toFixed(0) + '/' + this.nextAacDts.toFixed(0));\n\t        track.len = 0;\n\t        track.samples = outputSamples;\n\t        if (rawMPEG) {\n\t          moof = new Uint8Array();\n\t        } else {\n\t          moof = _mp4Generator2.default.moof(track.sequenceNumber++, firstDTS / pes2mp4ScaleFactor, track);\n\t        }\n\t        track.samples = [];\n\t        var audioData = {\n\t          id: this.id,\n\t          level: this.level,\n\t          sn: this.sn,\n\t          data1: moof,\n\t          data2: mdat,\n\t          startPTS: firstPTS / pesTimeScale,\n\t          endPTS: this.nextAudioPts / pesTimeScale,\n\t          startDTS: firstDTS / pesTimeScale,\n\t          endDTS: (dtsnorm + pes2mp4ScaleFactor * lastSampleDuration) / pesTimeScale,\n\t          type: 'audio',\n\t          nb: nbSamples\n\t        };\n\t        this.observer.trigger(_events2.default.FRAG_PARSING_DATA, audioData);\n\t        return audioData;\n\t      }\n\t      return null;\n\t    }\n\t  }, {\n\t    key: 'remuxEmptyAudio',\n\t    value: function remuxEmptyAudio(track, timeOffset, contiguous, videoData) {\n\t      var pesTimeScale = this.PES_TIMESCALE,\n\t          mp4timeScale = track.timescale ? track.timescale : track.audiosamplerate,\n\t          pes2mp4ScaleFactor = pesTimeScale / mp4timeScale,\n\t          nextAudioPts = this.nextAudioPts,\n\t\n\t\n\t      // sync with video's timestamp\n\t      startDTS = (nextAudioPts !== undefined ? nextAudioPts : videoData.startDTS * pesTimeScale) + this._initDTS,\n\t          endDTS = videoData.endDTS * pesTimeScale + this._initDTS,\n\t\n\t      // one sample's duration value\n\t      sampleDuration = 1024,\n\t          frameDuration = pes2mp4ScaleFactor * sampleDuration,\n\t\n\t\n\t      // samples count of this segment's duration\n\t      nbSamples = Math.ceil((endDTS - startDTS) / frameDuration),\n\t\n\t\n\t      // silent frame\n\t      silentFrame = _aac2.default.getSilentFrame(track.manifestCodec || track.codec, track.channelCount);\n\t\n\t      _logger.logger.warn('remux empty Audio');\n\t      // Can't remux if we can't generate a silent frame...\n\t      if (!silentFrame) {\n\t        _logger.logger.trace('Unable to remuxEmptyAudio since we were unable to get a silent frame for given audio codec!');\n\t        return;\n\t      }\n\t\n\t      var samples = [];\n\t      for (var i = 0; i < nbSamples; i++) {\n\t        var stamp = startDTS + i * frameDuration;\n\t        samples.push({ unit: silentFrame, pts: stamp, dts: stamp });\n\t        track.len += silentFrame.length;\n\t      }\n\t      track.samples = samples;\n\t\n\t      this.remuxAudio(track, timeOffset, contiguous);\n\t    }\n\t  }, {\n\t    key: 'remuxID3',\n\t    value: function remuxID3(track, timeOffset) {\n\t      var length = track.samples.length,\n\t          sample;\n\t      // consume samples\n\t      if (length) {\n\t        for (var index = 0; index < length; index++) {\n\t          sample = track.samples[index];\n\t          // setting id3 pts, dts to relative time\n\t          // using this._initPTS and this._initDTS to calculate relative time\n\t          sample.pts = (sample.pts - this._initPTS) / this.PES_TIMESCALE;\n\t          sample.dts = (sample.dts - this._initDTS) / this.PES_TIMESCALE;\n\t        }\n\t        this.observer.trigger(_events2.default.FRAG_PARSING_METADATA, {\n\t          id: this.id,\n\t          level: this.level,\n\t          sn: this.sn,\n\t          samples: track.samples\n\t        });\n\t      }\n\t\n\t      track.samples = [];\n\t      timeOffset = timeOffset;\n\t    }\n\t  }, {\n\t    key: 'remuxText',\n\t    value: function remuxText(track, timeOffset) {\n\t      track.samples.sort(function (a, b) {\n\t        return a.pts - b.pts;\n\t      });\n\t\n\t      var length = track.samples.length,\n\t          sample;\n\t      // consume samples\n\t      if (length) {\n\t        for (var index = 0; index < length; index++) {\n\t          sample = track.samples[index];\n\t          // setting text pts, dts to relative time\n\t          // using this._initPTS and this._initDTS to calculate relative time\n\t          sample.pts = (sample.pts - this._initPTS) / this.PES_TIMESCALE;\n\t        }\n\t        this.observer.trigger(_events2.default.FRAG_PARSING_USERDATA, {\n\t          id: this.id,\n\t          level: this.level,\n\t          sn: this.sn,\n\t          samples: track.samples\n\t        });\n\t      }\n\t\n\t      track.samples = [];\n\t      timeOffset = timeOffset;\n\t    }\n\t  }, {\n\t    key: '_PTSNormalize',\n\t    value: function _PTSNormalize(value, reference) {\n\t      var offset;\n\t      if (reference === undefined) {\n\t        return value;\n\t      }\n\t      if (reference < value) {\n\t        // - 2^33\n\t        offset = -8589934592;\n\t      } else {\n\t        // + 2^33\n\t        offset = 8589934592;\n\t      }\n\t      /* PTS is 33bit (from 0 to 2^33 -1)\n\t        if diff between value and reference is bigger than half of the amplitude (2^32) then it means that\n\t        PTS looping occured. fill the gap */\n\t      while (Math.abs(value - reference) > 4294967296) {\n\t        value += offset;\n\t      }\n\t      return value;\n\t    }\n\t  }, {\n\t    key: 'passthrough',\n\t    get: function get() {\n\t      return false;\n\t    }\n\t  }]);\n\t\n\t  return MP4Remuxer;\n\t}();\n\t\n\texports.default = MP4Remuxer;\n\t\n\t},{\"26\":26,\"28\":28,\"29\":29,\"37\":37,\"45\":45}],39:[function(_dereq_,module,exports){\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }(); /**\n\tpassthrough remuxer\n\tn\t\n\t\n\tvar _events = _dereq_(28);\n\t\n\tvar _events2 = _interopRequireDefault(_events);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tvar PassThroughRemuxer = function () {\n\t  function PassThroughRemuxer(observer, id) {\n\t    _classCallCheck(this, PassThroughRemuxer);\n\t\n\t    this.observer = observer;\n\t    this.id = id;\n\t    this.ISGenerated = false;\n\t  }\n\t\n\t  _createClass(PassThroughRemuxer, [{\n\t    key: 'destroy',\n\t    value: function destroy() {}\n\t  }, {\n\t    key: 'insertDiscontinuity',\n\t    value: function insertDiscontinuity() {}\n\t  }, {\n\t    key: 'switchLevel',\n\t    value: function switchLevel() {\n\t      this.ISGenerated = false;\n\t    }\n\t  }, {\n\t    key: 'remux',\n\t    value: function remux(audioTrack, videoTrack, id3Track, textTrack, timeOffset, rawData) {\n\t      var observer = this.observer;\n\t      // generate Init Segment if needed\n\t      if (!this.ISGenerated) {\n\t        var tracks = {},\n\t            data = { id: this.id, tracks: tracks, unique: true },\n\t            track = videoTrack,\n\t            codec = track.codec;\n\t\n\t        if (codec) {\n\t          data.tracks.video = {\n\t            container: track.container,\n\t            codec: codec,\n\t            metadata: {\n\t              width: track.width,\n\t              height: track.height\n\t            }\n\t          };\n\t        }\n\t\n\t        track = audioTrack;\n\t        codec = track.codec;\n\t        if (codec) {\n\t          data.tracks.audio = {\n\t            container: track.container,\n\t            codec: codec,\n\t            metadata: {\n\t              channelCount: track.channelCount\n\t            }\n\t          };\n\t        }\n\t        this.ISGenerated = true;\n\t        observer.trigger(_events2.default.FRAG_PARSING_INIT_SEGMENT, data);\n\t      }\n\t      observer.trigger(_events2.default.FRAG_PARSING_DATA, {\n\t        id: this.id,\n\t        data1: rawData,\n\t        startPTS: timeOffset,\n\t        startDTS: timeOffset,\n\t        type: 'audiovideo',\n\t        nb: 1,\n\t        dropped: 0\n\t      });\n\t    }\n\t  }, {\n\t    key: 'passthrough',\n\t    get: function get() {\n\t      return true;\n\t    }\n\t  }]);\n\t\n\t  return PassThroughRemuxer;\n\t}();\n\t\n\texports.default = PassThroughRemuxer;\n\t\n\t},{\"28\":28}],40:[function(_dereq_,module,exports){\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tvar DECIMAL_RESOLUTION_REGEX = /^(\\d+)x(\\d+)$/;\n\tvar ATTR_LIST_REGEX = /\\s*(.+?)\\s*=((?:\\\".*?\\\")|.*?)(?:,|$)/g;\n\t\n\t// adapted from https://github.com/kanongil/node-m3u8parse/blob/master/attrlist.js\n\t\n\tvar AttrList = function () {\n\t  function AttrList(attrs) {\n\t    _classCallCheck(this, AttrList);\n\t\n\t    if (typeof attrs === 'string') {\n\t      attrs = AttrList.parseAttrList(attrs);\n\t    }\n\t    for (var attr in attrs) {\n\t      if (attrs.hasOwnProperty(attr)) {\n\t        this[attr] = attrs[attr];\n\t      }\n\t    }\n\t  }\n\t\n\t  _createClass(AttrList, [{\n\t    key: 'decimalInteger',\n\t    value: function decimalInteger(attrName) {\n\t      var intValue = parseInt(this[attrName], 10);\n\t      if (intValue > Number.MAX_SAFE_INTEGER) {\n\t        return Infinity;\n\t      }\n\t      return intValue;\n\t    }\n\t  }, {\n\t    key: 'hexadecimalInteger',\n\t    value: function hexadecimalInteger(attrName) {\n\t      if (this[attrName]) {\n\t        var stringValue = (this[attrName] || '0x').slice(2);\n\t        stringValue = (stringValue.length & 1 ? '0' : '') + stringValue;\n\t\n\t        var value = new Uint8Array(stringValue.length / 2);\n\t        for (var i = 0; i < stringValue.length / 2; i++) {\n\t          value[i] = parseInt(stringValue.slice(i * 2, i * 2 + 2), 16);\n\t        }\n\t        return value;\n\t      } else {\n\t        return null;\n\t      }\n\t    }\n\t  }, {\n\t    key: 'hexadecimalIntegerAsNumber',\n\t    value: function hexadecimalIntegerAsNumber(attrName) {\n\t      var intValue = parseInt(this[attrName], 16);\n\t      if (intValue > Number.MAX_SAFE_INTEGER) {\n\t        return Infinity;\n\t      }\n\t      return intValue;\n\t    }\n\t  }, {\n\t    key: 'decimalFloatingPoint',\n\t    value: function decimalFloatingPoint(attrName) {\n\t      return parseFloat(this[attrName]);\n\t    }\n\t  }, {\n\t    key: 'enumeratedString',\n\t    value: function enumeratedString(attrName) {\n\t      return this[attrName];\n\t    }\n\t  }, {\n\t    key: 'decimalResolution',\n\t    value: function decimalResolution(attrName) {\n\t      var res = DECIMAL_RESOLUTION_REGEX.exec(this[attrName]);\n\t      if (res === null) {\n\t        return undefined;\n\t      }\n\t      return {\n\t        width: parseInt(res[1], 10),\n\t        height: parseInt(res[2], 10)\n\t      };\n\t    }\n\t  }], [{\n\t    key: 'parseAttrList',\n\t    value: function parseAttrList(input) {\n\t      var match,\n\t          attrs = {};\n\t      ATTR_LIST_REGEX.lastIndex = 0;\n\t      while ((match = ATTR_LIST_REGEX.exec(input)) !== null) {\n\t        var value = match[2],\n\t            quote = '\"';\n\t\n\t        if (value.indexOf(quote) === 0 && value.lastIndexOf(quote) === value.length - 1) {\n\t          value = value.slice(1, -1);\n\t        }\n\t        attrs[match[1]] = value;\n\t      }\n\t      return attrs;\n\t    }\n\t  }]);\n\t\n\t  return AttrList;\n\t}();\n\t\n\texports.default = AttrList;\n\t\n\t},{}],41:[function(_dereq_,module,exports){\n\t\"use strict\";\n\t\n\tvar BinarySearch = {\n\t    /**\n\t     * Searches for an item in an array which matches a certain condition.\n\t     * This requires the condition to only match one item in the array,\n\t     * and for the array to be ordered.\n\t     *\n\t     * @param {Array} list The array to search.\n\t     * @param {Function} comparisonFunction\n\t     *      Called and provided a candidate item as the first argument.\n\t     *      Should return:\n\t     *          > -1 if the item should be located at a lower index than the provided item.\n\t     *          > 1 if the item should be located at a higher index than the provided item.\n\t     *          > 0 if the item is the item you're looking for.\n\t     *\n\t     * @return {*} The object if it is found or null otherwise.\n\t     */\n\t    search: function search(list, comparisonFunction) {\n\t        var minIndex = 0;\n\t        var maxIndex = list.length - 1;\n\t        var currentIndex = null;\n\t        var currentElement = null;\n\t\n\t        while (minIndex <= maxIndex) {\n\t            currentIndex = (minIndex + maxIndex) / 2 | 0;\n\t            currentElement = list[currentIndex];\n\t\n\t            var comparisonResult = comparisonFunction(currentElement);\n\t            if (comparisonResult > 0) {\n\t                minIndex = currentIndex + 1;\n\t            } else if (comparisonResult < 0) {\n\t                maxIndex = currentIndex - 1;\n\t            } else {\n\t                return currentElement;\n\t            }\n\t        }\n\t\n\t        return null;\n\t    }\n\t};\n\t\n\tmodule.exports = BinarySearch;\n\t\n\t},{}],42:[function(_dereq_,module,exports){\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\t/**\n\t *\n\t * This code was ported from the dash.js project at:\n\t *   https://github.com/Dash-Industry-Forum/dash.js/blob/development/externals/cea608-parser.js\n\t *   https://github.com/Dash-Industry-Forum/dash.js/commit/8269b26a761e0853bb21d78780ed945144ecdd4d#diff-71bc295a2d6b6b7093a1d3290d53a4b2\n\t *\n\t * The original copyright appears below:\n\t *\n\t * The copyright in this software is being made available under the BSD License,\n\t * included below. This software may be subject to other third party and contributor\n\t * rights, including patent rights, and no such rights are granted under this license.\n\t *\n\t * Copyright (c) 2015-2016, DASH Industry Forum.\n\t * All rights reserved.\n\t *\n\t * Redistribution and use in source and binary forms, with or without modification,\n\t * are permitted provided that the following conditions are met:\n\t *  1. Redistributions of source code must retain the above copyright notice, this\n\t *  list of conditions and the following disclaimer.\n\t *  * Redistributions in binary form must reproduce the above copyright notice,\n\t *  this list of conditions and the following disclaimer in the documentation and/or\n\t *  other materials provided with the distribution.\n\t *  2. Neither the name of Dash Industry Forum nor the names of its\n\t *  contributors may be used to endorse or promote products derived from this software\n\t *  without specific prior written permission.\n\t *\n\t *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n\t *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n\t *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n\t *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n\t *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n\t *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n\t *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n\t *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n\t *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n\t *  POSSIBILITY OF SUCH DAMAGE.\n\t */\n\t/**\n\t *  Exceptions from regular ASCII. CodePoints are mapped to UTF-16 codes\n\t */\n\t\n\tvar specialCea608CharsCodes = {\n\t    0x2a: 0xe1, // lowercase a, acute accent\n\t    0x5c: 0xe9, // lowercase e, acute accent\n\t    0x5e: 0xed, // lowercase i, acute accent\n\t    0x5f: 0xf3, // lowercase o, acute accent\n\t    0x60: 0xfa, // lowercase u, acute accent\n\t    0x7b: 0xe7, // lowercase c with cedilla\n\t    0x7c: 0xf7, // division symbol\n\t    0x7d: 0xd1, // uppercase N tilde\n\t    0x7e: 0xf1, // lowercase n tilde\n\t    0x7f: 0x2588, // Full block\n\t    // THIS BLOCK INCLUDES THE 16 EXTENDED (TWO-BYTE) LINE 21 CHARACTERS\n\t    // THAT COME FROM HI BYTE=0x11 AND LOW BETWEEN 0x30 AND 0x3F\n\t    // THIS MEANS THAT \\x50 MUST BE ADDED TO THE VALUES\n\t    0x80: 0xae, // Registered symbol (R)\n\t    0x81: 0xb0, // degree sign\n\t    0x82: 0xbd, // 1/2 symbol\n\t    0x83: 0xbf, // Inverted (open) question mark\n\t    0x84: 0x2122, // Trademark symbol (TM)\n\t    0x85: 0xa2, // Cents symbol\n\t    0x86: 0xa3, // Pounds sterling\n\t    0x87: 0x266a, // Music 8'th note\n\t    0x88: 0xe0, // lowercase a, grave accent\n\t    0x89: 0x20, // transparent space (regular)\n\t    0x8a: 0xe8, // lowercase e, grave accent\n\t    0x8b: 0xe2, // lowercase a, circumflex accent\n\t    0x8c: 0xea, // lowercase e, circumflex accent\n\t    0x8d: 0xee, // lowercase i, circumflex accent\n\t    0x8e: 0xf4, // lowercase o, circumflex accent\n\t    0x8f: 0xfb, // lowercase u, circumflex accent\n\t    // THIS BLOCK INCLUDES THE 32 EXTENDED (TWO-BYTE) LINE 21 CHARACTERS\n\t    // THAT COME FROM HI BYTE=0x12 AND LOW BETWEEN 0x20 AND 0x3F\n\t    0x90: 0xc1, // capital letter A with acute\n\t    0x91: 0xc9, // capital letter E with acute\n\t    0x92: 0xd3, // capital letter O with acute\n\t    0x93: 0xda, // capital letter U with acute\n\t    0x94: 0xdc, // capital letter U with diaresis\n\t    0x95: 0xfc, // lowercase letter U with diaeresis\n\t    0x96: 0x2018, // opening single quote\n\t    0x97: 0xa1, // inverted exclamation mark\n\t    0x98: 0x2a, // asterisk\n\t    0x99: 0x2019, // closing single quote\n\t    0x9a: 0x2501, // box drawings heavy horizontal\n\t    0x9b: 0xa9, // copyright sign\n\t    0x9c: 0x2120, // Service mark\n\t    0x9d: 0x2022, // (round) bullet\n\t    0x9e: 0x201c, // Left double quotation mark\n\t    0x9f: 0x201d, // Right double quotation mark\n\t    0xa0: 0xc0, // uppercase A, grave accent\n\t    0xa1: 0xc2, // uppercase A, circumflex\n\t    0xa2: 0xc7, // uppercase C with cedilla\n\t    0xa3: 0xc8, // uppercase E, grave accent\n\t    0xa4: 0xca, // uppercase E, circumflex\n\t    0xa5: 0xcb, // capital letter E with diaresis\n\t    0xa6: 0xeb, // lowercase letter e with diaresis\n\t    0xa7: 0xce, // uppercase I, circumflex\n\t    0xa8: 0xcf, // uppercase I, with diaresis\n\t    0xa9: 0xef, // lowercase i, with diaresis\n\t    0xaa: 0xd4, // uppercase O, circumflex\n\t    0xab: 0xd9, // uppercase U, grave accent\n\t    0xac: 0xf9, // lowercase u, grave accent\n\t    0xad: 0xdb, // uppercase U, circumflex\n\t    0xae: 0xab, // left-pointing double angle quotation mark\n\t    0xaf: 0xbb, // right-pointing double angle quotation mark\n\t    // THIS BLOCK INCLUDES THE 32 EXTENDED (TWO-BYTE) LINE 21 CHARACTERS\n\t    // THAT COME FROM HI BYTE=0x13 AND LOW BETWEEN 0x20 AND 0x3F\n\t    0xb0: 0xc3, // Uppercase A, tilde\n\t    0xb1: 0xe3, // Lowercase a, tilde\n\t    0xb2: 0xcd, // Uppercase I, acute accent\n\t    0xb3: 0xcc, // Uppercase I, grave accent\n\t    0xb4: 0xec, // Lowercase i, grave accent\n\t    0xb5: 0xd2, // Uppercase O, grave accent\n\t    0xb6: 0xf2, // Lowercase o, grave accent\n\t    0xb7: 0xd5, // Uppercase O, tilde\n\t    0xb8: 0xf5, // Lowercase o, tilde\n\t    0xb9: 0x7b, // Open curly brace\n\t    0xba: 0x7d, // Closing curly brace\n\t    0xbb: 0x5c, // Backslash\n\t    0xbc: 0x5e, // Caret\n\t    0xbd: 0x5f, // Underscore\n\t    0xbe: 0x7c, // Pipe (vertical line)\n\t    0xbf: 0x223c, // Tilde operator\n\t    0xc0: 0xc4, // Uppercase A, umlaut\n\t    0xc1: 0xe4, // Lowercase A, umlaut\n\t    0xc2: 0xd6, // Uppercase O, umlaut\n\t    0xc3: 0xf6, // Lowercase o, umlaut\n\t    0xc4: 0xdf, // Esszett (sharp S)\n\t    0xc5: 0xa5, // Yen symbol\n\t    0xc6: 0xa4, // Generic currency sign\n\t    0xc7: 0x2503, // Box drawings heavy vertical\n\t    0xc8: 0xc5, // Uppercase A, ring\n\t    0xc9: 0xe5, // Lowercase A, ring\n\t    0xca: 0xd8, // Uppercase O, stroke\n\t    0xcb: 0xf8, // Lowercase o, strok\n\t    0xcc: 0x250f, // Box drawings heavy down and right\n\t    0xcd: 0x2513, // Box drawings heavy down and left\n\t    0xce: 0x2517, // Box drawings heavy up and right\n\t    0xcf: 0x251b // Box drawings heavy up and left\n\t};\n\t\n\t/**\n\t * Utils\n\t */\n\tvar getCharForByte = function getCharForByte(byte) {\n\t    var charCode = byte;\n\t    if (specialCea608CharsCodes.hasOwnProperty(byte)) {\n\t        charCode = specialCea608CharsCodes[byte];\n\t    }\n\t    return String.fromCharCode(charCode);\n\t};\n\t\n\tvar NR_ROWS = 15,\n\t    NR_COLS = 32;\n\t// Tables to look up row from PAC data\n\tvar rowsLowCh1 = { 0x11: 1, 0x12: 3, 0x15: 5, 0x16: 7, 0x17: 9, 0x10: 11, 0x13: 12, 0x14: 14 };\n\tvar rowsHighCh1 = { 0x11: 2, 0x12: 4, 0x15: 6, 0x16: 8, 0x17: 10, 0x13: 13, 0x14: 15 };\n\tvar rowsLowCh2 = { 0x19: 1, 0x1A: 3, 0x1D: 5, 0x1E: 7, 0x1F: 9, 0x18: 11, 0x1B: 12, 0x1C: 14 };\n\tvar rowsHighCh2 = { 0x19: 2, 0x1A: 4, 0x1D: 6, 0x1E: 8, 0x1F: 10, 0x1B: 13, 0x1C: 15 };\n\t\n\tvar backgroundColors = ['white', 'green', 'blue', 'cyan', 'red', 'yellow', 'magenta', 'black', 'transparent'];\n\t\n\t/**\n\t * Simple logger class to be able to write with time-stamps and filter on level.\n\t */\n\tvar logger = {\n\t    verboseFilter: { 'DATA': 3, 'DEBUG': 3, 'INFO': 2, 'WARNING': 2, 'TEXT': 1, 'ERROR': 0 },\n\t    time: null,\n\t    verboseLevel: 0, // Only write errors\n\t    setTime: function setTime(newTime) {\n\t        this.time = newTime;\n\t    },\n\t    log: function log(severity, msg) {\n\t        var minLevel = this.verboseFilter[severity];\n\t        if (this.verboseLevel >= minLevel) {\n\t            console.log(this.time + ' [' + severity + '] ' + msg);\n\t        }\n\t    }\n\t};\n\t\n\tvar numArrayToHexArray = function numArrayToHexArray(numArray) {\n\t    var hexArray = [];\n\t    for (var j = 0; j < numArray.length; j++) {\n\t        hexArray.push(numArray[j].toString(16));\n\t    }\n\t    return hexArray;\n\t};\n\t\n\tvar PenState = function () {\n\t    function PenState(foreground, underline, italics, background, flash) {\n\t        _classCallCheck(this, PenState);\n\t\n\t        this.foreground = foreground || 'white';\n\t        this.underline = underline || false;\n\t        this.italics = italics || false;\n\t        this.background = background || 'black';\n\t        this.flash = flash || false;\n\t    }\n\t\n\t    _createClass(PenState, [{\n\t        key: 'reset',\n\t        value: function reset() {\n\t            this.foreground = 'white';\n\t            this.underline = false;\n\t            this.italics = false;\n\t            this.background = 'black';\n\t            this.flash = false;\n\t        }\n\t    }, {\n\t        key: 'setStyles',\n\t        value: function setStyles(styles) {\n\t            var attribs = ['foreground', 'underline', 'italics', 'background', 'flash'];\n\t            for (var i = 0; i < attribs.length; i++) {\n\t                var style = attribs[i];\n\t                if (styles.hasOwnProperty(style)) {\n\t                    this[style] = styles[style];\n\t                }\n\t            }\n\t        }\n\t    }, {\n\t        key: 'isDefault',\n\t        value: function isDefault() {\n\t            return this.foreground === 'white' && !this.underline && !this.italics && this.background === 'black' && !this.flash;\n\t        }\n\t    }, {\n\t        key: 'equals',\n\t        value: function equals(other) {\n\t            return this.foreground === other.foreground && this.underline === other.underline && this.italics === other.italics && this.background === other.background && this.flash === other.flash;\n\t        }\n\t    }, {\n\t        key: 'copy',\n\t        value: function copy(newPenState) {\n\t            this.foreground = newPenState.foreground;\n\t            this.underline = newPenState.underline;\n\t            this.italics = newPenState.italics;\n\t            this.background = newPenState.background;\n\t            this.flash = newPenState.flash;\n\t        }\n\t    }, {\n\t        key: 'toString',\n\t        value: function toString() {\n\t            return 'color=' + this.foreground + ', underline=' + this.underline + ', italics=' + this.italics + ', background=' + this.background + ', flash=' + this.flash;\n\t        }\n\t    }]);\n\t\n\t    return PenState;\n\t}();\n\t\n\t/**\n\t * Unicode character with styling and background.\n\t * @constructor\n\t */\n\t\n\t\n\tvar StyledUnicodeChar = function () {\n\t    function StyledUnicodeChar(uchar, foreground, underline, italics, background, flash) {\n\t        _classCallCheck(this, StyledUnicodeChar);\n\t\n\t        this.uchar = uchar || ' '; // unicode character\n\t        this.penState = new PenState(foreground, underline, italics, background, flash);\n\t    }\n\t\n\t    _createClass(StyledUnicodeChar, [{\n\t        key: 'reset',\n\t        value: function reset() {\n\t            this.uchar = ' ';\n\t            this.penState.reset();\n\t        }\n\t    }, {\n\t        key: 'setChar',\n\t        value: function setChar(uchar, newPenState) {\n\t            this.uchar = uchar;\n\t            this.penState.copy(newPenState);\n\t        }\n\t    }, {\n\t        key: 'setPenState',\n\t        value: function setPenState(newPenState) {\n\t            this.penState.copy(newPenState);\n\t        }\n\t    }, {\n\t        key: 'equals',\n\t        value: function equals(other) {\n\t            return this.uchar === other.uchar && this.penState.equals(other.penState);\n\t        }\n\t    }, {\n\t        key: 'copy',\n\t        value: function copy(newChar) {\n\t            this.uchar = newChar.uchar;\n\t            this.penState.copy(newChar.penState);\n\t        }\n\t    }, {\n\t        key: 'isEmpty',\n\t        value: function isEmpty() {\n\t            return this.uchar === ' ' && this.penState.isDefault();\n\t        }\n\t    }]);\n\t\n\t    return StyledUnicodeChar;\n\t}();\n\t\n\t/**\n\t * CEA-608 row consisting of NR_COLS instances of StyledUnicodeChar.\n\t * @constructor\n\t */\n\t\n\t\n\tvar Row = function () {\n\t    function Row() {\n\t        _classCallCheck(this, Row);\n\t\n\t        this.chars = [];\n\t        for (var i = 0; i < NR_COLS; i++) {\n\t            this.chars.push(new StyledUnicodeChar());\n\t        }\n\t        this.pos = 0;\n\t        this.currPenState = new PenState();\n\t    }\n\t\n\t    _createClass(Row, [{\n\t        key: 'equals',\n\t        value: function equals(other) {\n\t            var equal = true;\n\t            for (var i = 0; i < NR_COLS; i++) {\n\t                if (!this.chars[i].equals(other.chars[i])) {\n\t                    equal = false;\n\t                    break;\n\t                }\n\t            }\n\t            return equal;\n\t        }\n\t    }, {\n\t        key: 'copy',\n\t        value: function copy(other) {\n\t            for (var i = 0; i < NR_COLS; i++) {\n\t                this.chars[i].copy(other.chars[i]);\n\t            }\n\t        }\n\t    }, {\n\t        key: 'isEmpty',\n\t        value: function isEmpty() {\n\t            var empty = true;\n\t            for (var i = 0; i < NR_COLS; i++) {\n\t                if (!this.chars[i].isEmpty()) {\n\t                    empty = false;\n\t                    break;\n\t                }\n\t            }\n\t            return empty;\n\t        }\n\t\n\t        /**\n\t         *  Set the cursor to a valid column.\n\t         */\n\t\n\t    }, {\n\t        key: 'setCursor',\n\t        value: function setCursor(absPos) {\n\t            if (this.pos !== absPos) {\n\t                this.pos = absPos;\n\t            }\n\t            if (this.pos < 0) {\n\t                logger.log('ERROR', 'Negative cursor position ' + this.pos);\n\t                this.pos = 0;\n\t            } else if (this.pos > NR_COLS) {\n\t                logger.log('ERROR', 'Too large cursor position ' + this.pos);\n\t                this.pos = NR_COLS;\n\t            }\n\t        }\n\t\n\t        /**\n\t         * Move the cursor relative to current position.\n\t         */\n\t\n\t    }, {\n\t        key: 'moveCursor',\n\t        value: function moveCursor(relPos) {\n\t            var newPos = this.pos + relPos;\n\t            if (relPos > 1) {\n\t                for (var i = this.pos + 1; i < newPos + 1; i++) {\n\t                    this.chars[i].setPenState(this.currPenState);\n\t                }\n\t            }\n\t            this.setCursor(newPos);\n\t        }\n\t\n\t        /**\n\t         * Backspace, move one step back and clear character.\n\t         */\n\t\n\t    }, {\n\t        key: 'backSpace',\n\t        value: function backSpace() {\n\t            this.moveCursor(-1);\n\t            this.chars[this.pos].setChar(' ', this.currPenState);\n\t        }\n\t    }, {\n\t        key: 'insertChar',\n\t        value: function insertChar(byte) {\n\t            if (byte >= 0x90) {\n\t                //Extended char\n\t                this.backSpace();\n\t            }\n\t            var char = getCharForByte(byte);\n\t            if (this.pos >= NR_COLS) {\n\t                logger.log('ERROR', 'Cannot insert ' + byte.toString(16) + ' (' + char + ') at position ' + this.pos + '. Skipping it!');\n\t                return;\n\t            }\n\t            this.chars[this.pos].setChar(char, this.currPenState);\n\t            this.moveCursor(1);\n\t        }\n\t    }, {\n\t        key: 'clearFromPos',\n\t        value: function clearFromPos(startPos) {\n\t            var i;\n\t            for (i = startPos; i < NR_COLS; i++) {\n\t                this.chars[i].reset();\n\t            }\n\t        }\n\t    }, {\n\t        key: 'clear',\n\t        value: function clear() {\n\t            this.clearFromPos(0);\n\t            this.pos = 0;\n\t            this.currPenState.reset();\n\t        }\n\t    }, {\n\t        key: 'clearToEndOfRow',\n\t        value: function clearToEndOfRow() {\n\t            this.clearFromPos(this.pos);\n\t        }\n\t    }, {\n\t        key: 'getTextString',\n\t        value: function getTextString() {\n\t            var chars = [];\n\t            var empty = true;\n\t            for (var i = 0; i < NR_COLS; i++) {\n\t                var char = this.chars[i].uchar;\n\t                if (char !== ' ') {\n\t                    empty = false;\n\t                }\n\t                chars.push(char);\n\t            }\n\t            if (empty) {\n\t                return '';\n\t            } else {\n\t                return chars.join('');\n\t            }\n\t        }\n\t    }, {\n\t        key: 'setPenStyles',\n\t        value: function setPenStyles(styles) {\n\t            this.currPenState.setStyles(styles);\n\t            var currChar = this.chars[this.pos];\n\t            currChar.setPenState(this.currPenState);\n\t        }\n\t    }]);\n\t\n\t    return Row;\n\t}();\n\t\n\t/**\n\t * Keep a CEA-608 screen of 32x15 styled characters\n\t * @constructor\n\t*/\n\t\n\t\n\tvar CaptionScreen = function () {\n\t    function CaptionScreen() {\n\t        _classCallCheck(this, CaptionScreen);\n\t\n\t        this.rows = [];\n\t        for (var i = 0; i < NR_ROWS; i++) {\n\t            this.rows.push(new Row()); // Note that we use zero-based numbering (0-14)\n\t        }\n\t        this.currRow = NR_ROWS - 1;\n\t        this.nrRollUpRows = null;\n\t        this.reset();\n\t    }\n\t\n\t    _createClass(CaptionScreen, [{\n\t        key: 'reset',\n\t        value: function reset() {\n\t            for (var i = 0; i < NR_ROWS; i++) {\n\t                this.rows[i].clear();\n\t            }\n\t            this.currRow = NR_ROWS - 1;\n\t        }\n\t    }, {\n\t        key: 'equals',\n\t        value: function equals(other) {\n\t            var equal = true;\n\t            for (var i = 0; i < NR_ROWS; i++) {\n\t                if (!this.rows[i].equals(other.rows[i])) {\n\t                    equal = false;\n\t                    break;\n\t                }\n\t            }\n\t            return equal;\n\t        }\n\t    }, {\n\t        key: 'copy',\n\t        value: function copy(other) {\n\t            for (var i = 0; i < NR_ROWS; i++) {\n\t                this.rows[i].copy(other.rows[i]);\n\t            }\n\t        }\n\t    }, {\n\t        key: 'isEmpty',\n\t        value: function isEmpty() {\n\t            var empty = true;\n\t            for (var i = 0; i < NR_ROWS; i++) {\n\t                if (!this.rows[i].isEmpty()) {\n\t                    empty = false;\n\t                    break;\n\t                }\n\t            }\n\t            return empty;\n\t        }\n\t    }, {\n\t        key: 'backSpace',\n\t        value: function backSpace() {\n\t            var row = this.rows[this.currRow];\n\t            row.backSpace();\n\t        }\n\t    }, {\n\t        key: 'clearToEndOfRow',\n\t        value: function clearToEndOfRow() {\n\t            var row = this.rows[this.currRow];\n\t            row.clearToEndOfRow();\n\t        }\n\t\n\t        /**\n\t         * Insert a character (without styling) in the current row.\n\t         */\n\t\n\t    }, {\n\t        key: 'insertChar',\n\t        value: function insertChar(char) {\n\t            var row = this.rows[this.currRow];\n\t            row.insertChar(char);\n\t        }\n\t    }, {\n\t        key: 'setPen',\n\t        value: function setPen(styles) {\n\t            var row = this.rows[this.currRow];\n\t            row.setPenStyles(styles);\n\t        }\n\t    }, {\n\t        key: 'moveCursor',\n\t        value: function moveCursor(relPos) {\n\t            var row = this.rows[this.currRow];\n\t            row.moveCursor(relPos);\n\t        }\n\t    }, {\n\t        key: 'setCursor',\n\t        value: function setCursor(absPos) {\n\t            logger.log('INFO', 'setCursor: ' + absPos);\n\t            var row = this.rows[this.currRow];\n\t            row.setCursor(absPos);\n\t        }\n\t    }, {\n\t        key: 'setPAC',\n\t        value: function setPAC(pacData, lastOutputScreen) {\n\t            logger.log('INFO', 'pacData = ' + JSON.stringify(pacData));\n\t            var newRow = pacData.row - 1;\n\t            if (this.nrRollUpRows && newRow < this.nrRollUpRows - 1) {\n\t                newRow = this.nrRollUpRows - 1;\n\t            }\n\t\n\t            //Make sure this only affects Roll-up Captions by checking this.nrRollUpRows\n\t            if (this.nrRollUpRows && this.currRow !== newRow) {\n\t                //clear all rows first\n\t                for (var i = 0; i < NR_ROWS; i++) {\n\t                    this.rows[i].clear();\n\t                }\n\t\n\t                //Copy this.nrRollUpRows rows from lastOutputScreen and place it in the newRow location\n\t                //topRowIndex - the start of rows to copy (inclusive index)\n\t                var topRowIndex = this.currRow + 1 - this.nrRollUpRows;\n\t                //We only copy if the last position was already shown.\n\t                //We use the cueStartTime value to check this.\n\t                var prevLineTime = lastOutputScreen.rows[topRowIndex].cueStartTime;\n\t                if (prevLineTime && prevLineTime < logger.time) {\n\t                    for (i = 0; i < this.nrRollUpRows; i++) {\n\t                        this.rows[newRow - this.nrRollUpRows + i + 1].copy(lastOutputScreen.rows[topRowIndex + i]);\n\t                    }\n\t                }\n\t            }\n\t\n\t            this.currRow = newRow;\n\t            var row = this.rows[this.currRow];\n\t            if (pacData.indent !== null) {\n\t                var indent = pacData.indent;\n\t                var prevPos = Math.max(indent - 1, 0);\n\t                row.setCursor(pacData.indent);\n\t                pacData.color = row.chars[prevPos].penState.foreground;\n\t            }\n\t            var styles = { foreground: pacData.color, underline: pacData.underline, italics: pacData.italics, background: 'black', flash: false };\n\t            this.setPen(styles);\n\t        }\n\t\n\t        /**\n\t         * Set background/extra foreground, but first do back_space, and then insert space (backwards compatibility).\n\t         */\n\t\n\t    }, {\n\t        key: 'setBkgData',\n\t        value: function setBkgData(bkgData) {\n\t\n\t            logger.log('INFO', 'bkgData = ' + JSON.stringify(bkgData));\n\t            this.backSpace();\n\t            this.setPen(bkgData);\n\t            this.insertChar(0x20); //Space\n\t        }\n\t    }, {\n\t        key: 'setRollUpRows',\n\t        value: function setRollUpRows(nrRows) {\n\t            this.nrRollUpRows = nrRows;\n\t        }\n\t    }, {\n\t        key: 'rollUp',\n\t        value: function rollUp() {\n\t            if (this.nrRollUpRows === null) {\n\t                logger.log('DEBUG', 'roll_up but nrRollUpRows not set yet');\n\t                return; //Not properly setup\n\t            }\n\t            logger.log('TEXT', this.getDisplayText());\n\t            var topRowIndex = this.currRow + 1 - this.nrRollUpRows;\n\t            var topRow = this.rows.splice(topRowIndex, 1)[0];\n\t            topRow.clear();\n\t            this.rows.splice(this.currRow, 0, topRow);\n\t            logger.log('INFO', 'Rolling up');\n\t            //logger.log('TEXT', this.get_display_text())\n\t        }\n\t\n\t        /**\n\t         * Get all non-empty rows with as unicode text.\n\t         */\n\t\n\t    }, {\n\t        key: 'getDisplayText',\n\t        value: function getDisplayText(asOneRow) {\n\t            asOneRow = asOneRow || false;\n\t            var displayText = [];\n\t            var text = '';\n\t            var rowNr = -1;\n\t            for (var i = 0; i < NR_ROWS; i++) {\n\t                var rowText = this.rows[i].getTextString();\n\t                if (rowText) {\n\t                    rowNr = i + 1;\n\t                    if (asOneRow) {\n\t                        displayText.push('Row ' + rowNr + ': \\'' + rowText + '\\'');\n\t                    } else {\n\t                        displayText.push(rowText.trim());\n\t                    }\n\t                }\n\t            }\n\t            if (displayText.length > 0) {\n\t                if (asOneRow) {\n\t                    text = '[' + displayText.join(' | ') + ']';\n\t                } else {\n\t                    text = displayText.join('\\n');\n\t                }\n\t            }\n\t            return text;\n\t        }\n\t    }, {\n\t        key: 'getTextAndFormat',\n\t        value: function getTextAndFormat() {\n\t            return this.rows;\n\t        }\n\t    }]);\n\t\n\t    return CaptionScreen;\n\t}();\n\t\n\t//var modes = ['MODE_ROLL-UP', 'MODE_POP-ON', 'MODE_PAINT-ON', 'MODE_TEXT'];\n\t\n\tvar Cea608Channel = function () {\n\t    function Cea608Channel(channelNumber, outputFilter) {\n\t        _classCallCheck(this, Cea608Channel);\n\t\n\t        this.chNr = channelNumber;\n\t        this.outputFilter = outputFilter;\n\t        this.mode = null;\n\t        this.verbose = 0;\n\t        this.displayedMemory = new CaptionScreen();\n\t        this.nonDisplayedMemory = new CaptionScreen();\n\t        this.lastOutputScreen = new CaptionScreen();\n\t        this.currRollUpRow = this.displayedMemory.rows[NR_ROWS - 1];\n\t        this.writeScreen = this.displayedMemory;\n\t        this.mode = null;\n\t        this.cueStartTime = null; // Keeps track of where a cue started.\n\t    }\n\t\n\t    _createClass(Cea608Channel, [{\n\t        key: 'reset',\n\t        value: function reset() {\n\t            this.mode = null;\n\t            this.displayedMemory.reset();\n\t            this.nonDisplayedMemory.reset();\n\t            this.lastOutputScreen.reset();\n\t            this.currRollUpRow = this.displayedMemory.rows[NR_ROWS - 1];\n\t            this.writeScreen = this.displayedMemory;\n\t            this.mode = null;\n\t            this.cueStartTime = null;\n\t            this.lastCueEndTime = null;\n\t        }\n\t    }, {\n\t        key: 'getHandler',\n\t        value: function getHandler() {\n\t            return this.outputFilter;\n\t        }\n\t    }, {\n\t        key: 'setHandler',\n\t        value: function setHandler(newHandler) {\n\t            this.outputFilter = newHandler;\n\t        }\n\t    }, {\n\t        key: 'setPAC',\n\t        value: function setPAC(pacData) {\n\t            this.writeScreen.setPAC(pacData, this.lastOutputScreen);\n\t        }\n\t    }, {\n\t        key: 'setBkgData',\n\t        value: function setBkgData(bkgData) {\n\t            this.writeScreen.setBkgData(bkgData);\n\t        }\n\t    }, {\n\t        key: 'setMode',\n\t        value: function setMode(newMode) {\n\t            if (newMode === this.mode) {\n\t                return;\n\t            }\n\t            this.mode = newMode;\n\t            logger.log('INFO', 'MODE=' + newMode);\n\t            if (this.mode === 'MODE_POP-ON') {\n\t                this.writeScreen = this.nonDisplayedMemory;\n\t            } else {\n\t                this.writeScreen = this.displayedMemory;\n\t                this.writeScreen.reset();\n\t                this.lastOutputScreen.reset();\n\t            }\n\t            if (this.mode !== 'MODE_ROLL-UP') {\n\t                this.displayedMemory.nrRollUpRows = null;\n\t                this.nonDisplayedMemory.nrRollUpRows = null;\n\t            }\n\t            this.mode = newMode;\n\t        }\n\t    }, {\n\t        key: 'insertChars',\n\t        value: function insertChars(chars) {\n\t            for (var i = 0; i < chars.length; i++) {\n\t                this.writeScreen.insertChar(chars[i]);\n\t            }\n\t            var screen = this.writeScreen === this.displayedMemory ? 'DISP' : 'NON_DISP';\n\t            logger.log('INFO', screen + ': ' + this.writeScreen.getDisplayText(true));\n\t            if (this.mode === 'MODE_PAINT-ON' || this.mode === 'MODE_ROLL-UP') {\n\t                logger.log('TEXT', 'DISPLAYED: ' + this.displayedMemory.getDisplayText(true));\n\t                this.outputDataUpdate();\n\t            }\n\t        }\n\t    }, {\n\t        key: 'ccRCL',\n\t        value: function ccRCL() {\n\t            // Resume Caption Loading (switch mode to Pop On)\n\t            logger.log('INFO', 'RCL - Resume Caption Loading');\n\t            this.setMode('MODE_POP-ON');\n\t        }\n\t    }, {\n\t        key: 'ccBS',\n\t        value: function ccBS() {\n\t            // BackSpace\n\t            logger.log('INFO', 'BS - BackSpace');\n\t            if (this.mode === 'MODE_TEXT') {\n\t                return;\n\t            }\n\t            this.writeScreen.backSpace();\n\t            if (this.writeScreen === this.displayedMemory) {\n\t                this.outputDataUpdate();\n\t            }\n\t        }\n\t    }, {\n\t        key: 'ccAOF',\n\t        value: function ccAOF() {\n\t            // Reserved (formerly Alarm Off)\n\t            return;\n\t        }\n\t    }, {\n\t        key: 'ccAON',\n\t        value: function ccAON() {\n\t            // Reserved (formerly Alarm On)\n\t            return;\n\t        }\n\t    }, {\n\t        key: 'ccDER',\n\t        value: function ccDER() {\n\t            // Delete to End of Row\n\t            logger.log('INFO', 'DER- Delete to End of Row');\n\t            this.writeScreen.clearToEndOfRow();\n\t            this.outputDataUpdate();\n\t        }\n\t    }, {\n\t        key: 'ccRU',\n\t        value: function ccRU(nrRows) {\n\t            //Roll-Up Captions-2,3,or 4 Rows\n\t            logger.log('INFO', 'RU(' + nrRows + ') - Roll Up');\n\t            this.writeScreen = this.displayedMemory;\n\t            this.setMode('MODE_ROLL-UP');\n\t            this.writeScreen.setRollUpRows(nrRows);\n\t        }\n\t    }, {\n\t        key: 'ccFON',\n\t        value: function ccFON() {\n\t            //Flash On\n\t            logger.log('INFO', 'FON - Flash On');\n\t            this.writeScreen.setPen({ flash: true });\n\t        }\n\t    }, {\n\t        key: 'ccRDC',\n\t        value: function ccRDC() {\n\t            // Resume Direct Captioning (switch mode to PaintOn)\n\t            logger.log('INFO', 'RDC - Resume Direct Captioning');\n\t            this.setMode('MODE_PAINT-ON');\n\t        }\n\t    }, {\n\t        key: 'ccTR',\n\t        value: function ccTR() {\n\t            // Text Restart in text mode (not supported, however)\n\t            logger.log('INFO', 'TR');\n\t            this.setMode('MODE_TEXT');\n\t        }\n\t    }, {\n\t        key: 'ccRTD',\n\t        value: function ccRTD() {\n\t            // Resume Text Display in Text mode (not supported, however)\n\t            logger.log('INFO', 'RTD');\n\t            this.setMode('MODE_TEXT');\n\t        }\n\t    }, {\n\t        key: 'ccEDM',\n\t        value: function ccEDM() {\n\t            // Erase Displayed Memory\n\t            logger.log('INFO', 'EDM - Erase Displayed Memory');\n\t            this.displayedMemory.reset();\n\t            this.outputDataUpdate();\n\t        }\n\t    }, {\n\t        key: 'ccCR',\n\t        value: function ccCR() {\n\t            // Carriage Return\n\t            logger.log('CR - Carriage Return');\n\t            this.writeScreen.rollUp();\n\t            this.outputDataUpdate();\n\t        }\n\t    }, {\n\t        key: 'ccENM',\n\t        value: function ccENM() {\n\t            //Erase Non-Displayed Memory\n\t            logger.log('INFO', 'ENM - Erase Non-displayed Memory');\n\t            this.nonDisplayedMemory.reset();\n\t        }\n\t    }, {\n\t        key: 'ccEOC',\n\t        value: function ccEOC() {\n\t            //End of Caption (Flip Memories)\n\t            logger.log('INFO', 'EOC - End Of Caption');\n\t            if (this.mode === 'MODE_POP-ON') {\n\t                var tmp = this.displayedMemory;\n\t                this.displayedMemory = this.nonDisplayedMemory;\n\t                this.nonDisplayedMemory = tmp;\n\t                this.writeScreen = this.nonDisplayedMemory;\n\t                logger.log('TEXT', 'DISP: ' + this.displayedMemory.getDisplayText());\n\t            }\n\t            this.outputDataUpdate();\n\t        }\n\t    }, {\n\t        key: 'ccTO',\n\t        value: function ccTO(nrCols) {\n\t            // Tab Offset 1,2, or 3 columns\n\t            logger.log('INFO', 'TO(' + nrCols + ') - Tab Offset');\n\t            this.writeScreen.moveCursor(nrCols);\n\t        }\n\t    }, {\n\t        key: 'ccMIDROW',\n\t        value: function ccMIDROW(secondByte) {\n\t            // Parse MIDROW command\n\t            var styles = { flash: false };\n\t            styles.underline = secondByte % 2 === 1;\n\t            styles.italics = secondByte >= 0x2e;\n\t            if (!styles.italics) {\n\t                var colorIndex = Math.floor(secondByte / 2) - 0x10;\n\t                var colors = ['white', 'green', 'blue', 'cyan', 'red', 'yellow', 'magenta'];\n\t                styles.foreground = colors[colorIndex];\n\t            } else {\n\t                styles.foreground = 'white';\n\t            }\n\t            logger.log('INFO', 'MIDROW: ' + JSON.stringify(styles));\n\t            this.writeScreen.setPen(styles);\n\t        }\n\t    }, {\n\t        key: 'outputDataUpdate',\n\t        value: function outputDataUpdate() {\n\t            var t = logger.time;\n\t            if (t === null) {\n\t                return;\n\t            }\n\t            if (this.outputFilter) {\n\t                if (this.outputFilter.updateData) {\n\t                    this.outputFilter.updateData(t, this.displayedMemory);\n\t                }\n\t                if (this.cueStartTime === null && !this.displayedMemory.isEmpty()) {\n\t                    // Start of a new cue\n\t                    this.cueStartTime = t;\n\t                } else {\n\t                    if (!this.displayedMemory.equals(this.lastOutputScreen)) {\n\t                        if (this.outputFilter.newCue) {\n\t                            this.outputFilter.newCue(this.cueStartTime, t, this.lastOutputScreen);\n\t                        }\n\t                        this.cueStartTime = this.displayedMemory.isEmpty() ? null : t;\n\t                    }\n\t                }\n\t                this.lastOutputScreen.copy(this.displayedMemory);\n\t            }\n\t        }\n\t    }, {\n\t        key: 'cueSplitAtTime',\n\t        value: function cueSplitAtTime(t) {\n\t            if (this.outputFilter) {\n\t                if (!this.displayedMemory.isEmpty()) {\n\t                    if (this.outputFilter.newCue) {\n\t                        this.outputFilter.newCue(this.cueStartTime, t, this.displayedMemory);\n\t                    }\n\t                    this.cueStartTime = t;\n\t                }\n\t            }\n\t        }\n\t    }]);\n\t\n\t    return Cea608Channel;\n\t}();\n\t\n\tvar Cea608Parser = function () {\n\t    function Cea608Parser(field, out1, out2) {\n\t        _classCallCheck(this, Cea608Parser);\n\t\n\t        this.field = field || 1;\n\t        this.outputs = [out1, out2];\n\t        this.channels = [new Cea608Channel(1, out1), new Cea608Channel(2, out2)];\n\t        this.currChNr = -1; // Will be 1 or 2\n\t        this.lastCmdA = null; // First byte of last command\n\t        this.lastCmdB = null; // Second byte of last command\n\t        this.bufferedData = [];\n\t        this.startTime = null;\n\t        this.lastTime = null;\n\t        this.dataCounters = { 'padding': 0, 'char': 0, 'cmd': 0, 'other': 0 };\n\t    }\n\t\n\t    _createClass(Cea608Parser, [{\n\t        key: 'getHandler',\n\t        value: function getHandler(index) {\n\t            return this.channels[index].getHandler();\n\t        }\n\t    }, {\n\t        key: 'setHandler',\n\t        value: function setHandler(index, newHandler) {\n\t            this.channels[index].setHandler(newHandler);\n\t        }\n\t\n\t        /**\n\t         * Add data for time t in forms of list of bytes (unsigned ints). The bytes are treated as pairs.\n\t         */\n\t\n\t    }, {\n\t        key: 'addData',\n\t        value: function addData(t, byteList) {\n\t            var cmdFound,\n\t                a,\n\t                b,\n\t                charsFound = false;\n\t\n\t            this.lastTime = t;\n\t            logger.setTime(t);\n\t\n\t            for (var i = 0; i < byteList.length; i += 2) {\n\t                a = byteList[i] & 0x7f;\n\t                b = byteList[i + 1] & 0x7f;\n\t                if (a === 0 && b === 0) {\n\t                    this.dataCounters.padding += 2;\n\t                    continue;\n\t                } else {\n\t                    logger.log('DATA', '[' + numArrayToHexArray([byteList[i], byteList[i + 1]]) + '] -> (' + numArrayToHexArray([a, b]) + ')');\n\t                }\n\t                cmdFound = this.parseCmd(a, b);\n\t                if (!cmdFound) {\n\t                    cmdFound = this.parseMidrow(a, b);\n\t                }\n\t                if (!cmdFound) {\n\t                    cmdFound = this.parsePAC(a, b);\n\t                }\n\t                if (!cmdFound) {\n\t                    cmdFound = this.parseBackgroundAttributes(a, b);\n\t                }\n\t                if (!cmdFound) {\n\t                    charsFound = this.parseChars(a, b);\n\t                    if (charsFound) {\n\t                        if (this.currChNr && this.currChNr >= 0) {\n\t                            var channel = this.channels[this.currChNr - 1];\n\t                            channel.insertChars(charsFound);\n\t                        } else {\n\t                            logger.log('WARNING', 'No channel found yet. TEXT-MODE?');\n\t                        }\n\t                    }\n\t                }\n\t                if (cmdFound) {\n\t                    this.dataCounters.cmd += 2;\n\t                } else if (charsFound) {\n\t                    this.dataCounters.char += 2;\n\t                } else {\n\t                    this.dataCounters.other += 2;\n\t                    logger.log('WARNING', 'Couldn\\'t parse cleaned data ' + numArrayToHexArray([a, b]) + ' orig: ' + numArrayToHexArray([byteList[i], byteList[i + 1]]));\n\t                }\n\t            }\n\t        }\n\t\n\t        /**\n\t         * Parse Command.\n\t         * @returns {Boolean} Tells if a command was found\n\t         */\n\t\n\t    }, {\n\t        key: 'parseCmd',\n\t        value: function parseCmd(a, b) {\n\t            var chNr = null;\n\t\n\t            var cond1 = (a === 0x14 || a === 0x1C) && 0x20 <= b && b <= 0x2F;\n\t            var cond2 = (a === 0x17 || a === 0x1F) && 0x21 <= b && b <= 0x23;\n\t            if (!(cond1 || cond2)) {\n\t                return false;\n\t            }\n\t\n\t            if (a === this.lastCmdA && b === this.lastCmdB) {\n\t                this.lastCmdA = null;\n\t                this.lastCmdB = null; // Repeated commands are dropped (once)\n\t                logger.log('DEBUG', 'Repeated command (' + numArrayToHexArray([a, b]) + ') is dropped');\n\t                return true;\n\t            }\n\t\n\t            if (a === 0x14 || a === 0x17) {\n\t                chNr = 1;\n\t            } else {\n\t                chNr = 2; // (a === 0x1C || a=== 0x1f)\n\t            }\n\t\n\t            var channel = this.channels[chNr - 1];\n\t\n\t            if (a === 0x14 || a === 0x1C) {\n\t                if (b === 0x20) {\n\t                    channel.ccRCL();\n\t                } else if (b === 0x21) {\n\t                    channel.ccBS();\n\t                } else if (b === 0x22) {\n\t                    channel.ccAOF();\n\t                } else if (b === 0x23) {\n\t                    channel.ccAON();\n\t                } else if (b === 0x24) {\n\t                    channel.ccDER();\n\t                } else if (b === 0x25) {\n\t                    channel.ccRU(2);\n\t                } else if (b === 0x26) {\n\t                    channel.ccRU(3);\n\t                } else if (b === 0x27) {\n\t                    channel.ccRU(4);\n\t                } else if (b === 0x28) {\n\t                    channel.ccFON();\n\t                } else if (b === 0x29) {\n\t                    channel.ccRDC();\n\t                } else if (b === 0x2A) {\n\t                    channel.ccTR();\n\t                } else if (b === 0x2B) {\n\t                    channel.ccRTD();\n\t                } else if (b === 0x2C) {\n\t                    channel.ccEDM();\n\t                } else if (b === 0x2D) {\n\t                    channel.ccCR();\n\t                } else if (b === 0x2E) {\n\t                    channel.ccENM();\n\t                } else if (b === 0x2F) {\n\t                    channel.ccEOC();\n\t                }\n\t            } else {\n\t                //a == 0x17 || a == 0x1F\n\t                channel.ccTO(b - 0x20);\n\t            }\n\t            this.lastCmdA = a;\n\t            this.lastCmdB = b;\n\t            this.currChNr = chNr;\n\t            return true;\n\t        }\n\t\n\t        /**\n\t         * Parse midrow styling command\n\t         * @returns {Boolean}\n\t         */\n\t\n\t    }, {\n\t        key: 'parseMidrow',\n\t        value: function parseMidrow(a, b) {\n\t            var chNr = null;\n\t\n\t            if ((a === 0x11 || a === 0x19) && 0x20 <= b && b <= 0x2f) {\n\t                if (a === 0x11) {\n\t                    chNr = 1;\n\t                } else {\n\t                    chNr = 2;\n\t                }\n\t                if (chNr !== this.currChNr) {\n\t                    logger.log('ERROR', 'Mismatch channel in midrow parsing');\n\t                    return false;\n\t                }\n\t                var channel = this.channels[chNr - 1];\n\t                channel.ccMIDROW(b);\n\t                logger.log('DEBUG', 'MIDROW (' + numArrayToHexArray([a, b]) + ')');\n\t                return true;\n\t            }\n\t            return false;\n\t        }\n\t        /**\n\t         * Parse Preable Access Codes (Table 53).\n\t         * @returns {Boolean} Tells if PAC found\n\t         */\n\t\n\t    }, {\n\t        key: 'parsePAC',\n\t        value: function parsePAC(a, b) {\n\t\n\t            var chNr = null;\n\t            var row = null;\n\t\n\t            var case1 = (0x11 <= a && a <= 0x17 || 0x19 <= a && a <= 0x1F) && 0x40 <= b && b <= 0x7F;\n\t            var case2 = (a === 0x10 || a === 0x18) && 0x40 <= b && b <= 0x5F;\n\t            if (!(case1 || case2)) {\n\t                return false;\n\t            }\n\t\n\t            if (a === this.lastCmdA && b === this.lastCmdB) {\n\t                this.lastCmdA = null;\n\t                this.lastCmdB = null;\n\t                return true; // Repeated commands are dropped (once)\n\t            }\n\t\n\t            chNr = a <= 0x17 ? 1 : 2;\n\t\n\t            if (0x40 <= b && b <= 0x5F) {\n\t                row = chNr === 1 ? rowsLowCh1[a] : rowsLowCh2[a];\n\t            } else {\n\t                // 0x60 <= b <= 0x7F\n\t                row = chNr === 1 ? rowsHighCh1[a] : rowsHighCh2[a];\n\t            }\n\t            var pacData = this.interpretPAC(row, b);\n\t            var channel = this.channels[chNr - 1];\n\t            channel.setPAC(pacData);\n\t            this.lastCmdA = a;\n\t            this.lastCmdB = b;\n\t            this.currChNr = chNr;\n\t            return true;\n\t        }\n\t\n\t        /**\n\t         * Interpret the second byte of the pac, and return the information.\n\t         * @returns {Object} pacData with style parameters.\n\t         */\n\t\n\t    }, {\n\t        key: 'interpretPAC',\n\t        value: function interpretPAC(row, byte) {\n\t            var pacIndex = byte;\n\t            var pacData = { color: null, italics: false, indent: null, underline: false, row: row };\n\t\n\t            if (byte > 0x5F) {\n\t                pacIndex = byte - 0x60;\n\t            } else {\n\t                pacIndex = byte - 0x40;\n\t            }\n\t            pacData.underline = (pacIndex & 1) === 1;\n\t            if (pacIndex <= 0xd) {\n\t                pacData.color = ['white', 'green', 'blue', 'cyan', 'red', 'yellow', 'magenta', 'white'][Math.floor(pacIndex / 2)];\n\t            } else if (pacIndex <= 0xf) {\n\t                pacData.italics = true;\n\t                pacData.color = 'white';\n\t            } else {\n\t                pacData.indent = Math.floor((pacIndex - 0x10) / 2) * 4;\n\t            }\n\t            return pacData; // Note that row has zero offset. The spec uses 1.\n\t        }\n\t\n\t        /**\n\t         * Parse characters.\n\t         * @returns An array with 1 to 2 codes corresponding to chars, if found. null otherwise.\n\t         */\n\t\n\t    }, {\n\t        key: 'parseChars',\n\t        value: function parseChars(a, b) {\n\t\n\t            var channelNr = null,\n\t                charCodes = null,\n\t                charCode1 = null;\n\t\n\t            if (a >= 0x19) {\n\t                channelNr = 2;\n\t                charCode1 = a - 8;\n\t            } else {\n\t                channelNr = 1;\n\t                charCode1 = a;\n\t            }\n\t            if (0x11 <= charCode1 && charCode1 <= 0x13) {\n\t                // Special character\n\t                var oneCode = b;\n\t                if (charCode1 === 0x11) {\n\t                    oneCode = b + 0x50;\n\t                } else if (charCode1 === 0x12) {\n\t                    oneCode = b + 0x70;\n\t                } else {\n\t                    oneCode = b + 0x90;\n\t                }\n\t                logger.log('INFO', 'Special char \\'' + getCharForByte(oneCode) + '\\' in channel ' + channelNr);\n\t                charCodes = [oneCode];\n\t            } else if (0x20 <= a && a <= 0x7f) {\n\t                charCodes = b === 0 ? [a] : [a, b];\n\t            }\n\t            if (charCodes) {\n\t                var hexCodes = numArrayToHexArray(charCodes);\n\t                logger.log('DEBUG', 'Char codes =  ' + hexCodes.join(','));\n\t                this.lastCmdA = null;\n\t                this.lastCmdB = null;\n\t            }\n\t            return charCodes;\n\t        }\n\t\n\t        /**\n\t        * Parse extended background attributes as well as new foreground color black.\n\t        * @returns{Boolean} Tells if background attributes are found\n\t        */\n\t\n\t    }, {\n\t        key: 'parseBackgroundAttributes',\n\t        value: function parseBackgroundAttributes(a, b) {\n\t            var bkgData, index, chNr, channel;\n\t\n\t            var case1 = (a === 0x10 || a === 0x18) && 0x20 <= b && b <= 0x2f;\n\t            var case2 = (a === 0x17 || a === 0x1f) && 0x2d <= b && b <= 0x2f;\n\t            if (!(case1 || case2)) {\n\t                return false;\n\t            }\n\t            bkgData = {};\n\t            if (a === 0x10 || a === 0x18) {\n\t                index = Math.floor((b - 0x20) / 2);\n\t                bkgData.background = backgroundColors[index];\n\t                if (b % 2 === 1) {\n\t                    bkgData.background = bkgData.background + '_semi';\n\t                }\n\t            } else if (b === 0x2d) {\n\t                bkgData.background = 'transparent';\n\t            } else {\n\t                bkgData.foreground = 'black';\n\t                if (b === 0x2f) {\n\t                    bkgData.underline = true;\n\t                }\n\t            }\n\t            chNr = a < 0x18 ? 1 : 2;\n\t            channel = this.channels[chNr - 1];\n\t            channel.setBkgData(bkgData);\n\t            this.lastCmdA = null;\n\t            this.lastCmdB = null;\n\t            return true;\n\t        }\n\t\n\t        /**\n\t         * Reset state of parser and its channels.\n\t         */\n\t\n\t    }, {\n\t        key: 'reset',\n\t        value: function reset() {\n\t            for (var i = 0; i < this.channels.length; i++) {\n\t                if (this.channels[i]) {\n\t                    this.channels[i].reset();\n\t                }\n\t            }\n\t            this.lastCmdA = null;\n\t            this.lastCmdB = null;\n\t        }\n\t\n\t        /**\n\t         * Trigger the generation of a cue, and the start of a new one if displayScreens are not empty.\n\t         */\n\t\n\t    }, {\n\t        key: 'cueSplitAtTime',\n\t        value: function cueSplitAtTime(t) {\n\t            for (var i = 0; i < this.channels.length; i++) {\n\t                if (this.channels[i]) {\n\t                    this.channels[i].cueSplitAtTime(t);\n\t                }\n\t            }\n\t        }\n\t    }]);\n\t\n\t    return Cea608Parser;\n\t}();\n\t\n\texports.default = Cea608Parser;\n\t\n\t},{}],43:[function(_dereq_,module,exports){\n\t'use strict';\n\t\n\tvar Cues = {\n\t\n\t  newCue: function newCue(track, startTime, endTime, captionScreen) {\n\t    var row;\n\t    var cue;\n\t    var indenting;\n\t    var indent;\n\t    var text;\n\t    var VTTCue = window.VTTCue || window.TextTrackCue;\n\t\n\t    for (var r = 0; r < captionScreen.rows.length; r++) {\n\t      row = captionScreen.rows[r];\n\t      indenting = true;\n\t      indent = 0;\n\t      text = '';\n\t\n\t      if (!row.isEmpty()) {\n\t        for (var c = 0; c < row.chars.length; c++) {\n\t          if (row.chars[c].uchar.match(/\\s/) && indenting) {\n\t            indent++;\n\t          } else {\n\t            text += row.chars[c].uchar;\n\t            indenting = false;\n\t          }\n\t        }\n\t        //To be used for cleaning-up orphaned roll-up captions\n\t        row.cueStartTime = startTime;\n\t        cue = new VTTCue(startTime, endTime, text.trim());\n\t\n\t        if (indent >= 16) {\n\t          indent--;\n\t        } else {\n\t          indent++;\n\t        }\n\t\n\t        // VTTCue.line get's flakey when using controls, so let's now include line 13&14\n\t        // also, drop line 1 since it's to close to the top\n\t        if (navigator.userAgent.match(/Firefox\\//)) {\n\t          cue.line = r + 1;\n\t        } else {\n\t          cue.line = r > 7 ? r - 2 : r + 1;\n\t        }\n\t        cue.align = 'left';\n\t        // Clamp the position between 0 and 100 - if out of these bounds, Firefox throws an exception and captions break\n\t        cue.position = Math.max(0, Math.min(100, 100 * (indent / 32) + (navigator.userAgent.match(/Firefox\\//) ? 50 : 0)));\n\t        track.addCue(cue);\n\t      }\n\t    }\n\t  }\n\t\n\t};\n\t\n\tmodule.exports = Cues;\n\t\n\t},{}],44:[function(_dereq_,module,exports){\n\t\"use strict\";\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\t/*\n\t * compute an Exponential Weighted moving average\n\t * - https://en.wikipedia.org/wiki/Moving_average#Exponential_moving_average\n\t *  - heavily inspired from shaka-player\n\t */\n\t\n\tvar EWMA = function () {\n\t\n\t  //  About half of the estimated value will be from the last |halfLife| samples by weight.\n\t  function EWMA(halfLife) {\n\t    _classCallCheck(this, EWMA);\n\t\n\t    // Larger values of alpha expire historical data more slowly.\n\t    this.alpha_ = halfLife ? Math.exp(Math.log(0.5) / halfLife) : 0;\n\t    this.estimate_ = 0;\n\t    this.totalWeight_ = 0;\n\t  }\n\t\n\t  _createClass(EWMA, [{\n\t    key: \"sample\",\n\t    value: function sample(weight, value) {\n\t      var adjAlpha = Math.pow(this.alpha_, weight);\n\t      this.estimate_ = value * (1 - adjAlpha) + adjAlpha * this.estimate_;\n\t      this.totalWeight_ += weight;\n\t    }\n\t  }, {\n\t    key: \"getTotalWeight\",\n\t    value: function getTotalWeight() {\n\t      return this.totalWeight_;\n\t    }\n\t  }, {\n\t    key: \"getEstimate\",\n\t    value: function getEstimate() {\n\t      if (this.alpha_) {\n\t        var zeroFactor = 1 - Math.pow(this.alpha_, this.totalWeight_);\n\t        return this.estimate_ / zeroFactor;\n\t      } else {\n\t        return this.estimate_;\n\t      }\n\t    }\n\t  }]);\n\t\n\t  return EWMA;\n\t}();\n\t\n\texports.default = EWMA;\n\t\n\t},{}],45:[function(_dereq_,module,exports){\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\t\n\tfunction noop() {}\n\t\n\tvar fakeLogger = {\n\t  trace: noop,\n\t  debug: noop,\n\t  log: noop,\n\t  warn: noop,\n\t  info: noop,\n\t  error: noop\n\t};\n\t\n\tvar exportedLogger = fakeLogger;\n\t\n\t/*globals self: false */\n\t\n\t//let lastCallTime;\n\t// function formatMsgWithTimeInfo(type, msg) {\n\t//   const now = Date.now();\n\t//   const diff = lastCallTime ? '+' + (now - lastCallTime) : '0';\n\t//   lastCallTime = now;\n\t//   msg = (new Date(now)).toISOString() + ' | [' +  type + '] > ' + msg + ' ( ' + diff + ' ms )';\n\t//   return msg;\n\t// }\n\t\n\tfunction formatMsg(type, msg) {\n\t  msg = '[' + type + '] > ' + msg;\n\t  return msg;\n\t}\n\t\n\tfunction consolePrintFn(type) {\n\t  var func = self.console[type];\n\t  if (func) {\n\t    return function () {\n\t      for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n\t        args[_key] = arguments[_key];\n\t      }\n\t\n\t      if (args[0]) {\n\t        args[0] = formatMsg(type, args[0]);\n\t      }\n\t      func.apply(self.console, args);\n\t    };\n\t  }\n\t  return noop;\n\t}\n\t\n\tfunction exportLoggerFunctions(debugConfig) {\n\t  for (var _len2 = arguments.length, functions = Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {\n\t    functions[_key2 - 1] = arguments[_key2];\n\t  }\n\t\n\t  functions.forEach(function (type) {\n\t    exportedLogger[type] = debugConfig[type] ? debugConfig[type].bind(debugConfig) : consolePrintFn(type);\n\t  });\n\t}\n\t\n\tvar enableLogs = exports.enableLogs = function enableLogs(debugConfig) {\n\t  if (debugConfig === true || (typeof debugConfig === 'undefined' ? 'undefined' : _typeof(debugConfig)) === 'object') {\n\t    exportLoggerFunctions(debugConfig,\n\t    // Remove out from list here to hard-disable a log-level\n\t    //'trace',\n\t    'debug', 'log', 'info', 'warn', 'error');\n\t    // Some browsers don't allow to use bind on console object anyway\n\t    // fallback to default if needed\n\t    try {\n\t      exportedLogger.log();\n\t    } catch (e) {\n\t      exportedLogger = fakeLogger;\n\t    }\n\t  } else {\n\t    exportedLogger = fakeLogger;\n\t  }\n\t};\n\t\n\tvar logger = exports.logger = exportedLogger;\n\t\n\t},{}],46:[function(_dereq_,module,exports){\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\t/**\n\t *  TimeRanges to string helper\n\t */\n\t\n\tvar TimeRanges = function () {\n\t  function TimeRanges() {\n\t    _classCallCheck(this, TimeRanges);\n\t  }\n\t\n\t  _createClass(TimeRanges, null, [{\n\t    key: 'toString',\n\t    value: function toString(r) {\n\t      var log = '',\n\t          len = r.length;\n\t      for (var i = 0; i < len; i++) {\n\t        log += '[' + r.start(i).toFixed(3) + ',' + r.end(i).toFixed(3) + ']';\n\t      }\n\t      return log;\n\t    }\n\t  }]);\n\t\n\t  return TimeRanges;\n\t}();\n\t\n\texports.default = TimeRanges;\n\t\n\t},{}],47:[function(_dereq_,module,exports){\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }(); /**\n\tbased logger\n\tn\t\n\tvar _logger = _dereq_(45);\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tvar XhrLoader = function () {\n\t  function XhrLoader(config) {\n\t    _classCallCheck(this, XhrLoader);\n\t\n\t    if (config && config.xhrSetup) {\n\t      this.xhrSetup = config.xhrSetup;\n\t    }\n\t  }\n\t\n\t  _createClass(XhrLoader, [{\n\t    key: 'destroy',\n\t    value: function destroy() {\n\t      this.abort();\n\t      this.loader = null;\n\t    }\n\t  }, {\n\t    key: 'abort',\n\t    value: function abort() {\n\t      var loader = this.loader;\n\t      if (loader && loader.readyState !== 4) {\n\t        this.stats.aborted = true;\n\t        loader.abort();\n\t      }\n\t\n\t      window.clearTimeout(this.requestTimeout);\n\t      this.requestTimeout = null;\n\t      window.clearTimeout(this.retryTimeout);\n\t      this.retryTimeout = null;\n\t    }\n\t  }, {\n\t    key: 'load',\n\t    value: function load(context, config, callbacks) {\n\t      this.context = context;\n\t      this.config = config;\n\t      this.callbacks = callbacks;\n\t      this.stats = { trequest: performance.now(), retry: 0 };\n\t      this.retryDelay = config.retryDelay;\n\t      this.loadInternal();\n\t    }\n\t  }, {\n\t    key: 'loadInternal',\n\t    value: function loadInternal() {\n\t      var xhr,\n\t          context = this.context;\n\t\n\t      if (typeof XDomainRequest !== 'undefined') {\n\t        xhr = this.loader = new XDomainRequest();\n\t      } else {\n\t        xhr = this.loader = new XMLHttpRequest();\n\t      }\n\t\n\t      xhr.onreadystatechange = this.readystatechange.bind(this);\n\t      xhr.onprogress = this.loadprogress.bind(this);\n\t\n\t      xhr.open('GET', context.url, true);\n\t\n\t      if (context.rangeEnd) {\n\t        xhr.setRequestHeader('Range', 'bytes=' + context.rangeStart + '-' + (context.rangeEnd - 1));\n\t      }\n\t      xhr.responseType = context.responseType;\n\t      var stats = this.stats;\n\t      stats.tfirst = 0;\n\t      stats.loaded = 0;\n\t      if (this.xhrSetup) {\n\t        this.xhrSetup(xhr, context.url);\n\t      }\n\t      // setup timeout before we perform request\n\t      this.requestTimeout = window.setTimeout(this.loadtimeout.bind(this), this.config.timeout);\n\t      xhr.send();\n\t    }\n\t  }, {\n\t    key: 'readystatechange',\n\t    value: function readystatechange(event) {\n\t      var xhr = event.currentTarget,\n\t          readyState = xhr.readyState,\n\t          stats = this.stats,\n\t          context = this.context,\n\t          config = this.config;\n\t\n\t      // don't proceed if xhr has been aborted\n\t      if (stats.aborted) {\n\t        return;\n\t      }\n\t\n\t      // >= HEADERS_RECEIVED\n\t      if (readyState >= 2) {\n\t        // clear xhr timeout and rearm it if readyState less than 4\n\t        window.clearTimeout(this.requestTimeout);\n\t        if (stats.tfirst === 0) {\n\t          stats.tfirst = Math.max(performance.now(), stats.trequest);\n\t        }\n\t        if (readyState === 4) {\n\t          var status = xhr.status;\n\t          // http status between 200 to 299 are all successful\n\t          if (status >= 200 && status < 300) {\n\t            stats.tload = Math.max(stats.tfirst, performance.now());\n\t            var data = void 0,\n\t                len = void 0;\n\t            if (context.responseType === 'arraybuffer') {\n\t              data = xhr.response;\n\t              len = data.byteLength;\n\t            } else {\n\t              data = xhr.responseText;\n\t              len = data.length;\n\t            }\n\t            stats.loaded = stats.total = len;\n\t            var response = { url: xhr.responseURL, data: data };\n\t            this.callbacks.onSuccess(response, stats, context);\n\t          } else {\n\t            // if max nb of retries reached or if http status between 400 and 499 (such error cannot be recovered, retrying is useless), return error\n\t            if (stats.retry >= config.maxRetry || status >= 400 && status < 499) {\n\t              _logger.logger.error(status + ' while loading ' + context.url);\n\t              this.callbacks.onError({ code: status, text: xhr.statusText }, context);\n\t            } else {\n\t              // retry\n\t              _logger.logger.warn(status + ' while loading ' + context.url + ', retrying in ' + this.retryDelay + '...');\n\t              // aborts and resets internal state\n\t              this.destroy();\n\t              // schedule retry\n\t              this.retryTimeout = window.setTimeout(this.loadInternal.bind(this), this.retryDelay);\n\t              // set exponential backoff\n\t              this.retryDelay = Math.min(2 * this.retryDelay, config.maxRetryDelay);\n\t              stats.retry++;\n\t            }\n\t          }\n\t        } else {\n\t          // readyState >= 2 AND readyState !==4 (readyState = HEADERS_RECEIVED || LOADING) rearm timeout as xhr not finished yet\n\t          this.requestTimeout = window.setTimeout(this.loadtimeout.bind(this), config.timeout);\n\t        }\n\t      }\n\t    }\n\t  }, {\n\t    key: 'loadtimeout',\n\t    value: function loadtimeout() {\n\t      _logger.logger.warn('timeout while loading ' + this.context.url);\n\t      this.callbacks.onTimeout(this.stats, this.context);\n\t    }\n\t  }, {\n\t    key: 'loadprogress',\n\t    value: function loadprogress(event) {\n\t      var stats = this.stats;\n\t      stats.loaded = event.loaded;\n\t      if (event.lengthComputable) {\n\t        stats.total = event.total;\n\t      }\n\t      var onProgress = this.callbacks.onProgress;\n\t      if (onProgress) {\n\t        // last args is to provide on progress data\n\t        onProgress(stats, this.context, null);\n\t      }\n\t    }\n\t  }]);\n\t\n\t  return XhrLoader;\n\t}();\n\t\n\texports.default = XhrLoader;\n\t\n\t},{\"45\":45}]},{},[33])(33)\n\t});\n\t//# sourceMappingURL=hls.js.map\n\n\n/***/ },\n/* 122 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar Hls = __webpack_require__(121);\n\tvar attachVideojsStreamrootProvider = __webpack_require__(123);\n\t\n\tattachVideojsStreamrootProvider(window, window.videojs, Hls);\n\n\n/***/ },\n/* 123 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t__webpack_require__(124);\n\t\n\tvar attachVideojsStreamrootProvider = function (window, videojs, Hls) {\n\t    function StreamrootProviderHLS (source, tech) {\n\t        tech.name_ = 'streamrootHLS';\n\t\n\t        var _video = tech.el();\n\t        var _hls;\n\t        var _errorCounts = {};\n\t        var _duration = null;\n\t\n\t        _video.addEventListener('error', function(evt) {\n\t            var errorTxt,mediaError=evt.currentTarget.error;\n\t\n\t            switch(mediaError.code) {\n\t                case mediaError.MEDIA_ERR_ABORTED:\n\t                    errorTxt = \"You aborted the video playback\";\n\t                    break;\n\t                case mediaError.MEDIA_ERR_DECODE:\n\t                    errorTxt = \"The video playback was aborted due to a corruption problem or because the video used features your browser did not support\";\n\t                    _handleMediaError();\n\t                    break;\n\t                case mediaError.MEDIA_ERR_NETWORK:\n\t                    errorTxt = \"A network error caused the video download to fail part-way\";\n\t                    break;\n\t                case mediaError.MEDIA_ERR_SRC_NOT_SUPPORTED:\n\t                    errorTxt = \"The video could not be loaded, either because the server or network failed or because the format is not supported\";\n\t                    break;\n\t            }\n\t\n\t            console.error(\"MEDIA_ERROR: \", errorTxt);\n\t        });\n\t\n\t        function initialize() {\n\t            var hlsjsConfig = tech.options_.hlsjsConfig || {};\n\t\n\t            _hls = new Hls(hlsjsConfig);\n\t            _hls.on(Hls.Events.ERROR, function(event, data) { _onError(event, data, tech, _errorCounts) });\n\t            _hls.on(Hls.Events.MANIFEST_PARSED, _onMetaData);\n\t            _hls.on(Hls.Events.LEVEL_LOADED, function(event, data) { _duration = data.details.live ? Infinity : data.details.totalduration; });\n\t\n\t            _hls.attachMedia(_video);\n\t        }\n\t\n\t        this.duration = function () {\n\t            return _duration || _video.duration || 0;\n\t        };\n\t\n\t        this.dispose = function () {\n\t            _hls.destroy();\n\t        };\n\t\n\t        function load(source) {\n\t            _hls.loadSource(source.src);\n\t\n\t            if (!_hls.config.autoStartLoad) {\n\t                _startLoadOnPlay();\n\t            }\n\t        }\n\t\n\t        function switchQuality(qualityId, trackType) {\n\t            _hls.nextLevel = qualityId;\n\t        }\n\t\n\t        // call _hls.startLoad on video play request\n\t        function _startLoadOnPlay() {\n\t            var checkStartLoad = function(e) {\n\t                e.target.removeEventListener(e.type, checkStartLoad);\n\t                // if the manifest parsed, call _hls.startLoad immediately, otherwise wait until the manifest is parsed\n\t                if (typeof _hls.streamController.levels !== 'undefined') {\n\t                    _hls.startLoad(_hls.config.startPosition);\n\t                } else {\n\t                    var startLoad = function() {\n\t                        _hls.off(Hls.Events.MANIFEST_PARSED, startLoad);\n\t                        _hls.startLoad(_hls.config.startPosition);\n\t                    };\n\t                    _hls.on(Hls.Events.MANIFEST_PARSED, startLoad);\n\t                }\n\t            };\n\t            _video.addEventListener('play', checkStartLoad);\n\t        }\n\t\n\t        function _handleMediaError() {\n\t            if (_errorCounts[Hls.ErrorTypes.MEDIA_ERROR] === 1) {\n\t                console.info(\"trying to recover media error\");\n\t                _hls.recoverMediaError();\n\t            } else if (_errorCounts[Hls.ErrorTypes.MEDIA_ERROR] === 2) {\n\t                console.info(\"2nd try to recover media error (by swapping audio codec\");\n\t                _hls.swapAudioCodec();\n\t                _hls.recoverMediaError();\n\t            } else if (_errorCounts[Hls.ErrorTypes.MEDIA_ERROR] > 2) {\n\t                console.info(\"bubbling media error up to VIDEOJS\");\n\t                error.code = 3;\n\t                tech.error = function() { return error; };\n\t                tech.trigger('error');\n\t            }\n\t        }\n\t\n\t        function _onError(event, data) {\n\t            var error = {\n\t                message: ('HLS.js error: ' + data.type + ' - fatal: ' + data.fatal + ' - ' + data.details),\n\t            };\n\t            console.error(error.message);\n\t\n\t            // increment/set error count\n\t            _errorCounts[data.type] ? _errorCounts[data.type] += 1 : _errorCounts[data.type] = 1;\n\t\n\t            // implement simple error handling based on hls.js documentation (https://github.com/dailymotion/hls.js/blob/master/API.md#fifth-step-error-handling)\n\t            if (data.fatal) {\n\t                switch (data.type) {\n\t                    case Hls.ErrorTypes.NETWORK_ERROR:\n\t                        console.info(\"bubbling network error up to VIDEOJS\");\n\t                        error.code = 2;\n\t                        tech.error = function() { return error; };\n\t                        tech.trigger('error');\n\t                        break;\n\t\n\t                    case Hls.ErrorTypes.MEDIA_ERROR:\n\t                        _handleMediaError();\n\t                        break;\n\t\n\t                    default:\n\t                        // cannot recover\n\t                        _hls.destroy();\n\t                        console.info(\"bubbling error up to VIDEOJS\");\n\t                        tech.error = function() { return error; };\n\t                        tech.trigger('error');\n\t                        break;\n\t                }\n\t            }\n\t        }\n\t\n\t        function _onMetaData(event, data) {\n\t            var cleanTracklist = [];\n\t\n\t            if (data.levels.length > 1) {\n\t                var autoLevel = {\n\t                    id: -1,\n\t                    label: \"auto\",\n\t                    selected: -1 === _hls.manualLevel\n\t                };\n\t                cleanTracklist.push(autoLevel);\n\t            }\n\t\n\t            data.levels.forEach(function(level, index) {\n\t                var quality = {}; // Don't write in level (shared reference with Hls.js)\n\t                quality.id = index;\n\t                quality.selected = index === _hls.manualLevel;\n\t                quality.label = _levelLabel(level);\n\t\n\t                cleanTracklist.push(quality);\n\t            });\n\t\n\t            var payload = {\n\t                qualityData: {video: cleanTracklist},\n\t                qualitySwitchCallback: switchQuality\n\t            };\n\t\n\t            tech.trigger('loadedqualitydata', payload);\n\t\n\t            function _levelLabel(level) {\n\t                if (level.height) return level.height + \"p\";\n\t                else if (level.width) return Math.round(level.width * 9 / 16) + \"p\";\n\t                else if (level.bitrate) return (level.bitrate / 1000) + \"kbps\";\n\t                else return 0;\n\t            }\n\t        }\n\t\n\t        initialize();\n\t        load(source);\n\t    }\n\t\n\t    if (Hls.isSupported()) {\n\t        videojs.getComponent('Html5').registerSourceHandler({\n\t\n\t            canHandleSource: function (source) {\n\t\n\t                var hlsTypeRE = /^application\\/x-mpegURL$/i;\n\t                var hlsExtRE = /\\.m3u8/i;\n\t                var result;\n\t\n\t                if (hlsTypeRE.test(source.type)) {\n\t                    result = 'probably';\n\t                } else if (hlsExtRE.test(source.src)) {\n\t                    result = 'maybe';\n\t                } else {\n\t                    result = '';\n\t                }\n\t\n\t                return result;\n\t            },\n\t\n\t            handleSource: function (source, tech) {\n\t\n\t                if (tech.hlsProvider) {\n\t                    tech.hlsProvider.dispose();\n\t                }\n\t\n\t                tech.hlsProvider = new StreamrootProviderHLS(source, tech);\n\t\n\t                return tech.hlsProvider;\n\t            }\n\t\n\t        }, 0);\n\t\n\t    } else {\n\t        console.error(\"Hls.js is not supported in this browser!\");\n\t    }\n\t\n\t    videojs.StreamrootProviderHLS = StreamrootProviderHLS;\n\t};\n\t\n\tmodule.exports = attachVideojsStreamrootProvider;\n\n\n/***/ },\n/* 124 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\t\n\tvar _qualityPickerButton = __webpack_require__(125);\n\t\n\tvar _qualityPickerButton2 = _interopRequireDefault(_qualityPickerButton);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction qualityPickerPlugin(options) {\n\t    var player = this;\n\t    var tech = this.tech_;\n\t\n\t    var SUPPORTED_TRACKS = [\"video\", \"audio\", \"subtitle\"];\n\t    var TRACK_CLASS = {\n\t        video: 'vjs-icon-hd',\n\t        audio: 'vjs-icon-cog',\n\t        subtitle: 'vjs-icon-subtitles'\n\t    };\n\t\n\t    tech.on('loadedqualitydata', onQualityData);\n\t\n\t    function onQualityData(event, _ref) {\n\t        var qualityData = _ref.qualityData,\n\t            qualitySwitchCallback = _ref.qualitySwitchCallback;\n\t\n\t\n\t        var fullscreenToggle = player.controlBar.getChild('fullscreenToggle');\n\t        player.controlBar.removeChild(fullscreenToggle);\n\t\n\t        for (var i = 0; i < SUPPORTED_TRACKS.length; i++) {\n\t            var track = SUPPORTED_TRACKS[i];\n\t            var name = track + \"PickerButton\";\n\t            var qualityPickerButton = player.controlBar.getChild(name);\n\t            if (qualityPickerButton) {\n\t                qualityPickerButton.dispose();\n\t                player.controlBar.removeChild(qualityPickerButton);\n\t            }\n\t\n\t            if (qualityData[track] && qualityData[track].length > 1) {\n\t                qualityPickerButton = new _qualityPickerButton2.default(player, { name: name, qualityList: qualityData[track], qualitySwitchCallback: qualitySwitchCallback, trackType: track });\n\t                qualityPickerButton.addClass(TRACK_CLASS[track]);\n\t\n\t                player.controlBar.addChild(qualityPickerButton);\n\t            }\n\t        }\n\t\n\t        if (fullscreenToggle) {\n\t            player.controlBar.addChild(fullscreenToggle);\n\t        }\n\t    }\n\t}\n\t\n\tvideojs.plugin('qualityPickerPlugin', qualityPickerPlugin);\n\n/***/ },\n/* 125 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _qualityMenu = __webpack_require__(126);\n\t\n\tvar _qualityMenu2 = _interopRequireDefault(_qualityMenu);\n\t\n\tvar _qualityMenuItem = __webpack_require__(127);\n\t\n\tvar _qualityMenuItem2 = _interopRequireDefault(_qualityMenuItem);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\tvar VjsButton = videojs.getComponent('MenuButton');\n\t\n\tvar QualityPickerButton = function (_VjsButton) {\n\t  _inherits(QualityPickerButton, _VjsButton);\n\t\n\t  function QualityPickerButton() {\n\t    _classCallCheck(this, QualityPickerButton);\n\t\n\t    return _possibleConstructorReturn(this, (QualityPickerButton.__proto__ || Object.getPrototypeOf(QualityPickerButton)).apply(this, arguments));\n\t  }\n\t\n\t  _createClass(QualityPickerButton, [{\n\t    key: 'createMenu',\n\t    value: function createMenu() {\n\t      var menu = new _qualityMenu2.default(this.player, this.options_);\n\t      var menuItem;\n\t      var options;\n\t      for (var i = 0; i < this.options_.qualityList.length; i++) {\n\t        var quality = this.options_.qualityList[i];\n\t        var _options_ = this.options_,\n\t            qualitySwitchCallback = _options_.qualitySwitchCallback,\n\t            trackType = _options_.trackType;\n\t\n\t        options = _extends({ qualitySwitchCallback: qualitySwitchCallback, trackType: trackType }, quality, { selectable: true });\n\t\n\t        menuItem = new _qualityMenuItem2.default(this.player, options);\n\t        menu.addItem(menuItem);\n\t      }\n\t\n\t      return menu;\n\t    }\n\t  }]);\n\t\n\t  return QualityPickerButton;\n\t}(VjsButton);\n\t\n\texports.default = QualityPickerButton;\n\n/***/ },\n/* 126 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if (\"value\" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\tvar VjsMenu = videojs.getComponent('Menu');\n\t\n\tvar QualityMenu = function (_VjsMenu) {\n\t  _inherits(QualityMenu, _VjsMenu);\n\t\n\t  function QualityMenu() {\n\t    _classCallCheck(this, QualityMenu);\n\t\n\t    return _possibleConstructorReturn(this, (QualityMenu.__proto__ || Object.getPrototypeOf(QualityMenu)).apply(this, arguments));\n\t  }\n\t\n\t  _createClass(QualityMenu, [{\n\t    key: 'addItem',\n\t    value: function addItem(component) {\n\t      var _this2 = this;\n\t\n\t      _get(QualityMenu.prototype.__proto__ || Object.getPrototypeOf(QualityMenu.prototype), 'addItem', this).call(this, component);\n\t\n\t      component.on('click', function () {\n\t        var children = _this2.children();\n\t\n\t        for (var i = 0; i < children.length; i++) {\n\t          var child = children[i];\n\t          if (component !== child) {\n\t            child.selected(false);\n\t          }\n\t        }\n\t      });\n\t    }\n\t  }]);\n\t\n\t  return QualityMenu;\n\t}(VjsMenu);\n\t\n\texports.default = QualityMenu;\n\n/***/ },\n/* 127 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if (\"value\" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\tvar VjsMenuItem = videojs.getComponent('MenuItem');\n\t\n\tvar QualityMenuItem = function (_VjsMenuItem) {\n\t    _inherits(QualityMenuItem, _VjsMenuItem);\n\t\n\t    function QualityMenuItem() {\n\t        _classCallCheck(this, QualityMenuItem);\n\t\n\t        return _possibleConstructorReturn(this, (QualityMenuItem.__proto__ || Object.getPrototypeOf(QualityMenuItem)).apply(this, arguments));\n\t    }\n\t\n\t    _createClass(QualityMenuItem, [{\n\t        key: 'handleClick',\n\t        value: function handleClick() {\n\t            _get(QualityMenuItem.prototype.__proto__ || Object.getPrototypeOf(QualityMenuItem.prototype), 'handleClick', this).call(this);\n\t\n\t            this.options_.qualitySwitchCallback(this.options_.id, this.options_.trackType);\n\t        }\n\t    }]);\n\t\n\t    return QualityMenuItem;\n\t}(VjsMenuItem);\n\t\n\texports.default = QualityMenuItem;\n\n/***/ }\n/******/ ])\n});\n;\n\n\n/** WEBPACK FOOTER **\n ** wjplayer-hls-js.min.js\n **/"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap 3c03377bf5fd3fa8e61b\n **/","import '../bundle';\nimport 'hls.js';\nimport 'videojs5-hlsjs-source-handler/lib/main';\nimport wjplayer from '../wjplayer';\nexport default wjplayer;\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/hls-js/index.js\n **/","import 'expose-loader?videojs!video.js';\nimport 'videojs-contrib-ads/src/videojs.ads';\nimport 'videojs-ima';\nimport 'videojs-ga/dist/videojs.ga.js';\nimport 'videojs-social';\nimport 'videojs-download-button';\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/bundle.js\n **/","module.exports = global[\"videojs\"] = require(\"-!/Users/mkhazov/projects/wjplayer/node_modules/video.js/es5/video.js\");\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/expose-loader?videojs!./~/video.js/es5/video.js\n ** module id = 2\n ** module chunks = 0 1\n **/","'use strict';\n\nexports.__esModule = true;\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; /**\n                                                                                                                                                                                                                                                                               * @file video.js\n                                                                                                                                                                                                                                                                               * @module videojs\n                                                                                                                                                                                                                                                                               */\n\n/* global define */\n\n// Include the built-in techs\n\n\nvar _window = require('global/window');\n\nvar _window2 = _interopRequireDefault(_window);\n\nvar _document = require('global/document');\n\nvar _document2 = _interopRequireDefault(_document);\n\nvar _setup = require('./setup');\n\nvar setup = _interopRequireWildcard(_setup);\n\nvar _stylesheet = require('./utils/stylesheet.js');\n\nvar stylesheet = _interopRequireWildcard(_stylesheet);\n\nvar _component = require('./component');\n\nvar _component2 = _interopRequireDefault(_component);\n\nvar _eventTarget = require('./event-target');\n\nvar _eventTarget2 = _interopRequireDefault(_eventTarget);\n\nvar _events = require('./utils/events.js');\n\nvar Events = _interopRequireWildcard(_events);\n\nvar _player = require('./player');\n\nvar _player2 = _interopRequireDefault(_player);\n\nvar _plugins = require('./plugins.js');\n\nvar _plugins2 = _interopRequireDefault(_plugins);\n\nvar _mergeOptions2 = require('./utils/merge-options.js');\n\nvar _mergeOptions3 = _interopRequireDefault(_mergeOptions2);\n\nvar _fn = require('./utils/fn.js');\n\nvar Fn = _interopRequireWildcard(_fn);\n\nvar _textTrack = require('./tracks/text-track.js');\n\nvar _textTrack2 = _interopRequireDefault(_textTrack);\n\nvar _audioTrack = require('./tracks/audio-track.js');\n\nvar _audioTrack2 = _interopRequireDefault(_audioTrack);\n\nvar _videoTrack = require('./tracks/video-track.js');\n\nvar _videoTrack2 = _interopRequireDefault(_videoTrack);\n\nvar _timeRanges = require('./utils/time-ranges.js');\n\nvar _formatTime = require('./utils/format-time.js');\n\nvar _formatTime2 = _interopRequireDefault(_formatTime);\n\nvar _log = require('./utils/log.js');\n\nvar _log2 = _interopRequireDefault(_log);\n\nvar _dom = require('./utils/dom.js');\n\nvar Dom = _interopRequireWildcard(_dom);\n\nvar _browser = require('./utils/browser.js');\n\nvar browser = _interopRequireWildcard(_browser);\n\nvar _url = require('./utils/url.js');\n\nvar Url = _interopRequireWildcard(_url);\n\nvar _obj = require('./utils/obj');\n\nvar _computedStyle = require('./utils/computed-style.js');\n\nvar _computedStyle2 = _interopRequireDefault(_computedStyle);\n\nvar _extend = require('./extend.js');\n\nvar _extend2 = _interopRequireDefault(_extend);\n\nvar _xhr = require('xhr');\n\nvar _xhr2 = _interopRequireDefault(_xhr);\n\nvar _tech = require('./tech/tech.js');\n\nvar _tech2 = _interopRequireDefault(_tech);\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj['default'] = obj; return newObj; } }\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\n// HTML5 Element Shim for IE8\nif (typeof HTMLVideoElement === 'undefined' && Dom.isReal()) {\n  _document2['default'].createElement('video');\n  _document2['default'].createElement('audio');\n  _document2['default'].createElement('track');\n}\n\n/**\n * Doubles as the main function for users to create a player instance and also\n * the main library object.\n * The `videojs` function can be used to initialize or retrieve a player.\n  *\n * @param {string|Element} id\n *        Video element or video element ID\n *\n * @param {Object} [options]\n *        Optional options object for config/settings\n *\n * @param {Component~ReadyCallback} [ready]\n *        Optional ready callback\n *\n * @return {Player}\n *         A player instance\n *\n * @mixes videojs\n */\nfunction videojs(id, options, ready) {\n  var tag = void 0;\n\n  // Allow for element or ID to be passed in\n  // String ID\n  if (typeof id === 'string') {\n\n    // Adjust for jQuery ID syntax\n    if (id.indexOf('#') === 0) {\n      id = id.slice(1);\n    }\n\n    // If a player instance has already been created for this ID return it.\n    if (videojs.getPlayers()[id]) {\n\n      // If options or ready funtion are passed, warn\n      if (options) {\n        _log2['default'].warn('Player \"' + id + '\" is already initialised. Options will not be applied.');\n      }\n\n      if (ready) {\n        videojs.getPlayers()[id].ready(ready);\n      }\n\n      return videojs.getPlayers()[id];\n    }\n\n    // Otherwise get element for ID\n    tag = Dom.getEl(id);\n\n    // ID is a media element\n  } else {\n    tag = id;\n  }\n\n  // Check for a useable element\n  // re: nodeName, could be a box div also\n  if (!tag || !tag.nodeName) {\n    throw new TypeError('The element or ID supplied is not valid. (videojs)');\n  }\n\n  // Element may have a player attr referring to an already created player instance.\n  // If so return that otherwise set up a new player below\n  if (tag.player || _player2['default'].players[tag.playerId]) {\n    return tag.player || _player2['default'].players[tag.playerId];\n  }\n\n  options = options || {};\n\n  videojs.hooks('beforesetup').forEach(function (hookFunction) {\n    var opts = hookFunction(tag, (0, _mergeOptions3['default'])(options));\n\n    if (!(0, _obj.isObject)(opts) || Array.isArray(opts)) {\n      _log2['default'].error('please return an object in beforesetup hooks');\n      return;\n    }\n\n    options = (0, _mergeOptions3['default'])(options, opts);\n  });\n\n  var PlayerComponent = _component2['default'].getComponent('Player');\n  // If not, set up a new player\n  var player = new PlayerComponent(tag, options, ready);\n\n  videojs.hooks('setup').forEach(function (hookFunction) {\n    return hookFunction(player);\n  });\n\n  return player;\n}\n\n/**\n * An Object that contains lifecycle hooks as keys which point to an array\n * of functions that are run when a lifecycle is triggered\n */\nvideojs.hooks_ = {};\n\n/**\n * Get a list of hooks for a specific lifecycle\n *\n * @param {string} type\n *        the lifecyle to get hooks from\n *\n * @param {Function} [fn]\n *        Optionally add a hook to the lifecycle that your are getting.\n *\n * @return {Array}\n *         an array of hooks, or an empty array if there are none.\n */\nvideojs.hooks = function (type, fn) {\n  videojs.hooks_[type] = videojs.hooks_[type] || [];\n  if (fn) {\n    videojs.hooks_[type] = videojs.hooks_[type].concat(fn);\n  }\n  return videojs.hooks_[type];\n};\n\n/**\n * Add a function hook to a specific videojs lifecycle.\n *\n * @param {string} type\n *        the lifecycle to hook the function to.\n *\n * @param {Function|Function[]}\n *        The function or array of functions to attach.\n */\nvideojs.hook = function (type, fn) {\n  videojs.hooks(type, fn);\n};\n\n/**\n * Remove a hook from a specific videojs lifecycle.\n *\n * @param {string} type\n *        the lifecycle that the function hooked to\n *\n * @param {Function} fn\n *        The hooked function to remove\n *\n * @return {boolean}\n *         The function that was removed or undef\n */\nvideojs.removeHook = function (type, fn) {\n  var index = videojs.hooks(type).indexOf(fn);\n\n  if (index <= -1) {\n    return false;\n  }\n\n  videojs.hooks_[type] = videojs.hooks_[type].slice();\n  videojs.hooks_[type].splice(index, 1);\n\n  return true;\n};\n\n// Add default styles\nif (_window2['default'].VIDEOJS_NO_DYNAMIC_STYLE !== true && Dom.isReal()) {\n  var style = Dom.$('.vjs-styles-defaults');\n\n  if (!style) {\n    style = stylesheet.createStyleElement('vjs-styles-defaults');\n    var head = Dom.$('head');\n\n    if (head) {\n      head.insertBefore(style, head.firstChild);\n    }\n    stylesheet.setTextContent(style, '\\n      .video-js {\\n        width: 300px;\\n        height: 150px;\\n      }\\n\\n      .vjs-fluid {\\n        padding-top: 56.25%\\n      }\\n    ');\n  }\n}\n\n// Run Auto-load players\n// You have to wait at least once in case this script is loaded after your\n// video in the DOM (weird behavior only with minified version)\nsetup.autoSetupTimeout(1, videojs);\n\n/**\n * Current software version. Follows semver.\n *\n * @type {string}\n */\nvideojs.VERSION = '5.17.0';\n\n/**\n * The global options object. These are the settings that take effect\n * if no overrides are specified when the player is created.\n *\n * @type {Object}\n */\nvideojs.options = _player2['default'].prototype.options_;\n\n/**\n * Get an object with the currently created players, keyed by player ID\n *\n * @return {Object}\n *         The created players\n */\nvideojs.getPlayers = function () {\n  return _player2['default'].players;\n};\n\n/**\n * Expose players object.\n *\n * @memberOf videojs\n * @property {Object} players\n */\nvideojs.players = _player2['default'].players;\n\n/**\n * Get a component class object by name\n *\n * @borrows Component.getComponent as videojs.getComponent\n */\nvideojs.getComponent = _component2['default'].getComponent;\n\n/**\n * Register a component so it can referred to by name. Used when adding to other\n * components, either through addChild `component.addChild('myComponent')` or through\n * default children options  `{ children: ['myComponent'] }`.\n *\n * > NOTE: You could also just initialize the component before adding.\n * `component.addChild(new MyComponent());`\n *\n * @param {string} name\n *        The class name of the component\n *\n * @param {Component} comp\n *        The component class\n *\n * @return {Component}\n *         The newly registered component\n */\nvideojs.registerComponent = function (name, comp) {\n  if (_tech2['default'].isTech(comp)) {\n    _log2['default'].warn('The ' + name + ' tech was registered as a component. It should instead be registered using videojs.registerTech(name, tech)');\n  }\n\n  _component2['default'].registerComponent.call(_component2['default'], name, comp);\n};\n\n/**\n * Get a Tech class object by name\n *\n * @borrows Tech.getTech as videojs.getTech\n */\nvideojs.getTech = _tech2['default'].getTech;\n\n/**\n * Register a Tech so it can referred to by name.\n * This is used in the tech order for the player.\n *\n * @borrows Tech.registerTech as videojs.registerTech\n */\nvideojs.registerTech = _tech2['default'].registerTech;\n\n/**\n * A suite of browser and device tests from {@link browser}.\n *\n * @type {Object}\n * @private\n */\nvideojs.browser = browser;\n\n/**\n * Whether or not the browser supports touch events. Included for backward\n * compatibility with 4.x, but deprecated. Use `videojs.browser.TOUCH_ENABLED`\n * instead going forward.\n *\n * @deprecated since version 5.0\n * @type {boolean}\n */\nvideojs.TOUCH_ENABLED = browser.TOUCH_ENABLED;\n\n/**\n * Subclass an existing class\n * Mimics ES6 subclassing with the `extend` keyword\n *\n * @borrows extend:extendFn as videojs.extend\n */\nvideojs.extend = _extend2['default'];\n\n/**\n * Merge two options objects recursively\n * Performs a deep merge like lodash.merge but **only merges plain objects**\n * (not arrays, elements, anything else)\n * Other values will be copied directly from the second object.\n *\n * @borrows merge-options:mergeOptions as videojs.mergeOptions\n */\nvideojs.mergeOptions = _mergeOptions3['default'];\n\n/**\n * Change the context (this) of a function\n *\n * > NOTE: as of v5.0 we require an ES5 shim, so you should use the native\n * `function() {}.bind(newContext);` instead of this.\n *\n * @borrows fn:bind as videojs.bind\n */\nvideojs.bind = Fn.bind;\n\n/**\n * Create a Video.js player plugin.\n * Plugins are only initialized when options for the plugin are included\n * in the player options, or the plugin function on the player instance is\n * called.\n *\n * @borrows plugin:plugin as videojs.plugin\n */\nvideojs.plugin = _plugins2['default'];\n\n/**\n * Adding languages so that they're available to all players.\n * Example: `videojs.addLanguage('es', { 'Hello': 'Hola' });`\n *\n * @param {string} code\n *        The language code or dictionary property\n *\n * @param {Object} data\n *        The data values to be translated\n *\n * @return {Object}\n *         The resulting language dictionary object\n */\nvideojs.addLanguage = function (code, data) {\n  var _mergeOptions;\n\n  code = ('' + code).toLowerCase();\n\n  videojs.options.languages = (0, _mergeOptions3['default'])(videojs.options.languages, (_mergeOptions = {}, _mergeOptions[code] = data, _mergeOptions));\n\n  return videojs.options.languages[code];\n};\n\n/**\n * Log messages\n *\n * @borrows log:log as videojs.log\n */\nvideojs.log = _log2['default'];\n\n/**\n * Creates an emulated TimeRange object.\n *\n * @borrows time-ranges:createTimeRanges as videojs.createTimeRange\n */\n/**\n * @borrows time-ranges:createTimeRanges as videojs.createTimeRanges\n */\nvideojs.createTimeRange = videojs.createTimeRanges = _timeRanges.createTimeRanges;\n\n/**\n * Format seconds as a time string, H:MM:SS or M:SS\n * Supplying a guide (in seconds) will force a number of leading zeros\n * to cover the length of the guide\n *\n * @borrows format-time:formatTime as videojs.formatTime\n */\nvideojs.formatTime = _formatTime2['default'];\n\n/**\n * Resolve and parse the elements of a URL\n *\n * @borrows url:parseUrl as videojs.parseUrl\n */\nvideojs.parseUrl = Url.parseUrl;\n\n/**\n * Returns whether the url passed is a cross domain request or not.\n *\n * @borrows url:isCrossOrigin as videojs.isCrossOrigin\n */\nvideojs.isCrossOrigin = Url.isCrossOrigin;\n\n/**\n * Event target class.\n *\n * @borrows EventTarget as videojs.EventTarget\n */\nvideojs.EventTarget = _eventTarget2['default'];\n\n/**\n * Add an event listener to element\n * It stores the handler function in a separate cache object\n * and adds a generic handler to the element's event,\n * along with a unique id (guid) to the element.\n *\n * @borrows events:on as videojs.on\n */\nvideojs.on = Events.on;\n\n/**\n * Trigger a listener only once for an event\n *\n * @borrows events:one as videojs.one\n */\nvideojs.one = Events.one;\n\n/**\n * Removes event listeners from an element\n *\n * @borrows events:off as videojs.off\n */\nvideojs.off = Events.off;\n\n/**\n * Trigger an event for an element\n *\n * @borrows events:trigger as videojs.trigger\n */\nvideojs.trigger = Events.trigger;\n\n/**\n * A cross-browser XMLHttpRequest wrapper. Here's a simple example:\n *\n * @param {Object} options\n *        settings for the request.\n *\n * @return {XMLHttpRequest|XDomainRequest}\n *         The request object.\n *\n * @see https://github.com/Raynos/xhr\n */\nvideojs.xhr = _xhr2['default'];\n\n/**\n * TextTrack class\n *\n * @borrows TextTrack as videojs.TextTrack\n */\nvideojs.TextTrack = _textTrack2['default'];\n\n/**\n * export the AudioTrack class so that source handlers can create\n * AudioTracks and then add them to the players AudioTrackList\n *\n * @borrows AudioTrack as videojs.AudioTrack\n */\nvideojs.AudioTrack = _audioTrack2['default'];\n\n/**\n * export the VideoTrack class so that source handlers can create\n * VideoTracks and then add them to the players VideoTrackList\n *\n * @borrows VideoTrack as videojs.VideoTrack\n */\nvideojs.VideoTrack = _videoTrack2['default'];\n\n/**\n * Determines, via duck typing, whether or not a value is a DOM element.\n *\n * @borrows dom:isEl as videojs.isEl\n */\nvideojs.isEl = Dom.isEl;\n\n/**\n * Determines, via duck typing, whether or not a value is a text node.\n *\n * @borrows dom:isTextNode as videojs.isTextNode\n */\nvideojs.isTextNode = Dom.isTextNode;\n\n/**\n * Creates an element and applies properties.\n *\n * @borrows dom:createEl as videojs.createEl\n */\nvideojs.createEl = Dom.createEl;\n\n/**\n * Check if an element has a CSS class\n *\n * @borrows dom:hasElClass as videojs.hasClass\n */\nvideojs.hasClass = Dom.hasElClass;\n\n/**\n * Add a CSS class name to an element\n *\n * @borrows dom:addElClass as videojs.addClass\n */\nvideojs.addClass = Dom.addElClass;\n\n/**\n * Remove a CSS class name from an element\n *\n * @borrows dom:removeElClass as videojs.removeClass\n */\nvideojs.removeClass = Dom.removeElClass;\n\n/**\n * Adds or removes a CSS class name on an element depending on an optional\n * condition or the presence/absence of the class name.\n *\n * @borrows dom:toggleElClass as videojs.toggleClass\n */\nvideojs.toggleClass = Dom.toggleElClass;\n\n/**\n * Apply attributes to an HTML element.\n *\n * @borrows dom:setElAttributes as videojs.setAttribute\n */\nvideojs.setAttributes = Dom.setElAttributes;\n\n/**\n * Get an element's attribute values, as defined on the HTML tag\n * Attributes are not the same as properties. They're defined on the tag\n * or with setAttribute (which shouldn't be used with HTML)\n * This will return true or false for boolean attributes.\n *\n * @borrows dom:getElAttributes as videojs.getAttributes\n */\nvideojs.getAttributes = Dom.getElAttributes;\n\n/**\n * Empties the contents of an element.\n *\n * @borrows dom:emptyEl as videojs.emptyEl\n */\nvideojs.emptyEl = Dom.emptyEl;\n\n/**\n * Normalizes and appends content to an element.\n *\n * The content for an element can be passed in multiple types and\n * combinations, whose behavior is as follows:\n *\n * - String\n *   Normalized into a text node.\n *\n * - Element, TextNode\n *   Passed through.\n *\n * - Array\n *   A one-dimensional array of strings, elements, nodes, or functions (which\n *   return single strings, elements, or nodes).\n *\n * - Function\n *   If the sole argument, is expected to produce a string, element,\n *   node, or array.\n *\n * @borrows dom:appendContents as videojs.appendContet\n */\nvideojs.appendContent = Dom.appendContent;\n\n/**\n * Normalizes and inserts content into an element; this is identical to\n * `appendContent()`, except it empties the element first.\n *\n * The content for an element can be passed in multiple types and\n * combinations, whose behavior is as follows:\n *\n * - String\n *   Normalized into a text node.\n *\n * - Element, TextNode\n *   Passed through.\n *\n * - Array\n *   A one-dimensional array of strings, elements, nodes, or functions (which\n *   return single strings, elements, or nodes).\n *\n * - Function\n *   If the sole argument, is expected to produce a string, element,\n *   node, or array.\n *\n * @borrows dom:insertContent as videojs.insertContent\n */\nvideojs.insertContent = Dom.insertContent;\n\n/**\n * A safe getComputedStyle with an IE8 fallback.\n *\n * This is because in Firefox, if the player is loaded in an iframe with `display:none`,\n * then `getComputedStyle` returns `null`, so, we do a null-check to make sure\n * that the player doesn't break in these cases.\n * See https://bugzilla.mozilla.org/show_bug.cgi?id=548397 for more details.\n *\n * @borrows computed-style:computedStyle as videojs.computedStyle\n */\nvideojs.computedStyle = _computedStyle2['default'];\n\n/*\n * Custom Universal Module Definition (UMD)\n *\n * Video.js will never be a non-browser lib so we can simplify UMD a bunch and\n * still support requirejs and browserify. This also needs to be closure\n * compiler compatible, so string keys are used.\n */\nif (typeof define === 'function' && define.amd) {\n  define('videojs', [], function () {\n    return videojs;\n  });\n\n  // checking that module is an object too because of umdjs/umd#35\n} else if ((typeof exports === 'undefined' ? 'undefined' : _typeof(exports)) === 'object' && (typeof module === 'undefined' ? 'undefined' : _typeof(module)) === 'object') {\n  module.exports = videojs;\n}\n\nexports['default'] = videojs;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/video.js/es5/video.js\n ** module id = 3\n ** module chunks = 0 1\n **/","if (typeof window !== \"undefined\") {\n    module.exports = window;\n} else if (typeof global !== \"undefined\") {\n    module.exports = global;\n} else if (typeof self !== \"undefined\"){\n    module.exports = self;\n} else {\n    module.exports = {};\n}\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/global/window.js\n ** module id = 4\n ** module chunks = 0 1\n **/","var topLevel = typeof global !== 'undefined' ? global :\n    typeof window !== 'undefined' ? window : {}\nvar minDoc = require('min-document');\n\nif (typeof document !== 'undefined') {\n    module.exports = document;\n} else {\n    var doccy = topLevel['__GLOBAL_DOCUMENT_CACHE@4'];\n\n    if (!doccy) {\n        doccy = topLevel['__GLOBAL_DOCUMENT_CACHE@4'] = minDoc;\n    }\n\n    module.exports = doccy;\n}\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/global/document.js\n ** module id = 5\n ** module chunks = 0 1\n **/","'use strict';\n\nexports.__esModule = true;\nexports.hasLoaded = exports.autoSetupTimeout = exports.autoSetup = undefined;\n\nvar _dom = require('./utils/dom');\n\nvar Dom = _interopRequireWildcard(_dom);\n\nvar _events = require('./utils/events.js');\n\nvar Events = _interopRequireWildcard(_events);\n\nvar _document = require('global/document');\n\nvar _document2 = _interopRequireDefault(_document);\n\nvar _window = require('global/window');\n\nvar _window2 = _interopRequireDefault(_window);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj['default'] = obj; return newObj; } }\n\n/**\n * @file setup.js - Functions for setting up a player without\n * user interaction based on the data-setup `attribute` of the video tag.\n *\n * @module setup\n */\nvar _windowLoaded = false;\nvar videojs = void 0;\n\n/**\n * Set up any tags that have a data-setup `attribute` when the player is started.\n */\nvar autoSetup = function autoSetup() {\n\n  // Protect against breakage in non-browser environments.\n  if (!Dom.isReal()) {\n    return;\n  }\n\n  // One day, when we stop supporting IE8, go back to this, but in the meantime...*hack hack hack*\n  // var vids = Array.prototype.slice.call(document.getElementsByTagName('video'));\n  // var audios = Array.prototype.slice.call(document.getElementsByTagName('audio'));\n  // var mediaEls = vids.concat(audios);\n\n  // Because IE8 doesn't support calling slice on a node list, we need to loop\n  // through each list of elements to build up a new, combined list of elements.\n  var vids = _document2['default'].getElementsByTagName('video');\n  var audios = _document2['default'].getElementsByTagName('audio');\n  var mediaEls = [];\n\n  if (vids && vids.length > 0) {\n    for (var i = 0, e = vids.length; i < e; i++) {\n      mediaEls.push(vids[i]);\n    }\n  }\n\n  if (audios && audios.length > 0) {\n    for (var _i = 0, _e = audios.length; _i < _e; _i++) {\n      mediaEls.push(audios[_i]);\n    }\n  }\n\n  // Check if any media elements exist\n  if (mediaEls && mediaEls.length > 0) {\n\n    for (var _i2 = 0, _e2 = mediaEls.length; _i2 < _e2; _i2++) {\n      var mediaEl = mediaEls[_i2];\n\n      // Check if element exists, has getAttribute func.\n      // IE seems to consider typeof el.getAttribute == 'object' instead of\n      // 'function' like expected, at least when loading the player immediately.\n      if (mediaEl && mediaEl.getAttribute) {\n\n        // Make sure this player hasn't already been set up.\n        if (mediaEl.player === undefined) {\n          var options = mediaEl.getAttribute('data-setup');\n\n          // Check if data-setup attr exists.\n          // We only auto-setup if they've added the data-setup attr.\n          if (options !== null) {\n            // Create new video.js instance.\n            videojs(mediaEl);\n          }\n        }\n\n        // If getAttribute isn't defined, we need to wait for the DOM.\n      } else {\n        autoSetupTimeout(1);\n        break;\n      }\n    }\n\n    // No videos were found, so keep looping unless page is finished loading.\n  } else if (!_windowLoaded) {\n    autoSetupTimeout(1);\n  }\n};\n\n/**\n * Wait until the page is loaded before running autoSetup. This will be called in\n * autoSetup if `hasLoaded` returns false.\n *\n * @param {number} wait\n *        How long to wait in ms\n *\n * @param {videojs} [vjs]\n *        The videojs library function\n */\nfunction autoSetupTimeout(wait, vjs) {\n  if (vjs) {\n    videojs = vjs;\n  }\n\n  _window2['default'].setTimeout(autoSetup, wait);\n}\n\nif (Dom.isReal() && _document2['default'].readyState === 'complete') {\n  _windowLoaded = true;\n} else {\n  /**\n   * Listen for the load event on window, and set _windowLoaded to true.\n   *\n   * @listens load\n   */\n  Events.one(_window2['default'], 'load', function () {\n    _windowLoaded = true;\n  });\n}\n\n/**\n * check if the document has been loaded\n */\nvar hasLoaded = function hasLoaded() {\n  return _windowLoaded;\n};\n\nexports.autoSetup = autoSetup;\nexports.autoSetupTimeout = autoSetupTimeout;\nexports.hasLoaded = hasLoaded;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/video.js/es5/setup.js\n ** module id = 7\n ** module chunks = 0 1\n **/","'use strict';\n\nexports.__esModule = true;\nexports.$$ = exports.$ = undefined;\n\nvar _templateObject = _taggedTemplateLiteralLoose(['Setting attributes in the second argument of createEl()\\n                has been deprecated. Use the third argument instead.\\n                createEl(type, properties, attributes). Attempting to set ', ' to ', '.'], ['Setting attributes in the second argument of createEl()\\n                has been deprecated. Use the third argument instead.\\n                createEl(type, properties, attributes). Attempting to set ', ' to ', '.']);\n\nexports.isReal = isReal;\nexports.isEl = isEl;\nexports.getEl = getEl;\nexports.createEl = createEl;\nexports.textContent = textContent;\nexports.insertElFirst = insertElFirst;\nexports.getElData = getElData;\nexports.hasElData = hasElData;\nexports.removeElData = removeElData;\nexports.hasElClass = hasElClass;\nexports.addElClass = addElClass;\nexports.removeElClass = removeElClass;\nexports.toggleElClass = toggleElClass;\nexports.setElAttributes = setElAttributes;\nexports.getElAttributes = getElAttributes;\nexports.getAttribute = getAttribute;\nexports.setAttribute = setAttribute;\nexports.removeAttribute = removeAttribute;\nexports.blockTextSelection = blockTextSelection;\nexports.unblockTextSelection = unblockTextSelection;\nexports.findElPosition = findElPosition;\nexports.getPointerPosition = getPointerPosition;\nexports.isTextNode = isTextNode;\nexports.emptyEl = emptyEl;\nexports.normalizeContent = normalizeContent;\nexports.appendContent = appendContent;\nexports.insertContent = insertContent;\n\nvar _document = require('global/document');\n\nvar _document2 = _interopRequireDefault(_document);\n\nvar _window = require('global/window');\n\nvar _window2 = _interopRequireDefault(_window);\n\nvar _guid = require('./guid.js');\n\nvar Guid = _interopRequireWildcard(_guid);\n\nvar _log = require('./log.js');\n\nvar _log2 = _interopRequireDefault(_log);\n\nvar _tsml = require('tsml');\n\nvar _tsml2 = _interopRequireDefault(_tsml);\n\nvar _obj = require('./obj');\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj['default'] = obj; return newObj; } }\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nfunction _taggedTemplateLiteralLoose(strings, raw) { strings.raw = raw; return strings; } /**\n                                                                                           * @file dom.js\n                                                                                           * @module dom\n                                                                                           */\n\n\n/**\n * Detect if a value is a string with any non-whitespace characters.\n *\n * @param {string} str\n *        The string to check\n *\n * @return {boolean}\n *         - True if the string is non-blank\n *         - False otherwise\n *\n */\nfunction isNonBlankString(str) {\n  return typeof str === 'string' && /\\S/.test(str);\n}\n\n/**\n * Throws an error if the passed string has whitespace. This is used by\n * class methods to be relatively consistent with the classList API.\n *\n * @param {string} str\n *         The string to check for whitespace.\n *\n * @throws {Error}\n *         Throws an error if there is whitespace in the string.\n *\n */\nfunction throwIfWhitespace(str) {\n  if (/\\s/.test(str)) {\n    throw new Error('class has illegal whitespace characters');\n  }\n}\n\n/**\n * Produce a regular expression for matching a className within an elements className.\n *\n * @param {string} className\n *         The className to generate the RegExp for.\n *\n * @return {RegExp}\n *         The RegExp that will check for a specific `className` in an elements\n *         className.\n */\nfunction classRegExp(className) {\n  return new RegExp('(^|\\\\s)' + className + '($|\\\\s)');\n}\n\n/**\n * Whether the current DOM interface appears to be real.\n *\n * @return {Boolean}\n */\nfunction isReal() {\n  return (\n\n    // Both document and window will never be undefined thanks to `global`.\n    _document2['default'] === _window2['default'].document &&\n\n    // In IE < 9, DOM methods return \"object\" as their type, so all we can\n    // confidently check is that it exists.\n    typeof _document2['default'].createElement !== 'undefined'\n  );\n}\n\n/**\n * Determines, via duck typing, whether or not a value is a DOM element.\n *\n * @param {Mixed} value\n *        The thing to check\n *\n * @return {boolean}\n *         - True if it is a DOM element\n *         - False otherwise\n */\nfunction isEl(value) {\n  return (0, _obj.isObject)(value) && value.nodeType === 1;\n}\n\n/**\n * Creates functions to query the DOM using a given method.\n *\n * @param {string} method\n *         The method to create the query with.\n *\n * @return {Function}\n *         The query method\n */\nfunction createQuerier(method) {\n  return function (selector, context) {\n    if (!isNonBlankString(selector)) {\n      return _document2['default'][method](null);\n    }\n    if (isNonBlankString(context)) {\n      context = _document2['default'].querySelector(context);\n    }\n\n    var ctx = isEl(context) ? context : _document2['default'];\n\n    return ctx[method] && ctx[method](selector);\n  };\n}\n\n/**\n * Shorthand for document.getElementById()\n * Also allows for CSS (jQuery) ID syntax. But nothing other than IDs.\n *\n * @param {string} id\n *         The id of the element to get\n *\n * @return {Element|null}\n *         Element with supplied ID or null if there wasn't one.\n */\nfunction getEl(id) {\n  if (id.indexOf('#') === 0) {\n    id = id.slice(1);\n  }\n\n  return _document2['default'].getElementById(id);\n}\n\n/**\n * Creates an element and applies properties.\n *\n * @param {string} [tagName='div']\n *         Name of tag to be created.\n *\n * @param {Object} [properties={}]\n *         Element properties to be applied.\n *\n * @param {Object} [attributes={}]\n *         Element attributes to be applied.\n *\n * @param {String|Element|TextNode|Array|Function} [content]\n *         Contents for the element (see: {@link dom:normalizeContent})\n *\n * @return {Element}\n *         The element that was created.\n */\nfunction createEl() {\n  var tagName = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'div';\n  var properties = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  var attributes = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  var content = arguments[3];\n\n  var el = _document2['default'].createElement(tagName);\n\n  Object.getOwnPropertyNames(properties).forEach(function (propName) {\n    var val = properties[propName];\n\n    // See #2176\n    // We originally were accepting both properties and attributes in the\n    // same object, but that doesn't work so well.\n    if (propName.indexOf('aria-') !== -1 || propName === 'role' || propName === 'type') {\n      _log2['default'].warn((0, _tsml2['default'])(_templateObject, propName, val));\n      el.setAttribute(propName, val);\n\n      // Handle textContent since it's not supported everywhere and we have a\n      // method for it.\n    } else if (propName === 'textContent') {\n      textContent(el, val);\n    } else {\n      el[propName] = val;\n    }\n  });\n\n  Object.getOwnPropertyNames(attributes).forEach(function (attrName) {\n    el.setAttribute(attrName, attributes[attrName]);\n  });\n\n  if (content) {\n    appendContent(el, content);\n  }\n\n  return el;\n}\n\n/**\n * Injects text into an element, replacing any existing contents entirely.\n *\n * @param {Element} el\n *        The element to add text content into\n *\n * @param {string} text\n *        The text content to add.\n *\n * @return {Element}\n *         The element with added text content.\n */\nfunction textContent(el, text) {\n  if (typeof el.textContent === 'undefined') {\n    el.innerText = text;\n  } else {\n    el.textContent = text;\n  }\n  return el;\n}\n\n/**\n * Insert an element as the first child node of another\n *\n * @param {Element} child\n *        Element to insert\n *\n * @param {Element} parent\n *        Element to insert child into\n *\n */\nfunction insertElFirst(child, parent) {\n  if (parent.firstChild) {\n    parent.insertBefore(child, parent.firstChild);\n  } else {\n    parent.appendChild(child);\n  }\n}\n\n/**\n * Element Data Store. Allows for binding data to an element without putting it directly on the element.\n * Ex. Event listeners are stored here.\n * (also from jsninja.com, slightly modified and updated for closure compiler)\n *\n * @type {Object}\n * @private\n */\nvar elData = {};\n\n/*\n * Unique attribute name to store an element's guid in\n *\n * @type {string}\n * @constant\n * @private\n */\nvar elIdAttr = 'vdata' + new Date().getTime();\n\n/**\n * Returns the cache object where data for an element is stored\n *\n * @param {Element} el\n *        Element to store data for.\n *\n * @return {Object}\n *         The cache object for that el that was passed in.\n */\nfunction getElData(el) {\n  var id = el[elIdAttr];\n\n  if (!id) {\n    id = el[elIdAttr] = Guid.newGUID();\n  }\n\n  if (!elData[id]) {\n    elData[id] = {};\n  }\n\n  return elData[id];\n}\n\n/**\n * Returns whether or not an element has cached data\n *\n * @param {Element} el\n *        Check if this element has cached data.\n *\n * @return {boolean}\n *         - True if the DOM element has cached data.\n *         - False otherwise.\n */\nfunction hasElData(el) {\n  var id = el[elIdAttr];\n\n  if (!id) {\n    return false;\n  }\n\n  return !!Object.getOwnPropertyNames(elData[id]).length;\n}\n\n/**\n * Delete data for the element from the cache and the guid attr from getElementById\n *\n * @param {Element} el\n *        Remove cached data for this element.\n */\nfunction removeElData(el) {\n  var id = el[elIdAttr];\n\n  if (!id) {\n    return;\n  }\n\n  // Remove all stored data\n  delete elData[id];\n\n  // Remove the elIdAttr property from the DOM node\n  try {\n    delete el[elIdAttr];\n  } catch (e) {\n    if (el.removeAttribute) {\n      el.removeAttribute(elIdAttr);\n    } else {\n      // IE doesn't appear to support removeAttribute on the document element\n      el[elIdAttr] = null;\n    }\n  }\n}\n\n/**\n * Check if an element has a CSS class\n *\n * @param {Element} element\n *        Element to check\n *\n * @param {string} classToCheck\n *        Class name to check for\n *\n * @return {boolean}\n *         - True if the element had the class\n *         - False otherwise.\n *\n * @throws {Error}\n *         Throws an error if `classToCheck` has white space.\n */\nfunction hasElClass(element, classToCheck) {\n  throwIfWhitespace(classToCheck);\n  if (element.classList) {\n    return element.classList.contains(classToCheck);\n  }\n  return classRegExp(classToCheck).test(element.className);\n}\n\n/**\n * Add a CSS class name to an element\n *\n * @param {Element} element\n *        Element to add class name to.\n *\n * @param {string} classToAdd\n *        Class name to add.\n *\n * @return {Element}\n *         The dom element with the added class name.\n */\nfunction addElClass(element, classToAdd) {\n  if (element.classList) {\n    element.classList.add(classToAdd);\n\n    // Don't need to `throwIfWhitespace` here because `hasElClass` will do it\n    // in the case of classList not being supported.\n  } else if (!hasElClass(element, classToAdd)) {\n    element.className = (element.className + ' ' + classToAdd).trim();\n  }\n\n  return element;\n}\n\n/**\n * Remove a CSS class name from an element\n *\n * @param {Element} element\n *        Element to remove a class name from.\n *\n * @param {string} classToRemove\n *        Class name to remove\n *\n * @return {Element}\n *         The dom element with class name removed.\n */\nfunction removeElClass(element, classToRemove) {\n  if (element.classList) {\n    element.classList.remove(classToRemove);\n  } else {\n    throwIfWhitespace(classToRemove);\n    element.className = element.className.split(/\\s+/).filter(function (c) {\n      return c !== classToRemove;\n    }).join(' ');\n  }\n\n  return element;\n}\n\n/**\n * The callback definition for toggleElClass.\n *\n * @callback Dom~PredicateCallback\n * @param {Element} element\n *        The DOM element of the Component.\n *\n * @param {string} classToToggle\n *        The `className` that wants to be toggled\n *\n * @return {boolean|undefined}\n *         - If true the `classToToggle` will get added to `element`.\n *         - If false the `classToToggle` will get removed from `element`.\n *         - If undefined this callback will be ignored\n */\n\n/**\n * Adds or removes a CSS class name on an element depending on an optional\n * condition or the presence/absence of the class name.\n *\n * @param {Element} element\n *        The element to toggle a class name on.\n *\n * @param {string} classToToggle\n *        The class that should be toggled\n *\n * @param {boolean|PredicateCallback} [predicate]\n *        See the return value for {@link Dom~PredicateCallback}\n *\n * @return {Element}\n *         The element with a class that has been toggled.\n */\nfunction toggleElClass(element, classToToggle, predicate) {\n\n  // This CANNOT use `classList` internally because IE does not support the\n  // second parameter to the `classList.toggle()` method! Which is fine because\n  // `classList` will be used by the add/remove functions.\n  var has = hasElClass(element, classToToggle);\n\n  if (typeof predicate === 'function') {\n    predicate = predicate(element, classToToggle);\n  }\n\n  if (typeof predicate !== 'boolean') {\n    predicate = !has;\n  }\n\n  // If the necessary class operation matches the current state of the\n  // element, no action is required.\n  if (predicate === has) {\n    return;\n  }\n\n  if (predicate) {\n    addElClass(element, classToToggle);\n  } else {\n    removeElClass(element, classToToggle);\n  }\n\n  return element;\n}\n\n/**\n * Apply attributes to an HTML element.\n *\n * @param {Element} el\n *        Element to add attributes to.\n *\n * @param {Object} [attributes]\n *        Attributes to be applied.\n */\nfunction setElAttributes(el, attributes) {\n  Object.getOwnPropertyNames(attributes).forEach(function (attrName) {\n    var attrValue = attributes[attrName];\n\n    if (attrValue === null || typeof attrValue === 'undefined' || attrValue === false) {\n      el.removeAttribute(attrName);\n    } else {\n      el.setAttribute(attrName, attrValue === true ? '' : attrValue);\n    }\n  });\n}\n\n/**\n * Get an element's attribute values, as defined on the HTML tag\n * Attributes are not the same as properties. They're defined on the tag\n * or with setAttribute (which shouldn't be used with HTML)\n * This will return true or false for boolean attributes.\n *\n * @param {Element} tag\n *        Element from which to get tag attributes.\n *\n * @return {Object}\n *         All attributes of the element.\n */\nfunction getElAttributes(tag) {\n  var obj = {};\n\n  // known boolean attributes\n  // we can check for matching boolean properties, but older browsers\n  // won't know about HTML5 boolean attributes that we still read from\n  var knownBooleans = ',' + 'autoplay,controls,loop,muted,default' + ',';\n\n  if (tag && tag.attributes && tag.attributes.length > 0) {\n    var attrs = tag.attributes;\n\n    for (var i = attrs.length - 1; i >= 0; i--) {\n      var attrName = attrs[i].name;\n      var attrVal = attrs[i].value;\n\n      // check for known booleans\n      // the matching element property will return a value for typeof\n      if (typeof tag[attrName] === 'boolean' || knownBooleans.indexOf(',' + attrName + ',') !== -1) {\n        // the value of an included boolean attribute is typically an empty\n        // string ('') which would equal false if we just check for a false value.\n        // we also don't want support bad code like autoplay='false'\n        attrVal = attrVal !== null ? true : false;\n      }\n\n      obj[attrName] = attrVal;\n    }\n  }\n\n  return obj;\n}\n\n/**\n * Get the value of an element's attribute\n *\n * @param {Element} el\n *        A DOM element\n *\n * @param {string} attribute\n *        Attribute to get the value of\n *\n * @return {string}\n *         value of the attribute\n */\nfunction getAttribute(el, attribute) {\n  return el.getAttribute(attribute);\n}\n\n/**\n * Set the value of an element's attribute\n *\n * @param {Element} el\n *        A DOM element\n *\n * @param {string} attribute\n *        Attribute to set\n *\n * @param {string} value\n *        Value to set the attribute to\n */\nfunction setAttribute(el, attribute, value) {\n  el.setAttribute(attribute, value);\n}\n\n/**\n * Remove an element's attribute\n *\n * @param {Element} el\n *        A DOM element\n *\n * @param {string} attribute\n *        Attribute to remove\n */\nfunction removeAttribute(el, attribute) {\n  el.removeAttribute(attribute);\n}\n\n/**\n * Attempt to block the ability to select text while dragging controls\n */\nfunction blockTextSelection() {\n  _document2['default'].body.focus();\n  _document2['default'].onselectstart = function () {\n    return false;\n  };\n}\n\n/**\n * Turn off text selection blocking\n */\nfunction unblockTextSelection() {\n  _document2['default'].onselectstart = function () {\n    return true;\n  };\n}\n\n/**\n * The postion of a DOM element on the page.\n *\n * @typedef {Object} Dom~Position\n *\n * @property {number} left\n *           Pixels to the left\n *\n * @property {number} top\n *           Pixels on top\n */\n\n/**\n * Offset Left.\n * getBoundingClientRect technique from\n * John Resig\n *\n * @see http://ejohn.org/blog/getboundingclientrect-is-awesome/\n *\n * @param {Element} el\n *        Element from which to get offset\n *\n * @return {Dom~Position}\n *         The position of the element that was passed in.\n */\nfunction findElPosition(el) {\n  var box = void 0;\n\n  if (el.getBoundingClientRect && el.parentNode) {\n    box = el.getBoundingClientRect();\n  }\n\n  if (!box) {\n    return {\n      left: 0,\n      top: 0\n    };\n  }\n\n  var docEl = _document2['default'].documentElement;\n  var body = _document2['default'].body;\n\n  var clientLeft = docEl.clientLeft || body.clientLeft || 0;\n  var scrollLeft = _window2['default'].pageXOffset || body.scrollLeft;\n  var left = box.left + scrollLeft - clientLeft;\n\n  var clientTop = docEl.clientTop || body.clientTop || 0;\n  var scrollTop = _window2['default'].pageYOffset || body.scrollTop;\n  var top = box.top + scrollTop - clientTop;\n\n  // Android sometimes returns slightly off decimal values, so need to round\n  return {\n    left: Math.round(left),\n    top: Math.round(top)\n  };\n}\n\n/**\n * x and y coordinates for a dom element or mouse pointer\n *\n * @typedef {Object} Dom~Coordinates\n *\n * @property {number} x\n *           x coordinate in pixels\n *\n * @property {number} y\n *           y coordinate in pixels\n */\n\n/**\n * Get pointer position in element\n * Returns an object with x and y coordinates.\n * The base on the coordinates are the bottom left of the element.\n *\n * @param {Element} el\n *        Element on which to get the pointer position on\n *\n * @param {EventTarget~Event} event\n *        Event object\n *\n * @return {Dom~Coordinates}\n *         A Coordinates object corresponding to the mouse position.\n *\n */\nfunction getPointerPosition(el, event) {\n  var position = {};\n  var box = findElPosition(el);\n  var boxW = el.offsetWidth;\n  var boxH = el.offsetHeight;\n\n  var boxY = box.top;\n  var boxX = box.left;\n  var pageY = event.pageY;\n  var pageX = event.pageX;\n\n  if (event.changedTouches) {\n    pageX = event.changedTouches[0].pageX;\n    pageY = event.changedTouches[0].pageY;\n  }\n\n  position.y = Math.max(0, Math.min(1, (boxY - pageY + boxH) / boxH));\n  position.x = Math.max(0, Math.min(1, (pageX - boxX) / boxW));\n\n  return position;\n}\n\n/**\n * Determines, via duck typing, whether or not a value is a text node.\n *\n * @param {Mixed} value\n *        Check if this value is a text node.\n *\n * @return {boolean}\n *         - True if it is a text node\n *         - False otherwise\n */\nfunction isTextNode(value) {\n  return (0, _obj.isObject)(value) && value.nodeType === 3;\n}\n\n/**\n * Empties the contents of an element.\n *\n * @param {Element} el\n *        The element to empty children from\n *\n * @return {Element}\n *         The element with no children\n */\nfunction emptyEl(el) {\n  while (el.firstChild) {\n    el.removeChild(el.firstChild);\n  }\n  return el;\n}\n\n/**\n * Normalizes content for eventual insertion into the DOM.\n *\n * This allows a wide range of content definition methods, but protects\n * from falling into the trap of simply writing to `innerHTML`, which is\n * an XSS concern.\n *\n * The content for an element can be passed in multiple types and\n * combinations, whose behavior is as follows:\n *\n * @param {String|Element|TextNode|Array|Function} content\n *        - String: Normalized into a text node.\n *        - Element/TextNode: Passed through.\n *        - Array: A one-dimensional array of strings, elements, nodes, or functions\n *          (which return single strings, elements, or nodes).\n *        - Function: If the sole argument, is expected to produce a string, element,\n *          node, or array as defined above.\n *\n * @return {Array}\n *         All of the content that was passed in normalized.\n */\nfunction normalizeContent(content) {\n\n  // First, invoke content if it is a function. If it produces an array,\n  // that needs to happen before normalization.\n  if (typeof content === 'function') {\n    content = content();\n  }\n\n  // Next up, normalize to an array, so one or many items can be normalized,\n  // filtered, and returned.\n  return (Array.isArray(content) ? content : [content]).map(function (value) {\n\n    // First, invoke value if it is a function to produce a new value,\n    // which will be subsequently normalized to a Node of some kind.\n    if (typeof value === 'function') {\n      value = value();\n    }\n\n    if (isEl(value) || isTextNode(value)) {\n      return value;\n    }\n\n    if (typeof value === 'string' && /\\S/.test(value)) {\n      return _document2['default'].createTextNode(value);\n    }\n  }).filter(function (value) {\n    return value;\n  });\n}\n\n/**\n * Normalizes and appends content to an element.\n *\n * @param {Element} el\n *        Element to append normalized content to.\n *\n *\n * @param {String|Element|TextNode|Array|Function} content\n *        See the `content` argument of {@link dom:normalizeContent}\n *\n * @return {Element}\n *         The element with appended normalized content.\n */\nfunction appendContent(el, content) {\n  normalizeContent(content).forEach(function (node) {\n    return el.appendChild(node);\n  });\n  return el;\n}\n\n/**\n * Normalizes and inserts content into an element; this is identical to\n * `appendContent()`, except it empties the element first.\n *\n * @param {Element} el\n *        Element to insert normalized content into.\n *\n * @param {String|Element|TextNode|Array|Function} content\n *        See the `content` argument of {@link dom:normalizeContent}\n *\n * @return {Element}\n *         The element with inserted normalized content.\n *\n */\nfunction insertContent(el, content) {\n  return appendContent(emptyEl(el), content);\n}\n\n/**\n * Finds a single DOM element matching `selector` within the optional\n * `context` of another DOM element (defaulting to `document`).\n *\n * @param {string} selector\n *        A valid CSS selector, which will be passed to `querySelector`.\n *\n * @param {Element|String} [context=document]\n *        A DOM element within which to query. Can also be a selector\n *        string in which case the first matching element will be used\n *        as context. If missing (or no element matches selector), falls\n *        back to `document`.\n *\n * @return {Element|null}\n *         The element that was found or null.\n */\nvar $ = exports.$ = createQuerier('querySelector');\n\n/**\n * Finds a all DOM elements matching `selector` within the optional\n * `context` of another DOM element (defaulting to `document`).\n *\n * @param {string} selector\n *           A valid CSS selector, which will be passed to `querySelectorAll`.\n *\n * @param {Element|String} [context=document]\n *           A DOM element within which to query. Can also be a selector\n *           string in which case the first matching element will be used\n *           as context. If missing (or no element matches selector), falls\n *           back to `document`.\n *\n * @return {NodeList}\n *         A element list of elements that were found. Will be empty if none were found.\n *\n */\nvar $$ = exports.$$ = createQuerier('querySelectorAll');\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/video.js/es5/utils/dom.js\n ** module id = 8\n ** module chunks = 0 1\n **/","\"use strict\";\n\nexports.__esModule = true;\nexports.newGUID = newGUID;\n/**\n * @file guid.js\n * @module guid\n */\n\n/**\n * Unique ID for an element or function\n * @type {Number}\n */\nvar _guid = 1;\n\n/**\n * Get a unique auto-incrementing ID by number that has not been returned before.\n *\n * @return {number}\n *         A new unique ID.\n */\nfunction newGUID() {\n  return _guid++;\n}\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/video.js/es5/utils/guid.js\n ** module id = 9\n ** module chunks = 0 1\n **/","'use strict';\n\nexports.__esModule = true;\nexports.logByType = undefined;\n\nvar _window = require('global/window');\n\nvar _window2 = _interopRequireDefault(_window);\n\nvar _browser = require('./browser');\n\nvar _obj = require('./obj');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nvar log = void 0;\n\n/**\n * Log messages to the console and history based on the type of message\n *\n * @param  {string} type\n *         The name of the console method to use.\n *\n * @param  {Array} args\n *         The arguments to be passed to the matching console method.\n *\n * @param  {boolean} [stringify]\n *         By default, only old IEs should get console argument stringification,\n *         but this is exposed as a parameter to facilitate testing.\n */\n/**\n * @file log.js\n * @module log\n */\nvar logByType = exports.logByType = function logByType(type, args) {\n  var stringify = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : !!_browser.IE_VERSION && _browser.IE_VERSION < 11;\n\n\n  if (type !== 'log') {\n\n    // add the type to the front of the message when it's not \"log\"\n    args.unshift(type.toUpperCase() + ':');\n  }\n\n  // add to history\n  log.history.push(args);\n\n  // add console prefix after adding to history\n  args.unshift('VIDEOJS:');\n\n  // If there's no console then don't try to output messages, but they will\n  // still be stored in `log.history`.\n  //\n  // Was setting these once outside of this function, but containing them\n  // in the function makes it easier to test cases where console doesn't exist\n  // when the module is executed.\n  var fn = _window2['default'].console && _window2['default'].console[type];\n\n  // Bail out if there's no console.\n  if (!fn) {\n    return;\n  }\n\n  // IEs previous to 11 log objects uselessly as \"[object Object]\"; so, JSONify\n  // objects and arrays for those less-capable browsers.\n  if (stringify) {\n    args = args.map(function (a) {\n      if ((0, _obj.isObject)(a) || Array.isArray(a)) {\n        try {\n          return JSON.stringify(a);\n        } catch (x) {\n          return String(a);\n        }\n      }\n\n      // Cast to string before joining, so we get null and undefined explicitly\n      // included in output (as we would in a modern console).\n      return String(a);\n    }).join(' ');\n  }\n\n  // Old IE versions do not allow .apply() for console methods (they are\n  // reported as objects rather than functions).\n  if (!fn.apply) {\n    fn(args);\n  } else {\n    fn[Array.isArray(args) ? 'apply' : 'call'](_window2['default'].console, args);\n  }\n};\n\n/**\n * Log plain debug messages\n *\n * @param {Mixed[]} args\n *        One or more messages or objects that should be logged.\n */\nlog = function log() {\n  for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n    args[_key] = arguments[_key];\n  }\n\n  logByType('log', args);\n};\n\n/**\n * Keep a history of log messages\n *\n * @type {Array}\n */\nlog.history = [];\n\n/**\n * Log error messages\n *\n * @param {Mixed[]} args\n *        One or more messages or objects that should be logged as an error\n */\nlog.error = function () {\n  for (var _len2 = arguments.length, args = Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n    args[_key2] = arguments[_key2];\n  }\n\n  return logByType('error', args);\n};\n\n/**\n * Log warning messages\n *\n * @param {Mixed[]} args\n *        One or more messages or objects that should be logged as a warning.\n */\nlog.warn = function () {\n  for (var _len3 = arguments.length, args = Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n    args[_key3] = arguments[_key3];\n  }\n\n  return logByType('warn', args);\n};\n\nexports['default'] = log;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/video.js/es5/utils/log.js\n ** module id = 10\n ** module chunks = 0 1\n **/","'use strict';\n\nexports.__esModule = true;\nexports.BACKGROUND_SIZE_SUPPORTED = exports.TOUCH_ENABLED = exports.IS_ANY_SAFARI = exports.IS_SAFARI = exports.IE_VERSION = exports.IS_IE8 = exports.IS_CHROME = exports.IS_EDGE = exports.IS_FIREFOX = exports.IS_NATIVE_ANDROID = exports.IS_OLD_ANDROID = exports.ANDROID_VERSION = exports.IS_ANDROID = exports.IOS_VERSION = exports.IS_IOS = exports.IS_IPOD = exports.IS_IPHONE = exports.IS_IPAD = undefined;\n\nvar _dom = require('./dom');\n\nvar Dom = _interopRequireWildcard(_dom);\n\nvar _window = require('global/window');\n\nvar _window2 = _interopRequireDefault(_window);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj['default'] = obj; return newObj; } }\n\n/**\n * @file browser.js\n * @module browser\n */\nvar USER_AGENT = _window2['default'].navigator && _window2['default'].navigator.userAgent || '';\nvar webkitVersionMap = /AppleWebKit\\/([\\d.]+)/i.exec(USER_AGENT);\nvar appleWebkitVersion = webkitVersionMap ? parseFloat(webkitVersionMap.pop()) : null;\n\n/*\n * Device is an iPhone\n *\n * @type {Boolean}\n * @constant\n * @private\n */\nvar IS_IPAD = exports.IS_IPAD = /iPad/i.test(USER_AGENT);\n\n// The Facebook app's UIWebView identifies as both an iPhone and iPad, so\n// to identify iPhones, we need to exclude iPads.\n// http://artsy.github.io/blog/2012/10/18/the-perils-of-ios-user-agent-sniffing/\nvar IS_IPHONE = exports.IS_IPHONE = /iPhone/i.test(USER_AGENT) && !IS_IPAD;\nvar IS_IPOD = exports.IS_IPOD = /iPod/i.test(USER_AGENT);\nvar IS_IOS = exports.IS_IOS = IS_IPHONE || IS_IPAD || IS_IPOD;\n\nvar IOS_VERSION = exports.IOS_VERSION = function () {\n  var match = USER_AGENT.match(/OS (\\d+)_/i);\n\n  if (match && match[1]) {\n    return match[1];\n  }\n  return null;\n}();\n\nvar IS_ANDROID = exports.IS_ANDROID = /Android/i.test(USER_AGENT);\nvar ANDROID_VERSION = exports.ANDROID_VERSION = function () {\n  // This matches Android Major.Minor.Patch versions\n  // ANDROID_VERSION is Major.Minor as a Number, if Minor isn't available, then only Major is returned\n  var match = USER_AGENT.match(/Android (\\d+)(?:\\.(\\d+))?(?:\\.(\\d+))*/i);\n\n  if (!match) {\n    return null;\n  }\n\n  var major = match[1] && parseFloat(match[1]);\n  var minor = match[2] && parseFloat(match[2]);\n\n  if (major && minor) {\n    return parseFloat(match[1] + '.' + match[2]);\n  } else if (major) {\n    return major;\n  }\n  return null;\n}();\n\n// Old Android is defined as Version older than 2.3, and requiring a webkit version of the android browser\nvar IS_OLD_ANDROID = exports.IS_OLD_ANDROID = IS_ANDROID && /webkit/i.test(USER_AGENT) && ANDROID_VERSION < 2.3;\nvar IS_NATIVE_ANDROID = exports.IS_NATIVE_ANDROID = IS_ANDROID && ANDROID_VERSION < 5 && appleWebkitVersion < 537;\n\nvar IS_FIREFOX = exports.IS_FIREFOX = /Firefox/i.test(USER_AGENT);\nvar IS_EDGE = exports.IS_EDGE = /Edge/i.test(USER_AGENT);\nvar IS_CHROME = exports.IS_CHROME = !IS_EDGE && /Chrome/i.test(USER_AGENT);\nvar IS_IE8 = exports.IS_IE8 = /MSIE\\s8\\.0/.test(USER_AGENT);\nvar IE_VERSION = exports.IE_VERSION = function (result) {\n  return result && parseFloat(result[1]);\n}(/MSIE\\s(\\d+)\\.\\d/.exec(USER_AGENT));\n\nvar IS_SAFARI = exports.IS_SAFARI = /Safari/i.test(USER_AGENT) && !IS_CHROME && !IS_ANDROID && !IS_EDGE;\nvar IS_ANY_SAFARI = exports.IS_ANY_SAFARI = IS_SAFARI || IS_IOS;\n\nvar TOUCH_ENABLED = exports.TOUCH_ENABLED = Dom.isReal() && ('ontouchstart' in _window2['default'] || _window2['default'].DocumentTouch && _window2['default'].document instanceof _window2['default'].DocumentTouch);\n\nvar BACKGROUND_SIZE_SUPPORTED = exports.BACKGROUND_SIZE_SUPPORTED = Dom.isReal() && 'backgroundSize' in _window2['default'].document.createElement('video').style;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/video.js/es5/utils/browser.js\n ** module id = 11\n ** module chunks = 0 1\n **/","'use strict';\n\nexports.__esModule = true;\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nexports.each = each;\nexports.reduce = reduce;\nexports.assign = assign;\nexports.isObject = isObject;\nexports.isPlain = isPlain;\n/**\n * @file obj.js\n * @module obj\n */\n\n/**\n * @callback obj:EachCallback\n *\n * @param {Mixed} value\n *        The current key for the object that is being iterated over.\n *\n * @param {string} key\n *        The current key-value for object that is being iterated over\n */\n\n/**\n * @callback obj:ReduceCallback\n *\n * @param {Mixed} accum\n *        The value that is accumulating over the reduce loop.\n *\n * @param {Mixed} value\n *        The current key for the object that is being iterated over.\n *\n * @param {string} key\n *        The current key-value for object that is being iterated over\n *\n * @return {Mixed}\n *         The new accumulated value.\n */\nvar toString = Object.prototype.toString;\n\n/**\n * Array-like iteration for objects.\n *\n * @param {Object} object\n *        The object to iterate over\n *\n * @param {obj:EachCallback} fn\n *        The callback function which is called for each key in the object.\n */\nfunction each(object, fn) {\n  Object.keys(object).forEach(function (key) {\n    return fn(object[key], key);\n  });\n}\n\n/**\n * Array-like reduce for objects.\n *\n * @param {Object} object\n *        The Object that you want to reduce.\n *\n * @param {Function} fn\n *         A callback function which is called for each key in the object. It\n *         receives the accumulated value and the per-iteration value and key\n *         as arguments.\n *\n * @param {Mixed} [initial = 0]\n *        Starting value\n *\n * @return {Mixed}\n *         The final accumulated value.\n */\nfunction reduce(object, fn) {\n  var initial = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;\n\n  return Object.keys(object).reduce(function (accum, key) {\n    return fn(accum, object[key], key);\n  }, initial);\n}\n\n/**\n * Object.assign-style object shallow merge/extend.\n *\n * @param  {Object} target\n * @param  {Object} ...sources\n * @return {Object}\n */\nfunction assign(target) {\n  for (var _len = arguments.length, sources = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    sources[_key - 1] = arguments[_key];\n  }\n\n  if (Object.assign) {\n    return Object.assign.apply(Object, [target].concat(sources));\n  }\n\n  sources.forEach(function (source) {\n    if (!source) {\n      return;\n    }\n\n    each(source, function (value, key) {\n      target[key] = value;\n    });\n  });\n\n  return target;\n}\n\n/**\n * Returns whether a value is an object of any kind - including DOM nodes,\n * arrays, regular expressions, etc. Not functions, though.\n *\n * This avoids the gotcha where using `typeof` on a `null` value\n * results in `'object'`.\n *\n * @param  {Object} value\n * @return {Boolean}\n */\nfunction isObject(value) {\n  return !!value && (typeof value === 'undefined' ? 'undefined' : _typeof(value)) === 'object';\n}\n\n/**\n * Returns whether an object appears to be a \"plain\" object - that is, a\n * direct instance of `Object`.\n *\n * @param  {Object} value\n * @return {Boolean}\n */\nfunction isPlain(value) {\n  return isObject(value) && toString.call(value) === '[object Object]' && value.constructor === Object;\n}\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/video.js/es5/utils/obj.js\n ** module id = 12\n ** module chunks = 0 1\n **/","function clean (s) {\n  return s.replace(/\\n\\r?\\s*/g, '')\n}\n\n\nmodule.exports = function tsml (sa) {\n  var s = ''\n    , i = 0\n\n  for (; i < arguments.length; i++)\n    s += clean(sa[i]) + (arguments[i + 1] || '')\n\n  return s\n}\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/tsml/tsml.js\n ** module id = 13\n ** module chunks = 0 1\n **/","'use strict';\n\nexports.__esModule = true;\nexports.fixEvent = fixEvent;\nexports.on = on;\nexports.off = off;\nexports.trigger = trigger;\nexports.one = one;\n\nvar _dom = require('./dom.js');\n\nvar Dom = _interopRequireWildcard(_dom);\n\nvar _guid = require('./guid.js');\n\nvar Guid = _interopRequireWildcard(_guid);\n\nvar _log = require('./log.js');\n\nvar _log2 = _interopRequireDefault(_log);\n\nvar _window = require('global/window');\n\nvar _window2 = _interopRequireDefault(_window);\n\nvar _document = require('global/document');\n\nvar _document2 = _interopRequireDefault(_document);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj['default'] = obj; return newObj; } }\n\n/**\n * Clean up the listener cache and dispatchers\n *\n * @param {Element|Object} elem\n *        Element to clean up\n *\n * @param {string} type\n *        Type of event to clean up\n */\nfunction _cleanUpEvents(elem, type) {\n  var data = Dom.getElData(elem);\n\n  // Remove the events of a particular type if there are none left\n  if (data.handlers[type].length === 0) {\n    delete data.handlers[type];\n    // data.handlers[type] = null;\n    // Setting to null was causing an error with data.handlers\n\n    // Remove the meta-handler from the element\n    if (elem.removeEventListener) {\n      elem.removeEventListener(type, data.dispatcher, false);\n    } else if (elem.detachEvent) {\n      elem.detachEvent('on' + type, data.dispatcher);\n    }\n  }\n\n  // Remove the events object if there are no types left\n  if (Object.getOwnPropertyNames(data.handlers).length <= 0) {\n    delete data.handlers;\n    delete data.dispatcher;\n    delete data.disabled;\n  }\n\n  // Finally remove the element data if there is no data left\n  if (Object.getOwnPropertyNames(data).length === 0) {\n    Dom.removeElData(elem);\n  }\n}\n\n/**\n * Loops through an array of event types and calls the requested method for each type.\n *\n * @param {Function} fn\n *        The event method we want to use.\n *\n * @param {Element|Object} elem\n *        Element or object to bind listeners to\n *\n * @param {string} type\n *        Type of event to bind to.\n *\n * @param {EventTarget~EventListener} callback\n *        Event listener.\n */\n/**\n * @file events.js. An Event System (John Resig - Secrets of a JS Ninja http://jsninja.com/)\n * (Original book version wasn't completely usable, so fixed some things and made Closure Compiler compatible)\n * This should work very similarly to jQuery's events, however it's based off the book version which isn't as\n * robust as jquery's, so there's probably some differences.\n *\n * @module events\n */\n\nfunction _handleMultipleEvents(fn, elem, types, callback) {\n  types.forEach(function (type) {\n    // Call the event method for each one of the types\n    fn(elem, type, callback);\n  });\n}\n\n/**\n * Fix a native event to have standard property values\n *\n * @param {Object} event\n *        Event object to fix.\n *\n * @return {Object}\n *         Fixed event object.\n */\nfunction fixEvent(event) {\n\n  function returnTrue() {\n    return true;\n  }\n\n  function returnFalse() {\n    return false;\n  }\n\n  // Test if fixing up is needed\n  // Used to check if !event.stopPropagation instead of isPropagationStopped\n  // But native events return true for stopPropagation, but don't have\n  // other expected methods like isPropagationStopped. Seems to be a problem\n  // with the Javascript Ninja code. So we're just overriding all events now.\n  if (!event || !event.isPropagationStopped) {\n    (function () {\n      var old = event || _window2['default'].event;\n\n      event = {};\n      // Clone the old object so that we can modify the values event = {};\n      // IE8 Doesn't like when you mess with native event properties\n      // Firefox returns false for event.hasOwnProperty('type') and other props\n      //  which makes copying more difficult.\n      // TODO: Probably best to create a whitelist of event props\n      for (var key in old) {\n        // Safari 6.0.3 warns you if you try to copy deprecated layerX/Y\n        // Chrome warns you if you try to copy deprecated keyboardEvent.keyLocation\n        // and webkitMovementX/Y\n        if (key !== 'layerX' && key !== 'layerY' && key !== 'keyLocation' && key !== 'webkitMovementX' && key !== 'webkitMovementY') {\n          // Chrome 32+ warns if you try to copy deprecated returnValue, but\n          // we still want to if preventDefault isn't supported (IE8).\n          if (!(key === 'returnValue' && old.preventDefault)) {\n            event[key] = old[key];\n          }\n        }\n      }\n\n      // The event occurred on this element\n      if (!event.target) {\n        event.target = event.srcElement || _document2['default'];\n      }\n\n      // Handle which other element the event is related to\n      if (!event.relatedTarget) {\n        event.relatedTarget = event.fromElement === event.target ? event.toElement : event.fromElement;\n      }\n\n      // Stop the default browser action\n      event.preventDefault = function () {\n        if (old.preventDefault) {\n          old.preventDefault();\n        }\n        event.returnValue = false;\n        old.returnValue = false;\n        event.defaultPrevented = true;\n      };\n\n      event.defaultPrevented = false;\n\n      // Stop the event from bubbling\n      event.stopPropagation = function () {\n        if (old.stopPropagation) {\n          old.stopPropagation();\n        }\n        event.cancelBubble = true;\n        old.cancelBubble = true;\n        event.isPropagationStopped = returnTrue;\n      };\n\n      event.isPropagationStopped = returnFalse;\n\n      // Stop the event from bubbling and executing other handlers\n      event.stopImmediatePropagation = function () {\n        if (old.stopImmediatePropagation) {\n          old.stopImmediatePropagation();\n        }\n        event.isImmediatePropagationStopped = returnTrue;\n        event.stopPropagation();\n      };\n\n      event.isImmediatePropagationStopped = returnFalse;\n\n      // Handle mouse position\n      if (event.clientX !== null && event.clientX !== undefined) {\n        var doc = _document2['default'].documentElement;\n        var body = _document2['default'].body;\n\n        event.pageX = event.clientX + (doc && doc.scrollLeft || body && body.scrollLeft || 0) - (doc && doc.clientLeft || body && body.clientLeft || 0);\n        event.pageY = event.clientY + (doc && doc.scrollTop || body && body.scrollTop || 0) - (doc && doc.clientTop || body && body.clientTop || 0);\n      }\n\n      // Handle key presses\n      event.which = event.charCode || event.keyCode;\n\n      // Fix button for mouse clicks:\n      // 0 == left; 1 == middle; 2 == right\n      if (event.button !== null && event.button !== undefined) {\n\n        // The following is disabled because it does not pass videojs-standard\n        // and... yikes.\n        /* eslint-disable */\n        event.button = event.button & 1 ? 0 : event.button & 4 ? 1 : event.button & 2 ? 2 : 0;\n        /* eslint-enable */\n      }\n    })();\n  }\n\n  // Returns fixed-up instance\n  return event;\n}\n\n/**\n * Add an event listener to element\n * It stores the handler function in a separate cache object\n * and adds a generic handler to the element's event,\n * along with a unique id (guid) to the element.\n *\n * @param {Element|Object} elem\n *        Element or object to bind listeners to\n *\n * @param {string|string[]} type\n *        Type of event to bind to.\n *\n * @param {EventTarget~EventListener} fn\n *        Event listener.\n */\nfunction on(elem, type, fn) {\n  if (Array.isArray(type)) {\n    return _handleMultipleEvents(on, elem, type, fn);\n  }\n\n  var data = Dom.getElData(elem);\n\n  // We need a place to store all our handler data\n  if (!data.handlers) {\n    data.handlers = {};\n  }\n\n  if (!data.handlers[type]) {\n    data.handlers[type] = [];\n  }\n\n  if (!fn.guid) {\n    fn.guid = Guid.newGUID();\n  }\n\n  data.handlers[type].push(fn);\n\n  if (!data.dispatcher) {\n    data.disabled = false;\n\n    data.dispatcher = function (event, hash) {\n\n      if (data.disabled) {\n        return;\n      }\n\n      event = fixEvent(event);\n\n      var handlers = data.handlers[event.type];\n\n      if (handlers) {\n        // Copy handlers so if handlers are added/removed during the process it doesn't throw everything off.\n        var handlersCopy = handlers.slice(0);\n\n        for (var m = 0, n = handlersCopy.length; m < n; m++) {\n          if (event.isImmediatePropagationStopped()) {\n            break;\n          } else {\n            try {\n              handlersCopy[m].call(elem, event, hash);\n            } catch (e) {\n              _log2['default'].error(e);\n            }\n          }\n        }\n      }\n    };\n  }\n\n  if (data.handlers[type].length === 1) {\n    if (elem.addEventListener) {\n      elem.addEventListener(type, data.dispatcher, false);\n    } else if (elem.attachEvent) {\n      elem.attachEvent('on' + type, data.dispatcher);\n    }\n  }\n}\n\n/**\n * Removes event listeners from an element\n *\n * @param {Element|Object} elem\n *        Object to remove listeners from.\n *\n * @param {string|string[]} [type]\n *        Type of listener to remove. Don't include to remove all events from element.\n *\n * @param {EventTarget~EventListener} [fn]\n *        Specific listener to remove. Don't include to remove listeners for an event\n *        type.\n */\nfunction off(elem, type, fn) {\n  // Don't want to add a cache object through getElData if not needed\n  if (!Dom.hasElData(elem)) {\n    return;\n  }\n\n  var data = Dom.getElData(elem);\n\n  // If no events exist, nothing to unbind\n  if (!data.handlers) {\n    return;\n  }\n\n  if (Array.isArray(type)) {\n    return _handleMultipleEvents(off, elem, type, fn);\n  }\n\n  // Utility function\n  var removeType = function removeType(t) {\n    data.handlers[t] = [];\n    _cleanUpEvents(elem, t);\n  };\n\n  // Are we removing all bound events?\n  if (!type) {\n    for (var t in data.handlers) {\n      removeType(t);\n    }\n    return;\n  }\n\n  var handlers = data.handlers[type];\n\n  // If no handlers exist, nothing to unbind\n  if (!handlers) {\n    return;\n  }\n\n  // If no listener was provided, remove all listeners for type\n  if (!fn) {\n    removeType(type);\n    return;\n  }\n\n  // We're only removing a single handler\n  if (fn.guid) {\n    for (var n = 0; n < handlers.length; n++) {\n      if (handlers[n].guid === fn.guid) {\n        handlers.splice(n--, 1);\n      }\n    }\n  }\n\n  _cleanUpEvents(elem, type);\n}\n\n/**\n * Trigger an event for an element\n *\n * @param {Element|Object} elem\n *        Element to trigger an event on\n *\n * @param {EventTarget~Event|string} event\n *        A string (the type) or an event object with a type attribute\n *\n * @param {Object} [hash]\n *        data hash to pass along with the event\n *\n * @return {boolean|undefined}\n *         - Returns the opposite of `defaultPrevented` if default was prevented\n *         - Otherwise returns undefined\n */\nfunction trigger(elem, event, hash) {\n  // Fetches element data and a reference to the parent (for bubbling).\n  // Don't want to add a data object to cache for every parent,\n  // so checking hasElData first.\n  var elemData = Dom.hasElData(elem) ? Dom.getElData(elem) : {};\n  var parent = elem.parentNode || elem.ownerDocument;\n  // type = event.type || event,\n  // handler;\n\n  // If an event name was passed as a string, creates an event out of it\n  if (typeof event === 'string') {\n    event = { type: event, target: elem };\n  }\n  // Normalizes the event properties.\n  event = fixEvent(event);\n\n  // If the passed element has a dispatcher, executes the established handlers.\n  if (elemData.dispatcher) {\n    elemData.dispatcher.call(elem, event, hash);\n  }\n\n  // Unless explicitly stopped or the event does not bubble (e.g. media events)\n  // recursively calls this function to bubble the event up the DOM.\n  if (parent && !event.isPropagationStopped() && event.bubbles === true) {\n    trigger.call(null, parent, event, hash);\n\n    // If at the top of the DOM, triggers the default action unless disabled.\n  } else if (!parent && !event.defaultPrevented) {\n    var targetData = Dom.getElData(event.target);\n\n    // Checks if the target has a default action for this event.\n    if (event.target[event.type]) {\n      // Temporarily disables event dispatching on the target as we have already executed the handler.\n      targetData.disabled = true;\n      // Executes the default action.\n      if (typeof event.target[event.type] === 'function') {\n        event.target[event.type]();\n      }\n      // Re-enables event dispatching.\n      targetData.disabled = false;\n    }\n  }\n\n  // Inform the triggerer if the default was prevented by returning false\n  return !event.defaultPrevented;\n}\n\n/**\n * Trigger a listener only once for an event\n *\n * @param {Element|Object} elem\n *        Element or object to bind to.\n *\n * @param {string|string[]} type\n *        Name/type of event\n *\n * @param {Event~EventListener} fn\n *        Event Listener function\n */\nfunction one(elem, type, fn) {\n  if (Array.isArray(type)) {\n    return _handleMultipleEvents(one, elem, type, fn);\n  }\n  var func = function func() {\n    off(elem, type, func);\n    fn.apply(this, arguments);\n  };\n\n  // copy the guid to the new function so it can removed using the original function's ID\n  func.guid = fn.guid = fn.guid || Guid.newGUID();\n  on(elem, type, func);\n}\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/video.js/es5/utils/events.js\n ** module id = 14\n ** module chunks = 0 1\n **/","'use strict';\n\nexports.__esModule = true;\nexports.setTextContent = exports.createStyleElement = undefined;\n\nvar _document = require('global/document');\n\nvar _document2 = _interopRequireDefault(_document);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\n/**\n * Create a DOM syle element given a className for it.\n *\n * @param {string} className\n *        The className to add to the created style element.\n *\n * @return {Element}\n *         The element that was created.\n */\nvar createStyleElement = exports.createStyleElement = function createStyleElement(className) {\n  var style = _document2['default'].createElement('style');\n\n  style.className = className;\n\n  return style;\n};\n\n/**\n * Add text to a DOM element.\n *\n * @param {Element} el\n *        The Element to add text content to.\n *\n * @param {string} content\n *        The text to add to the element.\n */\n/**\n * @file stylesheet.js\n * @module stylesheet\n */\nvar setTextContent = exports.setTextContent = function setTextContent(el, content) {\n  if (el.styleSheet) {\n    el.styleSheet.cssText = content;\n  } else {\n    el.textContent = content;\n  }\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/video.js/es5/utils/stylesheet.js\n ** module id = 15\n ** module chunks = 0 1\n **/","'use strict';\n\nexports.__esModule = true;\n\nvar _window = require('global/window');\n\nvar _window2 = _interopRequireDefault(_window);\n\nvar _dom = require('./utils/dom.js');\n\nvar Dom = _interopRequireWildcard(_dom);\n\nvar _fn = require('./utils/fn.js');\n\nvar Fn = _interopRequireWildcard(_fn);\n\nvar _guid = require('./utils/guid.js');\n\nvar Guid = _interopRequireWildcard(_guid);\n\nvar _events = require('./utils/events.js');\n\nvar Events = _interopRequireWildcard(_events);\n\nvar _log = require('./utils/log.js');\n\nvar _log2 = _interopRequireDefault(_log);\n\nvar _toTitleCase = require('./utils/to-title-case.js');\n\nvar _toTitleCase2 = _interopRequireDefault(_toTitleCase);\n\nvar _mergeOptions = require('./utils/merge-options.js');\n\nvar _mergeOptions2 = _interopRequireDefault(_mergeOptions);\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj['default'] = obj; return newObj; } }\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } } /**\n                                                                                                                                                           * Player Component - Base class for all UI objects\n                                                                                                                                                           *\n                                                                                                                                                           * @file component.js\n                                                                                                                                                           */\n\n\n/**\n * Base class for all UI Components.\n * Components are UI objects which represent both a javascript object and an element\n * in the DOM. They can be children of other components, and can have\n * children themselves.\n *\n * Components can also use methods from {@link EventTarget}\n */\nvar Component = function () {\n\n  /**\n   * A callback that is called when a component is ready. Does not have any\n   * paramters and any callback value will be ignored.\n   *\n   * @callback Component~ReadyCallback\n   * @this Component\n   */\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   #\n   * @param {Object[]} [options.children]\n   *        An array of children objects to intialize this component with. Children objects have\n   *        a name property that will be used if more than one component of the same type needs to be\n   *        added.\n   *\n   * @param {Component~ReadyCallback} [ready]\n   *        Function that gets called when the `Component` is ready.\n   */\n  function Component(player, options, ready) {\n    _classCallCheck(this, Component);\n\n    // The component might be the player itself and we can't pass `this` to super\n    if (!player && this.play) {\n      this.player_ = player = this; // eslint-disable-line\n    } else {\n      this.player_ = player;\n    }\n\n    // Make a copy of prototype.options_ to protect against overriding defaults\n    this.options_ = (0, _mergeOptions2['default'])({}, this.options_);\n\n    // Updated options with supplied options\n    options = this.options_ = (0, _mergeOptions2['default'])(this.options_, options);\n\n    // Get ID from options or options element if one is supplied\n    this.id_ = options.id || options.el && options.el.id;\n\n    // If there was no ID from the options, generate one\n    if (!this.id_) {\n      // Don't require the player ID function in the case of mock players\n      var id = player && player.id && player.id() || 'no_player';\n\n      this.id_ = id + '_component_' + Guid.newGUID();\n    }\n\n    this.name_ = options.name || null;\n\n    // Create element if one wasn't provided in options\n    if (options.el) {\n      this.el_ = options.el;\n    } else if (options.createEl !== false) {\n      this.el_ = this.createEl();\n    }\n\n    this.children_ = [];\n    this.childIndex_ = {};\n    this.childNameIndex_ = {};\n\n    // Add any child components in options\n    if (options.initChildren !== false) {\n      this.initChildren();\n    }\n\n    this.ready(ready);\n    // Don't want to trigger ready here or it will before init is actually\n    // finished for all children that run this constructor\n\n    if (options.reportTouchActivity !== false) {\n      this.enableTouchActivity();\n    }\n  }\n\n  /**\n   * Dispose of the `Component` and all child components.\n   *\n   * @fires Component#dispose\n   */\n\n\n  Component.prototype.dispose = function dispose() {\n\n    /**\n     * Triggered when a `Component` is disposed.\n     *\n     * @event Component#dispose\n     * @type {EventTarget~Event}\n     *\n     * @property {boolean} [bubbles=false]\n     *           set to false so that the close event does not\n     *           bubble up\n     */\n    this.trigger({ type: 'dispose', bubbles: false });\n\n    // Dispose all children.\n    if (this.children_) {\n      for (var i = this.children_.length - 1; i >= 0; i--) {\n        if (this.children_[i].dispose) {\n          this.children_[i].dispose();\n        }\n      }\n    }\n\n    // Delete child references\n    this.children_ = null;\n    this.childIndex_ = null;\n    this.childNameIndex_ = null;\n\n    // Remove all event listeners.\n    this.off();\n\n    // Remove element from DOM\n    if (this.el_.parentNode) {\n      this.el_.parentNode.removeChild(this.el_);\n    }\n\n    Dom.removeElData(this.el_);\n    this.el_ = null;\n  };\n\n  /**\n   * Return the {@link Player} that the `Component` has attached to.\n   *\n   * @return {Player}\n   *         The player that this `Component` has attached to.\n   */\n\n\n  Component.prototype.player = function player() {\n    return this.player_;\n  };\n\n  /**\n   * Deep merge of options objects with new options.\n   * > Note: When both `obj` and `options` contain properties whose values are objects.\n   *         The two properties get merged using {@link module:mergeOptions}\n   *\n   * @param {Object} obj\n   *        The object that contains new options.\n   *\n   * @return {Object}\n   *         A new object of `this.options_` and `obj` merged together.\n   *\n   * @deprecated since version 5\n   */\n\n\n  Component.prototype.options = function options(obj) {\n    _log2['default'].warn('this.options() has been deprecated and will be moved to the constructor in 6.0');\n\n    if (!obj) {\n      return this.options_;\n    }\n\n    this.options_ = (0, _mergeOptions2['default'])(this.options_, obj);\n    return this.options_;\n  };\n\n  /**\n   * Get the `Component`s DOM element\n   *\n   * @return {Element}\n   *         The DOM element for this `Component`.\n   */\n\n\n  Component.prototype.el = function el() {\n    return this.el_;\n  };\n\n  /**\n   * Create the `Component`s DOM element.\n   *\n   * @param {string} [tagName]\n   *        Element's DOM node type. e.g. 'div'\n   *\n   * @param {Object} [properties]\n   *        An object of properties that should be set.\n   *\n   * @param {Object} [attributes]\n   *        An object of attributes that should be set.\n   *\n   * @return {Element}\n   *         The element that gets created.\n   */\n\n\n  Component.prototype.createEl = function createEl(tagName, properties, attributes) {\n    return Dom.createEl(tagName, properties, attributes);\n  };\n\n  /**\n   * Localize a string given the string in english.\n   *\n   * @param {string} string\n   *        The string to localize.\n   *\n   * @return {string}\n   *         The localized string or if no localization exists the english string.\n   */\n\n\n  Component.prototype.localize = function localize(string) {\n    var code = this.player_.language && this.player_.language();\n    var languages = this.player_.languages && this.player_.languages();\n\n    if (!code || !languages) {\n      return string;\n    }\n\n    var language = languages[code];\n\n    if (language && language[string]) {\n      return language[string];\n    }\n\n    var primaryCode = code.split('-')[0];\n    var primaryLang = languages[primaryCode];\n\n    if (primaryLang && primaryLang[string]) {\n      return primaryLang[string];\n    }\n\n    return string;\n  };\n\n  /**\n   * Return the `Component`s DOM element. This is where children get inserted.\n   * This will usually be the the same as the element returned in {@link Component#el}.\n   *\n   * @return {Element}\n   *         The content element for this `Component`.\n   */\n\n\n  Component.prototype.contentEl = function contentEl() {\n    return this.contentEl_ || this.el_;\n  };\n\n  /**\n   * Get this `Component`s ID\n   *\n   * @return {string}\n   *         The id of this `Component`\n   */\n\n\n  Component.prototype.id = function id() {\n    return this.id_;\n  };\n\n  /**\n   * Get the `Component`s name. The name gets used to reference the `Component`\n   * and is set during registration.\n   *\n   * @return {string}\n   *         The name of this `Component`.\n   */\n\n\n  Component.prototype.name = function name() {\n    return this.name_;\n  };\n\n  /**\n   * Get an array of all child components\n   *\n   * @return {Array}\n   *         The children\n   */\n\n\n  Component.prototype.children = function children() {\n    return this.children_;\n  };\n\n  /**\n   * Returns the child `Component` with the given `id`.\n   *\n   * @param {string} id\n   *        The id of the child `Component` to get.\n   *\n   * @return {Component|undefined}\n   *         The child `Component` with the given `id` or undefined.\n   */\n\n\n  Component.prototype.getChildById = function getChildById(id) {\n    return this.childIndex_[id];\n  };\n\n  /**\n   * Returns the child `Component` with the given `name`.\n   *\n   * @param {string} name\n   *        The name of the child `Component` to get.\n   *\n   * @return {Component|undefined}\n   *         The child `Component` with the given `name` or undefined.\n   */\n\n\n  Component.prototype.getChild = function getChild(name) {\n    if (!name) {\n      return;\n    }\n\n    name = (0, _toTitleCase2['default'])(name);\n\n    return this.childNameIndex_[name];\n  };\n\n  /**\n   * Add a child `Component` inside the current `Component`.\n   *\n   *\n   * @param {string|Component} child\n   *        The name or instance of a child to add.\n   *\n   * @param {Object} [options={}]\n   *        The key/value store of options that will get passed to children of\n   *        the child.\n   *\n   * @param {number} [index=this.children_.length]\n   *        The index to attempt to add a child into.\n   *\n   * @return {Component}\n   *         The `Component` that gets added as a child. When using a string the\n   *         `Component` will get created by this process.\n   */\n\n\n  Component.prototype.addChild = function addChild(child) {\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    var index = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : this.children_.length;\n\n    var component = void 0;\n    var componentName = void 0;\n\n    // If child is a string, create component with options\n    if (typeof child === 'string') {\n      componentName = (0, _toTitleCase2['default'])(child);\n\n      // Options can also be specified as a boolean,\n      // so convert to an empty object if false.\n      if (!options) {\n        options = {};\n      }\n\n      // Same as above, but true is deprecated so show a warning.\n      if (options === true) {\n        _log2['default'].warn('Initializing a child component with `true` is deprecated.' + 'Children should be defined in an array when possible, ' + 'but if necessary use an object instead of `true`.');\n        options = {};\n      }\n\n      var componentClassName = options.componentClass || componentName;\n\n      // Set name through options\n      options.name = componentName;\n\n      // Create a new object & element for this controls set\n      // If there's no .player_, this is a player\n      var ComponentClass = Component.getComponent(componentClassName);\n\n      if (!ComponentClass) {\n        throw new Error('Component ' + componentClassName + ' does not exist');\n      }\n\n      // data stored directly on the videojs object may be\n      // misidentified as a component to retain\n      // backwards-compatibility with 4.x. check to make sure the\n      // component class can be instantiated.\n      if (typeof ComponentClass !== 'function') {\n        return null;\n      }\n\n      component = new ComponentClass(this.player_ || this, options);\n\n      // child is a component instance\n    } else {\n      component = child;\n    }\n\n    this.children_.splice(index, 0, component);\n\n    if (typeof component.id === 'function') {\n      this.childIndex_[component.id()] = component;\n    }\n\n    // If a name wasn't used to create the component, check if we can use the\n    // name function of the component\n    componentName = componentName || component.name && component.name();\n\n    if (componentName) {\n      this.childNameIndex_[componentName] = component;\n    }\n\n    // Add the UI object's element to the container div (box)\n    // Having an element is not required\n    if (typeof component.el === 'function' && component.el()) {\n      var childNodes = this.contentEl().children;\n      var refNode = childNodes[index] || null;\n\n      this.contentEl().insertBefore(component.el(), refNode);\n    }\n\n    // Return so it can stored on parent object if desired.\n    return component;\n  };\n\n  /**\n   * Remove a child `Component` from this `Component`s list of children. Also removes\n   * the child `Component`s element from this `Component`s element.\n   *\n   * @param {Component} component\n   *        The child `Component` to remove.\n   */\n\n\n  Component.prototype.removeChild = function removeChild(component) {\n    if (typeof component === 'string') {\n      component = this.getChild(component);\n    }\n\n    if (!component || !this.children_) {\n      return;\n    }\n\n    var childFound = false;\n\n    for (var i = this.children_.length - 1; i >= 0; i--) {\n      if (this.children_[i] === component) {\n        childFound = true;\n        this.children_.splice(i, 1);\n        break;\n      }\n    }\n\n    if (!childFound) {\n      return;\n    }\n\n    this.childIndex_[component.id()] = null;\n    this.childNameIndex_[component.name()] = null;\n\n    var compEl = component.el();\n\n    if (compEl && compEl.parentNode === this.contentEl()) {\n      this.contentEl().removeChild(component.el());\n    }\n  };\n\n  /**\n   * Add and initialize default child `Component`s based upon options.\n   */\n\n\n  Component.prototype.initChildren = function initChildren() {\n    var _this = this;\n\n    var children = this.options_.children;\n\n    if (children) {\n      (function () {\n        // `this` is `parent`\n        var parentOptions = _this.options_;\n\n        var handleAdd = function handleAdd(child) {\n          var name = child.name;\n          var opts = child.opts;\n\n          // Allow options for children to be set at the parent options\n          // e.g. videojs(id, { controlBar: false });\n          // instead of videojs(id, { children: { controlBar: false });\n          if (parentOptions[name] !== undefined) {\n            opts = parentOptions[name];\n          }\n\n          // Allow for disabling default components\n          // e.g. options['children']['posterImage'] = false\n          if (opts === false) {\n            return;\n          }\n\n          // Allow options to be passed as a simple boolean if no configuration\n          // is necessary.\n          if (opts === true) {\n            opts = {};\n          }\n\n          // We also want to pass the original player options\n          // to each component as well so they don't need to\n          // reach back into the player for options later.\n          opts.playerOptions = _this.options_.playerOptions;\n\n          // Create and add the child component.\n          // Add a direct reference to the child by name on the parent instance.\n          // If two of the same component are used, different names should be supplied\n          // for each\n          var newChild = _this.addChild(name, opts);\n\n          if (newChild) {\n            _this[name] = newChild;\n          }\n        };\n\n        // Allow for an array of children details to passed in the options\n        var workingChildren = void 0;\n        var Tech = Component.getComponent('Tech');\n\n        if (Array.isArray(children)) {\n          workingChildren = children;\n        } else {\n          workingChildren = Object.keys(children);\n        }\n\n        workingChildren\n        // children that are in this.options_ but also in workingChildren  would\n        // give us extra children we do not want. So, we want to filter them out.\n        .concat(Object.keys(_this.options_).filter(function (child) {\n          return !workingChildren.some(function (wchild) {\n            if (typeof wchild === 'string') {\n              return child === wchild;\n            }\n            return child === wchild.name;\n          });\n        })).map(function (child) {\n          var name = void 0;\n          var opts = void 0;\n\n          if (typeof child === 'string') {\n            name = child;\n            opts = children[name] || _this.options_[name] || {};\n          } else {\n            name = child.name;\n            opts = child;\n          }\n\n          return { name: name, opts: opts };\n        }).filter(function (child) {\n          // we have to make sure that child.name isn't in the techOrder since\n          // techs are registerd as Components but can't aren't compatible\n          // See https://github.com/videojs/video.js/issues/2772\n          var c = Component.getComponent(child.opts.componentClass || (0, _toTitleCase2['default'])(child.name));\n\n          return c && !Tech.isTech(c);\n        }).forEach(handleAdd);\n      })();\n    }\n  };\n\n  /**\n   * Builds the default DOM class name. Should be overriden by sub-components.\n   *\n   * @return {string}\n   *         The DOM class name for this object.\n   *\n   * @abstract\n   */\n\n\n  Component.prototype.buildCSSClass = function buildCSSClass() {\n    // Child classes can include a function that does:\n    // return 'CLASS NAME' + this._super();\n    return '';\n  };\n\n  /**\n   * Add an `event listener` to this `Component`s element.\n   *\n   * The benefit of using this over the following:\n   * - `VjsEvents.on(otherElement, 'eventName', myFunc)`\n   * - `otherComponent.on('eventName', myFunc)`\n   *\n   * 1. Is that the listeners will get cleaned up when either component gets disposed.\n   * 1. It will also bind `myComponent` as the context of `myFunc`.\n   * > NOTE: If you remove the element from the DOM that has used `on` you need to\n   *         clean up references using: `myComponent.trigger(el, 'dispose')`\n   *         This will also allow the browser to garbage collect it. In special\n   *         cases such as with `window` and `document`, which are both permanent,\n   *         this is not necessary.\n   *\n   * @param {string|Component|string[]} [first]\n   *        The event name, and array of event names, or another `Component`.\n   *\n   * @param {EventTarget~EventListener|string|string[]} [second]\n   *        The listener function, an event name, or an Array of events names.\n   *\n   * @param {EventTarget~EventListener} [third]\n   *        The event handler if `first` is a `Component` and `second` is an event name\n   *        or an Array of event names.\n   *\n   * @return {Component}\n   *         Returns itself; method can be chained.\n   *\n   * @listens Component#dispose\n   */\n\n\n  Component.prototype.on = function on(first, second, third) {\n    var _this2 = this;\n\n    if (typeof first === 'string' || Array.isArray(first)) {\n      Events.on(this.el_, first, Fn.bind(this, second));\n\n      // Targeting another component or element\n    } else {\n      (function () {\n        var target = first;\n        var type = second;\n        var fn = Fn.bind(_this2, third);\n\n        // When this component is disposed, remove the listener from the other component\n        var removeOnDispose = function removeOnDispose() {\n          return _this2.off(target, type, fn);\n        };\n\n        // Use the same function ID so we can remove it later it using the ID\n        // of the original listener\n        removeOnDispose.guid = fn.guid;\n        _this2.on('dispose', removeOnDispose);\n\n        // If the other component is disposed first we need to clean the reference\n        // to the other component in this component's removeOnDispose listener\n        // Otherwise we create a memory leak.\n        var cleanRemover = function cleanRemover() {\n          return _this2.off('dispose', removeOnDispose);\n        };\n\n        // Add the same function ID so we can easily remove it later\n        cleanRemover.guid = fn.guid;\n\n        // Check if this is a DOM node\n        if (first.nodeName) {\n          // Add the listener to the other element\n          Events.on(target, type, fn);\n          Events.on(target, 'dispose', cleanRemover);\n\n          // Should be a component\n          // Not using `instanceof Component` because it makes mock players difficult\n        } else if (typeof first.on === 'function') {\n          // Add the listener to the other component\n          target.on(type, fn);\n          target.on('dispose', cleanRemover);\n        }\n      })();\n    }\n\n    return this;\n  };\n\n  /**\n   * Remove an event listener from this `Component`s element. If the second argument is\n   * exluded all listeners for the type passed in as the first argument will be removed.\n   *\n   * @param {string|Component|string[]} [first]\n   *        The event name, and array of event names, or another `Component`.\n   *\n   * @param {EventTarget~EventListener|string|string[]} [second]\n   *        The listener function, an event name, or an Array of events names.\n   *\n   * @param {EventTarget~EventListener} [third]\n   *        The event handler if `first` is a `Component` and `second` is an event name\n   *        or an Array of event names.\n   *\n   * @return {Component}\n   *         Returns itself; method can be chained.\n   */\n\n\n  Component.prototype.off = function off(first, second, third) {\n    if (!first || typeof first === 'string' || Array.isArray(first)) {\n      Events.off(this.el_, first, second);\n    } else {\n      var target = first;\n      var type = second;\n      // Ensure there's at least a guid, even if the function hasn't been used\n      var fn = Fn.bind(this, third);\n\n      // Remove the dispose listener on this component,\n      // which was given the same guid as the event listener\n      this.off('dispose', fn);\n\n      if (first.nodeName) {\n        // Remove the listener\n        Events.off(target, type, fn);\n        // Remove the listener for cleaning the dispose listener\n        Events.off(target, 'dispose', fn);\n      } else {\n        target.off(type, fn);\n        target.off('dispose', fn);\n      }\n    }\n\n    return this;\n  };\n\n  /**\n   * Add an event listener that gets triggered only once and then gets removed.\n   *\n   * @param {string|Component|string[]} [first]\n   *        The event name, and array of event names, or another `Component`.\n   *\n   * @param {EventTarget~EventListener|string|string[]} [second]\n   *        The listener function, an event name, or an Array of events names.\n   *\n   * @param {EventTarget~EventListener} [third]\n   *        The event handler if `first` is a `Component` and `second` is an event name\n   *        or an Array of event names.\n   *\n   * @return {Component}\n   *         Returns itself; method can be chained.\n   */\n\n\n  Component.prototype.one = function one(first, second, third) {\n    var _this3 = this,\n        _arguments = arguments;\n\n    if (typeof first === 'string' || Array.isArray(first)) {\n      Events.one(this.el_, first, Fn.bind(this, second));\n    } else {\n      (function () {\n        var target = first;\n        var type = second;\n        var fn = Fn.bind(_this3, third);\n\n        var newFunc = function newFunc() {\n          _this3.off(target, type, newFunc);\n          fn.apply(null, _arguments);\n        };\n\n        // Keep the same function ID so we can remove it later\n        newFunc.guid = fn.guid;\n\n        _this3.on(target, type, newFunc);\n      })();\n    }\n\n    return this;\n  };\n\n  /**\n   * Trigger an event on an element.\n   *\n   * @param {EventTarget~Event|Object|string} event\n   *        The event name, and Event, or an event-like object with a type attribute\n   *        set to the event name.\n   *\n   * @param {Object} [hash]\n   *        Data hash to pass along with the event\n   *\n   * @return {Component}\n   *         Returns itself; method can be chained.\n   */\n\n\n  Component.prototype.trigger = function trigger(event, hash) {\n    Events.trigger(this.el_, event, hash);\n    return this;\n  };\n\n  /**\n   * Bind a listener to the component's ready state. If the ready event has already\n   * happened it will trigger the function immediately.\n   *\n   * @param  {Component~ReadyCallback} fn\n   *         A function to call when ready is triggered.\n   *\n   * @param  {boolean} [sync=false]\n   *         Execute the listener synchronously if `Component` is ready.\n   *\n   * @return {Component}\n   *         Returns itself; method can be chained.\n   */\n\n\n  Component.prototype.ready = function ready(fn) {\n    var sync = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n\n    if (fn) {\n      if (this.isReady_) {\n        if (sync) {\n          fn.call(this);\n        } else {\n          // Call the function asynchronously by default for consistency\n          this.setTimeout(fn, 1);\n        }\n      } else {\n        this.readyQueue_ = this.readyQueue_ || [];\n        this.readyQueue_.push(fn);\n      }\n    }\n    return this;\n  };\n\n  /**\n   * Trigger all the ready listeners for this `Component`.\n   *\n   * @fires Component#ready\n   */\n\n\n  Component.prototype.triggerReady = function triggerReady() {\n    this.isReady_ = true;\n\n    // Ensure ready is triggerd asynchronously\n    this.setTimeout(function () {\n      var readyQueue = this.readyQueue_;\n\n      // Reset Ready Queue\n      this.readyQueue_ = [];\n\n      if (readyQueue && readyQueue.length > 0) {\n        readyQueue.forEach(function (fn) {\n          fn.call(this);\n        }, this);\n      }\n\n      // Allow for using event listeners also\n      /**\n       * Triggered when a `Component` is ready.\n       *\n       * @event Component#ready\n       * @type {EventTarget~Event}\n       */\n      this.trigger('ready');\n    }, 1);\n  };\n\n  /**\n   * Find a single DOM element matching a `selector`. This can be within the `Component`s\n   * `contentEl()` or another custom context.\n   *\n   * @param {string} selector\n   *        A valid CSS selector, which will be passed to `querySelector`.\n   *\n   * @param {Element|string} [context=this.contentEl()]\n   *        A DOM element within which to query. Can also be a selector string in\n   *        which case the first matching element will get used as context. If\n   *        missing `this.contentEl()` gets used. If  `this.contentEl()` returns\n   *        nothing it falls back to `document`.\n   *\n   * @return {Element|null}\n   *         the dom element that was found, or null\n   *\n   * @see [Information on CSS Selectors](https://developer.mozilla.org/en-US/docs/Web/Guide/CSS/Getting_Started/Selectors)\n   */\n\n\n  Component.prototype.$ = function $(selector, context) {\n    return Dom.$(selector, context || this.contentEl());\n  };\n\n  /**\n   * Finds all DOM element matching a `selector`. This can be within the `Component`s\n   * `contentEl()` or another custom context.\n   *\n   * @param {string} selector\n   *        A valid CSS selector, which will be passed to `querySelectorAll`.\n   *\n   * @param {Element|string} [context=this.contentEl()]\n   *        A DOM element within which to query. Can also be a selector string in\n   *        which case the first matching element will get used as context. If\n   *        missing `this.contentEl()` gets used. If  `this.contentEl()` returns\n   *        nothing it falls back to `document`.\n   *\n   * @return {NodeList}\n   *         a list of dom elements that were found\n   *\n   * @see [Information on CSS Selectors](https://developer.mozilla.org/en-US/docs/Web/Guide/CSS/Getting_Started/Selectors)\n   */\n\n\n  Component.prototype.$$ = function $$(selector, context) {\n    return Dom.$$(selector, context || this.contentEl());\n  };\n\n  /**\n   * Check if a component's element has a CSS class name.\n   *\n   * @param {string} classToCheck\n   *        CSS class name to check.\n   *\n   * @return {boolean}\n   *         - True if the `Component` has the class.\n   *         - False if the `Component` does not have the class`\n   */\n\n\n  Component.prototype.hasClass = function hasClass(classToCheck) {\n    return Dom.hasElClass(this.el_, classToCheck);\n  };\n\n  /**\n   * Add a CSS class name to the `Component`s element.\n   *\n   * @param {string} classToAdd\n   *        CSS class name to add\n   *\n   * @return {Component}\n   *         Returns itself; method can be chained.\n   */\n\n\n  Component.prototype.addClass = function addClass(classToAdd) {\n    Dom.addElClass(this.el_, classToAdd);\n    return this;\n  };\n\n  /**\n   * Remove a CSS class name from the `Component`s element.\n   *\n   * @param {string} classToRemove\n   *        CSS class name to remove\n   *\n   * @return {Component}\n   *         Returns itself; method can be chained.\n   */\n\n\n  Component.prototype.removeClass = function removeClass(classToRemove) {\n    Dom.removeElClass(this.el_, classToRemove);\n    return this;\n  };\n\n  /**\n   * Add or remove a CSS class name from the component's element.\n   * - `classToToggle` gets added when {@link Component#hasClass} would return false.\n   * - `classToToggle` gets removed when {@link Component#hasClass} would return true.\n   *\n   * @param  {string} classToToggle\n   *         The class to add or remove based on (@link Component#hasClass}\n   *\n   * @param  {boolean|Dom~predicate} [predicate]\n   *         An {@link Dom~predicate} function or a boolean\n   *\n   * @return {Component}\n   *         Returns itself; method can be chained.\n   */\n\n\n  Component.prototype.toggleClass = function toggleClass(classToToggle, predicate) {\n    Dom.toggleElClass(this.el_, classToToggle, predicate);\n    return this;\n  };\n\n  /**\n   * Show the `Component`s element if it is hidden by removing the\n   * 'vjs-hidden' class name from it.\n   *\n   * @return {Component}\n   *         Returns itself; method can be chained.\n   */\n\n\n  Component.prototype.show = function show() {\n    this.removeClass('vjs-hidden');\n    return this;\n  };\n\n  /**\n   * Hide the `Component`s element if it is currently showing by adding the\n   * 'vjs-hidden` class name to it.\n   *\n   * @return {Component}\n   *         Returns itself; method can be chained.\n   */\n\n\n  Component.prototype.hide = function hide() {\n    this.addClass('vjs-hidden');\n    return this;\n  };\n\n  /**\n   * Lock a `Component`s element in its visible state by adding the 'vjs-lock-showing'\n   * class name to it. Used during fadeIn/fadeOut.\n   *\n   * @return {Component}\n   *         Returns itself; method can be chained.\n   *\n   * @private\n   */\n\n\n  Component.prototype.lockShowing = function lockShowing() {\n    this.addClass('vjs-lock-showing');\n    return this;\n  };\n\n  /**\n   * Unlock a `Component`s element from its visible state by removing the 'vjs-lock-showing'\n   * class name from it. Used during fadeIn/fadeOut.\n   *\n   * @return {Component}\n   *         Returns itself; method can be chained.\n   *\n   * @private\n   */\n\n\n  Component.prototype.unlockShowing = function unlockShowing() {\n    this.removeClass('vjs-lock-showing');\n    return this;\n  };\n\n  /**\n   * Get the value of an attribute on the `Component`s element.\n   *\n   * @param {string} attribute\n   *        Name of the attribute to get the value from.\n   *\n   * @return {string|null}\n   *         - The value of the attribute that was asked for.\n   *         - Can be an empty string on some browsers if the attribute does not exist\n   *           or has no value\n   *         - Most browsers will return null if the attibute does not exist or has\n   *           no value.\n   *\n   * @see [DOM API]{@link https://developer.mozilla.org/en-US/docs/Web/API/Element/getAttribute}\n   */\n\n\n  Component.prototype.getAttribute = function getAttribute(attribute) {\n    return Dom.getAttribute(this.el_, attribute);\n  };\n\n  /**\n   * Set the value of an attribute on the `Component`'s element\n   *\n   * @param {string} attribute\n   *        Name of the attribute to set.\n   *\n   * @param {string} value\n   *        Value to set the attribute to.\n   *\n   * @return {Component}\n   *         Returns itself; method can be chained.\n   *\n   * @see [DOM API]{@link https://developer.mozilla.org/en-US/docs/Web/API/Element/setAttribute}\n   */\n\n\n  Component.prototype.setAttribute = function setAttribute(attribute, value) {\n    Dom.setAttribute(this.el_, attribute, value);\n    return this;\n  };\n\n  /**\n   * Remove an attribute from the `Component`s element.\n   *\n   * @param {string} attribute\n   *        Name of the attribute to remove.\n   *\n   * @return {Component}\n   *         Returns itself; method can be chained.\n   *\n   * @see [DOM API]{@link https://developer.mozilla.org/en-US/docs/Web/API/Element/removeAttribute}\n   */\n\n\n  Component.prototype.removeAttribute = function removeAttribute(attribute) {\n    Dom.removeAttribute(this.el_, attribute);\n    return this;\n  };\n\n  /**\n   * Get or set the width of the component based upon the CSS styles.\n   * See {@link Component#dimension} for more detailed information.\n   *\n   * @param {number|string} [num]\n   *        The width that you want to set postfixed with '%', 'px' or nothing.\n   *\n   * @param {boolean} [skipListeners]\n   *        Skip the resize event trigger\n   *\n   * @return {Component|number|string}\n   *         - The width when getting, zero if there is no width. Can be a string\n   *           postpixed with '%' or 'px'.\n   *         - Returns itself when setting; method can be chained.\n   */\n\n\n  Component.prototype.width = function width(num, skipListeners) {\n    return this.dimension('width', num, skipListeners);\n  };\n\n  /**\n   * Get or set the height of the component based upon the CSS styles.\n   * See {@link Component#dimension} for more detailed information.\n   *\n   * @param {number|string} [num]\n   *        The height that you want to set postfixed with '%', 'px' or nothing.\n   *\n   * @param {boolean} [skipListeners]\n   *        Skip the resize event trigger\n   *\n   * @return {Component|number|string}\n   *         - The width when getting, zero if there is no width. Can be a string\n   *           postpixed with '%' or 'px'.\n   *         - Returns itself when setting; method can be chained.\n   */\n\n\n  Component.prototype.height = function height(num, skipListeners) {\n    return this.dimension('height', num, skipListeners);\n  };\n\n  /**\n   * Set both the width and height of the `Component` element at the same time.\n   *\n   * @param  {number|string} width\n   *         Width to set the `Component`s element to.\n   *\n   * @param  {number|string} height\n   *         Height to set the `Component`s element to.\n   *\n   * @return {Component}\n   *         Returns itself; method can be chained.\n   */\n\n\n  Component.prototype.dimensions = function dimensions(width, height) {\n    // Skip resize listeners on width for optimization\n    return this.width(width, true).height(height);\n  };\n\n  /**\n   * Get or set width or height of the `Component` element. This is the shared code\n   * for the {@link Component#width} and {@link Component#height}.\n   *\n   * Things to know:\n   * - If the width or height in an number this will return the number postfixed with 'px'.\n   * - If the width/height is a percent this will return the percent postfixed with '%'\n   * - Hidden elements have a width of 0 with `window.getComputedStyle`. This function\n   *   defaults to the `Component`s `style.width` and falls back to `window.getComputedStyle`.\n   *   See [this]{@link http://www.foliotek.com/devblog/getting-the-width-of-a-hidden-element-with-jquery-using-width/}\n   *   for more information\n   * - If you want the computed style of the component, use {@link Component#currentWidth}\n   *   and {@link {Component#currentHeight}\n   *\n   * @fires Component#resize\n   *\n   * @param {string} widthOrHeight\n   8        'width' or 'height'\n   *\n   * @param  {number|string} [num]\n   8         New dimension\n   *\n   * @param  {boolean} [skipListeners]\n   *         Skip resize event trigger\n   *\n   * @return {Component}\n   *         - the dimension when getting or 0 if unset\n   *         - Returns itself when setting; method can be chained.\n   */\n\n\n  Component.prototype.dimension = function dimension(widthOrHeight, num, skipListeners) {\n    if (num !== undefined) {\n      // Set to zero if null or literally NaN (NaN !== NaN)\n      if (num === null || num !== num) {\n        num = 0;\n      }\n\n      // Check if using css width/height (% or px) and adjust\n      if (('' + num).indexOf('%') !== -1 || ('' + num).indexOf('px') !== -1) {\n        this.el_.style[widthOrHeight] = num;\n      } else if (num === 'auto') {\n        this.el_.style[widthOrHeight] = '';\n      } else {\n        this.el_.style[widthOrHeight] = num + 'px';\n      }\n\n      // skipListeners allows us to avoid triggering the resize event when setting both width and height\n      if (!skipListeners) {\n        /**\n         * Triggered when a component is resized.\n         *\n         * @event Component#resize\n         * @type {EventTarget~Event}\n         */\n        this.trigger('resize');\n      }\n\n      // Return component\n      return this;\n    }\n\n    // Not setting a value, so getting it\n    // Make sure element exists\n    if (!this.el_) {\n      return 0;\n    }\n\n    // Get dimension value from style\n    var val = this.el_.style[widthOrHeight];\n    var pxIndex = val.indexOf('px');\n\n    if (pxIndex !== -1) {\n      // Return the pixel value with no 'px'\n      return parseInt(val.slice(0, pxIndex), 10);\n    }\n\n    // No px so using % or no style was set, so falling back to offsetWidth/height\n    // If component has display:none, offset will return 0\n    // TODO: handle display:none and no dimension style using px\n    return parseInt(this.el_['offset' + (0, _toTitleCase2['default'])(widthOrHeight)], 10);\n  };\n\n  /**\n   * Get the width or the height of the `Component` elements computed style. Uses\n   * `window.getComputedStyle`.\n   *\n   * @param {string} widthOrHeight\n   *        A string containing 'width' or 'height'. Whichever one you want to get.\n   *\n   * @return {number}\n   *         The dimension that gets asked for or 0 if nothing was set\n   *         for that dimension.\n   */\n\n\n  Component.prototype.currentDimension = function currentDimension(widthOrHeight) {\n    var computedWidthOrHeight = 0;\n\n    if (widthOrHeight !== 'width' && widthOrHeight !== 'height') {\n      throw new Error('currentDimension only accepts width or height value');\n    }\n\n    if (typeof _window2['default'].getComputedStyle === 'function') {\n      var computedStyle = _window2['default'].getComputedStyle(this.el_);\n\n      computedWidthOrHeight = computedStyle.getPropertyValue(widthOrHeight) || computedStyle[widthOrHeight];\n    }\n\n    // remove 'px' from variable and parse as integer\n    computedWidthOrHeight = parseFloat(computedWidthOrHeight);\n\n    // if the computed value is still 0, it's possible that the browser is lying\n    // and we want to check the offset values.\n    // This code also runs on IE8 and wherever getComputedStyle doesn't exist.\n    if (computedWidthOrHeight === 0) {\n      var rule = 'offset' + (0, _toTitleCase2['default'])(widthOrHeight);\n\n      computedWidthOrHeight = this.el_[rule];\n    }\n\n    return computedWidthOrHeight;\n  };\n\n  /**\n   * An object that contains width and height values of the `Component`s\n   * computed style. Uses `window.getComputedStyle`.\n   *\n   * @typedef {Object} Component~DimensionObject\n   *\n   * @property {number} width\n   *           The width of the `Component`s computed style.\n   *\n   * @property {number} height\n   *           The height of the `Component`s computed style.\n   */\n\n  /**\n   * Get an object that contains width and height values of the `Component`s\n   * computed style.\n   *\n   * @return {Component~DimensionObject}\n   *         The dimensions of the components element\n   */\n\n\n  Component.prototype.currentDimensions = function currentDimensions() {\n    return {\n      width: this.currentDimension('width'),\n      height: this.currentDimension('height')\n    };\n  };\n\n  /**\n   * Get the width of the `Component`s computed style. Uses `window.getComputedStyle`.\n   *\n   * @return {number} width\n   *           The width of the `Component`s computed style.\n   */\n\n\n  Component.prototype.currentWidth = function currentWidth() {\n    return this.currentDimension('width');\n  };\n\n  /**\n   * Get the height of the `Component`s computed style. Uses `window.getComputedStyle`.\n   *\n   * @return {number} height\n   *           The height of the `Component`s computed style.\n   */\n\n\n  Component.prototype.currentHeight = function currentHeight() {\n    return this.currentDimension('height');\n  };\n\n  /**\n   * Emit a 'tap' events when touch event support gets detected. This gets used to\n   * support toggling the controls through a tap on the video. They get enabled\n   * because every sub-component would have extra overhead otherwise.\n   *\n   * @private\n   * @fires Component#tap\n   * @listens Component#touchstart\n   * @listens Component#touchmove\n   * @listens Component#touchleave\n   * @listens Component#touchcancel\n   * @listens Component#touchend\n    */\n\n\n  Component.prototype.emitTapEvents = function emitTapEvents() {\n    // Track the start time so we can determine how long the touch lasted\n    var touchStart = 0;\n    var firstTouch = null;\n\n    // Maximum movement allowed during a touch event to still be considered a tap\n    // Other popular libs use anywhere from 2 (hammer.js) to 15,\n    // so 10 seems like a nice, round number.\n    var tapMovementThreshold = 10;\n\n    // The maximum length a touch can be while still being considered a tap\n    var touchTimeThreshold = 200;\n\n    var couldBeTap = void 0;\n\n    this.on('touchstart', function (event) {\n      // If more than one finger, don't consider treating this as a click\n      if (event.touches.length === 1) {\n        // Copy pageX/pageY from the object\n        firstTouch = {\n          pageX: event.touches[0].pageX,\n          pageY: event.touches[0].pageY\n        };\n        // Record start time so we can detect a tap vs. \"touch and hold\"\n        touchStart = new Date().getTime();\n        // Reset couldBeTap tracking\n        couldBeTap = true;\n      }\n    });\n\n    this.on('touchmove', function (event) {\n      // If more than one finger, don't consider treating this as a click\n      if (event.touches.length > 1) {\n        couldBeTap = false;\n      } else if (firstTouch) {\n        // Some devices will throw touchmoves for all but the slightest of taps.\n        // So, if we moved only a small distance, this could still be a tap\n        var xdiff = event.touches[0].pageX - firstTouch.pageX;\n        var ydiff = event.touches[0].pageY - firstTouch.pageY;\n        var touchDistance = Math.sqrt(xdiff * xdiff + ydiff * ydiff);\n\n        if (touchDistance > tapMovementThreshold) {\n          couldBeTap = false;\n        }\n      }\n    });\n\n    var noTap = function noTap() {\n      couldBeTap = false;\n    };\n\n    // TODO: Listen to the original target. http://youtu.be/DujfpXOKUp8?t=13m8s\n    this.on('touchleave', noTap);\n    this.on('touchcancel', noTap);\n\n    // When the touch ends, measure how long it took and trigger the appropriate\n    // event\n    this.on('touchend', function (event) {\n      firstTouch = null;\n      // Proceed only if the touchmove/leave/cancel event didn't happen\n      if (couldBeTap === true) {\n        // Measure how long the touch lasted\n        var touchTime = new Date().getTime() - touchStart;\n\n        // Make sure the touch was less than the threshold to be considered a tap\n        if (touchTime < touchTimeThreshold) {\n          // Don't let browser turn this into a click\n          event.preventDefault();\n          /**\n           * Triggered when a `Component` is tapped.\n           *\n           * @event Component#tap\n           * @type {EventTarget~Event}\n           */\n          this.trigger('tap');\n          // It may be good to copy the touchend event object and change the\n          // type to tap, if the other event properties aren't exact after\n          // Events.fixEvent runs (e.g. event.target)\n        }\n      }\n    });\n  };\n\n  /**\n   * This function reports user activity whenever touch events happen. This can get\n   * turned off by any sub-components that wants touch events to act another way.\n   *\n   * Report user touch activity when touch events occur. User activity gets used to\n   * determine when controls should show/hide. It is simple when it comes to mouse\n   * events, because any mouse event should show the controls. So we capture mouse\n   * events that bubble up to the player and report activity when that happens.\n   * With touch events it isn't as easy as `touchstart` and `touchend` toggle player\n   * controls. So touch events can't help us at the player level either.\n   *\n   * User activity gets checked asynchronously. So what could happen is a tap event\n   * on the video turns the controls off. Then the `touchend` event bubbles up to\n   * the player. Which, if it reported user activity, would turn the controls right\n   * back on. We also don't want to completely block touch events from bubbling up.\n   * Furthermore a `touchmove` event and anything other than a tap, should not turn\n   * controls back on.\n   *\n   * @listens Component#touchstart\n   * @listens Component#touchmove\n   * @listens Component#touchend\n   * @listens Component#touchcancel\n   */\n\n\n  Component.prototype.enableTouchActivity = function enableTouchActivity() {\n    // Don't continue if the root player doesn't support reporting user activity\n    if (!this.player() || !this.player().reportUserActivity) {\n      return;\n    }\n\n    // listener for reporting that the user is active\n    var report = Fn.bind(this.player(), this.player().reportUserActivity);\n\n    var touchHolding = void 0;\n\n    this.on('touchstart', function () {\n      report();\n      // For as long as the they are touching the device or have their mouse down,\n      // we consider them active even if they're not moving their finger or mouse.\n      // So we want to continue to update that they are active\n      this.clearInterval(touchHolding);\n      // report at the same interval as activityCheck\n      touchHolding = this.setInterval(report, 250);\n    });\n\n    var touchEnd = function touchEnd(event) {\n      report();\n      // stop the interval that maintains activity if the touch is holding\n      this.clearInterval(touchHolding);\n    };\n\n    this.on('touchmove', report);\n    this.on('touchend', touchEnd);\n    this.on('touchcancel', touchEnd);\n  };\n\n  /**\n   * A callback that has no parameters and is bound into `Component`s context.\n   *\n   * @callback Component~GenericCallback\n   * @this Component\n   */\n\n  /**\n   * Creates a function that runs after an `x` millisecond timeout. This function is a\n   * wrapper around `window.setTimeout`. There are a few reasons to use this one\n   * instead though:\n   * 1. It gets cleared via  {@link Component#clearTimeout} when\n   *    {@link Component#dispose} gets called.\n   * 2. The function callback will gets turned into a {@link Component~GenericCallback}\n   *\n   * > Note: You can use `window.clearTimeout` on the id returned by this function. This\n   *         will cause its dispose listener not to get cleaned up! Please use\n   *         {@link Component#clearTimeout} or {@link Component#dispose}.\n   *\n   * @param {Component~GenericCallback} fn\n   *        The function that will be run after `timeout`.\n   *\n   * @param {number} timeout\n   *        Timeout in milliseconds to delay before executing the specified function.\n   *\n   * @return {number}\n   *         Returns a timeout ID that gets used to identify the timeout. It can also\n   *         get used in {@link Component#clearTimeout} to clear the timeout that\n   *         was set.\n   *\n   * @listens Component#dispose\n   * @see [Similar to]{@link https://developer.mozilla.org/en-US/docs/Web/API/WindowTimers/setTimeout}\n   */\n\n\n  Component.prototype.setTimeout = function setTimeout(fn, timeout) {\n    fn = Fn.bind(this, fn);\n\n    var timeoutId = _window2['default'].setTimeout(fn, timeout);\n    var disposeFn = function disposeFn() {\n      this.clearTimeout(timeoutId);\n    };\n\n    disposeFn.guid = 'vjs-timeout-' + timeoutId;\n\n    this.on('dispose', disposeFn);\n\n    return timeoutId;\n  };\n\n  /**\n   * Clears a timeout that gets created via `window.setTimeout` or\n   * {@link Component#setTimeout}. If you set a timeout via {@link Component#setTimeout}\n   * use this function instead of `window.clearTimout`. If you don't your dispose\n   * listener will not get cleaned up until {@link Component#dispose}!\n   *\n   * @param {number} timeoutId\n   *        The id of the timeout to clear. The return value of\n   *        {@link Component#setTimeout} or `window.setTimeout`.\n   *\n   * @return {number}\n   *         Returns the timeout id that was cleared.\n   *\n   * @see [Similar to]{@link https://developer.mozilla.org/en-US/docs/Web/API/WindowTimers/clearTimeout}\n   */\n\n\n  Component.prototype.clearTimeout = function clearTimeout(timeoutId) {\n    _window2['default'].clearTimeout(timeoutId);\n\n    var disposeFn = function disposeFn() {};\n\n    disposeFn.guid = 'vjs-timeout-' + timeoutId;\n\n    this.off('dispose', disposeFn);\n\n    return timeoutId;\n  };\n\n  /**\n   * Creates a function that gets run every `x` milliseconds. This function is a wrapper\n   * around `window.setInterval`. There are a few reasons to use this one instead though.\n   * 1. It gets cleared via  {@link Component#clearInterval} when\n   *    {@link Component#dispose} gets called.\n   * 2. The function callback will be a {@link Component~GenericCallback}\n   *\n   * @param {Component~GenericCallback} fn\n   *        The function to run every `x` seconds.\n   *\n   * @param {number} interval\n   *        Execute the specified function every `x` milliseconds.\n   *\n   * @return {number}\n   *         Returns an id that can be used to identify the interval. It can also be be used in\n   *         {@link Component#clearInterval} to clear the interval.\n   *\n   * @listens Component#dispose\n   * @see [Similar to]{@link https://developer.mozilla.org/en-US/docs/Web/API/WindowTimers/setInterval}\n   */\n\n\n  Component.prototype.setInterval = function setInterval(fn, interval) {\n    fn = Fn.bind(this, fn);\n\n    var intervalId = _window2['default'].setInterval(fn, interval);\n\n    var disposeFn = function disposeFn() {\n      this.clearInterval(intervalId);\n    };\n\n    disposeFn.guid = 'vjs-interval-' + intervalId;\n\n    this.on('dispose', disposeFn);\n\n    return intervalId;\n  };\n\n  /**\n   * Clears an interval that gets created via `window.setInterval` or\n   * {@link Component#setInterval}. If you set an inteval via {@link Component#setInterval}\n   * use this function instead of `window.clearInterval`. If you don't your dispose\n   * listener will not get cleaned up until {@link Component#dispose}!\n   *\n   * @param {number} intervalId\n   *        The id of the interval to clear. The return value of\n   *        {@link Component#setInterval} or `window.setInterval`.\n   *\n   * @return {number}\n   *         Returns the interval id that was cleared.\n   *\n   * @see [Similar to]{@link https://developer.mozilla.org/en-US/docs/Web/API/WindowTimers/clearInterval}\n   */\n\n\n  Component.prototype.clearInterval = function clearInterval(intervalId) {\n    _window2['default'].clearInterval(intervalId);\n\n    var disposeFn = function disposeFn() {};\n\n    disposeFn.guid = 'vjs-interval-' + intervalId;\n\n    this.off('dispose', disposeFn);\n\n    return intervalId;\n  };\n\n  /**\n   * Register a `Component` with `videojs` given the name and the component.\n   *\n   * > NOTE: {@link Tech}s should not be registered as a `Component`. {@link Tech}s\n   *         should be registered using {@link Tech.registerTech} or\n   *         {@link videojs:videojs.registerTech}.\n   *\n   * > NOTE: This function can also be seen on videojs as\n   *         {@link videojs:videojs.registerComponent}.\n   *\n   * @param {string} name\n   *        The name of the `Component` to register.\n   *\n   * @param {Component} comp\n   *        The `Component` class to register.\n   *\n   * @return {Component}\n   *         The `Component` that was registered.\n   */\n\n\n  Component.registerComponent = function registerComponent(name, comp) {\n    if (!name) {\n      return;\n    }\n\n    name = (0, _toTitleCase2['default'])(name);\n\n    if (!Component.components_) {\n      Component.components_ = {};\n    }\n\n    if (name === 'Player' && Component.components_[name]) {\n      (function () {\n        var Player = Component.components_[name];\n\n        // If we have players that were disposed, then their name will still be\n        // in Players.players. So, we must loop through and verify that the value\n        // for each item is not null. This allows registration of the Player component\n        // after all players have been disposed or before any were created.\n        if (Player.players && Object.keys(Player.players).length > 0 && Object.keys(Player.players).map(function (playerName) {\n          return Player.players[playerName];\n        }).every(Boolean)) {\n          throw new Error('Can not register Player component after player has been created');\n        }\n      })();\n    }\n\n    Component.components_[name] = comp;\n\n    return comp;\n  };\n\n  /**\n   * Get a `Component` based on the name it was registered with.\n   *\n   * @param {string} name\n   *        The Name of the component to get.\n   *\n   * @return {Component}\n   *         The `Component` that got registered under the given name.\n   *\n   * @deprecated In `videojs` 6 this will not return `Component`s that were not\n   *             registered using {@link Component.registerComponent}. Currently we\n   *             check the global `videojs` object for a `Component` name and\n   *             return that if it exists.\n   */\n\n\n  Component.getComponent = function getComponent(name) {\n    if (!name) {\n      return;\n    }\n\n    name = (0, _toTitleCase2['default'])(name);\n\n    if (Component.components_ && Component.components_[name]) {\n      return Component.components_[name];\n    }\n\n    if (_window2['default'] && _window2['default'].videojs && _window2['default'].videojs[name]) {\n      _log2['default'].warn('The ' + name + ' component was added to the videojs object when it should be registered using videojs.registerComponent(name, component)');\n\n      return _window2['default'].videojs[name];\n    }\n  };\n\n  /**\n   * Sets up the constructor using the supplied init method or uses the init of the\n   * parent object.\n   *\n   * @param {Object} [props={}]\n   *        An object of properties.\n   *\n   * @return {Object}\n   *         the extended object.\n   *\n   * @deprecated since version 5\n   */\n\n\n  Component.extend = function extend(props) {\n    props = props || {};\n\n    _log2['default'].warn('Component.extend({}) has been deprecated, ' + ' use videojs.extend(Component, {}) instead');\n\n    // Set up the constructor using the supplied init method\n    // or using the init of the parent object\n    // Make sure to check the unobfuscated version for external libs\n    var init = props.init || props.init || this.prototype.init || this.prototype.init || function () {};\n    // In Resig's simple class inheritance (previously used) the constructor\n    //  is a function that calls `this.init.apply(arguments)`\n    // However that would prevent us from using `ParentObject.call(this);`\n    //  in a Child constructor because the `this` in `this.init`\n    //  would still refer to the Child and cause an infinite loop.\n    // We would instead have to do\n    //    `ParentObject.prototype.init.apply(this, arguments);`\n    //  Bleh. We're not creating a _super() function, so it's good to keep\n    //  the parent constructor reference simple.\n    var subObj = function subObj() {\n      init.apply(this, arguments);\n    };\n\n    // Inherit from this object's prototype\n    subObj.prototype = Object.create(this.prototype);\n    // Reset the constructor property for subObj otherwise\n    // instances of subObj would have the constructor of the parent Object\n    subObj.prototype.constructor = subObj;\n\n    // Make the class extendable\n    subObj.extend = Component.extend;\n\n    // Extend subObj's prototype with functions and other properties from props\n    for (var name in props) {\n      if (props.hasOwnProperty(name)) {\n        subObj.prototype[name] = props[name];\n      }\n    }\n\n    return subObj;\n  };\n\n  return Component;\n}();\n\nComponent.registerComponent('Component', Component);\nexports['default'] = Component;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/video.js/es5/component.js\n ** module id = 16\n ** module chunks = 0 1\n **/","'use strict';\n\nexports.__esModule = true;\nexports.throttle = exports.bind = undefined;\n\nvar _guid = require('./guid.js');\n\n/**\n * Bind (a.k.a proxy or Context). A simple method for changing the context of a function\n * It also stores a unique id on the function so it can be easily removed from events.\n *\n * @param {Mixed} context\n *        The object to bind as scope.\n *\n * @param {Function} fn\n *        The function to be bound to a scope.\n *\n * @param {number} [uid]\n *        An optional unique ID for the function to be set\n *\n * @return {Function}\n *         The new function that will be bound into the context given\n */\nvar bind = exports.bind = function bind(context, fn, uid) {\n  // Make sure the function has a unique ID\n  if (!fn.guid) {\n    fn.guid = (0, _guid.newGUID)();\n  }\n\n  // Create the new function that changes the context\n  var bound = function bound() {\n    return fn.apply(context, arguments);\n  };\n\n  // Allow for the ability to individualize this function\n  // Needed in the case where multiple objects might share the same prototype\n  // IF both items add an event listener with the same function, then you try to remove just one\n  // it will remove both because they both have the same guid.\n  // when using this, you need to use the bind method when you remove the listener as well.\n  // currently used in text tracks\n  bound.guid = uid ? uid + '_' + fn.guid : fn.guid;\n\n  return bound;\n};\n\n/**\n * Wraps the given function, `fn`, with a new function that only invokes `fn`\n * at most once per every `wait` milliseconds.\n *\n * @param  {Function} fn\n *         The function to be throttled.\n *\n * @param  {Number}   wait\n *         The number of milliseconds by which to throttle.\n *\n * @return {Function}\n */\n/**\n * @file fn.js\n * @module fn\n */\nvar throttle = exports.throttle = function throttle(fn, wait) {\n  var last = Date.now();\n\n  var throttled = function throttled() {\n    var now = Date.now();\n\n    if (now - last >= wait) {\n      fn.apply(undefined, arguments);\n      last = now;\n    }\n  };\n\n  return throttled;\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/video.js/es5/utils/fn.js\n ** module id = 17\n ** module chunks = 0 1\n **/","'use strict';\n\nexports.__esModule = true;\n/**\n * @file to-title-case.js\n * @module to-title-case\n */\n\n/**\n * Uppercase the first letter of a string.\n *\n * @param {string} string\n *        String to be uppercased\n *\n * @return {string}\n *         The string with an uppercased first letter\n */\nfunction toTitleCase(string) {\n  if (typeof string !== 'string') {\n    return string;\n  }\n\n  return string.charAt(0).toUpperCase() + string.slice(1);\n}\n\nexports['default'] = toTitleCase;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/video.js/es5/utils/to-title-case.js\n ** module id = 18\n ** module chunks = 0 1\n **/","'use strict';\n\nexports.__esModule = true;\nexports['default'] = mergeOptions;\n\nvar _obj = require('./obj');\n\n/**\n * Deep-merge one or more options objects, recursively merging **only** plain\n * object properties.\n *\n * @param   {Object[]} sources\n *          One or more objects to merge into a new object.\n *\n * @returns {Object}\n *          A new object that is the merged result of all sources.\n */\nfunction mergeOptions() {\n  var result = {};\n\n  for (var _len = arguments.length, sources = Array(_len), _key = 0; _key < _len; _key++) {\n    sources[_key] = arguments[_key];\n  }\n\n  sources.forEach(function (source) {\n    if (!source) {\n      return;\n    }\n\n    (0, _obj.each)(source, function (value, key) {\n      if (!(0, _obj.isPlain)(value)) {\n        result[key] = value;\n        return;\n      }\n\n      if (!(0, _obj.isPlain)(result[key])) {\n        result[key] = {};\n      }\n\n      result[key] = mergeOptions(result[key], value);\n    });\n  });\n\n  return result;\n} /**\n   * @file merge-options.js\n   * @module merge-options\n   */\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/video.js/es5/utils/merge-options.js\n ** module id = 19\n ** module chunks = 0 1\n **/","'use strict';\n\nexports.__esModule = true;\n\nvar _events = require('./utils/events.js');\n\nvar Events = _interopRequireWildcard(_events);\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj['default'] = obj; return newObj; } }\n\n/**\n * `EventTarget` is a class that can have the same API as the DOM `EventTarget`. It\n * adds shorthand functions that wrap around lengthy functions. For example:\n * the `on` function is a wrapper around `addEventListener`.\n *\n * @see [EventTarget Spec]{@link https://www.w3.org/TR/DOM-Level-2-Events/events.html#Events-EventTarget}\n * @class EventTarget\n */\nvar EventTarget = function EventTarget() {};\n\n/**\n * A Custom DOM event.\n *\n * @typedef {Object} EventTarget~Event\n * @see [Properties]{@link https://developer.mozilla.org/en-US/docs/Web/API/CustomEvent}\n */\n\n/**\n * All event listeners should follow the following format.\n *\n * @callback EventTarget~EventListener\n * @this {EventTarget}\n *\n * @param {EventTarget~Event} event\n *        the event that triggered this function\n *\n * @param {Object} [hash]\n *        hash of data sent during the event\n */\n\n/**\n * An object containing event names as keys and booleans as values.\n *\n * > NOTE: If an event name is set to a true value here {@link EventTarget#trigger}\n *         will have extra functionality. See that function for more information.\n *\n * @property EventTarget.prototype.allowedEvents_\n * @private\n */\n/**\n * @file src/js/event-target.js\n */\nEventTarget.prototype.allowedEvents_ = {};\n\n/**\n * Adds an `event listener` to an instance of an `EventTarget`. An `event listener` is a\n * function that will get called when an event with a certain name gets triggered.\n *\n * @param {string|string[]} type\n *        An event name or an array of event names.\n *\n * @param {EventTarget~EventListener} fn\n *        The function to call with `EventTarget`s\n */\nEventTarget.prototype.on = function (type, fn) {\n  // Remove the addEventListener alias before calling Events.on\n  // so we don't get into an infinite type loop\n  var ael = this.addEventListener;\n\n  this.addEventListener = function () {};\n  Events.on(this, type, fn);\n  this.addEventListener = ael;\n};\n\n/**\n * An alias of {@link EventTarget#on}. Allows `EventTarget` to mimic\n * the standard DOM API.\n *\n * @function\n * @see {@link EventTarget#on}\n */\nEventTarget.prototype.addEventListener = EventTarget.prototype.on;\n\n/**\n * Removes an `event listener` for a specific event from an instance of `EventTarget`.\n * This makes it so that the `event listener` will no longer get called when the\n * named event happens.\n *\n * @param {string|string[]} type\n *        An event name or an array of event names.\n *\n * @param {EventTarget~EventListener} fn\n *        The function to remove.\n */\nEventTarget.prototype.off = function (type, fn) {\n  Events.off(this, type, fn);\n};\n\n/**\n * An alias of {@link EventTarget#off}. Allows `EventTarget` to mimic\n * the standard DOM API.\n *\n * @function\n * @see {@link EventTarget#off}\n */\nEventTarget.prototype.removeEventListener = EventTarget.prototype.off;\n\n/**\n * This function will add an `event listener` that gets triggered only once. After the\n * first trigger it will get removed. This is like adding an `event listener`\n * with {@link EventTarget#on} that calls {@link EventTarget#off} on itself.\n *\n * @param {string|string[]} type\n *        An event name or an array of event names.\n *\n * @param {EventTarget~EventListener} fn\n *        The function to be called once for each event name.\n */\nEventTarget.prototype.one = function (type, fn) {\n  // Remove the addEventListener alialing Events.on\n  // so we don't get into an infinite type loop\n  var ael = this.addEventListener;\n\n  this.addEventListener = function () {};\n  Events.one(this, type, fn);\n  this.addEventListener = ael;\n};\n\n/**\n * This function causes an event to happen. This will then cause any `event listeners`\n * that are waiting for that event, to get called. If there are no `event listeners`\n * for an event then nothing will happen.\n *\n * If the name of the `Event` that is being triggered is in `EventTarget.allowedEvents_`.\n * Trigger will also call the `on` + `uppercaseEventName` function.\n *\n * Example:\n * 'click' is in `EventTarget.allowedEvents_`, so, trigger will attempt to call\n * `onClick` if it exists.\n *\n * @param {string|EventTarget~Event|Object} event\n *        The name of the event, an `Event`, or an object with a key of type set to\n *        an event name.\n */\nEventTarget.prototype.trigger = function (event) {\n  var type = event.type || event;\n\n  if (typeof event === 'string') {\n    event = { type: type };\n  }\n  event = Events.fixEvent(event);\n\n  if (this.allowedEvents_[type] && this['on' + type]) {\n    this['on' + type](event);\n  }\n\n  Events.trigger(this, event);\n};\n\n/**\n * An alias of {@link EventTarget#trigger}. Allows `EventTarget` to mimic\n * the standard DOM API.\n *\n * @function\n * @see {@link EventTarget#trigger}\n */\nEventTarget.prototype.dispatchEvent = EventTarget.prototype.trigger;\n\nexports['default'] = EventTarget;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/video.js/es5/event-target.js\n ** module id = 20\n ** module chunks = 0 1\n **/","'use strict';\n\nexports.__esModule = true;\n\nvar _component = require('./component.js');\n\nvar _component2 = _interopRequireDefault(_component);\n\nvar _document = require('global/document');\n\nvar _document2 = _interopRequireDefault(_document);\n\nvar _window = require('global/window');\n\nvar _window2 = _interopRequireDefault(_window);\n\nvar _events = require('./utils/events.js');\n\nvar Events = _interopRequireWildcard(_events);\n\nvar _dom = require('./utils/dom.js');\n\nvar Dom = _interopRequireWildcard(_dom);\n\nvar _fn = require('./utils/fn.js');\n\nvar Fn = _interopRequireWildcard(_fn);\n\nvar _guid = require('./utils/guid.js');\n\nvar Guid = _interopRequireWildcard(_guid);\n\nvar _browser = require('./utils/browser.js');\n\nvar browser = _interopRequireWildcard(_browser);\n\nvar _log = require('./utils/log.js');\n\nvar _log2 = _interopRequireDefault(_log);\n\nvar _toTitleCase = require('./utils/to-title-case.js');\n\nvar _toTitleCase2 = _interopRequireDefault(_toTitleCase);\n\nvar _timeRanges = require('./utils/time-ranges.js');\n\nvar _buffer = require('./utils/buffer.js');\n\nvar _stylesheet = require('./utils/stylesheet.js');\n\nvar stylesheet = _interopRequireWildcard(_stylesheet);\n\nvar _fullscreenApi = require('./fullscreen-api.js');\n\nvar _fullscreenApi2 = _interopRequireDefault(_fullscreenApi);\n\nvar _mediaError = require('./media-error.js');\n\nvar _mediaError2 = _interopRequireDefault(_mediaError);\n\nvar _tuple = require('safe-json-parse/tuple');\n\nvar _tuple2 = _interopRequireDefault(_tuple);\n\nvar _obj = require('./utils/obj');\n\nvar _mergeOptions = require('./utils/merge-options.js');\n\nvar _mergeOptions2 = _interopRequireDefault(_mergeOptions);\n\nvar _textTrackListConverter = require('./tracks/text-track-list-converter.js');\n\nvar _textTrackListConverter2 = _interopRequireDefault(_textTrackListConverter);\n\nvar _modalDialog = require('./modal-dialog');\n\nvar _modalDialog2 = _interopRequireDefault(_modalDialog);\n\nvar _tech = require('./tech/tech.js');\n\nvar _tech2 = _interopRequireDefault(_tech);\n\nvar _audioTrackList = require('./tracks/audio-track-list.js');\n\nvar _audioTrackList2 = _interopRequireDefault(_audioTrackList);\n\nvar _videoTrackList = require('./tracks/video-track-list.js');\n\nvar _videoTrackList2 = _interopRequireDefault(_videoTrackList);\n\nrequire('./tech/loader.js');\n\nrequire('./tech/flash.js');\n\nrequire('./poster-image.js');\n\nrequire('./tracks/text-track-display.js');\n\nrequire('./loading-spinner.js');\n\nrequire('./big-play-button.js');\n\nrequire('./close-button.js');\n\nrequire('./control-bar/control-bar.js');\n\nrequire('./error-display.js');\n\nrequire('./tracks/text-track-settings.js');\n\nrequire('./tech/html5.js');\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj['default'] = obj; return newObj; } }\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /**\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * @file player.js\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                */\n// Subclasses Component\n\n\n// The following imports are used only to ensure that the corresponding modules\n// are always included in the video.js package. Importing the modules will\n// execute them and they will register themselves with video.js.\n\n\n// Import Html5 tech, at least for disposing the original video tag.\n\n\n// The following tech events are simply re-triggered\n// on the player when they happen\nvar TECH_EVENTS_RETRIGGER = [\n/**\n * Fired while the user agent is downloading media data.\n *\n * @event Player#progress\n * @type {EventTarget~Event}\n */\n/**\n * Retrigger the `progress` event that was triggered by the {@link Tech}.\n *\n * @private\n * @method Player#handleTechProgress_\n * @fires Player#progress\n * @listens Tech#progress\n */\n'progress',\n\n/**\n * Fires when the loading of an audio/video is aborted.\n *\n * @event Player#abort\n * @type {EventTarget~Event}\n */\n/**\n * Retrigger the `abort` event that was triggered by the {@link Tech}.\n *\n * @private\n * @method Player#handleTechAbort_\n * @fires Player#abort\n * @listens Tech#abort\n */\n'abort',\n\n/**\n * Fires when the browser is intentionally not getting media data.\n *\n * @event Player#suspend\n * @type {EventTarget~Event}\n */\n/**\n * Retrigger the `suspend` event that was triggered by the {@link Tech}.\n *\n * @private\n * @method Player#handleTechSuspend_\n * @fires Player#suspend\n * @listens Tech#suspend\n */\n'suspend',\n\n/**\n * Fires when the current playlist is empty.\n *\n * @event Player#emptied\n * @type {EventTarget~Event}\n */\n/**\n * Retrigger the `emptied` event that was triggered by the {@link Tech}.\n *\n * @private\n * @method Player#handleTechEmptied_\n * @fires Player#emptied\n * @listens Tech#emptied\n */\n'emptied',\n/**\n * Fires when the browser is trying to get media data, but data is not available.\n *\n * @event Player#stalled\n * @type {EventTarget~Event}\n */\n/**\n * Retrigger the `stalled` event that was triggered by the {@link Tech}.\n *\n * @private\n * @method Player#handleTechStalled_\n * @fires Player#stalled\n * @listens Tech#stalled\n */\n'stalled',\n\n/**\n * Fires when the browser has loaded meta data for the audio/video.\n *\n * @event Player#loadedmetadata\n * @type {EventTarget~Event}\n */\n/**\n * Retrigger the `stalled` event that was triggered by the {@link Tech}.\n *\n * @private\n * @method Player#handleTechLoadedmetadata_\n * @fires Player#loadedmetadata\n * @listens Tech#loadedmetadata\n */\n'loadedmetadata',\n\n/**\n * Fires when the browser has loaded the current frame of the audio/video.\n *\n * @event player#loadeddata\n * @type {event}\n */\n/**\n * Retrigger the `loadeddata` event that was triggered by the {@link Tech}.\n *\n * @private\n * @method Player#handleTechLoaddeddata_\n * @fires Player#loadeddata\n * @listens Tech#loadeddata\n */\n'loadeddata',\n\n/**\n * Fires when the current playback position has changed.\n *\n * @event player#timeupdate\n * @type {event}\n */\n/**\n * Retrigger the `timeupdate` event that was triggered by the {@link Tech}.\n *\n * @private\n * @method Player#handleTechTimeUpdate_\n * @fires Player#timeupdate\n * @listens Tech#timeupdate\n */\n'timeupdate',\n\n/**\n * Fires when the playing speed of the audio/video is changed\n *\n * @event player#ratechange\n * @type {event}\n */\n/**\n * Retrigger the `ratechange` event that was triggered by the {@link Tech}.\n *\n * @private\n * @method Player#handleTechRatechange_\n * @fires Player#ratechange\n * @listens Tech#ratechange\n */\n'ratechange',\n\n/**\n * Fires when the volume has been changed\n *\n * @event player#volumechange\n * @type {event}\n */\n/**\n * Retrigger the `volumechange` event that was triggered by the {@link Tech}.\n *\n * @private\n * @method Player#handleTechVolumechange_\n * @fires Player#volumechange\n * @listens Tech#volumechange\n */\n'volumechange',\n\n/**\n * Fires when the text track has been changed\n *\n * @event player#texttrackchange\n * @type {event}\n */\n/**\n * Retrigger the `texttrackchange` event that was triggered by the {@link Tech}.\n *\n * @private\n * @method Player#handleTechTexttrackchange_\n * @fires Player#texttrackchange\n * @listens Tech#texttrackchange\n */\n'texttrackchange'];\n\n/**\n * An instance of the `Player` class is created when any of the Video.js setup methods\n * are used to initialize a video.\n *\n * After an instance has been created it can be accessed globally in two ways:\n * 1. By calling `videojs('example_video_1');`\n * 2. By using it directly via  `videojs.players.example_video_1;`\n *\n * @extends Component\n */\n\nvar Player = function (_Component) {\n  _inherits(Player, _Component);\n\n  /**\n   * Create an instance of this class.\n   *\n   * @param {Element} tag\n   *        The original video DOM element used for configuring options.\n   *\n   * @param {Object} [options]\n   *        Object of option names and values.\n   *\n   * @param {Component~ReadyCallback} [ready]\n   *        Ready callback function.\n   */\n  function Player(tag, options, ready) {\n    _classCallCheck(this, Player);\n\n    // Make sure tag ID exists\n    tag.id = tag.id || 'vjs_video_' + Guid.newGUID();\n\n    // Set Options\n    // The options argument overrides options set in the video tag\n    // which overrides globally set options.\n    // This latter part coincides with the load order\n    // (tag must exist before Player)\n    options = (0, _obj.assign)(Player.getTagSettings(tag), options);\n\n    // Delay the initialization of children because we need to set up\n    // player properties first, and can't use `this` before `super()`\n    options.initChildren = false;\n\n    // Same with creating the element\n    options.createEl = false;\n\n    // we don't want the player to report touch activity on itself\n    // see enableTouchActivity in Component\n    options.reportTouchActivity = false;\n\n    // If language is not set, get the closest lang attribute\n    if (!options.language) {\n      if (typeof tag.closest === 'function') {\n        var closest = tag.closest('[lang]');\n\n        if (closest) {\n          options.language = closest.getAttribute('lang');\n        }\n      } else {\n        var element = tag;\n\n        while (element && element.nodeType === 1) {\n          if (Dom.getElAttributes(element).hasOwnProperty('lang')) {\n            options.language = element.getAttribute('lang');\n            break;\n          }\n          element = element.parentNode;\n        }\n      }\n    }\n\n    // Run base component initializing with new options\n\n    // if the global option object was accidentally blown away by\n    // someone, bail early with an informative error\n    var _this = _possibleConstructorReturn(this, _Component.call(this, null, options, ready));\n\n    if (!_this.options_ || !_this.options_.techOrder || !_this.options_.techOrder.length) {\n      throw new Error('No techOrder specified. Did you overwrite ' + 'videojs.options instead of just changing the ' + 'properties you want to override?');\n    }\n\n    // Store the original tag used to set options\n    _this.tag = tag;\n\n    // Store the tag attributes used to restore html5 element\n    _this.tagAttributes = tag && Dom.getElAttributes(tag);\n\n    // Update current language\n    _this.language(_this.options_.language);\n\n    // Update Supported Languages\n    if (options.languages) {\n      (function () {\n        // Normalise player option languages to lowercase\n        var languagesToLower = {};\n\n        Object.getOwnPropertyNames(options.languages).forEach(function (name) {\n          languagesToLower[name.toLowerCase()] = options.languages[name];\n        });\n        _this.languages_ = languagesToLower;\n      })();\n    } else {\n      _this.languages_ = Player.prototype.options_.languages;\n    }\n\n    // Cache for video property values.\n    _this.cache_ = {};\n\n    // Set poster\n    _this.poster_ = options.poster || '';\n\n    // Set controls\n    _this.controls_ = !!options.controls;\n\n    // Original tag settings stored in options\n    // now remove immediately so native controls don't flash.\n    // May be turned back on by HTML5 tech if nativeControlsForTouch is true\n    tag.controls = false;\n\n    /*\n     * Store the internal state of scrubbing\n     *\n     * @private\n     * @return {Boolean} True if the user is scrubbing\n     */\n    _this.scrubbing_ = false;\n\n    _this.el_ = _this.createEl();\n\n    // We also want to pass the original player options to each component and plugin\n    // as well so they don't need to reach back into the player for options later.\n    // We also need to do another copy of this.options_ so we don't end up with\n    // an infinite loop.\n    var playerOptionsCopy = (0, _mergeOptions2['default'])(_this.options_);\n\n    // Load plugins\n    if (options.plugins) {\n      (function () {\n        var plugins = options.plugins;\n\n        Object.getOwnPropertyNames(plugins).forEach(function (name) {\n          if (typeof this[name] === 'function') {\n            this[name](plugins[name]);\n          } else {\n            _log2['default'].error('Unable to find plugin:', name);\n          }\n        }, _this);\n      })();\n    }\n\n    _this.options_.playerOptions = playerOptionsCopy;\n\n    _this.initChildren();\n\n    // Set isAudio based on whether or not an audio tag was used\n    _this.isAudio(tag.nodeName.toLowerCase() === 'audio');\n\n    // Update controls className. Can't do this when the controls are initially\n    // set because the element doesn't exist yet.\n    if (_this.controls()) {\n      _this.addClass('vjs-controls-enabled');\n    } else {\n      _this.addClass('vjs-controls-disabled');\n    }\n\n    // Set ARIA label and region role depending on player type\n    _this.el_.setAttribute('role', 'region');\n    if (_this.isAudio()) {\n      _this.el_.setAttribute('aria-label', 'audio player');\n    } else {\n      _this.el_.setAttribute('aria-label', 'video player');\n    }\n\n    if (_this.isAudio()) {\n      _this.addClass('vjs-audio');\n    }\n\n    if (_this.flexNotSupported_()) {\n      _this.addClass('vjs-no-flex');\n    }\n\n    // TODO: Make this smarter. Toggle user state between touching/mousing\n    // using events, since devices can have both touch and mouse events.\n    // if (browser.TOUCH_ENABLED) {\n    //   this.addClass('vjs-touch-enabled');\n    // }\n\n    // iOS Safari has broken hover handling\n    if (!browser.IS_IOS) {\n      _this.addClass('vjs-workinghover');\n    }\n\n    // Make player easily findable by ID\n    Player.players[_this.id_] = _this;\n\n    // When the player is first initialized, trigger activity so components\n    // like the control bar show themselves if needed\n    _this.userActive(true);\n    _this.reportUserActivity();\n    _this.listenForUserActivity_();\n\n    _this.on('fullscreenchange', _this.handleFullscreenChange_);\n    _this.on('stageclick', _this.handleStageClick_);\n    return _this;\n  }\n\n  /**\n   * Destroys the video player and does any necessary cleanup.\n   *\n   * This is especially helpful if you are dynamically adding and removing videos\n   * to/from the DOM.\n   *\n   * @fires Player#dispose\n   */\n\n\n  Player.prototype.dispose = function dispose() {\n    /**\n     * Called when the player is being disposed of.\n     *\n     * @event Player#dispose\n     * @type {EventTarget~Event}\n     */\n    this.trigger('dispose');\n    // prevent dispose from being called twice\n    this.off('dispose');\n\n    if (this.styleEl_ && this.styleEl_.parentNode) {\n      this.styleEl_.parentNode.removeChild(this.styleEl_);\n    }\n\n    // Kill reference to this player\n    Player.players[this.id_] = null;\n\n    if (this.tag && this.tag.player) {\n      this.tag.player = null;\n    }\n\n    if (this.el_ && this.el_.player) {\n      this.el_.player = null;\n    }\n\n    if (this.tech_) {\n      this.tech_.dispose();\n    }\n\n    _Component.prototype.dispose.call(this);\n  };\n\n  /**\n   * Create the `Player`'s DOM element.\n   *\n   * @return {Element}\n   *         The DOM element that gets created.\n   */\n\n\n  Player.prototype.createEl = function createEl() {\n    var tag = this.tag;\n    var el = void 0;\n    var playerElIngest = this.playerElIngest_ = tag.parentNode && tag.parentNode.hasAttribute && tag.parentNode.hasAttribute('data-vjs-player');\n\n    if (playerElIngest) {\n      el = this.el_ = tag.parentNode;\n    } else {\n      el = this.el_ = _Component.prototype.createEl.call(this, 'div');\n    }\n\n    // Remove width/height attrs from tag so CSS can make it 100% width/height\n    tag.removeAttribute('width');\n    tag.removeAttribute('height');\n\n    // Copy over all the attributes from the tag, including ID and class\n    // ID will now reference player box, not the video tag\n    var attrs = Dom.getElAttributes(tag);\n\n    Object.getOwnPropertyNames(attrs).forEach(function (attr) {\n      // workaround so we don't totally break IE7\n      // http://stackoverflow.com/questions/3653444/css-styles-not-applied-on-dynamic-elements-in-internet-explorer-7\n      if (attr === 'class') {\n        el.className += ' ' + attrs[attr];\n      } else {\n        el.setAttribute(attr, attrs[attr]);\n      }\n    });\n\n    // Update tag id/class for use as HTML5 playback tech\n    // Might think we should do this after embedding in container so .vjs-tech class\n    // doesn't flash 100% width/height, but class only applies with .video-js parent\n    tag.playerId = tag.id;\n    tag.id += '_html5_api';\n    tag.className = 'vjs-tech';\n\n    // Make player findable on elements\n    tag.player = el.player = this;\n    // Default state of video is paused\n    this.addClass('vjs-paused');\n\n    // Add a style element in the player that we'll use to set the width/height\n    // of the player in a way that's still overrideable by CSS, just like the\n    // video element\n    if (_window2['default'].VIDEOJS_NO_DYNAMIC_STYLE !== true) {\n      this.styleEl_ = stylesheet.createStyleElement('vjs-styles-dimensions');\n      var defaultsStyleEl = Dom.$('.vjs-styles-defaults');\n      var head = Dom.$('head');\n\n      head.insertBefore(this.styleEl_, defaultsStyleEl ? defaultsStyleEl.nextSibling : head.firstChild);\n    }\n\n    // Pass in the width/height/aspectRatio options which will update the style el\n    this.width(this.options_.width);\n    this.height(this.options_.height);\n    this.fluid(this.options_.fluid);\n    this.aspectRatio(this.options_.aspectRatio);\n\n    // Hide any links within the video/audio tag, because IE doesn't hide them completely.\n    var links = tag.getElementsByTagName('a');\n\n    for (var i = 0; i < links.length; i++) {\n      var linkEl = links.item(i);\n\n      Dom.addElClass(linkEl, 'vjs-hidden');\n      linkEl.setAttribute('hidden', 'hidden');\n    }\n\n    // insertElFirst seems to cause the networkState to flicker from 3 to 2, so\n    // keep track of the original for later so we can know if the source originally failed\n    tag.initNetworkState_ = tag.networkState;\n\n    // Wrap video tag in div (el/box) container\n    if (tag.parentNode && !playerElIngest) {\n      tag.parentNode.insertBefore(el, tag);\n    }\n\n    // insert the tag as the first child of the player element\n    // then manually add it to the children array so that this.addChild\n    // will work properly for other components\n    //\n    // Breaks iPhone, fixed in HTML5 setup.\n    Dom.insertElFirst(tag, el);\n    this.children_.unshift(tag);\n\n    this.el_ = el;\n\n    return el;\n  };\n\n  /**\n   * A getter/setter for the `Player`'s width.\n   *\n   * @param {number} [value]\n   *        The value to set the `Player's width to.\n   *\n   * @return {number}\n   *         The current width of the `Player`.\n   */\n\n\n  Player.prototype.width = function width(value) {\n    return this.dimension('width', value);\n  };\n\n  /**\n   * A getter/setter for the `Player`'s height.\n   *\n   * @param {number} [value]\n   *        The value to set the `Player's heigth to.\n   *\n   * @return {number}\n   *         The current heigth of the `Player`.\n   */\n\n\n  Player.prototype.height = function height(value) {\n    return this.dimension('height', value);\n  };\n\n  /**\n   * A getter/setter for the `Player`'s width & height.\n   *\n   * @param {string} dimension\n   *        This string can be:\n   *        - 'width'\n   *        - 'height'\n   *\n   * @param {number} [value]\n   *        Value for dimension specified in the first argument.\n   *\n   * @return {Player|number}\n   *         - Returns itself when setting; method can be chained.\n   *         - The dimension arguments value when getting (width/height).\n   */\n\n\n  Player.prototype.dimension = function dimension(_dimension, value) {\n    var privDimension = _dimension + '_';\n\n    if (value === undefined) {\n      return this[privDimension] || 0;\n    }\n\n    if (value === '') {\n      // If an empty string is given, reset the dimension to be automatic\n      this[privDimension] = undefined;\n    } else {\n      var parsedVal = parseFloat(value);\n\n      if (isNaN(parsedVal)) {\n        _log2['default'].error('Improper value \"' + value + '\" supplied for for ' + _dimension);\n        return this;\n      }\n\n      this[privDimension] = parsedVal;\n    }\n\n    this.updateStyleEl_();\n    return this;\n  };\n\n  /**\n   * A getter/setter/toggler for the vjs-fluid `className` on the `Player`.\n   *\n   * @param {boolean} [bool]\n   *        - A value of true adds the class.\n   *        - A value of false removes the class.\n   *        - No value will toggle the fluid class.\n   *\n   * @return {boolean|undefined}\n   *         - The value of fluid when getting.\n   *         - `undefined` when setting.\n   */\n\n\n  Player.prototype.fluid = function fluid(bool) {\n    if (bool === undefined) {\n      return !!this.fluid_;\n    }\n\n    this.fluid_ = !!bool;\n\n    if (bool) {\n      this.addClass('vjs-fluid');\n    } else {\n      this.removeClass('vjs-fluid');\n    }\n\n    this.updateStyleEl_();\n  };\n\n  /**\n   * Get/Set the aspect ratio\n   *\n   * @param {string} [ratio]\n   *        Aspect ratio for player\n   *\n   * @return {string|undefined}\n   *         returns the current aspect ratio when getting\n   */\n\n  /**\n   * A getter/setter for the `Player`'s aspect ratio.\n   *\n   * @param {string} [ratio]\n   *        The value to set the `Player's aspect ratio to.\n   *\n   * @return {string|undefined}\n   *         - The current aspect ratio of the `Player` when getting.\n   *         - undefined when setting\n   */\n\n\n  Player.prototype.aspectRatio = function aspectRatio(ratio) {\n    if (ratio === undefined) {\n      return this.aspectRatio_;\n    }\n\n    // Check for width:height format\n    if (!/^\\d+\\:\\d+$/.test(ratio)) {\n      throw new Error('Improper value supplied for aspect ratio. The format should be width:height, for example 16:9.');\n    }\n    this.aspectRatio_ = ratio;\n\n    // We're assuming if you set an aspect ratio you want fluid mode,\n    // because in fixed mode you could calculate width and height yourself.\n    this.fluid(true);\n\n    this.updateStyleEl_();\n  };\n\n  /**\n   * Update styles of the `Player` element (height, width and aspect ratio).\n   *\n   * @private\n   * @listens Tech#loadedmetadata\n   */\n\n\n  Player.prototype.updateStyleEl_ = function updateStyleEl_() {\n    if (_window2['default'].VIDEOJS_NO_DYNAMIC_STYLE === true) {\n      var _width = typeof this.width_ === 'number' ? this.width_ : this.options_.width;\n      var _height = typeof this.height_ === 'number' ? this.height_ : this.options_.height;\n      var techEl = this.tech_ && this.tech_.el();\n\n      if (techEl) {\n        if (_width >= 0) {\n          techEl.width = _width;\n        }\n        if (_height >= 0) {\n          techEl.height = _height;\n        }\n      }\n\n      return;\n    }\n\n    var width = void 0;\n    var height = void 0;\n    var aspectRatio = void 0;\n    var idClass = void 0;\n\n    // The aspect ratio is either used directly or to calculate width and height.\n    if (this.aspectRatio_ !== undefined && this.aspectRatio_ !== 'auto') {\n      // Use any aspectRatio that's been specifically set\n      aspectRatio = this.aspectRatio_;\n    } else if (this.videoWidth() > 0) {\n      // Otherwise try to get the aspect ratio from the video metadata\n      aspectRatio = this.videoWidth() + ':' + this.videoHeight();\n    } else {\n      // Or use a default. The video element's is 2:1, but 16:9 is more common.\n      aspectRatio = '16:9';\n    }\n\n    // Get the ratio as a decimal we can use to calculate dimensions\n    var ratioParts = aspectRatio.split(':');\n    var ratioMultiplier = ratioParts[1] / ratioParts[0];\n\n    if (this.width_ !== undefined) {\n      // Use any width that's been specifically set\n      width = this.width_;\n    } else if (this.height_ !== undefined) {\n      // Or calulate the width from the aspect ratio if a height has been set\n      width = this.height_ / ratioMultiplier;\n    } else {\n      // Or use the video's metadata, or use the video el's default of 300\n      width = this.videoWidth() || 300;\n    }\n\n    if (this.height_ !== undefined) {\n      // Use any height that's been specifically set\n      height = this.height_;\n    } else {\n      // Otherwise calculate the height from the ratio and the width\n      height = width * ratioMultiplier;\n    }\n\n    // Ensure the CSS class is valid by starting with an alpha character\n    if (/^[^a-zA-Z]/.test(this.id())) {\n      idClass = 'dimensions-' + this.id();\n    } else {\n      idClass = this.id() + '-dimensions';\n    }\n\n    // Ensure the right class is still on the player for the style element\n    this.addClass(idClass);\n\n    stylesheet.setTextContent(this.styleEl_, '\\n      .' + idClass + ' {\\n        width: ' + width + 'px;\\n        height: ' + height + 'px;\\n      }\\n\\n      .' + idClass + '.vjs-fluid {\\n        padding-top: ' + ratioMultiplier * 100 + '%;\\n      }\\n    ');\n  };\n\n  /**\n   * Load/Create an instance of playback {@link Tech} including element\n   * and API methods. Then append the `Tech` element in `Player` as a child.\n   *\n   * @param {string} techName\n   *        name of the playback technology\n   *\n   * @param {string} source\n   *        video source\n   *\n   * @private\n   */\n\n\n  Player.prototype.loadTech_ = function loadTech_(techName, source) {\n    var _this2 = this;\n\n    // Pause and remove current playback technology\n    if (this.tech_) {\n      this.unloadTech_();\n    }\n\n    // get rid of the HTML5 video tag as soon as we are using another tech\n    if (techName !== 'Html5' && this.tag) {\n      _tech2['default'].getTech('Html5').disposeMediaElement(this.tag);\n      this.tag.player = null;\n      this.tag = null;\n    }\n\n    this.techName_ = techName;\n\n    // Turn off API access because we're loading a new tech that might load asynchronously\n    this.isReady_ = false;\n\n    // Grab tech-specific options from player options and add source and parent element to use.\n    var techOptions = (0, _obj.assign)({\n      source: source,\n      'nativeControlsForTouch': this.options_.nativeControlsForTouch,\n      'playerId': this.id(),\n      'techId': this.id() + '_' + techName + '_api',\n      'videoTracks': this.videoTracks_,\n      'textTracks': this.textTracks_,\n      'audioTracks': this.audioTracks_,\n      'autoplay': this.options_.autoplay,\n      'preload': this.options_.preload,\n      'loop': this.options_.loop,\n      'muted': this.options_.muted,\n      'poster': this.poster(),\n      'language': this.language(),\n      'playerElIngest': this.playerElIngest_ || false,\n      'vtt.js': this.options_['vtt.js']\n    }, this.options_[techName.toLowerCase()]);\n\n    if (this.tag) {\n      techOptions.tag = this.tag;\n    }\n\n    if (source) {\n      this.currentType_ = source.type;\n\n      if (source.src === this.cache_.src && this.cache_.currentTime > 0) {\n        techOptions.startTime = this.cache_.currentTime;\n      }\n\n      this.cache_.sources = null;\n      this.cache_.source = source;\n      this.cache_.src = source.src;\n    }\n\n    // Initialize tech instance\n    var TechComponent = _tech2['default'].getTech(techName);\n\n    // Support old behavior of techs being registered as components.\n    // Remove once that deprecated behavior is removed.\n    if (!TechComponent) {\n      TechComponent = _component2['default'].getComponent(techName);\n    }\n    this.tech_ = new TechComponent(techOptions);\n\n    // player.triggerReady is always async, so don't need this to be async\n    this.tech_.ready(Fn.bind(this, this.handleTechReady_), true);\n\n    _textTrackListConverter2['default'].jsonToTextTracks(this.textTracksJson_ || [], this.tech_);\n\n    // Listen to all HTML5-defined events and trigger them on the player\n    TECH_EVENTS_RETRIGGER.forEach(function (event) {\n      _this2.on(_this2.tech_, event, _this2['handleTech' + (0, _toTitleCase2['default'])(event) + '_']);\n    });\n    this.on(this.tech_, 'loadstart', this.handleTechLoadStart_);\n    this.on(this.tech_, 'waiting', this.handleTechWaiting_);\n    this.on(this.tech_, 'canplay', this.handleTechCanPlay_);\n    this.on(this.tech_, 'canplaythrough', this.handleTechCanPlayThrough_);\n    this.on(this.tech_, 'playing', this.handleTechPlaying_);\n    this.on(this.tech_, 'ended', this.handleTechEnded_);\n    this.on(this.tech_, 'seeking', this.handleTechSeeking_);\n    this.on(this.tech_, 'seeked', this.handleTechSeeked_);\n    this.on(this.tech_, 'play', this.handleTechPlay_);\n    this.on(this.tech_, 'firstplay', this.handleTechFirstPlay_);\n    this.on(this.tech_, 'pause', this.handleTechPause_);\n    this.on(this.tech_, 'durationchange', this.handleTechDurationChange_);\n    this.on(this.tech_, 'fullscreenchange', this.handleTechFullscreenChange_);\n    this.on(this.tech_, 'error', this.handleTechError_);\n    this.on(this.tech_, 'loadedmetadata', this.updateStyleEl_);\n    this.on(this.tech_, 'posterchange', this.handleTechPosterChange_);\n    this.on(this.tech_, 'textdata', this.handleTechTextData_);\n\n    this.usingNativeControls(this.techGet_('controls'));\n\n    if (this.controls() && !this.usingNativeControls()) {\n      this.addTechControlsListeners_();\n    }\n\n    // Add the tech element in the DOM if it was not already there\n    // Make sure to not insert the original video element if using Html5\n    if (this.tech_.el().parentNode !== this.el() && (techName !== 'Html5' || !this.tag)) {\n      Dom.insertElFirst(this.tech_.el(), this.el());\n    }\n\n    // Get rid of the original video tag reference after the first tech is loaded\n    if (this.tag) {\n      this.tag.player = null;\n      this.tag = null;\n    }\n  };\n\n  /**\n   * Unload and dispose of the current playback {@link Tech}.\n   *\n   * @private\n   */\n\n\n  Player.prototype.unloadTech_ = function unloadTech_() {\n    // Save the current text tracks so that we can reuse the same text tracks with the next tech\n    this.videoTracks_ = this.videoTracks();\n    this.textTracks_ = this.textTracks();\n    this.audioTracks_ = this.audioTracks();\n    this.textTracksJson_ = _textTrackListConverter2['default'].textTracksToJson(this.tech_);\n\n    this.isReady_ = false;\n\n    this.tech_.dispose();\n\n    this.tech_ = false;\n  };\n\n  /**\n   * Return a reference to the current {@link Tech}, but only if given an object with the\n   * `IWillNotUseThisInPlugins` property having a true value. This is try and prevent misuse\n   * of techs by plugins.\n   *\n   * @param {Object} safety\n   *        An object that must contain `{IWillNotUseThisInPlugins: true}`\n   *\n   * @param {boolean} safety.IWillNotUseThisInPlugins\n   *        Must be set to true or else this function will throw an error.\n   *\n   * @return {Tech}\n   *         The Tech\n   */\n\n\n  Player.prototype.tech = function tech(safety) {\n    if (safety && safety.IWillNotUseThisInPlugins) {\n      return this.tech_;\n    }\n    var errorText = '\\n      Please make sure that you are not using this inside of a plugin.\\n      To disable this alert and error, please pass in an object with\\n      `IWillNotUseThisInPlugins` to the `tech` method. See\\n      https://github.com/videojs/video.js/issues/2617 for more info.\\n    ';\n\n    _window2['default'].alert(errorText);\n    throw new Error(errorText);\n  };\n\n  /**\n   * Set up click and touch listeners for the playback element\n   *\n   * - On desktops: a click on the video itself will toggle playback\n   * - On mobile devices: a click on the video toggles controls\n   *   which is done by toggling the user state between active and\n   *   inactive\n   * - A tap can signal that a user has become active or has become inactive\n   *   e.g. a quick tap on an iPhone movie should reveal the controls. Another\n   *   quick tap should hide them again (signaling the user is in an inactive\n   *   viewing state)\n   * - In addition to this, we still want the user to be considered inactive after\n   *   a few seconds of inactivity.\n   *\n   * > Note: the only part of iOS interaction we can't mimic with this setup\n   * is a touch and hold on the video element counting as activity in order to\n   * keep the controls showing, but that shouldn't be an issue. A touch and hold\n   * on any controls will still keep the user active\n   *\n   * @private\n   */\n\n\n  Player.prototype.addTechControlsListeners_ = function addTechControlsListeners_() {\n    // Make sure to remove all the previous listeners in case we are called multiple times.\n    this.removeTechControlsListeners_();\n\n    // Some browsers (Chrome & IE) don't trigger a click on a flash swf, but do\n    // trigger mousedown/up.\n    // http://stackoverflow.com/questions/1444562/javascript-onclick-event-over-flash-object\n    // Any touch events are set to block the mousedown event from happening\n    this.on(this.tech_, 'mousedown', this.handleTechClick_);\n\n    // If the controls were hidden we don't want that to change without a tap event\n    // so we'll check if the controls were already showing before reporting user\n    // activity\n    this.on(this.tech_, 'touchstart', this.handleTechTouchStart_);\n    this.on(this.tech_, 'touchmove', this.handleTechTouchMove_);\n    this.on(this.tech_, 'touchend', this.handleTechTouchEnd_);\n\n    // The tap listener needs to come after the touchend listener because the tap\n    // listener cancels out any reportedUserActivity when setting userActive(false)\n    this.on(this.tech_, 'tap', this.handleTechTap_);\n  };\n\n  /**\n   * Remove the listeners used for click and tap controls. This is needed for\n   * toggling to controls disabled, where a tap/touch should do nothing.\n   *\n   * @private\n   */\n\n\n  Player.prototype.removeTechControlsListeners_ = function removeTechControlsListeners_() {\n    // We don't want to just use `this.off()` because there might be other needed\n    // listeners added by techs that extend this.\n    this.off(this.tech_, 'tap', this.handleTechTap_);\n    this.off(this.tech_, 'touchstart', this.handleTechTouchStart_);\n    this.off(this.tech_, 'touchmove', this.handleTechTouchMove_);\n    this.off(this.tech_, 'touchend', this.handleTechTouchEnd_);\n    this.off(this.tech_, 'mousedown', this.handleTechClick_);\n  };\n\n  /**\n   * Player waits for the tech to be ready\n   *\n   * @private\n   */\n\n\n  Player.prototype.handleTechReady_ = function handleTechReady_() {\n    this.triggerReady();\n\n    // Keep the same volume as before\n    if (this.cache_.volume) {\n      this.techCall_('setVolume', this.cache_.volume);\n    }\n\n    // Look if the tech found a higher resolution poster while loading\n    this.handleTechPosterChange_();\n\n    // Update the duration if available\n    this.handleTechDurationChange_();\n\n    // Chrome and Safari both have issues with autoplay.\n    // In Safari (5.1.1), when we move the video element into the container div, autoplay doesn't work.\n    // In Chrome (15), if you have autoplay + a poster + no controls, the video gets hidden (but audio plays)\n    // This fixes both issues. Need to wait for API, so it updates displays correctly\n    if ((this.src() || this.currentSrc()) && this.tag && this.options_.autoplay && this.paused()) {\n      try {\n        // Chrome Fix. Fixed in Chrome v16.\n        delete this.tag.poster;\n      } catch (e) {\n        (0, _log2['default'])('deleting tag.poster throws in some browsers', e);\n      }\n      this.play();\n    }\n  };\n\n  /**\n   * Retrigger the `loadstart` event that was triggered by the {@link Tech}. This\n   * function will also trigger {@link Player#firstplay} if it is the first loadstart\n   * for a video.\n   *\n   * @fires Player#loadstart\n   * @fires Player#firstplay\n   * @listens Tech#loadstart\n   * @private\n   */\n\n\n  Player.prototype.handleTechLoadStart_ = function handleTechLoadStart_() {\n    // TODO: Update to use `emptied` event instead. See #1277.\n\n    this.removeClass('vjs-ended');\n    this.removeClass('vjs-seeking');\n\n    // reset the error state\n    this.error(null);\n\n    // If it's already playing we want to trigger a firstplay event now.\n    // The firstplay event relies on both the play and loadstart events\n    // which can happen in any order for a new source\n    if (!this.paused()) {\n      /**\n       * Fired when the user agent begins looking for media data\n       *\n       * @event Player#loadstart\n       * @type {EventTarget~Event}\n       */\n      this.trigger('loadstart');\n      this.trigger('firstplay');\n    } else {\n      // reset the hasStarted state\n      this.hasStarted(false);\n      this.trigger('loadstart');\n    }\n  };\n\n  /**\n   * Add/remove the vjs-has-started class\n   *\n   * @fires Player#firstplay\n   *\n   * @param {boolean} hasStarted\n   *        - true: adds the class\n   *        - false: remove the class\n   *\n   * @return {boolean}\n   *         the boolean value of hasStarted\n   */\n\n\n  Player.prototype.hasStarted = function hasStarted(_hasStarted) {\n    if (_hasStarted !== undefined) {\n      // only update if this is a new value\n      if (this.hasStarted_ !== _hasStarted) {\n        this.hasStarted_ = _hasStarted;\n        if (_hasStarted) {\n          this.addClass('vjs-has-started');\n          // trigger the firstplay event if this newly has played\n          this.trigger('firstplay');\n        } else {\n          this.removeClass('vjs-has-started');\n        }\n      }\n      return this;\n    }\n    return !!this.hasStarted_;\n  };\n\n  /**\n   * Fired whenever the media begins or resumes playback\n   *\n   * @see [Spec]{@link https://html.spec.whatwg.org/multipage/embedded-content.html#dom-media-play}\n   * @fires Player#play\n   * @listens Tech#play\n   * @private\n   */\n\n\n  Player.prototype.handleTechPlay_ = function handleTechPlay_() {\n    this.removeClass('vjs-ended');\n    this.removeClass('vjs-paused');\n    this.addClass('vjs-playing');\n\n    // hide the poster when the user hits play\n    this.hasStarted(true);\n    /**\n     * Triggered whenever an {@link Tech#play} event happens. Indicates that\n     * playback has started or resumed.\n     *\n     * @event Player#play\n     * @type {EventTarget~Event}\n     */\n    this.trigger('play');\n  };\n\n  /**\n   * Retrigger the `waiting` event that was triggered by the {@link Tech}.\n   *\n   * @fires Player#waiting\n   * @listens Tech#waiting\n   * @private\n   */\n\n\n  Player.prototype.handleTechWaiting_ = function handleTechWaiting_() {\n    var _this3 = this;\n\n    this.addClass('vjs-waiting');\n    /**\n     * A readyState change on the DOM element has caused playback to stop.\n     *\n     * @event Player#waiting\n     * @type {EventTarget~Event}\n     */\n    this.trigger('waiting');\n    this.one('timeupdate', function () {\n      return _this3.removeClass('vjs-waiting');\n    });\n  };\n\n  /**\n   * Retrigger the `canplay` event that was triggered by the {@link Tech}.\n   * > Note: This is not consistent between browsers. See #1351\n   *\n   * @fires Player#canplay\n   * @listens Tech#canplay\n   * @private\n   */\n\n\n  Player.prototype.handleTechCanPlay_ = function handleTechCanPlay_() {\n    this.removeClass('vjs-waiting');\n    /**\n     * The media has a readyState of HAVE_FUTURE_DATA or greater.\n     *\n     * @event Player#canplay\n     * @type {EventTarget~Event}\n     */\n    this.trigger('canplay');\n  };\n\n  /**\n   * Retrigger the `canplaythrough` event that was triggered by the {@link Tech}.\n   *\n   * @fires Player#canplaythrough\n   * @listens Tech#canplaythrough\n   * @private\n   */\n\n\n  Player.prototype.handleTechCanPlayThrough_ = function handleTechCanPlayThrough_() {\n    this.removeClass('vjs-waiting');\n    /**\n     * The media has a readyState of HAVE_ENOUGH_DATA or greater. This means that the\n     * entire media file can be played without buffering.\n     *\n     * @event Player#canplaythrough\n     * @type {EventTarget~Event}\n     */\n    this.trigger('canplaythrough');\n  };\n\n  /**\n   * Retrigger the `playing` event that was triggered by the {@link Tech}.\n   *\n   * @fires Player#playing\n   * @listens Tech#playing\n   * @private\n   */\n\n\n  Player.prototype.handleTechPlaying_ = function handleTechPlaying_() {\n    this.removeClass('vjs-waiting');\n    /**\n     * The media is no longer blocked from playback, and has started playing.\n     *\n     * @event Player#playing\n     * @type {EventTarget~Event}\n     */\n    this.trigger('playing');\n  };\n\n  /**\n   * Retrigger the `seeking` event that was triggered by the {@link Tech}.\n   *\n   * @fires Player#seeking\n   * @listens Tech#seeking\n   * @private\n   */\n\n\n  Player.prototype.handleTechSeeking_ = function handleTechSeeking_() {\n    this.addClass('vjs-seeking');\n    /**\n     * Fired whenever the player is jumping to a new time\n     *\n     * @event Player#seeking\n     * @type {EventTarget~Event}\n     */\n    this.trigger('seeking');\n  };\n\n  /**\n   * Retrigger the `seeked` event that was triggered by the {@link Tech}.\n   *\n   * @fires Player#seeked\n   * @listens Tech#seeked\n   * @private\n   */\n\n\n  Player.prototype.handleTechSeeked_ = function handleTechSeeked_() {\n    this.removeClass('vjs-seeking');\n    /**\n     * Fired when the player has finished jumping to a new time\n     *\n     * @event Player#seeked\n     * @type {EventTarget~Event}\n     */\n    this.trigger('seeked');\n  };\n\n  /**\n   * Retrigger the `firstplay` event that was triggered by the {@link Tech}.\n   *\n   * @fires Player#firstplay\n   * @listens Tech#firstplay\n   * @deprecated As of 6.0 passing the `starttime` option to the player will be deprecated\n   * @private\n   */\n\n\n  Player.prototype.handleTechFirstPlay_ = function handleTechFirstPlay_() {\n    // If the first starttime attribute is specified\n    // then we will start at the given offset in seconds\n    if (this.options_.starttime) {\n      _log2['default'].warn('Passing the `starttime` option to the player will be deprecated in 6.0');\n      this.currentTime(this.options_.starttime);\n    }\n\n    this.addClass('vjs-has-started');\n    /**\n     * Fired the first time a video is played. Not part of the HLS spec, and this is\n     * probably not the best implementation yet, so use sparingly. If you don't have a\n     * reason to prevent playback, use `myPlayer.one('play');` instead.\n     *\n     * @event Player#firstplay\n     * @type {EventTarget~Event}\n     */\n    this.trigger('firstplay');\n  };\n\n  /**\n   * Retrigger the `pause` event that was triggered by the {@link Tech}.\n   *\n   * @fires Player#pause\n   * @listens Tech#pause\n   * @private\n   */\n\n\n  Player.prototype.handleTechPause_ = function handleTechPause_() {\n    this.removeClass('vjs-playing');\n    this.addClass('vjs-paused');\n    /**\n     * Fired whenever the media has been paused\n     *\n     * @event Player#pause\n     * @type {EventTarget~Event}\n     */\n    this.trigger('pause');\n  };\n\n  /**\n   * Retrigger the `ended` event that was triggered by the {@link Tech}.\n   *\n   * @fires Player#ended\n   * @listens Tech#ended\n   * @private\n   */\n\n\n  Player.prototype.handleTechEnded_ = function handleTechEnded_() {\n    this.addClass('vjs-ended');\n    if (this.options_.loop) {\n      this.currentTime(0);\n      this.play();\n    } else if (!this.paused()) {\n      this.pause();\n    }\n\n    /**\n     * Fired when the end of the media resource is reached (currentTime == duration)\n     *\n     * @event Player#ended\n     * @type {EventTarget~Event}\n     */\n    this.trigger('ended');\n  };\n\n  /**\n   * Fired when the duration of the media resource is first known or changed\n   *\n   * @listens Tech#durationchange\n   * @private\n   */\n\n\n  Player.prototype.handleTechDurationChange_ = function handleTechDurationChange_() {\n    this.duration(this.techGet_('duration'));\n  };\n\n  /**\n   * Handle a click on the media element to play/pause\n   *\n   * @param {EventTarget~Event} event\n   *        the event that caused this function to trigger\n   *\n   * @listens Tech#mousedown\n   * @private\n   */\n\n\n  Player.prototype.handleTechClick_ = function handleTechClick_(event) {\n    // We're using mousedown to detect clicks thanks to Flash, but mousedown\n    // will also be triggered with right-clicks, so we need to prevent that\n    if (event.button !== 0) {\n      return;\n    }\n\n    // When controls are disabled a click should not toggle playback because\n    // the click is considered a control\n    if (this.controls()) {\n      if (this.paused()) {\n        this.play();\n      } else {\n        this.pause();\n      }\n    }\n  };\n\n  /**\n   * Handle a tap on the media element. It will toggle the user\n   * activity state, which hides and shows the controls.\n   *\n   * @listens Tech#tap\n   * @private\n   */\n\n\n  Player.prototype.handleTechTap_ = function handleTechTap_() {\n    this.userActive(!this.userActive());\n  };\n\n  /**\n   * Handle touch to start\n   *\n   * @listens Tech#touchstart\n   * @private\n   */\n\n\n  Player.prototype.handleTechTouchStart_ = function handleTechTouchStart_() {\n    this.userWasActive = this.userActive();\n  };\n\n  /**\n   * Handle touch to move\n   *\n   * @listens Tech#touchmove\n   * @private\n   */\n\n\n  Player.prototype.handleTechTouchMove_ = function handleTechTouchMove_() {\n    if (this.userWasActive) {\n      this.reportUserActivity();\n    }\n  };\n\n  /**\n   * Handle touch to end\n   *\n   * @param {EventTarget~Event} event\n   *        the touchend event that triggered\n   *        this function\n   *\n   * @listens Tech#touchend\n   * @private\n   */\n\n\n  Player.prototype.handleTechTouchEnd_ = function handleTechTouchEnd_(event) {\n    // Stop the mouse events from also happening\n    event.preventDefault();\n  };\n\n  /**\n   * Fired when the player switches in or out of fullscreen mode\n   *\n   * @private\n   * @listens Player#fullscreenchange\n   */\n\n\n  Player.prototype.handleFullscreenChange_ = function handleFullscreenChange_() {\n    if (this.isFullscreen()) {\n      this.addClass('vjs-fullscreen');\n    } else {\n      this.removeClass('vjs-fullscreen');\n    }\n  };\n\n  /**\n   * native click events on the SWF aren't triggered on IE11, Win8.1RT\n   * use stageclick events triggered from inside the SWF instead\n   *\n   * @private\n   * @listens stageclick\n   */\n\n\n  Player.prototype.handleStageClick_ = function handleStageClick_() {\n    this.reportUserActivity();\n  };\n\n  /**\n   * Handle Tech Fullscreen Change\n   *\n   * @param {EventTarget~Event} event\n   *        the fullscreenchange event that triggered this function\n   *\n   * @param {Object} data\n   *        the data that was sent with the event\n   *\n   * @private\n   * @listens Tech#fullscreenchange\n   * @fires Player#fullscreenchange\n   */\n\n\n  Player.prototype.handleTechFullscreenChange_ = function handleTechFullscreenChange_(event, data) {\n    if (data) {\n      this.isFullscreen(data.isFullscreen);\n    }\n    /**\n     * Fired when going in and out of fullscreen.\n     *\n     * @event Player#fullscreenchange\n     * @type {EventTarget~Event}\n     */\n    this.trigger('fullscreenchange');\n  };\n\n  /**\n   * Fires when an error occurred during the loading of an audio/video.\n   *\n   * @private\n   * @listens Tech#error\n   */\n\n\n  Player.prototype.handleTechError_ = function handleTechError_() {\n    var error = this.tech_.error();\n\n    this.error(error);\n  };\n\n  /**\n   * Retrigger the `textdata` event that was triggered by the {@link Tech}.\n   *\n   * @fires Player#textdata\n   * @listens Tech#textdata\n   * @private\n   */\n\n\n  Player.prototype.handleTechTextData_ = function handleTechTextData_() {\n    var data = null;\n\n    if (arguments.length > 1) {\n      data = arguments[1];\n    }\n\n    /**\n     * Fires when we get a textdata event from tech\n     *\n     * @event Player#textdata\n     * @type {EventTarget~Event}\n     */\n    this.trigger('textdata', data);\n  };\n\n  /**\n   * Get object for cached values.\n   *\n   * @return {Object}\n   *         get the current object cache\n   */\n\n\n  Player.prototype.getCache = function getCache() {\n    return this.cache_;\n  };\n\n  /**\n   * Pass values to the playback tech\n   *\n   * @param {string} [method]\n   *        the method to call\n   *\n   * @param {Object} arg\n   *        the argument to pass\n   *\n   * @private\n   */\n\n\n  Player.prototype.techCall_ = function techCall_(method, arg) {\n    // If it's not ready yet, call method when it is\n    if (this.tech_ && !this.tech_.isReady_) {\n      this.tech_.ready(function () {\n        this[method](arg);\n      }, true);\n\n      // Otherwise call method now\n    } else {\n      try {\n        if (this.tech_) {\n          this.tech_[method](arg);\n        }\n      } catch (e) {\n        (0, _log2['default'])(e);\n        throw e;\n      }\n    }\n  };\n\n  /**\n   * Get calls can't wait for the tech, and sometimes don't need to.\n   *\n   * @param {string} method\n   *        Tech method\n   *\n   * @return {Function|undefined}\n   *         the method or undefined\n   *\n   * @private\n   */\n\n\n  Player.prototype.techGet_ = function techGet_(method) {\n    if (this.tech_ && this.tech_.isReady_) {\n\n      // Flash likes to die and reload when you hide or reposition it.\n      // In these cases the object methods go away and we get errors.\n      // When that happens we'll catch the errors and inform tech that it's not ready any more.\n      try {\n        return this.tech_[method]();\n      } catch (e) {\n        // When building additional tech libs, an expected method may not be defined yet\n        if (this.tech_[method] === undefined) {\n          (0, _log2['default'])('Video.js: ' + method + ' method not defined for ' + this.techName_ + ' playback technology.', e);\n\n          // When a method isn't available on the object it throws a TypeError\n        } else if (e.name === 'TypeError') {\n          (0, _log2['default'])('Video.js: ' + method + ' unavailable on ' + this.techName_ + ' playback technology element.', e);\n          this.tech_.isReady_ = false;\n        } else {\n          (0, _log2['default'])(e);\n        }\n        throw e;\n      }\n    }\n\n    return;\n  };\n\n  /**\n   * start media playback\n   *\n   * @return {Player}\n   *         A reference to the player object this function was called on\n   */\n\n\n  Player.prototype.play = function play() {\n    // Only calls the tech's play if we already have a src loaded\n    if (this.src() || this.currentSrc()) {\n      this.techCall_('play');\n    } else {\n      this.tech_.one('loadstart', function () {\n        this.play();\n      });\n    }\n\n    return this;\n  };\n\n  /**\n   * Pause the video playback\n   *\n   * @return {Player}\n   *         A reference to the player object this function was called on\n   */\n\n\n  Player.prototype.pause = function pause() {\n    this.techCall_('pause');\n    return this;\n  };\n\n  /**\n   * Check if the player is paused or has yet to play\n   *\n   * @return {boolean}\n   *         - false: if the media is currently playing\n   *         - true: if media is not currently playing\n   */\n\n\n  Player.prototype.paused = function paused() {\n    // The initial state of paused should be true (in Safari it's actually false)\n    return this.techGet_('paused') === false ? false : true;\n  };\n\n  /**\n   * Returns whether or not the user is \"scrubbing\". Scrubbing is\n   * when the user has clicked the progress bar handle and is\n   * dragging it along the progress bar.\n   *\n   * @param {boolean} [isScrubbing]\n   *        wether the user is or is not scrubbing\n   *\n   * @return {boolean|Player}\n   *         A instance of the player that called this function when setting,\n   *         and the value of scrubbing when getting\n   */\n\n\n  Player.prototype.scrubbing = function scrubbing(isScrubbing) {\n    if (isScrubbing !== undefined) {\n      this.scrubbing_ = !!isScrubbing;\n\n      if (isScrubbing) {\n        this.addClass('vjs-scrubbing');\n      } else {\n        this.removeClass('vjs-scrubbing');\n      }\n\n      return this;\n    }\n\n    return this.scrubbing_;\n  };\n\n  /**\n   * Get or set the current time (in seconds)\n   *\n   * @param {number|string} [seconds]\n   *        The time to seek to in seconds\n   *\n   * @return {Player|number}\n   *         - the current time in seconds when getting\n   *         - a reference to the current player object when setting\n   */\n\n\n  Player.prototype.currentTime = function currentTime(seconds) {\n    if (seconds !== undefined) {\n\n      this.techCall_('setCurrentTime', seconds);\n\n      return this;\n    }\n\n    // cache last currentTime and return. default to 0 seconds\n    //\n    // Caching the currentTime is meant to prevent a massive amount of reads on the tech's\n    // currentTime when scrubbing, but may not provide much performance benefit afterall.\n    // Should be tested. Also something has to read the actual current time or the cache will\n    // never get updated.\n    this.cache_.currentTime = this.techGet_('currentTime') || 0;\n    return this.cache_.currentTime;\n  };\n\n  /**\n   * Normally gets the length in time of the video in seconds;\n   * in all but the rarest use cases an argument will NOT be passed to the method\n   *\n   * > **NOTE**: The video must have started loading before the duration can be\n   * known, and in the case of Flash, may not be known until the video starts\n   * playing.\n   *\n   * @fires Player#durationchange\n   *\n   * @param {number} [seconds]\n   *        The duration of the video to set in seconds\n   *\n   * @return {number|Player}\n   *         - The duration of the video in seconds when getting\n   *         - A reference to the player that called this function\n   *           when setting\n   */\n\n\n  Player.prototype.duration = function duration(seconds) {\n    if (seconds === undefined) {\n      return this.cache_.duration || 0;\n    }\n\n    seconds = parseFloat(seconds) || 0;\n\n    // Standardize on Inifity for signaling video is live\n    if (seconds < 0) {\n      seconds = Infinity;\n    }\n\n    if (seconds !== this.cache_.duration) {\n      // Cache the last set value for optimized scrubbing (esp. Flash)\n      this.cache_.duration = seconds;\n\n      if (seconds === Infinity) {\n        this.addClass('vjs-live');\n      } else {\n        this.removeClass('vjs-live');\n      }\n      /**\n       * @event Player#durationchange\n       * @type {EventTarget~Event}\n       */\n      this.trigger('durationchange');\n    }\n\n    return this;\n  };\n\n  /**\n   * Calculates how much time is left in the video. Not part\n   * of the native video API.\n   *\n   * @return {number}\n   *         The time remaining in seconds\n   */\n\n\n  Player.prototype.remainingTime = function remainingTime() {\n    return this.duration() - this.currentTime();\n  };\n\n  //\n  // Kind of like an array of portions of the video that have been downloaded.\n\n  /**\n   * Get a TimeRange object with an array of the times of the video\n   * that have been downloaded. If you just want the percent of the\n   * video that's been downloaded, use bufferedPercent.\n   *\n   * @see [Buffered Spec]{@link http://dev.w3.org/html5/spec/video.html#dom-media-buffered}\n   *\n   * @return {TimeRange}\n   *         A mock TimeRange object (following HTML spec)\n   */\n\n\n  Player.prototype.buffered = function buffered() {\n    var buffered = this.techGet_('buffered');\n\n    if (!buffered || !buffered.length) {\n      buffered = (0, _timeRanges.createTimeRange)(0, 0);\n    }\n\n    return buffered;\n  };\n\n  /**\n   * Get the percent (as a decimal) of the video that's been downloaded.\n   * This method is not a part of the native HTML video API.\n   *\n   * @return {number}\n   *         A decimal between 0 and 1 representing the percent\n   *         that is bufferred 0 being 0% and 1 being 100%\n   */\n\n\n  Player.prototype.bufferedPercent = function bufferedPercent() {\n    return (0, _buffer.bufferedPercent)(this.buffered(), this.duration());\n  };\n\n  /**\n   * Get the ending time of the last buffered time range\n   * This is used in the progress bar to encapsulate all time ranges.\n   *\n   * @return {number}\n   *         The end of the last buffered time range\n   */\n\n\n  Player.prototype.bufferedEnd = function bufferedEnd() {\n    var buffered = this.buffered();\n    var duration = this.duration();\n    var end = buffered.end(buffered.length - 1);\n\n    if (end > duration) {\n      end = duration;\n    }\n\n    return end;\n  };\n\n  /**\n   * Get or set the current volume of the media\n   *\n   * @param  {number} [percentAsDecimal]\n   *         The new volume as a decimal percent:\n   *         - 0 is muted/0%/off\n   *         - 1.0 is 100%/full\n   *         - 0.5 is half volume or 50%\n   *\n   * @return {Player|number}\n   *         a reference to the calling player when setting and the\n   *         current volume as a percent when getting\n   */\n\n\n  Player.prototype.volume = function volume(percentAsDecimal) {\n    var vol = void 0;\n\n    if (percentAsDecimal !== undefined) {\n      // Force value to between 0 and 1\n      vol = Math.max(0, Math.min(1, parseFloat(percentAsDecimal)));\n      this.cache_.volume = vol;\n      this.techCall_('setVolume', vol);\n\n      return this;\n    }\n\n    // Default to 1 when returning current volume.\n    vol = parseFloat(this.techGet_('volume'));\n    return isNaN(vol) ? 1 : vol;\n  };\n\n  /**\n   * Get the current muted state, or turn mute on or off\n   *\n   * @param {boolean} [muted]\n   *        - true to mute\n   *        - false to unmute\n   *\n   * @return {boolean|Player}\n   *         - true if mute is on and getting\n   *         - false if mute is off and getting\n   *         - A reference to the current player when setting\n   */\n\n\n  Player.prototype.muted = function muted(_muted) {\n    if (_muted !== undefined) {\n      this.techCall_('setMuted', _muted);\n      return this;\n    }\n    return this.techGet_('muted') || false;\n  };\n\n  /**\n   * Check if current tech can support native fullscreen\n   * (e.g. with built in controls like iOS, so not our flash swf)\n   *\n   * @return {boolean}\n   *         if native fullscreen is supported\n   */\n\n\n  Player.prototype.supportsFullScreen = function supportsFullScreen() {\n    return this.techGet_('supportsFullScreen') || false;\n  };\n\n  /**\n   * Check if the player is in fullscreen mode or tell the player that it\n   * is or is not in fullscreen mode.\n   *\n   * > NOTE: As of the latest HTML5 spec, isFullscreen is no longer an official\n   * property and instead document.fullscreenElement is used. But isFullscreen is\n   * still a valuable property for internal player workings.\n   *\n   * @param  {boolean} [isFS]\n   *         Set the players current fullscreen state\n   *\n   * @return {boolean|Player}\n   *         - true if fullscreen is on and getting\n   *         - false if fullscreen is off and getting\n   *         - A reference to the current player when setting\n   */\n\n\n  Player.prototype.isFullscreen = function isFullscreen(isFS) {\n    if (isFS !== undefined) {\n      this.isFullscreen_ = !!isFS;\n      return this;\n    }\n    return !!this.isFullscreen_;\n  };\n\n  /**\n   * Increase the size of the video to full screen\n   * In some browsers, full screen is not supported natively, so it enters\n   * \"full window mode\", where the video fills the browser window.\n   * In browsers and devices that support native full screen, sometimes the\n   * browser's default controls will be shown, and not the Video.js custom skin.\n   * This includes most mobile devices (iOS, Android) and older versions of\n   * Safari.\n   *\n   * @fires Player#fullscreenchange\n   * @return {Player}\n   *         A reference to the current player\n   */\n\n\n  Player.prototype.requestFullscreen = function requestFullscreen() {\n    var fsApi = _fullscreenApi2['default'];\n\n    this.isFullscreen(true);\n\n    if (fsApi.requestFullscreen) {\n      // the browser supports going fullscreen at the element level so we can\n      // take the controls fullscreen as well as the video\n\n      // Trigger fullscreenchange event after change\n      // We have to specifically add this each time, and remove\n      // when canceling fullscreen. Otherwise if there's multiple\n      // players on a page, they would all be reacting to the same fullscreen\n      // events\n      Events.on(_document2['default'], fsApi.fullscreenchange, Fn.bind(this, function documentFullscreenChange(e) {\n        this.isFullscreen(_document2['default'][fsApi.fullscreenElement]);\n\n        // If cancelling fullscreen, remove event listener.\n        if (this.isFullscreen() === false) {\n          Events.off(_document2['default'], fsApi.fullscreenchange, documentFullscreenChange);\n        }\n        /**\n         * @event Player#fullscreenchange\n         * @type {EventTarget~Event}\n         */\n        this.trigger('fullscreenchange');\n      }));\n\n      this.el_[fsApi.requestFullscreen]();\n    } else if (this.tech_.supportsFullScreen()) {\n      // we can't take the video.js controls fullscreen but we can go fullscreen\n      // with native controls\n      this.techCall_('enterFullScreen');\n    } else {\n      // fullscreen isn't supported so we'll just stretch the video element to\n      // fill the viewport\n      this.enterFullWindow();\n      /**\n       * @event Player#fullscreenchange\n       * @type {EventTarget~Event}\n       */\n      this.trigger('fullscreenchange');\n    }\n\n    return this;\n  };\n\n  /**\n   * Return the video to its normal size after having been in full screen mode\n   *\n   * @fires Player#fullscreenchange\n   *\n   * @return {Player}\n   *         A reference to the current player\n   */\n\n\n  Player.prototype.exitFullscreen = function exitFullscreen() {\n    var fsApi = _fullscreenApi2['default'];\n\n    this.isFullscreen(false);\n\n    // Check for browser element fullscreen support\n    if (fsApi.requestFullscreen) {\n      _document2['default'][fsApi.exitFullscreen]();\n    } else if (this.tech_.supportsFullScreen()) {\n      this.techCall_('exitFullScreen');\n    } else {\n      this.exitFullWindow();\n      /**\n       * @event Player#fullscreenchange\n       * @type {EventTarget~Event}\n       */\n      this.trigger('fullscreenchange');\n    }\n\n    return this;\n  };\n\n  /**\n   * When fullscreen isn't supported we can stretch the\n   * video container to as wide as the browser will let us.\n   *\n   * @fires Player#enterFullWindow\n   */\n\n\n  Player.prototype.enterFullWindow = function enterFullWindow() {\n    this.isFullWindow = true;\n\n    // Storing original doc overflow value to return to when fullscreen is off\n    this.docOrigOverflow = _document2['default'].documentElement.style.overflow;\n\n    // Add listener for esc key to exit fullscreen\n    Events.on(_document2['default'], 'keydown', Fn.bind(this, this.fullWindowOnEscKey));\n\n    // Hide any scroll bars\n    _document2['default'].documentElement.style.overflow = 'hidden';\n\n    // Apply fullscreen styles\n    Dom.addElClass(_document2['default'].body, 'vjs-full-window');\n\n    /**\n     * @event Player#enterFullWindow\n     * @type {EventTarget~Event}\n     */\n    this.trigger('enterFullWindow');\n  };\n\n  /**\n   * Check for call to either exit full window or\n   * full screen on ESC key\n   *\n   * @param {string} event\n   *        Event to check for key press\n   */\n\n\n  Player.prototype.fullWindowOnEscKey = function fullWindowOnEscKey(event) {\n    if (event.keyCode === 27) {\n      if (this.isFullscreen() === true) {\n        this.exitFullscreen();\n      } else {\n        this.exitFullWindow();\n      }\n    }\n  };\n\n  /**\n   * Exit full window\n   *\n   * @fires Player#exitFullWindow\n   */\n\n\n  Player.prototype.exitFullWindow = function exitFullWindow() {\n    this.isFullWindow = false;\n    Events.off(_document2['default'], 'keydown', this.fullWindowOnEscKey);\n\n    // Unhide scroll bars.\n    _document2['default'].documentElement.style.overflow = this.docOrigOverflow;\n\n    // Remove fullscreen styles\n    Dom.removeElClass(_document2['default'].body, 'vjs-full-window');\n\n    // Resize the box, controller, and poster to original sizes\n    // this.positionAll();\n    /**\n     * @event Player#exitFullWindow\n     * @type {EventTarget~Event}\n     */\n    this.trigger('exitFullWindow');\n  };\n\n  /**\n   * Check whether the player can play a given mimetype\n   *\n   * @see https://www.w3.org/TR/2011/WD-html5-20110113/video.html#dom-navigator-canplaytype\n   *\n   * @param {string} type\n   *        The mimetype to check\n   *\n   * @return {string}\n   *         'probably', 'maybe', or '' (empty string)\n   */\n\n\n  Player.prototype.canPlayType = function canPlayType(type) {\n    var can = void 0;\n\n    // Loop through each playback technology in the options order\n    for (var i = 0, j = this.options_.techOrder; i < j.length; i++) {\n      var techName = (0, _toTitleCase2['default'])(j[i]);\n      var tech = _tech2['default'].getTech(techName);\n\n      // Support old behavior of techs being registered as components.\n      // Remove once that deprecated behavior is removed.\n      if (!tech) {\n        tech = _component2['default'].getComponent(techName);\n      }\n\n      // Check if the current tech is defined before continuing\n      if (!tech) {\n        _log2['default'].error('The \"' + techName + '\" tech is undefined. Skipped browser support check for that tech.');\n        continue;\n      }\n\n      // Check if the browser supports this technology\n      if (tech.isSupported()) {\n        can = tech.canPlayType(type);\n\n        if (can) {\n          return can;\n        }\n      }\n    }\n\n    return '';\n  };\n\n  /**\n   * Select source based on tech-order or source-order\n   * Uses source-order selection if `options.sourceOrder` is truthy. Otherwise,\n   * defaults to tech-order selection\n   *\n   * @param {Array} sources\n   *        The sources for a media asset\n   *\n   * @return {Object|boolean}\n   *         Object of source and tech order or false\n   */\n\n\n  Player.prototype.selectSource = function selectSource(sources) {\n    var _this4 = this;\n\n    // Get only the techs specified in `techOrder` that exist and are supported by the\n    // current platform\n    var techs = this.options_.techOrder.map(_toTitleCase2['default']).map(function (techName) {\n      // `Component.getComponent(...)` is for support of old behavior of techs\n      // being registered as components.\n      // Remove once that deprecated behavior is removed.\n      return [techName, _tech2['default'].getTech(techName) || _component2['default'].getComponent(techName)];\n    }).filter(function (_ref) {\n      var techName = _ref[0],\n          tech = _ref[1];\n\n      // Check if the current tech is defined before continuing\n      if (tech) {\n        // Check if the browser supports this technology\n        return tech.isSupported();\n      }\n\n      _log2['default'].error('The \"' + techName + '\" tech is undefined. Skipped browser support check for that tech.');\n      return false;\n    });\n\n    // Iterate over each `innerArray` element once per `outerArray` element and execute\n    // `tester` with both. If `tester` returns a non-falsy value, exit early and return\n    // that value.\n    var findFirstPassingTechSourcePair = function findFirstPassingTechSourcePair(outerArray, innerArray, tester) {\n      var found = void 0;\n\n      outerArray.some(function (outerChoice) {\n        return innerArray.some(function (innerChoice) {\n          found = tester(outerChoice, innerChoice);\n\n          if (found) {\n            return true;\n          }\n        });\n      });\n\n      return found;\n    };\n\n    var foundSourceAndTech = void 0;\n    var flip = function flip(fn) {\n      return function (a, b) {\n        return fn(b, a);\n      };\n    };\n    var finder = function finder(_ref2, source) {\n      var techName = _ref2[0],\n          tech = _ref2[1];\n\n      if (tech.canPlaySource(source, _this4.options_[techName.toLowerCase()])) {\n        return { source: source, tech: techName };\n      }\n    };\n\n    // Depending on the truthiness of `options.sourceOrder`, we swap the order of techs and sources\n    // to select from them based on their priority.\n    if (this.options_.sourceOrder) {\n      // Source-first ordering\n      foundSourceAndTech = findFirstPassingTechSourcePair(sources, techs, flip(finder));\n    } else {\n      // Tech-first ordering\n      foundSourceAndTech = findFirstPassingTechSourcePair(techs, sources, finder);\n    }\n\n    return foundSourceAndTech || false;\n  };\n\n  /**\n   * The source function updates the video source\n   * There are three types of variables you can pass as the argument.\n   * **URL string**: A URL to the the video file. Use this method if you are sure\n   * the current playback technology (HTML5/Flash) can support the source you\n   * provide. Currently only MP4 files can be used in both HTML5 and Flash.\n   *\n   * @param {Tech~SourceObject|Tech~SourceObject[]} [source]\n   *        One SourceObject or an array of SourceObjects\n   *\n   * @return {string|Player}\n   *         - The current video source when getting\n   *         - The player when setting\n   */\n\n\n  Player.prototype.src = function src(source) {\n    if (source === undefined) {\n      return this.techGet_('src');\n    }\n\n    var currentTech = _tech2['default'].getTech(this.techName_);\n\n    // Support old behavior of techs being registered as components.\n    // Remove once that deprecated behavior is removed.\n    if (!currentTech) {\n      currentTech = _component2['default'].getComponent(this.techName_);\n    }\n\n    // case: Array of source objects to choose from and pick the best to play\n    if (Array.isArray(source)) {\n      this.sourceList_(source);\n\n      // case: URL String (http://myvideo...)\n    } else if (typeof source === 'string') {\n      // create a source object from the string\n      this.src({ src: source });\n\n      // case: Source object { src: '', type: '' ... }\n    } else if (source instanceof Object) {\n      // check if the source has a type and the loaded tech cannot play the source\n      // if there's no type we'll just try the current tech\n      if (source.type && !currentTech.canPlaySource(source, this.options_[this.techName_.toLowerCase()])) {\n        // create a source list with the current source and send through\n        // the tech loop to check for a compatible technology\n        this.sourceList_([source]);\n      } else {\n        this.cache_.sources = null;\n        this.cache_.source = source;\n        this.cache_.src = source.src;\n\n        this.currentType_ = source.type || '';\n\n        // wait until the tech is ready to set the source\n        this.ready(function () {\n\n          // The setSource tech method was added with source handlers\n          // so older techs won't support it\n          // We need to check the direct prototype for the case where subclasses\n          // of the tech do not support source handlers\n          if (currentTech.prototype.hasOwnProperty('setSource')) {\n            this.techCall_('setSource', source);\n          } else {\n            this.techCall_('src', source.src);\n          }\n\n          if (this.options_.preload === 'auto') {\n            this.load();\n          }\n\n          if (this.options_.autoplay) {\n            this.play();\n          }\n\n          // Set the source synchronously if possible (#2326)\n        }, true);\n      }\n    }\n\n    return this;\n  };\n\n  /**\n   * Handle an array of source objects\n   *\n   * @param  {Tech~SourceObject[]} sources\n   *         Array of source objects\n   *\n   * @private\n   */\n\n\n  Player.prototype.sourceList_ = function sourceList_(sources) {\n    var sourceTech = this.selectSource(sources);\n\n    if (sourceTech) {\n      if (sourceTech.tech === this.techName_) {\n        // if this technology is already loaded, set the source\n        this.src(sourceTech.source);\n      } else {\n        // load this technology with the chosen source\n        this.loadTech_(sourceTech.tech, sourceTech.source);\n      }\n\n      this.cache_.sources = sources;\n    } else {\n      // We need to wrap this in a timeout to give folks a chance to add error event handlers\n      this.setTimeout(function () {\n        this.error({ code: 4, message: this.localize(this.options_.notSupportedMessage) });\n      }, 0);\n\n      // we could not find an appropriate tech, but let's still notify the delegate that this is it\n      // this needs a better comment about why this is needed\n      this.triggerReady();\n    }\n  };\n\n  /**\n   * Begin loading the src data.\n   *\n   * @return {Player}\n   *         A reference to the player\n   */\n\n\n  Player.prototype.load = function load() {\n    this.techCall_('load');\n    return this;\n  };\n\n  /**\n   * Reset the player. Loads the first tech in the techOrder,\n   * and calls `reset` on the tech`.\n   *\n   * @return {Player}\n   *         A reference to the player\n   */\n\n\n  Player.prototype.reset = function reset() {\n    this.loadTech_((0, _toTitleCase2['default'])(this.options_.techOrder[0]), null);\n    this.techCall_('reset');\n    return this;\n  };\n\n  /**\n   * Returns all of the current source objects.\n   *\n   * @return {Tech~SourceObject[]}\n   *         The current source objects\n   */\n\n\n  Player.prototype.currentSources = function currentSources() {\n    var source = this.currentSource();\n    var sources = [];\n\n    // assume `{}` or `{ src }`\n    if (Object.keys(source).length !== 0) {\n      sources.push(source);\n    }\n\n    return this.cache_.sources || sources;\n  };\n\n  /**\n   * Returns the current source object.\n   *\n   * @return {Tech~SourceObject}\n   *         The current source object\n   */\n\n\n  Player.prototype.currentSource = function currentSource() {\n    var source = {};\n    var src = this.currentSrc();\n\n    if (src) {\n      source.src = src;\n    }\n\n    return this.cache_.source || source;\n  };\n\n  /**\n   * Returns the fully qualified URL of the current source value e.g. http://mysite.com/video.mp4\n   * Can be used in conjuction with `currentType` to assist in rebuilding the current source object.\n   *\n   * @return {string}\n   *         The current source\n   */\n\n\n  Player.prototype.currentSrc = function currentSrc() {\n    return this.techGet_('currentSrc') || this.cache_.src || '';\n  };\n\n  /**\n   * Get the current source type e.g. video/mp4\n   * This can allow you rebuild the current source object so that you could load the same\n   * source and tech later\n   *\n   * @return {string}\n   *         The source MIME type\n   */\n\n\n  Player.prototype.currentType = function currentType() {\n    return this.currentType_ || '';\n  };\n\n  /**\n   * Get or set the preload attribute\n   *\n   * @param {boolean} [value]\n   *        - true means that we should preload\n   *        - false maens that we should not preload\n   *\n   * @return {string|Player}\n   *         - the preload attribute value when getting\n   *         - the player when setting\n   */\n\n\n  Player.prototype.preload = function preload(value) {\n    if (value !== undefined) {\n      this.techCall_('setPreload', value);\n      this.options_.preload = value;\n      return this;\n    }\n    return this.techGet_('preload');\n  };\n\n  /**\n   * Get or set the autoplay attribute.\n   *\n   * @param {boolean} [value]\n   *        - true means that we should autoplay\n   *        - false maens that we should not autoplay\n   *\n   * @return {string|Player}\n   *         - the current value of autoplay\n   *         - the player when setting\n   */\n\n\n  Player.prototype.autoplay = function autoplay(value) {\n    if (value !== undefined) {\n      this.techCall_('setAutoplay', value);\n      this.options_.autoplay = value;\n      return this;\n    }\n    return this.techGet_('autoplay', value);\n  };\n\n  /**\n   * Get or set the loop attribute on the video element.\n   *\n   * @param {boolean} [value]\n   *        - true means that we should loop the video\n   *        - false means that we should not loop the video\n   *\n   * @return {string|Player}\n   *         - the current value of loop when getting\n   *         - the player when setting\n   */\n\n\n  Player.prototype.loop = function loop(value) {\n    if (value !== undefined) {\n      this.techCall_('setLoop', value);\n      this.options_.loop = value;\n      return this;\n    }\n    return this.techGet_('loop');\n  };\n\n  /**\n   * Get or set the poster image source url\n   *\n   * @fires Player#posterchange\n   *\n   * @param {string} [src]\n   *        Poster image source URL\n   *\n   * @return {string|Player}\n   *         - the current value of poster when getting\n   *         - the player when setting\n   */\n\n\n  Player.prototype.poster = function poster(src) {\n    if (src === undefined) {\n      return this.poster_;\n    }\n\n    // The correct way to remove a poster is to set as an empty string\n    // other falsey values will throw errors\n    if (!src) {\n      src = '';\n    }\n\n    // update the internal poster variable\n    this.poster_ = src;\n\n    // update the tech's poster\n    this.techCall_('setPoster', src);\n\n    // alert components that the poster has been set\n    /**\n     * This event fires when the poster image is changed on the player.\n     *\n     * @event Player#posterchange\n     * @type {EventTarget~Event}\n     */\n    this.trigger('posterchange');\n\n    return this;\n  };\n\n  /**\n   * Some techs (e.g. YouTube) can provide a poster source in an\n   * asynchronous way. We want the poster component to use this\n   * poster source so that it covers up the tech's controls.\n   * (YouTube's play button). However we only want to use this\n   * soruce if the player user hasn't set a poster through\n   * the normal APIs.\n   *\n   * @fires Player#posterchange\n   * @listens Tech#posterchange\n   * @private\n   */\n\n\n  Player.prototype.handleTechPosterChange_ = function handleTechPosterChange_() {\n    if (!this.poster_ && this.tech_ && this.tech_.poster) {\n      this.poster_ = this.tech_.poster() || '';\n\n      // Let components know the poster has changed\n      this.trigger('posterchange');\n    }\n  };\n\n  /**\n   * Get or set whether or not the controls are showing.\n   *\n   * @fires Player#controlsenabled\n   *\n   * @param {boolean} [bool]\n   *        - true to turn controls on\n   *        - false to turn controls off\n   *\n   * @return {boolean|Player}\n   *         - the current value of controls when getting\n   *         - the player when setting\n   */\n\n\n  Player.prototype.controls = function controls(bool) {\n    if (bool !== undefined) {\n      bool = !!bool;\n\n      // Don't trigger a change event unless it actually changed\n      if (this.controls_ !== bool) {\n        this.controls_ = bool;\n\n        if (this.usingNativeControls()) {\n          this.techCall_('setControls', bool);\n        }\n\n        if (bool) {\n          this.removeClass('vjs-controls-disabled');\n          this.addClass('vjs-controls-enabled');\n          /**\n           * @event Player#controlsenabled\n           * @type {EventTarget~Event}\n           */\n          this.trigger('controlsenabled');\n\n          if (!this.usingNativeControls()) {\n            this.addTechControlsListeners_();\n          }\n        } else {\n          this.removeClass('vjs-controls-enabled');\n          this.addClass('vjs-controls-disabled');\n          /**\n           * @event Player#controlsdisabled\n           * @type {EventTarget~Event}\n           */\n          this.trigger('controlsdisabled');\n\n          if (!this.usingNativeControls()) {\n            this.removeTechControlsListeners_();\n          }\n        }\n      }\n      return this;\n    }\n    return !!this.controls_;\n  };\n\n  /**\n   * Toggle native controls on/off. Native controls are the controls built into\n   * devices (e.g. default iPhone controls), Flash, or other techs\n   * (e.g. Vimeo Controls)\n   * **This should only be set by the current tech, because only the tech knows\n   * if it can support native controls**\n   *\n   * @fires Player#usingnativecontrols\n   * @fires Player#usingcustomcontrols\n   *\n   * @param {boolean} [bool]\n   *        - true to turn native controls on\n   *        - false to turn native controls off\n   *\n   * @return {boolean|Player}\n   *         - the current value of native controls when getting\n   *         - the player when setting\n   */\n\n\n  Player.prototype.usingNativeControls = function usingNativeControls(bool) {\n    if (bool !== undefined) {\n      bool = !!bool;\n\n      // Don't trigger a change event unless it actually changed\n      if (this.usingNativeControls_ !== bool) {\n        this.usingNativeControls_ = bool;\n        if (bool) {\n          this.addClass('vjs-using-native-controls');\n\n          /**\n           * player is using the native device controls\n           *\n           * @event Player#usingnativecontrols\n           * @type {EventTarget~Event}\n           */\n          this.trigger('usingnativecontrols');\n        } else {\n          this.removeClass('vjs-using-native-controls');\n\n          /**\n           * player is using the custom HTML controls\n           *\n           * @event Player#usingcustomcontrols\n           * @type {EventTarget~Event}\n           */\n          this.trigger('usingcustomcontrols');\n        }\n      }\n      return this;\n    }\n    return !!this.usingNativeControls_;\n  };\n\n  /**\n   * Set or get the current MediaError\n   *\n   * @fires Player#error\n   *\n   * @param  {MediaError|string|number} [err]\n   *         A MediaError or a string/number to be turned\n   *         into a MediaError\n   *\n   * @return {MediaError|null|Player}\n   *         - The current MediaError when getting (or null)\n   *         - The player when setting\n   */\n\n\n  Player.prototype.error = function error(err) {\n    if (err === undefined) {\n      return this.error_ || null;\n    }\n\n    // restoring to default\n    if (err === null) {\n      this.error_ = err;\n      this.removeClass('vjs-error');\n      if (this.errorDisplay) {\n        this.errorDisplay.close();\n      }\n      return this;\n    }\n\n    this.error_ = new _mediaError2['default'](err);\n\n    // add the vjs-error classname to the player\n    this.addClass('vjs-error');\n\n    // log the name of the error type and any message\n    // ie8 just logs \"[object object]\" if you just log the error object\n    _log2['default'].error('(CODE:' + this.error_.code + ' ' + _mediaError2['default'].errorTypes[this.error_.code] + ')', this.error_.message, this.error_);\n\n    /**\n     * @event Player#error\n     * @type {EventTarget~Event}\n     */\n    this.trigger('error');\n\n    return this;\n  };\n\n  /**\n   * Report user activity\n   *\n   * @param {Object} event\n   *        Event object\n   */\n\n\n  Player.prototype.reportUserActivity = function reportUserActivity(event) {\n    this.userActivity_ = true;\n  };\n\n  /**\n   * Get/set if user is active\n   *\n   * @fires Player#useractive\n   * @fires Player#userinactive\n   *\n   * @param {boolean} [bool]\n   *        - true if the user is active\n   *        - false if the user is inactive\n   * @return {boolean|Player}\n   *         - the current value of userActive when getting\n   *         - the player when setting\n   */\n\n\n  Player.prototype.userActive = function userActive(bool) {\n    if (bool !== undefined) {\n      bool = !!bool;\n      if (bool !== this.userActive_) {\n        this.userActive_ = bool;\n        if (bool) {\n          // If the user was inactive and is now active we want to reset the\n          // inactivity timer\n          this.userActivity_ = true;\n          this.removeClass('vjs-user-inactive');\n          this.addClass('vjs-user-active');\n          /**\n           * @event Player#useractive\n           * @type {EventTarget~Event}\n           */\n          this.trigger('useractive');\n        } else {\n          // We're switching the state to inactive manually, so erase any other\n          // activity\n          this.userActivity_ = false;\n\n          // Chrome/Safari/IE have bugs where when you change the cursor it can\n          // trigger a mousemove event. This causes an issue when you're hiding\n          // the cursor when the user is inactive, and a mousemove signals user\n          // activity. Making it impossible to go into inactive mode. Specifically\n          // this happens in fullscreen when we really need to hide the cursor.\n          //\n          // When this gets resolved in ALL browsers it can be removed\n          // https://code.google.com/p/chromium/issues/detail?id=103041\n          if (this.tech_) {\n            this.tech_.one('mousemove', function (e) {\n              e.stopPropagation();\n              e.preventDefault();\n            });\n          }\n\n          this.removeClass('vjs-user-active');\n          this.addClass('vjs-user-inactive');\n          /**\n           * @event Player#userinactive\n           * @type {EventTarget~Event}\n           */\n          this.trigger('userinactive');\n        }\n      }\n      return this;\n    }\n    return this.userActive_;\n  };\n\n  /**\n   * Listen for user activity based on timeout value\n   *\n   * @private\n   */\n\n\n  Player.prototype.listenForUserActivity_ = function listenForUserActivity_() {\n    var mouseInProgress = void 0;\n    var lastMoveX = void 0;\n    var lastMoveY = void 0;\n    var handleActivity = Fn.bind(this, this.reportUserActivity);\n\n    var handleMouseMove = function handleMouseMove(e) {\n      // #1068 - Prevent mousemove spamming\n      // Chrome Bug: https://code.google.com/p/chromium/issues/detail?id=366970\n      if (e.screenX !== lastMoveX || e.screenY !== lastMoveY) {\n        lastMoveX = e.screenX;\n        lastMoveY = e.screenY;\n        handleActivity();\n      }\n    };\n\n    var handleMouseDown = function handleMouseDown() {\n      handleActivity();\n      // For as long as the they are touching the device or have their mouse down,\n      // we consider them active even if they're not moving their finger or mouse.\n      // So we want to continue to update that they are active\n      this.clearInterval(mouseInProgress);\n      // Setting userActivity=true now and setting the interval to the same time\n      // as the activityCheck interval (250) should ensure we never miss the\n      // next activityCheck\n      mouseInProgress = this.setInterval(handleActivity, 250);\n    };\n\n    var handleMouseUp = function handleMouseUp(event) {\n      handleActivity();\n      // Stop the interval that maintains activity if the mouse/touch is down\n      this.clearInterval(mouseInProgress);\n    };\n\n    // Any mouse movement will be considered user activity\n    this.on('mousedown', handleMouseDown);\n    this.on('mousemove', handleMouseMove);\n    this.on('mouseup', handleMouseUp);\n\n    // Listen for keyboard navigation\n    // Shouldn't need to use inProgress interval because of key repeat\n    this.on('keydown', handleActivity);\n    this.on('keyup', handleActivity);\n\n    // Run an interval every 250 milliseconds instead of stuffing everything into\n    // the mousemove/touchmove function itself, to prevent performance degradation.\n    // `this.reportUserActivity` simply sets this.userActivity_ to true, which\n    // then gets picked up by this loop\n    // http://ejohn.org/blog/learning-from-twitter/\n    var inactivityTimeout = void 0;\n\n    this.setInterval(function () {\n      // Check to see if mouse/touch activity has happened\n      if (this.userActivity_) {\n        // Reset the activity tracker\n        this.userActivity_ = false;\n\n        // If the user state was inactive, set the state to active\n        this.userActive(true);\n\n        // Clear any existing inactivity timeout to start the timer over\n        this.clearTimeout(inactivityTimeout);\n\n        var timeout = this.options_.inactivityTimeout;\n\n        if (timeout > 0) {\n          // In <timeout> milliseconds, if no more activity has occurred the\n          // user will be considered inactive\n          inactivityTimeout = this.setTimeout(function () {\n            // Protect against the case where the inactivityTimeout can trigger just\n            // before the next user activity is picked up by the activity check loop\n            // causing a flicker\n            if (!this.userActivity_) {\n              this.userActive(false);\n            }\n          }, timeout);\n        }\n      }\n    }, 250);\n  };\n\n  /**\n   * Gets or sets the current playback rate. A playback rate of\n   * 1.0 represents normal speed and 0.5 would indicate half-speed\n   * playback, for instance.\n   *\n   * @see https://html.spec.whatwg.org/multipage/embedded-content.html#dom-media-playbackrate\n   *\n   * @param {number} [rate]\n   *       New playback rate to set.\n   *\n   * @return {number|Player}\n   *         - The current playback rate when getting or 1.0\n   *         - the player when setting\n   */\n\n\n  Player.prototype.playbackRate = function playbackRate(rate) {\n    if (rate !== undefined) {\n      this.techCall_('setPlaybackRate', rate);\n      return this;\n    }\n\n    if (this.tech_ && this.tech_.featuresPlaybackRate) {\n      return this.techGet_('playbackRate');\n    }\n    return 1.0;\n  };\n\n  /**\n   * Gets or sets the audio flag\n   *\n   * @param {boolean} bool\n   *        - true signals that this is an audio player\n   *        - false signals that this is not an audio player\n   *\n   * @return {Player|boolean}\n   *         - the current value of isAudio when getting\n   *         - the player if setting\n   */\n\n\n  Player.prototype.isAudio = function isAudio(bool) {\n    if (bool !== undefined) {\n      this.isAudio_ = !!bool;\n      return this;\n    }\n\n    return !!this.isAudio_;\n  };\n\n  /**\n   * Get the {@link VideoTrackList}\n   *\n   * @see https://html.spec.whatwg.org/multipage/embedded-content.html#videotracklist\n   *\n   * @return {VideoTrackList}\n   *         the current video track list\n   */\n\n\n  Player.prototype.videoTracks = function videoTracks() {\n    // if we have not yet loadTech_, we create videoTracks_\n    // these will be passed to the tech during loading\n    if (!this.tech_) {\n      this.videoTracks_ = this.videoTracks_ || new _videoTrackList2['default']();\n      return this.videoTracks_;\n    }\n\n    return this.tech_.videoTracks();\n  };\n\n  /**\n   * Get the {@link AudioTrackList}\n   *\n   * @see https://html.spec.whatwg.org/multipage/embedded-content.html#audiotracklist\n   *\n   * @return {AudioTrackList}\n   *         the current audio track list\n   */\n\n\n  Player.prototype.audioTracks = function audioTracks() {\n    // if we have not yet loadTech_, we create videoTracks_\n    // these will be passed to the tech during loading\n    if (!this.tech_) {\n      this.audioTracks_ = this.audioTracks_ || new _audioTrackList2['default']();\n      return this.audioTracks_;\n    }\n\n    return this.tech_.audioTracks();\n  };\n\n  /**\n   * Get the {@link TextTrackList}\n   *\n   * Text tracks are tracks of timed text events.\n   * - Captions: text displayed over the video\n   *             for the hearing impaired\n   * - Subtitles: text displayed over the video for\n   *              those who don't understand language in the video\n   * - Chapters: text displayed in a menu allowing the user to jump\n   *             to particular points (chapters) in the video\n   * - Descriptions: (not yet implemented) audio descriptions that are read back to\n   *                 the user by a screen reading device\n   *\n   * @see http://www.w3.org/html/wg/drafts/html/master/embedded-content-0.html#dom-media-texttracks\n   *\n   * @return {TextTrackList|undefined}\n   *         The current TextTrackList or undefined if\n   *         or undefined if we don't have a tech\n   */\n\n\n  Player.prototype.textTracks = function textTracks() {\n    // cannot use techGet_ directly because it checks to see whether the tech is ready.\n    // Flash is unlikely to be ready in time but textTracks should still work.\n    if (this.tech_) {\n      return this.tech_.textTracks();\n    }\n  };\n\n  /**\n   * Get the \"remote\" {@link TextTrackList}. Remote Text Tracks\n   * are tracks that were added to the HTML video element and can\n   * be removed, whereas normal texttracks cannot be removed.\n   *\n   *\n   * @return {TextTrackList|undefined}\n   *         The current remote text track list or undefined\n   *         if we don't have a tech\n   */\n\n\n  Player.prototype.remoteTextTracks = function remoteTextTracks() {\n    if (this.tech_) {\n      return this.tech_.remoteTextTracks();\n    }\n  };\n\n  /**\n   * Get the \"remote\" {@link HTMLTrackElementList}.\n   * This gives the user all of the DOM elements that match up\n   * with the remote {@link TextTrackList}.\n   *\n   * @return {HTMLTrackElementList}\n   *         The current remote text track list elements\n   *         or undefined if we don't have a tech\n   */\n\n\n  Player.prototype.remoteTextTrackEls = function remoteTextTrackEls() {\n    if (this.tech_) {\n      return this.tech_.remoteTextTrackEls();\n    }\n  };\n\n  /**\n   * A helper method for adding a {@link TextTrack} to our\n   * {@link TextTrackList}.\n   *\n   * In addition to the W3C settings we allow adding additional info through options.\n   *\n   * @see http://www.w3.org/html/wg/drafts/html/master/embedded-content-0.html#dom-media-addtexttrack\n   *\n   * @param {string} [kind]\n   *        the kind of TextTrack you are adding\n   *\n   * @param {string} [label]\n   *        the label to give the TextTrack label\n   *\n   * @param {string} [language]\n   *        the language to set on the TextTrack\n   *\n   * @return {TextTrack|undefined}\n   *         the TextTrack that was added or undefined\n   *         if there is no tech\n   */\n\n\n  Player.prototype.addTextTrack = function addTextTrack(kind, label, language) {\n    if (this.tech_) {\n      return this.tech_.addTextTrack(kind, label, language);\n    }\n  };\n\n  /**\n   * Create a remote {@link TextTrack} and an {@link HTMLTrackElement}. It will\n   * automatically removed from the video element whenever the source changes, unless\n   * manualCleanup is set to false.\n   *\n   * @param {Object} options\n   *        Options to pass to {@link HTMLTrackElement} during creation. See\n   *        {@link HTMLTrackElement} for object properties that you should use.\n   *\n   * @param {boolean} [manualCleanup=true] if set to false, the TextTrack will be\n   *\n   * @return {HTMLTrackElement}\n   *         the HTMLTrackElement that was created and added\n   *         to the HTMLTrackElementList and the remote\n   *         TextTrackList\n   *\n   * @deprecated The default value of the \"manualCleanup\" parameter will default\n   *             to \"false\" in upcoming versions of Video.js\n   */\n\n\n  Player.prototype.addRemoteTextTrack = function addRemoteTextTrack(options, manualCleanup) {\n    if (this.tech_) {\n      return this.tech_.addRemoteTextTrack(options, manualCleanup);\n    }\n  };\n\n  /**\n   * Remove a remote {@link TextTrack} from the respective\n   * {@link TextTrackList} and {@link HTMLTrackElementList}.\n   *\n   * @param {Object} track\n   *        Remote {@link TextTrack} to remove\n   *\n   * @return {undefined}\n   *         does not return anything\n   */\n\n\n  Player.prototype.removeRemoteTextTrack = function removeRemoteTextTrack() {\n    var _ref3 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n        _ref3$track = _ref3.track,\n        track = _ref3$track === undefined ? arguments[0] : _ref3$track;\n\n    // destructure the input into an object with a track argument, defaulting to arguments[0]\n    // default the whole argument to an empty object if nothing was passed in\n\n    if (this.tech_) {\n      return this.tech_.removeRemoteTextTrack(track);\n    }\n  };\n\n  /**\n   * Get video width\n   *\n   * @return {number}\n   *         current video width\n   */\n\n\n  Player.prototype.videoWidth = function videoWidth() {\n    return this.tech_ && this.tech_.videoWidth && this.tech_.videoWidth() || 0;\n  };\n\n  /**\n   * Get video height\n   *\n   * @return {number}\n   *         current video height\n   */\n\n\n  Player.prototype.videoHeight = function videoHeight() {\n    return this.tech_ && this.tech_.videoHeight && this.tech_.videoHeight() || 0;\n  };\n\n  // Methods to add support for\n  // initialTime: function() { return this.techCall_('initialTime'); },\n  // startOffsetTime: function() { return this.techCall_('startOffsetTime'); },\n  // played: function() { return this.techCall_('played'); },\n  // defaultPlaybackRate: function() { return this.techCall_('defaultPlaybackRate'); },\n  // defaultMuted: function() { return this.techCall_('defaultMuted'); }\n\n  /**\n   * The player's language code\n   * NOTE: The language should be set in the player options if you want the\n   * the controls to be built with a specific language. Changing the lanugage\n   * later will not update controls text.\n   *\n   * @param {string} [code]\n   *        the language code to set the player to\n   *\n   * @return {string|Player}\n   *         - The current language code when getting\n   *         - A reference to the player when setting\n   */\n\n\n  Player.prototype.language = function language(code) {\n    if (code === undefined) {\n      return this.language_;\n    }\n\n    this.language_ = String(code).toLowerCase();\n    return this;\n  };\n\n  /**\n   * Get the player's language dictionary\n   * Merge every time, because a newly added plugin might call videojs.addLanguage() at any time\n   * Languages specified directly in the player options have precedence\n   *\n   * @return {Array}\n   *         An array of of supported languages\n   */\n\n\n  Player.prototype.languages = function languages() {\n    return (0, _mergeOptions2['default'])(Player.prototype.options_.languages, this.languages_);\n  };\n\n  /**\n   * returns a JavaScript object reperesenting the current track\n   * information. **DOES not return it as JSON**\n   *\n   * @return {Object}\n   *         Object representing the current of track info\n   */\n\n\n  Player.prototype.toJSON = function toJSON() {\n    var options = (0, _mergeOptions2['default'])(this.options_);\n    var tracks = options.tracks;\n\n    options.tracks = [];\n\n    for (var i = 0; i < tracks.length; i++) {\n      var track = tracks[i];\n\n      // deep merge tracks and null out player so no circular references\n      track = (0, _mergeOptions2['default'])(track);\n      track.player = undefined;\n      options.tracks[i] = track;\n    }\n\n    return options;\n  };\n\n  /**\n   * Creates a simple modal dialog (an instance of the {@link ModalDialog}\n   * component) that immediately overlays the player with arbitrary\n   * content and removes itself when closed.\n   *\n   * @param {string|Function|Element|Array|null} content\n   *        Same as {@link ModalDialog#content}'s param of the same name.\n   *        The most straight-forward usage is to provide a string or DOM\n   *        element.\n   *\n   * @param {Object} [options]\n   *        Extra options which will be passed on to the {@link ModalDialog}.\n   *\n   * @return {ModalDialog}\n   *         the {@link ModalDialog} that was created\n   */\n\n\n  Player.prototype.createModal = function createModal(content, options) {\n    var _this5 = this;\n\n    options = options || {};\n    options.content = content || '';\n\n    var modal = new _modalDialog2['default'](this, options);\n\n    this.addChild(modal);\n    modal.on('dispose', function () {\n      _this5.removeChild(modal);\n    });\n\n    return modal.open();\n  };\n\n  /**\n   * Gets tag settings\n   *\n   * @param {Element} tag\n   *        The player tag\n   *\n   * @return {Object}\n   *         An object containing all of the settings\n   *         for a player tag\n   */\n\n\n  Player.getTagSettings = function getTagSettings(tag) {\n    var baseOptions = {\n      sources: [],\n      tracks: []\n    };\n\n    var tagOptions = Dom.getElAttributes(tag);\n    var dataSetup = tagOptions['data-setup'];\n\n    if (Dom.hasElClass(tag, 'vjs-fluid')) {\n      tagOptions.fluid = true;\n    }\n\n    // Check if data-setup attr exists.\n    if (dataSetup !== null) {\n      // Parse options JSON\n      // If empty string, make it a parsable json object.\n      var _safeParseTuple = (0, _tuple2['default'])(dataSetup || '{}'),\n          err = _safeParseTuple[0],\n          data = _safeParseTuple[1];\n\n      if (err) {\n        _log2['default'].error(err);\n      }\n      (0, _obj.assign)(tagOptions, data);\n    }\n\n    (0, _obj.assign)(baseOptions, tagOptions);\n\n    // Get tag children settings\n    if (tag.hasChildNodes()) {\n      var children = tag.childNodes;\n\n      for (var i = 0, j = children.length; i < j; i++) {\n        var child = children[i];\n        // Change case needed: http://ejohn.org/blog/nodename-case-sensitivity/\n        var childName = child.nodeName.toLowerCase();\n\n        if (childName === 'source') {\n          baseOptions.sources.push(Dom.getElAttributes(child));\n        } else if (childName === 'track') {\n          baseOptions.tracks.push(Dom.getElAttributes(child));\n        }\n      }\n    }\n\n    return baseOptions;\n  };\n\n  /**\n   * Determine wether or not flexbox is supported\n   *\n   * @return {boolean}\n   *         - true if flexbox is supported\n   *         - false if flexbox is not supported\n   */\n\n\n  Player.prototype.flexNotSupported_ = function flexNotSupported_() {\n    var elem = _document2['default'].createElement('i');\n\n    // Note: We don't actually use flexBasis (or flexOrder), but it's one of the more\n    // common flex features that we can rely on when checking for flex support.\n    return !('flexBasis' in elem.style || 'webkitFlexBasis' in elem.style || 'mozFlexBasis' in elem.style || 'msFlexBasis' in elem.style ||\n    // IE10-specific (2012 flex spec)\n    'msFlexOrder' in elem.style);\n  };\n\n  return Player;\n}(_component2['default']);\n\n/**\n * Global player list\n *\n * @type {Object}\n */\n\n\nPlayer.players = {};\n\nvar navigator = _window2['default'].navigator;\n\n/*\n * Player instance options, surfaced using options\n * options = Player.prototype.options_\n * Make changes in options, not here.\n *\n * @type {Object}\n * @private\n */\nPlayer.prototype.options_ = {\n  // Default order of fallback technology\n  techOrder: ['html5', 'flash'],\n  // techOrder: ['flash','html5'],\n\n  html5: {},\n  flash: {},\n\n  // defaultVolume: 0.85,\n  defaultVolume: 0.00,\n\n  // default inactivity timeout\n  inactivityTimeout: 2000,\n\n  // default playback rates\n  playbackRates: [],\n  // Add playback rate selection by adding rates\n  // 'playbackRates': [0.5, 1, 1.5, 2],\n\n  // Included control sets\n  children: ['mediaLoader', 'posterImage', 'textTrackDisplay', 'loadingSpinner', 'bigPlayButton', 'controlBar', 'errorDisplay', 'textTrackSettings'],\n\n  language: navigator && (navigator.languages && navigator.languages[0] || navigator.userLanguage || navigator.language) || 'en',\n\n  // locales and their language translations\n  languages: {},\n\n  // Default message to show when a video cannot be played.\n  notSupportedMessage: 'No compatible source was found for this media.'\n};\n\n[\n/**\n * Returns whether or not the player is in the \"ended\" state.\n *\n * @return {Boolean} True if the player is in the ended state, false if not.\n * @method Player#ended\n */\n'ended',\n/**\n * Returns whether or not the player is in the \"seeking\" state.\n *\n * @return {Boolean} True if the player is in the seeking state, false if not.\n * @method Player#seeking\n */\n'seeking',\n/**\n * Returns the TimeRanges of the media that are currently available\n * for seeking to.\n *\n * @return {TimeRanges} the seekable intervals of the media timeline\n * @method Player#seekable\n */\n'seekable',\n/**\n * Returns the current state of network activity for the element, from\n * the codes in the list below.\n * - NETWORK_EMPTY (numeric value 0)\n *   The element has not yet been initialised. All attributes are in\n *   their initial states.\n * - NETWORK_IDLE (numeric value 1)\n *   The element's resource selection algorithm is active and has\n *   selected a resource, but it is not actually using the network at\n *   this time.\n * - NETWORK_LOADING (numeric value 2)\n *   The user agent is actively trying to download data.\n * - NETWORK_NO_SOURCE (numeric value 3)\n *   The element's resource selection algorithm is active, but it has\n *   not yet found a resource to use.\n *\n * @see https://html.spec.whatwg.org/multipage/embedded-content.html#network-states\n * @return {number} the current network activity state\n * @method Player#networkState\n */\n'networkState',\n/**\n * Returns a value that expresses the current state of the element\n * with respect to rendering the current playback position, from the\n * codes in the list below.\n * - HAVE_NOTHING (numeric value 0)\n *   No information regarding the media resource is available.\n * - HAVE_METADATA (numeric value 1)\n *   Enough of the resource has been obtained that the duration of the\n *   resource is available.\n * - HAVE_CURRENT_DATA (numeric value 2)\n *   Data for the immediate current playback position is available.\n * - HAVE_FUTURE_DATA (numeric value 3)\n *   Data for the immediate current playback position is available, as\n *   well as enough data for the user agent to advance the current\n *   playback position in the direction of playback.\n * - HAVE_ENOUGH_DATA (numeric value 4)\n *   The user agent estimates that enough data is available for\n *   playback to proceed uninterrupted.\n *\n * @see https://html.spec.whatwg.org/multipage/embedded-content.html#dom-media-readystate\n * @return {number} the current playback rendering state\n * @method Player#readyState\n */\n'readyState'].forEach(function (fn) {\n  Player.prototype[fn] = function () {\n    return this.techGet_(fn);\n  };\n});\n\nTECH_EVENTS_RETRIGGER.forEach(function (event) {\n  Player.prototype['handleTech' + (0, _toTitleCase2['default'])(event) + '_'] = function () {\n    return this.trigger(event);\n  };\n});\n\n/**\n * Fired when the player has initial duration and dimension information\n *\n * @event Player#loadedmetadata\n * @type {EventTarget~Event}\n */\n\n/**\n * Fired when the player has downloaded data at the current playback position\n *\n * @event Player#loadeddata\n * @type {EventTarget~Event}\n */\n\n/**\n * Fired when the current playback position has changed *\n * During playback this is fired every 15-250 milliseconds, depending on the\n * playback technology in use.\n *\n * @event Player#timeupdate\n * @type {EventTarget~Event}\n */\n\n/**\n * Fired when the volume changes\n *\n * @event Player#volumechange\n * @type {EventTarget~Event}\n */\n\n_component2['default'].registerComponent('Player', Player);\nexports['default'] = Player;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/video.js/es5/player.js\n ** module id = 21\n ** module chunks = 0 1\n **/","'use strict';\n\nexports.__esModule = true;\nexports.createTimeRange = undefined;\nexports.createTimeRanges = createTimeRanges;\n\nvar _log = require('./log.js');\n\nvar _log2 = _interopRequireDefault(_log);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\n/**\n * Returns the time for the specified index at the start or end\n * of a TimeRange object.\n *\n * @function time-ranges:indexFunction\n *\n * @param {number} [index=0]\n *        The range number to return the time for.\n *\n * @return {number}\n *         The time that offset at the specified index.\n *\n * @depricated index must be set to a value, in the future this will throw an error.\n */\n\n/**\n * An object that contains ranges of time for various reasons.\n *\n * @typedef {Object} TimeRange\n *\n * @property {number} length\n *           The number of time ranges represented by this Object\n *\n * @property {time-ranges:indexFunction} start\n *           Returns the time offset at which a specified time range begins.\n *\n * @property {time-ranges:indexFunction} end\n *           Returns the time offset at which a specified time range begins.\n *\n * @see https://developer.mozilla.org/en-US/docs/Web/API/TimeRanges\n */\n\n/**\n * Check if any of the time ranges are over the maximum index.\n *\n * @param {string} fnName\n *        The function name to use for logging\n *\n * @param {number} index\n *        The index to check\n *\n * @param {number} maxIndex\n *        The maximum possible index\n *\n * @throws {Error} if the timeRanges provided are over the maxIndex\n */\nfunction rangeCheck(fnName, index, maxIndex) {\n  if (index < 0 || index > maxIndex) {\n    throw new Error('Failed to execute \\'' + fnName + '\\' on \\'TimeRanges\\': The index provided (' + index + ') is greater than or equal to the maximum bound (' + maxIndex + ').');\n  }\n}\n\n/**\n * Check if any of the time ranges are over the maximum index.\n *\n * @param {string} fnName\n *        The function name to use for logging\n *\n * @param {string} valueIndex\n *        The proprety that should be used to get the time. should be 'start' or 'end'\n *\n * @param {Array} ranges\n *        An array of time ranges\n *\n * @param {Array} [rangeIndex=0]\n *        The index to start the search at\n *\n * @return {number}\n *         The time that offset at the specified index.\n *\n *\n * @depricated rangeIndex must be set to a value, in the future this will throw an error.\n * @throws {Error} if rangeIndex is more than the length of ranges\n */\n/**\n * @file time-ranges.js\n * @module time-ranges\n */\nfunction getRange(fnName, valueIndex, ranges, rangeIndex) {\n  if (rangeIndex === undefined) {\n    _log2['default'].warn('DEPRECATED: Function \\'' + fnName + '\\' on \\'TimeRanges\\' called without an index argument.');\n    rangeIndex = 0;\n  }\n  rangeCheck(fnName, rangeIndex, ranges.length - 1);\n  return ranges[rangeIndex][valueIndex];\n}\n\n/**\n * Create a time range object givent ranges of time.\n *\n * @param {Array} [ranges]\n *        An array of time ranges.\n */\nfunction createTimeRangesObj(ranges) {\n  if (ranges === undefined || ranges.length === 0) {\n    return {\n      length: 0,\n      start: function start() {\n        throw new Error('This TimeRanges object is empty');\n      },\n      end: function end() {\n        throw new Error('This TimeRanges object is empty');\n      }\n    };\n  }\n  return {\n    length: ranges.length,\n    start: getRange.bind(null, 'start', 0, ranges),\n    end: getRange.bind(null, 'end', 1, ranges)\n  };\n}\n\n/**\n * Should create a fake `TimeRange` object which mimics an HTML5 time range instance.\n *\n * @param {number|Array} start\n *        The start of a single range or an array of ranges\n *\n * @param {number} end\n *        The end of a single range.\n *\n * @private\n */\nfunction createTimeRanges(start, end) {\n  if (Array.isArray(start)) {\n    return createTimeRangesObj(start);\n  } else if (start === undefined || end === undefined) {\n    return createTimeRangesObj();\n  }\n  return createTimeRangesObj([[start, end]]);\n}\n\nexports.createTimeRange = createTimeRanges;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/video.js/es5/utils/time-ranges.js\n ** module id = 22\n ** module chunks = 0 1\n **/","'use strict';\n\nexports.__esModule = true;\nexports.bufferedPercent = bufferedPercent;\n\nvar _timeRanges = require('./time-ranges.js');\n\n/**\n * Compute the percentage of the media that has been buffered.\n *\n * @param {TimeRange} buffered\n *        The current `TimeRange` object representing buffered time ranges\n *\n * @param {number} duration\n *        Total duration of the media\n *\n * @return {number}\n *         Percent buffered of the total duration in decimal form.\n */\nfunction bufferedPercent(buffered, duration) {\n  var bufferedDuration = 0;\n  var start = void 0;\n  var end = void 0;\n\n  if (!duration) {\n    return 0;\n  }\n\n  if (!buffered || !buffered.length) {\n    buffered = (0, _timeRanges.createTimeRange)(0, 0);\n  }\n\n  for (var i = 0; i < buffered.length; i++) {\n    start = buffered.start(i);\n    end = buffered.end(i);\n\n    // buffered end can be bigger than duration by a very small fraction\n    if (end > duration) {\n      end = duration;\n    }\n\n    bufferedDuration += end - start;\n  }\n\n  return bufferedDuration / duration;\n} /**\n   * @file buffer.js\n   * @module buffer\n   */\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/video.js/es5/utils/buffer.js\n ** module id = 23\n ** module chunks = 0 1\n **/","'use strict';\n\nexports.__esModule = true;\n\nvar _document = require('global/document');\n\nvar _document2 = _interopRequireDefault(_document);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\n/**\n * Store the browser-specific methods for the fullscreen API.\n *\n * @type {Object}\n * @see [Specification]{@link https://fullscreen.spec.whatwg.org}\n * @see [Map Approach From Screenfull.js]{@link https://github.com/sindresorhus/screenfull.js}\n */\nvar FullscreenApi = {};\n\n// browser API methods\n/**\n * @file fullscreen-api.js\n * @module fullscreen-api\n * @private\n */\nvar apiMap = [['requestFullscreen', 'exitFullscreen', 'fullscreenElement', 'fullscreenEnabled', 'fullscreenchange', 'fullscreenerror'],\n// WebKit\n['webkitRequestFullscreen', 'webkitExitFullscreen', 'webkitFullscreenElement', 'webkitFullscreenEnabled', 'webkitfullscreenchange', 'webkitfullscreenerror'],\n// Old WebKit (Safari 5.1)\n['webkitRequestFullScreen', 'webkitCancelFullScreen', 'webkitCurrentFullScreenElement', 'webkitCancelFullScreen', 'webkitfullscreenchange', 'webkitfullscreenerror'],\n// Mozilla\n['mozRequestFullScreen', 'mozCancelFullScreen', 'mozFullScreenElement', 'mozFullScreenEnabled', 'mozfullscreenchange', 'mozfullscreenerror'],\n// Microsoft\n['msRequestFullscreen', 'msExitFullscreen', 'msFullscreenElement', 'msFullscreenEnabled', 'MSFullscreenChange', 'MSFullscreenError']];\n\nvar specApi = apiMap[0];\nvar browserApi = void 0;\n\n// determine the supported set of functions\nfor (var i = 0; i < apiMap.length; i++) {\n  // check for exitFullscreen function\n  if (apiMap[i][1] in _document2['default']) {\n    browserApi = apiMap[i];\n    break;\n  }\n}\n\n// map the browser API names to the spec API names\nif (browserApi) {\n  for (var _i = 0; _i < browserApi.length; _i++) {\n    FullscreenApi[specApi[_i]] = browserApi[_i];\n  }\n}\n\nexports['default'] = FullscreenApi;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/video.js/es5/fullscreen-api.js\n ** module id = 24\n ** module chunks = 0 1\n **/","'use strict';\n\nexports.__esModule = true;\n\nvar _obj = require('./utils/obj');\n\n/**\n * A Custom `MediaError` class which mimics the standard HTML5 `MediaError` class.\n *\n * @param {number|string|Object|MediaError} value\n *        This can be of multiple types:\n *        - number: should be a standard error code\n *        - string: an error message (the code will be 0)\n *        - Object: arbitrary properties\n *        - `MediaError` (native): used to populate a video.js `MediaError` object\n *        - `MediaError` (video.js): will return itself if it's already a\n *          video.js `MediaError` object.\n *\n * @see [MediaError Spec]{@link https://dev.w3.org/html5/spec-author-view/video.html#mediaerror}\n * @see [Encrypted MediaError Spec]{@link https://www.w3.org/TR/2013/WD-encrypted-media-20130510/#error-codes}\n *\n * @class MediaError\n */\nfunction MediaError(value) {\n\n  // Allow redundant calls to this constructor to avoid having `instanceof`\n  // checks peppered around the code.\n  if (value instanceof MediaError) {\n    return value;\n  }\n\n  if (typeof value === 'number') {\n    this.code = value;\n  } else if (typeof value === 'string') {\n    // default code is zero, so this is a custom error\n    this.message = value;\n  } else if ((0, _obj.isObject)(value)) {\n\n    // We assign the `code` property manually because native `MediaError` objects\n    // do not expose it as an own/enumerable property of the object.\n    if (typeof value.code === 'number') {\n      this.code = value.code;\n    }\n\n    (0, _obj.assign)(this, value);\n  }\n\n  if (!this.message) {\n    this.message = MediaError.defaultMessages[this.code] || '';\n  }\n}\n\n/**\n * The error code that refers two one of the defined `MediaError` types\n *\n * @type {Number}\n */\n/**\n * @file media-error.js\n */\nMediaError.prototype.code = 0;\n\n/**\n * An optional message that to show with the error. Message is not part of the HTML5\n * video spec but allows for more informative custom errors.\n *\n * @type {String}\n */\nMediaError.prototype.message = '';\n\n/**\n * An optional status code that can be set by plugins to allow even more detail about\n * the error. For example a plugin might provide a specific HTTP status code and an\n * error message for that code. Then when the plugin gets that error this class will\n * know how to display an error message for it. This allows a custom message to show\n * up on the `Player` error overlay.\n *\n * @type {Array}\n */\nMediaError.prototype.status = null;\n\n/**\n * Errors indexed by the W3C standard. The order **CANNOT CHANGE**! See the\n * specification listed under {@link MediaError} for more information.\n *\n * @enum {array}\n * @readonly\n * @property {string} 0 - MEDIA_ERR_CUSTOM\n * @property {string} 1 - MEDIA_ERR_CUSTOM\n * @property {string} 2 - MEDIA_ERR_ABORTED\n * @property {string} 3 - MEDIA_ERR_NETWORK\n * @property {string} 4 - MEDIA_ERR_SRC_NOT_SUPPORTED\n * @property {string} 5 - MEDIA_ERR_ENCRYPTED\n */\nMediaError.errorTypes = ['MEDIA_ERR_CUSTOM', 'MEDIA_ERR_ABORTED', 'MEDIA_ERR_NETWORK', 'MEDIA_ERR_DECODE', 'MEDIA_ERR_SRC_NOT_SUPPORTED', 'MEDIA_ERR_ENCRYPTED'];\n\n/**\n * The default `MediaError` messages based on the {@link MediaError.errorTypes}.\n *\n * @type {Array}\n * @constant\n */\nMediaError.defaultMessages = {\n  1: 'You aborted the media playback',\n  2: 'A network error caused the media download to fail part-way.',\n  3: 'The media playback was aborted due to a corruption problem or because the media used features your browser did not support.',\n  4: 'The media could not be loaded, either because the server or network failed or because the format is not supported.',\n  5: 'The media is encrypted and we do not have the keys to decrypt it.'\n};\n\n// Add types as properties on MediaError\n// e.g. MediaError.MEDIA_ERR_SRC_NOT_SUPPORTED = 4;\nfor (var errNum = 0; errNum < MediaError.errorTypes.length; errNum++) {\n  MediaError[MediaError.errorTypes[errNum]] = errNum;\n  // values should be accessible on both the class and instance\n  MediaError.prototype[MediaError.errorTypes[errNum]] = errNum;\n}\n\n// jsdocs for instance/static members added above\n// instance methods use `#` and static methods use `.`\n/**\n * W3C error code for any custom error.\n *\n * @member MediaError#MEDIA_ERR_CUSTOM\n * @constant {number}\n * @default 0\n */\n/**\n * W3C error code for any custom error.\n *\n * @member MediaError.MEDIA_ERR_CUSTOM\n * @constant {number}\n * @default 0\n */\n\n/**\n * W3C error code for media error aborted.\n *\n * @member MediaError#MEDIA_ERR_ABORTED\n * @constant {number}\n * @default 1\n */\n/**\n * W3C error code for media error aborted.\n *\n * @member MediaError.MEDIA_ERR_ABORTED\n * @constant {number}\n * @default 1\n */\n\n/**\n * W3C error code for any network error.\n *\n * @member MediaError#MEDIA_ERR_NETWORK\n * @constant {number}\n * @default 2\n */\n/**\n * W3C error code for any network error.\n *\n * @member MediaError.MEDIA_ERR_NETWORK\n * @constant {number}\n * @default 2\n */\n\n/**\n * W3C error code for any decoding error.\n *\n * @member MediaError#MEDIA_ERR_DECODE\n * @constant {number}\n * @default 3\n */\n/**\n * W3C error code for any decoding error.\n *\n * @member MediaError.MEDIA_ERR_DECODE\n * @constant {number}\n * @default 3\n */\n\n/**\n * W3C error code for any time that a source is not supported.\n *\n * @member MediaError#MEDIA_ERR_SRC_NOT_SUPPORTED\n * @constant {number}\n * @default 4\n */\n/**\n * W3C error code for any time that a source is not supported.\n *\n * @member MediaError.MEDIA_ERR_SRC_NOT_SUPPORTED\n * @constant {number}\n * @default 4\n */\n\n/**\n * W3C error code for any time that a source is encrypted.\n *\n * @member MediaError#MEDIA_ERR_ENCRYPTED\n * @constant {number}\n * @default 5\n */\n/**\n * W3C error code for any time that a source is encrypted.\n *\n * @member MediaError.MEDIA_ERR_ENCRYPTED\n * @constant {number}\n * @default 5\n */\n\nexports['default'] = MediaError;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/video.js/es5/media-error.js\n ** module id = 25\n ** module chunks = 0 1\n **/","module.exports = SafeParseTuple\n\nfunction SafeParseTuple(obj, reviver) {\n    var json\n    var error = null\n\n    try {\n        json = JSON.parse(obj, reviver)\n    } catch (err) {\n        error = err\n    }\n\n    return [error, json]\n}\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/safe-json-parse/tuple.js\n ** module id = 26\n ** module chunks = 0 1\n **/","'use strict';\n\nexports.__esModule = true;\n/**\n * @file text-track-list-converter.js Utilities for capturing text track state and\n * re-creating tracks based on a capture.\n *\n * @module text-track-list-converter\n */\n\n/**\n * Examine a single {@link TextTrack} and return a JSON-compatible javascript object that\n * represents the {@link TextTrack}'s state.\n *\n * @param {TextTrack} track\n *        The text track to query.\n *\n * @return {Object}\n *         A serializable javascript representation of the TextTrack.\n * @private\n */\nvar trackToJson_ = function trackToJson_(track) {\n  var ret = ['kind', 'label', 'language', 'id', 'inBandMetadataTrackDispatchType', 'mode', 'src'].reduce(function (acc, prop, i) {\n\n    if (track[prop]) {\n      acc[prop] = track[prop];\n    }\n\n    return acc;\n  }, {\n    cues: track.cues && Array.prototype.map.call(track.cues, function (cue) {\n      return {\n        startTime: cue.startTime,\n        endTime: cue.endTime,\n        text: cue.text,\n        id: cue.id\n      };\n    })\n  });\n\n  return ret;\n};\n\n/**\n * Examine a {@link Tech} and return a JSON-compatible javascript array that represents the\n * state of all {@link TextTrack}s currently configured. The return array is compatible with\n * {@link text-track-list-converter:jsonToTextTracks}.\n *\n * @param {Tech} tech\n *        The tech object to query\n *\n * @return {Array}\n *         A serializable javascript representation of the {@link Tech}s\n *         {@link TextTrackList}.\n */\nvar textTracksToJson = function textTracksToJson(tech) {\n\n  var trackEls = tech.$$('track');\n\n  var trackObjs = Array.prototype.map.call(trackEls, function (t) {\n    return t.track;\n  });\n  var tracks = Array.prototype.map.call(trackEls, function (trackEl) {\n    var json = trackToJson_(trackEl.track);\n\n    if (trackEl.src) {\n      json.src = trackEl.src;\n    }\n    return json;\n  });\n\n  return tracks.concat(Array.prototype.filter.call(tech.textTracks(), function (track) {\n    return trackObjs.indexOf(track) === -1;\n  }).map(trackToJson_));\n};\n\n/**\n * Create a set of remote {@link TextTrack}s on a {@link Tech} based on an array of javascript\n * object {@link TextTrack} representations.\n *\n * @param {Array} json\n *        An array of `TextTrack` representation objects, like those that would be\n *        produced by `textTracksToJson`.\n *\n * @param {Tech} tech\n *        The `Tech` to create the `TextTrack`s on.\n */\nvar jsonToTextTracks = function jsonToTextTracks(json, tech) {\n  json.forEach(function (track) {\n    var addedTrack = tech.addRemoteTextTrack(track).track;\n\n    if (!track.src && track.cues) {\n      track.cues.forEach(function (cue) {\n        return addedTrack.addCue(cue);\n      });\n    }\n  });\n\n  return tech.textTracks();\n};\n\nexports['default'] = { textTracksToJson: textTracksToJson, jsonToTextTracks: jsonToTextTracks, trackToJson_: trackToJson_ };\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/video.js/es5/tracks/text-track-list-converter.js\n ** module id = 27\n ** module chunks = 0 1\n **/","'use strict';\n\nexports.__esModule = true;\n\nvar _dom = require('./utils/dom');\n\nvar Dom = _interopRequireWildcard(_dom);\n\nvar _fn = require('./utils/fn');\n\nvar Fn = _interopRequireWildcard(_fn);\n\nvar _component = require('./component');\n\nvar _component2 = _interopRequireDefault(_component);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj['default'] = obj; return newObj; } }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /**\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * @file modal-dialog.js\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                */\n\n\nvar MODAL_CLASS_NAME = 'vjs-modal-dialog';\nvar ESC = 27;\n\n/**\n * The `ModalDialog` displays over the video and its controls, which blocks\n * interaction with the player until it is closed.\n *\n * Modal dialogs include a \"Close\" button and will close when that button\n * is activated - or when ESC is pressed anywhere.\n *\n * @extends Component\n */\n\nvar ModalDialog = function (_Component) {\n  _inherits(ModalDialog, _Component);\n\n  /**\n   * Create an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   *\n   * @param {Mixed} [options.content=undefined]\n   *        Provide customized content for this modal.\n   *\n   * @param {string} [options.description]\n   *        A text description for the modal, primarily for accessibility.\n   *\n   * @param {boolean} [options.fillAlways=false]\n   *        Normally, modals are automatically filled only the first time\n   *        they open. This tells the modal to refresh its content\n   *        every time it opens.\n   *\n   * @param {string} [options.label]\n   *        A text label for the modal, primarily for accessibility.\n   *\n   * @param {boolean} [options.temporary=true]\n   *        If `true`, the modal can only be opened once; it will be\n   *        disposed as soon as it's closed.\n   *\n   * @param {boolean} [options.uncloseable=false]\n   *        If `true`, the user will not be able to close the modal\n   *        through the UI in the normal ways. Programmatic closing is\n   *        still possible.\n   */\n  function ModalDialog(player, options) {\n    _classCallCheck(this, ModalDialog);\n\n    var _this = _possibleConstructorReturn(this, _Component.call(this, player, options));\n\n    _this.opened_ = _this.hasBeenOpened_ = _this.hasBeenFilled_ = false;\n\n    _this.closeable(!_this.options_.uncloseable);\n    _this.content(_this.options_.content);\n\n    // Make sure the contentEl is defined AFTER any children are initialized\n    // because we only want the contents of the modal in the contentEl\n    // (not the UI elements like the close button).\n    _this.contentEl_ = Dom.createEl('div', {\n      className: MODAL_CLASS_NAME + '-content'\n    }, {\n      role: 'document'\n    });\n\n    _this.descEl_ = Dom.createEl('p', {\n      className: MODAL_CLASS_NAME + '-description vjs-offscreen',\n      id: _this.el().getAttribute('aria-describedby')\n    });\n\n    Dom.textContent(_this.descEl_, _this.description());\n    _this.el_.appendChild(_this.descEl_);\n    _this.el_.appendChild(_this.contentEl_);\n    return _this;\n  }\n\n  /**\n   * Create the `ModalDialog`'s DOM element\n   *\n   * @return {Element}\n   *         The DOM element that gets created.\n   */\n\n\n  ModalDialog.prototype.createEl = function createEl() {\n    return _Component.prototype.createEl.call(this, 'div', {\n      className: this.buildCSSClass(),\n      tabIndex: -1\n    }, {\n      'aria-describedby': this.id() + '_description',\n      'aria-hidden': 'true',\n      'aria-label': this.label(),\n      'role': 'dialog'\n    });\n  };\n\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n\n\n  ModalDialog.prototype.buildCSSClass = function buildCSSClass() {\n    return MODAL_CLASS_NAME + ' vjs-hidden ' + _Component.prototype.buildCSSClass.call(this);\n  };\n\n  /**\n   * Handles `keydown` events on the document, looking for ESC, which closes\n   * the modal.\n   *\n   * @param {EventTarget~Event} e\n   *        The keypress that triggered this event.\n   *\n   * @listens keydown\n   */\n\n\n  ModalDialog.prototype.handleKeyPress = function handleKeyPress(e) {\n    if (e.which === ESC && this.closeable()) {\n      this.close();\n    }\n  };\n\n  /**\n   * Returns the label string for this modal. Primarily used for accessibility.\n   *\n   * @return {string}\n   *         the localized or raw label of this modal.\n   */\n\n\n  ModalDialog.prototype.label = function label() {\n    return this.options_.label || this.localize('Modal Window');\n  };\n\n  /**\n   * Returns the description string for this modal. Primarily used for\n   * accessibility.\n   *\n   * @return {string}\n   *         The localized or raw description of this modal.\n   */\n\n\n  ModalDialog.prototype.description = function description() {\n    var desc = this.options_.description || this.localize('This is a modal window.');\n\n    // Append a universal closeability message if the modal is closeable.\n    if (this.closeable()) {\n      desc += ' ' + this.localize('This modal can be closed by pressing the Escape key or activating the close button.');\n    }\n\n    return desc;\n  };\n\n  /**\n   * Opens the modal.\n   *\n   * @fires ModalDialog#beforemodalopen\n   * @fires ModalDialog#modalopen\n   *\n   * @return {ModalDialog}\n   *         Returns itself; method can be chained.\n   */\n\n\n  ModalDialog.prototype.open = function open() {\n    if (!this.opened_) {\n      var player = this.player();\n\n      /**\n       * Fired just before a `ModalDialog` is opened.\n       *\n       * @event ModalDialog#beforemodalopen\n       * @type {EventTarget~Event}\n       */\n      this.trigger('beforemodalopen');\n      this.opened_ = true;\n\n      // Fill content if the modal has never opened before and\n      // never been filled.\n      if (this.options_.fillAlways || !this.hasBeenOpened_ && !this.hasBeenFilled_) {\n        this.fill();\n      }\n\n      // If the player was playing, pause it and take note of its previously\n      // playing state.\n      this.wasPlaying_ = !player.paused();\n\n      if (this.wasPlaying_) {\n        player.pause();\n      }\n\n      if (this.closeable()) {\n        this.on(this.el_.ownerDocument, 'keydown', Fn.bind(this, this.handleKeyPress));\n      }\n\n      player.controls(false);\n      this.show();\n      this.el().setAttribute('aria-hidden', 'false');\n\n      /**\n       * Fired just after a `ModalDialog` is opened.\n       *\n       * @event ModalDialog#modalopen\n       * @type {EventTarget~Event}\n       */\n      this.trigger('modalopen');\n      this.hasBeenOpened_ = true;\n    }\n    return this;\n  };\n\n  /**\n   * If the `ModalDialog` is currently open or closed.\n   *\n   * @param  {boolean} [value]\n   *         If given, it will open (`true`) or close (`false`) the modal.\n   *\n   * @return {boolean}\n   *         the current open state of the modaldialog\n   */\n\n\n  ModalDialog.prototype.opened = function opened(value) {\n    if (typeof value === 'boolean') {\n      this[value ? 'open' : 'close']();\n    }\n    return this.opened_;\n  };\n\n  /**\n   * Closes the modal, does nothing if the `ModalDialog` is\n   * not open.\n   *\n   * @fires ModalDialog#beforemodalclose\n   * @fires ModalDialog#modalclose\n   *\n   * @return {ModalDialog}\n   *         Returns itself; method can be chained.\n   */\n\n\n  ModalDialog.prototype.close = function close() {\n    if (this.opened_) {\n      var player = this.player();\n\n      /**\n       * Fired just before a `ModalDialog` is closed.\n       *\n       * @event ModalDialog#beforemodalclose\n       * @type {EventTarget~Event}\n       */\n      this.trigger('beforemodalclose');\n      this.opened_ = false;\n\n      if (this.wasPlaying_) {\n        player.play();\n      }\n\n      if (this.closeable()) {\n        this.off(this.el_.ownerDocument, 'keydown', Fn.bind(this, this.handleKeyPress));\n      }\n\n      player.controls(true);\n      this.hide();\n      this.el().setAttribute('aria-hidden', 'true');\n\n      /**\n       * Fired just after a `ModalDialog` is closed.\n       *\n       * @event ModalDialog#modalclose\n       * @type {EventTarget~Event}\n       */\n      this.trigger('modalclose');\n\n      if (this.options_.temporary) {\n        this.dispose();\n      }\n    }\n    return this;\n  };\n\n  /**\n   * Check to see if the `ModalDialog` is closeable via the UI.\n   *\n   * @param  {boolean} [value]\n   *         If given as a boolean, it will set the `closeable` option.\n   *\n   * @return {boolean}\n   *         Returns the final value of the closable option.\n   */\n\n\n  ModalDialog.prototype.closeable = function closeable(value) {\n    if (typeof value === 'boolean') {\n      var closeable = this.closeable_ = !!value;\n      var close = this.getChild('closeButton');\n\n      // If this is being made closeable and has no close button, add one.\n      if (closeable && !close) {\n\n        // The close button should be a child of the modal - not its\n        // content element, so temporarily change the content element.\n        var temp = this.contentEl_;\n\n        this.contentEl_ = this.el_;\n        close = this.addChild('closeButton', { controlText: 'Close Modal Dialog' });\n        this.contentEl_ = temp;\n        this.on(close, 'close', this.close);\n      }\n\n      // If this is being made uncloseable and has a close button, remove it.\n      if (!closeable && close) {\n        this.off(close, 'close', this.close);\n        this.removeChild(close);\n        close.dispose();\n      }\n    }\n    return this.closeable_;\n  };\n\n  /**\n   * Fill the modal's content element with the modal's \"content\" option.\n   * The content element will be emptied before this change takes place.\n   *\n   * @return {ModalDialog}\n   *         Returns itself; method can be chained.\n   */\n\n\n  ModalDialog.prototype.fill = function fill() {\n    return this.fillWith(this.content());\n  };\n\n  /**\n   * Fill the modal's content element with arbitrary content.\n   * The content element will be emptied before this change takes place.\n   *\n   * @fires ModalDialog#beforemodalfill\n   * @fires ModalDialog#modalfill\n   *\n   * @param  {Mixed} [content]\n   *         The same rules apply to this as apply to the `content` option.\n   *\n   * @return {ModalDialog}\n   *         Returns itself; method can be chained.\n   */\n\n\n  ModalDialog.prototype.fillWith = function fillWith(content) {\n    var contentEl = this.contentEl();\n    var parentEl = contentEl.parentNode;\n    var nextSiblingEl = contentEl.nextSibling;\n\n    /**\n     * Fired just before a `ModalDialog` is filled with content.\n     *\n     * @event ModalDialog#beforemodalfill\n     * @type {EventTarget~Event}\n     */\n    this.trigger('beforemodalfill');\n    this.hasBeenFilled_ = true;\n\n    // Detach the content element from the DOM before performing\n    // manipulation to avoid modifying the live DOM multiple times.\n    parentEl.removeChild(contentEl);\n    this.empty();\n    Dom.insertContent(contentEl, content);\n    /**\n     * Fired just after a `ModalDialog` is filled with content.\n     *\n     * @event ModalDialog#modalfill\n     * @type {EventTarget~Event}\n     */\n    this.trigger('modalfill');\n\n    // Re-inject the re-filled content element.\n    if (nextSiblingEl) {\n      parentEl.insertBefore(contentEl, nextSiblingEl);\n    } else {\n      parentEl.appendChild(contentEl);\n    }\n\n    return this;\n  };\n\n  /**\n   * Empties the content element. This happens anytime the modal is filled.\n   *\n   * @fires ModalDialog#beforemodalempty\n   * @fires ModalDialog#modalempty\n   *\n   * @return {ModalDialog}\n   *         Returns itself; method can be chained.\n   */\n\n\n  ModalDialog.prototype.empty = function empty() {\n    /**\n     * Fired just before a `ModalDialog` is emptied.\n     *\n     * @event ModalDialog#beforemodalempty\n     * @type {EventTarget~Event}\n     */\n    this.trigger('beforemodalempty');\n    Dom.emptyEl(this.contentEl());\n\n    /**\n     * Fired just after a `ModalDialog` is emptied.\n     *\n     * @event ModalDialog#modalempty\n     * @type {EventTarget~Event}\n     */\n    this.trigger('modalempty');\n    return this;\n  };\n\n  /**\n   * Gets or sets the modal content, which gets normalized before being\n   * rendered into the DOM.\n   *\n   * This does not update the DOM or fill the modal, but it is called during\n   * that process.\n   *\n   * @param  {Mixed} [value]\n   *         If defined, sets the internal content value to be used on the\n   *         next call(s) to `fill`. This value is normalized before being\n   *         inserted. To \"clear\" the internal content value, pass `null`.\n   *\n   * @return {Mixed}\n   *         The current content of the modal dialog\n   */\n\n\n  ModalDialog.prototype.content = function content(value) {\n    if (typeof value !== 'undefined') {\n      this.content_ = value;\n    }\n    return this.content_;\n  };\n\n  return ModalDialog;\n}(_component2['default']);\n\n/**\n * Default options for `ModalDialog` default options.\n *\n * @type {Object}\n * @private\n */\n\n\nModalDialog.prototype.options_ = {\n  temporary: true\n};\n\n_component2['default'].registerComponent('ModalDialog', ModalDialog);\nexports['default'] = ModalDialog;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/video.js/es5/modal-dialog.js\n ** module id = 28\n ** module chunks = 0 1\n **/","'use strict';\n\nexports.__esModule = true;\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nvar _component = require('../component');\n\nvar _component2 = _interopRequireDefault(_component);\n\nvar _htmlTrackElement = require('../tracks/html-track-element');\n\nvar _htmlTrackElement2 = _interopRequireDefault(_htmlTrackElement);\n\nvar _htmlTrackElementList = require('../tracks/html-track-element-list');\n\nvar _htmlTrackElementList2 = _interopRequireDefault(_htmlTrackElementList);\n\nvar _mergeOptions = require('../utils/merge-options.js');\n\nvar _mergeOptions2 = _interopRequireDefault(_mergeOptions);\n\nvar _textTrack = require('../tracks/text-track');\n\nvar _textTrack2 = _interopRequireDefault(_textTrack);\n\nvar _textTrackList = require('../tracks/text-track-list');\n\nvar _textTrackList2 = _interopRequireDefault(_textTrackList);\n\nvar _videoTrackList = require('../tracks/video-track-list');\n\nvar _videoTrackList2 = _interopRequireDefault(_videoTrackList);\n\nvar _audioTrackList = require('../tracks/audio-track-list');\n\nvar _audioTrackList2 = _interopRequireDefault(_audioTrackList);\n\nvar _fn = require('../utils/fn.js');\n\nvar Fn = _interopRequireWildcard(_fn);\n\nvar _log = require('../utils/log.js');\n\nvar _log2 = _interopRequireDefault(_log);\n\nvar _timeRanges = require('../utils/time-ranges.js');\n\nvar _buffer = require('../utils/buffer.js');\n\nvar _mediaError = require('../media-error.js');\n\nvar _mediaError2 = _interopRequireDefault(_mediaError);\n\nvar _window = require('global/window');\n\nvar _window2 = _interopRequireDefault(_window);\n\nvar _document = require('global/document');\n\nvar _document2 = _interopRequireDefault(_document);\n\nvar _obj = require('../utils/obj');\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj['default'] = obj; return newObj; } }\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /**\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * @file tech.js\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                */\n\n/**\n * An Object containing a structure like: `{src: 'url', type: 'mimetype'}` or string\n * that just contains the src url alone.\n * * `var SourceObject = {src: 'http://ex.com/video.mp4', type: 'video/mp4'};`\n   * `var SourceString = 'http://example.com/some-video.mp4';`\n *\n * @typedef {Object|string} Tech~SourceObject\n *\n * @property {string} src\n *           The url to the source\n *\n * @property {string} type\n *           The mime type of the source\n */\n\n/**\n * A function used by {@link Tech} to create a new {@link TextTrack}.\n *\n * @param {Tech} self\n *        An instance of the Tech class.\n *\n * @param {string} kind\n *        `TextTrack` kind (subtitles, captions, descriptions, chapters, or metadata)\n *\n * @param {string} [label]\n *        Label to identify the text track\n *\n * @param {string} [language]\n *        Two letter language abbreviation\n *\n * @param {Object} [options={}]\n *        An object with additional text track options\n *\n * @return {TextTrack}\n *          The text track that was created.\n */\nfunction createTrackHelper(self, kind, label, language) {\n  var options = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : {};\n\n  var tracks = self.textTracks();\n\n  options.kind = kind;\n\n  if (label) {\n    options.label = label;\n  }\n  if (language) {\n    options.language = language;\n  }\n  options.tech = self;\n\n  var track = new _textTrack2['default'](options);\n\n  tracks.addTrack_(track);\n\n  return track;\n}\n\n/**\n * This is the base class for media playback technology controllers, such as\n * {@link Flash} and {@link HTML5}\n *\n * @extends Component\n */\n\nvar Tech = function (_Component) {\n  _inherits(Tech, _Component);\n\n  /**\n   * Create an instance of this Tech.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   *\n   * @param {Component~ReadyCallback} ready\n   *        Callback function to call when the `HTML5` Tech is ready.\n   */\n  function Tech() {\n    var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    var ready = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : function () {};\n\n    _classCallCheck(this, Tech);\n\n    // we don't want the tech to report user activity automatically.\n    // This is done manually in addControlsListeners\n    options.reportTouchActivity = false;\n\n    // keep track of whether the current source has played at all to\n    // implement a very limited played()\n    var _this = _possibleConstructorReturn(this, _Component.call(this, null, options, ready));\n\n    _this.hasStarted_ = false;\n    _this.on('playing', function () {\n      this.hasStarted_ = true;\n    });\n    _this.on('loadstart', function () {\n      this.hasStarted_ = false;\n    });\n\n    _this.textTracks_ = options.textTracks;\n    _this.videoTracks_ = options.videoTracks;\n    _this.audioTracks_ = options.audioTracks;\n\n    // Manually track progress in cases where the browser/flash player doesn't report it.\n    if (!_this.featuresProgressEvents) {\n      _this.manualProgressOn();\n    }\n\n    // Manually track timeupdates in cases where the browser/flash player doesn't report it.\n    if (!_this.featuresTimeupdateEvents) {\n      _this.manualTimeUpdatesOn();\n    }\n\n    ['Text', 'Audio', 'Video'].forEach(function (track) {\n      if (options['native' + track + 'Tracks'] === false) {\n        _this['featuresNative' + track + 'Tracks'] = false;\n      }\n    });\n\n    if (options.nativeCaptions === false) {\n      _this.featuresNativeTextTracks = false;\n    }\n\n    if (!_this.featuresNativeTextTracks) {\n      _this.emulateTextTracks();\n    }\n\n    _this.autoRemoteTextTracks_ = new _textTrackList2['default']();\n\n    _this.initTextTrackListeners();\n    _this.initTrackListeners();\n\n    // Turn on component tap events only if not using native controls\n    if (!options.nativeControlsForTouch) {\n      _this.emitTapEvents();\n    }\n\n    if (_this.constructor) {\n      _this.name_ = _this.constructor.name || 'Unknown Tech';\n    }\n    return _this;\n  }\n\n  /* Fallbacks for unsupported event types\n  ================================================================================ */\n\n  /**\n   * Polyfill the `progress` event for browsers that don't support it natively.\n   *\n   * @see {@link Tech#trackProgress}\n   */\n\n\n  Tech.prototype.manualProgressOn = function manualProgressOn() {\n    this.on('durationchange', this.onDurationChange);\n\n    this.manualProgress = true;\n\n    // Trigger progress watching when a source begins loading\n    this.one('ready', this.trackProgress);\n  };\n\n  /**\n   * Turn off the polyfill for `progress` events that was created in\n   * {@link Tech#manualProgressOn}\n   */\n\n\n  Tech.prototype.manualProgressOff = function manualProgressOff() {\n    this.manualProgress = false;\n    this.stopTrackingProgress();\n\n    this.off('durationchange', this.onDurationChange);\n  };\n\n  /**\n   * This is used to trigger a `progress` event when the buffered percent changes. It\n   * sets an interval function that will be called every 500 milliseconds to check if the\n   * buffer end percent has changed.\n   *\n   * > This function is called by {@link Tech#manualProgressOn}\n   *\n   * @param {EventTarget~Event} event\n   *        The `ready` event that caused this to run.\n   *\n   * @listens Tech#ready\n   * @fires Tech#progress\n   */\n\n\n  Tech.prototype.trackProgress = function trackProgress(event) {\n    this.stopTrackingProgress();\n    this.progressInterval = this.setInterval(Fn.bind(this, function () {\n      // Don't trigger unless buffered amount is greater than last time\n\n      var numBufferedPercent = this.bufferedPercent();\n\n      if (this.bufferedPercent_ !== numBufferedPercent) {\n        /**\n         * See {@link Player#progress}\n         *\n         * @event Tech#progress\n         * @type {EventTarget~Event}\n         */\n        this.trigger('progress');\n      }\n\n      this.bufferedPercent_ = numBufferedPercent;\n\n      if (numBufferedPercent === 1) {\n        this.stopTrackingProgress();\n      }\n    }), 500);\n  };\n\n  /**\n   * Update our internal duration on a `durationchange` event by calling\n   * {@link Tech#duration}.\n   *\n   * @param {EventTarget~Event} event\n   *        The `durationchange` event that caused this to run.\n   *\n   * @listens Tech#durationchange\n   */\n\n\n  Tech.prototype.onDurationChange = function onDurationChange(event) {\n    this.duration_ = this.duration();\n  };\n\n  /**\n   * Get and create a `TimeRange` object for buffering.\n   *\n   * @return {TimeRange}\n   *         The time range object that was created.\n   */\n\n\n  Tech.prototype.buffered = function buffered() {\n    return (0, _timeRanges.createTimeRange)(0, 0);\n  };\n\n  /**\n   * Get the percentage of the current video that is currently buffered.\n   *\n   * @return {number}\n   *         A number from 0 to 1 that represents the decimal percentage of the\n   *         video that is buffered.\n   *\n   */\n\n\n  Tech.prototype.bufferedPercent = function bufferedPercent() {\n    return (0, _buffer.bufferedPercent)(this.buffered(), this.duration_);\n  };\n\n  /**\n   * Turn off the polyfill for `progress` events that was created in\n   * {@link Tech#manualProgressOn}\n   * Stop manually tracking progress events by clearing the interval that was set in\n   * {@link Tech#trackProgress}.\n   */\n\n\n  Tech.prototype.stopTrackingProgress = function stopTrackingProgress() {\n    this.clearInterval(this.progressInterval);\n  };\n\n  /**\n   * Polyfill the `timeupdate` event for browsers that don't support it.\n   *\n   * @see {@link Tech#trackCurrentTime}\n   */\n\n\n  Tech.prototype.manualTimeUpdatesOn = function manualTimeUpdatesOn() {\n    this.manualTimeUpdates = true;\n\n    this.on('play', this.trackCurrentTime);\n    this.on('pause', this.stopTrackingCurrentTime);\n  };\n\n  /**\n   * Turn off the polyfill for `timeupdate` events that was created in\n   * {@link Tech#manualTimeUpdatesOn}\n   */\n\n\n  Tech.prototype.manualTimeUpdatesOff = function manualTimeUpdatesOff() {\n    this.manualTimeUpdates = false;\n    this.stopTrackingCurrentTime();\n    this.off('play', this.trackCurrentTime);\n    this.off('pause', this.stopTrackingCurrentTime);\n  };\n\n  /**\n   * Sets up an interval function to track current time and trigger `timeupdate` every\n   * 250 milliseconds.\n   *\n   * @listens Tech#play\n   * @triggers Tech#timeupdate\n   */\n\n\n  Tech.prototype.trackCurrentTime = function trackCurrentTime() {\n    if (this.currentTimeInterval) {\n      this.stopTrackingCurrentTime();\n    }\n    this.currentTimeInterval = this.setInterval(function () {\n      /**\n       * Triggered at an interval of 250ms to indicated that time is passing in the video.\n       *\n       * @event Tech#timeupdate\n       * @type {EventTarget~Event}\n       */\n      this.trigger({ type: 'timeupdate', target: this, manuallyTriggered: true });\n\n      // 42 = 24 fps // 250 is what Webkit uses // FF uses 15\n    }, 250);\n  };\n\n  /**\n   * Stop the interval function created in {@link Tech#trackCurrentTime} so that the\n   * `timeupdate` event is no longer triggered.\n   *\n   * @listens {Tech#pause}\n   */\n\n\n  Tech.prototype.stopTrackingCurrentTime = function stopTrackingCurrentTime() {\n    this.clearInterval(this.currentTimeInterval);\n\n    // #1002 - if the video ends right before the next timeupdate would happen,\n    // the progress bar won't make it all the way to the end\n    this.trigger({ type: 'timeupdate', target: this, manuallyTriggered: true });\n  };\n\n  /**\n   * Turn off all event polyfills, clear the `Tech`s {@link AudioTrackList},\n   * {@link VideoTrackList}, and {@link TextTrackList}, and dispose of this Tech.\n   *\n   * @fires Component#dispose\n   */\n\n\n  Tech.prototype.dispose = function dispose() {\n\n    // clear out all tracks because we can't reuse them between techs\n    this.clearTracks(['audio', 'video', 'text']);\n\n    // Turn off any manual progress or timeupdate tracking\n    if (this.manualProgress) {\n      this.manualProgressOff();\n    }\n\n    if (this.manualTimeUpdates) {\n      this.manualTimeUpdatesOff();\n    }\n\n    _Component.prototype.dispose.call(this);\n  };\n\n  /**\n   * Clear out a single `TrackList` or an array of `TrackLists` given their names.\n   *\n   * > Note: Techs without source handlers should call this between sources for `video`\n   *         & `audio` tracks. You don't want to use them between tracks!\n   *\n   * @param {string[]|string} types\n   *        TrackList names to clear, valid names are `video`, `audio`, and\n   *        `text`.\n   */\n\n\n  Tech.prototype.clearTracks = function clearTracks(types) {\n    var _this2 = this;\n\n    types = [].concat(types);\n    // clear out all tracks because we can't reuse them between techs\n    types.forEach(function (type) {\n      var list = _this2[type + 'Tracks']() || [];\n      var i = list.length;\n\n      while (i--) {\n        var track = list[i];\n\n        if (type === 'text') {\n          _this2.removeRemoteTextTrack(track);\n        }\n        list.removeTrack_(track);\n      }\n    });\n  };\n\n  /**\n   * Remove any TextTracks added via addRemoteTextTrack that are\n   * flagged for automatic garbage collection\n   */\n\n\n  Tech.prototype.cleanupAutoTextTracks = function cleanupAutoTextTracks() {\n    var list = this.autoRemoteTextTracks_ || [];\n    var i = list.length;\n\n    while (i--) {\n      var track = list[i];\n\n      this.removeRemoteTextTrack(track);\n    }\n  };\n\n  /**\n   * Reset the tech, which will removes all sources and reset the internal readyState.\n   *\n   * @abstract\n   */\n\n\n  Tech.prototype.reset = function reset() {};\n\n  /**\n   * Get or set an error on the Tech.\n   *\n   * @param {MediaError} [err]\n   *        Error to set on the Tech\n   *\n   * @return {MediaError|null}\n   *         The current error object on the tech, or null if there isn't one.\n   */\n\n\n  Tech.prototype.error = function error(err) {\n    if (err !== undefined) {\n      this.error_ = new _mediaError2['default'](err);\n      this.trigger('error');\n    }\n    return this.error_;\n  };\n\n  /**\n   * Returns the `TimeRange`s that have been played through for the current source.\n   *\n   * > NOTE: This implementation is incomplete. It does not track the played `TimeRange`.\n   *         It only checks wether the source has played at all or not.\n   *\n   * @return {TimeRange}\n   *         - A single time range if this video has played\n   *         - An empty set of ranges if not.\n   */\n\n\n  Tech.prototype.played = function played() {\n    if (this.hasStarted_) {\n      return (0, _timeRanges.createTimeRange)(0, 0);\n    }\n    return (0, _timeRanges.createTimeRange)();\n  };\n\n  /**\n   * Causes a manual time update to occur if {@link Tech#manualTimeUpdatesOn} was\n   * previously called.\n   *\n   * @fires Tech#timeupdate\n   */\n\n\n  Tech.prototype.setCurrentTime = function setCurrentTime() {\n    // improve the accuracy of manual timeupdates\n    if (this.manualTimeUpdates) {\n      /**\n       * A manual `timeupdate` event.\n       *\n       * @event Tech#timeupdate\n       * @type {EventTarget~Event}\n       */\n      this.trigger({ type: 'timeupdate', target: this, manuallyTriggered: true });\n    }\n  };\n\n  /**\n   * Turn on listeners for {@link TextTrackList} events. This adds\n   * {@link EventTarget~EventListeners} for `texttrackchange`, `addtrack` and\n   * `removetrack`.\n   *\n   * @fires Tech#texttrackchange\n   */\n\n\n  Tech.prototype.initTextTrackListeners = function initTextTrackListeners() {\n    var textTrackListChanges = Fn.bind(this, function () {\n      /**\n       * Triggered when tracks are added or removed on the Tech {@link TextTrackList}\n       *\n       * @event Tech#texttrackchange\n       * @type {EventTarget~Event}\n       */\n      this.trigger('texttrackchange');\n    });\n\n    var tracks = this.textTracks();\n\n    if (!tracks) {\n      return;\n    }\n\n    tracks.addEventListener('removetrack', textTrackListChanges);\n    tracks.addEventListener('addtrack', textTrackListChanges);\n\n    this.on('dispose', Fn.bind(this, function () {\n      tracks.removeEventListener('removetrack', textTrackListChanges);\n      tracks.removeEventListener('addtrack', textTrackListChanges);\n    }));\n  };\n\n  /**\n   * Turn on listeners for {@link VideoTrackList} and {@link {AudioTrackList} events.\n   * This adds {@link EventTarget~EventListeners} for `addtrack`, and  `removetrack`.\n   *\n   * @fires Tech#audiotrackchange\n   * @fires Tech#videotrackchange\n   */\n\n\n  Tech.prototype.initTrackListeners = function initTrackListeners() {\n    var _this3 = this;\n\n    var trackTypes = ['video', 'audio'];\n\n    trackTypes.forEach(function (type) {\n      /**\n       * Triggered when tracks are added or removed on the Tech {@link AudioTrackList}\n       *\n       * @event Tech#audiotrackchange\n       * @type {EventTarget~Event}\n       */\n\n      /**\n       * Triggered when tracks are added or removed on the Tech {@link VideoTrackList}\n       *\n       * @event Tech#videotrackchange\n       * @type {EventTarget~Event}\n       */\n      var trackListChanges = function trackListChanges() {\n        _this3.trigger(type + 'trackchange');\n      };\n\n      var tracks = _this3[type + 'Tracks']();\n\n      tracks.addEventListener('removetrack', trackListChanges);\n      tracks.addEventListener('addtrack', trackListChanges);\n\n      _this3.on('dispose', function () {\n        tracks.removeEventListener('removetrack', trackListChanges);\n        tracks.removeEventListener('addtrack', trackListChanges);\n      });\n    });\n  };\n\n  /**\n   * Emulate TextTracks using vtt.js if necessary\n   *\n   * @fires Tech#vttjsloaded\n   * @fires Tech#vttjserror\n   */\n\n\n  Tech.prototype.addWebVttScript_ = function addWebVttScript_() {\n    var _this4 = this;\n\n    if (!_window2['default'].WebVTT && this.el().parentNode !== null && this.el().parentNode !== undefined) {\n      var _ret = function () {\n        var vtt = require('videojs-vtt.js');\n\n        // load via require if available and vtt.js script location was not passed in\n        // as an option. novtt builds will turn the above require call into an empty object\n        // which will cause this if check to always fail.\n        if (!_this4.options_['vtt.js'] && (0, _obj.isPlain)(vtt) && Object.keys(vtt).length > 0) {\n          Object.keys(vtt).forEach(function (k) {\n            _window2['default'][k] = vtt[k];\n          });\n          _this4.trigger('vttjsloaded');\n          return {\n            v: void 0\n          };\n        }\n\n        // load vtt.js via the script location option or the cdn of no location was\n        // passed in\n        var script = _document2['default'].createElement('script');\n\n        script.src = _this4.options_['vtt.js'] || 'https://cdn.rawgit.com/gkatsev/vtt.js/vjs-v0.12.1/dist/vtt.min.js';\n        script.onload = function () {\n          /**\n           * Fired when vtt.js is loaded.\n           *\n           * @event Tech#vttjsloaded\n           * @type {EventTarget~Event}\n           */\n          _this4.trigger('vttjsloaded');\n        };\n        script.onerror = function () {\n          /**\n           * Fired when vtt.js was not loaded due to an error\n           *\n           * @event Tech#vttjsloaded\n           * @type {EventTarget~Event}\n           */\n          _this4.trigger('vttjserror');\n        };\n        _this4.on('dispose', function () {\n          script.onload = null;\n          script.onerror = null;\n        });\n        // but have not loaded yet and we set it to true before the inject so that\n        // we don't overwrite the injected window.WebVTT if it loads right away\n        _window2['default'].WebVTT = true;\n        _this4.el().parentNode.appendChild(script);\n      }();\n\n      if ((typeof _ret === 'undefined' ? 'undefined' : _typeof(_ret)) === \"object\") return _ret.v;\n    }\n  };\n\n  /**\n   * Emulate texttracks\n   *\n   * @method emulateTextTracks\n   */\n\n\n  Tech.prototype.emulateTextTracks = function emulateTextTracks() {\n    var _this5 = this;\n\n    var tracks = this.textTracks();\n\n    if (!tracks) {\n      return;\n    }\n\n    var remoteTracks = this.remoteTextTracks();\n    var handleAddTrack = function handleAddTrack(e) {\n      return tracks.addTrack_(e.track);\n    };\n    var handleRemoveTrack = function handleRemoveTrack(e) {\n      return tracks.removeTrack_(e.track);\n    };\n\n    remoteTracks.on('addtrack', handleAddTrack);\n    remoteTracks.on('removetrack', handleRemoveTrack);\n\n    // Initially, Tech.el_ is a child of a dummy-div wait until the Component system\n    // signals that the Tech is ready at which point Tech.el_ is part of the DOM\n    // before inserting the WebVTT script\n    this.on('ready', this.addWebVttScript_);\n\n    var updateDisplay = function updateDisplay() {\n      return _this5.trigger('texttrackchange');\n    };\n\n    var textTracksChanges = function textTracksChanges() {\n      updateDisplay();\n\n      for (var i = 0; i < tracks.length; i++) {\n        var track = tracks[i];\n\n        track.removeEventListener('cuechange', updateDisplay);\n        if (track.mode === 'showing') {\n          track.addEventListener('cuechange', updateDisplay);\n        }\n      }\n    };\n\n    textTracksChanges();\n    tracks.addEventListener('change', textTracksChanges);\n\n    this.on('dispose', function () {\n      remoteTracks.off('addtrack', handleAddTrack);\n      remoteTracks.off('removetrack', handleRemoveTrack);\n      tracks.removeEventListener('change', textTracksChanges);\n\n      for (var i = 0; i < tracks.length; i++) {\n        var track = tracks[i];\n\n        track.removeEventListener('cuechange', updateDisplay);\n      }\n    });\n  };\n\n  /**\n   * Get the `Tech`s {@link VideoTrackList}.\n   *\n   * @return {VideoTrackList}\n   *          The video track list that the Tech is currently using.\n   */\n\n\n  Tech.prototype.videoTracks = function videoTracks() {\n    this.videoTracks_ = this.videoTracks_ || new _videoTrackList2['default']();\n    return this.videoTracks_;\n  };\n\n  /**\n   * Get the `Tech`s {@link AudioTrackList}.\n   *\n   * @return {AudioTrackList}\n   *          The audio track list that the Tech is currently using.\n   */\n\n\n  Tech.prototype.audioTracks = function audioTracks() {\n    this.audioTracks_ = this.audioTracks_ || new _audioTrackList2['default']();\n    return this.audioTracks_;\n  };\n\n  /**\n   * Get the `Tech`s {@link TextTrackList}.\n   *\n   * @return {TextTrackList}\n   *          The text track list that the Tech is currently using.\n   */\n\n\n  Tech.prototype.textTracks = function textTracks() {\n    this.textTracks_ = this.textTracks_ || new _textTrackList2['default']();\n    return this.textTracks_;\n  };\n\n  /**\n   * Get the `Tech`s remote {@link TextTrackList}, which is created from elements\n   * that were added to the DOM.\n   *\n   * @return {TextTrackList}\n   *          The remote text track list that the Tech is currently using.\n   */\n\n\n  Tech.prototype.remoteTextTracks = function remoteTextTracks() {\n    this.remoteTextTracks_ = this.remoteTextTracks_ || new _textTrackList2['default']();\n    return this.remoteTextTracks_;\n  };\n\n  /**\n   * Get The `Tech`s  {HTMLTrackElementList}, which are the elements in the DOM that are\n   * being used as TextTracks.\n   *\n   * @return {HTMLTrackElementList}\n   *          The current HTML track elements that exist for the tech.\n   */\n\n\n  Tech.prototype.remoteTextTrackEls = function remoteTextTrackEls() {\n    this.remoteTextTrackEls_ = this.remoteTextTrackEls_ || new _htmlTrackElementList2['default']();\n    return this.remoteTextTrackEls_;\n  };\n\n  /**\n   * Create and returns a remote {@link TextTrack} object.\n   *\n   * @param {string} kind\n   *        `TextTrack` kind (subtitles, captions, descriptions, chapters, or metadata)\n   *\n   * @param {string} [label]\n   *        Label to identify the text track\n   *\n   * @param {string} [language]\n   *        Two letter language abbreviation\n   *\n   * @return {TextTrack}\n   *         The TextTrack that gets created.\n   */\n\n\n  Tech.prototype.addTextTrack = function addTextTrack(kind, label, language) {\n    if (!kind) {\n      throw new Error('TextTrack kind is required but was not provided');\n    }\n\n    return createTrackHelper(this, kind, label, language);\n  };\n\n  /**\n   * Create an emulated TextTrack for use by addRemoteTextTrack\n   *\n   * This is intended to be overridden by classes that inherit from\n   * Tech in order to create native or custom TextTracks.\n   *\n   * @param {Object} options\n   *        The object should contain the options to initialize the TextTrack with.\n   *\n   * @param {string} [options.kind]\n   *        `TextTrack` kind (subtitles, captions, descriptions, chapters, or metadata).\n   *\n   * @param {string} [options.label].\n   *        Label to identify the text track\n   *\n   * @param {string} [options.language]\n   *        Two letter language abbreviation.\n   *\n   * @return {HTMLTrackElement}\n   *         The track element that gets created.\n   */\n\n\n  Tech.prototype.createRemoteTextTrack = function createRemoteTextTrack(options) {\n    var track = (0, _mergeOptions2['default'])(options, {\n      tech: this\n    });\n\n    return new _htmlTrackElement2['default'](track);\n  };\n\n  /**\n   * Creates a remote text track object and returns an html track element.\n   *\n   * > Note: This can be an emulated {@link HTMLTrackElement} or a native one.\n   *\n   * @param {Object} options\n   *        See {@link Tech#createRemoteTextTrack} for more detailed properties.\n   *\n   * @param {boolean} [manualCleanup=true]\n   *        - When false: the TextTrack will be automatically removed from the video\n   *          element whenever the source changes\n   *        - When True: The TextTrack will have to be cleaned up manually\n   *\n   * @return {HTMLTrackElement}\n   *         An Html Track Element.\n   *\n   * @deprecated The default functionality for this function will be equivalent\n   *             to \"manualCleanup=false\" in the future. The manualCleanup parameter will\n   *             also be removed.\n   */\n\n\n  Tech.prototype.addRemoteTextTrack = function addRemoteTextTrack() {\n    var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    var manualCleanup = arguments[1];\n\n    var htmlTrackElement = this.createRemoteTextTrack(options);\n\n    if (manualCleanup !== true && manualCleanup !== false) {\n      // deprecation warning\n      _log2['default'].warn('Calling addRemoteTextTrack without explicitly setting the \"manualCleanup\" parameter to `true` is deprecated and default to `false` in future version of video.js');\n      manualCleanup = true;\n    }\n\n    // store HTMLTrackElement and TextTrack to remote list\n    this.remoteTextTrackEls().addTrackElement_(htmlTrackElement);\n    this.remoteTextTracks().addTrack_(htmlTrackElement.track);\n\n    if (manualCleanup !== true) {\n      // create the TextTrackList if it doesn't exist\n      this.autoRemoteTextTracks_.addTrack_(htmlTrackElement.track);\n    }\n\n    return htmlTrackElement;\n  };\n\n  /**\n   * Remove a remote text track from the remote `TextTrackList`.\n   *\n   * @param {TextTrack} track\n   *        `TextTrack` to remove from the `TextTrackList`\n   */\n\n\n  Tech.prototype.removeRemoteTextTrack = function removeRemoteTextTrack(track) {\n    var trackElement = this.remoteTextTrackEls().getTrackElementByTrack_(track);\n\n    // remove HTMLTrackElement and TextTrack from remote list\n    this.remoteTextTrackEls().removeTrackElement_(trackElement);\n    this.remoteTextTracks().removeTrack_(track);\n    this.autoRemoteTextTracks_.removeTrack_(track);\n  };\n\n  /**\n   * A method to set a poster from a `Tech`.\n   *\n   * @abstract\n   */\n\n\n  Tech.prototype.setPoster = function setPoster() {};\n\n  /*\n   * Check if the tech can support the given mime-type.\n   *\n   * The base tech does not support any type, but source handlers might\n   * overwrite this.\n   *\n   * @param  {string} type\n   *         The mimetype to check for support\n   *\n   * @return {string}\n   *         'probably', 'maybe', or empty string\n   *\n   * @see [Spec]{@link https://developer.mozilla.org/en-US/docs/Web/API/HTMLMediaElement/canPlayType}\n   *\n   * @abstract\n   */\n\n\n  Tech.prototype.canPlayType = function canPlayType() {\n    return '';\n  };\n\n  /*\n   * Return whether the argument is a Tech or not.\n   * Can be passed either a Class like `Html5` or a instance like `player.tech_`\n   *\n   * @param {Object} component\n   *        The item to check\n   *\n   * @return {boolean}\n   *         Whether it is a tech or not\n   *         - True if it is a tech\n   *         - False if it is not\n   */\n\n\n  Tech.isTech = function isTech(component) {\n    return component.prototype instanceof Tech || component instanceof Tech || component === Tech;\n  };\n\n  /**\n   * Registers a `Tech` into a shared list for videojs.\n   *\n   * @param {string} name\n   *        Name of the `Tech` to register.\n   *\n   * @param {Object} tech\n   *        The `Tech` class to register.\n   */\n\n\n  Tech.registerTech = function registerTech(name, tech) {\n    if (!Tech.techs_) {\n      Tech.techs_ = {};\n    }\n\n    if (!Tech.isTech(tech)) {\n      throw new Error('Tech ' + name + ' must be a Tech');\n    }\n\n    Tech.techs_[name] = tech;\n    return tech;\n  };\n\n  /**\n   * Get a `Tech` from the shared list by name.\n   *\n   * @param {string} name\n   *        Name of the component to get\n   *\n   * @return {Tech|undefined}\n   *         The `Tech` or undefined if there was no tech with the name requsted.\n   */\n\n\n  Tech.getTech = function getTech(name) {\n    if (Tech.techs_ && Tech.techs_[name]) {\n      return Tech.techs_[name];\n    }\n\n    if (_window2['default'] && _window2['default'].videojs && _window2['default'].videojs[name]) {\n      _log2['default'].warn('The ' + name + ' tech was added to the videojs object when it should be registered using videojs.registerTech(name, tech)');\n      return _window2['default'].videojs[name];\n    }\n  };\n\n  return Tech;\n}(_component2['default']);\n\n/**\n * List of associated text tracks.\n *\n * @type {TextTrackList}\n * @private\n */\n\n\nTech.prototype.textTracks_; // eslint-disable-line\n\n/**\n * List of associated audio tracks.\n *\n * @type {AudioTrackList}\n * @private\n */\nTech.prototype.audioTracks_; // eslint-disable-line\n\n/**\n * List of associated video tracks.\n *\n * @type {VideoTrackList}\n * @private\n */\nTech.prototype.videoTracks_; // eslint-disable-line\n\n/**\n * Boolean indicating wether the `Tech` supports volume control.\n *\n * @type {boolean}\n * @default\n */\nTech.prototype.featuresVolumeControl = true;\n\n/**\n * Boolean indicating wether the `Tech` support fullscreen resize control.\n * Resizing plugins using request fullscreen reloads the plugin\n *\n * @type {boolean}\n * @default\n */\nTech.prototype.featuresFullscreenResize = false;\n\n/**\n * Boolean indicating wether the `Tech` supports changing the speed at which the video\n * plays. Examples:\n *   - Set player to play 2x (twice) as fast\n *   - Set player to play 0.5x (half) as fast\n *\n * @type {boolean}\n * @default\n */\nTech.prototype.featuresPlaybackRate = false;\n\n/**\n * Boolean indicating wether the `Tech` supports the `progress` event. This is currently\n * not triggered by video-js-swf. This will be used to determine if\n * {@link Tech#manualProgressOn} should be called.\n *\n * @type {boolean}\n * @default\n */\nTech.prototype.featuresProgressEvents = false;\n\n/**\n * Boolean indicating wether the `Tech` supports the `timeupdate` event. This is currently\n * not triggered by video-js-swf. This will be used to determine if\n * {@link Tech#manualTimeUpdates} should be called.\n *\n * @type {boolean}\n * @default\n */\nTech.prototype.featuresTimeupdateEvents = false;\n\n/**\n * Boolean indicating wether the `Tech` supports the native `TextTrack`s.\n * This will help us integrate with native `TextTrack`s if the browser supports them.\n *\n * @type {boolean}\n * @default\n */\nTech.prototype.featuresNativeTextTracks = false;\n\n/**\n * A functional mixin for techs that want to use the Source Handler pattern.\n * Source handlers are scripts for handling specific formats.\n * The source handler pattern is used for adaptive formats (HLS, DASH) that\n * manually load video data and feed it into a Source Buffer (Media Source Extensions)\n * Example: `Tech.withSourceHandlers.call(MyTech);`\n *\n * @param {Tech} _Tech\n *        The tech to add source handler functions to.\n *\n * @mixes Tech~SourceHandlerAdditions\n */\nTech.withSourceHandlers = function (_Tech) {\n\n  /**\n   * Register a source handler\n   *\n   * @param {Function} handler\n   *        The source handler class\n   *\n   * @param {number} [index]\n   *        Register it at the following index\n   */\n  _Tech.registerSourceHandler = function (handler, index) {\n    var handlers = _Tech.sourceHandlers;\n\n    if (!handlers) {\n      handlers = _Tech.sourceHandlers = [];\n    }\n\n    if (index === undefined) {\n      // add to the end of the list\n      index = handlers.length;\n    }\n\n    handlers.splice(index, 0, handler);\n  };\n\n  /**\n   * Check if the tech can support the given type. Also checks the\n   * Techs sourceHandlers.\n   *\n   * @param {string} type\n   *         The mimetype to check.\n   *\n   * @return {string}\n   *         'probably', 'maybe', or '' (empty string)\n   */\n  _Tech.canPlayType = function (type) {\n    var handlers = _Tech.sourceHandlers || [];\n    var can = void 0;\n\n    for (var i = 0; i < handlers.length; i++) {\n      can = handlers[i].canPlayType(type);\n\n      if (can) {\n        return can;\n      }\n    }\n\n    return '';\n  };\n\n  /**\n   * Returns the first source handler that supports the source.\n   *\n   * TODO: Answer question: should 'probably' be prioritized over 'maybe'\n   *\n   * @param {Tech~SourceObject} source\n   *        The source object\n   *\n   * @param {Object} options\n   *        The options passed to the tech\n   *\n   * @return {SourceHandler|null}\n   *          The first source handler that supports the source or null if\n   *          no SourceHandler supports the source\n   */\n  _Tech.selectSourceHandler = function (source, options) {\n    var handlers = _Tech.sourceHandlers || [];\n    var can = void 0;\n\n    for (var i = 0; i < handlers.length; i++) {\n      can = handlers[i].canHandleSource(source, options);\n\n      if (can) {\n        return handlers[i];\n      }\n    }\n\n    return null;\n  };\n\n  /**\n   * Check if the tech can support the given source.\n   *\n   * @param {Tech~SourceObject} srcObj\n   *        The source object\n   *\n   * @param {Object} options\n   *        The options passed to the tech\n   *\n   * @return {string}\n   *         'probably', 'maybe', or '' (empty string)\n   */\n  _Tech.canPlaySource = function (srcObj, options) {\n    var sh = _Tech.selectSourceHandler(srcObj, options);\n\n    if (sh) {\n      return sh.canHandleSource(srcObj, options);\n    }\n\n    return '';\n  };\n\n  /**\n   * When using a source handler, prefer its implementation of\n   * any function normally provided by the tech.\n   */\n  var deferrable = ['seekable', 'duration'];\n\n  /**\n   * A wrapper around {@link Tech#seekable} that will call a `SourceHandler`s seekable\n   * function if it exists, with a fallback to the Techs seekable function.\n   *\n   * @method _Tech.seekable\n   */\n\n  /**\n   * A wrapper around {@link Tech#duration} that will call a `SourceHandler`s duration\n   * function if it exists, otherwise it will fallback to the techs duration function.\n   *\n   * @method _Tech.duration\n   */\n\n  deferrable.forEach(function (fnName) {\n    var originalFn = this[fnName];\n\n    if (typeof originalFn !== 'function') {\n      return;\n    }\n\n    this[fnName] = function () {\n      if (this.sourceHandler_ && this.sourceHandler_[fnName]) {\n        return this.sourceHandler_[fnName].apply(this.sourceHandler_, arguments);\n      }\n      return originalFn.apply(this, arguments);\n    };\n  }, _Tech.prototype);\n\n  /**\n   * Create a function for setting the source using a source object\n   * and source handlers.\n   * Should never be called unless a source handler was found.\n   *\n   * @param {Tech~SourceObject} source\n   *        A source object with src and type keys\n   *\n   * @return {Tech}\n   *         Returns itself; this method is chainable\n   */\n  _Tech.prototype.setSource = function (source) {\n    var sh = _Tech.selectSourceHandler(source, this.options_);\n\n    if (!sh) {\n      // Fall back to a native source hander when unsupported sources are\n      // deliberately set\n      if (_Tech.nativeSourceHandler) {\n        sh = _Tech.nativeSourceHandler;\n      } else {\n        _log2['default'].error('No source hander found for the current source.');\n      }\n    }\n\n    // Dispose any existing source handler\n    this.disposeSourceHandler();\n    this.off('dispose', this.disposeSourceHandler);\n\n    if (sh !== _Tech.nativeSourceHandler) {\n      this.currentSource_ = source;\n\n      // Catch if someone replaced the src without calling setSource.\n      // If they do, set currentSource_ to null and dispose our source handler.\n      this.off(this.el_, 'loadstart', _Tech.prototype.firstLoadStartListener_);\n      this.off(this.el_, 'loadstart', _Tech.prototype.successiveLoadStartListener_);\n      this.one(this.el_, 'loadstart', _Tech.prototype.firstLoadStartListener_);\n    }\n\n    this.sourceHandler_ = sh.handleSource(source, this, this.options_);\n    this.on('dispose', this.disposeSourceHandler);\n\n    return this;\n  };\n\n  /**\n   * Called once for the first loadstart of a video.\n   *\n   * @listens Tech#loadstart\n   */\n  _Tech.prototype.firstLoadStartListener_ = function () {\n    this.one(this.el_, 'loadstart', _Tech.prototype.successiveLoadStartListener_);\n  };\n\n  // On successive loadstarts when setSource has not been called again\n  /**\n   * Called after the first loadstart for a video occurs.\n   *\n   * @listens Tech#loadstart\n   */\n  _Tech.prototype.successiveLoadStartListener_ = function () {\n    this.disposeSourceHandler();\n    this.one(this.el_, 'loadstart', _Tech.prototype.successiveLoadStartListener_);\n  };\n\n  /**\n   * Clean up any existing SourceHandlers and listeners when the Tech is disposed.\n   *\n   * @listens Tech#dispose\n   */\n  _Tech.prototype.disposeSourceHandler = function () {\n    // if we have a source and get another one\n    // then we are loading something new\n    // than clear all of our current tracks\n    if (this.currentSource_) {\n      this.clearTracks(['audio', 'video']);\n      this.currentSource_ = null;\n    }\n\n    // always clean up auto-text tracks\n    this.cleanupAutoTextTracks();\n\n    if (this.sourceHandler_) {\n      this.off(this.el_, 'loadstart', _Tech.prototype.firstLoadStartListener_);\n      this.off(this.el_, 'loadstart', _Tech.prototype.successiveLoadStartListener_);\n\n      if (this.sourceHandler_.dispose) {\n        this.sourceHandler_.dispose();\n      }\n\n      this.sourceHandler_ = null;\n    }\n  };\n};\n\n_component2['default'].registerComponent('Tech', Tech);\n// Old name for Tech\n// @deprecated\n_component2['default'].registerComponent('MediaTechController', Tech);\nTech.registerTech('Tech', Tech);\nexports['default'] = Tech;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/video.js/es5/tech/tech.js\n ** module id = 29\n ** module chunks = 0 1\n **/","'use strict';\n\nexports.__esModule = true;\n\nvar _browser = require('../utils/browser.js');\n\nvar browser = _interopRequireWildcard(_browser);\n\nvar _document = require('global/document');\n\nvar _document2 = _interopRequireDefault(_document);\n\nvar _eventTarget = require('../event-target');\n\nvar _eventTarget2 = _interopRequireDefault(_eventTarget);\n\nvar _textTrack = require('../tracks/text-track');\n\nvar _textTrack2 = _interopRequireDefault(_textTrack);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj['default'] = obj; return newObj; } }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /**\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * @file html-track-element.js\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                */\n\n/**\n * @typedef {HTMLTrackElement~ReadyState}\n * @enum {number}\n */\nvar NONE = 0;\nvar LOADING = 1;\nvar LOADED = 2;\nvar ERROR = 3;\n\n/**\n * A single track represented in the DOM.\n *\n * @see [Spec]{@link https://html.spec.whatwg.org/multipage/embedded-content.html#htmltrackelement}\n * @extends EventTarget\n */\n\nvar HTMLTrackElement = function (_EventTarget) {\n  _inherits(HTMLTrackElement, _EventTarget);\n\n  /**\n   * Create an instance of this class.\n   *\n   * @param {Object} options={}\n   *        Object of option names and values\n   *\n   * @param {Tech} options.tech\n   *        A reference to the tech that owns this HTMLTrackElement.\n   *\n   * @param {TextTrack~Kind} [options.kind='subtitles']\n   *        A valid text track kind.\n   *\n   * @param {TextTrack~Mode} [options.mode='disabled']\n   *        A valid text track mode.\n   *\n   * @param {string} [options.id='vjs_track_' + Guid.newGUID()]\n   *        A unique id for this TextTrack.\n   *\n   * @param {string} [options.label='']\n   *        The menu label for this track.\n   *\n   * @param {string} [options.language='']\n   *        A valid two character language code.\n   *\n   * @param {string} [options.srclang='']\n   *        A valid two character language code. An alternative, but deprioritized\n   *        vesion of `options.language`\n   *\n   * @param {string} [options.src]\n   *        A url to TextTrack cues.\n   *\n   * @param {boolean} [options.default]\n   *        If this track should default to on or off.\n   */\n  function HTMLTrackElement() {\n    var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n    _classCallCheck(this, HTMLTrackElement);\n\n    var _this = _possibleConstructorReturn(this, _EventTarget.call(this));\n\n    var readyState = void 0;\n    var trackElement = _this; // eslint-disable-line\n\n    if (browser.IS_IE8) {\n      trackElement = _document2['default'].createElement('custom');\n\n      for (var prop in HTMLTrackElement.prototype) {\n        if (prop !== 'constructor') {\n          trackElement[prop] = HTMLTrackElement.prototype[prop];\n        }\n      }\n    }\n\n    var track = new _textTrack2['default'](options);\n\n    trackElement.kind = track.kind;\n    trackElement.src = track.src;\n    trackElement.srclang = track.language;\n    trackElement.label = track.label;\n    trackElement['default'] = track['default'];\n\n    /**\n     * @member {HTMLTrackElement~ReadyState} readyState\n     *         The current ready state of the track element.\n     */\n    Object.defineProperty(trackElement, 'readyState', {\n      get: function get() {\n        return readyState;\n      }\n    });\n\n    /**\n     * @member {TextTrack} track\n     *         The underlying TextTrack object.\n     */\n    Object.defineProperty(trackElement, 'track', {\n      get: function get() {\n        return track;\n      }\n    });\n\n    readyState = NONE;\n\n    /**\n     * @listens TextTrack#loadeddata\n     * @fires HTMLTrackElement#load\n     */\n    track.addEventListener('loadeddata', function () {\n      readyState = LOADED;\n\n      trackElement.trigger({\n        type: 'load',\n        target: trackElement\n      });\n    });\n\n    if (browser.IS_IE8) {\n      var _ret;\n\n      return _ret = trackElement, _possibleConstructorReturn(_this, _ret);\n    }\n    return _this;\n  }\n\n  return HTMLTrackElement;\n}(_eventTarget2['default']);\n\nHTMLTrackElement.prototype.allowedEvents_ = {\n  load: 'load'\n};\n\nHTMLTrackElement.NONE = NONE;\nHTMLTrackElement.LOADING = LOADING;\nHTMLTrackElement.LOADED = LOADED;\nHTMLTrackElement.ERROR = ERROR;\n\nexports['default'] = HTMLTrackElement;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/video.js/es5/tracks/html-track-element.js\n ** module id = 30\n ** module chunks = 0 1\n **/","'use strict';\n\nexports.__esModule = true;\n\nvar _textTrackCueList = require('./text-track-cue-list');\n\nvar _textTrackCueList2 = _interopRequireDefault(_textTrackCueList);\n\nvar _fn = require('../utils/fn.js');\n\nvar Fn = _interopRequireWildcard(_fn);\n\nvar _trackEnums = require('./track-enums');\n\nvar _log = require('../utils/log.js');\n\nvar _log2 = _interopRequireDefault(_log);\n\nvar _window = require('global/window');\n\nvar _window2 = _interopRequireDefault(_window);\n\nvar _track = require('./track.js');\n\nvar _track2 = _interopRequireDefault(_track);\n\nvar _url = require('../utils/url.js');\n\nvar _xhr = require('xhr');\n\nvar _xhr2 = _interopRequireDefault(_xhr);\n\nvar _mergeOptions = require('../utils/merge-options');\n\nvar _mergeOptions2 = _interopRequireDefault(_mergeOptions);\n\nvar _browser = require('../utils/browser.js');\n\nvar browser = _interopRequireWildcard(_browser);\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj['default'] = obj; return newObj; } }\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /**\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * @file text-track.js\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                */\n\n\n/**\n * Takes a webvtt file contents and parses it into cues\n *\n * @param {string} srcContent\n *        webVTT file contents\n *\n * @param {TextTrack} track\n *        TextTrack to add cues to. Cues come from the srcContent.\n *\n * @private\n */\nvar parseCues = function parseCues(srcContent, track) {\n  var parser = new _window2['default'].WebVTT.Parser(_window2['default'], _window2['default'].vttjs, _window2['default'].WebVTT.StringDecoder());\n  var errors = [];\n\n  parser.oncue = function (cue) {\n    track.addCue(cue);\n  };\n\n  parser.onparsingerror = function (error) {\n    errors.push(error);\n  };\n\n  parser.onflush = function () {\n    track.trigger({\n      type: 'loadeddata',\n      target: track\n    });\n  };\n\n  parser.parse(srcContent);\n  if (errors.length > 0) {\n    if (_window2['default'].console && _window2['default'].console.groupCollapsed) {\n      _window2['default'].console.groupCollapsed('Text Track parsing errors for ' + track.src);\n    }\n    errors.forEach(function (error) {\n      return _log2['default'].error(error);\n    });\n    if (_window2['default'].console && _window2['default'].console.groupEnd) {\n      _window2['default'].console.groupEnd();\n    }\n  }\n\n  parser.flush();\n};\n\n/**\n * Load a `TextTrack` from a specifed url.\n *\n * @param {string} src\n *        Url to load track from.\n *\n * @param {TextTrack} track\n *        Track to add cues to. Comes from the content at the end of `url`.\n *\n * @private\n */\nvar loadTrack = function loadTrack(src, track) {\n  var opts = {\n    uri: src\n  };\n  var crossOrigin = (0, _url.isCrossOrigin)(src);\n\n  if (crossOrigin) {\n    opts.cors = crossOrigin;\n  }\n\n  (0, _xhr2['default'])(opts, Fn.bind(this, function (err, response, responseBody) {\n    if (err) {\n      return _log2['default'].error(err, response);\n    }\n\n    track.loaded_ = true;\n\n    // Make sure that vttjs has loaded, otherwise, wait till it finished loading\n    // NOTE: this is only used for the alt/video.novtt.js build\n    if (typeof _window2['default'].WebVTT !== 'function') {\n      if (track.tech_) {\n        (function () {\n          var loadHandler = function loadHandler() {\n            return parseCues(responseBody, track);\n          };\n\n          track.tech_.on('vttjsloaded', loadHandler);\n          track.tech_.on('vttjserror', function () {\n            _log2['default'].error('vttjs failed to load, stopping trying to process ' + track.src);\n            track.tech_.off('vttjsloaded', loadHandler);\n          });\n        })();\n      }\n    } else {\n      parseCues(responseBody, track);\n    }\n  }));\n};\n\n/**\n * A representation of a single `TextTrack`.\n *\n * @see [Spec]{@link https://html.spec.whatwg.org/multipage/embedded-content.html#texttrack}\n * @extends Track\n */\n\nvar TextTrack = function (_Track) {\n  _inherits(TextTrack, _Track);\n\n  /**\n   * Create an instance of this class.\n   *\n   * @param {Object} options={}\n   *        Object of option names and values\n   *\n   * @param {Tech} options.tech\n   *        A reference to the tech that owns this TextTrack.\n   *\n   * @param {TextTrack~Kind} [options.kind='subtitles']\n   *        A valid text track kind.\n   *\n   * @param {TextTrack~Mode} [options.mode='disabled']\n   *        A valid text track mode.\n   *\n   * @param {string} [options.id='vjs_track_' + Guid.newGUID()]\n   *        A unique id for this TextTrack.\n   *\n   * @param {string} [options.label='']\n   *        The menu label for this track.\n   *\n   * @param {string} [options.language='']\n   *        A valid two character language code.\n   *\n   * @param {string} [options.srclang='']\n   *        A valid two character language code. An alternative, but deprioritized\n   *        vesion of `options.language`\n   *\n   * @param {string} [options.src]\n   *        A url to TextTrack cues.\n   *\n   * @param {boolean} [options.default]\n   *        If this track should default to on or off.\n   */\n  function TextTrack() {\n    var _this, _ret2;\n\n    var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n    _classCallCheck(this, TextTrack);\n\n    if (!options.tech) {\n      throw new Error('A tech was not provided.');\n    }\n\n    var settings = (0, _mergeOptions2['default'])(options, {\n      kind: _trackEnums.TextTrackKind[options.kind] || 'subtitles',\n      language: options.language || options.srclang || ''\n    });\n    var mode = _trackEnums.TextTrackMode[settings.mode] || 'disabled';\n    var default_ = settings['default'];\n\n    if (settings.kind === 'metadata' || settings.kind === 'chapters') {\n      mode = 'hidden';\n    }\n    // on IE8 this will be a document element\n    // for every other browser this will be a normal object\n    var tt = (_this = _possibleConstructorReturn(this, _Track.call(this, settings)), _this);\n\n    tt.tech_ = settings.tech;\n\n    if (browser.IS_IE8) {\n      for (var prop in TextTrack.prototype) {\n        if (prop !== 'constructor') {\n          tt[prop] = TextTrack.prototype[prop];\n        }\n      }\n    }\n\n    tt.cues_ = [];\n    tt.activeCues_ = [];\n\n    var cues = new _textTrackCueList2['default'](tt.cues_);\n    var activeCues = new _textTrackCueList2['default'](tt.activeCues_);\n    var changed = false;\n    var timeupdateHandler = Fn.bind(tt, function () {\n\n      // Accessing this.activeCues for the side-effects of updating itself\n      // due to it's nature as a getter function. Do not remove or cues will\n      // stop updating!\n      /* eslint-disable no-unused-expressions */\n      this.activeCues;\n      /* eslint-enable no-unused-expressions */\n      if (changed) {\n        this.trigger('cuechange');\n        changed = false;\n      }\n    });\n\n    if (mode !== 'disabled') {\n      tt.tech_.on('timeupdate', timeupdateHandler);\n    }\n\n    /**\n     * @member {boolean} default\n     *         If this track was set to be on or off by default. Cannot be changed after\n     *         creation.\n     *\n     * @readonly\n     */\n    Object.defineProperty(tt, 'default', {\n      get: function get() {\n        return default_;\n      },\n      set: function set() {}\n    });\n\n    /**\n     * @member {string} mode\n     *         Set the mode of this TextTrack to a valid {@link TextTrack~Mode}. Will\n     *         not be set if setting to an invalid mode.\n     *\n     * @fires TextTrack#modechange\n     */\n    Object.defineProperty(tt, 'mode', {\n      get: function get() {\n        return mode;\n      },\n      set: function set(newMode) {\n        if (!_trackEnums.TextTrackMode[newMode]) {\n          return;\n        }\n        mode = newMode;\n        if (mode === 'showing') {\n          this.tech_.on('timeupdate', timeupdateHandler);\n        }\n        /**\n         * An event that fires when mode changes on this track. This allows\n         * the TextTrackList that holds this track to act accordingly.\n         *\n         * > Note: This is not part of the spec!\n         *\n         * @event TextTrack#modechange\n         * @type {EventTarget~Event}\n         */\n        this.trigger('modechange');\n      }\n    });\n\n    /**\n     * @member {TextTrackCueList} cues\n     *         The text track cue list for this TextTrack.\n     */\n    Object.defineProperty(tt, 'cues', {\n      get: function get() {\n        if (!this.loaded_) {\n          return null;\n        }\n\n        return cues;\n      },\n      set: function set() {}\n    });\n\n    /**\n     * @member {TextTrackCueList} activeCues\n     *         The list text track cues that are currently active for this TextTrack.\n     */\n    Object.defineProperty(tt, 'activeCues', {\n      get: function get() {\n        if (!this.loaded_) {\n          return null;\n        }\n\n        // nothing to do\n        if (this.cues.length === 0) {\n          return activeCues;\n        }\n\n        var ct = this.tech_.currentTime();\n        var active = [];\n\n        for (var i = 0, l = this.cues.length; i < l; i++) {\n          var cue = this.cues[i];\n\n          if (cue.startTime <= ct && cue.endTime >= ct) {\n            active.push(cue);\n          } else if (cue.startTime === cue.endTime && cue.startTime <= ct && cue.startTime + 0.5 >= ct) {\n            active.push(cue);\n          }\n        }\n\n        changed = false;\n\n        if (active.length !== this.activeCues_.length) {\n          changed = true;\n        } else {\n          for (var _i = 0; _i < active.length; _i++) {\n            if (this.activeCues_.indexOf(active[_i]) === -1) {\n              changed = true;\n            }\n          }\n        }\n\n        this.activeCues_ = active;\n        activeCues.setCues_(this.activeCues_);\n\n        return activeCues;\n      },\n      set: function set() {}\n    });\n\n    if (settings.src) {\n      tt.src = settings.src;\n      loadTrack(settings.src, tt);\n    } else {\n      tt.loaded_ = true;\n    }\n\n    return _ret2 = tt, _possibleConstructorReturn(_this, _ret2);\n  }\n\n  /**\n   * Add a cue to the internal list of cues.\n   *\n   * @param {TextTrack~Cue} cue\n   *        The cue to add to our internal list\n   */\n\n\n  TextTrack.prototype.addCue = function addCue(cue) {\n    var tracks = this.tech_.textTracks();\n\n    if (tracks) {\n      for (var i = 0; i < tracks.length; i++) {\n        if (tracks[i] !== this) {\n          tracks[i].removeCue(cue);\n        }\n      }\n    }\n\n    this.cues_.push(cue);\n    this.cues.setCues_(this.cues_);\n  };\n\n  /**\n   * Remove a cue from our internal list\n   *\n   * @param {TextTrack~Cue} removeCue\n   *        The cue to remove from our internal list\n   */\n\n\n  TextTrack.prototype.removeCue = function removeCue(_removeCue) {\n    var removed = false;\n\n    for (var i = 0, l = this.cues_.length; i < l; i++) {\n      var cue = this.cues_[i];\n\n      if (cue === _removeCue) {\n        this.cues_.splice(i, 1);\n        removed = true;\n      }\n    }\n\n    if (removed) {\n      this.cues.setCues_(this.cues_);\n    }\n  };\n\n  return TextTrack;\n}(_track2['default']);\n\n/**\n * cuechange - One or more cues in the track have become active or stopped being active.\n */\n\n\nTextTrack.prototype.allowedEvents_ = {\n  cuechange: 'cuechange'\n};\n\nexports['default'] = TextTrack;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/video.js/es5/tracks/text-track.js\n ** module id = 31\n ** module chunks = 0 1\n **/","'use strict';\n\nexports.__esModule = true;\n\nvar _browser = require('../utils/browser.js');\n\nvar browser = _interopRequireWildcard(_browser);\n\nvar _document = require('global/document');\n\nvar _document2 = _interopRequireDefault(_document);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj['default'] = obj; return newObj; } }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } } /**\n                                                                                                                                                           * @file text-track-cue-list.js\n                                                                                                                                                           */\n\n\n/**\n * @typedef {Object} TextTrackCue\n *\n * @property {string} id\n *           The unique id for this text track cue\n *\n * @property {number} startTime\n *           The start time for this text track cue\n *\n * @property {number} endTime\n *           The end time for this text track cue\n *\n * @property {boolean} pauseOnExit\n *           Pause when the end time is reached if true.\n *\n * @see [Spec]{@link https://html.spec.whatwg.org/multipage/embedded-content.html#texttrackcue}\n */\n\n/**\n * A List of TextTrackCues.\n *\n * @see [Spec]{@link https://html.spec.whatwg.org/multipage/embedded-content.html#texttrackcuelist}\n */\nvar TextTrackCueList = function () {\n\n  /**\n   * Create an instance of this class..\n   *\n   * @param {Array} cues\n   *        A list of cues to be initialized with\n   */\n  function TextTrackCueList(cues) {\n    _classCallCheck(this, TextTrackCueList);\n\n    var list = this; // eslint-disable-line\n\n    if (browser.IS_IE8) {\n      list = _document2['default'].createElement('custom');\n\n      for (var prop in TextTrackCueList.prototype) {\n        if (prop !== 'constructor') {\n          list[prop] = TextTrackCueList.prototype[prop];\n        }\n      }\n    }\n\n    TextTrackCueList.prototype.setCues_.call(list, cues);\n\n    /**\n     * @member {number} length\n     *         The current number of `TextTrackCue`s in the TextTrackCueList.\n     */\n    Object.defineProperty(list, 'length', {\n      get: function get() {\n        return this.length_;\n      }\n    });\n\n    if (browser.IS_IE8) {\n      return list;\n    }\n  }\n\n  /**\n   * A setter for cues in this list. Creates getters\n   * an an index for the cues.\n   *\n   * @param {Array} cues\n   *        An array of cues to set\n   *\n   * @private\n   */\n\n\n  TextTrackCueList.prototype.setCues_ = function setCues_(cues) {\n    var oldLength = this.length || 0;\n    var i = 0;\n    var l = cues.length;\n\n    this.cues_ = cues;\n    this.length_ = cues.length;\n\n    var defineProp = function defineProp(index) {\n      if (!('' + index in this)) {\n        Object.defineProperty(this, '' + index, {\n          get: function get() {\n            return this.cues_[index];\n          }\n        });\n      }\n    };\n\n    if (oldLength < l) {\n      i = oldLength;\n\n      for (; i < l; i++) {\n        defineProp.call(this, i);\n      }\n    }\n  };\n\n  /**\n   * Get a `TextTrackCue` that is currently in the `TextTrackCueList` by id.\n   *\n   * @param {string} id\n   *        The id of the cue that should be searched for.\n   *\n   * @return {TextTrackCue|null}\n   *         A single cue or null if none was found.\n   */\n\n\n  TextTrackCueList.prototype.getCueById = function getCueById(id) {\n    var result = null;\n\n    for (var i = 0, l = this.length; i < l; i++) {\n      var cue = this[i];\n\n      if (cue.id === id) {\n        result = cue;\n        break;\n      }\n    }\n\n    return result;\n  };\n\n  return TextTrackCueList;\n}();\n\nexports['default'] = TextTrackCueList;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/video.js/es5/tracks/text-track-cue-list.js\n ** module id = 32\n ** module chunks = 0 1\n **/","'use strict';\n\nexports.__esModule = true;\n/**\n * @file track-kinds.js\n */\n\n/**\n * All possible `VideoTrackKind`s\n *\n * @see https://html.spec.whatwg.org/multipage/embedded-content.html#dom-videotrack-kind\n * @typedef VideoTrack~Kind\n * @enum\n */\nvar VideoTrackKind = exports.VideoTrackKind = {\n  alternative: 'alternative',\n  captions: 'captions',\n  main: 'main',\n  sign: 'sign',\n  subtitles: 'subtitles',\n  commentary: 'commentary'\n};\n\n/**\n * All possible `AudioTrackKind`s\n *\n * @see https://html.spec.whatwg.org/multipage/embedded-content.html#dom-audiotrack-kind\n * @typedef AudioTrack~Kind\n * @enum\n */\nvar AudioTrackKind = exports.AudioTrackKind = {\n  'alternative': 'alternative',\n  'descriptions': 'descriptions',\n  'main': 'main',\n  'main-desc': 'main-desc',\n  'translation': 'translation',\n  'commentary': 'commentary'\n};\n\n/**\n * All possible `TextTrackKind`s\n *\n * @see https://html.spec.whatwg.org/multipage/embedded-content.html#dom-texttrack-kind\n * @typedef TextTrack~Kind\n * @enum\n */\nvar TextTrackKind = exports.TextTrackKind = {\n  subtitles: 'subtitles',\n  captions: 'captions',\n  descriptions: 'descriptions',\n  chapters: 'chapters',\n  metadata: 'metadata'\n};\n\n/**\n * All possible `TextTrackMode`s\n *\n * @see https://html.spec.whatwg.org/multipage/embedded-content.html#texttrackmode\n * @typedef TextTrack~Mode\n * @enum\n */\nvar TextTrackMode = exports.TextTrackMode = {\n  disabled: 'disabled',\n  hidden: 'hidden',\n  showing: 'showing'\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/video.js/es5/tracks/track-enums.js\n ** module id = 33\n ** module chunks = 0 1\n **/","'use strict';\n\nexports.__esModule = true;\n\nvar _browser = require('../utils/browser.js');\n\nvar browser = _interopRequireWildcard(_browser);\n\nvar _document = require('global/document');\n\nvar _document2 = _interopRequireDefault(_document);\n\nvar _guid = require('../utils/guid.js');\n\nvar Guid = _interopRequireWildcard(_guid);\n\nvar _eventTarget = require('../event-target');\n\nvar _eventTarget2 = _interopRequireDefault(_eventTarget);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj['default'] = obj; return newObj; } }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /**\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * @file track.js\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                */\n\n\n/**\n * A Track class that contains all of the common functionality for {@link AudioTrack},\n * {@link VideoTrack}, and {@link TextTrack}.\n *\n * > Note: This class should not be used directly\n *\n * @see {@link https://html.spec.whatwg.org/multipage/embedded-content.html}\n * @extends EventTarget\n * @abstract\n */\nvar Track = function (_EventTarget) {\n  _inherits(Track, _EventTarget);\n\n  /**\n   * Create an instance of this class.\n   *\n   * @param {Object} [options={}]\n   *        Object of option names and values\n   *\n   * @param {string} [options.kind='']\n   *        A valid kind for the track type you are creating.\n   *\n   * @param {string} [options.id='vjs_track_' + Guid.newGUID()]\n   *        A unique id for this AudioTrack.\n   *\n   * @param {string} [options.label='']\n   *        The menu label for this track.\n   *\n   * @param {string} [options.language='']\n   *        A valid two character language code.\n   *\n   * @abstract\n   */\n  function Track() {\n    var _ret;\n\n    var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n    _classCallCheck(this, Track);\n\n    var _this = _possibleConstructorReturn(this, _EventTarget.call(this));\n\n    var track = _this; // eslint-disable-line\n\n    if (browser.IS_IE8) {\n      track = _document2['default'].createElement('custom');\n      for (var prop in Track.prototype) {\n        if (prop !== 'constructor') {\n          track[prop] = Track.prototype[prop];\n        }\n      }\n    }\n\n    var trackProps = {\n      id: options.id || 'vjs_track_' + Guid.newGUID(),\n      kind: options.kind || '',\n      label: options.label || '',\n      language: options.language || ''\n    };\n\n    /**\n     * @member {string} id\n     *         The id of this track. Cannot be changed after creation.\n     *\n     * @readonly\n     */\n\n    /**\n     * @member {string} kind\n     *         The kind of track that this is. Cannot be changed after creation.\n     *\n     * @readonly\n     */\n\n    /**\n     * @member {string} label\n     *         The label of this track. Cannot be changed after creation.\n     *\n     * @readonly\n     */\n\n    /**\n     * @member {string} language\n     *         The two letter language code for this track. Cannot be changed after\n     *         creation.\n     *\n     * @readonly\n     */\n\n    var _loop = function _loop(key) {\n      Object.defineProperty(track, key, {\n        get: function get() {\n          return trackProps[key];\n        },\n        set: function set() {}\n      });\n    };\n\n    for (var key in trackProps) {\n      _loop(key);\n    }\n\n    return _ret = track, _possibleConstructorReturn(_this, _ret);\n  }\n\n  return Track;\n}(_eventTarget2['default']);\n\nexports['default'] = Track;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/video.js/es5/tracks/track.js\n ** module id = 34\n ** module chunks = 0 1\n **/","'use strict';\n\nexports.__esModule = true;\nexports.isCrossOrigin = exports.getFileExtension = exports.getAbsoluteURL = exports.parseUrl = undefined;\n\nvar _document = require('global/document');\n\nvar _document2 = _interopRequireDefault(_document);\n\nvar _window = require('global/window');\n\nvar _window2 = _interopRequireDefault(_window);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\n/**\n * @typedef {Object} url:URLObject\n *\n * @property {string} protocol\n *           The protocol of the url that was parsed.\n *\n * @property {string} hostname\n *           The hostname of the url that was parsed.\n *\n * @property {string} port\n *           The port of the url that was parsed.\n *\n * @property {string} pathname\n *           The pathname of the url that was parsed.\n *\n * @property {string} search\n *           The search query of the url that was parsed.\n *\n * @property {string} hash\n *           The hash of the url that was parsed.\n *\n * @property {string} host\n *           The host of the url that was parsed.\n */\n\n/**\n * Resolve and parse the elements of a URL.\n *\n * @param  {String} url\n *         The url to parse\n *\n * @return {url:URLObject}\n *         An object of url details\n */\n/**\n * @file url.js\n * @module url\n */\nvar parseUrl = exports.parseUrl = function parseUrl(url) {\n  var props = ['protocol', 'hostname', 'port', 'pathname', 'search', 'hash', 'host'];\n\n  // add the url to an anchor and let the browser parse the URL\n  var a = _document2['default'].createElement('a');\n\n  a.href = url;\n\n  // IE8 (and 9?) Fix\n  // ie8 doesn't parse the URL correctly until the anchor is actually\n  // added to the body, and an innerHTML is needed to trigger the parsing\n  var addToBody = a.host === '' && a.protocol !== 'file:';\n  var div = void 0;\n\n  if (addToBody) {\n    div = _document2['default'].createElement('div');\n    div.innerHTML = '<a href=\"' + url + '\"></a>';\n    a = div.firstChild;\n    // prevent the div from affecting layout\n    div.setAttribute('style', 'display:none; position:absolute;');\n    _document2['default'].body.appendChild(div);\n  }\n\n  // Copy the specific URL properties to a new object\n  // This is also needed for IE8 because the anchor loses its\n  // properties when it's removed from the dom\n  var details = {};\n\n  for (var i = 0; i < props.length; i++) {\n    details[props[i]] = a[props[i]];\n  }\n\n  // IE9 adds the port to the host property unlike everyone else. If\n  // a port identifier is added for standard ports, strip it.\n  if (details.protocol === 'http:') {\n    details.host = details.host.replace(/:80$/, '');\n  }\n\n  if (details.protocol === 'https:') {\n    details.host = details.host.replace(/:443$/, '');\n  }\n\n  if (addToBody) {\n    _document2['default'].body.removeChild(div);\n  }\n\n  return details;\n};\n\n/**\n * Get absolute version of relative URL. Used to tell flash correct URL.\n *\n *\n * @param  {string} url\n *         URL to make absolute\n *\n * @return {string}\n *         Absolute URL\n *\n * @see http://stackoverflow.com/questions/470832/getting-an-absolute-url-from-a-relative-one-ie6-issue\n */\nvar getAbsoluteURL = exports.getAbsoluteURL = function getAbsoluteURL(url) {\n  // Check if absolute URL\n  if (!url.match(/^https?:\\/\\//)) {\n    // Convert to absolute URL. Flash hosted off-site needs an absolute URL.\n    var div = _document2['default'].createElement('div');\n\n    div.innerHTML = '<a href=\"' + url + '\">x</a>';\n    url = div.firstChild.href;\n  }\n\n  return url;\n};\n\n/**\n * Returns the extension of the passed file name. It will return an empty string\n * if passed an invalid path.\n *\n * @param {string} path\n *        The fileName path like '/path/to/file.mp4'\n *\n * @returns {string}\n *          The extension in lower case or an empty string if no\n *          extension could be found.\n */\nvar getFileExtension = exports.getFileExtension = function getFileExtension(path) {\n  if (typeof path === 'string') {\n    var splitPathRe = /^(\\/?)([\\s\\S]*?)((?:\\.{1,2}|[^\\/]+?)(\\.([^\\.\\/\\?]+)))(?:[\\/]*|[\\?].*)$/i;\n    var pathParts = splitPathRe.exec(path);\n\n    if (pathParts) {\n      return pathParts.pop().toLowerCase();\n    }\n  }\n\n  return '';\n};\n\n/**\n * Returns whether the url passed is a cross domain request or not.\n *\n * @param {string} url\n *        The url to check.\n *\n * @return {boolean}\n *         Whether it is a cross domain request or not.\n */\nvar isCrossOrigin = exports.isCrossOrigin = function isCrossOrigin(url) {\n  var winLoc = _window2['default'].location;\n  var urlInfo = parseUrl(url);\n\n  // IE8 protocol relative urls will return ':' for protocol\n  var srcProtocol = urlInfo.protocol === ':' ? winLoc.protocol : urlInfo.protocol;\n\n  // Check if url is for another domain/origin\n  // IE8 doesn't know location.origin, so we won't rely on it here\n  var crossOrigin = srcProtocol + urlInfo.host !== winLoc.protocol + winLoc.host;\n\n  return crossOrigin;\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/video.js/es5/utils/url.js\n ** module id = 35\n ** module chunks = 0 1\n **/","\"use strict\";\nvar window = require(\"global/window\")\nvar isFunction = require(\"is-function\")\nvar parseHeaders = require(\"parse-headers\")\nvar xtend = require(\"xtend\")\n\nmodule.exports = createXHR\ncreateXHR.XMLHttpRequest = window.XMLHttpRequest || noop\ncreateXHR.XDomainRequest = \"withCredentials\" in (new createXHR.XMLHttpRequest()) ? createXHR.XMLHttpRequest : window.XDomainRequest\n\nforEachArray([\"get\", \"put\", \"post\", \"patch\", \"head\", \"delete\"], function(method) {\n    createXHR[method === \"delete\" ? \"del\" : method] = function(uri, options, callback) {\n        options = initParams(uri, options, callback)\n        options.method = method.toUpperCase()\n        return _createXHR(options)\n    }\n})\n\nfunction forEachArray(array, iterator) {\n    for (var i = 0; i < array.length; i++) {\n        iterator(array[i])\n    }\n}\n\nfunction isEmpty(obj){\n    for(var i in obj){\n        if(obj.hasOwnProperty(i)) return false\n    }\n    return true\n}\n\nfunction initParams(uri, options, callback) {\n    var params = uri\n\n    if (isFunction(options)) {\n        callback = options\n        if (typeof uri === \"string\") {\n            params = {uri:uri}\n        }\n    } else {\n        params = xtend(options, {uri: uri})\n    }\n\n    params.callback = callback\n    return params\n}\n\nfunction createXHR(uri, options, callback) {\n    options = initParams(uri, options, callback)\n    return _createXHR(options)\n}\n\nfunction _createXHR(options) {\n    if(typeof options.callback === \"undefined\"){\n        throw new Error(\"callback argument missing\")\n    }\n\n    var called = false\n    var callback = function cbOnce(err, response, body){\n        if(!called){\n            called = true\n            options.callback(err, response, body)\n        }\n    }\n\n    function readystatechange() {\n        if (xhr.readyState === 4) {\n            loadFunc()\n        }\n    }\n\n    function getBody() {\n        // Chrome with requestType=blob throws errors arround when even testing access to responseText\n        var body = undefined\n\n        if (xhr.response) {\n            body = xhr.response\n        } else {\n            body = xhr.responseText || getXml(xhr)\n        }\n\n        if (isJson) {\n            try {\n                body = JSON.parse(body)\n            } catch (e) {}\n        }\n\n        return body\n    }\n\n    var failureResponse = {\n                body: undefined,\n                headers: {},\n                statusCode: 0,\n                method: method,\n                url: uri,\n                rawRequest: xhr\n            }\n\n    function errorFunc(evt) {\n        clearTimeout(timeoutTimer)\n        if(!(evt instanceof Error)){\n            evt = new Error(\"\" + (evt || \"Unknown XMLHttpRequest Error\") )\n        }\n        evt.statusCode = 0\n        return callback(evt, failureResponse)\n    }\n\n    // will load the data & process the response in a special response object\n    function loadFunc() {\n        if (aborted) return\n        var status\n        clearTimeout(timeoutTimer)\n        if(options.useXDR && xhr.status===undefined) {\n            //IE8 CORS GET successful response doesn't have a status field, but body is fine\n            status = 200\n        } else {\n            status = (xhr.status === 1223 ? 204 : xhr.status)\n        }\n        var response = failureResponse\n        var err = null\n\n        if (status !== 0){\n            response = {\n                body: getBody(),\n                statusCode: status,\n                method: method,\n                headers: {},\n                url: uri,\n                rawRequest: xhr\n            }\n            if(xhr.getAllResponseHeaders){ //remember xhr can in fact be XDR for CORS in IE\n                response.headers = parseHeaders(xhr.getAllResponseHeaders())\n            }\n        } else {\n            err = new Error(\"Internal XMLHttpRequest Error\")\n        }\n        return callback(err, response, response.body)\n    }\n\n    var xhr = options.xhr || null\n\n    if (!xhr) {\n        if (options.cors || options.useXDR) {\n            xhr = new createXHR.XDomainRequest()\n        }else{\n            xhr = new createXHR.XMLHttpRequest()\n        }\n    }\n\n    var key\n    var aborted\n    var uri = xhr.url = options.uri || options.url\n    var method = xhr.method = options.method || \"GET\"\n    var body = options.body || options.data || null\n    var headers = xhr.headers = options.headers || {}\n    var sync = !!options.sync\n    var isJson = false\n    var timeoutTimer\n\n    if (\"json\" in options) {\n        isJson = true\n        headers[\"accept\"] || headers[\"Accept\"] || (headers[\"Accept\"] = \"application/json\") //Don't override existing accept header declared by user\n        if (method !== \"GET\" && method !== \"HEAD\") {\n            headers[\"content-type\"] || headers[\"Content-Type\"] || (headers[\"Content-Type\"] = \"application/json\") //Don't override existing accept header declared by user\n            body = JSON.stringify(options.json)\n        }\n    }\n\n    xhr.onreadystatechange = readystatechange\n    xhr.onload = loadFunc\n    xhr.onerror = errorFunc\n    // IE9 must have onprogress be set to a unique function.\n    xhr.onprogress = function () {\n        // IE must die\n    }\n    xhr.ontimeout = errorFunc\n    xhr.open(method, uri, !sync, options.username, options.password)\n    //has to be after open\n    if(!sync) {\n        xhr.withCredentials = !!options.withCredentials\n    }\n    // Cannot set timeout with sync request\n    // not setting timeout on the xhr object, because of old webkits etc. not handling that correctly\n    // both npm's request and jquery 1.x use this kind of timeout, so this is being consistent\n    if (!sync && options.timeout > 0 ) {\n        timeoutTimer = setTimeout(function(){\n            aborted=true//IE9 may still call readystatechange\n            xhr.abort(\"timeout\")\n            var e = new Error(\"XMLHttpRequest timeout\")\n            e.code = \"ETIMEDOUT\"\n            errorFunc(e)\n        }, options.timeout )\n    }\n\n    if (xhr.setRequestHeader) {\n        for(key in headers){\n            if(headers.hasOwnProperty(key)){\n                xhr.setRequestHeader(key, headers[key])\n            }\n        }\n    } else if (options.headers && !isEmpty(options.headers)) {\n        throw new Error(\"Headers cannot be set on an XDomainRequest object\")\n    }\n\n    if (\"responseType\" in options) {\n        xhr.responseType = options.responseType\n    }\n\n    if (\"beforeSend\" in options &&\n        typeof options.beforeSend === \"function\"\n    ) {\n        options.beforeSend(xhr)\n    }\n\n    xhr.send(body)\n\n    return xhr\n\n\n}\n\nfunction getXml(xhr) {\n    if (xhr.responseType === \"document\") {\n        return xhr.responseXML\n    }\n    var firefoxBugTakenEffect = xhr.status === 204 && xhr.responseXML && xhr.responseXML.documentElement.nodeName === \"parsererror\"\n    if (xhr.responseType === \"\" && !firefoxBugTakenEffect) {\n        return xhr.responseXML\n    }\n\n    return null\n}\n\nfunction noop() {}\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/xhr/index.js\n ** module id = 36\n ** module chunks = 0 1\n **/","module.exports = isFunction\n\nvar toString = Object.prototype.toString\n\nfunction isFunction (fn) {\n  var string = toString.call(fn)\n  return string === '[object Function]' ||\n    (typeof fn === 'function' && string !== '[object RegExp]') ||\n    (typeof window !== 'undefined' &&\n     // IE8 and below\n     (fn === window.setTimeout ||\n      fn === window.alert ||\n      fn === window.confirm ||\n      fn === window.prompt))\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/is-function/index.js\n ** module id = 37\n ** module chunks = 0 1\n **/","var trim = require('trim')\n  , forEach = require('for-each')\n  , isArray = function(arg) {\n      return Object.prototype.toString.call(arg) === '[object Array]';\n    }\n\nmodule.exports = function (headers) {\n  if (!headers)\n    return {}\n\n  var result = {}\n\n  forEach(\n      trim(headers).split('\\n')\n    , function (row) {\n        var index = row.indexOf(':')\n          , key = trim(row.slice(0, index)).toLowerCase()\n          , value = trim(row.slice(index + 1))\n\n        if (typeof(result[key]) === 'undefined') {\n          result[key] = value\n        } else if (isArray(result[key])) {\n          result[key].push(value)\n        } else {\n          result[key] = [ result[key], value ]\n        }\n      }\n  )\n\n  return result\n}\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/parse-headers/parse-headers.js\n ** module id = 38\n ** module chunks = 0 1\n **/","\nexports = module.exports = trim;\n\nfunction trim(str){\n  return str.replace(/^\\s*|\\s*$/g, '');\n}\n\nexports.left = function(str){\n  return str.replace(/^\\s*/, '');\n};\n\nexports.right = function(str){\n  return str.replace(/\\s*$/, '');\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/trim/index.js\n ** module id = 39\n ** module chunks = 0 1\n **/","var isFunction = require('is-function')\n\nmodule.exports = forEach\n\nvar toString = Object.prototype.toString\nvar hasOwnProperty = Object.prototype.hasOwnProperty\n\nfunction forEach(list, iterator, context) {\n    if (!isFunction(iterator)) {\n        throw new TypeError('iterator must be a function')\n    }\n\n    if (arguments.length < 3) {\n        context = this\n    }\n    \n    if (toString.call(list) === '[object Array]')\n        forEachArray(list, iterator, context)\n    else if (typeof list === 'string')\n        forEachString(list, iterator, context)\n    else\n        forEachObject(list, iterator, context)\n}\n\nfunction forEachArray(array, iterator, context) {\n    for (var i = 0, len = array.length; i < len; i++) {\n        if (hasOwnProperty.call(array, i)) {\n            iterator.call(context, array[i], i, array)\n        }\n    }\n}\n\nfunction forEachString(string, iterator, context) {\n    for (var i = 0, len = string.length; i < len; i++) {\n        // no such thing as a sparse string.\n        iterator.call(context, string.charAt(i), i, string)\n    }\n}\n\nfunction forEachObject(object, iterator, context) {\n    for (var k in object) {\n        if (hasOwnProperty.call(object, k)) {\n            iterator.call(context, object[k], k, object)\n        }\n    }\n}\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/for-each/index.js\n ** module id = 40\n ** module chunks = 0 1\n **/","module.exports = extend\n\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\n\nfunction extend() {\n    var target = {}\n\n    for (var i = 0; i < arguments.length; i++) {\n        var source = arguments[i]\n\n        for (var key in source) {\n            if (hasOwnProperty.call(source, key)) {\n                target[key] = source[key]\n            }\n        }\n    }\n\n    return target\n}\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/xtend/immutable.js\n ** module id = 41\n ** module chunks = 0 1\n **/","'use strict';\n\nexports.__esModule = true;\n\nvar _browser = require('../utils/browser.js');\n\nvar browser = _interopRequireWildcard(_browser);\n\nvar _document = require('global/document');\n\nvar _document2 = _interopRequireDefault(_document);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj['default'] = obj; return newObj; } }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } } /**\n                                                                                                                                                           * @file html-track-element-list.js\n                                                                                                                                                           */\n\n/**\n * The current list of {@link HtmlTrackElement}s.\n */\nvar HtmlTrackElementList = function () {\n\n  /**\n   * Create an instance of this class.\n   *\n   * @param {HtmlTrackElement[]} [tracks=[]]\n   *        A list of `HtmlTrackElement` to instantiate the list with.\n   */\n  function HtmlTrackElementList() {\n    var trackElements = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n\n    _classCallCheck(this, HtmlTrackElementList);\n\n    var list = this; // eslint-disable-line\n\n    if (browser.IS_IE8) {\n      list = _document2['default'].createElement('custom');\n\n      for (var prop in HtmlTrackElementList.prototype) {\n        if (prop !== 'constructor') {\n          list[prop] = HtmlTrackElementList.prototype[prop];\n        }\n      }\n    }\n\n    list.trackElements_ = [];\n\n    /**\n     * @member {number} length\n     *         The current number of `Track`s in the this Trackist.\n     */\n    Object.defineProperty(list, 'length', {\n      get: function get() {\n        return this.trackElements_.length;\n      }\n    });\n\n    for (var i = 0, length = trackElements.length; i < length; i++) {\n      list.addTrackElement_(trackElements[i]);\n    }\n\n    if (browser.IS_IE8) {\n      return list;\n    }\n  }\n\n  /**\n   * Add an {@link HtmlTrackElement} to the `HtmlTrackElementList`\n   *\n   * @param {HtmlTrackElement} trackElement\n   *        The track element to add to the list.\n   *\n   * @private\n   */\n\n\n  HtmlTrackElementList.prototype.addTrackElement_ = function addTrackElement_(trackElement) {\n    var index = this.trackElements_.length;\n\n    if (!('' + index in this)) {\n      Object.defineProperty(this, index, {\n        get: function get() {\n          return this.trackElements_[index];\n        }\n      });\n    }\n\n    // Do not add duplicate elements\n    if (this.trackElements_.indexOf(trackElement) === -1) {\n      this.trackElements_.push(trackElement);\n    }\n  };\n\n  /**\n   * Get an {@link HtmlTrackElement} from the `HtmlTrackElementList` given an\n   * {@link TextTrack}.\n   *\n   * @param {TextTrack} track\n   *        The track associated with a track element.\n   *\n   * @return {HtmlTrackElement|undefined}\n   *         The track element that was found or undefined.\n   *\n   * @private\n   */\n\n\n  HtmlTrackElementList.prototype.getTrackElementByTrack_ = function getTrackElementByTrack_(track) {\n    var trackElement_ = void 0;\n\n    for (var i = 0, length = this.trackElements_.length; i < length; i++) {\n      if (track === this.trackElements_[i].track) {\n        trackElement_ = this.trackElements_[i];\n\n        break;\n      }\n    }\n\n    return trackElement_;\n  };\n\n  /**\n   * Remove a {@link HtmlTrackElement} from the `HtmlTrackElementList`\n   *\n   * @param {HtmlTrackElement} trackElement\n   *        The track element to remove from the list.\n   *\n   * @private\n   */\n\n\n  HtmlTrackElementList.prototype.removeTrackElement_ = function removeTrackElement_(trackElement) {\n    for (var i = 0, length = this.trackElements_.length; i < length; i++) {\n      if (trackElement === this.trackElements_[i]) {\n        this.trackElements_.splice(i, 1);\n\n        break;\n      }\n    }\n  };\n\n  return HtmlTrackElementList;\n}();\n\nexports['default'] = HtmlTrackElementList;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/video.js/es5/tracks/html-track-element-list.js\n ** module id = 42\n ** module chunks = 0 1\n **/","'use strict';\n\nexports.__esModule = true;\n\nvar _trackList = require('./track-list');\n\nvar _trackList2 = _interopRequireDefault(_trackList);\n\nvar _fn = require('../utils/fn.js');\n\nvar Fn = _interopRequireWildcard(_fn);\n\nvar _browser = require('../utils/browser.js');\n\nvar browser = _interopRequireWildcard(_browser);\n\nvar _document = require('global/document');\n\nvar _document2 = _interopRequireDefault(_document);\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj['default'] = obj; return newObj; } }\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /**\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * @file text-track-list.js\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                */\n\n\n/**\n * The current list of {@link TextTrack} for a media file.\n *\n * @see [Spec]{@link https://html.spec.whatwg.org/multipage/embedded-content.html#texttracklist}\n * @extends TrackList\n */\nvar TextTrackList = function (_TrackList) {\n  _inherits(TextTrackList, _TrackList);\n\n  /**\n   * Create an instance of this class.\n   *\n   * @param {TextTrack[]} [tracks=[]]\n   *        A list of `TextTrack` to instantiate the list with.\n   */\n  function TextTrackList() {\n    var _this, _ret;\n\n    var tracks = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n\n    _classCallCheck(this, TextTrackList);\n\n    var list = void 0;\n\n    // IE8 forces us to implement inheritance ourselves\n    // as it does not support Object.defineProperty properly\n    if (browser.IS_IE8) {\n      list = _document2['default'].createElement('custom');\n      for (var prop in _trackList2['default'].prototype) {\n        if (prop !== 'constructor') {\n          list[prop] = _trackList2['default'].prototype[prop];\n        }\n      }\n      for (var _prop in TextTrackList.prototype) {\n        if (_prop !== 'constructor') {\n          list[_prop] = TextTrackList.prototype[_prop];\n        }\n      }\n    }\n\n    list = (_this = _possibleConstructorReturn(this, _TrackList.call(this, tracks, list)), _this);\n    return _ret = list, _possibleConstructorReturn(_this, _ret);\n  }\n\n  /**\n   * Add a {@link TextTrack} to the `TextTrackList`\n   *\n   * @param {TextTrack} track\n   *        The text track to add to the list.\n   *\n   * @fires TrackList#addtrack\n   * @private\n   */\n\n\n  TextTrackList.prototype.addTrack_ = function addTrack_(track) {\n    _TrackList.prototype.addTrack_.call(this, track);\n\n    /**\n     * @listens TextTrack#modechange\n     * @fires TrackList#change\n     */\n    track.addEventListener('modechange', Fn.bind(this, function () {\n      this.trigger('change');\n    }));\n  };\n\n  return TextTrackList;\n}(_trackList2['default']);\n\nexports['default'] = TextTrackList;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/video.js/es5/tracks/text-track-list.js\n ** module id = 43\n ** module chunks = 0 1\n **/","'use strict';\n\nexports.__esModule = true;\n\nvar _eventTarget = require('../event-target');\n\nvar _eventTarget2 = _interopRequireDefault(_eventTarget);\n\nvar _browser = require('../utils/browser.js');\n\nvar browser = _interopRequireWildcard(_browser);\n\nvar _document = require('global/document');\n\nvar _document2 = _interopRequireDefault(_document);\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj['default'] = obj; return newObj; } }\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /**\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * @file track-list.js\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                */\n\n\n/**\n * Common functionaliy between {@link TextTrackList}, {@link AudioTrackList}, and\n * {@link VideoTrackList}\n *\n * @extends EventTarget\n */\nvar TrackList = function (_EventTarget) {\n  _inherits(TrackList, _EventTarget);\n\n  /**\n   * Create an instance of this class\n   *\n   * @param {Track[]} tracks\n   *        A list of tracks to initialize the list with.\n   *\n   * @param {Object} [list]\n   *        The child object with inheritance done manually for ie8.\n   *\n   * @abstract\n   */\n  function TrackList() {\n    var tracks = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n\n    var _ret;\n\n    var list = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n\n    _classCallCheck(this, TrackList);\n\n    var _this = _possibleConstructorReturn(this, _EventTarget.call(this));\n\n    if (!list) {\n      list = _this; // eslint-disable-line\n      if (browser.IS_IE8) {\n        list = _document2['default'].createElement('custom');\n        for (var prop in TrackList.prototype) {\n          if (prop !== 'constructor') {\n            list[prop] = TrackList.prototype[prop];\n          }\n        }\n      }\n    }\n\n    list.tracks_ = [];\n\n    /**\n     * @member {number} length\n     *         The current number of `Track`s in the this Trackist.\n     */\n    Object.defineProperty(list, 'length', {\n      get: function get() {\n        return this.tracks_.length;\n      }\n    });\n\n    for (var i = 0; i < tracks.length; i++) {\n      list.addTrack_(tracks[i]);\n    }\n\n    // must return the object, as for ie8 it will not be this\n    // but a reference to a document object\n    return _ret = list, _possibleConstructorReturn(_this, _ret);\n  }\n\n  /**\n   * Add a {@link Track} to the `TrackList`\n   *\n   * @param {Track} track\n   *        The audio, video, or text track to add to the list.\n   *\n   * @fires TrackList#addtrack\n   * @private\n   */\n\n\n  TrackList.prototype.addTrack_ = function addTrack_(track) {\n    var index = this.tracks_.length;\n\n    if (!('' + index in this)) {\n      Object.defineProperty(this, index, {\n        get: function get() {\n          return this.tracks_[index];\n        }\n      });\n    }\n\n    // Do not add duplicate tracks\n    if (this.tracks_.indexOf(track) === -1) {\n      this.tracks_.push(track);\n      /**\n       * Triggered when a track is added to a track list.\n       *\n       * @event TrackList#addtrack\n       * @type {EventTarget~Event}\n       * @property {Track} track\n       *           A reference to track that was added.\n       */\n      this.trigger({\n        track: track,\n        type: 'addtrack'\n      });\n    }\n  };\n\n  /**\n   * Remove a {@link Track} from the `TrackList`\n   *\n   * @param {Track} track\n   *        The audio, video, or text track to remove from the list.\n   *\n   * @fires TrackList#removetrack\n   * @private\n   */\n\n\n  TrackList.prototype.removeTrack_ = function removeTrack_(rtrack) {\n    var track = void 0;\n\n    for (var i = 0, l = this.length; i < l; i++) {\n      if (this[i] === rtrack) {\n        track = this[i];\n        if (track.off) {\n          track.off();\n        }\n\n        this.tracks_.splice(i, 1);\n\n        break;\n      }\n    }\n\n    if (!track) {\n      return;\n    }\n\n    /**\n     * Triggered when a track is removed from track list.\n     *\n     * @event TrackList#removetrack\n     * @type {EventTarget~Event}\n     * @property {Track} track\n     *           A reference to track that was removed.\n     */\n    this.trigger({\n      track: track,\n      type: 'removetrack'\n    });\n  };\n\n  /**\n   * Get a Track from the TrackList by a tracks id\n   *\n   * @param {String} id - the id of the track to get\n   * @method getTrackById\n   * @return {Track}\n   * @private\n   */\n\n\n  TrackList.prototype.getTrackById = function getTrackById(id) {\n    var result = null;\n\n    for (var i = 0, l = this.length; i < l; i++) {\n      var track = this[i];\n\n      if (track.id === id) {\n        result = track;\n        break;\n      }\n    }\n\n    return result;\n  };\n\n  return TrackList;\n}(_eventTarget2['default']);\n\n/**\n * Triggered when a different track is selected/enabled.\n *\n * @event TrackList#change\n * @type {EventTarget~Event}\n */\n\n/**\n * Events that can be called with on + eventName. See {@link EventHandler}.\n *\n * @property {Object} TrackList#allowedEvents_\n * @private\n */\n\n\nTrackList.prototype.allowedEvents_ = {\n  change: 'change',\n  addtrack: 'addtrack',\n  removetrack: 'removetrack'\n};\n\n// emulate attribute EventHandler support to allow for feature detection\nfor (var event in TrackList.prototype.allowedEvents_) {\n  TrackList.prototype['on' + event] = null;\n}\n\nexports['default'] = TrackList;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/video.js/es5/tracks/track-list.js\n ** module id = 44\n ** module chunks = 0 1\n **/","'use strict';\n\nexports.__esModule = true;\n\nvar _trackList = require('./track-list');\n\nvar _trackList2 = _interopRequireDefault(_trackList);\n\nvar _browser = require('../utils/browser.js');\n\nvar browser = _interopRequireWildcard(_browser);\n\nvar _document = require('global/document');\n\nvar _document2 = _interopRequireDefault(_document);\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj['default'] = obj; return newObj; } }\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /**\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * @file video-track-list.js\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                */\n\n\n/**\n * Un-select all other {@link VideoTrack}s that are selected.\n *\n * @param {VideoTrackList} list\n *        list to work on\n *\n * @param {VideoTrack} track\n *        The track to skip\n *\n * @private\n */\nvar disableOthers = function disableOthers(list, track) {\n  for (var i = 0; i < list.length; i++) {\n    if (track.id === list[i].id) {\n      continue;\n    }\n    // another video track is enabled, disable it\n    list[i].selected = false;\n  }\n};\n\n/**\n * The current list of {@link VideoTrack} for a video.\n *\n * @see [Spec]{@link https://html.spec.whatwg.org/multipage/embedded-content.html#videotracklist}\n * @extends TrackList\n */\n\nvar VideoTrackList = function (_TrackList) {\n  _inherits(VideoTrackList, _TrackList);\n\n  /**\n   * Create an instance of this class.\n   *\n   * @param {VideoTrack[]} [tracks=[]]\n   *        A list of `VideoTrack` to instantiate the list with.\n   */\n  function VideoTrackList() {\n    var _this, _ret;\n\n    var tracks = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n\n    _classCallCheck(this, VideoTrackList);\n\n    var list = void 0;\n\n    // make sure only 1 track is enabled\n    // sorted from last index to first index\n    for (var i = tracks.length - 1; i >= 0; i--) {\n      if (tracks[i].selected) {\n        disableOthers(tracks, tracks[i]);\n        break;\n      }\n    }\n\n    // IE8 forces us to implement inheritance ourselves\n    // as it does not support Object.defineProperty properly\n    if (browser.IS_IE8) {\n      list = _document2['default'].createElement('custom');\n      for (var prop in _trackList2['default'].prototype) {\n        if (prop !== 'constructor') {\n          list[prop] = _trackList2['default'].prototype[prop];\n        }\n      }\n      for (var _prop in VideoTrackList.prototype) {\n        if (_prop !== 'constructor') {\n          list[_prop] = VideoTrackList.prototype[_prop];\n        }\n      }\n    }\n\n    list = (_this = _possibleConstructorReturn(this, _TrackList.call(this, tracks, list)), _this);\n    list.changing_ = false;\n\n    /**\n     * @member {number} VideoTrackList#selectedIndex\n     *         The current index of the selected {@link VideoTrack`}.\n     */\n    Object.defineProperty(list, 'selectedIndex', {\n      get: function get() {\n        for (var _i = 0; _i < this.length; _i++) {\n          if (this[_i].selected) {\n            return _i;\n          }\n        }\n        return -1;\n      },\n      set: function set() {}\n    });\n\n    return _ret = list, _possibleConstructorReturn(_this, _ret);\n  }\n\n  /**\n   * Add a {@link VideoTrack} to the `VideoTrackList`.\n   *\n   * @param {VideoTrack} track\n   *        The VideoTrack to add to the list\n   *\n   * @fires TrackList#addtrack\n   * @private\n   */\n\n\n  VideoTrackList.prototype.addTrack_ = function addTrack_(track) {\n    var _this2 = this;\n\n    if (track.selected) {\n      disableOthers(this, track);\n    }\n\n    _TrackList.prototype.addTrack_.call(this, track);\n    // native tracks don't have this\n    if (!track.addEventListener) {\n      return;\n    }\n\n    /**\n     * @listens VideoTrack#selectedchange\n     * @fires TrackList#change\n     */\n    track.addEventListener('selectedchange', function () {\n      if (_this2.changing_) {\n        return;\n      }\n      _this2.changing_ = true;\n      disableOthers(_this2, track);\n      _this2.changing_ = false;\n      _this2.trigger('change');\n    });\n  };\n\n  /**\n   * Add a {@link VideoTrack} to the `VideoTrackList`.\n   *\n   * @param {VideoTrack} track\n   *        The VideoTrack to add to the list\n   *\n   * @fires TrackList#addtrack\n   */\n\n\n  VideoTrackList.prototype.addTrack = function addTrack(track) {\n    this.addTrack_(track);\n  };\n\n  /**\n   * Remove a {@link VideoTrack} to the `VideoTrackList`.\n   *\n   * @param {VideoTrack} track\n   *        The VideoTrack to remove from the list.\n   *\n   * @fires TrackList#removetrack\n   */\n\n\n  VideoTrackList.prototype.removeTrack = function removeTrack(track) {\n    _TrackList.prototype.removeTrack_.call(this, track);\n  };\n\n  return VideoTrackList;\n}(_trackList2['default']);\n\nexports['default'] = VideoTrackList;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/video.js/es5/tracks/video-track-list.js\n ** module id = 45\n ** module chunks = 0 1\n **/","'use strict';\n\nexports.__esModule = true;\n\nvar _trackList = require('./track-list');\n\nvar _trackList2 = _interopRequireDefault(_trackList);\n\nvar _browser = require('../utils/browser.js');\n\nvar browser = _interopRequireWildcard(_browser);\n\nvar _document = require('global/document');\n\nvar _document2 = _interopRequireDefault(_document);\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj['default'] = obj; return newObj; } }\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /**\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * @file audio-track-list.js\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                */\n\n\n/**\n * Anywhere we call this function we diverge from the spec\n * as we only support one enabled audiotrack at a time\n *\n * @param {AudioTrackList} list\n *        list to work on\n *\n * @param {AudioTrack} track\n *        The track to skip\n *\n * @private\n */\nvar disableOthers = function disableOthers(list, track) {\n  for (var i = 0; i < list.length; i++) {\n    if (track.id === list[i].id) {\n      continue;\n    }\n    // another audio track is enabled, disable it\n    list[i].enabled = false;\n  }\n};\n\n/**\n * The current list of {@link AudioTrack} for a media file.\n *\n * @see [Spec]{@link https://html.spec.whatwg.org/multipage/embedded-content.html#audiotracklist}\n * @extends TrackList\n */\n\nvar AudioTrackList = function (_TrackList) {\n  _inherits(AudioTrackList, _TrackList);\n\n  /**\n   * Create an instance of this class.\n   *\n   * @param {AudioTrack[]} [tracks=[]]\n   *        A list of `AudioTrack` to instantiate the list with.\n   */\n  function AudioTrackList() {\n    var _this, _ret;\n\n    var tracks = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n\n    _classCallCheck(this, AudioTrackList);\n\n    var list = void 0;\n\n    // make sure only 1 track is enabled\n    // sorted from last index to first index\n    for (var i = tracks.length - 1; i >= 0; i--) {\n      if (tracks[i].enabled) {\n        disableOthers(tracks, tracks[i]);\n        break;\n      }\n    }\n\n    // IE8 forces us to implement inheritance ourselves\n    // as it does not support Object.defineProperty properly\n    if (browser.IS_IE8) {\n      list = _document2['default'].createElement('custom');\n      for (var prop in _trackList2['default'].prototype) {\n        if (prop !== 'constructor') {\n          list[prop] = _trackList2['default'].prototype[prop];\n        }\n      }\n      for (var _prop in AudioTrackList.prototype) {\n        if (_prop !== 'constructor') {\n          list[_prop] = AudioTrackList.prototype[_prop];\n        }\n      }\n    }\n\n    list = (_this = _possibleConstructorReturn(this, _TrackList.call(this, tracks, list)), _this);\n    list.changing_ = false;\n\n    return _ret = list, _possibleConstructorReturn(_this, _ret);\n  }\n\n  /**\n   * Add an {@link AudioTrack} to the `AudioTrackList`.\n   *\n   * @param {AudioTrack} track\n   *        The AudioTrack to add to the list\n   *\n   * @fires Track#addtrack\n   * @private\n   */\n\n\n  AudioTrackList.prototype.addTrack_ = function addTrack_(track) {\n    var _this2 = this;\n\n    if (track.enabled) {\n      disableOthers(this, track);\n    }\n\n    _TrackList.prototype.addTrack_.call(this, track);\n    // native tracks don't have this\n    if (!track.addEventListener) {\n      return;\n    }\n\n    /**\n     * @listens AudioTrack#enabledchange\n     * @fires TrackList#change\n     */\n    track.addEventListener('enabledchange', function () {\n      // when we are disabling other tracks (since we don't support\n      // more than one track at a time) we will set changing_\n      // to true so that we don't trigger additional change events\n      if (_this2.changing_) {\n        return;\n      }\n      _this2.changing_ = true;\n      disableOthers(_this2, track);\n      _this2.changing_ = false;\n      _this2.trigger('change');\n    });\n  };\n\n  /**\n   * Add an {@link AudioTrack} to the `AudioTrackList`.\n   *\n   * @param {AudioTrack} track\n   *        The AudioTrack to add to the list\n   *\n   * @fires Track#addtrack\n   */\n\n\n  AudioTrackList.prototype.addTrack = function addTrack(track) {\n    this.addTrack_(track);\n  };\n\n  /**\n   * Remove an {@link AudioTrack} from the `AudioTrackList`.\n   *\n   * @param {AudioTrack} track\n   *        The AudioTrack to remove from the list\n   *\n   * @fires Track#removetrack\n   */\n\n\n  AudioTrackList.prototype.removeTrack = function removeTrack(track) {\n    _TrackList.prototype.removeTrack_.call(this, track);\n  };\n\n  return AudioTrackList;\n}(_trackList2['default']);\n\nexports['default'] = AudioTrackList;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/video.js/es5/tracks/audio-track-list.js\n ** module id = 46\n ** module chunks = 0 1\n **/","/**\n * Copyright 2013 vtt.js Contributors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n// Default exports for Node. Export the extended versions of VTTCue and\n// VTTRegion in Node since we likely want the capability to convert back and\n// forth between JSON. If we don't then it's not that big of a deal since we're\n// off browser.\nmodule.exports = {\n  WebVTT: require(\"./vtt.js\").WebVTT,\n  VTTCue: require(\"./vttcue-extended.js\").VTTCue,\n  VTTRegion: require(\"./vttregion-extended.js\").VTTRegion\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/videojs-vtt.js/lib/index.js\n ** module id = 47\n ** module chunks = 0 1\n **/","/**\n * Copyright 2013 vtt.js Contributors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/* -*- Mode: Java; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\n/* vim: set shiftwidth=2 tabstop=2 autoindent cindent expandtab: */\n\n(function(global) {\n\n  var _objCreate = Object.create || (function() {\n    function F() {}\n    return function(o) {\n      if (arguments.length !== 1) {\n        throw new Error('Object.create shim only accepts one parameter.');\n      }\n      F.prototype = o;\n      return new F();\n    };\n  })();\n\n  // Creates a new ParserError object from an errorData object. The errorData\n  // object should have default code and message properties. The default message\n  // property can be overriden by passing in a message parameter.\n  // See ParsingError.Errors below for acceptable errors.\n  function ParsingError(errorData, message) {\n    this.name = \"ParsingError\";\n    this.code = errorData.code;\n    this.message = message || errorData.message;\n  }\n  ParsingError.prototype = _objCreate(Error.prototype);\n  ParsingError.prototype.constructor = ParsingError;\n\n  // ParsingError metadata for acceptable ParsingErrors.\n  ParsingError.Errors = {\n    BadSignature: {\n      code: 0,\n      message: \"Malformed WebVTT signature.\"\n    },\n    BadTimeStamp: {\n      code: 1,\n      message: \"Malformed time stamp.\"\n    }\n  };\n\n  // Try to parse input as a time stamp.\n  function parseTimeStamp(input) {\n\n    function computeSeconds(h, m, s, f) {\n      return (h | 0) * 3600 + (m | 0) * 60 + (s | 0) + (f | 0) / 1000;\n    }\n\n    var m = input.match(/^(\\d+):(\\d{2})(:\\d{2})?\\.(\\d{3})/);\n    if (!m) {\n      return null;\n    }\n\n    if (m[3]) {\n      // Timestamp takes the form of [hours]:[minutes]:[seconds].[milliseconds]\n      return computeSeconds(m[1], m[2], m[3].replace(\":\", \"\"), m[4]);\n    } else if (m[1] > 59) {\n      // Timestamp takes the form of [hours]:[minutes].[milliseconds]\n      // First position is hours as it's over 59.\n      return computeSeconds(m[1], m[2], 0,  m[4]);\n    } else {\n      // Timestamp takes the form of [minutes]:[seconds].[milliseconds]\n      return computeSeconds(0, m[1], m[2], m[4]);\n    }\n  }\n\n  // A settings object holds key/value pairs and will ignore anything but the first\n  // assignment to a specific key.\n  function Settings() {\n    this.values = _objCreate(null);\n  }\n\n  Settings.prototype = {\n    // Only accept the first assignment to any key.\n    set: function(k, v) {\n      if (!this.get(k) && v !== \"\") {\n        this.values[k] = v;\n      }\n    },\n    // Return the value for a key, or a default value.\n    // If 'defaultKey' is passed then 'dflt' is assumed to be an object with\n    // a number of possible default values as properties where 'defaultKey' is\n    // the key of the property that will be chosen; otherwise it's assumed to be\n    // a single value.\n    get: function(k, dflt, defaultKey) {\n      if (defaultKey) {\n        return this.has(k) ? this.values[k] : dflt[defaultKey];\n      }\n      return this.has(k) ? this.values[k] : dflt;\n    },\n    // Check whether we have a value for a key.\n    has: function(k) {\n      return k in this.values;\n    },\n    // Accept a setting if its one of the given alternatives.\n    alt: function(k, v, a) {\n      for (var n = 0; n < a.length; ++n) {\n        if (v === a[n]) {\n          this.set(k, v);\n          break;\n        }\n      }\n    },\n    // Accept a setting if its a valid (signed) integer.\n    integer: function(k, v) {\n      if (/^-?\\d+$/.test(v)) { // integer\n        this.set(k, parseInt(v, 10));\n      }\n    },\n    // Accept a setting if its a valid percentage.\n    percent: function(k, v) {\n      var m;\n      if ((m = v.match(/^([\\d]{1,3})(\\.[\\d]*)?%$/))) {\n        v = parseFloat(v);\n        if (v >= 0 && v <= 100) {\n          this.set(k, v);\n          return true;\n        }\n      }\n      return false;\n    }\n  };\n\n  // Helper function to parse input into groups separated by 'groupDelim', and\n  // interprete each group as a key/value pair separated by 'keyValueDelim'.\n  function parseOptions(input, callback, keyValueDelim, groupDelim) {\n    var groups = groupDelim ? input.split(groupDelim) : [input];\n    for (var i in groups) {\n      if (typeof groups[i] !== \"string\") {\n        continue;\n      }\n      var kv = groups[i].split(keyValueDelim);\n      if (kv.length !== 2) {\n        continue;\n      }\n      var k = kv[0];\n      var v = kv[1];\n      callback(k, v);\n    }\n  }\n\n  function parseCue(input, cue, regionList) {\n    // Remember the original input if we need to throw an error.\n    var oInput = input;\n    // 4.1 WebVTT timestamp\n    function consumeTimeStamp() {\n      var ts = parseTimeStamp(input);\n      if (ts === null) {\n        throw new ParsingError(ParsingError.Errors.BadTimeStamp,\n                              \"Malformed timestamp: \" + oInput);\n      }\n      // Remove time stamp from input.\n      input = input.replace(/^[^\\sa-zA-Z-]+/, \"\");\n      return ts;\n    }\n\n    // 4.4.2 WebVTT cue settings\n    function consumeCueSettings(input, cue) {\n      var settings = new Settings();\n\n      parseOptions(input, function (k, v) {\n        switch (k) {\n        case \"region\":\n          // Find the last region we parsed with the same region id.\n          for (var i = regionList.length - 1; i >= 0; i--) {\n            if (regionList[i].id === v) {\n              settings.set(k, regionList[i].region);\n              break;\n            }\n          }\n          break;\n        case \"vertical\":\n          settings.alt(k, v, [\"rl\", \"lr\"]);\n          break;\n        case \"line\":\n          var vals = v.split(\",\"),\n              vals0 = vals[0];\n          settings.integer(k, vals0);\n          settings.percent(k, vals0) ? settings.set(\"snapToLines\", false) : null;\n          settings.alt(k, vals0, [\"auto\"]);\n          if (vals.length === 2) {\n            settings.alt(\"lineAlign\", vals[1], [\"start\", \"middle\", \"end\"]);\n          }\n          break;\n        case \"position\":\n          vals = v.split(\",\");\n          settings.percent(k, vals[0]);\n          if (vals.length === 2) {\n            settings.alt(\"positionAlign\", vals[1], [\"start\", \"middle\", \"end\"]);\n          }\n          break;\n        case \"size\":\n          settings.percent(k, v);\n          break;\n        case \"align\":\n          settings.alt(k, v, [\"start\", \"middle\", \"end\", \"left\", \"right\"]);\n          break;\n        }\n      }, /:/, /\\s/);\n\n      // Apply default values for any missing fields.\n      cue.region = settings.get(\"region\", null);\n      cue.vertical = settings.get(\"vertical\", \"\");\n      cue.line = settings.get(\"line\", \"auto\");\n      cue.lineAlign = settings.get(\"lineAlign\", \"start\");\n      cue.snapToLines = settings.get(\"snapToLines\", true);\n      cue.size = settings.get(\"size\", 100);\n      cue.align = settings.get(\"align\", \"middle\");\n      cue.position = settings.get(\"position\", {\n        start: 0,\n        left: 0,\n        middle: 50,\n        end: 100,\n        right: 100\n      }, cue.align);\n      cue.positionAlign = settings.get(\"positionAlign\", {\n        start: \"start\",\n        left: \"start\",\n        middle: \"middle\",\n        end: \"end\",\n        right: \"end\"\n      }, cue.align);\n    }\n\n    function skipWhitespace() {\n      input = input.replace(/^\\s+/, \"\");\n    }\n\n    // 4.1 WebVTT cue timings.\n    skipWhitespace();\n    cue.startTime = consumeTimeStamp();   // (1) collect cue start time\n    skipWhitespace();\n    if (input.substr(0, 3) !== \"-->\") {     // (3) next characters must match \"-->\"\n      throw new ParsingError(ParsingError.Errors.BadTimeStamp,\n                             \"Malformed time stamp (time stamps must be separated by '-->'): \" +\n                             oInput);\n    }\n    input = input.substr(3);\n    skipWhitespace();\n    cue.endTime = consumeTimeStamp();     // (5) collect cue end time\n\n    // 4.1 WebVTT cue settings list.\n    skipWhitespace();\n    consumeCueSettings(input, cue);\n  }\n\n  var ESCAPE = {\n    \"&amp;\": \"&\",\n    \"&lt;\": \"<\",\n    \"&gt;\": \">\",\n    \"&lrm;\": \"\\u200e\",\n    \"&rlm;\": \"\\u200f\",\n    \"&nbsp;\": \"\\u00a0\"\n  };\n\n  var TAG_NAME = {\n    c: \"span\",\n    i: \"i\",\n    b: \"b\",\n    u: \"u\",\n    ruby: \"ruby\",\n    rt: \"rt\",\n    v: \"span\",\n    lang: \"span\"\n  };\n\n  var TAG_ANNOTATION = {\n    v: \"title\",\n    lang: \"lang\"\n  };\n\n  var NEEDS_PARENT = {\n    rt: \"ruby\"\n  };\n\n  // Parse content into a document fragment.\n  function parseContent(window, input) {\n    function nextToken() {\n      // Check for end-of-string.\n      if (!input) {\n        return null;\n      }\n\n      // Consume 'n' characters from the input.\n      function consume(result) {\n        input = input.substr(result.length);\n        return result;\n      }\n\n      var m = input.match(/^([^<]*)(<[^>]+>?)?/);\n      // If there is some text before the next tag, return it, otherwise return\n      // the tag.\n      return consume(m[1] ? m[1] : m[2]);\n    }\n\n    // Unescape a string 's'.\n    function unescape1(e) {\n      return ESCAPE[e];\n    }\n    function unescape(s) {\n      while ((m = s.match(/&(amp|lt|gt|lrm|rlm|nbsp);/))) {\n        s = s.replace(m[0], unescape1);\n      }\n      return s;\n    }\n\n    function shouldAdd(current, element) {\n      return !NEEDS_PARENT[element.localName] ||\n             NEEDS_PARENT[element.localName] === current.localName;\n    }\n\n    // Create an element for this tag.\n    function createElement(type, annotation) {\n      var tagName = TAG_NAME[type];\n      if (!tagName) {\n        return null;\n      }\n      var element = window.document.createElement(tagName);\n      element.localName = tagName;\n      var name = TAG_ANNOTATION[type];\n      if (name && annotation) {\n        element[name] = annotation.trim();\n      }\n      return element;\n    }\n\n    var rootDiv = window.document.createElement(\"div\"),\n        current = rootDiv,\n        t,\n        tagStack = [];\n\n    while ((t = nextToken()) !== null) {\n      if (t[0] === '<') {\n        if (t[1] === \"/\") {\n          // If the closing tag matches, move back up to the parent node.\n          if (tagStack.length &&\n              tagStack[tagStack.length - 1] === t.substr(2).replace(\">\", \"\")) {\n            tagStack.pop();\n            current = current.parentNode;\n          }\n          // Otherwise just ignore the end tag.\n          continue;\n        }\n        var ts = parseTimeStamp(t.substr(1, t.length - 2));\n        var node;\n        if (ts) {\n          // Timestamps are lead nodes as well.\n          node = window.document.createProcessingInstruction(\"timestamp\", ts);\n          current.appendChild(node);\n          continue;\n        }\n        var m = t.match(/^<([^.\\s/0-9>]+)(\\.[^\\s\\\\>]+)?([^>\\\\]+)?(\\\\?)>?$/);\n        // If we can't parse the tag, skip to the next tag.\n        if (!m) {\n          continue;\n        }\n        // Try to construct an element, and ignore the tag if we couldn't.\n        node = createElement(m[1], m[3]);\n        if (!node) {\n          continue;\n        }\n        // Determine if the tag should be added based on the context of where it\n        // is placed in the cuetext.\n        if (!shouldAdd(current, node)) {\n          continue;\n        }\n        // Set the class list (as a list of classes, separated by space).\n        if (m[2]) {\n          node.className = m[2].substr(1).replace('.', ' ');\n        }\n        // Append the node to the current node, and enter the scope of the new\n        // node.\n        tagStack.push(m[1]);\n        current.appendChild(node);\n        current = node;\n        continue;\n      }\n\n      // Text nodes are leaf nodes.\n      current.appendChild(window.document.createTextNode(unescape(t)));\n    }\n\n    return rootDiv;\n  }\n\n  // This is a list of all the Unicode characters that have a strong\n  // right-to-left category. What this means is that these characters are\n  // written right-to-left for sure. It was generated by pulling all the strong\n  // right-to-left characters out of the Unicode data table. That table can\n  // found at: http://www.unicode.org/Public/UNIDATA/UnicodeData.txt\n  var strongRTLChars = [0x05BE, 0x05C0, 0x05C3, 0x05C6, 0x05D0, 0x05D1,\n      0x05D2, 0x05D3, 0x05D4, 0x05D5, 0x05D6, 0x05D7, 0x05D8, 0x05D9, 0x05DA,\n      0x05DB, 0x05DC, 0x05DD, 0x05DE, 0x05DF, 0x05E0, 0x05E1, 0x05E2, 0x05E3,\n      0x05E4, 0x05E5, 0x05E6, 0x05E7, 0x05E8, 0x05E9, 0x05EA, 0x05F0, 0x05F1,\n      0x05F2, 0x05F3, 0x05F4, 0x0608, 0x060B, 0x060D, 0x061B, 0x061E, 0x061F,\n      0x0620, 0x0621, 0x0622, 0x0623, 0x0624, 0x0625, 0x0626, 0x0627, 0x0628,\n      0x0629, 0x062A, 0x062B, 0x062C, 0x062D, 0x062E, 0x062F, 0x0630, 0x0631,\n      0x0632, 0x0633, 0x0634, 0x0635, 0x0636, 0x0637, 0x0638, 0x0639, 0x063A,\n      0x063B, 0x063C, 0x063D, 0x063E, 0x063F, 0x0640, 0x0641, 0x0642, 0x0643,\n      0x0644, 0x0645, 0x0646, 0x0647, 0x0648, 0x0649, 0x064A, 0x066D, 0x066E,\n      0x066F, 0x0671, 0x0672, 0x0673, 0x0674, 0x0675, 0x0676, 0x0677, 0x0678,\n      0x0679, 0x067A, 0x067B, 0x067C, 0x067D, 0x067E, 0x067F, 0x0680, 0x0681,\n      0x0682, 0x0683, 0x0684, 0x0685, 0x0686, 0x0687, 0x0688, 0x0689, 0x068A,\n      0x068B, 0x068C, 0x068D, 0x068E, 0x068F, 0x0690, 0x0691, 0x0692, 0x0693,\n      0x0694, 0x0695, 0x0696, 0x0697, 0x0698, 0x0699, 0x069A, 0x069B, 0x069C,\n      0x069D, 0x069E, 0x069F, 0x06A0, 0x06A1, 0x06A2, 0x06A3, 0x06A4, 0x06A5,\n      0x06A6, 0x06A7, 0x06A8, 0x06A9, 0x06AA, 0x06AB, 0x06AC, 0x06AD, 0x06AE,\n      0x06AF, 0x06B0, 0x06B1, 0x06B2, 0x06B3, 0x06B4, 0x06B5, 0x06B6, 0x06B7,\n      0x06B8, 0x06B9, 0x06BA, 0x06BB, 0x06BC, 0x06BD, 0x06BE, 0x06BF, 0x06C0,\n      0x06C1, 0x06C2, 0x06C3, 0x06C4, 0x06C5, 0x06C6, 0x06C7, 0x06C8, 0x06C9,\n      0x06CA, 0x06CB, 0x06CC, 0x06CD, 0x06CE, 0x06CF, 0x06D0, 0x06D1, 0x06D2,\n      0x06D3, 0x06D4, 0x06D5, 0x06E5, 0x06E6, 0x06EE, 0x06EF, 0x06FA, 0x06FB,\n      0x06FC, 0x06FD, 0x06FE, 0x06FF, 0x0700, 0x0701, 0x0702, 0x0703, 0x0704,\n      0x0705, 0x0706, 0x0707, 0x0708, 0x0709, 0x070A, 0x070B, 0x070C, 0x070D,\n      0x070F, 0x0710, 0x0712, 0x0713, 0x0714, 0x0715, 0x0716, 0x0717, 0x0718,\n      0x0719, 0x071A, 0x071B, 0x071C, 0x071D, 0x071E, 0x071F, 0x0720, 0x0721,\n      0x0722, 0x0723, 0x0724, 0x0725, 0x0726, 0x0727, 0x0728, 0x0729, 0x072A,\n      0x072B, 0x072C, 0x072D, 0x072E, 0x072F, 0x074D, 0x074E, 0x074F, 0x0750,\n      0x0751, 0x0752, 0x0753, 0x0754, 0x0755, 0x0756, 0x0757, 0x0758, 0x0759,\n      0x075A, 0x075B, 0x075C, 0x075D, 0x075E, 0x075F, 0x0760, 0x0761, 0x0762,\n      0x0763, 0x0764, 0x0765, 0x0766, 0x0767, 0x0768, 0x0769, 0x076A, 0x076B,\n      0x076C, 0x076D, 0x076E, 0x076F, 0x0770, 0x0771, 0x0772, 0x0773, 0x0774,\n      0x0775, 0x0776, 0x0777, 0x0778, 0x0779, 0x077A, 0x077B, 0x077C, 0x077D,\n      0x077E, 0x077F, 0x0780, 0x0781, 0x0782, 0x0783, 0x0784, 0x0785, 0x0786,\n      0x0787, 0x0788, 0x0789, 0x078A, 0x078B, 0x078C, 0x078D, 0x078E, 0x078F,\n      0x0790, 0x0791, 0x0792, 0x0793, 0x0794, 0x0795, 0x0796, 0x0797, 0x0798,\n      0x0799, 0x079A, 0x079B, 0x079C, 0x079D, 0x079E, 0x079F, 0x07A0, 0x07A1,\n      0x07A2, 0x07A3, 0x07A4, 0x07A5, 0x07B1, 0x07C0, 0x07C1, 0x07C2, 0x07C3,\n      0x07C4, 0x07C5, 0x07C6, 0x07C7, 0x07C8, 0x07C9, 0x07CA, 0x07CB, 0x07CC,\n      0x07CD, 0x07CE, 0x07CF, 0x07D0, 0x07D1, 0x07D2, 0x07D3, 0x07D4, 0x07D5,\n      0x07D6, 0x07D7, 0x07D8, 0x07D9, 0x07DA, 0x07DB, 0x07DC, 0x07DD, 0x07DE,\n      0x07DF, 0x07E0, 0x07E1, 0x07E2, 0x07E3, 0x07E4, 0x07E5, 0x07E6, 0x07E7,\n      0x07E8, 0x07E9, 0x07EA, 0x07F4, 0x07F5, 0x07FA, 0x0800, 0x0801, 0x0802,\n      0x0803, 0x0804, 0x0805, 0x0806, 0x0807, 0x0808, 0x0809, 0x080A, 0x080B,\n      0x080C, 0x080D, 0x080E, 0x080F, 0x0810, 0x0811, 0x0812, 0x0813, 0x0814,\n      0x0815, 0x081A, 0x0824, 0x0828, 0x0830, 0x0831, 0x0832, 0x0833, 0x0834,\n      0x0835, 0x0836, 0x0837, 0x0838, 0x0839, 0x083A, 0x083B, 0x083C, 0x083D,\n      0x083E, 0x0840, 0x0841, 0x0842, 0x0843, 0x0844, 0x0845, 0x0846, 0x0847,\n      0x0848, 0x0849, 0x084A, 0x084B, 0x084C, 0x084D, 0x084E, 0x084F, 0x0850,\n      0x0851, 0x0852, 0x0853, 0x0854, 0x0855, 0x0856, 0x0857, 0x0858, 0x085E,\n      0x08A0, 0x08A2, 0x08A3, 0x08A4, 0x08A5, 0x08A6, 0x08A7, 0x08A8, 0x08A9,\n      0x08AA, 0x08AB, 0x08AC, 0x200F, 0xFB1D, 0xFB1F, 0xFB20, 0xFB21, 0xFB22,\n      0xFB23, 0xFB24, 0xFB25, 0xFB26, 0xFB27, 0xFB28, 0xFB2A, 0xFB2B, 0xFB2C,\n      0xFB2D, 0xFB2E, 0xFB2F, 0xFB30, 0xFB31, 0xFB32, 0xFB33, 0xFB34, 0xFB35,\n      0xFB36, 0xFB38, 0xFB39, 0xFB3A, 0xFB3B, 0xFB3C, 0xFB3E, 0xFB40, 0xFB41,\n      0xFB43, 0xFB44, 0xFB46, 0xFB47, 0xFB48, 0xFB49, 0xFB4A, 0xFB4B, 0xFB4C,\n      0xFB4D, 0xFB4E, 0xFB4F, 0xFB50, 0xFB51, 0xFB52, 0xFB53, 0xFB54, 0xFB55,\n      0xFB56, 0xFB57, 0xFB58, 0xFB59, 0xFB5A, 0xFB5B, 0xFB5C, 0xFB5D, 0xFB5E,\n      0xFB5F, 0xFB60, 0xFB61, 0xFB62, 0xFB63, 0xFB64, 0xFB65, 0xFB66, 0xFB67,\n      0xFB68, 0xFB69, 0xFB6A, 0xFB6B, 0xFB6C, 0xFB6D, 0xFB6E, 0xFB6F, 0xFB70,\n      0xFB71, 0xFB72, 0xFB73, 0xFB74, 0xFB75, 0xFB76, 0xFB77, 0xFB78, 0xFB79,\n      0xFB7A, 0xFB7B, 0xFB7C, 0xFB7D, 0xFB7E, 0xFB7F, 0xFB80, 0xFB81, 0xFB82,\n      0xFB83, 0xFB84, 0xFB85, 0xFB86, 0xFB87, 0xFB88, 0xFB89, 0xFB8A, 0xFB8B,\n      0xFB8C, 0xFB8D, 0xFB8E, 0xFB8F, 0xFB90, 0xFB91, 0xFB92, 0xFB93, 0xFB94,\n      0xFB95, 0xFB96, 0xFB97, 0xFB98, 0xFB99, 0xFB9A, 0xFB9B, 0xFB9C, 0xFB9D,\n      0xFB9E, 0xFB9F, 0xFBA0, 0xFBA1, 0xFBA2, 0xFBA3, 0xFBA4, 0xFBA5, 0xFBA6,\n      0xFBA7, 0xFBA8, 0xFBA9, 0xFBAA, 0xFBAB, 0xFBAC, 0xFBAD, 0xFBAE, 0xFBAF,\n      0xFBB0, 0xFBB1, 0xFBB2, 0xFBB3, 0xFBB4, 0xFBB5, 0xFBB6, 0xFBB7, 0xFBB8,\n      0xFBB9, 0xFBBA, 0xFBBB, 0xFBBC, 0xFBBD, 0xFBBE, 0xFBBF, 0xFBC0, 0xFBC1,\n      0xFBD3, 0xFBD4, 0xFBD5, 0xFBD6, 0xFBD7, 0xFBD8, 0xFBD9, 0xFBDA, 0xFBDB,\n      0xFBDC, 0xFBDD, 0xFBDE, 0xFBDF, 0xFBE0, 0xFBE1, 0xFBE2, 0xFBE3, 0xFBE4,\n      0xFBE5, 0xFBE6, 0xFBE7, 0xFBE8, 0xFBE9, 0xFBEA, 0xFBEB, 0xFBEC, 0xFBED,\n      0xFBEE, 0xFBEF, 0xFBF0, 0xFBF1, 0xFBF2, 0xFBF3, 0xFBF4, 0xFBF5, 0xFBF6,\n      0xFBF7, 0xFBF8, 0xFBF9, 0xFBFA, 0xFBFB, 0xFBFC, 0xFBFD, 0xFBFE, 0xFBFF,\n      0xFC00, 0xFC01, 0xFC02, 0xFC03, 0xFC04, 0xFC05, 0xFC06, 0xFC07, 0xFC08,\n      0xFC09, 0xFC0A, 0xFC0B, 0xFC0C, 0xFC0D, 0xFC0E, 0xFC0F, 0xFC10, 0xFC11,\n      0xFC12, 0xFC13, 0xFC14, 0xFC15, 0xFC16, 0xFC17, 0xFC18, 0xFC19, 0xFC1A,\n      0xFC1B, 0xFC1C, 0xFC1D, 0xFC1E, 0xFC1F, 0xFC20, 0xFC21, 0xFC22, 0xFC23,\n      0xFC24, 0xFC25, 0xFC26, 0xFC27, 0xFC28, 0xFC29, 0xFC2A, 0xFC2B, 0xFC2C,\n      0xFC2D, 0xFC2E, 0xFC2F, 0xFC30, 0xFC31, 0xFC32, 0xFC33, 0xFC34, 0xFC35,\n      0xFC36, 0xFC37, 0xFC38, 0xFC39, 0xFC3A, 0xFC3B, 0xFC3C, 0xFC3D, 0xFC3E,\n      0xFC3F, 0xFC40, 0xFC41, 0xFC42, 0xFC43, 0xFC44, 0xFC45, 0xFC46, 0xFC47,\n      0xFC48, 0xFC49, 0xFC4A, 0xFC4B, 0xFC4C, 0xFC4D, 0xFC4E, 0xFC4F, 0xFC50,\n      0xFC51, 0xFC52, 0xFC53, 0xFC54, 0xFC55, 0xFC56, 0xFC57, 0xFC58, 0xFC59,\n      0xFC5A, 0xFC5B, 0xFC5C, 0xFC5D, 0xFC5E, 0xFC5F, 0xFC60, 0xFC61, 0xFC62,\n      0xFC63, 0xFC64, 0xFC65, 0xFC66, 0xFC67, 0xFC68, 0xFC69, 0xFC6A, 0xFC6B,\n      0xFC6C, 0xFC6D, 0xFC6E, 0xFC6F, 0xFC70, 0xFC71, 0xFC72, 0xFC73, 0xFC74,\n      0xFC75, 0xFC76, 0xFC77, 0xFC78, 0xFC79, 0xFC7A, 0xFC7B, 0xFC7C, 0xFC7D,\n      0xFC7E, 0xFC7F, 0xFC80, 0xFC81, 0xFC82, 0xFC83, 0xFC84, 0xFC85, 0xFC86,\n      0xFC87, 0xFC88, 0xFC89, 0xFC8A, 0xFC8B, 0xFC8C, 0xFC8D, 0xFC8E, 0xFC8F,\n      0xFC90, 0xFC91, 0xFC92, 0xFC93, 0xFC94, 0xFC95, 0xFC96, 0xFC97, 0xFC98,\n      0xFC99, 0xFC9A, 0xFC9B, 0xFC9C, 0xFC9D, 0xFC9E, 0xFC9F, 0xFCA0, 0xFCA1,\n      0xFCA2, 0xFCA3, 0xFCA4, 0xFCA5, 0xFCA6, 0xFCA7, 0xFCA8, 0xFCA9, 0xFCAA,\n      0xFCAB, 0xFCAC, 0xFCAD, 0xFCAE, 0xFCAF, 0xFCB0, 0xFCB1, 0xFCB2, 0xFCB3,\n      0xFCB4, 0xFCB5, 0xFCB6, 0xFCB7, 0xFCB8, 0xFCB9, 0xFCBA, 0xFCBB, 0xFCBC,\n      0xFCBD, 0xFCBE, 0xFCBF, 0xFCC0, 0xFCC1, 0xFCC2, 0xFCC3, 0xFCC4, 0xFCC5,\n      0xFCC6, 0xFCC7, 0xFCC8, 0xFCC9, 0xFCCA, 0xFCCB, 0xFCCC, 0xFCCD, 0xFCCE,\n      0xFCCF, 0xFCD0, 0xFCD1, 0xFCD2, 0xFCD3, 0xFCD4, 0xFCD5, 0xFCD6, 0xFCD7,\n      0xFCD8, 0xFCD9, 0xFCDA, 0xFCDB, 0xFCDC, 0xFCDD, 0xFCDE, 0xFCDF, 0xFCE0,\n      0xFCE1, 0xFCE2, 0xFCE3, 0xFCE4, 0xFCE5, 0xFCE6, 0xFCE7, 0xFCE8, 0xFCE9,\n      0xFCEA, 0xFCEB, 0xFCEC, 0xFCED, 0xFCEE, 0xFCEF, 0xFCF0, 0xFCF1, 0xFCF2,\n      0xFCF3, 0xFCF4, 0xFCF5, 0xFCF6, 0xFCF7, 0xFCF8, 0xFCF9, 0xFCFA, 0xFCFB,\n      0xFCFC, 0xFCFD, 0xFCFE, 0xFCFF, 0xFD00, 0xFD01, 0xFD02, 0xFD03, 0xFD04,\n      0xFD05, 0xFD06, 0xFD07, 0xFD08, 0xFD09, 0xFD0A, 0xFD0B, 0xFD0C, 0xFD0D,\n      0xFD0E, 0xFD0F, 0xFD10, 0xFD11, 0xFD12, 0xFD13, 0xFD14, 0xFD15, 0xFD16,\n      0xFD17, 0xFD18, 0xFD19, 0xFD1A, 0xFD1B, 0xFD1C, 0xFD1D, 0xFD1E, 0xFD1F,\n      0xFD20, 0xFD21, 0xFD22, 0xFD23, 0xFD24, 0xFD25, 0xFD26, 0xFD27, 0xFD28,\n      0xFD29, 0xFD2A, 0xFD2B, 0xFD2C, 0xFD2D, 0xFD2E, 0xFD2F, 0xFD30, 0xFD31,\n      0xFD32, 0xFD33, 0xFD34, 0xFD35, 0xFD36, 0xFD37, 0xFD38, 0xFD39, 0xFD3A,\n      0xFD3B, 0xFD3C, 0xFD3D, 0xFD50, 0xFD51, 0xFD52, 0xFD53, 0xFD54, 0xFD55,\n      0xFD56, 0xFD57, 0xFD58, 0xFD59, 0xFD5A, 0xFD5B, 0xFD5C, 0xFD5D, 0xFD5E,\n      0xFD5F, 0xFD60, 0xFD61, 0xFD62, 0xFD63, 0xFD64, 0xFD65, 0xFD66, 0xFD67,\n      0xFD68, 0xFD69, 0xFD6A, 0xFD6B, 0xFD6C, 0xFD6D, 0xFD6E, 0xFD6F, 0xFD70,\n      0xFD71, 0xFD72, 0xFD73, 0xFD74, 0xFD75, 0xFD76, 0xFD77, 0xFD78, 0xFD79,\n      0xFD7A, 0xFD7B, 0xFD7C, 0xFD7D, 0xFD7E, 0xFD7F, 0xFD80, 0xFD81, 0xFD82,\n      0xFD83, 0xFD84, 0xFD85, 0xFD86, 0xFD87, 0xFD88, 0xFD89, 0xFD8A, 0xFD8B,\n      0xFD8C, 0xFD8D, 0xFD8E, 0xFD8F, 0xFD92, 0xFD93, 0xFD94, 0xFD95, 0xFD96,\n      0xFD97, 0xFD98, 0xFD99, 0xFD9A, 0xFD9B, 0xFD9C, 0xFD9D, 0xFD9E, 0xFD9F,\n      0xFDA0, 0xFDA1, 0xFDA2, 0xFDA3, 0xFDA4, 0xFDA5, 0xFDA6, 0xFDA7, 0xFDA8,\n      0xFDA9, 0xFDAA, 0xFDAB, 0xFDAC, 0xFDAD, 0xFDAE, 0xFDAF, 0xFDB0, 0xFDB1,\n      0xFDB2, 0xFDB3, 0xFDB4, 0xFDB5, 0xFDB6, 0xFDB7, 0xFDB8, 0xFDB9, 0xFDBA,\n      0xFDBB, 0xFDBC, 0xFDBD, 0xFDBE, 0xFDBF, 0xFDC0, 0xFDC1, 0xFDC2, 0xFDC3,\n      0xFDC4, 0xFDC5, 0xFDC6, 0xFDC7, 0xFDF0, 0xFDF1, 0xFDF2, 0xFDF3, 0xFDF4,\n      0xFDF5, 0xFDF6, 0xFDF7, 0xFDF8, 0xFDF9, 0xFDFA, 0xFDFB, 0xFDFC, 0xFE70,\n      0xFE71, 0xFE72, 0xFE73, 0xFE74, 0xFE76, 0xFE77, 0xFE78, 0xFE79, 0xFE7A,\n      0xFE7B, 0xFE7C, 0xFE7D, 0xFE7E, 0xFE7F, 0xFE80, 0xFE81, 0xFE82, 0xFE83,\n      0xFE84, 0xFE85, 0xFE86, 0xFE87, 0xFE88, 0xFE89, 0xFE8A, 0xFE8B, 0xFE8C,\n      0xFE8D, 0xFE8E, 0xFE8F, 0xFE90, 0xFE91, 0xFE92, 0xFE93, 0xFE94, 0xFE95,\n      0xFE96, 0xFE97, 0xFE98, 0xFE99, 0xFE9A, 0xFE9B, 0xFE9C, 0xFE9D, 0xFE9E,\n      0xFE9F, 0xFEA0, 0xFEA1, 0xFEA2, 0xFEA3, 0xFEA4, 0xFEA5, 0xFEA6, 0xFEA7,\n      0xFEA8, 0xFEA9, 0xFEAA, 0xFEAB, 0xFEAC, 0xFEAD, 0xFEAE, 0xFEAF, 0xFEB0,\n      0xFEB1, 0xFEB2, 0xFEB3, 0xFEB4, 0xFEB5, 0xFEB6, 0xFEB7, 0xFEB8, 0xFEB9,\n      0xFEBA, 0xFEBB, 0xFEBC, 0xFEBD, 0xFEBE, 0xFEBF, 0xFEC0, 0xFEC1, 0xFEC2,\n      0xFEC3, 0xFEC4, 0xFEC5, 0xFEC6, 0xFEC7, 0xFEC8, 0xFEC9, 0xFECA, 0xFECB,\n      0xFECC, 0xFECD, 0xFECE, 0xFECF, 0xFED0, 0xFED1, 0xFED2, 0xFED3, 0xFED4,\n      0xFED5, 0xFED6, 0xFED7, 0xFED8, 0xFED9, 0xFEDA, 0xFEDB, 0xFEDC, 0xFEDD,\n      0xFEDE, 0xFEDF, 0xFEE0, 0xFEE1, 0xFEE2, 0xFEE3, 0xFEE4, 0xFEE5, 0xFEE6,\n      0xFEE7, 0xFEE8, 0xFEE9, 0xFEEA, 0xFEEB, 0xFEEC, 0xFEED, 0xFEEE, 0xFEEF,\n      0xFEF0, 0xFEF1, 0xFEF2, 0xFEF3, 0xFEF4, 0xFEF5, 0xFEF6, 0xFEF7, 0xFEF8,\n      0xFEF9, 0xFEFA, 0xFEFB, 0xFEFC, 0x10800, 0x10801, 0x10802, 0x10803,\n      0x10804, 0x10805, 0x10808, 0x1080A, 0x1080B, 0x1080C, 0x1080D, 0x1080E,\n      0x1080F, 0x10810, 0x10811, 0x10812, 0x10813, 0x10814, 0x10815, 0x10816,\n      0x10817, 0x10818, 0x10819, 0x1081A, 0x1081B, 0x1081C, 0x1081D, 0x1081E,\n      0x1081F, 0x10820, 0x10821, 0x10822, 0x10823, 0x10824, 0x10825, 0x10826,\n      0x10827, 0x10828, 0x10829, 0x1082A, 0x1082B, 0x1082C, 0x1082D, 0x1082E,\n      0x1082F, 0x10830, 0x10831, 0x10832, 0x10833, 0x10834, 0x10835, 0x10837,\n      0x10838, 0x1083C, 0x1083F, 0x10840, 0x10841, 0x10842, 0x10843, 0x10844,\n      0x10845, 0x10846, 0x10847, 0x10848, 0x10849, 0x1084A, 0x1084B, 0x1084C,\n      0x1084D, 0x1084E, 0x1084F, 0x10850, 0x10851, 0x10852, 0x10853, 0x10854,\n      0x10855, 0x10857, 0x10858, 0x10859, 0x1085A, 0x1085B, 0x1085C, 0x1085D,\n      0x1085E, 0x1085F, 0x10900, 0x10901, 0x10902, 0x10903, 0x10904, 0x10905,\n      0x10906, 0x10907, 0x10908, 0x10909, 0x1090A, 0x1090B, 0x1090C, 0x1090D,\n      0x1090E, 0x1090F, 0x10910, 0x10911, 0x10912, 0x10913, 0x10914, 0x10915,\n      0x10916, 0x10917, 0x10918, 0x10919, 0x1091A, 0x1091B, 0x10920, 0x10921,\n      0x10922, 0x10923, 0x10924, 0x10925, 0x10926, 0x10927, 0x10928, 0x10929,\n      0x1092A, 0x1092B, 0x1092C, 0x1092D, 0x1092E, 0x1092F, 0x10930, 0x10931,\n      0x10932, 0x10933, 0x10934, 0x10935, 0x10936, 0x10937, 0x10938, 0x10939,\n      0x1093F, 0x10980, 0x10981, 0x10982, 0x10983, 0x10984, 0x10985, 0x10986,\n      0x10987, 0x10988, 0x10989, 0x1098A, 0x1098B, 0x1098C, 0x1098D, 0x1098E,\n      0x1098F, 0x10990, 0x10991, 0x10992, 0x10993, 0x10994, 0x10995, 0x10996,\n      0x10997, 0x10998, 0x10999, 0x1099A, 0x1099B, 0x1099C, 0x1099D, 0x1099E,\n      0x1099F, 0x109A0, 0x109A1, 0x109A2, 0x109A3, 0x109A4, 0x109A5, 0x109A6,\n      0x109A7, 0x109A8, 0x109A9, 0x109AA, 0x109AB, 0x109AC, 0x109AD, 0x109AE,\n      0x109AF, 0x109B0, 0x109B1, 0x109B2, 0x109B3, 0x109B4, 0x109B5, 0x109B6,\n      0x109B7, 0x109BE, 0x109BF, 0x10A00, 0x10A10, 0x10A11, 0x10A12, 0x10A13,\n      0x10A15, 0x10A16, 0x10A17, 0x10A19, 0x10A1A, 0x10A1B, 0x10A1C, 0x10A1D,\n      0x10A1E, 0x10A1F, 0x10A20, 0x10A21, 0x10A22, 0x10A23, 0x10A24, 0x10A25,\n      0x10A26, 0x10A27, 0x10A28, 0x10A29, 0x10A2A, 0x10A2B, 0x10A2C, 0x10A2D,\n      0x10A2E, 0x10A2F, 0x10A30, 0x10A31, 0x10A32, 0x10A33, 0x10A40, 0x10A41,\n      0x10A42, 0x10A43, 0x10A44, 0x10A45, 0x10A46, 0x10A47, 0x10A50, 0x10A51,\n      0x10A52, 0x10A53, 0x10A54, 0x10A55, 0x10A56, 0x10A57, 0x10A58, 0x10A60,\n      0x10A61, 0x10A62, 0x10A63, 0x10A64, 0x10A65, 0x10A66, 0x10A67, 0x10A68,\n      0x10A69, 0x10A6A, 0x10A6B, 0x10A6C, 0x10A6D, 0x10A6E, 0x10A6F, 0x10A70,\n      0x10A71, 0x10A72, 0x10A73, 0x10A74, 0x10A75, 0x10A76, 0x10A77, 0x10A78,\n      0x10A79, 0x10A7A, 0x10A7B, 0x10A7C, 0x10A7D, 0x10A7E, 0x10A7F, 0x10B00,\n      0x10B01, 0x10B02, 0x10B03, 0x10B04, 0x10B05, 0x10B06, 0x10B07, 0x10B08,\n      0x10B09, 0x10B0A, 0x10B0B, 0x10B0C, 0x10B0D, 0x10B0E, 0x10B0F, 0x10B10,\n      0x10B11, 0x10B12, 0x10B13, 0x10B14, 0x10B15, 0x10B16, 0x10B17, 0x10B18,\n      0x10B19, 0x10B1A, 0x10B1B, 0x10B1C, 0x10B1D, 0x10B1E, 0x10B1F, 0x10B20,\n      0x10B21, 0x10B22, 0x10B23, 0x10B24, 0x10B25, 0x10B26, 0x10B27, 0x10B28,\n      0x10B29, 0x10B2A, 0x10B2B, 0x10B2C, 0x10B2D, 0x10B2E, 0x10B2F, 0x10B30,\n      0x10B31, 0x10B32, 0x10B33, 0x10B34, 0x10B35, 0x10B40, 0x10B41, 0x10B42,\n      0x10B43, 0x10B44, 0x10B45, 0x10B46, 0x10B47, 0x10B48, 0x10B49, 0x10B4A,\n      0x10B4B, 0x10B4C, 0x10B4D, 0x10B4E, 0x10B4F, 0x10B50, 0x10B51, 0x10B52,\n      0x10B53, 0x10B54, 0x10B55, 0x10B58, 0x10B59, 0x10B5A, 0x10B5B, 0x10B5C,\n      0x10B5D, 0x10B5E, 0x10B5F, 0x10B60, 0x10B61, 0x10B62, 0x10B63, 0x10B64,\n      0x10B65, 0x10B66, 0x10B67, 0x10B68, 0x10B69, 0x10B6A, 0x10B6B, 0x10B6C,\n      0x10B6D, 0x10B6E, 0x10B6F, 0x10B70, 0x10B71, 0x10B72, 0x10B78, 0x10B79,\n      0x10B7A, 0x10B7B, 0x10B7C, 0x10B7D, 0x10B7E, 0x10B7F, 0x10C00, 0x10C01,\n      0x10C02, 0x10C03, 0x10C04, 0x10C05, 0x10C06, 0x10C07, 0x10C08, 0x10C09,\n      0x10C0A, 0x10C0B, 0x10C0C, 0x10C0D, 0x10C0E, 0x10C0F, 0x10C10, 0x10C11,\n      0x10C12, 0x10C13, 0x10C14, 0x10C15, 0x10C16, 0x10C17, 0x10C18, 0x10C19,\n      0x10C1A, 0x10C1B, 0x10C1C, 0x10C1D, 0x10C1E, 0x10C1F, 0x10C20, 0x10C21,\n      0x10C22, 0x10C23, 0x10C24, 0x10C25, 0x10C26, 0x10C27, 0x10C28, 0x10C29,\n      0x10C2A, 0x10C2B, 0x10C2C, 0x10C2D, 0x10C2E, 0x10C2F, 0x10C30, 0x10C31,\n      0x10C32, 0x10C33, 0x10C34, 0x10C35, 0x10C36, 0x10C37, 0x10C38, 0x10C39,\n      0x10C3A, 0x10C3B, 0x10C3C, 0x10C3D, 0x10C3E, 0x10C3F, 0x10C40, 0x10C41,\n      0x10C42, 0x10C43, 0x10C44, 0x10C45, 0x10C46, 0x10C47, 0x10C48, 0x1EE00,\n      0x1EE01, 0x1EE02, 0x1EE03, 0x1EE05, 0x1EE06, 0x1EE07, 0x1EE08, 0x1EE09,\n      0x1EE0A, 0x1EE0B, 0x1EE0C, 0x1EE0D, 0x1EE0E, 0x1EE0F, 0x1EE10, 0x1EE11,\n      0x1EE12, 0x1EE13, 0x1EE14, 0x1EE15, 0x1EE16, 0x1EE17, 0x1EE18, 0x1EE19,\n      0x1EE1A, 0x1EE1B, 0x1EE1C, 0x1EE1D, 0x1EE1E, 0x1EE1F, 0x1EE21, 0x1EE22,\n      0x1EE24, 0x1EE27, 0x1EE29, 0x1EE2A, 0x1EE2B, 0x1EE2C, 0x1EE2D, 0x1EE2E,\n      0x1EE2F, 0x1EE30, 0x1EE31, 0x1EE32, 0x1EE34, 0x1EE35, 0x1EE36, 0x1EE37,\n      0x1EE39, 0x1EE3B, 0x1EE42, 0x1EE47, 0x1EE49, 0x1EE4B, 0x1EE4D, 0x1EE4E,\n      0x1EE4F, 0x1EE51, 0x1EE52, 0x1EE54, 0x1EE57, 0x1EE59, 0x1EE5B, 0x1EE5D,\n      0x1EE5F, 0x1EE61, 0x1EE62, 0x1EE64, 0x1EE67, 0x1EE68, 0x1EE69, 0x1EE6A,\n      0x1EE6C, 0x1EE6D, 0x1EE6E, 0x1EE6F, 0x1EE70, 0x1EE71, 0x1EE72, 0x1EE74,\n      0x1EE75, 0x1EE76, 0x1EE77, 0x1EE79, 0x1EE7A, 0x1EE7B, 0x1EE7C, 0x1EE7E,\n      0x1EE80, 0x1EE81, 0x1EE82, 0x1EE83, 0x1EE84, 0x1EE85, 0x1EE86, 0x1EE87,\n      0x1EE88, 0x1EE89, 0x1EE8B, 0x1EE8C, 0x1EE8D, 0x1EE8E, 0x1EE8F, 0x1EE90,\n      0x1EE91, 0x1EE92, 0x1EE93, 0x1EE94, 0x1EE95, 0x1EE96, 0x1EE97, 0x1EE98,\n      0x1EE99, 0x1EE9A, 0x1EE9B, 0x1EEA1, 0x1EEA2, 0x1EEA3, 0x1EEA5, 0x1EEA6,\n      0x1EEA7, 0x1EEA8, 0x1EEA9, 0x1EEAB, 0x1EEAC, 0x1EEAD, 0x1EEAE, 0x1EEAF,\n      0x1EEB0, 0x1EEB1, 0x1EEB2, 0x1EEB3, 0x1EEB4, 0x1EEB5, 0x1EEB6, 0x1EEB7,\n      0x1EEB8, 0x1EEB9, 0x1EEBA, 0x1EEBB, 0x10FFFD];\n\n  function determineBidi(cueDiv) {\n    var nodeStack = [],\n        text = \"\",\n        charCode;\n\n    if (!cueDiv || !cueDiv.childNodes) {\n      return \"ltr\";\n    }\n\n    function pushNodes(nodeStack, node) {\n      for (var i = node.childNodes.length - 1; i >= 0; i--) {\n        nodeStack.push(node.childNodes[i]);\n      }\n    }\n\n    function nextTextNode(nodeStack) {\n      if (!nodeStack || !nodeStack.length) {\n        return null;\n      }\n\n      var node = nodeStack.pop(),\n          text = node.textContent || node.innerText;\n      if (text) {\n        // TODO: This should match all unicode type B characters (paragraph\n        // separator characters). See issue #115.\n        var m = text.match(/^.*(\\n|\\r)/);\n        if (m) {\n          nodeStack.length = 0;\n          return m[0];\n        }\n        return text;\n      }\n      if (node.tagName === \"ruby\") {\n        return nextTextNode(nodeStack);\n      }\n      if (node.childNodes) {\n        pushNodes(nodeStack, node);\n        return nextTextNode(nodeStack);\n      }\n    }\n\n    pushNodes(nodeStack, cueDiv);\n    while ((text = nextTextNode(nodeStack))) {\n      for (var i = 0; i < text.length; i++) {\n        charCode = text.charCodeAt(i);\n        for (var j = 0; j < strongRTLChars.length; j++) {\n          if (strongRTLChars[j] === charCode) {\n            return \"rtl\";\n          }\n        }\n      }\n    }\n    return \"ltr\";\n  }\n\n  function computeLinePos(cue) {\n    if (typeof cue.line === \"number\" &&\n        (cue.snapToLines || (cue.line >= 0 && cue.line <= 100))) {\n      return cue.line;\n    }\n    if (!cue.track || !cue.track.textTrackList ||\n        !cue.track.textTrackList.mediaElement) {\n      return -1;\n    }\n    var track = cue.track,\n        trackList = track.textTrackList,\n        count = 0;\n    for (var i = 0; i < trackList.length && trackList[i] !== track; i++) {\n      if (trackList[i].mode === \"showing\") {\n        count++;\n      }\n    }\n    return ++count * -1;\n  }\n\n  function StyleBox() {\n  }\n\n  // Apply styles to a div. If there is no div passed then it defaults to the\n  // div on 'this'.\n  StyleBox.prototype.applyStyles = function(styles, div) {\n    div = div || this.div;\n    for (var prop in styles) {\n      if (styles.hasOwnProperty(prop)) {\n        div.style[prop] = styles[prop];\n      }\n    }\n  };\n\n  StyleBox.prototype.formatStyle = function(val, unit) {\n    return val === 0 ? 0 : val + unit;\n  };\n\n  // Constructs the computed display state of the cue (a div). Places the div\n  // into the overlay which should be a block level element (usually a div).\n  function CueStyleBox(window, cue, styleOptions) {\n    var isIE8 = (/MSIE\\s8\\.0/).test(navigator.userAgent);\n    var color = \"rgba(255, 255, 255, 1)\";\n    var backgroundColor = \"rgba(0, 0, 0, 0.8)\";\n\n    if (isIE8) {\n      color = \"rgb(255, 255, 255)\";\n      backgroundColor = \"rgb(0, 0, 0)\";\n    }\n\n    StyleBox.call(this);\n    this.cue = cue;\n\n    // Parse our cue's text into a DOM tree rooted at 'cueDiv'. This div will\n    // have inline positioning and will function as the cue background box.\n    this.cueDiv = parseContent(window, cue.text);\n    var styles = {\n      color: color,\n      backgroundColor: backgroundColor,\n      position: \"relative\",\n      left: 0,\n      right: 0,\n      top: 0,\n      bottom: 0,\n      display: \"inline\"\n    };\n\n    if (!isIE8) {\n      styles.writingMode = cue.vertical === \"\" ? \"horizontal-tb\"\n                                               : cue.vertical === \"lr\" ? \"vertical-lr\"\n                                                                       : \"vertical-rl\";\n      styles.unicodeBidi = \"plaintext\";\n    }\n    this.applyStyles(styles, this.cueDiv);\n\n    // Create an absolutely positioned div that will be used to position the cue\n    // div. Note, all WebVTT cue-setting alignments are equivalent to the CSS\n    // mirrors of them except \"middle\" which is \"center\" in CSS.\n    this.div = window.document.createElement(\"div\");\n    styles = {\n      textAlign: cue.align === \"middle\" ? \"center\" : cue.align,\n      font: styleOptions.font,\n      whiteSpace: \"pre-line\",\n      position: \"absolute\"\n    };\n\n    if (!isIE8) {\n      styles.direction = determineBidi(this.cueDiv);\n      styles.writingMode = cue.vertical === \"\" ? \"horizontal-tb\"\n                                               : cue.vertical === \"lr\" ? \"vertical-lr\"\n                                                                       : \"vertical-rl\".\n      stylesunicodeBidi =  \"plaintext\";\n    }\n\n    this.applyStyles(styles);\n\n    this.div.appendChild(this.cueDiv);\n\n    // Calculate the distance from the reference edge of the viewport to the text\n    // position of the cue box. The reference edge will be resolved later when\n    // the box orientation styles are applied.\n    var textPos = 0;\n    switch (cue.positionAlign) {\n    case \"start\":\n      textPos = cue.position;\n      break;\n    case \"middle\":\n      textPos = cue.position - (cue.size / 2);\n      break;\n    case \"end\":\n      textPos = cue.position - cue.size;\n      break;\n    }\n\n    // Horizontal box orientation; textPos is the distance from the left edge of the\n    // area to the left edge of the box and cue.size is the distance extending to\n    // the right from there.\n    if (cue.vertical === \"\") {\n      this.applyStyles({\n        left:  this.formatStyle(textPos, \"%\"),\n        width: this.formatStyle(cue.size, \"%\")\n      });\n    // Vertical box orientation; textPos is the distance from the top edge of the\n    // area to the top edge of the box and cue.size is the height extending\n    // downwards from there.\n    } else {\n      this.applyStyles({\n        top: this.formatStyle(textPos, \"%\"),\n        height: this.formatStyle(cue.size, \"%\")\n      });\n    }\n\n    this.move = function(box) {\n      this.applyStyles({\n        top: this.formatStyle(box.top, \"px\"),\n        bottom: this.formatStyle(box.bottom, \"px\"),\n        left: this.formatStyle(box.left, \"px\"),\n        right: this.formatStyle(box.right, \"px\"),\n        height: this.formatStyle(box.height, \"px\"),\n        width: this.formatStyle(box.width, \"px\")\n      });\n    };\n  }\n  CueStyleBox.prototype = _objCreate(StyleBox.prototype);\n  CueStyleBox.prototype.constructor = CueStyleBox;\n\n  // Represents the co-ordinates of an Element in a way that we can easily\n  // compute things with such as if it overlaps or intersects with another Element.\n  // Can initialize it with either a StyleBox or another BoxPosition.\n  function BoxPosition(obj) {\n    var isIE8 = (/MSIE\\s8\\.0/).test(navigator.userAgent);\n\n    // Either a BoxPosition was passed in and we need to copy it, or a StyleBox\n    // was passed in and we need to copy the results of 'getBoundingClientRect'\n    // as the object returned is readonly. All co-ordinate values are in reference\n    // to the viewport origin (top left).\n    var lh, height, width, top;\n    if (obj.div) {\n      height = obj.div.offsetHeight;\n      width = obj.div.offsetWidth;\n      top = obj.div.offsetTop;\n\n      var rects = (rects = obj.div.childNodes) && (rects = rects[0]) &&\n                  rects.getClientRects && rects.getClientRects();\n      obj = obj.div.getBoundingClientRect();\n      // In certain cases the outter div will be slightly larger then the sum of\n      // the inner div's lines. This could be due to bold text, etc, on some platforms.\n      // In this case we should get the average line height and use that. This will\n      // result in the desired behaviour.\n      lh = rects ? Math.max((rects[0] && rects[0].height) || 0, obj.height / rects.length)\n                 : 0;\n\n    }\n    this.left = obj.left;\n    this.right = obj.right;\n    this.top = obj.top || top;\n    this.height = obj.height || height;\n    this.bottom = obj.bottom || (top + (obj.height || height));\n    this.width = obj.width || width;\n    this.lineHeight = lh !== undefined ? lh : obj.lineHeight;\n\n    if (isIE8 && !this.lineHeight) {\n      this.lineHeight = 13;\n    }\n  }\n\n  // Move the box along a particular axis. Optionally pass in an amount to move\n  // the box. If no amount is passed then the default is the line height of the\n  // box.\n  BoxPosition.prototype.move = function(axis, toMove) {\n    toMove = toMove !== undefined ? toMove : this.lineHeight;\n    switch (axis) {\n    case \"+x\":\n      this.left += toMove;\n      this.right += toMove;\n      break;\n    case \"-x\":\n      this.left -= toMove;\n      this.right -= toMove;\n      break;\n    case \"+y\":\n      this.top += toMove;\n      this.bottom += toMove;\n      break;\n    case \"-y\":\n      this.top -= toMove;\n      this.bottom -= toMove;\n      break;\n    }\n  };\n\n  // Check if this box overlaps another box, b2.\n  BoxPosition.prototype.overlaps = function(b2) {\n    return this.left < b2.right &&\n           this.right > b2.left &&\n           this.top < b2.bottom &&\n           this.bottom > b2.top;\n  };\n\n  // Check if this box overlaps any other boxes in boxes.\n  BoxPosition.prototype.overlapsAny = function(boxes) {\n    for (var i = 0; i < boxes.length; i++) {\n      if (this.overlaps(boxes[i])) {\n        return true;\n      }\n    }\n    return false;\n  };\n\n  // Check if this box is within another box.\n  BoxPosition.prototype.within = function(container) {\n    return this.top >= container.top &&\n           this.bottom <= container.bottom &&\n           this.left >= container.left &&\n           this.right <= container.right;\n  };\n\n  // Check if this box is entirely within the container or it is overlapping\n  // on the edge opposite of the axis direction passed. For example, if \"+x\" is\n  // passed and the box is overlapping on the left edge of the container, then\n  // return true.\n  BoxPosition.prototype.overlapsOppositeAxis = function(container, axis) {\n    switch (axis) {\n    case \"+x\":\n      return this.left < container.left;\n    case \"-x\":\n      return this.right > container.right;\n    case \"+y\":\n      return this.top < container.top;\n    case \"-y\":\n      return this.bottom > container.bottom;\n    }\n  };\n\n  // Find the percentage of the area that this box is overlapping with another\n  // box.\n  BoxPosition.prototype.intersectPercentage = function(b2) {\n    var x = Math.max(0, Math.min(this.right, b2.right) - Math.max(this.left, b2.left)),\n        y = Math.max(0, Math.min(this.bottom, b2.bottom) - Math.max(this.top, b2.top)),\n        intersectArea = x * y;\n    return intersectArea / (this.height * this.width);\n  };\n\n  // Convert the positions from this box to CSS compatible positions using\n  // the reference container's positions. This has to be done because this\n  // box's positions are in reference to the viewport origin, whereas, CSS\n  // values are in referecne to their respective edges.\n  BoxPosition.prototype.toCSSCompatValues = function(reference) {\n    return {\n      top: this.top - reference.top,\n      bottom: reference.bottom - this.bottom,\n      left: this.left - reference.left,\n      right: reference.right - this.right,\n      height: this.height,\n      width: this.width\n    };\n  };\n\n  // Get an object that represents the box's position without anything extra.\n  // Can pass a StyleBox, HTMLElement, or another BoxPositon.\n  BoxPosition.getSimpleBoxPosition = function(obj) {\n    var height = obj.div ? obj.div.offsetHeight : obj.tagName ? obj.offsetHeight : 0;\n    var width = obj.div ? obj.div.offsetWidth : obj.tagName ? obj.offsetWidth : 0;\n    var top = obj.div ? obj.div.offsetTop : obj.tagName ? obj.offsetTop : 0;\n\n    obj = obj.div ? obj.div.getBoundingClientRect() :\n                  obj.tagName ? obj.getBoundingClientRect() : obj;\n    var ret = {\n      left: obj.left,\n      right: obj.right,\n      top: obj.top || top,\n      height: obj.height || height,\n      bottom: obj.bottom || (top + (obj.height || height)),\n      width: obj.width || width\n    };\n    return ret;\n  };\n\n  // Move a StyleBox to its specified, or next best, position. The containerBox\n  // is the box that contains the StyleBox, such as a div. boxPositions are\n  // a list of other boxes that the styleBox can't overlap with.\n  function moveBoxToLinePosition(window, styleBox, containerBox, boxPositions) {\n\n    // Find the best position for a cue box, b, on the video. The axis parameter\n    // is a list of axis, the order of which, it will move the box along. For example:\n    // Passing [\"+x\", \"-x\"] will move the box first along the x axis in the positive\n    // direction. If it doesn't find a good position for it there it will then move\n    // it along the x axis in the negative direction.\n    function findBestPosition(b, axis) {\n      var bestPosition,\n          specifiedPosition = new BoxPosition(b),\n          percentage = 1; // Highest possible so the first thing we get is better.\n\n      for (var i = 0; i < axis.length; i++) {\n        while (b.overlapsOppositeAxis(containerBox, axis[i]) ||\n               (b.within(containerBox) && b.overlapsAny(boxPositions))) {\n          b.move(axis[i]);\n        }\n        // We found a spot where we aren't overlapping anything. This is our\n        // best position.\n        if (b.within(containerBox)) {\n          return b;\n        }\n        var p = b.intersectPercentage(containerBox);\n        // If we're outside the container box less then we were on our last try\n        // then remember this position as the best position.\n        if (percentage > p) {\n          bestPosition = new BoxPosition(b);\n          percentage = p;\n        }\n        // Reset the box position to the specified position.\n        b = new BoxPosition(specifiedPosition);\n      }\n      return bestPosition || specifiedPosition;\n    }\n\n    var boxPosition = new BoxPosition(styleBox),\n        cue = styleBox.cue,\n        linePos = computeLinePos(cue),\n        axis = [];\n\n    // If we have a line number to align the cue to.\n    if (cue.snapToLines) {\n      var size;\n      switch (cue.vertical) {\n      case \"\":\n        axis = [ \"+y\", \"-y\" ];\n        size = \"height\";\n        break;\n      case \"rl\":\n        axis = [ \"+x\", \"-x\" ];\n        size = \"width\";\n        break;\n      case \"lr\":\n        axis = [ \"-x\", \"+x\" ];\n        size = \"width\";\n        break;\n      }\n\n      var step = boxPosition.lineHeight,\n          position = step * Math.round(linePos),\n          maxPosition = containerBox[size] + step,\n          initialAxis = axis[0];\n\n      // If the specified intial position is greater then the max position then\n      // clamp the box to the amount of steps it would take for the box to\n      // reach the max position.\n      if (Math.abs(position) > maxPosition) {\n        position = position < 0 ? -1 : 1;\n        position *= Math.ceil(maxPosition / step) * step;\n      }\n\n      // If computed line position returns negative then line numbers are\n      // relative to the bottom of the video instead of the top. Therefore, we\n      // need to increase our initial position by the length or width of the\n      // video, depending on the writing direction, and reverse our axis directions.\n      if (linePos < 0) {\n        position += cue.vertical === \"\" ? containerBox.height : containerBox.width;\n        axis = axis.reverse();\n      }\n\n      // Move the box to the specified position. This may not be its best\n      // position.\n      boxPosition.move(initialAxis, position);\n\n    } else {\n      // If we have a percentage line value for the cue.\n      var calculatedPercentage = (boxPosition.lineHeight / containerBox.height) * 100;\n\n      switch (cue.lineAlign) {\n      case \"middle\":\n        linePos -= (calculatedPercentage / 2);\n        break;\n      case \"end\":\n        linePos -= calculatedPercentage;\n        break;\n      }\n\n      // Apply initial line position to the cue box.\n      switch (cue.vertical) {\n      case \"\":\n        styleBox.applyStyles({\n          top: styleBox.formatStyle(linePos, \"%\")\n        });\n        break;\n      case \"rl\":\n        styleBox.applyStyles({\n          left: styleBox.formatStyle(linePos, \"%\")\n        });\n        break;\n      case \"lr\":\n        styleBox.applyStyles({\n          right: styleBox.formatStyle(linePos, \"%\")\n        });\n        break;\n      }\n\n      axis = [ \"+y\", \"-x\", \"+x\", \"-y\" ];\n\n      // Get the box position again after we've applied the specified positioning\n      // to it.\n      boxPosition = new BoxPosition(styleBox);\n    }\n\n    var bestPosition = findBestPosition(boxPosition, axis);\n    styleBox.move(bestPosition.toCSSCompatValues(containerBox));\n  }\n\n  function WebVTT() {\n    // Nothing\n  }\n\n  // Helper to allow strings to be decoded instead of the default binary utf8 data.\n  WebVTT.StringDecoder = function() {\n    return {\n      decode: function(data) {\n        if (!data) {\n          return \"\";\n        }\n        if (typeof data !== \"string\") {\n          throw new Error(\"Error - expected string data.\");\n        }\n        return decodeURIComponent(encodeURIComponent(data));\n      }\n    };\n  };\n\n  WebVTT.convertCueToDOMTree = function(window, cuetext) {\n    if (!window || !cuetext) {\n      return null;\n    }\n    return parseContent(window, cuetext);\n  };\n\n  var FONT_SIZE_PERCENT = 0.05;\n  var FONT_STYLE = \"sans-serif\";\n  var CUE_BACKGROUND_PADDING = \"1.5%\";\n\n  // Runs the processing model over the cues and regions passed to it.\n  // @param overlay A block level element (usually a div) that the computed cues\n  //                and regions will be placed into.\n  WebVTT.processCues = function(window, cues, overlay) {\n    if (!window || !cues || !overlay) {\n      return null;\n    }\n\n    // Remove all previous children.\n    while (overlay.firstChild) {\n      overlay.removeChild(overlay.firstChild);\n    }\n\n    var paddedOverlay = window.document.createElement(\"div\");\n    paddedOverlay.style.position = \"absolute\";\n    paddedOverlay.style.left = \"0\";\n    paddedOverlay.style.right = \"0\";\n    paddedOverlay.style.top = \"0\";\n    paddedOverlay.style.bottom = \"0\";\n    paddedOverlay.style.margin = CUE_BACKGROUND_PADDING;\n    overlay.appendChild(paddedOverlay);\n\n    // Determine if we need to compute the display states of the cues. This could\n    // be the case if a cue's state has been changed since the last computation or\n    // if it has not been computed yet.\n    function shouldCompute(cues) {\n      for (var i = 0; i < cues.length; i++) {\n        if (cues[i].hasBeenReset || !cues[i].displayState) {\n          return true;\n        }\n      }\n      return false;\n    }\n\n    // We don't need to recompute the cues' display states. Just reuse them.\n    if (!shouldCompute(cues)) {\n      for (var i = 0; i < cues.length; i++) {\n        paddedOverlay.appendChild(cues[i].displayState);\n      }\n      return;\n    }\n\n    var boxPositions = [],\n        containerBox = BoxPosition.getSimpleBoxPosition(paddedOverlay),\n        fontSize = Math.round(containerBox.height * FONT_SIZE_PERCENT * 100) / 100;\n    var styleOptions = {\n      font: fontSize + \"px \" + FONT_STYLE\n    };\n\n    (function() {\n      var styleBox, cue;\n\n      for (var i = 0; i < cues.length; i++) {\n        cue = cues[i];\n\n        // Compute the intial position and styles of the cue div.\n        styleBox = new CueStyleBox(window, cue, styleOptions);\n        paddedOverlay.appendChild(styleBox.div);\n\n        // Move the cue div to it's correct line position.\n        moveBoxToLinePosition(window, styleBox, containerBox, boxPositions);\n\n        // Remember the computed div so that we don't have to recompute it later\n        // if we don't have too.\n        cue.displayState = styleBox.div;\n\n        boxPositions.push(BoxPosition.getSimpleBoxPosition(styleBox));\n      }\n    })();\n  };\n\n  WebVTT.Parser = function(window, vttjs, decoder) {\n    if (!decoder) {\n      decoder = vttjs;\n      vttjs = {};\n    }\n    if (!vttjs) {\n      vttjs = {};\n    }\n\n    this.window = window;\n    this.vttjs = vttjs;\n    this.state = \"INITIAL\";\n    this.buffer = \"\";\n    this.decoder = decoder || new TextDecoder(\"utf8\");\n    this.regionList = [];\n  };\n\n  WebVTT.Parser.prototype = {\n    // If the error is a ParsingError then report it to the consumer if\n    // possible. If it's not a ParsingError then throw it like normal.\n    reportOrThrowError: function(e) {\n      if (e instanceof ParsingError) {\n        this.onparsingerror && this.onparsingerror(e);\n      } else {\n        throw e;\n      }\n    },\n    parse: function (data) {\n      var self = this;\n\n      // If there is no data then we won't decode it, but will just try to parse\n      // whatever is in buffer already. This may occur in circumstances, for\n      // example when flush() is called.\n      if (data) {\n        // Try to decode the data that we received.\n        self.buffer += self.decoder.decode(data, {stream: true});\n      }\n\n      function collectNextLine() {\n        var buffer = self.buffer;\n        var pos = 0;\n        while (pos < buffer.length && buffer[pos] !== '\\r' && buffer[pos] !== '\\n') {\n          ++pos;\n        }\n        var line = buffer.substr(0, pos);\n        // Advance the buffer early in case we fail below.\n        if (buffer[pos] === '\\r') {\n          ++pos;\n        }\n        if (buffer[pos] === '\\n') {\n          ++pos;\n        }\n        self.buffer = buffer.substr(pos);\n        return line;\n      }\n\n      // 3.4 WebVTT region and WebVTT region settings syntax\n      function parseRegion(input) {\n        var settings = new Settings();\n\n        parseOptions(input, function (k, v) {\n          switch (k) {\n          case \"id\":\n            settings.set(k, v);\n            break;\n          case \"width\":\n            settings.percent(k, v);\n            break;\n          case \"lines\":\n            settings.integer(k, v);\n            break;\n          case \"regionanchor\":\n          case \"viewportanchor\":\n            var xy = v.split(',');\n            if (xy.length !== 2) {\n              break;\n            }\n            // We have to make sure both x and y parse, so use a temporary\n            // settings object here.\n            var anchor = new Settings();\n            anchor.percent(\"x\", xy[0]);\n            anchor.percent(\"y\", xy[1]);\n            if (!anchor.has(\"x\") || !anchor.has(\"y\")) {\n              break;\n            }\n            settings.set(k + \"X\", anchor.get(\"x\"));\n            settings.set(k + \"Y\", anchor.get(\"y\"));\n            break;\n          case \"scroll\":\n            settings.alt(k, v, [\"up\"]);\n            break;\n          }\n        }, /=/, /\\s/);\n\n        // Create the region, using default values for any values that were not\n        // specified.\n        if (settings.has(\"id\")) {\n          var region = new (self.vttjs.VTTRegion || self.window.VTTRegion)();\n          region.width = settings.get(\"width\", 100);\n          region.lines = settings.get(\"lines\", 3);\n          region.regionAnchorX = settings.get(\"regionanchorX\", 0);\n          region.regionAnchorY = settings.get(\"regionanchorY\", 100);\n          region.viewportAnchorX = settings.get(\"viewportanchorX\", 0);\n          region.viewportAnchorY = settings.get(\"viewportanchorY\", 100);\n          region.scroll = settings.get(\"scroll\", \"\");\n          // Register the region.\n          self.onregion && self.onregion(region);\n          // Remember the VTTRegion for later in case we parse any VTTCues that\n          // reference it.\n          self.regionList.push({\n            id: settings.get(\"id\"),\n            region: region\n          });\n        }\n      }\n\n      // 3.2 WebVTT metadata header syntax\n      function parseHeader(input) {\n        parseOptions(input, function (k, v) {\n          switch (k) {\n          case \"Region\":\n            // 3.3 WebVTT region metadata header syntax\n            parseRegion(v);\n            break;\n          }\n        }, /:/);\n      }\n\n      // 5.1 WebVTT file parsing.\n      try {\n        var line;\n        if (self.state === \"INITIAL\") {\n          // We can't start parsing until we have the first line.\n          if (!/\\r\\n|\\n/.test(self.buffer)) {\n            return this;\n          }\n\n          line = collectNextLine();\n\n          var m = line.match(/^WEBVTT([ \\t].*)?$/);\n          if (!m || !m[0]) {\n            throw new ParsingError(ParsingError.Errors.BadSignature);\n          }\n\n          self.state = \"HEADER\";\n        }\n\n        var alreadyCollectedLine = false;\n        while (self.buffer) {\n          // We can't parse a line until we have the full line.\n          if (!/\\r\\n|\\n/.test(self.buffer)) {\n            return this;\n          }\n\n          if (!alreadyCollectedLine) {\n            line = collectNextLine();\n          } else {\n            alreadyCollectedLine = false;\n          }\n\n          switch (self.state) {\n          case \"HEADER\":\n            // 13-18 - Allow a header (metadata) under the WEBVTT line.\n            if (/:/.test(line)) {\n              parseHeader(line);\n            } else if (!line) {\n              // An empty line terminates the header and starts the body (cues).\n              self.state = \"ID\";\n            }\n            continue;\n          case \"NOTE\":\n            // Ignore NOTE blocks.\n            if (!line) {\n              self.state = \"ID\";\n            }\n            continue;\n          case \"ID\":\n            // Check for the start of NOTE blocks.\n            if (/^NOTE($|[ \\t])/.test(line)) {\n              self.state = \"NOTE\";\n              break;\n            }\n            // 19-29 - Allow any number of line terminators, then initialize new cue values.\n            if (!line) {\n              continue;\n            }\n            self.cue = new (self.vttjs.VTTCue || self.window.VTTCue)(0, 0, \"\");\n            self.state = \"CUE\";\n            // 30-39 - Check if self line contains an optional identifier or timing data.\n            if (line.indexOf(\"-->\") === -1) {\n              self.cue.id = line;\n              continue;\n            }\n            // Process line as start of a cue.\n            /*falls through*/\n          case \"CUE\":\n            // 40 - Collect cue timings and settings.\n            try {\n              parseCue(line, self.cue, self.regionList);\n            } catch (e) {\n              self.reportOrThrowError(e);\n              // In case of an error ignore rest of the cue.\n              self.cue = null;\n              self.state = \"BADCUE\";\n              continue;\n            }\n            self.state = \"CUETEXT\";\n            continue;\n          case \"CUETEXT\":\n            var hasSubstring = line.indexOf(\"-->\") !== -1;\n            // 34 - If we have an empty line then report the cue.\n            // 35 - If we have the special substring '-->' then report the cue,\n            // but do not collect the line as we need to process the current\n            // one as a new cue.\n            if (!line || hasSubstring && (alreadyCollectedLine = true)) {\n              // We are done parsing self cue.\n              self.oncue && self.oncue(self.cue);\n              self.cue = null;\n              self.state = \"ID\";\n              continue;\n            }\n            if (self.cue.text) {\n              self.cue.text += \"\\n\";\n            }\n            self.cue.text += line;\n            continue;\n          case \"BADCUE\": // BADCUE\n            // 54-62 - Collect and discard the remaining cue.\n            if (!line) {\n              self.state = \"ID\";\n            }\n            continue;\n          }\n        }\n      } catch (e) {\n        self.reportOrThrowError(e);\n\n        // If we are currently parsing a cue, report what we have.\n        if (self.state === \"CUETEXT\" && self.cue && self.oncue) {\n          self.oncue(self.cue);\n        }\n        self.cue = null;\n        // Enter BADWEBVTT state if header was not parsed correctly otherwise\n        // another exception occurred so enter BADCUE state.\n        self.state = self.state === \"INITIAL\" ? \"BADWEBVTT\" : \"BADCUE\";\n      }\n      return this;\n    },\n    flush: function () {\n      var self = this;\n      try {\n        // Finish decoding the stream.\n        self.buffer += self.decoder.decode();\n        // Synthesize the end of the current cue or region.\n        if (self.cue || self.state === \"HEADER\") {\n          self.buffer += \"\\n\\n\";\n          self.parse();\n        }\n        // If we've flushed, parsed, and we're still on the INITIAL state then\n        // that means we don't have enough of the stream to parse the first\n        // line.\n        if (self.state === \"INITIAL\") {\n          throw new ParsingError(ParsingError.Errors.BadSignature);\n        }\n      } catch(e) {\n        self.reportOrThrowError(e);\n      }\n      self.onflush && self.onflush();\n      return this;\n    }\n  };\n\n  global.WebVTT = WebVTT;\n\n}(this, (this.vttjs || {})));\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/videojs-vtt.js/lib/vtt.js\n ** module id = 48\n ** module chunks = 0 1\n **/","/**\n * Copyright 2013 vtt.js Contributors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n// If we're in Node.js then require VTTCue so we can extend it, otherwise assume\n// VTTCue is on the global.\nif (typeof module !== \"undefined\" && module.exports) {\n  this.VTTCue = this.VTTCue || require(\"./vttcue\").VTTCue;\n}\n\n// Extend VTTCue with methods to convert to JSON, from JSON, and construct a\n// VTTCue from an options object. The primary purpose of this is for use in the\n// vtt.js test suite (for testing only properties that we care about). It's also\n// useful if you need to work with VTTCues in JSON format.\n(function(root) {\n\n  root.VTTCue.prototype.toJSON = function() {\n    var cue = {},\n        self = this;\n    // Filter out getCueAsHTML as it's a function and hasBeenReset and displayState as\n    // they're only used when running the processing model algorithm.\n    Object.keys(this).forEach(function(key) {\n      if (key !== \"getCueAsHTML\" && key !== \"hasBeenReset\" && key !== \"displayState\") {\n        cue[key] = self[key];\n      }\n    });\n    return cue;\n  };\n\n  root.VTTCue.create = function(options) {\n    if (!options.hasOwnProperty(\"startTime\") || !options.hasOwnProperty(\"endTime\") ||\n        !options.hasOwnProperty(\"text\")) {\n      throw new Error(\"You must at least have start time, end time, and text.\");\n    }\n    var cue = new root.VTTCue(options.startTime, options.endTime, options.text);\n    for (var key in options) {\n      if (cue.hasOwnProperty(key)) {\n        cue[key] = options[key];\n      }\n    }\n    return cue;\n  };\n\n  root.VTTCue.fromJSON = function(json) {\n    return this.create(JSON.parse(json));\n  };\n\n}(this));\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/videojs-vtt.js/lib/vttcue-extended.js\n ** module id = 49\n ** module chunks = 0 1\n **/","/**\n * Copyright 2013 vtt.js Contributors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n(function(root, vttjs) {\n\n  var autoKeyword = \"auto\";\n  var directionSetting = {\n    \"\": true,\n    \"lr\": true,\n    \"rl\": true\n  };\n  var alignSetting = {\n    \"start\": true,\n    \"middle\": true,\n    \"end\": true,\n    \"left\": true,\n    \"right\": true\n  };\n\n  function findDirectionSetting(value) {\n    if (typeof value !== \"string\") {\n      return false;\n    }\n    var dir = directionSetting[value.toLowerCase()];\n    return dir ? value.toLowerCase() : false;\n  }\n\n  function findAlignSetting(value) {\n    if (typeof value !== \"string\") {\n      return false;\n    }\n    var align = alignSetting[value.toLowerCase()];\n    return align ? value.toLowerCase() : false;\n  }\n\n  function extend(obj) {\n    var i = 1;\n    for (; i < arguments.length; i++) {\n      var cobj = arguments[i];\n      for (var p in cobj) {\n        obj[p] = cobj[p];\n      }\n    }\n\n    return obj;\n  }\n\n  function VTTCue(startTime, endTime, text) {\n    var cue = this;\n    var isIE8 = (/MSIE\\s8\\.0/).test(navigator.userAgent);\n    var baseObj = {};\n\n    if (isIE8) {\n      cue = document.createElement('custom');\n    } else {\n      baseObj.enumerable = true;\n    }\n\n    /**\n     * Shim implementation specific properties. These properties are not in\n     * the spec.\n     */\n\n    // Lets us know when the VTTCue's data has changed in such a way that we need\n    // to recompute its display state. This lets us compute its display state\n    // lazily.\n    cue.hasBeenReset = false;\n\n    /**\n     * VTTCue and TextTrackCue properties\n     * http://dev.w3.org/html5/webvtt/#vttcue-interface\n     */\n\n    var _id = \"\";\n    var _pauseOnExit = false;\n    var _startTime = startTime;\n    var _endTime = endTime;\n    var _text = text;\n    var _region = null;\n    var _vertical = \"\";\n    var _snapToLines = true;\n    var _line = \"auto\";\n    var _lineAlign = \"start\";\n    var _position = 50;\n    var _positionAlign = \"middle\";\n    var _size = 50;\n    var _align = \"middle\";\n\n    Object.defineProperty(cue,\n      \"id\", extend({}, baseObj, {\n        get: function() {\n          return _id;\n        },\n        set: function(value) {\n          _id = \"\" + value;\n        }\n      }));\n\n    Object.defineProperty(cue,\n      \"pauseOnExit\", extend({}, baseObj, {\n        get: function() {\n          return _pauseOnExit;\n        },\n        set: function(value) {\n          _pauseOnExit = !!value;\n        }\n      }));\n\n    Object.defineProperty(cue,\n      \"startTime\", extend({}, baseObj, {\n        get: function() {\n          return _startTime;\n        },\n        set: function(value) {\n          if (typeof value !== \"number\") {\n            throw new TypeError(\"Start time must be set to a number.\");\n          }\n          _startTime = value;\n          this.hasBeenReset = true;\n        }\n      }));\n\n    Object.defineProperty(cue,\n      \"endTime\", extend({}, baseObj, {\n        get: function() {\n          return _endTime;\n        },\n        set: function(value) {\n          if (typeof value !== \"number\") {\n            throw new TypeError(\"End time must be set to a number.\");\n          }\n          _endTime = value;\n          this.hasBeenReset = true;\n        }\n      }));\n\n    Object.defineProperty(cue,\n      \"text\", extend({}, baseObj, {\n        get: function() {\n          return _text;\n        },\n        set: function(value) {\n          _text = \"\" + value;\n          this.hasBeenReset = true;\n        }\n      }));\n\n    Object.defineProperty(cue,\n      \"region\", extend({}, baseObj, {\n        get: function() {\n          return _region;\n        },\n        set: function(value) {\n          _region = value;\n          this.hasBeenReset = true;\n        }\n      }));\n\n    Object.defineProperty(cue,\n      \"vertical\", extend({}, baseObj, {\n        get: function() {\n          return _vertical;\n        },\n        set: function(value) {\n          var setting = findDirectionSetting(value);\n          // Have to check for false because the setting an be an empty string.\n          if (setting === false) {\n            throw new SyntaxError(\"An invalid or illegal string was specified.\");\n          }\n          _vertical = setting;\n          this.hasBeenReset = true;\n        }\n      }));\n\n    Object.defineProperty(cue,\n      \"snapToLines\", extend({}, baseObj, {\n        get: function() {\n          return _snapToLines;\n        },\n        set: function(value) {\n          _snapToLines = !!value;\n          this.hasBeenReset = true;\n        }\n      }));\n\n    Object.defineProperty(cue,\n      \"line\", extend({}, baseObj, {\n        get: function() {\n          return _line;\n        },\n        set: function(value) {\n          if (typeof value !== \"number\" && value !== autoKeyword) {\n            throw new SyntaxError(\"An invalid number or illegal string was specified.\");\n          }\n          _line = value;\n          this.hasBeenReset = true;\n        }\n      }));\n\n    Object.defineProperty(cue,\n      \"lineAlign\", extend({}, baseObj, {\n        get: function() {\n          return _lineAlign;\n        },\n        set: function(value) {\n          var setting = findAlignSetting(value);\n          if (!setting) {\n            throw new SyntaxError(\"An invalid or illegal string was specified.\");\n          }\n          _lineAlign = setting;\n          this.hasBeenReset = true;\n        }\n      }));\n\n    Object.defineProperty(cue,\n      \"position\", extend({}, baseObj, {\n        get: function() {\n          return _position;\n        },\n        set: function(value) {\n          if (value < 0 || value > 100) {\n            throw new Error(\"Position must be between 0 and 100.\");\n          }\n          _position = value;\n          this.hasBeenReset = true;\n        }\n      }));\n\n    Object.defineProperty(cue,\n      \"positionAlign\", extend({}, baseObj, {\n        get: function() {\n          return _positionAlign;\n        },\n        set: function(value) {\n          var setting = findAlignSetting(value);\n          if (!setting) {\n            throw new SyntaxError(\"An invalid or illegal string was specified.\");\n          }\n          _positionAlign = setting;\n          this.hasBeenReset = true;\n        }\n      }));\n\n    Object.defineProperty(cue,\n      \"size\", extend({}, baseObj, {\n        get: function() {\n          return _size;\n        },\n        set: function(value) {\n          if (value < 0 || value > 100) {\n            throw new Error(\"Size must be between 0 and 100.\");\n          }\n          _size = value;\n          this.hasBeenReset = true;\n        }\n      }));\n\n    Object.defineProperty(cue,\n      \"align\", extend({}, baseObj, {\n        get: function() {\n          return _align;\n        },\n        set: function(value) {\n          var setting = findAlignSetting(value);\n          if (!setting) {\n            throw new SyntaxError(\"An invalid or illegal string was specified.\");\n          }\n          _align = setting;\n          this.hasBeenReset = true;\n        }\n      }));\n\n    /**\n     * Other <track> spec defined properties\n     */\n\n    // http://www.whatwg.org/specs/web-apps/current-work/multipage/the-video-element.html#text-track-cue-display-state\n    cue.displayState = undefined;\n\n    if (isIE8) {\n      return cue;\n    }\n  }\n\n  /**\n   * VTTCue methods\n   */\n\n  VTTCue.prototype.getCueAsHTML = function() {\n    // Assume WebVTT.convertCueToDOMTree is on the global.\n    return WebVTT.convertCueToDOMTree(window, this.text);\n  };\n\n  root.VTTCue = root.VTTCue || VTTCue;\n  vttjs.VTTCue = VTTCue;\n}(this, (this.vttjs || {})));\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/videojs-vtt.js/lib/vttcue.js\n ** module id = 50\n ** module chunks = 0 1\n **/","/**\n * Copyright 2013 vtt.js Contributors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n// If we're in Node.js then require VTTRegion so we can extend it, otherwise assume\n// VTTRegion is on the global.\nif (typeof module !== \"undefined\" && module.exports) {\n  this.VTTRegion = require(\"./vttregion\").VTTRegion;\n}\n\n// Extend VTTRegion with methods to convert to JSON, from JSON, and construct a\n// VTTRegion from an options object. The primary purpose of this is for use in the\n// vtt.js test suite. It's also useful if you need to work with VTTRegions in\n// JSON format.\n(function(root) {\n\n  root.VTTRegion.create = function(options) {\n    var region = new root.VTTRegion();\n    for (var key in options) {\n      if (region.hasOwnProperty(key)) {\n        region[key] = options[key];\n      }\n    }\n    return region;\n  };\n\n  root.VTTRegion.fromJSON = function(json) {\n    return this.create(JSON.parse(json));\n  };\n\n}(this));\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/videojs-vtt.js/lib/vttregion-extended.js\n ** module id = 51\n ** module chunks = 0 1\n **/","/**\n * Copyright 2013 vtt.js Contributors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n(function(root, vttjs) {\n\n  var scrollSetting = {\n    \"\": true,\n    \"up\": true\n  };\n\n  function findScrollSetting(value) {\n    if (typeof value !== \"string\") {\n      return false;\n    }\n    var scroll = scrollSetting[value.toLowerCase()];\n    return scroll ? value.toLowerCase() : false;\n  }\n\n  function isValidPercentValue(value) {\n    return typeof value === \"number\" && (value >= 0 && value <= 100);\n  }\n\n  // VTTRegion shim http://dev.w3.org/html5/webvtt/#vttregion-interface\n  function VTTRegion() {\n    var _width = 100;\n    var _lines = 3;\n    var _regionAnchorX = 0;\n    var _regionAnchorY = 100;\n    var _viewportAnchorX = 0;\n    var _viewportAnchorY = 100;\n    var _scroll = \"\";\n\n    Object.defineProperties(this, {\n      \"width\": {\n        enumerable: true,\n        get: function() {\n          return _width;\n        },\n        set: function(value) {\n          if (!isValidPercentValue(value)) {\n            throw new Error(\"Width must be between 0 and 100.\");\n          }\n          _width = value;\n        }\n      },\n      \"lines\": {\n        enumerable: true,\n        get: function() {\n          return _lines;\n        },\n        set: function(value) {\n          if (typeof value !== \"number\") {\n            throw new TypeError(\"Lines must be set to a number.\");\n          }\n          _lines = value;\n        }\n      },\n      \"regionAnchorY\": {\n        enumerable: true,\n        get: function() {\n          return _regionAnchorY;\n        },\n        set: function(value) {\n          if (!isValidPercentValue(value)) {\n            throw new Error(\"RegionAnchorX must be between 0 and 100.\");\n          }\n          _regionAnchorY = value;\n        }\n      },\n      \"regionAnchorX\": {\n        enumerable: true,\n        get: function() {\n          return _regionAnchorX;\n        },\n        set: function(value) {\n          if(!isValidPercentValue(value)) {\n            throw new Error(\"RegionAnchorY must be between 0 and 100.\");\n          }\n          _regionAnchorX = value;\n        }\n      },\n      \"viewportAnchorY\": {\n        enumerable: true,\n        get: function() {\n          return _viewportAnchorY;\n        },\n        set: function(value) {\n          if (!isValidPercentValue(value)) {\n            throw new Error(\"ViewportAnchorY must be between 0 and 100.\");\n          }\n          _viewportAnchorY = value;\n        }\n      },\n      \"viewportAnchorX\": {\n        enumerable: true,\n        get: function() {\n          return _viewportAnchorX;\n        },\n        set: function(value) {\n          if (!isValidPercentValue(value)) {\n            throw new Error(\"ViewportAnchorX must be between 0 and 100.\");\n          }\n          _viewportAnchorX = value;\n        }\n      },\n      \"scroll\": {\n        enumerable: true,\n        get: function() {\n          return _scroll;\n        },\n        set: function(value) {\n          var setting = findScrollSetting(value);\n          // Have to check for false as an empty string is a legal value.\n          if (setting === false) {\n            throw new SyntaxError(\"An invalid or illegal string was specified.\");\n          }\n          _scroll = setting;\n        }\n      }\n    });\n  }\n\n  root.VTTRegion = root.VTTRegion || VTTRegion;\n  vttjs.VTTRegion = VTTRegion;\n}(this, (this.vttjs || {})));\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/videojs-vtt.js/lib/vttregion.js\n ** module id = 52\n ** module chunks = 0 1\n **/","'use strict';\n\nexports.__esModule = true;\n\nvar _component = require('../component.js');\n\nvar _component2 = _interopRequireDefault(_component);\n\nvar _tech = require('./tech.js');\n\nvar _tech2 = _interopRequireDefault(_tech);\n\nvar _toTitleCase = require('../utils/to-title-case.js');\n\nvar _toTitleCase2 = _interopRequireDefault(_toTitleCase);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /**\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * @file loader.js\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                */\n\n\n/**\n * The `MediaLoader` is the `Component` that decides which playback technology to load\n * when a player is initialized.\n *\n * @extends Component\n */\nvar MediaLoader = function (_Component) {\n  _inherits(MediaLoader, _Component);\n\n  /**\n   * Create an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should attach to.\n   *\n   * @param {Object} [options]\n   *        The key/value stroe of player options.\n   *\n   * @param {Component~ReadyCallback} [ready]\n   *        The function that is run when this component is ready.\n   */\n  function MediaLoader(player, options, ready) {\n    _classCallCheck(this, MediaLoader);\n\n    // If there are no sources when the player is initialized,\n    // load the first supported playback technology.\n\n    var _this = _possibleConstructorReturn(this, _Component.call(this, player, options, ready));\n\n    if (!options.playerOptions.sources || options.playerOptions.sources.length === 0) {\n      for (var i = 0, j = options.playerOptions.techOrder; i < j.length; i++) {\n        var techName = (0, _toTitleCase2['default'])(j[i]);\n        var tech = _tech2['default'].getTech(techName);\n\n        // Support old behavior of techs being registered as components.\n        // Remove once that deprecated behavior is removed.\n        if (!techName) {\n          tech = _component2['default'].getComponent(techName);\n        }\n\n        // Check if the browser supports this technology\n        if (tech && tech.isSupported()) {\n          player.loadTech_(techName);\n          break;\n        }\n      }\n    } else {\n      // Loop through playback technologies (HTML5, Flash) and check for support.\n      // Then load the best source.\n      // A few assumptions here:\n      //   All playback technologies respect preload false.\n      player.src(options.playerOptions.sources);\n    }\n    return _this;\n  }\n\n  return MediaLoader;\n}(_component2['default']);\n\n_component2['default'].registerComponent('MediaLoader', MediaLoader);\nexports['default'] = MediaLoader;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/video.js/es5/tech/loader.js\n ** module id = 53\n ** module chunks = 0 1\n **/","'use strict';\n\nexports.__esModule = true;\n\nvar _tech = require('./tech');\n\nvar _tech2 = _interopRequireDefault(_tech);\n\nvar _dom = require('../utils/dom.js');\n\nvar Dom = _interopRequireWildcard(_dom);\n\nvar _url = require('../utils/url.js');\n\nvar Url = _interopRequireWildcard(_url);\n\nvar _timeRanges = require('../utils/time-ranges.js');\n\nvar _flashRtmp = require('./flash-rtmp');\n\nvar _flashRtmp2 = _interopRequireDefault(_flashRtmp);\n\nvar _component = require('../component');\n\nvar _component2 = _interopRequireDefault(_component);\n\nvar _window = require('global/window');\n\nvar _window2 = _interopRequireDefault(_window);\n\nvar _obj = require('../utils/obj');\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj['default'] = obj; return newObj; } }\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /**\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * @file flash.js\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * VideoJS-SWF - Custom Flash Player with HTML5-ish API\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * https://github.com/zencoder/video-js-swf\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * Not using setupTriggers. Using global onEvent func to distribute events\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                */\n\nvar navigator = _window2['default'].navigator;\n\n/**\n * Flash Media Controller - Wrapper for Flash Media API\n *\n * @mixes FlashRtmpDecorator\n * @mixes Tech~SouceHandlerAdditions\n * @extends Tech\n */\n\nvar Flash = function (_Tech) {\n  _inherits(Flash, _Tech);\n\n  /**\n   * Create an instance of this Tech.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   *\n   * @param {Component~ReadyCallback} ready\n   *        Callback function to call when the `Flash` Tech is ready.\n   */\n  function Flash(options, ready) {\n    _classCallCheck(this, Flash);\n\n    // Set the source when ready\n    var _this = _possibleConstructorReturn(this, _Tech.call(this, options, ready));\n\n    if (options.source) {\n      _this.ready(function () {\n        this.setSource(options.source);\n      }, true);\n    }\n\n    // Having issues with Flash reloading on certain page actions (hide/resize/fullscreen) in certain browsers\n    // This allows resetting the playhead when we catch the reload\n    if (options.startTime) {\n      _this.ready(function () {\n        this.load();\n        this.play();\n        this.currentTime(options.startTime);\n      }, true);\n    }\n\n    // Add global window functions that the swf expects\n    // A 4.x workflow we weren't able to solve for in 5.0\n    // because of the need to hard code these functions\n    // into the swf for security reasons\n    _window2['default'].videojs = _window2['default'].videojs || {};\n    _window2['default'].videojs.Flash = _window2['default'].videojs.Flash || {};\n    _window2['default'].videojs.Flash.onReady = Flash.onReady;\n    _window2['default'].videojs.Flash.onEvent = Flash.onEvent;\n    _window2['default'].videojs.Flash.onError = Flash.onError;\n\n    _this.on('seeked', function () {\n      this.lastSeekTarget_ = undefined;\n    });\n\n    return _this;\n  }\n\n  /**\n   * Create the `Flash` Tech's DOM element.\n   *\n   * @return {Element}\n   *         The element that gets created.\n   */\n\n\n  Flash.prototype.createEl = function createEl() {\n    var options = this.options_;\n\n    // If video.js is hosted locally you should also set the location\n    // for the hosted swf, which should be relative to the page (not video.js)\n    // Otherwise this adds a CDN url.\n    // The CDN also auto-adds a swf URL for that specific version.\n    if (!options.swf) {\n      var ver = '5.2.0';\n\n      options.swf = '//vjs.zencdn.net/swf/' + ver + '/video-js.swf';\n    }\n\n    // Generate ID for swf object\n    var objId = options.techId;\n\n    // Merge default flashvars with ones passed in to init\n    var flashVars = (0, _obj.assign)({\n\n      // SWF Callback Functions\n      readyFunction: 'videojs.Flash.onReady',\n      eventProxyFunction: 'videojs.Flash.onEvent',\n      errorEventProxyFunction: 'videojs.Flash.onError',\n\n      // Player Settings\n      autoplay: options.autoplay,\n      preload: options.preload,\n      loop: options.loop,\n      muted: options.muted\n\n    }, options.flashVars);\n\n    // Merge default parames with ones passed in\n    var params = (0, _obj.assign)({\n      // Opaque is needed to overlay controls, but can affect playback performance\n      wmode: 'opaque',\n      // Using bgcolor prevents a white flash when the object is loading\n      bgcolor: '#000000'\n    }, options.params);\n\n    // Merge default attributes with ones passed in\n    var attributes = (0, _obj.assign)({\n      // Both ID and Name needed or swf to identify itself\n      id: objId,\n      name: objId,\n      'class': 'vjs-tech'\n    }, options.attributes);\n\n    this.el_ = Flash.embed(options.swf, flashVars, params, attributes);\n    this.el_.tech = this;\n\n    return this.el_;\n  };\n\n  /**\n   * Called by {@link Player#play} to play using the `Flash` `Tech`.\n   */\n\n\n  Flash.prototype.play = function play() {\n    if (this.ended()) {\n      this.setCurrentTime(0);\n    }\n    this.el_.vjs_play();\n  };\n\n  /**\n   * Called by {@link Player#pause} to pause using the `Flash` `Tech`.\n   */\n\n\n  Flash.prototype.pause = function pause() {\n    this.el_.vjs_pause();\n  };\n\n  /**\n   * A getter/setter for the `Flash` Tech's source object.\n   * > Note: Please use {@link Flash#setSource}\n   *\n   * @param {Tech~SourceObject} [src]\n   *        The source object you want to set on the `Flash` techs.\n   *\n   * @return {Tech~SourceObject|undefined}\n   *         - The current source object when a source is not passed in.\n   *         - undefined when setting\n   *\n   * @deprecated Since version 5.\n   */\n\n\n  Flash.prototype.src = function src(_src) {\n    if (_src === undefined) {\n      return this.currentSrc();\n    }\n\n    // Setting src through `src` not `setSrc` will be deprecated\n    return this.setSrc(_src);\n  };\n\n  /**\n   * A getter/setter for the `Flash` Tech's source object.\n   *\n   * @param {Tech~SourceObject} [src]\n   *        The source object you want to set on the `Flash` techs.\n   *\n   * @return {Tech~SourceObject|undefined}\n   *         - The current source object when a source is not passed in.\n   *         - undefined when setting\n   */\n\n\n  Flash.prototype.setSrc = function setSrc(src) {\n    var _this2 = this;\n\n    // Make sure source URL is absolute.\n    src = Url.getAbsoluteURL(src);\n    this.el_.vjs_src(src);\n\n    // Currently the SWF doesn't autoplay if you load a source later.\n    // e.g. Load player w/ no source, wait 2s, set src.\n    if (this.autoplay()) {\n      this.setTimeout(function () {\n        return _this2.play();\n      }, 0);\n    }\n  };\n\n  /**\n   * Indicates whether the media is currently seeking to a new position or not.\n   *\n   * @return {boolean}\n   *         - True if seeking to a new position\n   *         - False otherwise\n   */\n\n\n  Flash.prototype.seeking = function seeking() {\n    return this.lastSeekTarget_ !== undefined;\n  };\n\n  /**\n   * Returns the current time in seconds that the media is at in playback.\n   *\n   * @param {number} time\n   *        Current playtime of the media in seconds.\n   */\n\n\n  Flash.prototype.setCurrentTime = function setCurrentTime(time) {\n    var seekable = this.seekable();\n\n    if (seekable.length) {\n      // clamp to the current seekable range\n      time = time > seekable.start(0) ? time : seekable.start(0);\n      time = time < seekable.end(seekable.length - 1) ? time : seekable.end(seekable.length - 1);\n\n      this.lastSeekTarget_ = time;\n      this.trigger('seeking');\n      this.el_.vjs_setProperty('currentTime', time);\n      _Tech.prototype.setCurrentTime.call(this);\n    }\n  };\n\n  /**\n   * Get the current playback time in seconds\n   *\n   * @return {number}\n   *         The current time of playback in seconds.\n   */\n\n\n  Flash.prototype.currentTime = function currentTime() {\n    // when seeking make the reported time keep up with the requested time\n    // by reading the time we're seeking to\n    if (this.seeking()) {\n      return this.lastSeekTarget_ || 0;\n    }\n    return this.el_.vjs_getProperty('currentTime');\n  };\n\n  /**\n   * Get the current source\n   *\n   * @method currentSrc\n   * @return {Tech~SourceObject}\n   *         The current source\n   */\n\n\n  Flash.prototype.currentSrc = function currentSrc() {\n    if (this.currentSource_) {\n      return this.currentSource_.src;\n    }\n    return this.el_.vjs_getProperty('currentSrc');\n  };\n\n  /**\n   * Get the total duration of the current media.\n   *\n   * @return {number}\n   8          The total duration of the current media.\n   */\n\n\n  Flash.prototype.duration = function duration() {\n    if (this.readyState() === 0) {\n      return NaN;\n    }\n    var duration = this.el_.vjs_getProperty('duration');\n\n    return duration >= 0 ? duration : Infinity;\n  };\n\n  /**\n   * Load media into Tech.\n   */\n\n\n  Flash.prototype.load = function load() {\n    this.el_.vjs_load();\n  };\n\n  /**\n   * Get the poster image that was set on the tech.\n   */\n\n\n  Flash.prototype.poster = function poster() {\n    this.el_.vjs_getProperty('poster');\n  };\n\n  /**\n   * Poster images are not handled by the Flash tech so make this is a no-op.\n   */\n\n\n  Flash.prototype.setPoster = function setPoster() {};\n\n  /**\n   * Determine the time ranges that can be seeked to in the media.\n   *\n   * @return {TimeRange}\n   *         Returns the time ranges that can be seeked to.\n   */\n\n\n  Flash.prototype.seekable = function seekable() {\n    var duration = this.duration();\n\n    if (duration === 0) {\n      return (0, _timeRanges.createTimeRange)();\n    }\n    return (0, _timeRanges.createTimeRange)(0, duration);\n  };\n\n  /**\n   * Get and create a `TimeRange` object for buffering.\n   *\n   * @return {TimeRange}\n   *         The time range object that was created.\n   */\n\n\n  Flash.prototype.buffered = function buffered() {\n    var ranges = this.el_.vjs_getProperty('buffered');\n\n    if (ranges.length === 0) {\n      return (0, _timeRanges.createTimeRange)();\n    }\n    return (0, _timeRanges.createTimeRange)(ranges[0][0], ranges[0][1]);\n  };\n\n  /**\n   * Get fullscreen support -\n   *\n   * Flash does not allow fullscreen through javascript\n   * so this always returns false.\n   *\n   * @return {boolean}\n   *         The Flash tech does not support fullscreen, so it will always return false.\n   */\n\n\n  Flash.prototype.supportsFullScreen = function supportsFullScreen() {\n    // Flash does not allow fullscreen through javascript\n    return false;\n  };\n\n  /**\n   * Flash does not allow fullscreen through javascript\n   * so this always returns false.\n   *\n   * @return {boolean}\n   *         The Flash tech does not support fullscreen, so it will always return false.\n   */\n\n\n  Flash.prototype.enterFullScreen = function enterFullScreen() {\n    return false;\n  };\n\n  return Flash;\n}(_tech2['default']);\n\n// Create setters and getters for attributes\n\n\nvar _api = Flash.prototype;\nvar _readWrite = 'rtmpConnection,rtmpStream,preload,defaultPlaybackRate,playbackRate,autoplay,loop,mediaGroup,controller,controls,volume,muted,defaultMuted'.split(',');\nvar _readOnly = 'networkState,readyState,initialTime,startOffsetTime,paused,ended,videoWidth,videoHeight'.split(',');\n\nfunction _createSetter(attr) {\n  var attrUpper = attr.charAt(0).toUpperCase() + attr.slice(1);\n\n  _api['set' + attrUpper] = function (val) {\n    return this.el_.vjs_setProperty(attr, val);\n  };\n}\n\nfunction _createGetter(attr) {\n  _api[attr] = function () {\n    return this.el_.vjs_getProperty(attr);\n  };\n}\n\n// Create getter and setters for all read/write attributes\nfor (var i = 0; i < _readWrite.length; i++) {\n  _createGetter(_readWrite[i]);\n  _createSetter(_readWrite[i]);\n}\n\n// Create getters for read-only attributes\nfor (var _i = 0; _i < _readOnly.length; _i++) {\n  _createGetter(_readOnly[_i]);\n}\n\n/** ------------------------------ Getters ------------------------------ **/\n/**\n * Get the value of `rtmpConnection` from the swf.\n *\n * @method Flash#rtmpConnection\n * @return {string}\n *         The current value of `rtmpConnection` on the swf.\n */\n\n/**\n * Get the value of `rtmpStream` from the swf.\n *\n * @method Flash#rtmpStream\n * @return {string}\n *         The current value of `rtmpStream` on the swf.\n */\n\n/**\n * Get the value of `preload` from the swf. `preload` indicates\n * what should download before the media is interacted with. It can have the following\n * values:\n * - none: nothing should be downloaded\n * - metadata: poster and the first few frames of the media may be downloaded to get\n *   media dimensions and other metadata\n * - auto: allow the media and metadata for the media to be downloaded before\n *    interaction\n *\n * @method Flash#preload\n * @return {string}\n *         The value of `preload` from the swf. Will be 'none', 'metadata',\n *         or 'auto'.\n */\n\n/**\n * Get the value of `defaultPlaybackRate` from the swf.\n *\n * @method Flash#defaultPlaybackRate\n * @return {number}\n *         The current value of `defaultPlaybackRate` on the swf.\n */\n\n/**\n * Get the value of `playbackRate` from the swf. `playbackRate` indicates\n * the rate at which the media is currently playing back. Examples:\n *   - if playbackRate is set to 2, media will play twice as fast.\n *   - if playbackRate is set to 0.5, media will play half as fast.\n *\n * @method Flash#playbackRate\n * @return {number}\n *         The value of `playbackRate` from the swf. A number indicating\n *         the current playback speed of the media, where 1 is normal speed.\n */\n\n/**\n * Get the value of `autoplay` from the swf. `autoplay` indicates\n * that the media should start to play as soon as the page is ready.\n *\n * @method Flash#autoplay\n * @return {boolean}\n *         - The value of `autoplay` from the swf.\n *         - True indicates that the media ashould start as soon as the page loads.\n *         - False indicates that the media should not start as soon as the page loads.\n */\n\n/**\n * Get the value of `loop` from the swf. `loop` indicates\n * that the media should return to the start of the media and continue playing once\n * it reaches the end.\n *\n * @method Flash#loop\n * @return {boolean}\n *         - The value of `loop` from the swf.\n *         - True indicates that playback should seek back to start once\n *           the end of a media is reached.\n *         - False indicates that playback should not loop back to the start when the\n *           end of the media is reached.\n */\n\n/**\n * Get the value of `mediaGroup` from the swf.\n *\n * @method Flash#mediaGroup\n * @return {string}\n *         The current value of `mediaGroup` on the swf.\n */\n\n/**\n * Get the value of `controller` from the swf.\n *\n * @method Flash#controller\n * @return {string}\n *         The current value of `controller` on the swf.\n */\n\n/**\n * Get the value of `controls` from the swf. `controls` indicates\n * whether the native flash controls should be shown or hidden.\n *\n * @method Flash#controls\n * @return {boolean}\n *         - The value of `controls` from the swf.\n *         - True indicates that native controls should be showing.\n *         - False indicates that native controls should be hidden.\n */\n\n/**\n * Get the value of the `volume` from the swf. `volume` indicates the current\n * audio level as a percentage in decimal form. This means that 1 is 100%, 0.5 is 50%, and\n * so on.\n *\n * @method Flash#volume\n * @return {number}\n *         The volume percent as a decimal. Value will be between 0-1.\n */\n\n/**\n * Get the value of the `muted` from the swf. `muted` indicates the current\n * audio level should be silent.\n *\n * @method Flash#muted\n * @return {boolean}\n *         - True if the audio should be set to silent\n *         - False otherwise\n */\n\n/**\n * Get the value of `defaultMuted` from the swf. `defaultMuted` indicates\n * whether the media should start muted or not. Only changes the default state of the\n * media. `muted` and `defaultMuted` can have different values. `muted` indicates the\n * current state.\n *\n * @method Flash#defaultMuted\n * @return {boolean}\n *         - The value of `defaultMuted` from the swf.\n *         - True indicates that the media should start muted.\n *         - False indicates that the media should not start muted.\n */\n\n/**\n * Get the value of `networkState` from the swf. `networkState` indicates\n * the current network state. It returns an enumeration from the following list:\n * - 0: NETWORK_EMPTY\n * - 1: NEWORK_IDLE\n * - 2: NETWORK_LOADING\n * - 3: NETWORK_NO_SOURCE\n *\n * @method Flash#networkState\n * @return {number}\n *         The value of `networkState` from the swf. This will be a number\n *         from the list in the description.\n */\n\n/**\n * Get the value of `readyState` from the swf. `readyState` indicates\n * the current state of the media element. It returns an enumeration from the\n * following list:\n * - 0: HAVE_NOTHING\n * - 1: HAVE_METADATA\n * - 2: HAVE_CURRENT_DATA\n * - 3: HAVE_FUTURE_DATA\n * - 4: HAVE_ENOUGH_DATA\n *\n * @method Flash#readyState\n * @return {number}\n *         The value of `readyState` from the swf. This will be a number\n *         from the list in the description.\n */\n\n/**\n * Get the value of `readyState` from the swf. `readyState` indicates\n * the current state of the media element. It returns an enumeration from the\n * following list:\n * - 0: HAVE_NOTHING\n * - 1: HAVE_METADATA\n * - 2: HAVE_CURRENT_DATA\n * - 3: HAVE_FUTURE_DATA\n * - 4: HAVE_ENOUGH_DATA\n *\n * @method Flash#readyState\n * @return {number}\n *         The value of `readyState` from the swf. This will be a number\n *         from the list in the description.\n */\n\n/**\n * Get the value of `initialTime` from the swf.\n *\n * @method Flash#initialTime\n * @return {number}\n *         The `initialTime` proprety on the swf.\n */\n\n/**\n * Get the value of `startOffsetTime` from the swf.\n *\n * @method Flash#startOffsetTime\n * @return {number}\n *         The `startOffsetTime` proprety on the swf.\n */\n\n/**\n * Get the value of `paused` from the swf. `paused` indicates whether the swf\n * is current paused or not.\n *\n * @method Flash#paused\n * @return {boolean}\n *         The value of `paused` from the swf.\n */\n\n/**\n * Get the value of `ended` from the swf. `ended` indicates whether\n * the media has reached the end or not.\n *\n * @method Flash#ended\n * @return {boolean}\n *         - True indicates that the media has ended.\n *         - False indicates that the media has not ended.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-ended}\n */\n\n/**\n * Get the value of `videoWidth` from the swf. `videoWidth` indicates\n * the current width of the media in css pixels.\n *\n * @method Flash#videoWidth\n * @return {number}\n *         The value of `videoWidth` from the swf. This will be a number\n *         in css pixels.\n */\n\n/**\n * Get the value of `videoHeight` from the swf. `videoHeigth` indicates\n * the current height of the media in css pixels.\n *\n * @method Flassh.prototype.videoHeight\n * @return {number}\n *         The value of `videoHeight` from the swf. This will be a number\n *         in css pixels.\n */\n/** ------------------------------ Setters ------------------------------ **/\n\n/**\n * Set the value of `rtmpConnection` on the swf.\n *\n * @method Flash#setRtmpConnection\n * @param {string} rtmpConnection\n *        New value to set the `rtmpConnection` property to.\n */\n\n/**\n * Set the value of `rtmpStream` on the swf.\n *\n * @method Flash#setRtmpStream\n * @param {string} rtmpStream\n *        New value to set the `rtmpStream` property to.\n */\n\n/**\n * Set the value of `preload` on the swf. `preload` indicates\n * what should download before the media is interacted with. It can have the following\n * values:\n * - none: nothing should be downloaded\n * - metadata: poster and the first few frames of the media may be downloaded to get\n *   media dimensions and other metadata\n * - auto: allow the media and metadata for the media to be downloaded before\n *    interaction\n *\n * @method Flash#setPreload\n * @param {string} preload\n *        The value of `preload` to set on the swf. Should be 'none', 'metadata',\n *        or 'auto'.\n */\n\n/**\n * Set the value of `defaultPlaybackRate` on the swf.\n *\n * @method Flash#setDefaultPlaybackRate\n * @param {number} defaultPlaybackRate\n *        New value to set the `defaultPlaybackRate` property to.\n */\n\n/**\n * Set the value of `playbackRate` on the swf. `playbackRate` indicates\n * the rate at which the media is currently playing back. Examples:\n *   - if playbackRate is set to 2, media will play twice as fast.\n *   - if playbackRate is set to 0.5, media will play half as fast.\n *\n * @method Flash#setPlaybackRate\n * @param {number} playbackRate\n *        New value of `playbackRate` on the swf. A number indicating\n *        the current playback speed of the media, where 1 is normal speed.\n */\n\n/**\n * Set the value of `autoplay` on the swf. `autoplay` indicates\n * that the media should start to play as soon as the page is ready.\n *\n * @method Flash#setAutoplay\n * @param {boolean} autoplay\n *        - The value of `autoplay` from the swf.\n *        - True indicates that the media ashould start as soon as the page loads.\n *        - False indicates that the media should not start as soon as the page loads.\n */\n\n/**\n * Set the value of `loop` on the swf. `loop` indicates\n * that the media should return to the start of the media and continue playing once\n * it reaches the end.\n *\n * @method Flash#setLoop\n * @param {boolean} loop\n *        - True indicates that playback should seek back to start once\n *          the end of a media is reached.\n *        - False indicates that playback should not loop back to the start when the\n *          end of the media is reached.\n */\n\n/**\n * Set the value of `mediaGroup` on the swf.\n *\n * @method Flash#setMediaGroup\n * @param {string} mediaGroup\n *        New value of `mediaGroup` to set on the swf.\n */\n\n/**\n * Set the value of `controller` on the swf.\n *\n * @method Flash#setController\n * @param {string} controller\n *        New value the current value of `controller` on the swf.\n */\n\n/**\n * Get the value of `controls` from the swf. `controls` indicates\n * whether the native flash controls should be shown or hidden.\n *\n * @method Flash#controls\n * @return {boolean}\n *         - The value of `controls` from the swf.\n *         - True indicates that native controls should be showing.\n *         - False indicates that native controls should be hidden.\n */\n\n/**\n * Set the value of the `volume` on the swf. `volume` indicates the current\n * audio level as a percentage in decimal form. This means that 1 is 100%, 0.5 is 50%, and\n * so on.\n *\n * @method Flash#setVolume\n * @param {number} percentAsDecimal\n *         The volume percent as a decimal. Value will be between 0-1.\n */\n\n/**\n * Set the value of the `muted` on the swf. `muted` indicates that the current\n * audio level should be silent.\n *\n * @method Flash#setMuted\n * @param {boolean} muted\n *         - True if the audio should be set to silent\n *         - False otherwise\n */\n\n/**\n * Set the value of `defaultMuted` on the swf. `defaultMuted` indicates\n * whether the media should start muted or not. Only changes the default state of the\n * media. `muted` and `defaultMuted` can have different values. `muted` indicates the\n * current state.\n *\n * @method Flash#setDefaultMuted\n * @param {boolean} defaultMuted\n *         - True indicates that the media should start muted.\n *         - False indicates that the media should not start muted.\n */\n\n/* Flash Support Testing -------------------------------------------------------- */\n\n/**\n * Check if the Flash tech is currently supported.\n *\n * @return {boolean}\n *          - True if the flash tech is supported.\n *          - False otherwise.\n */\nFlash.isSupported = function () {\n  return Flash.version()[0] >= 10;\n  // return swfobject.hasFlashPlayerVersion('10');\n};\n\n// Add Source Handler pattern functions to this tech\n_tech2['default'].withSourceHandlers(Flash);\n\n/*\n * Native source handler for flash,  simply passes the source to the swf element.\n *\n * @property {Tech~SourceObject} source\n *           The source object\n *\n * @property {Flash} tech\n *           The instance of the Flash tech\n */\nFlash.nativeSourceHandler = {};\n\n/**\n * Check if the Flash can play the given mime type.\n *\n * @param {string} type\n *        The mimetype to check\n *\n * @return {string}\n *         'maybe', or '' (empty string)\n */\nFlash.nativeSourceHandler.canPlayType = function (type) {\n  if (type in Flash.formats) {\n    return 'maybe';\n  }\n\n  return '';\n};\n\n/**\n * Check if the media element can handle a source natively.\n *\n * @param {Tech~SourceObject} source\n *         The source object\n *\n * @param {Object} [options]\n *         Options to be passed to the tech.\n *\n * @return {string}\n *         'maybe', or '' (empty string).\n */\nFlash.nativeSourceHandler.canHandleSource = function (source, options) {\n  var type = void 0;\n\n  function guessMimeType(src) {\n    var ext = Url.getFileExtension(src);\n\n    if (ext) {\n      return 'video/' + ext;\n    }\n    return '';\n  }\n\n  if (!source.type) {\n    type = guessMimeType(source.src);\n  } else {\n    // Strip code information from the type because we don't get that specific\n    type = source.type.replace(/;.*/, '').toLowerCase();\n  }\n\n  return Flash.nativeSourceHandler.canPlayType(type);\n};\n\n/**\n * Pass the source to the swf.\n *\n * @param {Tech~SourceObject} source\n *        The source object\n *\n * @param {Flash} tech\n *        The instance of the Flash tech\n *\n * @param {Object} [options]\n *        The options to pass to the source\n */\nFlash.nativeSourceHandler.handleSource = function (source, tech, options) {\n  tech.setSrc(source.src);\n};\n\n/**\n * noop for native source handler dispose, as cleanup will happen automatically.\n */\nFlash.nativeSourceHandler.dispose = function () {};\n\n// Register the native source handler\nFlash.registerSourceHandler(Flash.nativeSourceHandler);\n\n/**\n * Flash supported mime types.\n *\n * @constant {Object}\n */\nFlash.formats = {\n  'video/flv': 'FLV',\n  'video/x-flv': 'FLV',\n  'video/mp4': 'MP4',\n  'video/m4v': 'MP4'\n};\n\n/**\n * Called when the the swf is \"ready\", and makes sure that the swf is really\n * ready using {@link Flash#checkReady}\n */\nFlash.onReady = function (currSwf) {\n  var el = Dom.getEl(currSwf);\n  var tech = el && el.tech;\n\n  // if there is no el then the tech has been disposed\n  // and the tech element was removed from the player div\n  if (tech && tech.el()) {\n    // check that the flash object is really ready\n    Flash.checkReady(tech);\n  }\n};\n\n/**\n * The SWF isn't always ready when it says it is. Sometimes the API functions still\n * need to be added to the object. If it's not ready, we set a timeout to check again\n * shortly.\n *\n * @param {Flash} tech\n *        The instance of the flash tech to check.\n */\nFlash.checkReady = function (tech) {\n  // stop worrying if the tech has been disposed\n  if (!tech.el()) {\n    return;\n  }\n\n  // check if API property exists\n  if (tech.el().vjs_getProperty) {\n    // tell tech it's ready\n    tech.triggerReady();\n  } else {\n    // wait longer\n    this.setTimeout(function () {\n      Flash.checkReady(tech);\n    }, 50);\n  }\n};\n\n/**\n * Trigger events from the swf on the Flash Tech.\n *\n * @param {number} swfID\n *        The id of the swf that had the event\n *\n * @param {string} eventName\n *        The name of the event to trigger\n */\nFlash.onEvent = function (swfID, eventName) {\n  var tech = Dom.getEl(swfID).tech;\n  var args = Array.prototype.slice.call(arguments, 2);\n\n  // dispatch Flash events asynchronously for two reasons:\n  // - Flash swallows any exceptions generated by javascript it\n  //   invokes\n  // - Flash is suspended until the javascript returns which may cause\n  //   playback performance issues\n  tech.setTimeout(function () {\n    tech.trigger(eventName, args);\n  }, 1);\n};\n\n/**\n * Log errors from the swf on the Flash tech.\n *\n * @param {number} swfID\n *        The id of the swf that had an error.\n *\n * @param {string} The error string\n *        The error to set on the Flash Tech.\n *\n * @return {MediaError|undefined}\n *          - Returns a MediaError when err is 'srcnotfound'\n *          - Returns undefined otherwise.\n */\nFlash.onError = function (swfID, err) {\n  var tech = Dom.getEl(swfID).tech;\n\n  // trigger MEDIA_ERR_SRC_NOT_SUPPORTED\n  if (err === 'srcnotfound') {\n    return tech.error(4);\n  }\n\n  // trigger a custom error\n  tech.error('FLASH: ' + err);\n};\n\n/**\n * Get the current version of Flash that is in use on the page.\n *\n * @return {Array}\n *          an array of versions that are available.\n */\nFlash.version = function () {\n  var version = '0,0,0';\n\n  // IE\n  try {\n    version = new _window2['default'].ActiveXObject('ShockwaveFlash.ShockwaveFlash').GetVariable('$version').replace(/\\D+/g, ',').match(/^,?(.+),?$/)[1];\n\n    // other browsers\n  } catch (e) {\n    try {\n      if (navigator.mimeTypes['application/x-shockwave-flash'].enabledPlugin) {\n        version = (navigator.plugins['Shockwave Flash 2.0'] || navigator.plugins['Shockwave Flash']).description.replace(/\\D+/g, ',').match(/^,?(.+),?$/)[1];\n      }\n    } catch (err) {\n      // satisfy linter\n    }\n  }\n  return version.split(',');\n};\n\n/**\n * Only use for non-iframe embeds.\n *\n * @param {Object} swf\n *        The videojs-swf object.\n *\n * @param {Object} flashVars\n *        Names and values to use as flash option variables.\n *\n * @param {Object} params\n *        Style parameters to set on the object.\n *\n * @param {Object} attributes\n *        Attributes to set on the element.\n *\n * @return {Element}\n *          The embeded Flash DOM element.\n */\nFlash.embed = function (swf, flashVars, params, attributes) {\n  var code = Flash.getEmbedCode(swf, flashVars, params, attributes);\n\n  // Get element by embedding code and retrieving created element\n  var obj = Dom.createEl('div', { innerHTML: code }).childNodes[0];\n\n  return obj;\n};\n\n/**\n * Only use for non-iframe embeds.\n *\n * @param {Object} swf\n *        The videojs-swf object.\n *\n * @param {Object} flashVars\n *        Names and values to use as flash option variables.\n *\n * @param {Object} params\n *        Style parameters to set on the object.\n *\n * @param {Object} attributes\n *        Attributes to set on the element.\n *\n * @return {Element}\n *          The embeded Flash DOM element.\n */\nFlash.getEmbedCode = function (swf, flashVars, params, attributes) {\n  var objTag = '<object type=\"application/x-shockwave-flash\" ';\n  var flashVarsString = '';\n  var paramsString = '';\n  var attrsString = '';\n\n  // Convert flash vars to string\n  if (flashVars) {\n    Object.getOwnPropertyNames(flashVars).forEach(function (key) {\n      flashVarsString += key + '=' + flashVars[key] + '&amp;';\n    });\n  }\n\n  // Add swf, flashVars, and other default params\n  params = (0, _obj.assign)({\n    movie: swf,\n    flashvars: flashVarsString,\n    // Required to talk to swf\n    allowScriptAccess: 'always',\n    // All should be default, but having security issues.\n    allowNetworking: 'all'\n  }, params);\n\n  // Create param tags string\n  Object.getOwnPropertyNames(params).forEach(function (key) {\n    paramsString += '<param name=\"' + key + '\" value=\"' + params[key] + '\" />';\n  });\n\n  attributes = (0, _obj.assign)({\n    // Add swf to attributes (need both for IE and Others to work)\n    data: swf,\n\n    // Default to 100% width/height\n    width: '100%',\n    height: '100%'\n\n  }, attributes);\n\n  // Create Attributes string\n  Object.getOwnPropertyNames(attributes).forEach(function (key) {\n    attrsString += key + '=\"' + attributes[key] + '\" ';\n  });\n\n  return '' + objTag + attrsString + '>' + paramsString + '</object>';\n};\n\n// Run Flash through the RTMP decorator\n(0, _flashRtmp2['default'])(Flash);\n\n_component2['default'].registerComponent('Flash', Flash);\n_tech2['default'].registerTech('Flash', Flash);\nexports['default'] = Flash;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/video.js/es5/tech/flash.js\n ** module id = 54\n ** module chunks = 0 1\n **/","'use strict';\n\nexports.__esModule = true;\n/**\n * @file flash-rtmp.js\n * @module flash-rtmp\n */\n\n/**\n * Add RTMP properties to the {@link Flash} Tech.\n *\n * @param {Flash} Flash\n *        The flash tech class.\n *\n * @mixin FlashRtmpDecorator\n */\nfunction FlashRtmpDecorator(Flash) {\n  Flash.streamingFormats = {\n    'rtmp/mp4': 'MP4',\n    'rtmp/flv': 'FLV'\n  };\n\n  /**\n   * Join connection and stream with an ampersand.\n   *\n   * @param {string} connection\n   *        The connection string.\n   *\n   * @param {string} stream\n   *        The stream string.\n   */\n  Flash.streamFromParts = function (connection, stream) {\n    return connection + '&' + stream;\n  };\n\n  /**\n   * The flash parts object that contains connection and stream info.\n   *\n   * @typedef {Object} Flash~PartsObject\n   *\n   * @property {string} connection\n   *           The connection string of a source, defaults to an empty string.\n   *\n   * @property {string} stream\n   *           The stream string of the source, defaults to an empty string.\n   */\n\n  /**\n   * Convert a source url into a stream and connection parts.\n   *\n   * @param {string} src\n   *        the source url\n   *\n   * @return {Flash~PartsObject}\n   *         The parts object that contains a connection and a stream\n   */\n  Flash.streamToParts = function (src) {\n    var parts = {\n      connection: '',\n      stream: ''\n    };\n\n    if (!src) {\n      return parts;\n    }\n\n    // Look for the normal URL separator we expect, '&'.\n    // If found, we split the URL into two pieces around the\n    // first '&'.\n    var connEnd = src.search(/&(?!\\w+=)/);\n    var streamBegin = void 0;\n\n    if (connEnd !== -1) {\n      streamBegin = connEnd + 1;\n    } else {\n      // If there's not a '&', we use the last '/' as the delimiter.\n      connEnd = streamBegin = src.lastIndexOf('/') + 1;\n      if (connEnd === 0) {\n        // really, there's not a '/'?\n        connEnd = streamBegin = src.length;\n      }\n    }\n\n    parts.connection = src.substring(0, connEnd);\n    parts.stream = src.substring(streamBegin, src.length);\n\n    return parts;\n  };\n\n  /**\n   * Check if the source type is a streaming type.\n   *\n   * @param {string} srcType\n   *        The mime type to check.\n   *\n   * @return {boolean}\n   *          - True if the source type is a streaming type.\n   *          - False if the source type is not a streaming type.\n   */\n  Flash.isStreamingType = function (srcType) {\n    return srcType in Flash.streamingFormats;\n  };\n\n  // RTMP has four variations, any string starting\n  // with one of these protocols should be valid\n\n  /**\n   * Regular expression used to check if the source is an rtmp source.\n   *\n   * @property {RegExp} Flash.RTMP_RE\n   */\n  Flash.RTMP_RE = /^rtmp[set]?:\\/\\//i;\n\n  /**\n   * Check if the source itself is a streaming type.\n   *\n   * @param {string} src\n   *        The url to the source.\n   *\n   * @return {boolean}\n   *          - True if the source url indicates that the source is streaming.\n   *          - False if the shource url indicates that the source url is not streaming.\n   */\n  Flash.isStreamingSrc = function (src) {\n    return Flash.RTMP_RE.test(src);\n  };\n\n  /**\n   * A source handler for RTMP urls\n   * @type {Object}\n   */\n  Flash.rtmpSourceHandler = {};\n\n  /**\n   * Check if Flash can play the given mime type.\n   *\n   * @param {string} type\n   *        The mime type to check\n   *\n   * @return {string}\n   *         'maybe', or '' (empty string)\n   */\n  Flash.rtmpSourceHandler.canPlayType = function (type) {\n    if (Flash.isStreamingType(type)) {\n      return 'maybe';\n    }\n\n    return '';\n  };\n\n  /**\n   * Check if Flash can handle the source natively\n   *\n   * @param {Object} source\n   *        The source object\n   *\n   * @param {Object} [options]\n   *        The options passed to the tech\n   *\n   * @return {string}\n   *         'maybe', or '' (empty string)\n   */\n  Flash.rtmpSourceHandler.canHandleSource = function (source, options) {\n    var can = Flash.rtmpSourceHandler.canPlayType(source.type);\n\n    if (can) {\n      return can;\n    }\n\n    if (Flash.isStreamingSrc(source.src)) {\n      return 'maybe';\n    }\n\n    return '';\n  };\n\n  /**\n   * Pass the source to the flash object.\n   *\n   * @param {Object} source\n   *        The source object\n   *\n   * @param {Flash} tech\n   *        The instance of the Flash tech\n   *\n   * @param {Object} [options]\n   *        The options to pass to the source\n   */\n  Flash.rtmpSourceHandler.handleSource = function (source, tech, options) {\n    var srcParts = Flash.streamToParts(source.src);\n\n    tech.setRtmpConnection(srcParts.connection);\n    tech.setRtmpStream(srcParts.stream);\n  };\n\n  // Register the native source handler\n  Flash.registerSourceHandler(Flash.rtmpSourceHandler);\n\n  return Flash;\n}\n\nexports['default'] = FlashRtmpDecorator;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/video.js/es5/tech/flash-rtmp.js\n ** module id = 55\n ** module chunks = 0 1\n **/","'use strict';\n\nexports.__esModule = true;\n\nvar _clickableComponent = require('./clickable-component.js');\n\nvar _clickableComponent2 = _interopRequireDefault(_clickableComponent);\n\nvar _component = require('./component.js');\n\nvar _component2 = _interopRequireDefault(_component);\n\nvar _fn = require('./utils/fn.js');\n\nvar Fn = _interopRequireWildcard(_fn);\n\nvar _dom = require('./utils/dom.js');\n\nvar Dom = _interopRequireWildcard(_dom);\n\nvar _browser = require('./utils/browser.js');\n\nvar browser = _interopRequireWildcard(_browser);\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj['default'] = obj; return newObj; } }\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /**\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * @file poster-image.js\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                */\n\n\n/**\n * A `ClickableComponent` that handles showing the poster image for the player.\n *\n * @extends ClickableComponent\n */\nvar PosterImage = function (_ClickableComponent) {\n  _inherits(PosterImage, _ClickableComponent);\n\n  /**\n   * Create an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should attach to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function PosterImage(player, options) {\n    _classCallCheck(this, PosterImage);\n\n    var _this = _possibleConstructorReturn(this, _ClickableComponent.call(this, player, options));\n\n    _this.update();\n    player.on('posterchange', Fn.bind(_this, _this.update));\n    return _this;\n  }\n\n  /**\n   * Clean up and dispose of the `PosterImage`.\n   */\n\n\n  PosterImage.prototype.dispose = function dispose() {\n    this.player().off('posterchange', this.update);\n    _ClickableComponent.prototype.dispose.call(this);\n  };\n\n  /**\n   * Create the `PosterImage`s DOM element.\n   *\n   * @return {Element}\n   *         The element that gets created.\n   */\n\n\n  PosterImage.prototype.createEl = function createEl() {\n    var el = Dom.createEl('div', {\n      className: 'vjs-poster',\n\n      // Don't want poster to be tabbable.\n      tabIndex: -1\n    });\n\n    // To ensure the poster image resizes while maintaining its original aspect\n    // ratio, use a div with `background-size` when available. For browsers that\n    // do not support `background-size` (e.g. IE8), fall back on using a regular\n    // img element.\n    if (!browser.BACKGROUND_SIZE_SUPPORTED) {\n      this.fallbackImg_ = Dom.createEl('img');\n      el.appendChild(this.fallbackImg_);\n    }\n\n    return el;\n  };\n\n  /**\n   * An {@link EventTarget~EventListener} for {@link Player#posterchange} events.\n   *\n   * @listens Player#posterchange\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `Player#posterchange` event that triggered this function.\n   */\n\n\n  PosterImage.prototype.update = function update(event) {\n    var url = this.player().poster();\n\n    this.setSrc(url);\n\n    // If there's no poster source we should display:none on this component\n    // so it's not still clickable or right-clickable\n    if (url) {\n      this.show();\n    } else {\n      this.hide();\n    }\n  };\n\n  /**\n   * Set the source of the `PosterImage` depending on the display method.\n   *\n   * @param {string} url\n   *        The URL to the source for the `PosterImage`.\n   */\n\n\n  PosterImage.prototype.setSrc = function setSrc(url) {\n    if (this.fallbackImg_) {\n      this.fallbackImg_.src = url;\n    } else {\n      var backgroundImage = '';\n\n      // Any falsey values should stay as an empty string, otherwise\n      // this will throw an extra error\n      if (url) {\n        backgroundImage = 'url(\"' + url + '\")';\n      }\n\n      this.el_.style.backgroundImage = backgroundImage;\n    }\n  };\n\n  /**\n   * An {@link EventTarget~EventListener} for clicks on the `PosterImage`. See\n   * {@link ClickableComponent#handleClick} for instances where this will be triggered.\n   *\n   * @listens tap\n   * @listens click\n   * @listens keydown\n   *\n   * @param {EventTarget~Event} event\n   +        The `click`, `tap` or `keydown` event that caused this function to be called.\n   */\n\n\n  PosterImage.prototype.handleClick = function handleClick(event) {\n    // We don't want a click to trigger playback when controls are disabled\n    if (!this.player_.controls()) {\n      return;\n    }\n\n    if (this.player_.paused()) {\n      this.player_.play();\n    } else {\n      this.player_.pause();\n    }\n  };\n\n  return PosterImage;\n}(_clickableComponent2['default']);\n\n_component2['default'].registerComponent('PosterImage', PosterImage);\nexports['default'] = PosterImage;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/video.js/es5/poster-image.js\n ** module id = 56\n ** module chunks = 0 1\n **/","'use strict';\n\nexports.__esModule = true;\n\nvar _component = require('./component');\n\nvar _component2 = _interopRequireDefault(_component);\n\nvar _dom = require('./utils/dom.js');\n\nvar Dom = _interopRequireWildcard(_dom);\n\nvar _events = require('./utils/events.js');\n\nvar Events = _interopRequireWildcard(_events);\n\nvar _fn = require('./utils/fn.js');\n\nvar Fn = _interopRequireWildcard(_fn);\n\nvar _log = require('./utils/log.js');\n\nvar _log2 = _interopRequireDefault(_log);\n\nvar _document = require('global/document');\n\nvar _document2 = _interopRequireDefault(_document);\n\nvar _obj = require('./utils/obj');\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj['default'] = obj; return newObj; } }\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /**\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * @file button.js\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                */\n\n\n/**\n * Clickable Component which is clickable or keyboard actionable,\n * but is not a native HTML button.\n *\n * @extends Component\n */\nvar ClickableComponent = function (_Component) {\n  _inherits(ClickableComponent, _Component);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param  {Player} player\n   *         The `Player` that this class should be attached to.\n   *\n   * @param  {Object} [options]\n   *         The key/value store of player options.\n   */\n  function ClickableComponent(player, options) {\n    _classCallCheck(this, ClickableComponent);\n\n    var _this = _possibleConstructorReturn(this, _Component.call(this, player, options));\n\n    _this.emitTapEvents();\n\n    _this.enable();\n    return _this;\n  }\n\n  /**\n   * Create the `Component`s DOM element.\n   *\n   * @param {string} [tag=div]\n   *        The element's node type.\n   *\n   * @param {Object} [props={}]\n   *        An object of properties that should be set on the element.\n   *\n   * @param {Object} [attributes={}]\n   *        An object of attributes that should be set on the element.\n   *\n   * @return {Element}\n   *         The element that gets created.\n   */\n\n\n  ClickableComponent.prototype.createEl = function createEl() {\n    var tag = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'div';\n    var props = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    var attributes = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n\n    props = (0, _obj.assign)({\n      className: this.buildCSSClass(),\n      tabIndex: 0\n    }, props);\n\n    if (tag === 'button') {\n      _log2['default'].error('Creating a ClickableComponent with an HTML element of ' + tag + ' is not supported; use a Button instead.');\n    }\n\n    // Add ARIA attributes for clickable element which is not a native HTML button\n    attributes = (0, _obj.assign)({\n      'role': 'button',\n\n      // let the screen reader user know that the text of the element may change\n      'aria-live': 'polite'\n    }, attributes);\n\n    this.tabIndex_ = props.tabIndex;\n\n    var el = _Component.prototype.createEl.call(this, tag, props, attributes);\n\n    this.createControlTextEl(el);\n\n    return el;\n  };\n\n  /**\n   * Create a control text element on this `Component`\n   *\n   * @param {Element} [el]\n   *        Parent element for the control text.\n   *\n   * @return {Element}\n   *         The control text element that gets created.\n   */\n\n\n  ClickableComponent.prototype.createControlTextEl = function createControlTextEl(el) {\n    this.controlTextEl_ = Dom.createEl('span', {\n      className: 'vjs-control-text'\n    });\n\n    if (el) {\n      el.appendChild(this.controlTextEl_);\n    }\n\n    this.controlText(this.controlText_, el);\n\n    return this.controlTextEl_;\n  };\n\n  /**\n   * Get or set the localize text to use for the controls on the `Component`.\n   *\n   * @param {string} [text]\n   *        Control text for element.\n   *\n   * @param {Element} [el=this.el()]\n   *        Element to set the title on.\n   *\n   * @return {string|ClickableComponent}\n   *         - The control text when getting\n   *         - Returns itself when setting; method can be chained.\n   */\n\n\n  ClickableComponent.prototype.controlText = function controlText(text) {\n    var el = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.el();\n\n    if (!text) {\n      return this.controlText_ || 'Need Text';\n    }\n\n    var localizedText = this.localize(text);\n\n    this.controlText_ = text;\n    this.controlTextEl_.innerHTML = localizedText;\n\n    if (!this.nonIconControl) {\n      // Set title attribute if only an icon is shown\n      el.setAttribute('title', localizedText);\n    }\n\n    return this;\n  };\n\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n\n\n  ClickableComponent.prototype.buildCSSClass = function buildCSSClass() {\n    return 'vjs-control vjs-button ' + _Component.prototype.buildCSSClass.call(this);\n  };\n\n  /**\n   * Enable this `Component`s element.\n   *\n   * @return {ClickableComponent}\n   *         Returns itself; method can be chained.\n   */\n\n\n  ClickableComponent.prototype.enable = function enable() {\n    this.removeClass('vjs-disabled');\n    this.el_.setAttribute('aria-disabled', 'false');\n    if (typeof this.tabIndex_ !== 'undefined') {\n      this.el_.setAttribute('tabIndex', this.tabIndex_);\n    }\n    this.on('tap', this.handleClick);\n    this.on('click', this.handleClick);\n    this.on('focus', this.handleFocus);\n    this.on('blur', this.handleBlur);\n    return this;\n  };\n\n  /**\n   * Disable this `Component`s element.\n   *\n   * @return {ClickableComponent}\n   *         Returns itself; method can be chained.\n   */\n\n\n  ClickableComponent.prototype.disable = function disable() {\n    this.addClass('vjs-disabled');\n    this.el_.setAttribute('aria-disabled', 'true');\n    if (typeof this.tabIndex_ !== 'undefined') {\n      this.el_.removeAttribute('tabIndex');\n    }\n    this.off('tap', this.handleClick);\n    this.off('click', this.handleClick);\n    this.off('focus', this.handleFocus);\n    this.off('blur', this.handleBlur);\n    return this;\n  };\n\n  /**\n   * This gets called when a `ClickableComponent` gets:\n   * - Clicked (via the `click` event, listening starts in the constructor)\n   * - Tapped (via the `tap` event, listening starts in the constructor)\n   * - The following things happen in order:\n   *   1. {@link ClickableComponent#handleFocus} is called via a `focus` event on the\n   *      `ClickableComponent`.\n   *   2. {@link ClickableComponent#handleFocus} adds a listener for `keydown` on using\n   *      {@link ClickableComponent#handleKeyPress}.\n   *   3. `ClickableComponent` has not had a `blur` event (`blur` means that focus was lost). The user presses\n   *      the space or enter key.\n   *   4. {@link ClickableComponent#handleKeyPress} calls this function with the `keydown`\n   *      event as a parameter.\n   *\n   * @param {EventTarget~Event} event\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   * @abstract\n   */\n\n\n  ClickableComponent.prototype.handleClick = function handleClick(event) {};\n\n  /**\n   * This gets called when a `ClickableComponent` gains focus via a `focus` event.\n   * Turns on listening for `keydown` events. When they happen it\n   * calls `this.handleKeyPress`.\n   *\n   * @param {EventTarget~Event} event\n   *        The `focus` event that caused this function to be called.\n   *\n   * @listens focus\n   */\n\n\n  ClickableComponent.prototype.handleFocus = function handleFocus(event) {\n    Events.on(_document2['default'], 'keydown', Fn.bind(this, this.handleKeyPress));\n  };\n\n  /**\n   * Called when this ClickableComponent has focus and a key gets pressed down. By\n   * default it will call `this.handleClick` when the key is space or enter.\n   *\n   * @param {EventTarget~Event} event\n   *        The `keydown` event that caused this function to be called.\n   *\n   * @listens keydown\n   */\n\n\n  ClickableComponent.prototype.handleKeyPress = function handleKeyPress(event) {\n\n    // Support Space (32) or Enter (13) key operation to fire a click event\n    if (event.which === 32 || event.which === 13) {\n      event.preventDefault();\n      this.handleClick(event);\n    } else if (_Component.prototype.handleKeyPress) {\n\n      // Pass keypress handling up for unsupported keys\n      _Component.prototype.handleKeyPress.call(this, event);\n    }\n  };\n\n  /**\n   * Called when a `ClickableComponent` loses focus. Turns off the listener for\n   * `keydown` events. Which Stops `this.handleKeyPress` from getting called.\n   *\n   * @param {EventTarget~Event} event\n   *        The `blur` event that caused this function to be called.\n   *\n   * @listens blur\n   */\n\n\n  ClickableComponent.prototype.handleBlur = function handleBlur(event) {\n    Events.off(_document2['default'], 'keydown', Fn.bind(this, this.handleKeyPress));\n  };\n\n  return ClickableComponent;\n}(_component2['default']);\n\n_component2['default'].registerComponent('ClickableComponent', ClickableComponent);\nexports['default'] = ClickableComponent;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/video.js/es5/clickable-component.js\n ** module id = 57\n ** module chunks = 0 1\n **/","'use strict';\n\nexports.__esModule = true;\n\nvar _component = require('../component');\n\nvar _component2 = _interopRequireDefault(_component);\n\nvar _fn = require('../utils/fn.js');\n\nvar Fn = _interopRequireWildcard(_fn);\n\nvar _window = require('global/window');\n\nvar _window2 = _interopRequireDefault(_window);\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj['default'] = obj; return newObj; } }\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /**\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * @file text-track-display.js\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                */\n\n\nvar darkGray = '#222';\nvar lightGray = '#ccc';\nvar fontMap = {\n  monospace: 'monospace',\n  sansSerif: 'sans-serif',\n  serif: 'serif',\n  monospaceSansSerif: '\"Andale Mono\", \"Lucida Console\", monospace',\n  monospaceSerif: '\"Courier New\", monospace',\n  proportionalSansSerif: 'sans-serif',\n  proportionalSerif: 'serif',\n  casual: '\"Comic Sans MS\", Impact, fantasy',\n  script: '\"Monotype Corsiva\", cursive',\n  smallcaps: '\"Andale Mono\", \"Lucida Console\", monospace, sans-serif'\n};\n\n/**\n * Construct an rgba color from a given hex color code.\n *\n * @param {number} color\n *        Hex number for color, like #f0e.\n *\n * @param {number} opacity\n *        Value for opacity, 0.0 - 1.0.\n *\n * @return {string}\n *         The rgba color that was created, like 'rgba(255, 0, 0, 0.3)'.\n *\n * @private\n */\nfunction constructColor(color, opacity) {\n  return 'rgba(' +\n  // color looks like \"#f0e\"\n  parseInt(color[1] + color[1], 16) + ',' + parseInt(color[2] + color[2], 16) + ',' + parseInt(color[3] + color[3], 16) + ',' + opacity + ')';\n}\n\n/**\n * Try to update the style of a DOM element. Some style changes will throw an error,\n * particularly in IE8. Those should be noops.\n *\n * @param {Element} el\n *        The DOM element to be styled.\n *\n * @param {string} style\n *        The CSS property on the element that should be styled.\n *\n * @param {string} rule\n *        The style rule that should be applied to the property.\n */\nfunction tryUpdateStyle(el, style, rule) {\n  try {\n    el.style[style] = rule;\n  } catch (e) {\n\n    // Satisfies linter.\n    return;\n  }\n}\n\n/**\n * The component for displaying text track cues.\n *\n * @extends Component\n */\n\nvar TextTrackDisplay = function (_Component) {\n  _inherits(TextTrackDisplay, _Component);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   *\n   * @param {Component~ReadyCallback} [ready]\n   *        The function to call when `TextTrackDisplay` is ready.\n   */\n  function TextTrackDisplay(player, options, ready) {\n    _classCallCheck(this, TextTrackDisplay);\n\n    var _this = _possibleConstructorReturn(this, _Component.call(this, player, options, ready));\n\n    player.on('loadstart', Fn.bind(_this, _this.toggleDisplay));\n    player.on('texttrackchange', Fn.bind(_this, _this.updateDisplay));\n\n    // This used to be called during player init, but was causing an error\n    // if a track should show by default and the display hadn't loaded yet.\n    // Should probably be moved to an external track loader when we support\n    // tracks that don't need a display.\n    player.ready(Fn.bind(_this, function () {\n      if (player.tech_ && player.tech_.featuresNativeTextTracks) {\n        this.hide();\n        return;\n      }\n\n      player.on('fullscreenchange', Fn.bind(this, this.updateDisplay));\n\n      var tracks = this.options_.playerOptions.tracks || [];\n\n      for (var i = 0; i < tracks.length; i++) {\n        this.player_.addRemoteTextTrack(tracks[i], true);\n      }\n\n      var modes = { captions: 1, subtitles: 1 };\n      var trackList = this.player_.textTracks();\n      var firstDesc = void 0;\n      var firstCaptions = void 0;\n\n      if (trackList) {\n        for (var _i = 0; _i < trackList.length; _i++) {\n          var track = trackList[_i];\n\n          if (track['default']) {\n            if (track.kind === 'descriptions' && !firstDesc) {\n              firstDesc = track;\n            } else if (track.kind in modes && !firstCaptions) {\n              firstCaptions = track;\n            }\n          }\n        }\n\n        // We want to show the first default track but captions and subtitles\n        // take precedence over descriptions.\n        // So, display the first default captions or subtitles track\n        // and otherwise the first default descriptions track.\n        if (firstCaptions) {\n          firstCaptions.mode = 'showing';\n        } else if (firstDesc) {\n          firstDesc.mode = 'showing';\n        }\n      }\n    }));\n    return _this;\n  }\n\n  /**\n   * Turn display of {@link TextTrack}'s from the current state into the other state.\n   * There are only two states:\n   * - 'shown'\n   * - 'hidden'\n   *\n   * @listens Player#loadstart\n   */\n\n\n  TextTrackDisplay.prototype.toggleDisplay = function toggleDisplay() {\n    if (this.player_.tech_ && this.player_.tech_.featuresNativeTextTracks) {\n      this.hide();\n    } else {\n      this.show();\n    }\n  };\n\n  /**\n   * Create the {@link Component}'s DOM element.\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n\n\n  TextTrackDisplay.prototype.createEl = function createEl() {\n    return _Component.prototype.createEl.call(this, 'div', {\n      className: 'vjs-text-track-display'\n    }, {\n      'aria-live': 'off',\n      'aria-atomic': 'true'\n    });\n  };\n\n  /**\n   * Clear all displayed {@link TextTrack}s.\n   */\n\n\n  TextTrackDisplay.prototype.clearDisplay = function clearDisplay() {\n    if (typeof _window2['default'].WebVTT === 'function') {\n      _window2['default'].WebVTT.processCues(_window2['default'], [], this.el_);\n    }\n  };\n\n  /**\n   * Update the displayed TextTrack when a either a {@link Player#texttrackchange} or\n   * a {@link Player#fullscreenchange} is fired.\n   *\n   * @listens Player#texttrackchange\n   * @listens Player#fullscreenchange\n   */\n\n\n  TextTrackDisplay.prototype.updateDisplay = function updateDisplay() {\n    var tracks = this.player_.textTracks();\n\n    this.clearDisplay();\n\n    if (!tracks) {\n      return;\n    }\n\n    // Track display prioritization model: if multiple tracks are 'showing',\n    //  display the first 'subtitles' or 'captions' track which is 'showing',\n    //  otherwise display the first 'descriptions' track which is 'showing'\n\n    var descriptionsTrack = null;\n    var captionsSubtitlesTrack = null;\n\n    var i = tracks.length;\n\n    while (i--) {\n      var track = tracks[i];\n\n      if (track.mode === 'showing') {\n        if (track.kind === 'descriptions') {\n          descriptionsTrack = track;\n        } else {\n          captionsSubtitlesTrack = track;\n        }\n      }\n    }\n\n    if (captionsSubtitlesTrack) {\n      if (this.getAttribute('aria-live') !== 'off') {\n        this.setAttribute('aria-live', 'off');\n      }\n      this.updateForTrack(captionsSubtitlesTrack);\n    } else if (descriptionsTrack) {\n      if (this.getAttribute('aria-live') !== 'assertive') {\n        this.setAttribute('aria-live', 'assertive');\n      }\n      this.updateForTrack(descriptionsTrack);\n    }\n  };\n\n  /**\n   * Add an {@link Texttrack} to to the {@link Tech}s {@link TextTrackList}.\n   *\n   * @param {TextTrack} track\n   *        Text track object to be added to the list.\n   */\n\n\n  TextTrackDisplay.prototype.updateForTrack = function updateForTrack(track) {\n    if (typeof _window2['default'].WebVTT !== 'function' || !track.activeCues) {\n      return;\n    }\n\n    var overrides = this.player_.textTrackSettings.getValues();\n    var cues = [];\n\n    for (var _i2 = 0; _i2 < track.activeCues.length; _i2++) {\n      cues.push(track.activeCues[_i2]);\n    }\n\n    _window2['default'].WebVTT.processCues(_window2['default'], cues, this.el_);\n\n    var i = cues.length;\n\n    while (i--) {\n      var cue = cues[i];\n\n      if (!cue) {\n        continue;\n      }\n\n      var cueDiv = cue.displayState;\n\n      if (overrides.color) {\n        cueDiv.firstChild.style.color = overrides.color;\n      }\n      if (overrides.textOpacity) {\n        tryUpdateStyle(cueDiv.firstChild, 'color', constructColor(overrides.color || '#fff', overrides.textOpacity));\n      }\n      if (overrides.backgroundColor) {\n        cueDiv.firstChild.style.backgroundColor = overrides.backgroundColor;\n      }\n      if (overrides.backgroundOpacity) {\n        tryUpdateStyle(cueDiv.firstChild, 'backgroundColor', constructColor(overrides.backgroundColor || '#000', overrides.backgroundOpacity));\n      }\n      if (overrides.windowColor) {\n        if (overrides.windowOpacity) {\n          tryUpdateStyle(cueDiv, 'backgroundColor', constructColor(overrides.windowColor, overrides.windowOpacity));\n        } else {\n          cueDiv.style.backgroundColor = overrides.windowColor;\n        }\n      }\n      if (overrides.edgeStyle) {\n        if (overrides.edgeStyle === 'dropshadow') {\n          cueDiv.firstChild.style.textShadow = '2px 2px 3px ' + darkGray + ', 2px 2px 4px ' + darkGray + ', 2px 2px 5px ' + darkGray;\n        } else if (overrides.edgeStyle === 'raised') {\n          cueDiv.firstChild.style.textShadow = '1px 1px ' + darkGray + ', 2px 2px ' + darkGray + ', 3px 3px ' + darkGray;\n        } else if (overrides.edgeStyle === 'depressed') {\n          cueDiv.firstChild.style.textShadow = '1px 1px ' + lightGray + ', 0 1px ' + lightGray + ', -1px -1px ' + darkGray + ', 0 -1px ' + darkGray;\n        } else if (overrides.edgeStyle === 'uniform') {\n          cueDiv.firstChild.style.textShadow = '0 0 4px ' + darkGray + ', 0 0 4px ' + darkGray + ', 0 0 4px ' + darkGray + ', 0 0 4px ' + darkGray;\n        }\n      }\n      if (overrides.fontPercent && overrides.fontPercent !== 1) {\n        var fontSize = _window2['default'].parseFloat(cueDiv.style.fontSize);\n\n        cueDiv.style.fontSize = fontSize * overrides.fontPercent + 'px';\n        cueDiv.style.height = 'auto';\n        cueDiv.style.top = 'auto';\n        cueDiv.style.bottom = '2px';\n      }\n      if (overrides.fontFamily && overrides.fontFamily !== 'default') {\n        if (overrides.fontFamily === 'small-caps') {\n          cueDiv.firstChild.style.fontVariant = 'small-caps';\n        } else {\n          cueDiv.firstChild.style.fontFamily = fontMap[overrides.fontFamily];\n        }\n      }\n    }\n  };\n\n  return TextTrackDisplay;\n}(_component2['default']);\n\n_component2['default'].registerComponent('TextTrackDisplay', TextTrackDisplay);\nexports['default'] = TextTrackDisplay;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/video.js/es5/tracks/text-track-display.js\n ** module id = 58\n ** module chunks = 0 1\n **/","'use strict';\n\nexports.__esModule = true;\n\nvar _component = require('./component');\n\nvar _component2 = _interopRequireDefault(_component);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /**\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * @file loading-spinner.js\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                */\n\n\n/**\n * A loading spinner for use during waiting/loading events.\n *\n * @extends Component\n */\nvar LoadingSpinner = function (_Component) {\n  _inherits(LoadingSpinner, _Component);\n\n  function LoadingSpinner() {\n    _classCallCheck(this, LoadingSpinner);\n\n    return _possibleConstructorReturn(this, _Component.apply(this, arguments));\n  }\n\n  /**\n   * Create the `LoadingSpinner`s DOM element.\n   *\n   * @return {Element}\n   *         The dom element that gets created.\n   */\n  LoadingSpinner.prototype.createEl = function createEl() {\n    return _Component.prototype.createEl.call(this, 'div', {\n      className: 'vjs-loading-spinner',\n      dir: 'ltr'\n    });\n  };\n\n  return LoadingSpinner;\n}(_component2['default']);\n\n_component2['default'].registerComponent('LoadingSpinner', LoadingSpinner);\nexports['default'] = LoadingSpinner;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/video.js/es5/loading-spinner.js\n ** module id = 59\n ** module chunks = 0 1\n **/","'use strict';\n\nexports.__esModule = true;\n\nvar _button = require('./button.js');\n\nvar _button2 = _interopRequireDefault(_button);\n\nvar _component = require('./component.js');\n\nvar _component2 = _interopRequireDefault(_component);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /**\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * @file big-play-button.js\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                */\n\n\n/**\n * The initial play button that shows before the video has played. The hiding of the\n * `BigPlayButton` get done via CSS and `Player` states.\n *\n * @extends Button\n */\nvar BigPlayButton = function (_Button) {\n  _inherits(BigPlayButton, _Button);\n\n  function BigPlayButton() {\n    _classCallCheck(this, BigPlayButton);\n\n    return _possibleConstructorReturn(this, _Button.apply(this, arguments));\n  }\n\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object. Always returns 'vjs-big-play-button'.\n   */\n  BigPlayButton.prototype.buildCSSClass = function buildCSSClass() {\n    return 'vjs-big-play-button';\n  };\n\n  /**\n   * This gets called when a `BigPlayButton` \"clicked\". See {@link ClickableComponent}\n   * for more detailed information on what a click can be.\n   *\n   * @param {EventTarget~Event} event\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   */\n\n\n  BigPlayButton.prototype.handleClick = function handleClick(event) {\n    this.player_.play();\n  };\n\n  return BigPlayButton;\n}(_button2['default']);\n\n/**\n * The text that should display over the `BigPlayButton`s controls. Added to for localization.\n *\n * @type {string}\n * @private\n */\n\n\nBigPlayButton.prototype.controlText_ = 'Play Video';\n\n_component2['default'].registerComponent('BigPlayButton', BigPlayButton);\nexports['default'] = BigPlayButton;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/video.js/es5/big-play-button.js\n ** module id = 60\n ** module chunks = 0 1\n **/","'use strict';\n\nexports.__esModule = true;\n\nvar _clickableComponent = require('./clickable-component.js');\n\nvar _clickableComponent2 = _interopRequireDefault(_clickableComponent);\n\nvar _component = require('./component');\n\nvar _component2 = _interopRequireDefault(_component);\n\nvar _log = require('./utils/log.js');\n\nvar _log2 = _interopRequireDefault(_log);\n\nvar _obj = require('./utils/obj');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /**\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * @file button.js\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                */\n\n\n/**\n * Base class for all buttons.\n *\n * @extends ClickableComponent\n */\nvar Button = function (_ClickableComponent) {\n  _inherits(Button, _ClickableComponent);\n\n  function Button() {\n    _classCallCheck(this, Button);\n\n    return _possibleConstructorReturn(this, _ClickableComponent.apply(this, arguments));\n  }\n\n  /**\n   * Create the `Button`s DOM element.\n   *\n   * @param {string} [tag=button]\n   *        Element's node type. e.g. 'button'\n   *\n   * @param {Object} [props={}]\n   *        An object of properties that should be set on the element.\n   *\n   * @param {Object} [attributes={}]\n   *        An object of attributes that should be set on the element.\n   *\n   * @return {Element}\n   *         The element that gets created.\n   */\n  Button.prototype.createEl = function createEl() {\n    var tag = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'button';\n    var props = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    var attributes = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n\n    props = (0, _obj.assign)({\n      className: this.buildCSSClass()\n    }, props);\n\n    if (tag !== 'button') {\n      _log2['default'].warn('Creating a Button with an HTML element of ' + tag + ' is deprecated; use ClickableComponent instead.');\n\n      // Add properties for clickable element which is not a native HTML button\n      props = (0, _obj.assign)({\n        tabIndex: 0\n      }, props);\n\n      // Add ARIA attributes for clickable element which is not a native HTML button\n      attributes = (0, _obj.assign)({\n        role: 'button'\n      }, attributes);\n    }\n\n    // Add attributes for button element\n    attributes = (0, _obj.assign)({\n\n      // Necessary since the default button type is \"submit\"\n      'type': 'button',\n\n      // let the screen reader user know that the text of the button may change\n      'aria-live': 'polite'\n    }, attributes);\n\n    var el = _component2['default'].prototype.createEl.call(this, tag, props, attributes);\n\n    this.createControlTextEl(el);\n\n    return el;\n  };\n\n  /**\n   * Add a child `Component` inside of this `Button`.\n   *\n   * @param {string|Component} child\n   *        The name or instance of a child to add.\n   *\n   * @param {Object} [options={}]\n   *        The key/value store of options that will get passed to children of\n   *        the child.\n   *\n   * @return {Component}\n   *         The `Component` that gets added as a child. When using a string the\n   *         `Component` will get created by this process.\n   *\n   * @deprecated since version 5\n   */\n\n\n  Button.prototype.addChild = function addChild(child) {\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n    var className = this.constructor.name;\n\n    _log2['default'].warn('Adding an actionable (user controllable) child to a Button (' + className + ') is not supported; use a ClickableComponent instead.');\n\n    // Avoid the error message generated by ClickableComponent's addChild method\n    return _component2['default'].prototype.addChild.call(this, child, options);\n  };\n\n  /**\n   * Enable the `Button` element so that it can be activated or clicked. Use this with\n   * {@link Button#disable}.\n   */\n\n\n  Button.prototype.enable = function enable() {\n    _ClickableComponent.prototype.enable.call(this);\n    this.el_.removeAttribute('disabled');\n  };\n\n  /**\n   * Enable the `Button` element so that it cannot be activated or clicked. Use this with\n   * {@link Button#enable}.\n   */\n\n\n  Button.prototype.disable = function disable() {\n    _ClickableComponent.prototype.disable.call(this);\n    this.el_.setAttribute('disabled', 'disabled');\n  };\n\n  /**\n   * This gets called when a `Button` has focus and `keydown` is triggered via a key\n   * press.\n   *\n   * @param {EventTarget~Event} event\n   *        The event that caused this function to get called.\n   *\n   * @listens keydown\n   */\n\n\n  Button.prototype.handleKeyPress = function handleKeyPress(event) {\n\n    // Ignore Space (32) or Enter (13) key operation, which is handled by the browser for a button.\n    if (event.which === 32 || event.which === 13) {\n      return;\n    }\n\n    // Pass keypress handling up for unsupported keys\n    _ClickableComponent.prototype.handleKeyPress.call(this, event);\n  };\n\n  return Button;\n}(_clickableComponent2['default']);\n\n_component2['default'].registerComponent('Button', Button);\nexports['default'] = Button;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/video.js/es5/button.js\n ** module id = 61\n ** module chunks = 0 1\n **/","'use strict';\n\nexports.__esModule = true;\n\nvar _button = require('./button');\n\nvar _button2 = _interopRequireDefault(_button);\n\nvar _component = require('./component');\n\nvar _component2 = _interopRequireDefault(_component);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /**\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * @file close-button.js\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                */\n\n\n/**\n * The `CloseButton` is a `{@link Button}` that fires a `close` event when\n * it gets clicked.\n *\n * @extends Button\n */\nvar CloseButton = function (_Button) {\n  _inherits(CloseButton, _Button);\n\n  /**\n   * Creates an instance of the this class.\n   *\n   * @param  {Player} player\n   *         The `Player` that this class should be attached to.\n   *\n   * @param  {Object} [options]\n   *         The key/value store of player options.\n   */\n  function CloseButton(player, options) {\n    _classCallCheck(this, CloseButton);\n\n    var _this = _possibleConstructorReturn(this, _Button.call(this, player, options));\n\n    _this.controlText(options && options.controlText || _this.localize('Close'));\n    return _this;\n  }\n\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n\n\n  CloseButton.prototype.buildCSSClass = function buildCSSClass() {\n    return 'vjs-close-button ' + _Button.prototype.buildCSSClass.call(this);\n  };\n\n  /**\n   * This gets called when a `CloseButton` gets clicked. See\n   * {@link ClickableComponent#handleClick} for more information on when this will be\n   * triggered\n   *\n   * @param {EventTarget~Event} event\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   * @fires CloseButton#close\n   */\n\n\n  CloseButton.prototype.handleClick = function handleClick(event) {\n\n    /**\n     * Triggered when the a `CloseButton` is clicked.\n     *\n     * @event CloseButton#close\n     * @type {EventTarget~Event}\n     *\n     * @property {boolean} [bubbles=false]\n     *           set to false so that the close event does not\n     *           bubble up to parents if there is no listener\n     */\n    this.trigger({ type: 'close', bubbles: false });\n  };\n\n  return CloseButton;\n}(_button2['default']);\n\n_component2['default'].registerComponent('CloseButton', CloseButton);\nexports['default'] = CloseButton;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/video.js/es5/close-button.js\n ** module id = 62\n ** module chunks = 0 1\n **/","'use strict';\n\nexports.__esModule = true;\n\nvar _component = require('../component.js');\n\nvar _component2 = _interopRequireDefault(_component);\n\nrequire('./play-toggle.js');\n\nrequire('./time-controls/current-time-display.js');\n\nrequire('./time-controls/duration-display.js');\n\nrequire('./time-controls/time-divider.js');\n\nrequire('./time-controls/remaining-time-display.js');\n\nrequire('./live-display.js');\n\nrequire('./progress-control/progress-control.js');\n\nrequire('./fullscreen-toggle.js');\n\nrequire('./volume-control/volume-control.js');\n\nrequire('./volume-menu-button.js');\n\nrequire('./mute-toggle.js');\n\nrequire('./text-track-controls/chapters-button.js');\n\nrequire('./text-track-controls/descriptions-button.js');\n\nrequire('./text-track-controls/subtitles-button.js');\n\nrequire('./text-track-controls/captions-button.js');\n\nrequire('./audio-track-controls/audio-track-button.js');\n\nrequire('./playback-rate-menu/playback-rate-menu-button.js');\n\nrequire('./spacer-controls/custom-control-spacer.js');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /**\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * @file control-bar.js\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                */\n\n\n// Required children\n\n\n/**\n * Container of main controls.\n *\n * @extends Component\n */\nvar ControlBar = function (_Component) {\n  _inherits(ControlBar, _Component);\n\n  function ControlBar() {\n    _classCallCheck(this, ControlBar);\n\n    return _possibleConstructorReturn(this, _Component.apply(this, arguments));\n  }\n\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n  ControlBar.prototype.createEl = function createEl() {\n    return _Component.prototype.createEl.call(this, 'div', {\n      className: 'vjs-control-bar',\n      dir: 'ltr'\n    }, {\n      // The control bar is a group, so it can contain menuitems\n      role: 'group'\n    });\n  };\n\n  return ControlBar;\n}(_component2['default']);\n\n/**\n * Default options for `ControlBar`\n *\n * @type {Object}\n * @private\n */\n\n\nControlBar.prototype.options_ = {\n  children: ['playToggle', 'volumeMenuButton', 'currentTimeDisplay', 'timeDivider', 'durationDisplay', 'progressControl', 'liveDisplay', 'remainingTimeDisplay', 'customControlSpacer', 'playbackRateMenuButton', 'chaptersButton', 'descriptionsButton', 'subtitlesButton', 'captionsButton', 'audioTrackButton', 'fullscreenToggle']\n};\n\n_component2['default'].registerComponent('ControlBar', ControlBar);\nexports['default'] = ControlBar;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/video.js/es5/control-bar/control-bar.js\n ** module id = 63\n ** module chunks = 0 1\n **/","'use strict';\n\nexports.__esModule = true;\n\nvar _button = require('../button.js');\n\nvar _button2 = _interopRequireDefault(_button);\n\nvar _component = require('../component.js');\n\nvar _component2 = _interopRequireDefault(_component);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /**\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * @file play-toggle.js\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                */\n\n\n/**\n * Button to toggle between play and pause.\n *\n * @extends Button\n */\nvar PlayToggle = function (_Button) {\n  _inherits(PlayToggle, _Button);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function PlayToggle(player, options) {\n    _classCallCheck(this, PlayToggle);\n\n    var _this = _possibleConstructorReturn(this, _Button.call(this, player, options));\n\n    _this.on(player, 'play', _this.handlePlay);\n    _this.on(player, 'pause', _this.handlePause);\n    return _this;\n  }\n\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n\n\n  PlayToggle.prototype.buildCSSClass = function buildCSSClass() {\n    return 'vjs-play-control ' + _Button.prototype.buildCSSClass.call(this);\n  };\n\n  /**\n   * This gets called when an `PlayToggle` is \"clicked\". See\n   * {@link ClickableComponent} for more detailed information on what a click can be.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   */\n\n\n  PlayToggle.prototype.handleClick = function handleClick(event) {\n    if (this.player_.paused()) {\n      this.player_.play();\n    } else {\n      this.player_.pause();\n    }\n  };\n\n  /**\n   * Add the vjs-playing class to the element so it can change appearance.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The event that caused this function to run.\n   *\n   * @listens Player#play\n   */\n\n\n  PlayToggle.prototype.handlePlay = function handlePlay(event) {\n    this.removeClass('vjs-paused');\n    this.addClass('vjs-playing');\n    // change the button text to \"Pause\"\n    this.controlText('Pause');\n  };\n\n  /**\n   * Add the vjs-paused class to the element so it can change appearance.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The event that caused this function to run.\n   *\n   * @listens Player#pause\n   */\n\n\n  PlayToggle.prototype.handlePause = function handlePause(event) {\n    this.removeClass('vjs-playing');\n    this.addClass('vjs-paused');\n    // change the button text to \"Play\"\n    this.controlText('Play');\n  };\n\n  return PlayToggle;\n}(_button2['default']);\n\n/**\n * The text that should display over the `PlayToggle`s controls. Added for localization.\n *\n * @type {string}\n * @private\n */\n\n\nPlayToggle.prototype.controlText_ = 'Play';\n\n_component2['default'].registerComponent('PlayToggle', PlayToggle);\nexports['default'] = PlayToggle;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/video.js/es5/control-bar/play-toggle.js\n ** module id = 64\n ** module chunks = 0 1\n **/","'use strict';\n\nexports.__esModule = true;\n\nvar _component = require('../../component.js');\n\nvar _component2 = _interopRequireDefault(_component);\n\nvar _dom = require('../../utils/dom.js');\n\nvar Dom = _interopRequireWildcard(_dom);\n\nvar _formatTime = require('../../utils/format-time.js');\n\nvar _formatTime2 = _interopRequireDefault(_formatTime);\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj['default'] = obj; return newObj; } }\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /**\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * @file current-time-display.js\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                */\n\n\n/**\n * Displays the current time\n *\n * @extends Component\n */\nvar CurrentTimeDisplay = function (_Component) {\n  _inherits(CurrentTimeDisplay, _Component);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function CurrentTimeDisplay(player, options) {\n    _classCallCheck(this, CurrentTimeDisplay);\n\n    var _this = _possibleConstructorReturn(this, _Component.call(this, player, options));\n\n    _this.on(player, 'timeupdate', _this.updateContent);\n    return _this;\n  }\n\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n\n\n  CurrentTimeDisplay.prototype.createEl = function createEl() {\n    var el = _Component.prototype.createEl.call(this, 'div', {\n      className: 'vjs-current-time vjs-time-control vjs-control'\n    });\n\n    this.contentEl_ = Dom.createEl('div', {\n      className: 'vjs-current-time-display',\n      // label the current time for screen reader users\n      innerHTML: '<span class=\"vjs-control-text\">Current Time </span>' + '0:00'\n    }, {\n      // tell screen readers not to automatically read the time as it changes\n      'aria-live': 'off'\n    });\n\n    el.appendChild(this.contentEl_);\n    return el;\n  };\n\n  /**\n   * Update current time display\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `timeupdate` event that caused this function to run.\n   *\n   * @listens Player#timeupdate\n   */\n\n\n  CurrentTimeDisplay.prototype.updateContent = function updateContent(event) {\n    // Allows for smooth scrubbing, when player can't keep up.\n    var time = this.player_.scrubbing() ? this.player_.getCache().currentTime : this.player_.currentTime();\n    var localizedText = this.localize('Current Time');\n    var formattedTime = (0, _formatTime2['default'])(time, this.player_.duration());\n\n    if (formattedTime !== this.formattedTime_) {\n      this.formattedTime_ = formattedTime;\n      this.contentEl_.innerHTML = '<span class=\"vjs-control-text\">' + localizedText + '</span> ' + formattedTime;\n    }\n  };\n\n  return CurrentTimeDisplay;\n}(_component2['default']);\n\n_component2['default'].registerComponent('CurrentTimeDisplay', CurrentTimeDisplay);\nexports['default'] = CurrentTimeDisplay;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/video.js/es5/control-bar/time-controls/current-time-display.js\n ** module id = 65\n ** module chunks = 0 1\n **/","'use strict';\n\nexports.__esModule = true;\n/**\n * @file format-time.js\n * @module Format-time\n */\n\n/**\n * Format seconds as a time string, H:MM:SS or M:SS. Supplying a guide (in seconds)\n * will force a number of leading zeros to cover the length of the guide.\n *\n * @param {number} seconds\n *        Number of seconds to be turned into a string\n *\n * @param {number} guide\n *        Number (in seconds) to model the string after\n *\n * @return {string}\n *         Time formatted as H:MM:SS or M:SS\n */\nfunction formatTime(seconds) {\n  var guide = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : seconds;\n\n  seconds = seconds < 0 ? 0 : seconds;\n  var s = Math.floor(seconds % 60);\n  var m = Math.floor(seconds / 60 % 60);\n  var h = Math.floor(seconds / 3600);\n  var gm = Math.floor(guide / 60 % 60);\n  var gh = Math.floor(guide / 3600);\n\n  // handle invalid times\n  if (isNaN(seconds) || seconds === Infinity) {\n    // '-' is false for all relational operators (e.g. <, >=) so this setting\n    // will add the minimum number of fields specified by the guide\n    h = m = s = '-';\n  }\n\n  // Check if we need to show hours\n  h = h > 0 || gh > 0 ? h + ':' : '';\n\n  // If hours are showing, we may need to add a leading zero.\n  // Always show at least one digit of minutes.\n  m = ((h || gm >= 10) && m < 10 ? '0' + m : m) + ':';\n\n  // Check if leading zero is need for seconds\n  s = s < 10 ? '0' + s : s;\n\n  return h + m + s;\n}\n\nexports['default'] = formatTime;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/video.js/es5/utils/format-time.js\n ** module id = 66\n ** module chunks = 0 1\n **/","'use strict';\n\nexports.__esModule = true;\n\nvar _component = require('../../component.js');\n\nvar _component2 = _interopRequireDefault(_component);\n\nvar _dom = require('../../utils/dom.js');\n\nvar Dom = _interopRequireWildcard(_dom);\n\nvar _formatTime = require('../../utils/format-time.js');\n\nvar _formatTime2 = _interopRequireDefault(_formatTime);\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj['default'] = obj; return newObj; } }\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /**\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * @file duration-display.js\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                */\n\n\n/**\n * Displays the duration\n *\n * @extends Component\n */\nvar DurationDisplay = function (_Component) {\n  _inherits(DurationDisplay, _Component);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function DurationDisplay(player, options) {\n    _classCallCheck(this, DurationDisplay);\n\n    var _this = _possibleConstructorReturn(this, _Component.call(this, player, options));\n\n    _this.on(player, 'durationchange', _this.updateContent);\n\n    // Also listen for timeupdate and loadedmetadata because removing those\n    // listeners could have broken dependent applications/libraries. These\n    // can likely be removed for 6.0.\n    _this.on(player, 'timeupdate', _this.updateContent);\n    _this.on(player, 'loadedmetadata', _this.updateContent);\n    return _this;\n  }\n\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n\n\n  DurationDisplay.prototype.createEl = function createEl() {\n    var el = _Component.prototype.createEl.call(this, 'div', {\n      className: 'vjs-duration vjs-time-control vjs-control'\n    });\n\n    this.contentEl_ = Dom.createEl('div', {\n      className: 'vjs-duration-display',\n      // label the duration time for screen reader users\n      innerHTML: '<span class=\"vjs-control-text\">' + this.localize('Duration Time') + '</span> 0:00'\n    }, {\n      // tell screen readers not to automatically read the time as it changes\n      'aria-live': 'off'\n    });\n\n    el.appendChild(this.contentEl_);\n    return el;\n  };\n\n  /**\n   * Update duration time display.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `durationchange`, `timeupdate`, or `loadedmetadata` event that caused\n   *        this function to be called.\n   *\n   * @listens Player#durationchange\n   * @listens Player#timeupdate\n   * @listens Player#loadedmetadata\n   */\n\n\n  DurationDisplay.prototype.updateContent = function updateContent(event) {\n    var duration = this.player_.duration();\n\n    if (duration && this.duration_ !== duration) {\n      this.duration_ = duration;\n      var localizedText = this.localize('Duration Time');\n      var formattedTime = (0, _formatTime2['default'])(duration);\n\n      // label the duration time for screen reader users\n      this.contentEl_.innerHTML = '<span class=\"vjs-control-text\">' + localizedText + '</span> ' + formattedTime;\n    }\n  };\n\n  return DurationDisplay;\n}(_component2['default']);\n\n_component2['default'].registerComponent('DurationDisplay', DurationDisplay);\nexports['default'] = DurationDisplay;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/video.js/es5/control-bar/time-controls/duration-display.js\n ** module id = 67\n ** module chunks = 0 1\n **/","'use strict';\n\nexports.__esModule = true;\n\nvar _component = require('../../component.js');\n\nvar _component2 = _interopRequireDefault(_component);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /**\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * @file time-divider.js\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                */\n\n\n/**\n * The separator between the current time and duration.\n * Can be hidden if it's not needed in the design.\n *\n * @extends Component\n */\nvar TimeDivider = function (_Component) {\n  _inherits(TimeDivider, _Component);\n\n  function TimeDivider() {\n    _classCallCheck(this, TimeDivider);\n\n    return _possibleConstructorReturn(this, _Component.apply(this, arguments));\n  }\n\n  /**\n   * Create the component's DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n  TimeDivider.prototype.createEl = function createEl() {\n    return _Component.prototype.createEl.call(this, 'div', {\n      className: 'vjs-time-control vjs-time-divider',\n      innerHTML: '<div><span>/</span></div>'\n    });\n  };\n\n  return TimeDivider;\n}(_component2['default']);\n\n_component2['default'].registerComponent('TimeDivider', TimeDivider);\nexports['default'] = TimeDivider;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/video.js/es5/control-bar/time-controls/time-divider.js\n ** module id = 68\n ** module chunks = 0 1\n **/","'use strict';\n\nexports.__esModule = true;\n\nvar _component = require('../../component.js');\n\nvar _component2 = _interopRequireDefault(_component);\n\nvar _dom = require('../../utils/dom.js');\n\nvar Dom = _interopRequireWildcard(_dom);\n\nvar _formatTime = require('../../utils/format-time.js');\n\nvar _formatTime2 = _interopRequireDefault(_formatTime);\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj['default'] = obj; return newObj; } }\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /**\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * @file remaining-time-display.js\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                */\n\n\n/**\n * Displays the time left in the video\n *\n * @extends Component\n */\nvar RemainingTimeDisplay = function (_Component) {\n  _inherits(RemainingTimeDisplay, _Component);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function RemainingTimeDisplay(player, options) {\n    _classCallCheck(this, RemainingTimeDisplay);\n\n    var _this = _possibleConstructorReturn(this, _Component.call(this, player, options));\n\n    _this.on(player, 'timeupdate', _this.updateContent);\n    _this.on(player, 'durationchange', _this.updateContent);\n    return _this;\n  }\n\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n\n\n  RemainingTimeDisplay.prototype.createEl = function createEl() {\n    var el = _Component.prototype.createEl.call(this, 'div', {\n      className: 'vjs-remaining-time vjs-time-control vjs-control'\n    });\n\n    this.contentEl_ = Dom.createEl('div', {\n      className: 'vjs-remaining-time-display',\n      // label the remaining time for screen reader users\n      innerHTML: '<span class=\"vjs-control-text\">' + this.localize('Remaining Time') + '</span> -0:00'\n    }, {\n      // tell screen readers not to automatically read the time as it changes\n      'aria-live': 'off'\n    });\n\n    el.appendChild(this.contentEl_);\n    return el;\n  };\n\n  /**\n   * Update remaining time display.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `timeupdate` or `durationchange` event that caused this to run.\n   *\n   * @listens Player#timeupdate\n   * @listens Player#durationchange\n   */\n\n\n  RemainingTimeDisplay.prototype.updateContent = function updateContent(event) {\n    if (this.player_.duration()) {\n      var localizedText = this.localize('Remaining Time');\n      var formattedTime = (0, _formatTime2['default'])(this.player_.remainingTime());\n\n      if (formattedTime !== this.formattedTime_) {\n        this.formattedTime_ = formattedTime;\n        this.contentEl_.innerHTML = '<span class=\"vjs-control-text\">' + localizedText + '</span> -' + formattedTime;\n      }\n    }\n\n    // Allows for smooth scrubbing, when player can't keep up.\n    // var time = (this.player_.scrubbing()) ? this.player_.getCache().currentTime : this.player_.currentTime();\n    // this.contentEl_.innerHTML = vjs.formatTime(time, this.player_.duration());\n  };\n\n  return RemainingTimeDisplay;\n}(_component2['default']);\n\n_component2['default'].registerComponent('RemainingTimeDisplay', RemainingTimeDisplay);\nexports['default'] = RemainingTimeDisplay;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/video.js/es5/control-bar/time-controls/remaining-time-display.js\n ** module id = 69\n ** module chunks = 0 1\n **/","'use strict';\n\nexports.__esModule = true;\n\nvar _component = require('../component');\n\nvar _component2 = _interopRequireDefault(_component);\n\nvar _dom = require('../utils/dom.js');\n\nvar Dom = _interopRequireWildcard(_dom);\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj['default'] = obj; return newObj; } }\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /**\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * @file live-display.js\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                */\n\n\n// TODO - Future make it click to snap to live\n\n/**\n * Displays the live indicator when duration is Infinity.\n *\n * @extends Component\n */\nvar LiveDisplay = function (_Component) {\n  _inherits(LiveDisplay, _Component);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function LiveDisplay(player, options) {\n    _classCallCheck(this, LiveDisplay);\n\n    var _this = _possibleConstructorReturn(this, _Component.call(this, player, options));\n\n    _this.updateShowing();\n    _this.on(_this.player(), 'durationchange', _this.updateShowing);\n    return _this;\n  }\n\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n\n\n  LiveDisplay.prototype.createEl = function createEl() {\n    var el = _Component.prototype.createEl.call(this, 'div', {\n      className: 'vjs-live-control vjs-control'\n    });\n\n    this.contentEl_ = Dom.createEl('div', {\n      className: 'vjs-live-display',\n      innerHTML: '<span class=\"vjs-control-text\">' + this.localize('Stream Type') + '</span>' + this.localize('LIVE')\n    }, {\n      'aria-live': 'off'\n    });\n\n    el.appendChild(this.contentEl_);\n    return el;\n  };\n\n  /**\n   * Check the duration to see if the LiveDisplay should be showing or not. Then show/hide\n   * it accordingly\n   *\n   * @param {EventTarget~Event} [event]\n   *        The {@link Player#durationchange} event that caused this function to run.\n   *\n   * @listens Player#durationchange\n   */\n\n\n  LiveDisplay.prototype.updateShowing = function updateShowing(event) {\n    if (this.player().duration() === Infinity) {\n      this.show();\n    } else {\n      this.hide();\n    }\n  };\n\n  return LiveDisplay;\n}(_component2['default']);\n\n_component2['default'].registerComponent('LiveDisplay', LiveDisplay);\nexports['default'] = LiveDisplay;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/video.js/es5/control-bar/live-display.js\n ** module id = 70\n ** module chunks = 0 1\n **/","'use strict';\n\nexports.__esModule = true;\n\nvar _component = require('../../component.js');\n\nvar _component2 = _interopRequireDefault(_component);\n\nrequire('./seek-bar.js');\n\nrequire('./mouse-time-display.js');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /**\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * @file progress-control.js\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                */\n\n\n/**\n * The Progress Control component contains the seek bar, load progress,\n * and play progress.\n *\n * @extends Component\n */\nvar ProgressControl = function (_Component) {\n  _inherits(ProgressControl, _Component);\n\n  function ProgressControl() {\n    _classCallCheck(this, ProgressControl);\n\n    return _possibleConstructorReturn(this, _Component.apply(this, arguments));\n  }\n\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n  ProgressControl.prototype.createEl = function createEl() {\n    return _Component.prototype.createEl.call(this, 'div', {\n      className: 'vjs-progress-control vjs-control'\n    });\n  };\n\n  return ProgressControl;\n}(_component2['default']);\n\n/**\n * Default options for `ProgressControl`\n *\n * @type {Object}\n * @private\n */\n\n\nProgressControl.prototype.options_ = {\n  children: ['seekBar']\n};\n\n_component2['default'].registerComponent('ProgressControl', ProgressControl);\nexports['default'] = ProgressControl;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/video.js/es5/control-bar/progress-control/progress-control.js\n ** module id = 71\n ** module chunks = 0 1\n **/","'use strict';\n\nexports.__esModule = true;\n\nvar _slider = require('../../slider/slider.js');\n\nvar _slider2 = _interopRequireDefault(_slider);\n\nvar _component = require('../../component.js');\n\nvar _component2 = _interopRequireDefault(_component);\n\nvar _fn = require('../../utils/fn.js');\n\nvar Fn = _interopRequireWildcard(_fn);\n\nvar _formatTime = require('../../utils/format-time.js');\n\nvar _formatTime2 = _interopRequireDefault(_formatTime);\n\nvar _computedStyle = require('../../utils/computed-style.js');\n\nvar _computedStyle2 = _interopRequireDefault(_computedStyle);\n\nrequire('./load-progress-bar.js');\n\nrequire('./play-progress-bar.js');\n\nrequire('./tooltip-progress-bar.js');\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj['default'] = obj; return newObj; } }\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /**\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * @file seek-bar.js\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                */\n\n\n/**\n * Seek Bar and holder for the progress bars\n *\n * @extends Slider\n */\nvar SeekBar = function (_Slider) {\n  _inherits(SeekBar, _Slider);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function SeekBar(player, options) {\n    _classCallCheck(this, SeekBar);\n\n    var _this = _possibleConstructorReturn(this, _Slider.call(this, player, options));\n\n    _this.on(player, 'timeupdate', _this.updateProgress);\n    _this.on(player, 'ended', _this.updateProgress);\n    player.ready(Fn.bind(_this, _this.updateProgress));\n\n    if (options.playerOptions && options.playerOptions.controlBar && options.playerOptions.controlBar.progressControl && options.playerOptions.controlBar.progressControl.keepTooltipsInside) {\n      _this.keepTooltipsInside = options.playerOptions.controlBar.progressControl.keepTooltipsInside;\n    }\n\n    if (_this.keepTooltipsInside) {\n      _this.tooltipProgressBar = _this.addChild('TooltipProgressBar');\n    }\n    return _this;\n  }\n\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n\n\n  SeekBar.prototype.createEl = function createEl() {\n    return _Slider.prototype.createEl.call(this, 'div', {\n      className: 'vjs-progress-holder'\n    }, {\n      'aria-label': 'progress bar'\n    });\n  };\n\n  /**\n   * Update the seek bars tooltip and width.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `timeupdate` or `ended` event that caused this to run.\n   *\n   * @listens Player#timeupdate\n   * @listens Player#ended\n   */\n\n\n  SeekBar.prototype.updateProgress = function updateProgress(event) {\n    this.updateAriaAttributes(this.el_);\n\n    if (this.keepTooltipsInside) {\n      this.updateAriaAttributes(this.tooltipProgressBar.el_);\n      this.tooltipProgressBar.el_.style.width = this.bar.el_.style.width;\n\n      var playerWidth = parseFloat((0, _computedStyle2['default'])(this.player().el(), 'width'));\n      var tooltipWidth = parseFloat((0, _computedStyle2['default'])(this.tooltipProgressBar.tooltip, 'width'));\n      var tooltipStyle = this.tooltipProgressBar.el().style;\n\n      tooltipStyle.maxWidth = Math.floor(playerWidth - tooltipWidth / 2) + 'px';\n      tooltipStyle.minWidth = Math.ceil(tooltipWidth / 2) + 'px';\n      tooltipStyle.right = '-' + tooltipWidth / 2 + 'px';\n    }\n  };\n\n  /**\n   * Update ARIA accessibility attributes\n   *\n   * @param {Element} el\n   *        The element to update with aria accessibility attributes.\n   */\n\n\n  SeekBar.prototype.updateAriaAttributes = function updateAriaAttributes(el) {\n    // Allows for smooth scrubbing, when player can't keep up.\n    var time = this.player_.scrubbing() ? this.player_.getCache().currentTime : this.player_.currentTime();\n\n    // machine readable value of progress bar (percentage complete)\n    el.setAttribute('aria-valuenow', (this.getPercent() * 100).toFixed(2));\n    // human readable value of progress bar (time complete)\n    el.setAttribute('aria-valuetext', (0, _formatTime2['default'])(time, this.player_.duration()));\n  };\n\n  /**\n   * Get percentage of video played\n   *\n   * @return {number}\n   *         The percentage played\n   */\n\n\n  SeekBar.prototype.getPercent = function getPercent() {\n    var percent = this.player_.currentTime() / this.player_.duration();\n\n    return percent >= 1 ? 1 : percent;\n  };\n\n  /**\n   * Handle mouse down on seek bar\n   *\n   * @param {EventTarget~Event} event\n   *        The `mousedown` event that caused this to run.\n   *\n   * @listens mousedown\n   */\n\n\n  SeekBar.prototype.handleMouseDown = function handleMouseDown(event) {\n    this.player_.scrubbing(true);\n\n    this.videoWasPlaying = !this.player_.paused();\n    this.player_.pause();\n\n    _Slider.prototype.handleMouseDown.call(this, event);\n  };\n\n  /**\n   * Handle mouse move on seek bar\n   *\n   * @param {EventTarget~Event} event\n   *        The `mousemove` event that caused this to run.\n   *\n   * @listens mousemove\n   */\n\n\n  SeekBar.prototype.handleMouseMove = function handleMouseMove(event) {\n    var newTime = this.calculateDistance(event) * this.player_.duration();\n\n    // Don't let video end while scrubbing.\n    if (newTime === this.player_.duration()) {\n      newTime = newTime - 0.1;\n    }\n\n    // Set new time (tell player to seek to new time)\n    this.player_.currentTime(newTime);\n  };\n\n  /**\n   * Handle mouse up on seek bar\n   *\n   * @param {EventTarget~Event} event\n   *        The `mouseup` event that caused this to run.\n   *\n   * @listens mouseup\n   */\n\n\n  SeekBar.prototype.handleMouseUp = function handleMouseUp(event) {\n    _Slider.prototype.handleMouseUp.call(this, event);\n\n    this.player_.scrubbing(false);\n    if (this.videoWasPlaying) {\n      this.player_.play();\n    }\n  };\n\n  /**\n   * Move more quickly fast forward for keyboard-only users\n   */\n\n\n  SeekBar.prototype.stepForward = function stepForward() {\n    // more quickly fast forward for keyboard-only users\n    this.player_.currentTime(this.player_.currentTime() + 5);\n  };\n\n  /**\n   * Move more quickly rewind for keyboard-only users\n   */\n\n\n  SeekBar.prototype.stepBack = function stepBack() {\n    // more quickly rewind for keyboard-only users\n    this.player_.currentTime(this.player_.currentTime() - 5);\n  };\n\n  return SeekBar;\n}(_slider2['default']);\n\n/**\n * Default options for the `SeekBar`\n *\n * @type {Object}\n * @private\n */\n\n\nSeekBar.prototype.options_ = {\n  children: ['loadProgressBar', 'mouseTimeDisplay', 'playProgressBar'],\n  barName: 'playProgressBar'\n};\n\n/**\n * Call the update event for this Slider when this event happens on the player.\n *\n * @type {string}\n */\nSeekBar.prototype.playerEvent = 'timeupdate';\n\n_component2['default'].registerComponent('SeekBar', SeekBar);\nexports['default'] = SeekBar;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/video.js/es5/control-bar/progress-control/seek-bar.js\n ** module id = 72\n ** module chunks = 0 1\n **/","'use strict';\n\nexports.__esModule = true;\n\nvar _component = require('../component.js');\n\nvar _component2 = _interopRequireDefault(_component);\n\nvar _dom = require('../utils/dom.js');\n\nvar Dom = _interopRequireWildcard(_dom);\n\nvar _obj = require('../utils/obj');\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj['default'] = obj; return newObj; } }\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /**\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * @file slider.js\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                */\n\n\n/**\n * The base functionality for a slider. Can be vertical or horizontal.\n * For instance the volume bar or the seek bar on a video is a slider.\n *\n * @extends Component\n */\nvar Slider = function (_Component) {\n  _inherits(Slider, _Component);\n\n  /**\n   * Create an instance of this class\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function Slider(player, options) {\n    _classCallCheck(this, Slider);\n\n    // Set property names to bar to match with the child Slider class is looking for\n    var _this = _possibleConstructorReturn(this, _Component.call(this, player, options));\n\n    _this.bar = _this.getChild(_this.options_.barName);\n\n    // Set a horizontal or vertical class on the slider depending on the slider type\n    _this.vertical(!!_this.options_.vertical);\n\n    _this.on('mousedown', _this.handleMouseDown);\n    _this.on('touchstart', _this.handleMouseDown);\n    _this.on('focus', _this.handleFocus);\n    _this.on('blur', _this.handleBlur);\n    _this.on('click', _this.handleClick);\n\n    _this.on(player, 'controlsvisible', _this.update);\n    _this.on(player, _this.playerEvent, _this.update);\n    return _this;\n  }\n\n  /**\n   * Create the `Button`s DOM element.\n   *\n   * @param {string} type\n   *        Type of element to create.\n   *\n   * @param {Object} [props={}]\n   *        List of properties in Object form.\n   *\n   * @param {Object} [attributes={}]\n   *        list of attributes in Object form.\n   *\n   * @return {Element}\n   *         The element that gets created.\n   */\n\n\n  Slider.prototype.createEl = function createEl(type) {\n    var props = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    var attributes = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n\n    // Add the slider element class to all sub classes\n    props.className = props.className + ' vjs-slider';\n    props = (0, _obj.assign)({\n      tabIndex: 0\n    }, props);\n\n    attributes = (0, _obj.assign)({\n      'role': 'slider',\n      'aria-valuenow': 0,\n      'aria-valuemin': 0,\n      'aria-valuemax': 100,\n      'tabIndex': 0\n    }, attributes);\n\n    return _Component.prototype.createEl.call(this, type, props, attributes);\n  };\n\n  /**\n   * Handle `mousedown` or `touchstart` events on the `Slider`.\n   *\n   * @param {EventTarget~Event} event\n   *        `mousedown` or `touchstart` event that triggered this function\n   *\n   * @listens mousedown\n   * @listens touchstart\n   * @fires Slider#slideractive\n   */\n\n\n  Slider.prototype.handleMouseDown = function handleMouseDown(event) {\n    var doc = this.bar.el_.ownerDocument;\n\n    event.preventDefault();\n    Dom.blockTextSelection();\n\n    this.addClass('vjs-sliding');\n    /**\n     * Triggered when the slider is in an active state\n     *\n     * @event Slider#slideractive\n     * @type {EventTarget~Event}\n     */\n    this.trigger('slideractive');\n\n    this.on(doc, 'mousemove', this.handleMouseMove);\n    this.on(doc, 'mouseup', this.handleMouseUp);\n    this.on(doc, 'touchmove', this.handleMouseMove);\n    this.on(doc, 'touchend', this.handleMouseUp);\n\n    this.handleMouseMove(event);\n  };\n\n  /**\n   * Handle the `mousemove`, `touchmove`, and `mousedown` events on this `Slider`.\n   * The `mousemove` and `touchmove` events will only only trigger this function during\n   * `mousedown` and `touchstart`. This is due to {@link Slider#handleMouseDown} and\n   * {@link Slider#handleMouseUp}.\n   *\n   * @param {EventTarget~Event} event\n   *        `mousedown`, `mousemove`, `touchstart`, or `touchmove` event that triggered\n   *        this function\n   *\n   * @listens mousemove\n   * @listens touchmove\n   */\n\n\n  Slider.prototype.handleMouseMove = function handleMouseMove(event) {};\n\n  /**\n   * Handle `mouseup` or `touchend` events on the `Slider`.\n   *\n   * @param {EventTarget~Event} event\n   *        `mouseup` or `touchend` event that triggered this function.\n   *\n   * @listens touchend\n   * @listens mouseup\n   * @fires Slider#sliderinactive\n   */\n\n\n  Slider.prototype.handleMouseUp = function handleMouseUp() {\n    var doc = this.bar.el_.ownerDocument;\n\n    Dom.unblockTextSelection();\n\n    this.removeClass('vjs-sliding');\n    /**\n     * Triggered when the slider is no longer in an active state.\n     *\n     * @event Slider#sliderinactive\n     * @type {EventTarget~Event}\n     */\n    this.trigger('sliderinactive');\n\n    this.off(doc, 'mousemove', this.handleMouseMove);\n    this.off(doc, 'mouseup', this.handleMouseUp);\n    this.off(doc, 'touchmove', this.handleMouseMove);\n    this.off(doc, 'touchend', this.handleMouseUp);\n\n    this.update();\n  };\n\n  /**\n   * Update the progress bar of the `Slider`.\n   */\n\n\n  Slider.prototype.update = function update() {\n    // In VolumeBar init we have a setTimeout for update that pops and update to the end of the\n    // execution stack. The player is destroyed before then update will cause an error\n    if (!this.el_) {\n      return;\n    }\n\n    // If scrubbing, we could use a cached value to make the handle keep up with the user's mouse.\n    // On HTML5 browsers scrubbing is really smooth, but some flash players are slow, so we might want to utilize this later.\n    // var progress =  (this.player_.scrubbing()) ? this.player_.getCache().currentTime / this.player_.duration() : this.player_.currentTime() / this.player_.duration();\n    var progress = this.getPercent();\n    var bar = this.bar;\n\n    // If there's no bar...\n    if (!bar) {\n      return;\n    }\n\n    // Protect against no duration and other division issues\n    if (typeof progress !== 'number' || progress !== progress || progress < 0 || progress === Infinity) {\n      progress = 0;\n    }\n\n    // Convert to a percentage for setting\n    var percentage = (progress * 100).toFixed(2) + '%';\n\n    // Set the new bar width or height\n    if (this.vertical()) {\n      bar.el().style.height = percentage;\n    } else {\n      bar.el().style.width = percentage;\n    }\n  };\n\n  /**\n   * Calculate distance for slider\n   *\n   * @param {EventTarget~Event} event\n   *        The event that caused this function to run.\n   *\n   * @return {number}\n   *         The current position of the Slider.\n   *         - postition.x for vertical `Slider`s\n   *         - postition.y for horizontal `Slider`s\n   */\n\n\n  Slider.prototype.calculateDistance = function calculateDistance(event) {\n    var position = Dom.getPointerPosition(this.el_, event);\n\n    if (this.vertical()) {\n      return position.y;\n    }\n    return position.x;\n  };\n\n  /**\n   * Handle a `focus` event on this `Slider`.\n   *\n   * @param {EventTarget~Event} event\n   *        The `focus` event that caused this function to run.\n   *\n   * @listens focus\n   */\n\n\n  Slider.prototype.handleFocus = function handleFocus() {\n    this.on(this.bar.el_.ownerDocument, 'keydown', this.handleKeyPress);\n  };\n\n  /**\n   * Handle a `keydown` event on the `Slider`. Watches for left, rigth, up, and down\n   * arrow keys. This function will only be called when the slider has focus. See\n   * {@link Slider#handleFocus} and {@link Slider#handleBlur}.\n   *\n   * @param {EventTarget~Event} event\n   *        the `keydown` event that caused this function to run.\n   *\n   * @listens keydown\n   */\n\n\n  Slider.prototype.handleKeyPress = function handleKeyPress(event) {\n    // Left and Down Arrows\n    if (event.which === 37 || event.which === 40) {\n      event.preventDefault();\n      this.stepBack();\n\n      // Up and Right Arrows\n    } else if (event.which === 38 || event.which === 39) {\n      event.preventDefault();\n      this.stepForward();\n    }\n  };\n\n  /**\n   * Handle a `blur` event on this `Slider`.\n   *\n   * @param {EventTarget~Event} event\n   *        The `blur` event that caused this function to run.\n   *\n   * @listens blur\n   */\n\n  Slider.prototype.handleBlur = function handleBlur() {\n    this.off(this.bar.el_.ownerDocument, 'keydown', this.handleKeyPress);\n  };\n\n  /**\n   * Listener for click events on slider, used to prevent clicks\n   *   from bubbling up to parent elements like button menus.\n   *\n   * @param {Object} event\n   *        Event that caused this object to run\n   */\n\n\n  Slider.prototype.handleClick = function handleClick(event) {\n    event.stopImmediatePropagation();\n    event.preventDefault();\n  };\n\n  /**\n   * Get/set if slider is horizontal for vertical\n   *\n   * @param {boolean} [bool]\n   *        - true if slider is vertical,\n   *        - false is horizontal\n   *\n   * @return {boolean|Slider}\n   *         - true if slider is vertical, and getting\n   *         - false is horizontal, and getting\n   *         - a reference to this object when setting\n   */\n\n\n  Slider.prototype.vertical = function vertical(bool) {\n    if (bool === undefined) {\n      return this.vertical_ || false;\n    }\n\n    this.vertical_ = !!bool;\n\n    if (this.vertical_) {\n      this.addClass('vjs-slider-vertical');\n    } else {\n      this.addClass('vjs-slider-horizontal');\n    }\n\n    return this;\n  };\n\n  return Slider;\n}(_component2['default']);\n\n_component2['default'].registerComponent('Slider', Slider);\nexports['default'] = Slider;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/video.js/es5/slider/slider.js\n ** module id = 73\n ** module chunks = 0 1\n **/","'use strict';\n\nexports.__esModule = true;\nexports['default'] = computedStyle;\n\nvar _window = require('global/window');\n\nvar _window2 = _interopRequireDefault(_window);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\n/**\n * A safe getComputedStyle with an IE8 fallback.\n *\n * This is needed because in Firefox, if the player is loaded in an iframe with\n * `display:none`, then `getComputedStyle` returns `null`, so, we do a null-check to\n * make sure  that the player doesn't break in these cases.\n *\n * @param {Element} el\n *        The element you want the computed style of\n *\n * @param {string} prop\n *        The property name you want\n *\n * @see https://bugzilla.mozilla.org/show_bug.cgi?id=548397\n */\nfunction computedStyle(el, prop) {\n  if (!el || !prop) {\n    return '';\n  }\n\n  if (typeof _window2['default'].getComputedStyle === 'function') {\n    var cs = _window2['default'].getComputedStyle(el);\n\n    return cs ? cs[prop] : '';\n  }\n\n  return el.currentStyle[prop] || '';\n} /**\n   * @file computed-style.js\n   * @module computed-style\n   */\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/video.js/es5/utils/computed-style.js\n ** module id = 74\n ** module chunks = 0 1\n **/","'use strict';\n\nexports.__esModule = true;\n\nvar _component = require('../../component.js');\n\nvar _component2 = _interopRequireDefault(_component);\n\nvar _dom = require('../../utils/dom.js');\n\nvar Dom = _interopRequireWildcard(_dom);\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj['default'] = obj; return newObj; } }\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /**\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * @file load-progress-bar.js\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                */\n\n\n/**\n * Shows loading progress\n *\n * @extends Component\n */\nvar LoadProgressBar = function (_Component) {\n  _inherits(LoadProgressBar, _Component);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function LoadProgressBar(player, options) {\n    _classCallCheck(this, LoadProgressBar);\n\n    var _this = _possibleConstructorReturn(this, _Component.call(this, player, options));\n\n    _this.partEls_ = [];\n    _this.on(player, 'progress', _this.update);\n    return _this;\n  }\n\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n\n\n  LoadProgressBar.prototype.createEl = function createEl() {\n    return _Component.prototype.createEl.call(this, 'div', {\n      className: 'vjs-load-progress',\n      innerHTML: '<span class=\"vjs-control-text\"><span>' + this.localize('Loaded') + '</span>: 0%</span>'\n    });\n  };\n\n  /**\n   * Update progress bar\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `progress` event that caused this function to run.\n   *\n   * @listens Player#progress\n   */\n\n\n  LoadProgressBar.prototype.update = function update(event) {\n    var buffered = this.player_.buffered();\n    var duration = this.player_.duration();\n    var bufferedEnd = this.player_.bufferedEnd();\n    var children = this.partEls_;\n\n    // get the percent width of a time compared to the total end\n    var percentify = function percentify(time, end) {\n      // no NaN\n      var percent = time / end || 0;\n\n      return (percent >= 1 ? 1 : percent) * 100 + '%';\n    };\n\n    // update the width of the progress bar\n    this.el_.style.width = percentify(bufferedEnd, duration);\n\n    // add child elements to represent the individual buffered time ranges\n    for (var i = 0; i < buffered.length; i++) {\n      var start = buffered.start(i);\n      var end = buffered.end(i);\n      var part = children[i];\n\n      if (!part) {\n        part = this.el_.appendChild(Dom.createEl());\n        children[i] = part;\n      }\n\n      // set the percent based on the width of the progress bar (bufferedEnd)\n      part.style.left = percentify(start, bufferedEnd);\n      part.style.width = percentify(end - start, bufferedEnd);\n    }\n\n    // remove unused buffered range elements\n    for (var _i = children.length; _i > buffered.length; _i--) {\n      this.el_.removeChild(children[_i - 1]);\n    }\n    children.length = buffered.length;\n  };\n\n  return LoadProgressBar;\n}(_component2['default']);\n\n_component2['default'].registerComponent('LoadProgressBar', LoadProgressBar);\nexports['default'] = LoadProgressBar;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/video.js/es5/control-bar/progress-control/load-progress-bar.js\n ** module id = 75\n ** module chunks = 0 1\n **/","'use strict';\n\nexports.__esModule = true;\n\nvar _component = require('../../component.js');\n\nvar _component2 = _interopRequireDefault(_component);\n\nvar _fn = require('../../utils/fn.js');\n\nvar Fn = _interopRequireWildcard(_fn);\n\nvar _formatTime = require('../../utils/format-time.js');\n\nvar _formatTime2 = _interopRequireDefault(_formatTime);\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj['default'] = obj; return newObj; } }\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /**\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * @file play-progress-bar.js\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                */\n\n\n/**\n * Shows play progress\n *\n * @extends Component\n */\nvar PlayProgressBar = function (_Component) {\n  _inherits(PlayProgressBar, _Component);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function PlayProgressBar(player, options) {\n    _classCallCheck(this, PlayProgressBar);\n\n    var _this = _possibleConstructorReturn(this, _Component.call(this, player, options));\n\n    _this.updateDataAttr();\n    _this.on(player, 'timeupdate', _this.updateDataAttr);\n    player.ready(Fn.bind(_this, _this.updateDataAttr));\n\n    if (options.playerOptions && options.playerOptions.controlBar && options.playerOptions.controlBar.progressControl && options.playerOptions.controlBar.progressControl.keepTooltipsInside) {\n      _this.keepTooltipsInside = options.playerOptions.controlBar.progressControl.keepTooltipsInside;\n    }\n\n    if (_this.keepTooltipsInside) {\n      _this.addClass('vjs-keep-tooltips-inside');\n    }\n    return _this;\n  }\n\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n\n\n  PlayProgressBar.prototype.createEl = function createEl() {\n    return _Component.prototype.createEl.call(this, 'div', {\n      className: 'vjs-play-progress vjs-slider-bar',\n      innerHTML: '<span class=\"vjs-control-text\"><span>' + this.localize('Progress') + '</span>: 0%</span>'\n    });\n  };\n\n  /**\n   * Update the data-current-time attribute on the `PlayProgressBar`.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `timeupdate` event that caused this to run.\n   *\n   * @listens Player#timeupdate\n   */\n\n\n  PlayProgressBar.prototype.updateDataAttr = function updateDataAttr(event) {\n    var time = this.player_.scrubbing() ? this.player_.getCache().currentTime : this.player_.currentTime();\n\n    this.el_.setAttribute('data-current-time', (0, _formatTime2['default'])(time, this.player_.duration()));\n  };\n\n  return PlayProgressBar;\n}(_component2['default']);\n\n_component2['default'].registerComponent('PlayProgressBar', PlayProgressBar);\nexports['default'] = PlayProgressBar;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/video.js/es5/control-bar/progress-control/play-progress-bar.js\n ** module id = 76\n ** module chunks = 0 1\n **/","'use strict';\n\nexports.__esModule = true;\n\nvar _component = require('../../component.js');\n\nvar _component2 = _interopRequireDefault(_component);\n\nvar _fn = require('../../utils/fn.js');\n\nvar Fn = _interopRequireWildcard(_fn);\n\nvar _formatTime = require('../../utils/format-time.js');\n\nvar _formatTime2 = _interopRequireDefault(_formatTime);\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj['default'] = obj; return newObj; } }\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /**\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * @file play-progress-bar.js\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                */\n\n\n/**\n * Shows play progress\n *\n * @extends Component\n */\nvar TooltipProgressBar = function (_Component) {\n  _inherits(TooltipProgressBar, _Component);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function TooltipProgressBar(player, options) {\n    _classCallCheck(this, TooltipProgressBar);\n\n    var _this = _possibleConstructorReturn(this, _Component.call(this, player, options));\n\n    _this.updateDataAttr();\n    _this.on(player, 'timeupdate', _this.updateDataAttr);\n    player.ready(Fn.bind(_this, _this.updateDataAttr));\n    return _this;\n  }\n\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n\n\n  TooltipProgressBar.prototype.createEl = function createEl() {\n    var el = _Component.prototype.createEl.call(this, 'div', {\n      className: 'vjs-tooltip-progress-bar vjs-slider-bar',\n      innerHTML: '<div class=\"vjs-time-tooltip\"></div>\\n        <span class=\"vjs-control-text\"><span>' + this.localize('Progress') + '</span>: 0%</span>'\n    });\n\n    this.tooltip = el.querySelector('.vjs-time-tooltip');\n\n    return el;\n  };\n\n  /**\n   * Updatet the data-current-time attribute for TooltipProgressBar\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `timeupdate` event that caused this function to run.\n   *\n   * @listens Player#timeupdate\n   */\n\n\n  TooltipProgressBar.prototype.updateDataAttr = function updateDataAttr(event) {\n    var time = this.player_.scrubbing() ? this.player_.getCache().currentTime : this.player_.currentTime();\n    var formattedTime = (0, _formatTime2['default'])(time, this.player_.duration());\n\n    this.el_.setAttribute('data-current-time', formattedTime);\n    this.tooltip.innerHTML = formattedTime;\n  };\n\n  return TooltipProgressBar;\n}(_component2['default']);\n\n_component2['default'].registerComponent('TooltipProgressBar', TooltipProgressBar);\nexports['default'] = TooltipProgressBar;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/video.js/es5/control-bar/progress-control/tooltip-progress-bar.js\n ** module id = 77\n ** module chunks = 0 1\n **/","'use strict';\n\nexports.__esModule = true;\n\nvar _component = require('../../component.js');\n\nvar _component2 = _interopRequireDefault(_component);\n\nvar _dom = require('../../utils/dom.js');\n\nvar Dom = _interopRequireWildcard(_dom);\n\nvar _fn = require('../../utils/fn.js');\n\nvar Fn = _interopRequireWildcard(_fn);\n\nvar _formatTime = require('../../utils/format-time.js');\n\nvar _formatTime2 = _interopRequireDefault(_formatTime);\n\nvar _computedStyle = require('../../utils/computed-style.js');\n\nvar _computedStyle2 = _interopRequireDefault(_computedStyle);\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj['default'] = obj; return newObj; } }\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /**\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * @file mouse-time-display.js\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                */\n\n\n/**\n * The Mouse Time Display component shows the time you will seek to\n * when hovering over the progress bar\n *\n * @extends Component\n */\nvar MouseTimeDisplay = function (_Component) {\n  _inherits(MouseTimeDisplay, _Component);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function MouseTimeDisplay(player, options) {\n    _classCallCheck(this, MouseTimeDisplay);\n\n    var _this = _possibleConstructorReturn(this, _Component.call(this, player, options));\n\n    if (options.playerOptions && options.playerOptions.controlBar && options.playerOptions.controlBar.progressControl && options.playerOptions.controlBar.progressControl.keepTooltipsInside) {\n      _this.keepTooltipsInside = options.playerOptions.controlBar.progressControl.keepTooltipsInside;\n    }\n\n    if (_this.keepTooltipsInside) {\n      _this.tooltip = Dom.createEl('div', { className: 'vjs-time-tooltip' });\n      _this.el().appendChild(_this.tooltip);\n      _this.addClass('vjs-keep-tooltips-inside');\n    }\n\n    _this.update(0, 0);\n\n    player.on('ready', function () {\n      _this.on(player.controlBar.progressControl.el(), 'mousemove', Fn.throttle(Fn.bind(_this, _this.handleMouseMove), 25));\n    });\n    return _this;\n  }\n\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n\n\n  MouseTimeDisplay.prototype.createEl = function createEl() {\n    return _Component.prototype.createEl.call(this, 'div', {\n      className: 'vjs-mouse-display'\n    });\n  };\n\n  /**\n   * Handle the mouse move event on the `MouseTimeDisplay`.\n   *\n   * @param {EventTarget~Event} event\n   *        The `mousemove` event that caused this to event to run.\n   *\n   * @listen mousemove\n   */\n\n\n  MouseTimeDisplay.prototype.handleMouseMove = function handleMouseMove(event) {\n    var duration = this.player_.duration();\n    var newTime = this.calculateDistance(event) * duration;\n    var position = event.pageX - Dom.findElPosition(this.el().parentNode).left;\n\n    this.update(newTime, position);\n  };\n\n  /**\n   * Update the time and posistion of the `MouseTimeDisplay`.\n   *\n   * @param {number} newTime\n   *        Time to change the `MouseTimeDisplay` to.\n   *\n   * @param {nubmer} position\n   *        Postion from the left of the in pixels.\n   */\n\n\n  MouseTimeDisplay.prototype.update = function update(newTime, position) {\n    var time = (0, _formatTime2['default'])(newTime, this.player_.duration());\n\n    this.el().style.left = position + 'px';\n    this.el().setAttribute('data-current-time', time);\n\n    if (this.keepTooltipsInside) {\n      var clampedPosition = this.clampPosition_(position);\n      var difference = position - clampedPosition + 1;\n      var tooltipWidth = parseFloat((0, _computedStyle2['default'])(this.tooltip, 'width'));\n      var tooltipWidthHalf = tooltipWidth / 2;\n\n      this.tooltip.innerHTML = time;\n      this.tooltip.style.right = '-' + (tooltipWidthHalf - difference) + 'px';\n    }\n  };\n\n  /**\n   * Get the mouse pointers x coordinate in pixels.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `mousemove` event that was passed to this function by\n   *        {@link MouseTimeDisplay#handleMouseMove}\n   *\n   * @return {number}\n   *         THe x position in pixels of the mouse pointer.\n   */\n\n\n  MouseTimeDisplay.prototype.calculateDistance = function calculateDistance(event) {\n    return Dom.getPointerPosition(this.el().parentNode, event).x;\n  };\n\n  /**\n   * This takes in a horizontal position for the bar and returns a clamped position.\n   * Clamped position means that it will keep the position greater than half the width\n   * of the tooltip and smaller than the player width minus half the width o the tooltip.\n   * It will only clamp the position if `keepTooltipsInside` option is set.\n   *\n   * @param {number} position\n   *        The position the bar wants to be\n   *\n   * @return {number}\n   *         The (potentially) new clamped position.\n   *\n   * @private\n   */\n\n\n  MouseTimeDisplay.prototype.clampPosition_ = function clampPosition_(position) {\n    if (!this.keepTooltipsInside) {\n      return position;\n    }\n\n    var playerWidth = parseFloat((0, _computedStyle2['default'])(this.player().el(), 'width'));\n    var tooltipWidth = parseFloat((0, _computedStyle2['default'])(this.tooltip, 'width'));\n    var tooltipWidthHalf = tooltipWidth / 2;\n    var actualPosition = position;\n\n    if (position < tooltipWidthHalf) {\n      actualPosition = Math.ceil(tooltipWidthHalf);\n    } else if (position > playerWidth - tooltipWidthHalf) {\n      actualPosition = Math.floor(playerWidth - tooltipWidthHalf);\n    }\n\n    return actualPosition;\n  };\n\n  return MouseTimeDisplay;\n}(_component2['default']);\n\n_component2['default'].registerComponent('MouseTimeDisplay', MouseTimeDisplay);\nexports['default'] = MouseTimeDisplay;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/video.js/es5/control-bar/progress-control/mouse-time-display.js\n ** module id = 78\n ** module chunks = 0 1\n **/","'use strict';\n\nexports.__esModule = true;\n\nvar _button = require('../button.js');\n\nvar _button2 = _interopRequireDefault(_button);\n\nvar _component = require('../component.js');\n\nvar _component2 = _interopRequireDefault(_component);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /**\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * @file fullscreen-toggle.js\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                */\n\n\n/**\n * Toggle fullscreen video\n *\n * @extends Button\n */\nvar FullscreenToggle = function (_Button) {\n  _inherits(FullscreenToggle, _Button);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function FullscreenToggle(player, options) {\n    _classCallCheck(this, FullscreenToggle);\n\n    var _this = _possibleConstructorReturn(this, _Button.call(this, player, options));\n\n    _this.on(player, 'fullscreenchange', _this.handleFullscreenChange);\n    return _this;\n  }\n\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n\n\n  FullscreenToggle.prototype.buildCSSClass = function buildCSSClass() {\n    return 'vjs-fullscreen-control ' + _Button.prototype.buildCSSClass.call(this);\n  };\n\n  /**\n   * Handles fullscreenchange on the player and change control text accordingly.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The {@link Player#fullscreenchange} event that caused this function to be\n   *        called.\n   *\n   * @listens Player#fullscreenchange\n   */\n\n\n  FullscreenToggle.prototype.handleFullscreenChange = function handleFullscreenChange(event) {\n    if (this.player_.isFullscreen()) {\n      this.controlText('Non-Fullscreen');\n    } else {\n      this.controlText('Fullscreen');\n    }\n  };\n\n  /**\n   * This gets called when an `FullscreenToggle` is \"clicked\". See\n   * {@link ClickableComponent} for more detailed information on what a click can be.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   */\n\n\n  FullscreenToggle.prototype.handleClick = function handleClick(event) {\n    if (!this.player_.isFullscreen()) {\n      this.player_.requestFullscreen();\n    } else {\n      this.player_.exitFullscreen();\n    }\n  };\n\n  return FullscreenToggle;\n}(_button2['default']);\n\n/**\n * The text that should display over the `FullscreenToggle`s controls. Added for localization.\n *\n * @type {string}\n * @private\n */\n\n\nFullscreenToggle.prototype.controlText_ = 'Fullscreen';\n\n_component2['default'].registerComponent('FullscreenToggle', FullscreenToggle);\nexports['default'] = FullscreenToggle;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/video.js/es5/control-bar/fullscreen-toggle.js\n ** module id = 79\n ** module chunks = 0 1\n **/","'use strict';\n\nexports.__esModule = true;\n\nvar _component = require('../../component.js');\n\nvar _component2 = _interopRequireDefault(_component);\n\nrequire('./volume-bar.js');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /**\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * @file volume-control.js\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                */\n\n\n// Required children\n\n\n/**\n * The component for controlling the volume level\n *\n * @extends Component\n */\nvar VolumeControl = function (_Component) {\n  _inherits(VolumeControl, _Component);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options={}]\n   *        The key/value store of player options.\n   */\n  function VolumeControl(player, options) {\n    _classCallCheck(this, VolumeControl);\n\n    // hide volume controls when they're not supported by the current tech\n    var _this = _possibleConstructorReturn(this, _Component.call(this, player, options));\n\n    if (player.tech_ && player.tech_.featuresVolumeControl === false) {\n      _this.addClass('vjs-hidden');\n    }\n    _this.on(player, 'loadstart', function () {\n      if (player.tech_.featuresVolumeControl === false) {\n        this.addClass('vjs-hidden');\n      } else {\n        this.removeClass('vjs-hidden');\n      }\n    });\n    return _this;\n  }\n\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n\n\n  VolumeControl.prototype.createEl = function createEl() {\n    return _Component.prototype.createEl.call(this, 'div', {\n      className: 'vjs-volume-control vjs-control'\n    });\n  };\n\n  return VolumeControl;\n}(_component2['default']);\n\n/**\n * Default options for the `VolumeControl`\n *\n * @type {Object}\n * @private\n */\n\n\nVolumeControl.prototype.options_ = {\n  children: ['volumeBar']\n};\n\n_component2['default'].registerComponent('VolumeControl', VolumeControl);\nexports['default'] = VolumeControl;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/video.js/es5/control-bar/volume-control/volume-control.js\n ** module id = 80\n ** module chunks = 0 1\n **/","'use strict';\n\nexports.__esModule = true;\n\nvar _slider = require('../../slider/slider.js');\n\nvar _slider2 = _interopRequireDefault(_slider);\n\nvar _component = require('../../component.js');\n\nvar _component2 = _interopRequireDefault(_component);\n\nvar _fn = require('../../utils/fn.js');\n\nvar Fn = _interopRequireWildcard(_fn);\n\nrequire('./volume-level.js');\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj['default'] = obj; return newObj; } }\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /**\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * @file volume-bar.js\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                */\n\n\n// Required children\n\n\n/**\n * The bar that contains the volume level and can be clicked on to adjust the level\n *\n * @extends Slider\n */\nvar VolumeBar = function (_Slider) {\n  _inherits(VolumeBar, _Slider);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function VolumeBar(player, options) {\n    _classCallCheck(this, VolumeBar);\n\n    var _this = _possibleConstructorReturn(this, _Slider.call(this, player, options));\n\n    _this.on(player, 'volumechange', _this.updateARIAAttributes);\n    player.ready(Fn.bind(_this, _this.updateARIAAttributes));\n    return _this;\n  }\n\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n\n\n  VolumeBar.prototype.createEl = function createEl() {\n    return _Slider.prototype.createEl.call(this, 'div', {\n      className: 'vjs-volume-bar vjs-slider-bar'\n    }, {\n      'aria-label': 'volume level'\n    });\n  };\n\n  /**\n   * Handle movement events on the {@link VolumeMenuButton}.\n   *\n   * @param {EventTarget~Event} event\n   *        The event that caused this function to run.\n   *\n   * @listens mousemove\n   */\n\n\n  VolumeBar.prototype.handleMouseMove = function handleMouseMove(event) {\n    this.checkMuted();\n    this.player_.volume(this.calculateDistance(event));\n  };\n\n  /**\n   * If the player is muted unmute it.\n   */\n\n\n  VolumeBar.prototype.checkMuted = function checkMuted() {\n    if (this.player_.muted()) {\n      this.player_.muted(false);\n    }\n  };\n\n  /**\n   * Get percent of volume level\n   *\n   * @return {number}\n   *         Volume level percent as a decimal number.\n   */\n\n\n  VolumeBar.prototype.getPercent = function getPercent() {\n    if (this.player_.muted()) {\n      return 0;\n    }\n    return this.player_.volume();\n  };\n\n  /**\n   * Increase volume level for keyboard users\n   */\n\n\n  VolumeBar.prototype.stepForward = function stepForward() {\n    this.checkMuted();\n    this.player_.volume(this.player_.volume() + 0.1);\n  };\n\n  /**\n   * Decrease volume level for keyboard users\n   */\n\n\n  VolumeBar.prototype.stepBack = function stepBack() {\n    this.checkMuted();\n    this.player_.volume(this.player_.volume() - 0.1);\n  };\n\n  /**\n   * Update ARIA accessibility attributes\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `volumechange` event that caused this function to run.\n   *\n   * @listens Player#volumechange\n   */\n\n\n  VolumeBar.prototype.updateARIAAttributes = function updateARIAAttributes(event) {\n    // Current value of volume bar as a percentage\n    var volume = (this.player_.volume() * 100).toFixed(2);\n\n    this.el_.setAttribute('aria-valuenow', volume);\n    this.el_.setAttribute('aria-valuetext', volume + '%');\n  };\n\n  return VolumeBar;\n}(_slider2['default']);\n\n/**\n * Default options for the `VolumeBar`\n *\n * @type {Object}\n * @private\n */\n\n\nVolumeBar.prototype.options_ = {\n  children: ['volumeLevel'],\n  barName: 'volumeLevel'\n};\n\n/**\n * Call the update event for this Slider when this event happens on the player.\n *\n * @type {string}\n */\nVolumeBar.prototype.playerEvent = 'volumechange';\n\n_component2['default'].registerComponent('VolumeBar', VolumeBar);\nexports['default'] = VolumeBar;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/video.js/es5/control-bar/volume-control/volume-bar.js\n ** module id = 81\n ** module chunks = 0 1\n **/","'use strict';\n\nexports.__esModule = true;\n\nvar _component = require('../../component.js');\n\nvar _component2 = _interopRequireDefault(_component);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /**\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * @file volume-level.js\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                */\n\n\n/**\n * Shows volume level\n *\n * @extends Component\n */\nvar VolumeLevel = function (_Component) {\n  _inherits(VolumeLevel, _Component);\n\n  function VolumeLevel() {\n    _classCallCheck(this, VolumeLevel);\n\n    return _possibleConstructorReturn(this, _Component.apply(this, arguments));\n  }\n\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n  VolumeLevel.prototype.createEl = function createEl() {\n    return _Component.prototype.createEl.call(this, 'div', {\n      className: 'vjs-volume-level',\n      innerHTML: '<span class=\"vjs-control-text\"></span>'\n    });\n  };\n\n  return VolumeLevel;\n}(_component2['default']);\n\n_component2['default'].registerComponent('VolumeLevel', VolumeLevel);\nexports['default'] = VolumeLevel;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/video.js/es5/control-bar/volume-control/volume-level.js\n ** module id = 82\n ** module chunks = 0 1\n **/","'use strict';\n\nexports.__esModule = true;\n\nvar _fn = require('../utils/fn.js');\n\nvar Fn = _interopRequireWildcard(_fn);\n\nvar _component = require('../component.js');\n\nvar _component2 = _interopRequireDefault(_component);\n\nvar _popup = require('../popup/popup.js');\n\nvar _popup2 = _interopRequireDefault(_popup);\n\nvar _popupButton = require('../popup/popup-button.js');\n\nvar _popupButton2 = _interopRequireDefault(_popupButton);\n\nvar _muteToggle = require('./mute-toggle.js');\n\nvar _muteToggle2 = _interopRequireDefault(_muteToggle);\n\nvar _volumeBar = require('./volume-control/volume-bar.js');\n\nvar _volumeBar2 = _interopRequireDefault(_volumeBar);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj['default'] = obj; return newObj; } }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /**\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * @file volume-menu-button.js\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                */\n\n\n/**\n * Button for volume popup\n *\n * @extends PopupButton\n */\nvar VolumeMenuButton = function (_PopupButton) {\n  _inherits(VolumeMenuButton, _PopupButton);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options={}]\n   *        The key/value store of player options.\n   */\n  function VolumeMenuButton(player) {\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n    _classCallCheck(this, VolumeMenuButton);\n\n    // Default to inline\n    if (options.inline === undefined) {\n      options.inline = true;\n    }\n\n    // If the vertical option isn't passed at all, default to true.\n    if (options.vertical === undefined) {\n      // If an inline volumeMenuButton is used, we should default to using\n      // a horizontal slider for obvious reasons.\n      if (options.inline) {\n        options.vertical = false;\n      } else {\n        options.vertical = true;\n      }\n    }\n\n    // The vertical option needs to be set on the volumeBar as well,\n    // since that will need to be passed along to the VolumeBar constructor\n    options.volumeBar = options.volumeBar || {};\n    options.volumeBar.vertical = !!options.vertical;\n\n    // Same listeners as MuteToggle\n    var _this = _possibleConstructorReturn(this, _PopupButton.call(this, player, options));\n\n    _this.on(player, 'volumechange', _this.volumeUpdate);\n    _this.on(player, 'loadstart', _this.volumeUpdate);\n\n    // hide mute toggle if the current tech doesn't support volume control\n    function updateVisibility() {\n      if (player.tech_ && player.tech_.featuresVolumeControl === false) {\n        this.addClass('vjs-hidden');\n      } else {\n        this.removeClass('vjs-hidden');\n      }\n    }\n\n    updateVisibility.call(_this);\n    _this.on(player, 'loadstart', updateVisibility);\n\n    _this.on(_this.volumeBar, ['slideractive', 'focus'], function () {\n      this.addClass('vjs-slider-active');\n    });\n\n    _this.on(_this.volumeBar, ['sliderinactive', 'blur'], function () {\n      this.removeClass('vjs-slider-active');\n    });\n\n    _this.on(_this.volumeBar, ['focus'], function () {\n      this.addClass('vjs-lock-showing');\n    });\n\n    _this.on(_this.volumeBar, ['blur'], function () {\n      this.removeClass('vjs-lock-showing');\n    });\n    return _this;\n  }\n\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n\n\n  VolumeMenuButton.prototype.buildCSSClass = function buildCSSClass() {\n    var orientationClass = '';\n\n    if (this.options_.vertical) {\n      orientationClass = 'vjs-volume-menu-button-vertical';\n    } else {\n      orientationClass = 'vjs-volume-menu-button-horizontal';\n    }\n\n    return 'vjs-volume-menu-button ' + _PopupButton.prototype.buildCSSClass.call(this) + ' ' + orientationClass;\n  };\n\n  /**\n   * Create the VolumeMenuButton popup\n   *\n   * @return {Popup}\n   *         The popup that was created\n   */\n\n\n  VolumeMenuButton.prototype.createPopup = function createPopup() {\n    var popup = new _popup2['default'](this.player_, {\n      contentElType: 'div'\n    });\n\n    var vb = new _volumeBar2['default'](this.player_, this.options_.volumeBar);\n\n    popup.addChild(vb);\n\n    this.menuContent = popup;\n    this.volumeBar = vb;\n\n    this.attachVolumeBarEvents();\n\n    return popup;\n  };\n\n  /**\n   * This gets called when an `VolumeMenuButton` is \"clicked\". See\n   * {@link ClickableComponent} for more detailed information on what a click can be.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   */\n\n\n  VolumeMenuButton.prototype.handleClick = function handleClick(event) {\n    _muteToggle2['default'].prototype.handleClick.call(this);\n    _PopupButton.prototype.handleClick.call(this);\n  };\n\n  /**\n   * Add events listeners to the created `VolumeBar`.\n   */\n\n\n  VolumeMenuButton.prototype.attachVolumeBarEvents = function attachVolumeBarEvents() {\n    this.menuContent.on(['mousedown', 'touchdown'], Fn.bind(this, this.handleMouseDown));\n  };\n\n  /**\n   * Handle the `mousedown` and `touchdown` events on the `VolumeBar`\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `mousedown` or `touchdown` event that caused this to run.\n   *\n   * @listens mousedown\n   * @listens touchdown\n   */\n\n\n  VolumeMenuButton.prototype.handleMouseDown = function handleMouseDown(event) {\n    this.on(['mousemove', 'touchmove'], Fn.bind(this.volumeBar, this.volumeBar.handleMouseMove));\n    this.on(this.el_.ownerDocument, ['mouseup', 'touchend'], this.handleMouseUp);\n  };\n\n  /**\n   * Handle the `mouseup` and `touchend` events on the `VolumeBar`\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `mouseup` or `touchend` event that caused this to run.\n   *\n   * @listens mouseup\n   * @listens touchend\n   */\n\n\n  VolumeMenuButton.prototype.handleMouseUp = function handleMouseUp(event) {\n    this.off(['mousemove', 'touchmove'], Fn.bind(this.volumeBar, this.volumeBar.handleMouseMove));\n  };\n\n  return VolumeMenuButton;\n}(_popupButton2['default']);\n\n/**\n * @borrows MuteToggle#update as VolumeMenuButton#volumeUpdate\n */\n\n\nVolumeMenuButton.prototype.volumeUpdate = _muteToggle2['default'].prototype.update;\n\n/**\n * The text that should display over the `VolumeMenuButton`s controls. Added for localization.\n *\n * @type {string}\n * @private\n */\nVolumeMenuButton.prototype.controlText_ = 'Mute';\n\n_component2['default'].registerComponent('VolumeMenuButton', VolumeMenuButton);\nexports['default'] = VolumeMenuButton;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/video.js/es5/control-bar/volume-menu-button.js\n ** module id = 83\n ** module chunks = 0 1\n **/","'use strict';\n\nexports.__esModule = true;\n\nvar _component = require('../component.js');\n\nvar _component2 = _interopRequireDefault(_component);\n\nvar _dom = require('../utils/dom.js');\n\nvar Dom = _interopRequireWildcard(_dom);\n\nvar _fn = require('../utils/fn.js');\n\nvar Fn = _interopRequireWildcard(_fn);\n\nvar _events = require('../utils/events.js');\n\nvar Events = _interopRequireWildcard(_events);\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj['default'] = obj; return newObj; } }\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /**\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * @file popup.js\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                */\n\n\n/**\n * The Popup component is used to build pop up controls.\n *\n * @extends Component\n */\nvar Popup = function (_Component) {\n  _inherits(Popup, _Component);\n\n  function Popup() {\n    _classCallCheck(this, Popup);\n\n    return _possibleConstructorReturn(this, _Component.apply(this, arguments));\n  }\n\n  /**\n   * Add a popup item to the popup\n   *\n   * @param {Object|string} component\n   *        Component or component type to add\n   *\n   */\n  Popup.prototype.addItem = function addItem(component) {\n    this.addChild(component);\n    component.on('click', Fn.bind(this, function () {\n      this.unlockShowing();\n    }));\n  };\n\n  /**\n   * Create the `PopupButton`s DOM element.\n   *\n   * @return {Element}\n   *         The element that gets created.\n   */\n\n\n  Popup.prototype.createEl = function createEl() {\n    var contentElType = this.options_.contentElType || 'ul';\n\n    this.contentEl_ = Dom.createEl(contentElType, {\n      className: 'vjs-menu-content'\n    });\n\n    var el = _Component.prototype.createEl.call(this, 'div', {\n      append: this.contentEl_,\n      className: 'vjs-menu'\n    });\n\n    el.appendChild(this.contentEl_);\n\n    // Prevent clicks from bubbling up. Needed for Popup Buttons,\n    // where a click on the parent is significant\n    Events.on(el, 'click', function (event) {\n      event.preventDefault();\n      event.stopImmediatePropagation();\n    });\n\n    return el;\n  };\n\n  return Popup;\n}(_component2['default']);\n\n_component2['default'].registerComponent('Popup', Popup);\nexports['default'] = Popup;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/video.js/es5/popup/popup.js\n ** module id = 84\n ** module chunks = 0 1\n **/","'use strict';\n\nexports.__esModule = true;\n\nvar _clickableComponent = require('../clickable-component.js');\n\nvar _clickableComponent2 = _interopRequireDefault(_clickableComponent);\n\nvar _component = require('../component.js');\n\nvar _component2 = _interopRequireDefault(_component);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /**\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * @file popup-button.js\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                */\n\n\n/**\n * A button class for use with {@link Popup} controls\n *\n * @extends ClickableComponent\n */\nvar PopupButton = function (_ClickableComponent) {\n  _inherits(PopupButton, _ClickableComponent);\n\n  /**\n   * Create an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function PopupButton(player) {\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n    _classCallCheck(this, PopupButton);\n\n    var _this = _possibleConstructorReturn(this, _ClickableComponent.call(this, player, options));\n\n    _this.update();\n    return _this;\n  }\n\n  /**\n   * Update the `Popup` that this button is attached to.\n   */\n\n\n  PopupButton.prototype.update = function update() {\n    var popup = this.createPopup();\n\n    if (this.popup) {\n      this.removeChild(this.popup);\n    }\n\n    this.popup = popup;\n    this.addChild(popup);\n\n    if (this.items && this.items.length === 0) {\n      this.hide();\n    } else if (this.items && this.items.length > 1) {\n      this.show();\n    }\n  };\n\n  /**\n   * Create a `Popup`. - Override with specific functionality for component\n   *\n   * @abstract\n   */\n\n\n  PopupButton.prototype.createPopup = function createPopup() {};\n\n  /**\n   * Create the `PopupButton`s DOM element.\n   *\n   * @return {Element}\n   *         The element that gets created.\n   */\n\n\n  PopupButton.prototype.createEl = function createEl() {\n    return _ClickableComponent.prototype.createEl.call(this, 'div', {\n      className: this.buildCSSClass()\n    });\n  };\n\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n\n\n  PopupButton.prototype.buildCSSClass = function buildCSSClass() {\n    var menuButtonClass = 'vjs-menu-button';\n\n    // If the inline option is passed, we want to use different styles altogether.\n    if (this.options_.inline === true) {\n      menuButtonClass += '-inline';\n    } else {\n      menuButtonClass += '-popup';\n    }\n\n    return 'vjs-menu-button ' + menuButtonClass + ' ' + _ClickableComponent.prototype.buildCSSClass.call(this);\n  };\n\n  return PopupButton;\n}(_clickableComponent2['default']);\n\n_component2['default'].registerComponent('PopupButton', PopupButton);\nexports['default'] = PopupButton;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/video.js/es5/popup/popup-button.js\n ** module id = 85\n ** module chunks = 0 1\n **/","'use strict';\n\nexports.__esModule = true;\n\nvar _button = require('../button');\n\nvar _button2 = _interopRequireDefault(_button);\n\nvar _component = require('../component');\n\nvar _component2 = _interopRequireDefault(_component);\n\nvar _dom = require('../utils/dom.js');\n\nvar Dom = _interopRequireWildcard(_dom);\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj['default'] = obj; return newObj; } }\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /**\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * @file mute-toggle.js\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                */\n\n\n/**\n * A button component for muting the audio.\n *\n * @extends Button\n */\nvar MuteToggle = function (_Button) {\n  _inherits(MuteToggle, _Button);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function MuteToggle(player, options) {\n    _classCallCheck(this, MuteToggle);\n\n    var _this = _possibleConstructorReturn(this, _Button.call(this, player, options));\n\n    _this.on(player, 'volumechange', _this.update);\n\n    // hide mute toggle if the current tech doesn't support volume control\n    if (player.tech_ && player.tech_.featuresVolumeControl === false) {\n      _this.addClass('vjs-hidden');\n    }\n\n    _this.on(player, 'loadstart', function () {\n      // We need to update the button to account for a default muted state.\n      this.update();\n\n      if (player.tech_.featuresVolumeControl === false) {\n        this.addClass('vjs-hidden');\n      } else {\n        this.removeClass('vjs-hidden');\n      }\n    });\n    return _this;\n  }\n\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n\n\n  MuteToggle.prototype.buildCSSClass = function buildCSSClass() {\n    return 'vjs-mute-control ' + _Button.prototype.buildCSSClass.call(this);\n  };\n\n  /**\n   * This gets called when an `MuteToggle` is \"clicked\". See\n   * {@link ClickableComponent} for more detailed information on what a click can be.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   */\n\n\n  MuteToggle.prototype.handleClick = function handleClick(event) {\n    this.player_.muted(this.player_.muted() ? false : true);\n  };\n\n  /**\n   * Update the state of volume.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The {@link Player#loadstart} event if this function was called through an\n   *        event.\n   *\n   * @listens Player#loadstart\n   */\n\n\n  MuteToggle.prototype.update = function update(event) {\n    var vol = this.player_.volume();\n    var level = 3;\n\n    if (vol === 0 || this.player_.muted()) {\n      level = 0;\n    } else if (vol < 0.33) {\n      level = 1;\n    } else if (vol < 0.67) {\n      level = 2;\n    }\n\n    // Don't rewrite the button text if the actual text doesn't change.\n    // This causes unnecessary and confusing information for screen reader users.\n    // This check is needed because this function gets called every time the volume level is changed.\n    var toMute = this.player_.muted() ? 'Unmute' : 'Mute';\n\n    if (this.controlText() !== toMute) {\n      this.controlText(toMute);\n    }\n\n    // TODO improve muted icon classes\n    for (var i = 0; i < 4; i++) {\n      Dom.removeElClass(this.el_, 'vjs-vol-' + i);\n    }\n    Dom.addElClass(this.el_, 'vjs-vol-' + level);\n  };\n\n  return MuteToggle;\n}(_button2['default']);\n\n/**\n * The text that should display over the `MuteToggle`s controls. Added for localization.\n *\n * @type {string}\n * @private\n */\n\n\nMuteToggle.prototype.controlText_ = 'Mute';\n\n_component2['default'].registerComponent('MuteToggle', MuteToggle);\nexports['default'] = MuteToggle;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/video.js/es5/control-bar/mute-toggle.js\n ** module id = 86\n ** module chunks = 0 1\n **/","'use strict';\n\nexports.__esModule = true;\n\nvar _textTrackButton = require('./text-track-button.js');\n\nvar _textTrackButton2 = _interopRequireDefault(_textTrackButton);\n\nvar _component = require('../../component.js');\n\nvar _component2 = _interopRequireDefault(_component);\n\nvar _chaptersTrackMenuItem = require('./chapters-track-menu-item.js');\n\nvar _chaptersTrackMenuItem2 = _interopRequireDefault(_chaptersTrackMenuItem);\n\nvar _toTitleCase = require('../../utils/to-title-case.js');\n\nvar _toTitleCase2 = _interopRequireDefault(_toTitleCase);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /**\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * @file chapters-button.js\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                */\n\n\n/**\n * The button component for toggling and selecting chapters\n * Chapters act much differently than other text tracks\n * Cues are navigation vs. other tracks of alternative languages\n *\n * @extends TextTrackButton\n */\nvar ChaptersButton = function (_TextTrackButton) {\n  _inherits(ChaptersButton, _TextTrackButton);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   *\n   * @param {Component~ReadyCallback} [ready]\n   *        The function to call when this function is ready.\n   */\n  function ChaptersButton(player, options, ready) {\n    _classCallCheck(this, ChaptersButton);\n\n    var _this = _possibleConstructorReturn(this, _TextTrackButton.call(this, player, options, ready));\n\n    _this.el_.setAttribute('aria-label', 'Chapters Menu');\n    return _this;\n  }\n\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n\n\n  ChaptersButton.prototype.buildCSSClass = function buildCSSClass() {\n    return 'vjs-chapters-button ' + _TextTrackButton.prototype.buildCSSClass.call(this);\n  };\n\n  /**\n   * Update the menu based on the current state of its items.\n   *\n   * @param {EventTarget~Event} [event]\n   *        An event that triggered this function to run.\n   *\n   * @listens TextTrackList#addtrack\n   * @listens TextTrackList#removetrack\n   * @listens TextTrackList#change\n   */\n\n\n  ChaptersButton.prototype.update = function update(event) {\n    if (!this.track_ || event && (event.type === 'addtrack' || event.type === 'removetrack')) {\n      this.setTrack(this.findChaptersTrack());\n    }\n    _TextTrackButton.prototype.update.call(this);\n  };\n\n  /**\n   * Set the currently selected track for the chapters button.\n   *\n   * @param {TextTrack} track\n   *        The new track to select. Nothing will change if this is the currently selected\n   *        track.\n   */\n\n\n  ChaptersButton.prototype.setTrack = function setTrack(track) {\n    if (this.track_ === track) {\n      return;\n    }\n\n    if (!this.updateHandler_) {\n      this.updateHandler_ = this.update.bind(this);\n    }\n\n    // here this.track_ refers to the old track instance\n    if (this.track_) {\n      var remoteTextTrackEl = this.player_.remoteTextTrackEls().getTrackElementByTrack_(this.track_);\n\n      if (remoteTextTrackEl) {\n        remoteTextTrackEl.removeEventListener('load', this.updateHandler_);\n      }\n\n      this.track_ = null;\n    }\n\n    this.track_ = track;\n\n    // here this.track_ refers to the new track instance\n    if (this.track_) {\n      this.track_.mode = 'hidden';\n\n      var _remoteTextTrackEl = this.player_.remoteTextTrackEls().getTrackElementByTrack_(this.track_);\n\n      if (_remoteTextTrackEl) {\n        _remoteTextTrackEl.addEventListener('load', this.updateHandler_);\n      }\n    }\n  };\n\n  /**\n   * Find the track object that is currently in use by this ChaptersButton\n   *\n   * @return {TextTrack|undefined}\n   *         The current track or undefined if none was found.\n   */\n\n\n  ChaptersButton.prototype.findChaptersTrack = function findChaptersTrack() {\n    var tracks = this.player_.textTracks() || [];\n\n    for (var i = tracks.length - 1; i >= 0; i--) {\n      // We will always choose the last track as our chaptersTrack\n      var track = tracks[i];\n\n      if (track.kind === this.kind_) {\n        return track;\n      }\n    }\n  };\n\n  /**\n   * Get the caption for the ChaptersButton based on the track label. This will also\n   * use the current tracks localized kind as a fallback if a label does not exist.\n   *\n   * @return {string}\n   *         The tracks current label or the localized track kind.\n   */\n\n\n  ChaptersButton.prototype.getMenuCaption = function getMenuCaption() {\n    if (this.track_ && this.track_.label) {\n      return this.track_.label;\n    }\n    return this.localize((0, _toTitleCase2['default'])(this.kind_));\n  };\n\n  /**\n   * Create menu from chapter track\n   *\n   * @return {Menu}\n   *         New menu for the chapter buttons\n   */\n\n\n  ChaptersButton.prototype.createMenu = function createMenu() {\n    this.options_.title = this.getMenuCaption();\n    return _TextTrackButton.prototype.createMenu.call(this);\n  };\n\n  /**\n   * Create a menu item for each text track\n   *\n   * @return {TextTrackMenuItem[]}\n   *         Array of menu items\n   */\n\n\n  ChaptersButton.prototype.createItems = function createItems() {\n    var items = [];\n\n    if (!this.track_) {\n      return items;\n    }\n\n    var cues = this.track_.cues;\n\n    if (!cues) {\n      return items;\n    }\n\n    for (var i = 0, l = cues.length; i < l; i++) {\n      var cue = cues[i];\n      var mi = new _chaptersTrackMenuItem2['default'](this.player_, { track: this.track_, cue: cue });\n\n      items.push(mi);\n    }\n\n    return items;\n  };\n\n  return ChaptersButton;\n}(_textTrackButton2['default']);\n\n/**\n * `kind` of TextTrack to look for to associate it with this menu.\n *\n * @type {string}\n * @private\n */\n\n\nChaptersButton.prototype.kind_ = 'chapters';\n\n/**\n * The text that should display over the `ChaptersButton`s controls. Added for localization.\n *\n * @type {string}\n * @private\n */\nChaptersButton.prototype.controlText_ = 'Chapters';\n\n_component2['default'].registerComponent('ChaptersButton', ChaptersButton);\nexports['default'] = ChaptersButton;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/video.js/es5/control-bar/text-track-controls/chapters-button.js\n ** module id = 87\n ** module chunks = 0 1\n **/","'use strict';\n\nexports.__esModule = true;\n\nvar _trackButton = require('../track-button.js');\n\nvar _trackButton2 = _interopRequireDefault(_trackButton);\n\nvar _component = require('../../component.js');\n\nvar _component2 = _interopRequireDefault(_component);\n\nvar _textTrackMenuItem = require('./text-track-menu-item.js');\n\nvar _textTrackMenuItem2 = _interopRequireDefault(_textTrackMenuItem);\n\nvar _offTextTrackMenuItem = require('./off-text-track-menu-item.js');\n\nvar _offTextTrackMenuItem2 = _interopRequireDefault(_offTextTrackMenuItem);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /**\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * @file text-track-button.js\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                */\n\n\n/**\n * The base class for buttons that toggle specific text track types (e.g. subtitles)\n *\n * @extends MenuButton\n */\nvar TextTrackButton = function (_TrackButton) {\n  _inherits(TextTrackButton, _TrackButton);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options={}]\n   *        The key/value store of player options.\n   */\n  function TextTrackButton(player) {\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n    _classCallCheck(this, TextTrackButton);\n\n    options.tracks = player.textTracks();\n\n    return _possibleConstructorReturn(this, _TrackButton.call(this, player, options));\n  }\n\n  /**\n   * Create a menu item for each text track\n   *\n   * @param {TextTrackMenuItem[]} [items=[]]\n   *        Existing array of items to use during creation\n   *\n   * @return {TextTrackMenuItem[]}\n   *         Array of menu items that were created\n   */\n\n\n  TextTrackButton.prototype.createItems = function createItems() {\n    var items = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n\n    // Add an OFF menu item to turn all tracks off\n    items.push(new _offTextTrackMenuItem2['default'](this.player_, { kind: this.kind_ }));\n\n    var tracks = this.player_.textTracks();\n\n    if (!tracks) {\n      return items;\n    }\n\n    for (var i = 0; i < tracks.length; i++) {\n      var track = tracks[i];\n\n      // only add tracks that are of the appropriate kind and have a label\n      if (track.kind === this.kind_) {\n        items.push(new _textTrackMenuItem2['default'](this.player_, {\n          track: track,\n          // MenuItem is selectable\n          selectable: true\n        }));\n      }\n    }\n\n    return items;\n  };\n\n  return TextTrackButton;\n}(_trackButton2['default']);\n\n_component2['default'].registerComponent('TextTrackButton', TextTrackButton);\nexports['default'] = TextTrackButton;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/video.js/es5/control-bar/text-track-controls/text-track-button.js\n ** module id = 88\n ** module chunks = 0 1\n **/","'use strict';\n\nexports.__esModule = true;\n\nvar _menuButton = require('../menu/menu-button.js');\n\nvar _menuButton2 = _interopRequireDefault(_menuButton);\n\nvar _component = require('../component.js');\n\nvar _component2 = _interopRequireDefault(_component);\n\nvar _fn = require('../utils/fn.js');\n\nvar Fn = _interopRequireWildcard(_fn);\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj['default'] = obj; return newObj; } }\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /**\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * @file track-button.js\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                */\n\n\n/**\n * The base class for buttons that toggle specific  track types (e.g. subtitles).\n *\n * @extends MenuButton\n */\nvar TrackButton = function (_MenuButton) {\n  _inherits(TrackButton, _MenuButton);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function TrackButton(player, options) {\n    _classCallCheck(this, TrackButton);\n\n    var tracks = options.tracks;\n\n    var _this = _possibleConstructorReturn(this, _MenuButton.call(this, player, options));\n\n    if (_this.items.length <= 1) {\n      _this.hide();\n    }\n\n    if (!tracks) {\n      return _possibleConstructorReturn(_this);\n    }\n\n    var updateHandler = Fn.bind(_this, _this.update);\n\n    tracks.addEventListener('removetrack', updateHandler);\n    tracks.addEventListener('addtrack', updateHandler);\n\n    _this.player_.on('dispose', function () {\n      tracks.removeEventListener('removetrack', updateHandler);\n      tracks.removeEventListener('addtrack', updateHandler);\n    });\n    return _this;\n  }\n\n  return TrackButton;\n}(_menuButton2['default']);\n\n_component2['default'].registerComponent('TrackButton', TrackButton);\nexports['default'] = TrackButton;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/video.js/es5/control-bar/track-button.js\n ** module id = 89\n ** module chunks = 0 1\n **/","'use strict';\n\nexports.__esModule = true;\n\nvar _clickableComponent = require('../clickable-component.js');\n\nvar _clickableComponent2 = _interopRequireDefault(_clickableComponent);\n\nvar _component = require('../component.js');\n\nvar _component2 = _interopRequireDefault(_component);\n\nvar _menu = require('./menu.js');\n\nvar _menu2 = _interopRequireDefault(_menu);\n\nvar _dom = require('../utils/dom.js');\n\nvar Dom = _interopRequireWildcard(_dom);\n\nvar _fn = require('../utils/fn.js');\n\nvar Fn = _interopRequireWildcard(_fn);\n\nvar _toTitleCase = require('../utils/to-title-case.js');\n\nvar _toTitleCase2 = _interopRequireDefault(_toTitleCase);\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj['default'] = obj; return newObj; } }\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /**\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * @file menu-button.js\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                */\n\n\n/**\n * A `MenuButton` class for any popup {@link Menu}.\n *\n * @extends ClickableComponent\n */\nvar MenuButton = function (_ClickableComponent) {\n  _inherits(MenuButton, _ClickableComponent);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options={}]\n   *        The key/value store of player options.\n   */\n  function MenuButton(player) {\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n    _classCallCheck(this, MenuButton);\n\n    var _this = _possibleConstructorReturn(this, _ClickableComponent.call(this, player, options));\n\n    _this.update();\n\n    _this.enabled_ = true;\n\n    _this.el_.setAttribute('aria-haspopup', 'true');\n    _this.el_.setAttribute('role', 'menuitem');\n    _this.on('keydown', _this.handleSubmenuKeyPress);\n    return _this;\n  }\n\n  /**\n   * Update the menu based on the current state of its items.\n   */\n\n\n  MenuButton.prototype.update = function update() {\n    var menu = this.createMenu();\n\n    if (this.menu) {\n      this.removeChild(this.menu);\n    }\n\n    this.menu = menu;\n    this.addChild(menu);\n\n    /**\n     * Track the state of the menu button\n     *\n     * @type {Boolean}\n     * @private\n     */\n    this.buttonPressed_ = false;\n    this.el_.setAttribute('aria-expanded', 'false');\n\n    if (this.items && this.items.length === 0) {\n      this.hide();\n    } else if (this.items && this.items.length > 1) {\n      this.show();\n    }\n  };\n\n  /**\n   * Create the menu and add all items to it.\n   *\n   * @return {Menu}\n   *         The constructed menu\n   */\n\n\n  MenuButton.prototype.createMenu = function createMenu() {\n    var menu = new _menu2['default'](this.player_);\n\n    // Add a title list item to the top\n    if (this.options_.title) {\n      var title = Dom.createEl('li', {\n        className: 'vjs-menu-title',\n        innerHTML: (0, _toTitleCase2['default'])(this.options_.title),\n        tabIndex: -1\n      });\n\n      menu.children_.unshift(title);\n      Dom.insertElFirst(title, menu.contentEl());\n    }\n\n    this.items = this.createItems();\n\n    if (this.items) {\n      // Add menu items to the menu\n      for (var i = 0; i < this.items.length; i++) {\n        menu.addItem(this.items[i]);\n      }\n    }\n\n    return menu;\n  };\n\n  /**\n   * Create the list of menu items. Specific to each subclass.\n   *\n   * @abstract\n   */\n\n\n  MenuButton.prototype.createItems = function createItems() {};\n\n  /**\n   * Create the `MenuButtons`s DOM element.\n   *\n   * @return {Element}\n   *         The element that gets created.\n   */\n\n\n  MenuButton.prototype.createEl = function createEl() {\n    return _ClickableComponent.prototype.createEl.call(this, 'div', {\n      className: this.buildCSSClass()\n    });\n  };\n\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n\n\n  MenuButton.prototype.buildCSSClass = function buildCSSClass() {\n    var menuButtonClass = 'vjs-menu-button';\n\n    // If the inline option is passed, we want to use different styles altogether.\n    if (this.options_.inline === true) {\n      menuButtonClass += '-inline';\n    } else {\n      menuButtonClass += '-popup';\n    }\n\n    return 'vjs-menu-button ' + menuButtonClass + ' ' + _ClickableComponent.prototype.buildCSSClass.call(this);\n  };\n\n  /**\n   * Handle a click on a `MenuButton`.\n   * See {@link ClickableComponent#handleClick} for instances where this is called.\n   *\n   * @param {EventTarget~Event} event\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   */\n\n\n  MenuButton.prototype.handleClick = function handleClick(event) {\n    // When you click the button it adds focus, which will show the menu.\n    // So we'll remove focus when the mouse leaves the button. Focus is needed\n    // for tab navigation.\n\n    this.one(this.menu.contentEl(), 'mouseleave', Fn.bind(this, function (e) {\n      this.unpressButton();\n      this.el_.blur();\n    }));\n    if (this.buttonPressed_) {\n      this.unpressButton();\n    } else {\n      this.pressButton();\n    }\n  };\n\n  /**\n   * Handle tab, escape, down arrow, and up arrow keys for `MenuButton`. See\n   * {@link ClickableComponent#handleKeyPress} for instances where this is called.\n   *\n   * @param {EventTarget~Event} event\n   *        The `keydown` event that caused this function to be called.\n   *\n   * @listens keydown\n   */\n\n\n  MenuButton.prototype.handleKeyPress = function handleKeyPress(event) {\n\n    // Escape (27) key or Tab (9) key unpress the 'button'\n    if (event.which === 27 || event.which === 9) {\n      if (this.buttonPressed_) {\n        this.unpressButton();\n      }\n      // Don't preventDefault for Tab key - we still want to lose focus\n      if (event.which !== 9) {\n        event.preventDefault();\n      }\n      // Up (38) key or Down (40) key press the 'button'\n    } else if (event.which === 38 || event.which === 40) {\n      if (!this.buttonPressed_) {\n        this.pressButton();\n        event.preventDefault();\n      }\n    } else {\n      _ClickableComponent.prototype.handleKeyPress.call(this, event);\n    }\n  };\n\n  /**\n   * Handle a `keydown` event on a sub-menu. The listener for this is added in\n   * the constructor.\n   *\n   * @param {EventTarget~Event} event\n   *        Key press event\n   *\n   * @listens keydown\n   */\n\n\n  MenuButton.prototype.handleSubmenuKeyPress = function handleSubmenuKeyPress(event) {\n\n    // Escape (27) key or Tab (9) key unpress the 'button'\n    if (event.which === 27 || event.which === 9) {\n      if (this.buttonPressed_) {\n        this.unpressButton();\n      }\n      // Don't preventDefault for Tab key - we still want to lose focus\n      if (event.which !== 9) {\n        event.preventDefault();\n      }\n    }\n  };\n\n  /**\n   * Put the current `MenuButton` into a pressed state.\n   */\n\n\n  MenuButton.prototype.pressButton = function pressButton() {\n    if (this.enabled_) {\n      this.buttonPressed_ = true;\n      this.menu.lockShowing();\n      this.el_.setAttribute('aria-expanded', 'true');\n      // set the focus into the submenu\n      this.menu.focus();\n    }\n  };\n\n  /**\n   * Take the current `MenuButton` out of a pressed state.\n   */\n\n\n  MenuButton.prototype.unpressButton = function unpressButton() {\n    if (this.enabled_) {\n      this.buttonPressed_ = false;\n      this.menu.unlockShowing();\n      this.el_.setAttribute('aria-expanded', 'false');\n      // Set focus back to this menu button\n      this.el_.focus();\n    }\n  };\n\n  /**\n   * Disable the `MenuButton`. Don't allow it to be clicked.\n   *\n   * @return {MenuButton}\n   *         Returns itself; method can be chained.\n   */\n\n\n  MenuButton.prototype.disable = function disable() {\n    // Unpress, but don't force focus on this button\n    this.buttonPressed_ = false;\n    this.menu.unlockShowing();\n    this.el_.setAttribute('aria-expanded', 'false');\n\n    this.enabled_ = false;\n\n    return _ClickableComponent.prototype.disable.call(this);\n  };\n\n  /**\n   * Enable the `MenuButton`. Allow it to be clicked.\n   *\n   * @return {MenuButton}\n   *         Returns itself; method can be chained.\n   */\n\n\n  MenuButton.prototype.enable = function enable() {\n    this.enabled_ = true;\n\n    return _ClickableComponent.prototype.enable.call(this);\n  };\n\n  return MenuButton;\n}(_clickableComponent2['default']);\n\n_component2['default'].registerComponent('MenuButton', MenuButton);\nexports['default'] = MenuButton;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/video.js/es5/menu/menu-button.js\n ** module id = 90\n ** module chunks = 0 1\n **/","'use strict';\n\nexports.__esModule = true;\n\nvar _component = require('../component.js');\n\nvar _component2 = _interopRequireDefault(_component);\n\nvar _dom = require('../utils/dom.js');\n\nvar Dom = _interopRequireWildcard(_dom);\n\nvar _fn = require('../utils/fn.js');\n\nvar Fn = _interopRequireWildcard(_fn);\n\nvar _events = require('../utils/events.js');\n\nvar Events = _interopRequireWildcard(_events);\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj['default'] = obj; return newObj; } }\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /**\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * @file menu.js\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                */\n\n\n/**\n * The Menu component is used to build popup menus, including subtitle and\n * captions selection menus.\n *\n * @extends Component\n */\nvar Menu = function (_Component) {\n  _inherits(Menu, _Component);\n\n  /**\n   * Create an instance of this class.\n   *\n   * @param {Player} player\n   *        the player that this component should attach to\n   *\n   * @param {Object} [options]\n   *        Object of option names and values\n   *\n   */\n  function Menu(player, options) {\n    _classCallCheck(this, Menu);\n\n    var _this = _possibleConstructorReturn(this, _Component.call(this, player, options));\n\n    _this.focusedChild_ = -1;\n\n    _this.on('keydown', _this.handleKeyPress);\n    return _this;\n  }\n\n  /**\n   * Add a {@link MenuItem} to the menu.\n   *\n   * @param {Object|string} component\n   *        The name or instance of the `MenuItem` to add.\n   *\n   */\n\n\n  Menu.prototype.addItem = function addItem(component) {\n    this.addChild(component);\n    component.on('click', Fn.bind(this, function (event) {\n      this.unlockShowing();\n      // TODO: Need to set keyboard focus back to the menuButton\n    }));\n  };\n\n  /**\n   * Create the `Menu`s DOM element.\n   *\n   * @return {Element}\n   *         the element that was created\n   */\n\n\n  Menu.prototype.createEl = function createEl() {\n    var contentElType = this.options_.contentElType || 'ul';\n\n    this.contentEl_ = Dom.createEl(contentElType, {\n      className: 'vjs-menu-content'\n    });\n\n    this.contentEl_.setAttribute('role', 'menu');\n\n    var el = _Component.prototype.createEl.call(this, 'div', {\n      append: this.contentEl_,\n      className: 'vjs-menu'\n    });\n\n    el.setAttribute('role', 'presentation');\n    el.appendChild(this.contentEl_);\n\n    // Prevent clicks from bubbling up. Needed for Menu Buttons,\n    // where a click on the parent is significant\n    Events.on(el, 'click', function (event) {\n      event.preventDefault();\n      event.stopImmediatePropagation();\n    });\n\n    return el;\n  };\n\n  /**\n   * Handle a `keydown` event on this menu. This listener is added in the constructor.\n   *\n   * @param {EventTarget~Event} event\n   *        A `keydown` event that happened on the menu.\n   *\n   * @listens keydown\n   */\n\n\n  Menu.prototype.handleKeyPress = function handleKeyPress(event) {\n    // Left and Down Arrows\n    if (event.which === 37 || event.which === 40) {\n      event.preventDefault();\n      this.stepForward();\n\n      // Up and Right Arrows\n    } else if (event.which === 38 || event.which === 39) {\n      event.preventDefault();\n      this.stepBack();\n    }\n  };\n\n  /**\n   * Move to next (lower) menu item for keyboard users.\n   */\n\n\n  Menu.prototype.stepForward = function stepForward() {\n    var stepChild = 0;\n\n    if (this.focusedChild_ !== undefined) {\n      stepChild = this.focusedChild_ + 1;\n    }\n    this.focus(stepChild);\n  };\n\n  /**\n   * Move to previous (higher) menu item for keyboard users.\n   */\n\n\n  Menu.prototype.stepBack = function stepBack() {\n    var stepChild = 0;\n\n    if (this.focusedChild_ !== undefined) {\n      stepChild = this.focusedChild_ - 1;\n    }\n    this.focus(stepChild);\n  };\n\n  /**\n   * Set focus on a {@link MenuItem} in the `Menu`.\n   *\n   * @param {Object|string} [item=0]\n   *        Index of child item set focus on.\n   */\n\n\n  Menu.prototype.focus = function focus() {\n    var item = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n\n    var children = this.children().slice();\n    var haveTitle = children.length && children[0].className && /vjs-menu-title/.test(children[0].className);\n\n    if (haveTitle) {\n      children.shift();\n    }\n\n    if (children.length > 0) {\n      if (item < 0) {\n        item = 0;\n      } else if (item >= children.length) {\n        item = children.length - 1;\n      }\n\n      this.focusedChild_ = item;\n\n      children[item].el_.focus();\n    }\n  };\n\n  return Menu;\n}(_component2['default']);\n\n_component2['default'].registerComponent('Menu', Menu);\nexports['default'] = Menu;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/video.js/es5/menu/menu.js\n ** module id = 91\n ** module chunks = 0 1\n **/","'use strict';\n\nexports.__esModule = true;\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nvar _menuItem = require('../../menu/menu-item.js');\n\nvar _menuItem2 = _interopRequireDefault(_menuItem);\n\nvar _component = require('../../component.js');\n\nvar _component2 = _interopRequireDefault(_component);\n\nvar _fn = require('../../utils/fn.js');\n\nvar Fn = _interopRequireWildcard(_fn);\n\nvar _window = require('global/window');\n\nvar _window2 = _interopRequireDefault(_window);\n\nvar _document = require('global/document');\n\nvar _document2 = _interopRequireDefault(_document);\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj['default'] = obj; return newObj; } }\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /**\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * @file text-track-menu-item.js\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                */\n\n\n/**\n * The specific menu item type for selecting a language within a text track kind\n *\n * @extends MenuItem\n */\nvar TextTrackMenuItem = function (_MenuItem) {\n  _inherits(TextTrackMenuItem, _MenuItem);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function TextTrackMenuItem(player, options) {\n    _classCallCheck(this, TextTrackMenuItem);\n\n    var track = options.track;\n    var tracks = player.textTracks();\n\n    // Modify options for parent MenuItem class's init.\n    options.label = track.label || track.language || 'Unknown';\n    options.selected = track['default'] || track.mode === 'showing';\n\n    var _this = _possibleConstructorReturn(this, _MenuItem.call(this, player, options));\n\n    _this.track = track;\n\n    if (tracks) {\n      (function () {\n        var changeHandler = Fn.bind(_this, _this.handleTracksChange);\n\n        tracks.addEventListener('change', changeHandler);\n        _this.on('dispose', function () {\n          tracks.removeEventListener('change', changeHandler);\n        });\n      })();\n    }\n\n    // iOS7 doesn't dispatch change events to TextTrackLists when an\n    // associated track's mode changes. Without something like\n    // Object.observe() (also not present on iOS7), it's not\n    // possible to detect changes to the mode attribute and polyfill\n    // the change event. As a poor substitute, we manually dispatch\n    // change events whenever the controls modify the mode.\n    if (tracks && tracks.onchange === undefined) {\n      (function () {\n        var event = void 0;\n\n        _this.on(['tap', 'click'], function () {\n          if (_typeof(_window2['default'].Event) !== 'object') {\n            // Android 2.3 throws an Illegal Constructor error for window.Event\n            try {\n              event = new _window2['default'].Event('change');\n            } catch (err) {\n              // continue regardless of error\n            }\n          }\n\n          if (!event) {\n            event = _document2['default'].createEvent('Event');\n            event.initEvent('change', true, true);\n          }\n\n          tracks.dispatchEvent(event);\n        });\n      })();\n    }\n    return _this;\n  }\n\n  /**\n   * This gets called when an `TextTrackMenuItem` is \"clicked\". See\n   * {@link ClickableComponent} for more detailed information on what a click can be.\n   *\n   * @param {EventTarget~Event} event\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   */\n\n\n  TextTrackMenuItem.prototype.handleClick = function handleClick(event) {\n    var kind = this.track.kind;\n    var tracks = this.player_.textTracks();\n\n    _MenuItem.prototype.handleClick.call(this, event);\n\n    if (!tracks) {\n      return;\n    }\n\n    for (var i = 0; i < tracks.length; i++) {\n      var track = tracks[i];\n\n      if (track.kind !== kind) {\n        continue;\n      }\n\n      if (track === this.track) {\n        track.mode = 'showing';\n      } else {\n        track.mode = 'disabled';\n      }\n    }\n  };\n\n  /**\n   * Handle text track list change\n   *\n   * @param {EventTarget~Event} event\n   *        The `change` event that caused this function to be called.\n   *\n   * @listens TextTrackList#change\n   */\n\n\n  TextTrackMenuItem.prototype.handleTracksChange = function handleTracksChange(event) {\n    this.selected(this.track.mode === 'showing');\n  };\n\n  return TextTrackMenuItem;\n}(_menuItem2['default']);\n\n_component2['default'].registerComponent('TextTrackMenuItem', TextTrackMenuItem);\nexports['default'] = TextTrackMenuItem;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/video.js/es5/control-bar/text-track-controls/text-track-menu-item.js\n ** module id = 92\n ** module chunks = 0 1\n **/","'use strict';\n\nexports.__esModule = true;\n\nvar _clickableComponent = require('../clickable-component.js');\n\nvar _clickableComponent2 = _interopRequireDefault(_clickableComponent);\n\nvar _component = require('../component.js');\n\nvar _component2 = _interopRequireDefault(_component);\n\nvar _obj = require('../utils/obj');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /**\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * @file menu-item.js\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                */\n\n\n/**\n * The component for a menu item. `<li>`\n *\n * @extends ClickableComponent\n */\nvar MenuItem = function (_ClickableComponent) {\n  _inherits(MenuItem, _ClickableComponent);\n\n  /**\n   * Creates an instance of the this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options={}]\n   *        The key/value store of player options.\n   *\n   */\n  function MenuItem(player, options) {\n    _classCallCheck(this, MenuItem);\n\n    var _this = _possibleConstructorReturn(this, _ClickableComponent.call(this, player, options));\n\n    _this.selectable = options.selectable;\n\n    _this.selected(options.selected);\n\n    if (_this.selectable) {\n      // TODO: May need to be either menuitemcheckbox or menuitemradio,\n      //       and may need logical grouping of menu items.\n      _this.el_.setAttribute('role', 'menuitemcheckbox');\n    } else {\n      _this.el_.setAttribute('role', 'menuitem');\n    }\n    return _this;\n  }\n\n  /**\n   * Create the `MenuItem's DOM element\n   *\n   * @param {string} [type=li]\n   *        Element's node type, not actually used, always set to `li`.\n   *\n   * @param {Object} [props={}]\n   *        An object of properties that should be set on the element\n   *\n   * @param {Object} [attrs={}]\n   *        An object of attributes that should be set on the element\n   *\n   * @return {Element}\n   *         The element that gets created.\n   */\n\n\n  MenuItem.prototype.createEl = function createEl(type, props, attrs) {\n    // The control is textual, not just an icon\n    this.nonIconControl = true;\n\n    return _ClickableComponent.prototype.createEl.call(this, 'li', (0, _obj.assign)({\n      className: 'vjs-menu-item',\n      innerHTML: this.localize(this.options_.label),\n      tabIndex: -1\n    }, props), attrs);\n  };\n\n  /**\n   * Any click on a `MenuItem` puts int into the selected state.\n   * See {@link ClickableComponent#handleClick} for instances where this is called.\n   *\n   * @param {EventTarget~Event} event\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   */\n\n\n  MenuItem.prototype.handleClick = function handleClick(event) {\n    this.selected(true);\n  };\n\n  /**\n   * Set the state for this menu item as selected or not.\n   *\n   * @param {boolean} selected\n   *        if the menu item is selected or not\n   */\n\n\n  MenuItem.prototype.selected = function selected(_selected) {\n    if (this.selectable) {\n      if (_selected) {\n        this.addClass('vjs-selected');\n        this.el_.setAttribute('aria-checked', 'true');\n        // aria-checked isn't fully supported by browsers/screen readers,\n        // so indicate selected state to screen reader in the control text.\n        this.controlText(', selected');\n      } else {\n        this.removeClass('vjs-selected');\n        this.el_.setAttribute('aria-checked', 'false');\n        // Indicate un-selected state to screen reader\n        // Note that a space clears out the selected state text\n        this.controlText(' ');\n      }\n    }\n  };\n\n  return MenuItem;\n}(_clickableComponent2['default']);\n\n_component2['default'].registerComponent('MenuItem', MenuItem);\nexports['default'] = MenuItem;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/video.js/es5/menu/menu-item.js\n ** module id = 93\n ** module chunks = 0 1\n **/","'use strict';\n\nexports.__esModule = true;\n\nvar _textTrackMenuItem = require('./text-track-menu-item.js');\n\nvar _textTrackMenuItem2 = _interopRequireDefault(_textTrackMenuItem);\n\nvar _component = require('../../component.js');\n\nvar _component2 = _interopRequireDefault(_component);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /**\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * @file off-text-track-menu-item.js\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                */\n\n\n/**\n * A special menu item for turning of a specific type of text track\n *\n * @extends TextTrackMenuItem\n */\nvar OffTextTrackMenuItem = function (_TextTrackMenuItem) {\n  _inherits(OffTextTrackMenuItem, _TextTrackMenuItem);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function OffTextTrackMenuItem(player, options) {\n    _classCallCheck(this, OffTextTrackMenuItem);\n\n    // Create pseudo track info\n    // Requires options['kind']\n    options.track = {\n      player: player,\n      kind: options.kind,\n      label: options.kind + ' off',\n      'default': false,\n      mode: 'disabled'\n    };\n\n    // MenuItem is selectable\n    options.selectable = true;\n\n    var _this = _possibleConstructorReturn(this, _TextTrackMenuItem.call(this, player, options));\n\n    _this.selected(true);\n    return _this;\n  }\n\n  /**\n   * Handle text track change\n   *\n   * @param {EventTarget~Event} event\n   *        The event that caused this function to run\n   */\n\n\n  OffTextTrackMenuItem.prototype.handleTracksChange = function handleTracksChange(event) {\n    var tracks = this.player().textTracks();\n    var selected = true;\n\n    for (var i = 0, l = tracks.length; i < l; i++) {\n      var track = tracks[i];\n\n      if (track.kind === this.track.kind && track.mode === 'showing') {\n        selected = false;\n        break;\n      }\n    }\n\n    this.selected(selected);\n  };\n\n  return OffTextTrackMenuItem;\n}(_textTrackMenuItem2['default']);\n\n_component2['default'].registerComponent('OffTextTrackMenuItem', OffTextTrackMenuItem);\nexports['default'] = OffTextTrackMenuItem;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/video.js/es5/control-bar/text-track-controls/off-text-track-menu-item.js\n ** module id = 94\n ** module chunks = 0 1\n **/","'use strict';\n\nexports.__esModule = true;\n\nvar _menuItem = require('../../menu/menu-item.js');\n\nvar _menuItem2 = _interopRequireDefault(_menuItem);\n\nvar _component = require('../../component.js');\n\nvar _component2 = _interopRequireDefault(_component);\n\nvar _fn = require('../../utils/fn.js');\n\nvar Fn = _interopRequireWildcard(_fn);\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj['default'] = obj; return newObj; } }\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /**\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * @file chapters-track-menu-item.js\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                */\n\n\n/**\n * The chapter track menu item\n *\n * @extends MenuItem\n */\nvar ChaptersTrackMenuItem = function (_MenuItem) {\n  _inherits(ChaptersTrackMenuItem, _MenuItem);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function ChaptersTrackMenuItem(player, options) {\n    _classCallCheck(this, ChaptersTrackMenuItem);\n\n    var track = options.track;\n    var cue = options.cue;\n    var currentTime = player.currentTime();\n\n    // Modify options for parent MenuItem class's init.\n    options.selectable = true;\n    options.label = cue.text;\n    options.selected = cue.startTime <= currentTime && currentTime < cue.endTime;\n\n    var _this = _possibleConstructorReturn(this, _MenuItem.call(this, player, options));\n\n    _this.track = track;\n    _this.cue = cue;\n    track.addEventListener('cuechange', Fn.bind(_this, _this.update));\n    return _this;\n  }\n\n  /**\n   * This gets called when an `ChaptersTrackMenuItem` is \"clicked\". See\n   * {@link ClickableComponent} for more detailed information on what a click can be.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   */\n\n\n  ChaptersTrackMenuItem.prototype.handleClick = function handleClick(event) {\n    _MenuItem.prototype.handleClick.call(this);\n    this.player_.currentTime(this.cue.startTime);\n    this.update(this.cue.startTime);\n  };\n\n  /**\n   * Update chapter menu item\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `cuechange` event that caused this function to run.\n   *\n   * @listens TextTrack#cuechange\n   */\n\n\n  ChaptersTrackMenuItem.prototype.update = function update(event) {\n    var cue = this.cue;\n    var currentTime = this.player_.currentTime();\n\n    // vjs.log(currentTime, cue.startTime);\n    this.selected(cue.startTime <= currentTime && currentTime < cue.endTime);\n  };\n\n  return ChaptersTrackMenuItem;\n}(_menuItem2['default']);\n\n_component2['default'].registerComponent('ChaptersTrackMenuItem', ChaptersTrackMenuItem);\nexports['default'] = ChaptersTrackMenuItem;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/video.js/es5/control-bar/text-track-controls/chapters-track-menu-item.js\n ** module id = 95\n ** module chunks = 0 1\n **/","'use strict';\n\nexports.__esModule = true;\n\nvar _textTrackButton = require('./text-track-button.js');\n\nvar _textTrackButton2 = _interopRequireDefault(_textTrackButton);\n\nvar _component = require('../../component.js');\n\nvar _component2 = _interopRequireDefault(_component);\n\nvar _fn = require('../../utils/fn.js');\n\nvar Fn = _interopRequireWildcard(_fn);\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj['default'] = obj; return newObj; } }\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /**\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * @file descriptions-button.js\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                */\n\n\n/**\n * The button component for toggling and selecting descriptions\n *\n * @extends TextTrackButton\n */\nvar DescriptionsButton = function (_TextTrackButton) {\n  _inherits(DescriptionsButton, _TextTrackButton);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   *\n   * @param {Component~ReadyCallback} [ready]\n   *        The function to call when this component is ready.\n   */\n  function DescriptionsButton(player, options, ready) {\n    _classCallCheck(this, DescriptionsButton);\n\n    var _this = _possibleConstructorReturn(this, _TextTrackButton.call(this, player, options, ready));\n\n    _this.el_.setAttribute('aria-label', 'Descriptions Menu');\n\n    var tracks = player.textTracks();\n\n    if (tracks) {\n      (function () {\n        var changeHandler = Fn.bind(_this, _this.handleTracksChange);\n\n        tracks.addEventListener('change', changeHandler);\n        _this.on('dispose', function () {\n          tracks.removeEventListener('change', changeHandler);\n        });\n      })();\n    }\n    return _this;\n  }\n\n  /**\n   * Handle text track change\n   *\n   * @param {EventTarget~Event} event\n   *        The event that caused this function to run\n   *\n   * @listens TextTrackList#change\n   */\n\n\n  DescriptionsButton.prototype.handleTracksChange = function handleTracksChange(event) {\n    var tracks = this.player().textTracks();\n    var disabled = false;\n\n    // Check whether a track of a different kind is showing\n    for (var i = 0, l = tracks.length; i < l; i++) {\n      var track = tracks[i];\n\n      if (track.kind !== this.kind_ && track.mode === 'showing') {\n        disabled = true;\n        break;\n      }\n    }\n\n    // If another track is showing, disable this menu button\n    if (disabled) {\n      this.disable();\n    } else {\n      this.enable();\n    }\n  };\n\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n\n\n  DescriptionsButton.prototype.buildCSSClass = function buildCSSClass() {\n    return 'vjs-descriptions-button ' + _TextTrackButton.prototype.buildCSSClass.call(this);\n  };\n\n  return DescriptionsButton;\n}(_textTrackButton2['default']);\n\n/**\n * `kind` of TextTrack to look for to associate it with this menu.\n *\n * @type {string}\n * @private\n */\n\n\nDescriptionsButton.prototype.kind_ = 'descriptions';\n\n/**\n * The text that should display over the `DescriptionsButton`s controls. Added for localization.\n *\n * @type {string}\n * @private\n */\nDescriptionsButton.prototype.controlText_ = 'Descriptions';\n\n_component2['default'].registerComponent('DescriptionsButton', DescriptionsButton);\nexports['default'] = DescriptionsButton;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/video.js/es5/control-bar/text-track-controls/descriptions-button.js\n ** module id = 96\n ** module chunks = 0 1\n **/","'use strict';\n\nexports.__esModule = true;\n\nvar _textTrackButton = require('./text-track-button.js');\n\nvar _textTrackButton2 = _interopRequireDefault(_textTrackButton);\n\nvar _component = require('../../component.js');\n\nvar _component2 = _interopRequireDefault(_component);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /**\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * @file subtitles-button.js\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                */\n\n\n/**\n * The button component for toggling and selecting subtitles\n *\n * @extends TextTrackButton\n */\nvar SubtitlesButton = function (_TextTrackButton) {\n  _inherits(SubtitlesButton, _TextTrackButton);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   *\n   * @param {Component~ReadyCallback} [ready]\n   *        The function to call when this component is ready.\n   */\n  function SubtitlesButton(player, options, ready) {\n    _classCallCheck(this, SubtitlesButton);\n\n    var _this = _possibleConstructorReturn(this, _TextTrackButton.call(this, player, options, ready));\n\n    _this.el_.setAttribute('aria-label', 'Subtitles Menu');\n    return _this;\n  }\n\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n\n\n  SubtitlesButton.prototype.buildCSSClass = function buildCSSClass() {\n    return 'vjs-subtitles-button ' + _TextTrackButton.prototype.buildCSSClass.call(this);\n  };\n\n  return SubtitlesButton;\n}(_textTrackButton2['default']);\n\n/**\n * `kind` of TextTrack to look for to associate it with this menu.\n *\n * @type {string}\n * @private\n */\n\n\nSubtitlesButton.prototype.kind_ = 'subtitles';\n\n/**\n * The text that should display over the `SubtitlesButton`s controls. Added for localization.\n *\n * @type {string}\n * @private\n */\nSubtitlesButton.prototype.controlText_ = 'Subtitles';\n\n_component2['default'].registerComponent('SubtitlesButton', SubtitlesButton);\nexports['default'] = SubtitlesButton;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/video.js/es5/control-bar/text-track-controls/subtitles-button.js\n ** module id = 97\n ** module chunks = 0 1\n **/","'use strict';\n\nexports.__esModule = true;\n\nvar _textTrackButton = require('./text-track-button.js');\n\nvar _textTrackButton2 = _interopRequireDefault(_textTrackButton);\n\nvar _component = require('../../component.js');\n\nvar _component2 = _interopRequireDefault(_component);\n\nvar _captionSettingsMenuItem = require('./caption-settings-menu-item.js');\n\nvar _captionSettingsMenuItem2 = _interopRequireDefault(_captionSettingsMenuItem);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /**\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * @file captions-button.js\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                */\n\n\n/**\n * The button component for toggling and selecting captions\n *\n * @extends TextTrackButton\n */\nvar CaptionsButton = function (_TextTrackButton) {\n  _inherits(CaptionsButton, _TextTrackButton);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   *\n   * @param {Component~ReadyCallback} [ready]\n   *        The function to call when this component is ready.\n   */\n  function CaptionsButton(player, options, ready) {\n    _classCallCheck(this, CaptionsButton);\n\n    var _this = _possibleConstructorReturn(this, _TextTrackButton.call(this, player, options, ready));\n\n    _this.el_.setAttribute('aria-label', 'Captions Menu');\n    return _this;\n  }\n\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n\n\n  CaptionsButton.prototype.buildCSSClass = function buildCSSClass() {\n    return 'vjs-captions-button ' + _TextTrackButton.prototype.buildCSSClass.call(this);\n  };\n\n  /**\n   * Update caption menu items\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `addtrack` or `removetrack` event that caused this function to be\n   *        called.\n   *\n   * @listens TextTrackList#addtrack\n   * @listens TextTrackList#removetrack\n   */\n\n\n  CaptionsButton.prototype.update = function update(event) {\n    var threshold = 2;\n\n    _TextTrackButton.prototype.update.call(this);\n\n    // if native, then threshold is 1 because no settings button\n    if (this.player().tech_ && this.player().tech_.featuresNativeTextTracks) {\n      threshold = 1;\n    }\n\n    if (this.items && this.items.length > threshold) {\n      this.show();\n    } else {\n      this.hide();\n    }\n  };\n\n  /**\n   * Create caption menu items\n   *\n   * @return {CaptionSettingsMenuItem[]}\n   *         The array of current menu items.\n   */\n\n\n  CaptionsButton.prototype.createItems = function createItems() {\n    var items = [];\n\n    if (!(this.player().tech_ && this.player().tech_.featuresNativeTextTracks)) {\n      items.push(new _captionSettingsMenuItem2['default'](this.player_, { kind: this.kind_ }));\n    }\n\n    return _TextTrackButton.prototype.createItems.call(this, items);\n  };\n\n  return CaptionsButton;\n}(_textTrackButton2['default']);\n\n/**\n * `kind` of TextTrack to look for to associate it with this menu.\n *\n * @type {string}\n * @private\n */\n\n\nCaptionsButton.prototype.kind_ = 'captions';\n\n/**\n * The text that should display over the `CaptionsButton`s controls. Added for localization.\n *\n * @type {string}\n * @private\n */\nCaptionsButton.prototype.controlText_ = 'Captions';\n\n_component2['default'].registerComponent('CaptionsButton', CaptionsButton);\nexports['default'] = CaptionsButton;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/video.js/es5/control-bar/text-track-controls/captions-button.js\n ** module id = 98\n ** module chunks = 0 1\n **/","'use strict';\n\nexports.__esModule = true;\n\nvar _textTrackMenuItem = require('./text-track-menu-item.js');\n\nvar _textTrackMenuItem2 = _interopRequireDefault(_textTrackMenuItem);\n\nvar _component = require('../../component.js');\n\nvar _component2 = _interopRequireDefault(_component);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /**\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * @file caption-settings-menu-item.js\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                */\n\n\n/**\n * The menu item for caption track settings menu\n *\n * @extends TextTrackMenuItem\n */\nvar CaptionSettingsMenuItem = function (_TextTrackMenuItem) {\n  _inherits(CaptionSettingsMenuItem, _TextTrackMenuItem);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function CaptionSettingsMenuItem(player, options) {\n    _classCallCheck(this, CaptionSettingsMenuItem);\n\n    options.track = {\n      player: player,\n      kind: options.kind,\n      label: options.kind + ' settings',\n      selectable: false,\n      'default': false,\n      mode: 'disabled'\n    };\n\n    // CaptionSettingsMenuItem has no concept of 'selected'\n    options.selectable = false;\n\n    var _this = _possibleConstructorReturn(this, _TextTrackMenuItem.call(this, player, options));\n\n    _this.addClass('vjs-texttrack-settings');\n    _this.controlText(', opens ' + options.kind + ' settings dialog');\n    return _this;\n  }\n\n  /**\n   * This gets called when an `CaptionSettingsMenuItem` is \"clicked\". See\n   * {@link ClickableComponent} for more detailed information on what a click can be.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   */\n\n\n  CaptionSettingsMenuItem.prototype.handleClick = function handleClick(event) {\n    this.player().getChild('textTrackSettings').show();\n    this.player().getChild('textTrackSettings').el_.focus();\n  };\n\n  return CaptionSettingsMenuItem;\n}(_textTrackMenuItem2['default']);\n\n_component2['default'].registerComponent('CaptionSettingsMenuItem', CaptionSettingsMenuItem);\nexports['default'] = CaptionSettingsMenuItem;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/video.js/es5/control-bar/text-track-controls/caption-settings-menu-item.js\n ** module id = 99\n ** module chunks = 0 1\n **/","'use strict';\n\nexports.__esModule = true;\n\nvar _trackButton = require('../track-button.js');\n\nvar _trackButton2 = _interopRequireDefault(_trackButton);\n\nvar _component = require('../../component.js');\n\nvar _component2 = _interopRequireDefault(_component);\n\nvar _audioTrackMenuItem = require('./audio-track-menu-item.js');\n\nvar _audioTrackMenuItem2 = _interopRequireDefault(_audioTrackMenuItem);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /**\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * @file audio-track-button.js\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                */\n\n\n/**\n * The base class for buttons that toggle specific {@link AudioTrack} types.\n *\n * @extends TrackButton\n */\nvar AudioTrackButton = function (_TrackButton) {\n  _inherits(AudioTrackButton, _TrackButton);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options={}]\n   *        The key/value store of player options.\n   */\n  function AudioTrackButton(player) {\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n    _classCallCheck(this, AudioTrackButton);\n\n    options.tracks = player.audioTracks && player.audioTracks();\n\n    var _this = _possibleConstructorReturn(this, _TrackButton.call(this, player, options));\n\n    _this.el_.setAttribute('aria-label', 'Audio Menu');\n    return _this;\n  }\n\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n\n\n  AudioTrackButton.prototype.buildCSSClass = function buildCSSClass() {\n    return 'vjs-audio-button ' + _TrackButton.prototype.buildCSSClass.call(this);\n  };\n\n  /**\n   * Create a menu item for each audio track\n   *\n   * @param {AudioTrackMenuItem[]} [items=[]]\n   *        An array of existing menu items to use.\n   *\n   * @return {AudioTrackMenuItem[]}\n   *         An array of menu items\n   */\n\n\n  AudioTrackButton.prototype.createItems = function createItems() {\n    var items = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n\n    var tracks = this.player_.audioTracks && this.player_.audioTracks();\n\n    if (!tracks) {\n      return items;\n    }\n\n    for (var i = 0; i < tracks.length; i++) {\n      var track = tracks[i];\n\n      items.push(new _audioTrackMenuItem2['default'](this.player_, {\n        track: track,\n        // MenuItem is selectable\n        selectable: true\n      }));\n    }\n\n    return items;\n  };\n\n  return AudioTrackButton;\n}(_trackButton2['default']);\n\n/**\n * The text that should display over the `AudioTrackButton`s controls. Added for localization.\n *\n * @type {string}\n * @private\n */\n\n\nAudioTrackButton.prototype.controlText_ = 'Audio Track';\n_component2['default'].registerComponent('AudioTrackButton', AudioTrackButton);\nexports['default'] = AudioTrackButton;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/video.js/es5/control-bar/audio-track-controls/audio-track-button.js\n ** module id = 100\n ** module chunks = 0 1\n **/","'use strict';\n\nexports.__esModule = true;\n\nvar _menuItem = require('../../menu/menu-item.js');\n\nvar _menuItem2 = _interopRequireDefault(_menuItem);\n\nvar _component = require('../../component.js');\n\nvar _component2 = _interopRequireDefault(_component);\n\nvar _fn = require('../../utils/fn.js');\n\nvar Fn = _interopRequireWildcard(_fn);\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj['default'] = obj; return newObj; } }\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /**\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * @file audio-track-menu-item.js\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                */\n\n\n/**\n * An {@link AudioTrack} {@link MenuItem}\n *\n * @extends MenuItem\n */\nvar AudioTrackMenuItem = function (_MenuItem) {\n  _inherits(AudioTrackMenuItem, _MenuItem);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function AudioTrackMenuItem(player, options) {\n    _classCallCheck(this, AudioTrackMenuItem);\n\n    var track = options.track;\n    var tracks = player.audioTracks();\n\n    // Modify options for parent MenuItem class's init.\n    options.label = track.label || track.language || 'Unknown';\n    options.selected = track.enabled;\n\n    var _this = _possibleConstructorReturn(this, _MenuItem.call(this, player, options));\n\n    _this.track = track;\n\n    if (tracks) {\n      (function () {\n        var changeHandler = Fn.bind(_this, _this.handleTracksChange);\n\n        tracks.addEventListener('change', changeHandler);\n        _this.on('dispose', function () {\n          tracks.removeEventListener('change', changeHandler);\n        });\n      })();\n    }\n    return _this;\n  }\n\n  /**\n   * This gets called when an `AudioTrackMenuItem is \"clicked\". See {@link ClickableComponent}\n   * for more detailed information on what a click can be.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   */\n\n\n  AudioTrackMenuItem.prototype.handleClick = function handleClick(event) {\n    var tracks = this.player_.audioTracks();\n\n    _MenuItem.prototype.handleClick.call(this, event);\n\n    if (!tracks) {\n      return;\n    }\n\n    for (var i = 0; i < tracks.length; i++) {\n      var track = tracks[i];\n\n      track.enabled = track === this.track;\n    }\n  };\n\n  /**\n   * Handle any {@link AudioTrack} change.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The {@link AudioTrackList#change} event that caused this to run.\n   *\n   * @listens AudioTrackList#change\n   */\n\n\n  AudioTrackMenuItem.prototype.handleTracksChange = function handleTracksChange(event) {\n    this.selected(this.track.enabled);\n  };\n\n  return AudioTrackMenuItem;\n}(_menuItem2['default']);\n\n_component2['default'].registerComponent('AudioTrackMenuItem', AudioTrackMenuItem);\nexports['default'] = AudioTrackMenuItem;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/video.js/es5/control-bar/audio-track-controls/audio-track-menu-item.js\n ** module id = 101\n ** module chunks = 0 1\n **/","'use strict';\n\nexports.__esModule = true;\n\nvar _menuButton = require('../../menu/menu-button.js');\n\nvar _menuButton2 = _interopRequireDefault(_menuButton);\n\nvar _menu = require('../../menu/menu.js');\n\nvar _menu2 = _interopRequireDefault(_menu);\n\nvar _playbackRateMenuItem = require('./playback-rate-menu-item.js');\n\nvar _playbackRateMenuItem2 = _interopRequireDefault(_playbackRateMenuItem);\n\nvar _component = require('../../component.js');\n\nvar _component2 = _interopRequireDefault(_component);\n\nvar _dom = require('../../utils/dom.js');\n\nvar Dom = _interopRequireWildcard(_dom);\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj['default'] = obj; return newObj; } }\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /**\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * @file playback-rate-menu-button.js\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                */\n\n\n/**\n * The component for controlling the playback rate.\n *\n * @extends MenuButton\n */\nvar PlaybackRateMenuButton = function (_MenuButton) {\n  _inherits(PlaybackRateMenuButton, _MenuButton);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function PlaybackRateMenuButton(player, options) {\n    _classCallCheck(this, PlaybackRateMenuButton);\n\n    var _this = _possibleConstructorReturn(this, _MenuButton.call(this, player, options));\n\n    _this.updateVisibility();\n    _this.updateLabel();\n\n    _this.on(player, 'loadstart', _this.updateVisibility);\n    _this.on(player, 'ratechange', _this.updateLabel);\n    return _this;\n  }\n\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n\n\n  PlaybackRateMenuButton.prototype.createEl = function createEl() {\n    var el = _MenuButton.prototype.createEl.call(this);\n\n    this.labelEl_ = Dom.createEl('div', {\n      className: 'vjs-playback-rate-value',\n      innerHTML: 1.0\n    });\n\n    el.appendChild(this.labelEl_);\n\n    return el;\n  };\n\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n\n\n  PlaybackRateMenuButton.prototype.buildCSSClass = function buildCSSClass() {\n    return 'vjs-playback-rate ' + _MenuButton.prototype.buildCSSClass.call(this);\n  };\n\n  /**\n   * Create the playback rate menu\n   *\n   * @return {Menu}\n   *         Menu object populated with {@link PlaybackRateMenuItem}s\n   */\n\n\n  PlaybackRateMenuButton.prototype.createMenu = function createMenu() {\n    var menu = new _menu2['default'](this.player());\n    var rates = this.playbackRates();\n\n    if (rates) {\n      for (var i = rates.length - 1; i >= 0; i--) {\n        menu.addChild(new _playbackRateMenuItem2['default'](this.player(), { rate: rates[i] + 'x' }));\n      }\n    }\n\n    return menu;\n  };\n\n  /**\n   * Updates ARIA accessibility attributes\n   */\n\n\n  PlaybackRateMenuButton.prototype.updateARIAAttributes = function updateARIAAttributes() {\n    // Current playback rate\n    this.el().setAttribute('aria-valuenow', this.player().playbackRate());\n  };\n\n  /**\n   * This gets called when an `PlaybackRateMenuButton` is \"clicked\". See\n   * {@link ClickableComponent} for more detailed information on what a click can be.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   */\n\n\n  PlaybackRateMenuButton.prototype.handleClick = function handleClick(event) {\n    // select next rate option\n    var currentRate = this.player().playbackRate();\n    var rates = this.playbackRates();\n\n    // this will select first one if the last one currently selected\n    var newRate = rates[0];\n\n    for (var i = 0; i < rates.length; i++) {\n      if (rates[i] > currentRate) {\n        newRate = rates[i];\n        break;\n      }\n    }\n    this.player().playbackRate(newRate);\n  };\n\n  /**\n   * Get possible playback rates\n   *\n   * @return {Array}\n   *         All possible playback rates\n   */\n\n\n  PlaybackRateMenuButton.prototype.playbackRates = function playbackRates() {\n    return this.options_.playbackRates || this.options_.playerOptions && this.options_.playerOptions.playbackRates;\n  };\n\n  /**\n   * Get whether playback rates is supported by the tech\n   * and an array of playback rates exists\n   *\n   * @return {boolean}\n   *         Whether changing playback rate is supported\n   */\n\n\n  PlaybackRateMenuButton.prototype.playbackRateSupported = function playbackRateSupported() {\n    return this.player().tech_ && this.player().tech_.featuresPlaybackRate && this.playbackRates() && this.playbackRates().length > 0;\n  };\n\n  /**\n   * Hide playback rate controls when they're no playback rate options to select\n   *\n   * @param {EventTarget~Event} [event]\n   *        The event that caused this function to run.\n   *\n   * @listens Player#loadstart\n   */\n\n\n  PlaybackRateMenuButton.prototype.updateVisibility = function updateVisibility(event) {\n    if (this.playbackRateSupported()) {\n      this.removeClass('vjs-hidden');\n    } else {\n      this.addClass('vjs-hidden');\n    }\n  };\n\n  /**\n   * Update button label when rate changed\n   *\n   * @param {EventTarget~Event} [event]\n   *        The event that caused this function to run.\n   *\n   * @listens Player#ratechange\n   */\n\n\n  PlaybackRateMenuButton.prototype.updateLabel = function updateLabel(event) {\n    if (this.playbackRateSupported()) {\n      this.labelEl_.innerHTML = this.player().playbackRate() + 'x';\n    }\n  };\n\n  return PlaybackRateMenuButton;\n}(_menuButton2['default']);\n\n/**\n * The text that should display over the `FullscreenToggle`s controls. Added for localization.\n *\n * @type {string}\n * @private\n */\n\n\nPlaybackRateMenuButton.prototype.controlText_ = 'Playback Rate';\n\n_component2['default'].registerComponent('PlaybackRateMenuButton', PlaybackRateMenuButton);\nexports['default'] = PlaybackRateMenuButton;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/video.js/es5/control-bar/playback-rate-menu/playback-rate-menu-button.js\n ** module id = 102\n ** module chunks = 0 1\n **/","'use strict';\n\nexports.__esModule = true;\n\nvar _menuItem = require('../../menu/menu-item.js');\n\nvar _menuItem2 = _interopRequireDefault(_menuItem);\n\nvar _component = require('../../component.js');\n\nvar _component2 = _interopRequireDefault(_component);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /**\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * @file playback-rate-menu-item.js\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                */\n\n\n/**\n * The specific menu item type for selecting a playback rate.\n *\n * @extends MenuItem\n */\nvar PlaybackRateMenuItem = function (_MenuItem) {\n  _inherits(PlaybackRateMenuItem, _MenuItem);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function PlaybackRateMenuItem(player, options) {\n    _classCallCheck(this, PlaybackRateMenuItem);\n\n    var label = options.rate;\n    var rate = parseFloat(label, 10);\n\n    // Modify options for parent MenuItem class's init.\n    options.label = label;\n    options.selected = rate === 1;\n\n    var _this = _possibleConstructorReturn(this, _MenuItem.call(this, player, options));\n\n    _this.label = label;\n    _this.rate = rate;\n\n    _this.on(player, 'ratechange', _this.update);\n    return _this;\n  }\n\n  /**\n   * This gets called when an `PlaybackRateMenuItem` is \"clicked\". See\n   * {@link ClickableComponent} for more detailed information on what a click can be.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   */\n\n\n  PlaybackRateMenuItem.prototype.handleClick = function handleClick(event) {\n    _MenuItem.prototype.handleClick.call(this);\n    this.player().playbackRate(this.rate);\n  };\n\n  /**\n   * Update the PlaybackRateMenuItem when the playbackrate changes.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `ratechange` event that caused this function to run.\n   *\n   * @listens Player#ratechange\n   */\n\n\n  PlaybackRateMenuItem.prototype.update = function update(event) {\n    this.selected(this.player().playbackRate() === this.rate);\n  };\n\n  return PlaybackRateMenuItem;\n}(_menuItem2['default']);\n\n/**\n * The text that should display over the `PlaybackRateMenuItem`s controls. Added for localization.\n *\n * @type {string}\n * @private\n */\n\n\nPlaybackRateMenuItem.prototype.contentElType = 'button';\n\n_component2['default'].registerComponent('PlaybackRateMenuItem', PlaybackRateMenuItem);\nexports['default'] = PlaybackRateMenuItem;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/video.js/es5/control-bar/playback-rate-menu/playback-rate-menu-item.js\n ** module id = 103\n ** module chunks = 0 1\n **/","'use strict';\n\nexports.__esModule = true;\n\nvar _spacer = require('./spacer.js');\n\nvar _spacer2 = _interopRequireDefault(_spacer);\n\nvar _component = require('../../component.js');\n\nvar _component2 = _interopRequireDefault(_component);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /**\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * @file custom-control-spacer.js\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                */\n\n\n/**\n * Spacer specifically meant to be used as an insertion point for new plugins, etc.\n *\n * @extends Spacer\n */\nvar CustomControlSpacer = function (_Spacer) {\n  _inherits(CustomControlSpacer, _Spacer);\n\n  function CustomControlSpacer() {\n    _classCallCheck(this, CustomControlSpacer);\n\n    return _possibleConstructorReturn(this, _Spacer.apply(this, arguments));\n  }\n\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n  CustomControlSpacer.prototype.buildCSSClass = function buildCSSClass() {\n    return 'vjs-custom-control-spacer ' + _Spacer.prototype.buildCSSClass.call(this);\n  };\n\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n\n\n  CustomControlSpacer.prototype.createEl = function createEl() {\n    var el = _Spacer.prototype.createEl.call(this, {\n      className: this.buildCSSClass()\n    });\n\n    // No-flex/table-cell mode requires there be some content\n    // in the cell to fill the remaining space of the table.\n    el.innerHTML = '&nbsp;';\n    return el;\n  };\n\n  return CustomControlSpacer;\n}(_spacer2['default']);\n\n_component2['default'].registerComponent('CustomControlSpacer', CustomControlSpacer);\nexports['default'] = CustomControlSpacer;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/video.js/es5/control-bar/spacer-controls/custom-control-spacer.js\n ** module id = 104\n ** module chunks = 0 1\n **/","'use strict';\n\nexports.__esModule = true;\n\nvar _component = require('../../component.js');\n\nvar _component2 = _interopRequireDefault(_component);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /**\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * @file spacer.js\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                */\n\n\n/**\n * Just an empty spacer element that can be used as an append point for plugins, etc.\n * Also can be used to create space between elements when necessary.\n *\n * @extends Component\n */\nvar Spacer = function (_Component) {\n  _inherits(Spacer, _Component);\n\n  function Spacer() {\n    _classCallCheck(this, Spacer);\n\n    return _possibleConstructorReturn(this, _Component.apply(this, arguments));\n  }\n\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n  Spacer.prototype.buildCSSClass = function buildCSSClass() {\n    return 'vjs-spacer ' + _Component.prototype.buildCSSClass.call(this);\n  };\n\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n\n\n  Spacer.prototype.createEl = function createEl() {\n    return _Component.prototype.createEl.call(this, 'div', {\n      className: this.buildCSSClass()\n    });\n  };\n\n  return Spacer;\n}(_component2['default']);\n\n_component2['default'].registerComponent('Spacer', Spacer);\n\nexports['default'] = Spacer;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/video.js/es5/control-bar/spacer-controls/spacer.js\n ** module id = 105\n ** module chunks = 0 1\n **/","'use strict';\n\nexports.__esModule = true;\n\nvar _component = require('./component');\n\nvar _component2 = _interopRequireDefault(_component);\n\nvar _modalDialog = require('./modal-dialog');\n\nvar _modalDialog2 = _interopRequireDefault(_modalDialog);\n\nvar _mergeOptions = require('./utils/merge-options');\n\nvar _mergeOptions2 = _interopRequireDefault(_mergeOptions);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /**\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * @file error-display.js\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                */\n\n\n/**\n * A display that indicates an error has occurred. This means that the video\n * is unplayable.\n *\n * @extends ModalDialog\n */\nvar ErrorDisplay = function (_ModalDialog) {\n  _inherits(ErrorDisplay, _ModalDialog);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param  {Player} player\n   *         The `Player` that this class should be attached to.\n   *\n   * @param  {Object} [options]\n   *         The key/value store of player options.\n   */\n  function ErrorDisplay(player, options) {\n    _classCallCheck(this, ErrorDisplay);\n\n    var _this = _possibleConstructorReturn(this, _ModalDialog.call(this, player, options));\n\n    _this.on(player, 'error', _this.open);\n    return _this;\n  }\n\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   *\n   * @deprecated Since version 5.\n   */\n\n\n  ErrorDisplay.prototype.buildCSSClass = function buildCSSClass() {\n    return 'vjs-error-display ' + _ModalDialog.prototype.buildCSSClass.call(this);\n  };\n\n  /**\n   * Gets the localized error message based on the `Player`s error.\n   *\n   * @return {string}\n   *         The `Player`s error message localized or an empty string.\n   */\n\n\n  ErrorDisplay.prototype.content = function content() {\n    var error = this.player().error();\n\n    return error ? this.localize(error.message) : '';\n  };\n\n  return ErrorDisplay;\n}(_modalDialog2['default']);\n\n/**\n * The default options for an `ErrorDisplay`.\n *\n * @private\n */\n\n\nErrorDisplay.prototype.options_ = (0, _mergeOptions2['default'])(_modalDialog2['default'].prototype.options_, {\n  fillAlways: true,\n  temporary: false,\n  uncloseable: true\n});\n\n_component2['default'].registerComponent('ErrorDisplay', ErrorDisplay);\nexports['default'] = ErrorDisplay;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/video.js/es5/error-display.js\n ** module id = 106\n ** module chunks = 0 1\n **/","'use strict';\n\nexports.__esModule = true;\n\nvar _window = require('global/window');\n\nvar _window2 = _interopRequireDefault(_window);\n\nvar _component = require('../component');\n\nvar _component2 = _interopRequireDefault(_component);\n\nvar _dom = require('../utils/dom');\n\nvar _fn = require('../utils/fn');\n\nvar Fn = _interopRequireWildcard(_fn);\n\nvar _obj = require('../utils/obj');\n\nvar Obj = _interopRequireWildcard(_obj);\n\nvar _log = require('../utils/log');\n\nvar _log2 = _interopRequireDefault(_log);\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj['default'] = obj; return newObj; } }\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /**\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * @file text-track-settings.js\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                */\n\n\nvar LOCAL_STORAGE_KEY = 'vjs-text-track-settings';\n\nvar COLOR_BLACK = ['#000', 'Black'];\nvar COLOR_BLUE = ['#00F', 'Blue'];\nvar COLOR_CYAN = ['#0FF', 'Cyan'];\nvar COLOR_GREEN = ['#0F0', 'Green'];\nvar COLOR_MAGENTA = ['#F0F', 'Magenta'];\nvar COLOR_RED = ['#F00', 'Red'];\nvar COLOR_WHITE = ['#FFF', 'White'];\nvar COLOR_YELLOW = ['#FF0', 'Yellow'];\n\nvar OPACITY_OPAQUE = ['1', 'Opaque'];\nvar OPACITY_SEMI = ['0.5', 'Semi-Transparent'];\nvar OPACITY_TRANS = ['0', 'Transparent'];\n\n// Configuration for the various <select> elements in the DOM of this component.\n//\n// Possible keys include:\n//\n// `default`:\n//   The default option index. Only needs to be provided if not zero.\n// `parser`:\n//   A function which is used to parse the value from the selected option in\n//   a customized way.\n// `selector`:\n//   The selector used to find the associated <select> element.\nvar selectConfigs = {\n  backgroundColor: {\n    selector: '.vjs-bg-color > select',\n    id: 'captions-background-color-%s',\n    label: 'Color',\n    options: [COLOR_BLACK, COLOR_WHITE, COLOR_RED, COLOR_GREEN, COLOR_BLUE, COLOR_YELLOW, COLOR_MAGENTA, COLOR_CYAN]\n  },\n\n  backgroundOpacity: {\n    selector: '.vjs-bg-opacity > select',\n    id: 'captions-background-opacity-%s',\n    label: 'Transparency',\n    options: [OPACITY_OPAQUE, OPACITY_SEMI, OPACITY_TRANS]\n  },\n\n  color: {\n    selector: '.vjs-fg-color > select',\n    id: 'captions-foreground-color-%s',\n    label: 'Color',\n    options: [COLOR_WHITE, COLOR_BLACK, COLOR_RED, COLOR_GREEN, COLOR_BLUE, COLOR_YELLOW, COLOR_MAGENTA, COLOR_CYAN]\n  },\n\n  edgeStyle: {\n    selector: '.vjs-edge-style > select',\n    id: '%s',\n    label: 'Text Edge Style',\n    options: [['none', 'None'], ['raised', 'Raised'], ['depressed', 'Depressed'], ['uniform', 'Uniform'], ['dropshadow', 'Dropshadow']]\n  },\n\n  fontFamily: {\n    selector: '.vjs-font-family > select',\n    id: 'captions-font-family-%s',\n    label: 'Font Family',\n    options: [['proportionalSansSerif', 'Proportional Sans-Serif'], ['monospaceSansSerif', 'Monospace Sans-Serif'], ['proportionalSerif', 'Proportional Serif'], ['monospaceSerif', 'Monospace Serif'], ['casual', 'Casual'], ['script', 'Script'], ['small-caps', 'Small Caps']]\n  },\n\n  fontPercent: {\n    selector: '.vjs-font-percent > select',\n    id: 'captions-font-size-%s',\n    label: 'Font Size',\n    options: [['0.50', '50%'], ['0.75', '75%'], ['1.00', '100%'], ['1.25', '125%'], ['1.50', '150%'], ['1.75', '175%'], ['2.00', '200%'], ['3.00', '300%'], ['4.00', '400%']],\n    'default': 2,\n    parser: function parser(v) {\n      return v === '1.00' ? null : Number(v);\n    }\n  },\n\n  textOpacity: {\n    selector: '.vjs-text-opacity > select',\n    id: 'captions-foreground-opacity-%s',\n    label: 'Transparency',\n    options: [OPACITY_OPAQUE, OPACITY_SEMI]\n  },\n\n  // Options for this object are defined below.\n  windowColor: {\n    selector: '.vjs-window-color > select',\n    id: 'captions-window-color-%s',\n    label: 'Color'\n  },\n\n  // Options for this object are defined below.\n  windowOpacity: {\n    selector: '.vjs-window-opacity > select',\n    id: 'captions-window-opacity-%s',\n    label: 'Transparency',\n    options: [OPACITY_TRANS, OPACITY_SEMI, OPACITY_OPAQUE]\n  }\n};\n\nselectConfigs.windowColor.options = selectConfigs.backgroundColor.options;\n\n/**\n * Get the actual value of an option.\n *\n * @param  {string} value\n *         The value to get\n *\n * @param  {Function} [parser]\n *         Optional function to adjust the value.\n *\n * @return {Mixed}\n *         - Will be `undefined` if no value exists\n *         - Will be `undefined` if the given value is \"none\".\n *         - Will be the actual value otherwise.\n *\n * @private\n */\nfunction parseOptionValue(value, parser) {\n  if (parser) {\n    value = parser(value);\n  }\n\n  if (value && value !== 'none') {\n    return value;\n  }\n}\n\n/**\n * Gets the value of the selected <option> element within a <select> element.\n *\n * @param  {Element} el\n *         the element to look in\n *\n * @param  {Function} [parser]\n *         Optional function to adjust the value.\n *\n * @return {Mixed}\n *         - Will be `undefined` if no value exists\n *         - Will be `undefined` if the given value is \"none\".\n *         - Will be the actual value otherwise.\n *\n * @private\n */\nfunction getSelectedOptionValue(el, parser) {\n  var value = el.options[el.options.selectedIndex].value;\n\n  return parseOptionValue(value, parser);\n}\n\n/**\n * Sets the selected <option> element within a <select> element based on a\n * given value.\n *\n * @param {Element} el\n *        The element to look in.\n *\n * @param {string} value\n *        the property to look on.\n *\n * @param {Function} [parser]\n *        Optional function to adjust the value before comparing.\n *\n * @private\n */\nfunction setSelectedOption(el, value, parser) {\n  if (!value) {\n    return;\n  }\n\n  for (var i = 0; i < el.options.length; i++) {\n    if (parseOptionValue(el.options[i].value, parser) === value) {\n      el.selectedIndex = i;\n      break;\n    }\n  }\n}\n\n/**\n * Manipulate Text Tracks settings.\n *\n * @extends Component\n */\n\nvar TextTrackSettings = function (_Component) {\n  _inherits(TextTrackSettings, _Component);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *         The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *         The key/value store of player options.\n   */\n  function TextTrackSettings(player, options) {\n    _classCallCheck(this, TextTrackSettings);\n\n    var _this = _possibleConstructorReturn(this, _Component.call(this, player, options));\n\n    _this.setDefaults();\n    _this.hide();\n\n    _this.updateDisplay = Fn.bind(_this, _this.updateDisplay);\n\n    // Grab `persistTextTrackSettings` from the player options if not passed in child options\n    if (options.persistTextTrackSettings === undefined) {\n      _this.options_.persistTextTrackSettings = _this.options_.playerOptions.persistTextTrackSettings;\n    }\n\n    _this.on(_this.$('.vjs-done-button'), 'click', function () {\n      _this.saveSettings();\n      _this.hide();\n    });\n\n    _this.on(_this.$('.vjs-default-button'), 'click', function () {\n      _this.setDefaults();\n      _this.updateDisplay();\n    });\n\n    Obj.each(selectConfigs, function (config) {\n      _this.on(_this.$(config.selector), 'change', _this.updateDisplay);\n    });\n\n    if (_this.options_.persistTextTrackSettings) {\n      _this.restoreSettings();\n    }\n    return _this;\n  }\n\n  /**\n   * Create a <select> element with configured options.\n   *\n   * @param {string} key\n   *        Configuration key to use during creation.\n   *\n   * @return {Element}\n   *         The DOM element that gets created.\n   * @private\n   */\n\n\n  TextTrackSettings.prototype.createElSelect_ = function createElSelect_(key) {\n    var _this2 = this;\n\n    var config = selectConfigs[key];\n    var id = config.id.replace('%s', this.id_);\n\n    return [(0, _dom.createEl)('label', {\n      className: 'vjs-label',\n      textContent: config.label\n    }, {\n      'for': id\n    }), (0, _dom.createEl)('select', { id: id }, undefined, config.options.map(function (o) {\n      return (0, _dom.createEl)('option', {\n        textContent: _this2.localize(o[1]),\n        value: o[0]\n      });\n    }))];\n  };\n\n  /**\n   * Create foreground color element for the component\n   *\n   * @return {Element}\n   *         The element that was created.\n   *\n   * @private\n   */\n\n\n  TextTrackSettings.prototype.createElFgColor_ = function createElFgColor_() {\n    var legend = (0, _dom.createEl)('legend', {\n      textContent: this.localize('Text')\n    });\n\n    var select = this.createElSelect_('color');\n\n    var opacity = (0, _dom.createEl)('span', {\n      className: 'vjs-text-opacity vjs-opacity'\n    }, undefined, this.createElSelect_('textOpacity'));\n\n    return (0, _dom.createEl)('fieldset', {\n      className: 'vjs-fg-color vjs-tracksetting'\n    }, undefined, [legend].concat(select, opacity));\n  };\n\n  /**\n   * Create background color element for the component\n   *\n   * @return {Element}\n   *         The element that was created\n   *\n   * @private\n   */\n\n\n  TextTrackSettings.prototype.createElBgColor_ = function createElBgColor_() {\n    var legend = (0, _dom.createEl)('legend', {\n      textContent: this.localize('Background')\n    });\n\n    var select = this.createElSelect_('backgroundColor');\n\n    var opacity = (0, _dom.createEl)('span', {\n      className: 'vjs-bg-opacity vjs-opacity'\n    }, undefined, this.createElSelect_('backgroundOpacity'));\n\n    return (0, _dom.createEl)('fieldset', {\n      className: 'vjs-bg-color vjs-tracksetting'\n    }, undefined, [legend].concat(select, opacity));\n  };\n\n  /**\n   * Create window color element for the component\n   *\n   * @return {Element}\n   *         The element that was created\n   *\n   * @private\n   */\n\n\n  TextTrackSettings.prototype.createElWinColor_ = function createElWinColor_() {\n    var legend = (0, _dom.createEl)('legend', {\n      textContent: this.localize('Window')\n    });\n\n    var select = this.createElSelect_('windowColor');\n\n    var opacity = (0, _dom.createEl)('span', {\n      className: 'vjs-window-opacity vjs-opacity'\n    }, undefined, this.createElSelect_('windowOpacity'));\n\n    return (0, _dom.createEl)('fieldset', {\n      className: 'vjs-window-color vjs-tracksetting'\n    }, undefined, [legend].concat(select, opacity));\n  };\n\n  /**\n   * Create color elements for the component\n   *\n   * @return {Element}\n   *         The element that was created\n   *\n   * @private\n   */\n\n\n  TextTrackSettings.prototype.createElColors_ = function createElColors_() {\n    return (0, _dom.createEl)('div', {\n      className: 'vjs-tracksettings-colors'\n    }, undefined, [this.createElFgColor_(), this.createElBgColor_(), this.createElWinColor_()]);\n  };\n\n  /**\n   * Create font elements for the component\n   *\n   * @return {Element}\n   *         The element that was created.\n   *\n   * @private\n   */\n\n\n  TextTrackSettings.prototype.createElFont_ = function createElFont_() {\n    var fontPercent = (0, _dom.createEl)('div', {\n      className: 'vjs-font-percent vjs-tracksetting'\n    }, undefined, this.createElSelect_('fontPercent'));\n\n    var edgeStyle = (0, _dom.createEl)('div', {\n      className: 'vjs-edge-style vjs-tracksetting'\n    }, undefined, this.createElSelect_('edgeStyle'));\n\n    var fontFamily = (0, _dom.createEl)('div', {\n      className: 'vjs-font-family vjs-tracksetting'\n    }, undefined, this.createElSelect_('fontFamily'));\n\n    return (0, _dom.createEl)('div', {\n      className: 'vjs-tracksettings-font'\n    }, undefined, [fontPercent, edgeStyle, fontFamily]);\n  };\n\n  /**\n   * Create controls for the component\n   *\n   * @return {Element}\n   *         The element that was created.\n   *\n   * @private\n   */\n\n\n  TextTrackSettings.prototype.createElControls_ = function createElControls_() {\n    var defaultsButton = (0, _dom.createEl)('button', {\n      className: 'vjs-default-button',\n      textContent: this.localize('Defaults')\n    });\n\n    var doneButton = (0, _dom.createEl)('button', {\n      className: 'vjs-done-button',\n      textContent: 'Done'\n    });\n\n    return (0, _dom.createEl)('div', {\n      className: 'vjs-tracksettings-controls'\n    }, undefined, [defaultsButton, doneButton]);\n  };\n\n  /**\n   * Create the component's DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n\n\n  TextTrackSettings.prototype.createEl = function createEl() {\n    var settings = (0, _dom.createEl)('div', {\n      className: 'vjs-tracksettings'\n    }, undefined, [this.createElColors_(), this.createElFont_(), this.createElControls_()]);\n\n    var heading = (0, _dom.createEl)('div', {\n      className: 'vjs-control-text',\n      id: 'TTsettingsDialogLabel-' + this.id_,\n      textContent: 'Caption Settings Dialog'\n    }, {\n      'aria-level': '1',\n      'role': 'heading'\n    });\n\n    var description = (0, _dom.createEl)('div', {\n      className: 'vjs-control-text',\n      id: 'TTsettingsDialogDescription-' + this.id_,\n      textContent: 'Beginning of dialog window. Escape will cancel and close the window.'\n    });\n\n    var doc = (0, _dom.createEl)('div', undefined, {\n      role: 'document'\n    }, [heading, description, settings]);\n\n    return (0, _dom.createEl)('div', {\n      className: 'vjs-caption-settings vjs-modal-overlay',\n      tabIndex: -1\n    }, {\n      'role': 'dialog',\n      'aria-labelledby': heading.id,\n      'aria-describedby': description.id\n    }, doc);\n  };\n\n  /**\n   * Gets an object of text track settings (or null).\n   *\n   * @return {Object}\n   *         An object with config values parsed from the DOM or localStorage.\n   */\n\n\n  TextTrackSettings.prototype.getValues = function getValues() {\n    var _this3 = this;\n\n    return Obj.reduce(selectConfigs, function (accum, config, key) {\n      var value = getSelectedOptionValue(_this3.$(config.selector), config.parser);\n\n      if (value !== undefined) {\n        accum[key] = value;\n      }\n\n      return accum;\n    }, {});\n  };\n\n  /**\n   * Sets text track settings from an object of values.\n   *\n   * @param {Object} values\n   *        An object with config values parsed from the DOM or localStorage.\n   */\n\n\n  TextTrackSettings.prototype.setValues = function setValues(values) {\n    var _this4 = this;\n\n    Obj.each(selectConfigs, function (config, key) {\n      setSelectedOption(_this4.$(config.selector), values[key], config.parser);\n    });\n  };\n\n  /**\n   * Sets all <select> elements to their default values.\n   */\n\n\n  TextTrackSettings.prototype.setDefaults = function setDefaults() {\n    var _this5 = this;\n\n    Obj.each(selectConfigs, function (config) {\n      var index = config.hasOwnProperty('default') ? config['default'] : 0;\n\n      _this5.$(config.selector).selectedIndex = index;\n    });\n  };\n\n  /**\n   * Restore texttrack settings from localStorage\n   */\n\n\n  TextTrackSettings.prototype.restoreSettings = function restoreSettings() {\n    var values = void 0;\n\n    try {\n      values = JSON.parse(_window2['default'].localStorage.getItem(LOCAL_STORAGE_KEY));\n    } catch (err) {\n      _log2['default'].warn(err);\n    }\n\n    if (values) {\n      this.setValues(values);\n    }\n  };\n\n  /**\n   * Save text track settings to localStorage\n   */\n\n\n  TextTrackSettings.prototype.saveSettings = function saveSettings() {\n    if (!this.options_.persistTextTrackSettings) {\n      return;\n    }\n\n    var values = this.getValues();\n\n    try {\n      if (Object.keys(values).length) {\n        _window2['default'].localStorage.setItem(LOCAL_STORAGE_KEY, JSON.stringify(values));\n      } else {\n        _window2['default'].localStorage.removeItem(LOCAL_STORAGE_KEY);\n      }\n    } catch (err) {\n      _log2['default'].warn(err);\n    }\n  };\n\n  /**\n   * Update display of text track settings\n   */\n\n\n  TextTrackSettings.prototype.updateDisplay = function updateDisplay() {\n    var ttDisplay = this.player_.getChild('textTrackDisplay');\n\n    if (ttDisplay) {\n      ttDisplay.updateDisplay();\n    }\n  };\n\n  return TextTrackSettings;\n}(_component2['default']);\n\n_component2['default'].registerComponent('TextTrackSettings', TextTrackSettings);\n\nexports['default'] = TextTrackSettings;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/video.js/es5/tracks/text-track-settings.js\n ** module id = 107\n ** module chunks = 0 1\n **/","'use strict';\n\nexports.__esModule = true;\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nvar _templateObject = _taggedTemplateLiteralLoose(['Text Tracks are being loaded from another origin but the crossorigin attribute isn\\'t used.\\n            This may prevent text tracks from loading.'], ['Text Tracks are being loaded from another origin but the crossorigin attribute isn\\'t used.\\n            This may prevent text tracks from loading.']);\n\nvar _tech = require('./tech.js');\n\nvar _tech2 = _interopRequireDefault(_tech);\n\nvar _component = require('../component');\n\nvar _component2 = _interopRequireDefault(_component);\n\nvar _dom = require('../utils/dom.js');\n\nvar Dom = _interopRequireWildcard(_dom);\n\nvar _url = require('../utils/url.js');\n\nvar Url = _interopRequireWildcard(_url);\n\nvar _fn = require('../utils/fn.js');\n\nvar Fn = _interopRequireWildcard(_fn);\n\nvar _log = require('../utils/log.js');\n\nvar _log2 = _interopRequireDefault(_log);\n\nvar _tsml = require('tsml');\n\nvar _tsml2 = _interopRequireDefault(_tsml);\n\nvar _browser = require('../utils/browser.js');\n\nvar browser = _interopRequireWildcard(_browser);\n\nvar _document = require('global/document');\n\nvar _document2 = _interopRequireDefault(_document);\n\nvar _window = require('global/window');\n\nvar _window2 = _interopRequireDefault(_window);\n\nvar _obj = require('../utils/obj');\n\nvar _mergeOptions = require('../utils/merge-options.js');\n\nvar _mergeOptions2 = _interopRequireDefault(_mergeOptions);\n\nvar _toTitleCase = require('../utils/to-title-case.js');\n\nvar _toTitleCase2 = _interopRequireDefault(_toTitleCase);\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj['default'] = obj; return newObj; } }\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nfunction _taggedTemplateLiteralLoose(strings, raw) { strings.raw = raw; return strings; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /**\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * @file html5.js\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                */\n\n\n/**\n * HTML5 Media Controller - Wrapper for HTML5 Media API\n *\n * @mixes Tech~SouceHandlerAdditions\n * @extends Tech\n */\nvar Html5 = function (_Tech) {\n  _inherits(Html5, _Tech);\n\n  /**\n   * Create an instance of this Tech.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   *\n   * @param {Component~ReadyCallback} ready\n   *        Callback function to call when the `HTML5` Tech is ready.\n   */\n  function Html5(options, ready) {\n    _classCallCheck(this, Html5);\n\n    var _this = _possibleConstructorReturn(this, _Tech.call(this, options, ready));\n\n    var source = options.source;\n    var crossoriginTracks = false;\n\n    // Set the source if one is provided\n    // 1) Check if the source is new (if not, we want to keep the original so playback isn't interrupted)\n    // 2) Check to see if the network state of the tag was failed at init, and if so, reset the source\n    // anyway so the error gets fired.\n    if (source && (_this.el_.currentSrc !== source.src || options.tag && options.tag.initNetworkState_ === 3)) {\n      _this.setSource(source);\n    } else {\n      _this.handleLateInit_(_this.el_);\n    }\n\n    if (_this.el_.hasChildNodes()) {\n\n      var nodes = _this.el_.childNodes;\n      var nodesLength = nodes.length;\n      var removeNodes = [];\n\n      while (nodesLength--) {\n        var node = nodes[nodesLength];\n        var nodeName = node.nodeName.toLowerCase();\n\n        if (nodeName === 'track') {\n          if (!_this.featuresNativeTextTracks) {\n            // Empty video tag tracks so the built-in player doesn't use them also.\n            // This may not be fast enough to stop HTML5 browsers from reading the tags\n            // so we'll need to turn off any default tracks if we're manually doing\n            // captions and subtitles. videoElement.textTracks\n            removeNodes.push(node);\n          } else {\n            // store HTMLTrackElement and TextTrack to remote list\n            _this.remoteTextTrackEls().addTrackElement_(node);\n            _this.remoteTextTracks().addTrack_(node.track);\n            if (!crossoriginTracks && !_this.el_.hasAttribute('crossorigin') && Url.isCrossOrigin(node.src)) {\n              crossoriginTracks = true;\n            }\n          }\n        }\n      }\n\n      for (var i = 0; i < removeNodes.length; i++) {\n        _this.el_.removeChild(removeNodes[i]);\n      }\n    }\n\n    // TODO: add text tracks into this list\n    var trackTypes = ['audio', 'video'];\n\n    // ProxyNative Video/Audio Track\n    trackTypes.forEach(function (type) {\n      var elTracks = _this.el()[type + 'Tracks'];\n      var techTracks = _this[type + 'Tracks']();\n      var capitalType = (0, _toTitleCase2['default'])(type);\n\n      if (!_this['featuresNative' + capitalType + 'Tracks'] || !elTracks || !elTracks.addEventListener) {\n        return;\n      }\n\n      _this['handle' + capitalType + 'TrackChange_'] = function (e) {\n        techTracks.trigger({\n          type: 'change',\n          target: techTracks,\n          currentTarget: techTracks,\n          srcElement: techTracks\n        });\n      };\n\n      _this['handle' + capitalType + 'TrackAdd_'] = function (e) {\n        return techTracks.addTrack(e.track);\n      };\n      _this['handle' + capitalType + 'TrackRemove_'] = function (e) {\n        return techTracks.removeTrack(e.track);\n      };\n\n      elTracks.addEventListener('change', _this['handle' + capitalType + 'TrackChange_']);\n      elTracks.addEventListener('addtrack', _this['handle' + capitalType + 'TrackAdd_']);\n      elTracks.addEventListener('removetrack', _this['handle' + capitalType + 'TrackRemove_']);\n      _this['removeOld' + capitalType + 'Tracks_'] = function (e) {\n        return _this.removeOldTracks_(techTracks, elTracks);\n      };\n\n      // Remove (native) tracks that are not used anymore\n      _this.on('loadstart', _this['removeOld' + capitalType + 'Tracks_']);\n    });\n\n    if (_this.featuresNativeTextTracks) {\n      if (crossoriginTracks) {\n        _log2['default'].warn((0, _tsml2['default'])(_templateObject));\n      }\n\n      _this.handleTextTrackChange_ = Fn.bind(_this, _this.handleTextTrackChange);\n      _this.handleTextTrackAdd_ = Fn.bind(_this, _this.handleTextTrackAdd);\n      _this.handleTextTrackRemove_ = Fn.bind(_this, _this.handleTextTrackRemove);\n      _this.proxyNativeTextTracks_();\n    }\n\n    // Determine if native controls should be used\n    // Our goal should be to get the custom controls on mobile solid everywhere\n    // so we can remove this all together. Right now this will block custom\n    // controls on touch enabled laptops like the Chrome Pixel\n    if ((browser.TOUCH_ENABLED || browser.IS_IPHONE || browser.IS_NATIVE_ANDROID) && options.nativeControlsForTouch === true) {\n      _this.setControls(true);\n    }\n\n    // on iOS, we want to proxy `webkitbeginfullscreen` and `webkitendfullscreen`\n    // into a `fullscreenchange` event\n    _this.proxyWebkitFullscreen_();\n\n    _this.triggerReady();\n    return _this;\n  }\n\n  /**\n   * Dispose of `HTML5` media element and remove all tracks.\n   */\n\n\n  Html5.prototype.dispose = function dispose() {\n    var _this2 = this;\n\n    // Un-ProxyNativeTracks\n    ['audio', 'video', 'text'].forEach(function (type) {\n      var capitalType = (0, _toTitleCase2['default'])(type);\n      var tl = _this2.el_[type + 'Tracks'];\n\n      if (tl && tl.removeEventListener) {\n        tl.removeEventListener('change', _this2['handle' + capitalType + 'TrackChange_']);\n        tl.removeEventListener('addtrack', _this2['handle' + capitalType + 'TrackAdd_']);\n        tl.removeEventListener('removetrack', _this2['handle' + capitalType + 'TrackRemove_']);\n      }\n\n      // Stop removing old text tracks\n      if (tl) {\n        _this2.off('loadstart', _this2['removeOld' + capitalType + 'Tracks_']);\n      }\n    });\n\n    Html5.disposeMediaElement(this.el_);\n    // tech will handle clearing of the emulated track list\n    _Tech.prototype.dispose.call(this);\n  };\n\n  /**\n   * Create the `Html5` Tech's DOM element.\n   *\n   * @return {Element}\n   *         The element that gets created.\n   */\n\n\n  Html5.prototype.createEl = function createEl() {\n    var el = this.options_.tag;\n\n    // Check if this browser supports moving the element into the box.\n    // On the iPhone video will break if you move the element,\n    // So we have to create a brand new element.\n    // If we ingested the player div, we do not need to move the media element.\n    if (!el || !(this.options_.playerElIngest || this.movingMediaElementInDOM)) {\n\n      // If the original tag is still there, clone and remove it.\n      if (el) {\n        var clone = el.cloneNode(true);\n\n        if (el.parentNode) {\n          el.parentNode.insertBefore(clone, el);\n        }\n        Html5.disposeMediaElement(el);\n        el = clone;\n      } else {\n        el = _document2['default'].createElement('video');\n\n        // determine if native controls should be used\n        var tagAttributes = this.options_.tag && Dom.getElAttributes(this.options_.tag);\n        var attributes = (0, _mergeOptions2['default'])({}, tagAttributes);\n\n        if (!browser.TOUCH_ENABLED || this.options_.nativeControlsForTouch !== true) {\n          delete attributes.controls;\n        }\n\n        Dom.setElAttributes(el, (0, _obj.assign)(attributes, {\n          id: this.options_.techId,\n          'class': 'vjs-tech'\n        }));\n      }\n\n      el.playerId = this.options_.playerId;\n    }\n\n    // Update specific tag settings, in case they were overridden\n    var settingsAttrs = ['autoplay', 'preload', 'loop', 'muted'];\n\n    for (var i = settingsAttrs.length - 1; i >= 0; i--) {\n      var attr = settingsAttrs[i];\n      var overwriteAttrs = {};\n\n      if (typeof this.options_[attr] !== 'undefined') {\n        overwriteAttrs[attr] = this.options_[attr];\n      }\n      Dom.setElAttributes(el, overwriteAttrs);\n    }\n\n    return el;\n  };\n\n  /**\n   * This will be triggered if the loadstart event has already fired, before videojs was\n   * ready. Two known examples of when this can happen are:\n   * 1. If we're loading the playback object after it has started loading\n   * 2. The media is already playing the (often with autoplay on) then\n   *\n   * This function will fire another loadstart so that videojs can catchup.\n   *\n   * @fires Tech#loadstart\n   *\n   * @return {undefined}\n   *         returns nothing.\n   */\n\n\n  Html5.prototype.handleLateInit_ = function handleLateInit_(el) {\n    var _this3 = this;\n\n    if (el.networkState === 0 || el.networkState === 3) {\n      // The video element hasn't started loading the source yet\n      // or didn't find a source\n      return;\n    }\n\n    if (el.readyState === 0) {\n      var _ret = function () {\n        // NetworkState is set synchronously BUT loadstart is fired at the\n        // end of the current stack, usually before setInterval(fn, 0).\n        // So at this point we know loadstart may have already fired or is\n        // about to fire, and either way the player hasn't seen it yet.\n        // We don't want to fire loadstart prematurely here and cause a\n        // double loadstart so we'll wait and see if it happens between now\n        // and the next loop, and fire it if not.\n        // HOWEVER, we also want to make sure it fires before loadedmetadata\n        // which could also happen between now and the next loop, so we'll\n        // watch for that also.\n        var loadstartFired = false;\n        var setLoadstartFired = function setLoadstartFired() {\n          loadstartFired = true;\n        };\n\n        _this3.on('loadstart', setLoadstartFired);\n\n        var triggerLoadstart = function triggerLoadstart() {\n          // We did miss the original loadstart. Make sure the player\n          // sees loadstart before loadedmetadata\n          if (!loadstartFired) {\n            this.trigger('loadstart');\n          }\n        };\n\n        _this3.on('loadedmetadata', triggerLoadstart);\n\n        _this3.ready(function () {\n          this.off('loadstart', setLoadstartFired);\n          this.off('loadedmetadata', triggerLoadstart);\n\n          if (!loadstartFired) {\n            // We did miss the original native loadstart. Fire it now.\n            this.trigger('loadstart');\n          }\n        });\n\n        return {\n          v: void 0\n        };\n      }();\n\n      if ((typeof _ret === 'undefined' ? 'undefined' : _typeof(_ret)) === \"object\") return _ret.v;\n    }\n\n    // From here on we know that loadstart already fired and we missed it.\n    // The other readyState events aren't as much of a problem if we double\n    // them, so not going to go to as much trouble as loadstart to prevent\n    // that unless we find reason to.\n    var eventsToTrigger = ['loadstart'];\n\n    // loadedmetadata: newly equal to HAVE_METADATA (1) or greater\n    eventsToTrigger.push('loadedmetadata');\n\n    // loadeddata: newly increased to HAVE_CURRENT_DATA (2) or greater\n    if (el.readyState >= 2) {\n      eventsToTrigger.push('loadeddata');\n    }\n\n    // canplay: newly increased to HAVE_FUTURE_DATA (3) or greater\n    if (el.readyState >= 3) {\n      eventsToTrigger.push('canplay');\n    }\n\n    // canplaythrough: newly equal to HAVE_ENOUGH_DATA (4)\n    if (el.readyState >= 4) {\n      eventsToTrigger.push('canplaythrough');\n    }\n\n    // We still need to give the player time to add event listeners\n    this.ready(function () {\n      eventsToTrigger.forEach(function (type) {\n        this.trigger(type);\n      }, this);\n    });\n  };\n\n  /**\n   * Add event listeners to native text track events. This adds the native text tracks\n   * to our emulated {@link TextTrackList}.\n   */\n\n\n  Html5.prototype.proxyNativeTextTracks_ = function proxyNativeTextTracks_() {\n    var tt = this.el().textTracks;\n\n    if (tt) {\n      // Add tracks - if player is initialised after DOM loaded, textTracks\n      // will not trigger addtrack\n      for (var i = 0; i < tt.length; i++) {\n        this.textTracks().addTrack_(tt[i]);\n      }\n\n      if (tt.addEventListener) {\n        tt.addEventListener('change', this.handleTextTrackChange_);\n        tt.addEventListener('addtrack', this.handleTextTrackAdd_);\n        tt.addEventListener('removetrack', this.handleTextTrackRemove_);\n      }\n\n      // Remove (native) texttracks that are not used anymore\n      this.on('loadstart', this.removeOldTextTracks_);\n    }\n  };\n\n  /**\n   * Handle any {@link TextTrackList} `change` event.\n   *\n   * @param {EventTarget~Event} e\n   *        The `change` event that caused this to run.\n   *\n   * @listens TextTrackList#change\n   */\n\n\n  Html5.prototype.handleTextTrackChange = function handleTextTrackChange(e) {\n    var tt = this.textTracks();\n\n    this.textTracks().trigger({\n      type: 'change',\n      target: tt,\n      currentTarget: tt,\n      srcElement: tt\n    });\n  };\n\n  /**\n   * Handle any {@link TextTrackList} `addtrack` event.\n   *\n   * @param {EventTarget~Event} e\n   *        The `addtrack` event that caused this to run.\n   *\n   * @listens TextTrackList#addtrack\n   */\n\n\n  Html5.prototype.handleTextTrackAdd = function handleTextTrackAdd(e) {\n    this.textTracks().addTrack_(e.track);\n  };\n\n  /**\n   * Handle any {@link TextTrackList} `removetrack` event.\n   *\n   * @param {EventTarget~Event} e\n   *        The `removetrack` event that caused this to run.\n   *\n   * @listens TextTrackList#removetrack\n   */\n\n\n  Html5.prototype.handleTextTrackRemove = function handleTextTrackRemove(e) {\n    this.textTracks().removeTrack_(e.track);\n  };\n\n  /**\n   * This function removes any {@link AudioTrack}s, {@link VideoTrack}s, or\n   * {@link TextTrack}s that are not in the media elements TrackList.\n   *\n   * @param {TrackList} techTracks\n   *        HTML5 Tech's TrackList to search through\n   *\n   * @param {TrackList} elTracks\n   *        HTML5 media elements TrackList to search trough.\n   *\n   * @private\n   */\n\n\n  Html5.prototype.removeOldTracks_ = function removeOldTracks_(techTracks, elTracks) {\n    // This will loop over the techTracks and check if they are still used by the HTML5 media element\n    // If not, they will be removed from the emulated list\n    var removeTracks = [];\n\n    if (!elTracks) {\n      return;\n    }\n\n    for (var i = 0; i < techTracks.length; i++) {\n      var techTrack = techTracks[i];\n      var found = false;\n\n      for (var j = 0; j < elTracks.length; j++) {\n        if (elTracks[j] === techTrack) {\n          found = true;\n          break;\n        }\n      }\n\n      if (!found) {\n        removeTracks.push(techTrack);\n      }\n    }\n\n    for (var _i = 0; _i < removeTracks.length; _i++) {\n      var track = removeTracks[_i];\n\n      techTracks.removeTrack_(track);\n    }\n  };\n\n  /**\n   * Remove {@link TextTrack}s that dont exist in the native track list from our\n   * emulated {@link TextTrackList}.\n   *\n   * @listens Tech#loadstart\n   */\n\n\n  Html5.prototype.removeOldTextTracks_ = function removeOldTextTracks_(e) {\n    var techTracks = this.textTracks();\n    var elTracks = this.el().textTracks;\n\n    this.removeOldTracks_(techTracks, elTracks);\n  };\n\n  /**\n   * Called by {@link Player#play} to play using the `Html5` `Tech`.\n   */\n\n\n  Html5.prototype.play = function play() {\n    var playPromise = this.el_.play();\n\n    // Catch/silence error when a pause interrupts a play request\n    // on browsers which return a promise\n    if (playPromise !== undefined && typeof playPromise.then === 'function') {\n      playPromise.then(null, function (e) {});\n    }\n  };\n\n  /**\n   * Set current time for the `HTML5` tech.\n   *\n   * @param {number} seconds\n   *        Set the current time of the media to this.\n   */\n\n\n  Html5.prototype.setCurrentTime = function setCurrentTime(seconds) {\n    try {\n      this.el_.currentTime = seconds;\n    } catch (e) {\n      (0, _log2['default'])(e, 'Video is not ready. (Video.js)');\n      // this.warning(VideoJS.warnings.videoNotReady);\n    }\n  };\n\n  /**\n   * Get the current duration of the HTML5 media element.\n   *\n   * @return {number}\n   *         The duration of the media or 0 if there is no duration.\n   */\n\n\n  Html5.prototype.duration = function duration() {\n    var _this4 = this;\n\n    // Android Chrome will report duration as Infinity for VOD HLS until after\n    // playback has started, which triggers the live display erroneously.\n    // Return NaN if playback has not started and trigger a durationupdate once\n    // the duration can be reliably known.\n    if (this.el_.duration === Infinity && browser.IS_ANDROID && browser.IS_CHROME) {\n      if (this.el_.currentTime === 0) {\n        var _ret2 = function () {\n          // Wait for the first `timeupdate` with currentTime > 0 - there may be\n          // several with 0\n          var checkProgress = function checkProgress() {\n            if (_this4.el_.currentTime > 0) {\n              // Trigger durationchange for genuinely live video\n              if (_this4.el_.duration === Infinity) {\n                _this4.trigger('durationchange');\n              }\n              _this4.off('timeupdate', checkProgress);\n            }\n          };\n\n          _this4.on('timeupdate', checkProgress);\n          return {\n            v: NaN\n          };\n        }();\n\n        if ((typeof _ret2 === 'undefined' ? 'undefined' : _typeof(_ret2)) === \"object\") return _ret2.v;\n      }\n    }\n    return this.el_.duration || NaN;\n  };\n\n  /**\n   * Get the current width of the HTML5 media element.\n   *\n   * @return {number}\n   *         The width of the HTML5 media element.\n   */\n\n\n  Html5.prototype.width = function width() {\n    return this.el_.offsetWidth;\n  };\n\n  /**\n   * Get the current height of the HTML5 media element.\n   *\n   * @return {number}\n   *         The heigth of the HTML5 media element.\n   */\n\n\n  Html5.prototype.height = function height() {\n    return this.el_.offsetHeight;\n  };\n\n  /**\n   * Proxy iOS `webkitbeginfullscreen` and `webkitendfullscreen` into\n   * `fullscreenchange` event.\n   *\n   * @private\n   * @fires fullscreenchange\n   * @listens webkitendfullscreen\n   * @listens webkitbeginfullscreen\n   * @listens webkitbeginfullscreen\n   */\n\n\n  Html5.prototype.proxyWebkitFullscreen_ = function proxyWebkitFullscreen_() {\n    var _this5 = this;\n\n    if (!('webkitDisplayingFullscreen' in this.el_)) {\n      return;\n    }\n\n    var endFn = function endFn() {\n      this.trigger('fullscreenchange', { isFullscreen: false });\n    };\n\n    var beginFn = function beginFn() {\n      this.one('webkitendfullscreen', endFn);\n\n      this.trigger('fullscreenchange', { isFullscreen: true });\n    };\n\n    this.on('webkitbeginfullscreen', beginFn);\n    this.on('dispose', function () {\n      _this5.off('webkitbeginfullscreen', beginFn);\n      _this5.off('webkitendfullscreen', endFn);\n    });\n  };\n\n  /**\n   * Check if fullscreen is supported on the current playback device.\n   *\n   * @return {boolean}\n   *         - True if fullscreen is supported.\n   *         - False if fullscreen is not supported.\n   */\n\n\n  Html5.prototype.supportsFullScreen = function supportsFullScreen() {\n    if (typeof this.el_.webkitEnterFullScreen === 'function') {\n      var userAgent = _window2['default'].navigator && _window2['default'].navigator.userAgent || '';\n\n      // Seems to be broken in Chromium/Chrome && Safari in Leopard\n      if (/Android/.test(userAgent) || !/Chrome|Mac OS X 10.5/.test(userAgent)) {\n        return true;\n      }\n    }\n    return false;\n  };\n\n  /**\n   * Request that the `HTML5` Tech enter fullscreen.\n   */\n\n\n  Html5.prototype.enterFullScreen = function enterFullScreen() {\n    var video = this.el_;\n\n    if (video.paused && video.networkState <= video.HAVE_METADATA) {\n      // attempt to prime the video element for programmatic access\n      // this isn't necessary on the desktop but shouldn't hurt\n      this.el_.play();\n\n      // playing and pausing synchronously during the transition to fullscreen\n      // can get iOS ~6.1 devices into a play/pause loop\n      this.setTimeout(function () {\n        video.pause();\n        video.webkitEnterFullScreen();\n      }, 0);\n    } else {\n      video.webkitEnterFullScreen();\n    }\n  };\n\n  /**\n   * Request that the `HTML5` Tech exit fullscreen.\n   */\n\n\n  Html5.prototype.exitFullScreen = function exitFullScreen() {\n    this.el_.webkitExitFullScreen();\n  };\n\n  /**\n   * A getter/setter for the `Html5` Tech's source object.\n   * > Note: Please use {@link Html5#setSource}\n   *\n   * @param {Tech~SourceObject} [src]\n   *        The source object you want to set on the `HTML5` techs element.\n   *\n   * @return {Tech~SourceObject|undefined}\n   *         - The current source object when a source is not passed in.\n   *         - undefined when setting\n   *\n   * @deprecated Since version 5.\n   */\n\n\n  Html5.prototype.src = function src(_src) {\n    if (_src === undefined) {\n      return this.el_.src;\n    }\n\n    // Setting src through `src` instead of `setSrc` will be deprecated\n    this.setSrc(_src);\n  };\n\n  /**\n   * Reset the tech by removing all sources and then calling\n   * {@link Html5.resetMediaElement}.\n   */\n\n\n  Html5.prototype.reset = function reset() {\n    Html5.resetMediaElement(this.el_);\n  };\n\n  /**\n   * Get the current source on the `HTML5` Tech. Falls back to returning the source from\n   * the HTML5 media element.\n   *\n   * @return {Tech~SourceObject}\n   *         The current source object from the HTML5 tech. With a fallback to the\n   *         elements source.\n   */\n\n\n  Html5.prototype.currentSrc = function currentSrc() {\n    if (this.currentSource_) {\n      return this.currentSource_.src;\n    }\n    return this.el_.currentSrc;\n  };\n\n  /**\n   * Set controls attribute for the HTML5 media Element.\n   *\n   * @param {string} val\n   *        Value to set the controls attribute to\n   */\n\n\n  Html5.prototype.setControls = function setControls(val) {\n    this.el_.controls = !!val;\n  };\n\n  /**\n   * Create and returns a remote {@link TextTrack} object.\n   *\n   * @param {string} kind\n   *        `TextTrack` kind (subtitles, captions, descriptions, chapters, or metadata)\n   *\n   * @param {string} [label]\n   *        Label to identify the text track\n   *\n   * @param {string} [language]\n   *        Two letter language abbreviation\n   *\n   * @return {TextTrack}\n   *         The TextTrack that gets created.\n   */\n\n\n  Html5.prototype.addTextTrack = function addTextTrack(kind, label, language) {\n    if (!this.featuresNativeTextTracks) {\n      return _Tech.prototype.addTextTrack.call(this, kind, label, language);\n    }\n\n    return this.el_.addTextTrack(kind, label, language);\n  };\n\n  /**\n   * Creates either native TextTrack or an emulated TextTrack depending\n   * on the value of `featuresNativeTextTracks`\n   *\n   * @param {Object} options\n   *        The object should contain the options to intialize the TextTrack with.\n   *\n   * @param {string} [options.kind]\n   *        `TextTrack` kind (subtitles, captions, descriptions, chapters, or metadata).\n   *\n   * @param {string} [options.label].\n   *        Label to identify the text track\n   *\n   * @param {string} [options.language]\n   *        Two letter language abbreviation.\n   *\n   * @param {boolean} [options.default]\n   *        Default this track to on.\n   *\n   * @param {string} [options.id]\n   *        The internal id to assign this track.\n   *\n   * @param {string} [options.src]\n   *        A source url for the track.\n   *\n   * @return {HTMLTrackElement}\n   *         The track element that gets created.\n   */\n\n\n  Html5.prototype.createRemoteTextTrack = function createRemoteTextTrack(options) {\n    if (!this.featuresNativeTextTracks) {\n      return _Tech.prototype.createRemoteTextTrack.call(this, options);\n    }\n    var htmlTrackElement = _document2['default'].createElement('track');\n\n    if (options.kind) {\n      htmlTrackElement.kind = options.kind;\n    }\n    if (options.label) {\n      htmlTrackElement.label = options.label;\n    }\n    if (options.language || options.srclang) {\n      htmlTrackElement.srclang = options.language || options.srclang;\n    }\n    if (options['default']) {\n      htmlTrackElement['default'] = options['default'];\n    }\n    if (options.id) {\n      htmlTrackElement.id = options.id;\n    }\n    if (options.src) {\n      htmlTrackElement.src = options.src;\n    }\n\n    return htmlTrackElement;\n  };\n\n  /**\n   * Creates a remote text track object and returns an html track element.\n   *\n   * @param {Object} options The object should contain values for\n   * kind, language, label, and src (location of the WebVTT file)\n   * @param {Boolean} [manualCleanup=true] if set to false, the TextTrack will be\n   * automatically removed from the video element whenever the source changes\n   * @return {HTMLTrackElement} An Html Track Element.\n   * This can be an emulated {@link HTMLTrackElement} or a native one.\n   * @deprecated The default value of the \"manualCleanup\" parameter will default\n   * to \"false\" in upcoming versions of Video.js\n   */\n\n\n  Html5.prototype.addRemoteTextTrack = function addRemoteTextTrack(options, manualCleanup) {\n    var htmlTrackElement = _Tech.prototype.addRemoteTextTrack.call(this, options, manualCleanup);\n\n    if (this.featuresNativeTextTracks) {\n      this.el().appendChild(htmlTrackElement);\n    }\n\n    return htmlTrackElement;\n  };\n\n  /**\n   * Remove remote `TextTrack` from `TextTrackList` object\n   *\n   * @param {TextTrack} track\n   *        `TextTrack` object to remove\n   */\n\n\n  Html5.prototype.removeRemoteTextTrack = function removeRemoteTextTrack(track) {\n    _Tech.prototype.removeRemoteTextTrack.call(this, track);\n\n    if (this.featuresNativeTextTracks) {\n      var tracks = this.$$('track');\n\n      var i = tracks.length;\n\n      while (i--) {\n        if (track === tracks[i] || track === tracks[i].track) {\n          this.el().removeChild(tracks[i]);\n        }\n      }\n    }\n  };\n\n  return Html5;\n}(_tech2['default']);\n\n/* HTML5 Support Testing ---------------------------------------------------- */\n\nif (Dom.isReal()) {\n\n  /**\n   * Element for testing browser HTML5 media capabilities\n   *\n   * @type {Element}\n   * @constant\n   * @private\n   */\n  Html5.TEST_VID = _document2['default'].createElement('video');\n  var track = _document2['default'].createElement('track');\n\n  track.kind = 'captions';\n  track.srclang = 'en';\n  track.label = 'English';\n  Html5.TEST_VID.appendChild(track);\n}\n\n/**\n * Check if HTML5 media is supported by this browser/device.\n *\n * @return {boolean}\n *         - True if HTML5 media is supported.\n *         - False if HTML5 media is not supported.\n */\nHtml5.isSupported = function () {\n  // IE9 with no Media Player is a LIAR! (#984)\n  try {\n    Html5.TEST_VID.volume = 0.5;\n  } catch (e) {\n    return false;\n  }\n\n  return !!(Html5.TEST_VID && Html5.TEST_VID.canPlayType);\n};\n\n/**\n * Check if the volume can be changed in this browser/device.\n * Volume cannot be changed in a lot of mobile devices.\n * Specifically, it can't be changed from 1 on iOS.\n *\n * @return {boolean}\n *         - True if volume can be controlled\n *         - False otherwise\n */\nHtml5.canControlVolume = function () {\n  // IE will error if Windows Media Player not installed #3315\n  try {\n    var volume = Html5.TEST_VID.volume;\n\n    Html5.TEST_VID.volume = volume / 2 + 0.1;\n    return volume !== Html5.TEST_VID.volume;\n  } catch (e) {\n    return false;\n  }\n};\n\n/**\n * Check if the playback rate can be changed in this browser/device.\n *\n * @return {boolean}\n *         - True if playback rate can be controlled\n *         - False otherwise\n */\nHtml5.canControlPlaybackRate = function () {\n  // Playback rate API is implemented in Android Chrome, but doesn't do anything\n  // https://github.com/videojs/video.js/issues/3180\n  if (browser.IS_ANDROID && browser.IS_CHROME) {\n    return false;\n  }\n  // IE will error if Windows Media Player not installed #3315\n  try {\n    var playbackRate = Html5.TEST_VID.playbackRate;\n\n    Html5.TEST_VID.playbackRate = playbackRate / 2 + 0.1;\n    return playbackRate !== Html5.TEST_VID.playbackRate;\n  } catch (e) {\n    return false;\n  }\n};\n\n/**\n * Check to see if native `TextTrack`s are supported by this browser/device.\n *\n * @return {boolean}\n *         - True if native `TextTrack`s are supported.\n *         - False otherwise\n */\nHtml5.supportsNativeTextTracks = function () {\n  return browser.IS_ANY_SAFARI;\n};\n\n/**\n * Check to see if native `VideoTrack`s are supported by this browser/device\n *\n * @return {boolean}\n *        - True if native `VideoTrack`s are supported.\n *        - False otherwise\n */\nHtml5.supportsNativeVideoTracks = function () {\n  return !!(Html5.TEST_VID && Html5.TEST_VID.videoTracks);\n};\n\n/**\n * Check to see if native `AudioTrack`s are supported by this browser/device\n *\n * @return {boolean}\n *        - True if native `AudioTrack`s are supported.\n *        - False otherwise\n */\nHtml5.supportsNativeAudioTracks = function () {\n  return !!(Html5.TEST_VID && Html5.TEST_VID.audioTracks);\n};\n\n/**\n * An array of events available on the Html5 tech.\n *\n * @private\n * @type {Array}\n */\nHtml5.Events = ['loadstart', 'suspend', 'abort', 'error', 'emptied', 'stalled', 'loadedmetadata', 'loadeddata', 'canplay', 'canplaythrough', 'playing', 'waiting', 'seeking', 'seeked', 'ended', 'durationchange', 'timeupdate', 'progress', 'play', 'pause', 'ratechange', 'volumechange'];\n\n/**\n * Boolean indicating whether the `Tech` supports volume control.\n *\n * @type {boolean}\n * @default {@link Html5.canControlVolume}\n */\nHtml5.prototype.featuresVolumeControl = Html5.canControlVolume();\n\n/**\n * Boolean indicating whether the `Tech` supports changing the speed at which the media\n * plays. Examples:\n *   - Set player to play 2x (twice) as fast\n *   - Set player to play 0.5x (half) as fast\n *\n * @type {boolean}\n * @default {@link Html5.canControlPlaybackRate}\n */\nHtml5.prototype.featuresPlaybackRate = Html5.canControlPlaybackRate();\n\n/**\n * Boolean indicating whether the `HTML5` tech currently supports the media element\n * moving in the DOM. iOS breaks if you move the media element, so this is set this to\n * false there. Everywhere else this should be true.\n *\n * @type {boolean}\n * @default\n */\nHtml5.prototype.movingMediaElementInDOM = !browser.IS_IOS;\n\n// TODO: Previous comment: No longer appears to be used. Can probably be removed.\n//       Is this true?\n/**\n * Boolean indicating whether the `HTML5` tech currently supports automatic media resize\n * when going into fullscreen.\n *\n * @type {boolean}\n * @default\n */\nHtml5.prototype.featuresFullscreenResize = true;\n\n/**\n * Boolean indicating whether the `HTML5` tech currently supports the progress event.\n * If this is false, manual `progress` events will be triggred instead.\n *\n * @type {boolean}\n * @default\n */\nHtml5.prototype.featuresProgressEvents = true;\n\n/**\n * Boolean indicating whether the `HTML5` tech currently supports the timeupdate event.\n * If this is false, manual `timeupdate` events will be triggred instead.\n *\n * @default\n */\nHtml5.prototype.featuresTimeupdateEvents = true;\n\n/**\n * Boolean indicating whether the `HTML5` tech currently supports native `TextTrack`s.\n *\n * @type {boolean}\n * @default {@link Html5.supportsNativeTextTracks}\n */\nHtml5.prototype.featuresNativeTextTracks = Html5.supportsNativeTextTracks();\n\n/**\n * Boolean indicating whether the `HTML5` tech currently supports native `VideoTrack`s.\n *\n * @type {boolean}\n * @default {@link Html5.supportsNativeVideoTracks}\n */\nHtml5.prototype.featuresNativeVideoTracks = Html5.supportsNativeVideoTracks();\n\n/**\n * Boolean indicating whether the `HTML5` tech currently supports native `AudioTrack`s.\n *\n * @type {boolean}\n * @default {@link Html5.supportsNativeAudioTracks}\n */\nHtml5.prototype.featuresNativeAudioTracks = Html5.supportsNativeAudioTracks();\n\n// HTML5 Feature detection and Device Fixes --------------------------------- //\nvar canPlayType = Html5.TEST_VID && Html5.TEST_VID.constructor.prototype.canPlayType;\nvar mpegurlRE = /^application\\/(?:x-|vnd\\.apple\\.)mpegurl/i;\nvar mp4RE = /^video\\/mp4/i;\n\nHtml5.patchCanPlayType = function () {\n\n  // Android 4.0 and above can play HLS to some extent but it reports being unable to do so\n  if (browser.ANDROID_VERSION >= 4.0 && !browser.IS_FIREFOX) {\n    Html5.TEST_VID.constructor.prototype.canPlayType = function (type) {\n      if (type && mpegurlRE.test(type)) {\n        return 'maybe';\n      }\n      return canPlayType.call(this, type);\n    };\n\n    // Override Android 2.2 and less canPlayType method which is broken\n  } else if (browser.IS_OLD_ANDROID) {\n    Html5.TEST_VID.constructor.prototype.canPlayType = function (type) {\n      if (type && mp4RE.test(type)) {\n        return 'maybe';\n      }\n      return canPlayType.call(this, type);\n    };\n  }\n};\n\nHtml5.unpatchCanPlayType = function () {\n  var r = Html5.TEST_VID.constructor.prototype.canPlayType;\n\n  Html5.TEST_VID.constructor.prototype.canPlayType = canPlayType;\n  return r;\n};\n\n// by default, patch the media element\nHtml5.patchCanPlayType();\n\nHtml5.disposeMediaElement = function (el) {\n  if (!el) {\n    return;\n  }\n\n  if (el.parentNode) {\n    el.parentNode.removeChild(el);\n  }\n\n  // remove any child track or source nodes to prevent their loading\n  while (el.hasChildNodes()) {\n    el.removeChild(el.firstChild);\n  }\n\n  // remove any src reference. not setting `src=''` because that causes a warning\n  // in firefox\n  el.removeAttribute('src');\n\n  // force the media element to update its loading state by calling load()\n  // however IE on Windows 7N has a bug that throws an error so need a try/catch (#793)\n  if (typeof el.load === 'function') {\n    // wrapping in an iife so it's not deoptimized (#1060#discussion_r10324473)\n    (function () {\n      try {\n        el.load();\n      } catch (e) {\n        // not supported\n      }\n    })();\n  }\n};\n\nHtml5.resetMediaElement = function (el) {\n  if (!el) {\n    return;\n  }\n\n  var sources = el.querySelectorAll('source');\n  var i = sources.length;\n\n  while (i--) {\n    el.removeChild(sources[i]);\n  }\n\n  // remove any src reference.\n  // not setting `src=''` because that throws an error\n  el.removeAttribute('src');\n\n  if (typeof el.load === 'function') {\n    // wrapping in an iife so it's not deoptimized (#1060#discussion_r10324473)\n    (function () {\n      try {\n        el.load();\n      } catch (e) {\n        // satisfy linter\n      }\n    })();\n  }\n};\n\n/* Native HTML5 element property wrapping ----------------------------------- */\n// Wrap native properties with a getter\n[\n/**\n * Get the value of `paused` from the media element. `paused` indicates whether the media element\n * is currently paused or not.\n *\n * @method Html5#paused\n * @return {boolean}\n *         The value of `paused` from the media element.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-paused}\n */\n'paused',\n\n/**\n * Get the value of `currentTime` from the media element. `currentTime` indicates\n * the current second that the media is at in playback.\n *\n * @method Html5#currentTime\n * @return {number}\n *         The value of `currentTime` from the media element.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-currenttime}\n */\n'currentTime',\n\n/**\n * Get the value of `buffered` from the media element. `buffered` is a `TimeRange`\n * object that represents the parts of the media that are already downloaded and\n * available for playback.\n *\n * @method Html5#buffered\n * @return {TimeRange}\n *         The value of `buffered` from the media element.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-buffered}\n */\n'buffered',\n\n/**\n * Get the value of `volume` from the media element. `volume` indicates\n * the current playback volume of audio for a media. `volume` will be a value from 0\n * (silent) to 1 (loudest and default).\n *\n * @method Html5#volume\n * @return {number}\n *         The value of `volume` from the media element. Value will be between 0-1.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-a-volume}\n */\n'volume',\n\n/**\n * Get the value of `muted` from the media element. `muted` indicates\n * that the volume for the media should be set to silent. This does not actually change\n * the `volume` attribute.\n *\n * @method Html5#muted\n * @return {boolean}\n *         - True if the value of `volume` should be ignored and the audio set to silent.\n *         - False if the value of `volume` should be used.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-muted}\n */\n'muted',\n\n/**\n * Get the value of `poster` from the media element. `poster` indicates\n * that the url of an image file that can/will be shown when no media data is available.\n *\n * @method Html5#poster\n * @return {string}\n *         The value of `poster` from the media element. Value will be a url to an\n *         image.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#attr-video-poster}\n */\n'poster',\n\n/**\n * Get the value of `preload` from the media element. `preload` indicates\n * what should download before the media is interacted with. It can have the following\n * values:\n * - none: nothing should be downloaded\n * - metadata: poster and the first few frames of the media may be downloaded to get\n *   media dimensions and other metadata\n * - auto: allow the media and metadata for the media to be downloaded before\n *    interaction\n *\n * @method Html5#preload\n * @return {string}\n *         The value of `preload` from the media element. Will be 'none', 'metadata',\n *         or 'auto'.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#attr-media-preload}\n */\n'preload',\n\n/**\n * Get the value of `autoplay` from the media element. `autoplay` indicates\n * that the media should start to play as soon as the page is ready.\n *\n * @method Html5#autoplay\n * @return {boolean}\n *         - The value of `autoplay` from the media element.\n *         - True indicates that the media should start as soon as the page loads.\n *         - False indicates that the media should not start as soon as the page loads.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#attr-media-autoplay}\n */\n'autoplay',\n\n/**\n * Get the value of `controls` from the media element. `controls` indicates\n * whether the native media controls should be shown or hidden.\n *\n * @method Html5#controls\n * @return {boolean}\n *         - The value of `controls` from the media element.\n *         - True indicates that native controls should be showing.\n *         - False indicates that native controls should be hidden.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#attr-media-controls}\n */\n'controls',\n\n/**\n * Get the value of `loop` from the media element. `loop` indicates\n * that the media should return to the start of the media and continue playing once\n * it reaches the end.\n *\n * @method Html5#loop\n * @return {boolean}\n *         - The value of `loop` from the media element.\n *         - True indicates that playback should seek back to start once\n *           the end of a media is reached.\n *         - False indicates that playback should not loop back to the start when the\n *           end of the media is reached.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#attr-media-loop}\n */\n'loop',\n\n/**\n * Get the value of the `error` from the media element. `error` indicates any\n * MediaError that may have occured during playback. If error returns null there is no\n * current error.\n *\n * @method Html5#error\n * @return {MediaError|null}\n *         The value of `error` from the media element. Will be `MediaError` if there\n *         is a current error and null otherwise.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-error}\n */\n'error',\n\n/**\n * Get the value of `seeking` from the media element. `seeking` indicates whether the\n * media is currently seeking to a new position or not.\n *\n * @method Html5#seeking\n * @return {boolean}\n *         - The value of `seeking` from the media element.\n *         - True indicates that the media is currently seeking to a new position.\n *         - Flase indicates that the media is not seeking to a new position at this time.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-seeking}\n */\n'seeking',\n\n/**\n * Get the value of `seekable` from the media element. `seekable` returns a\n * `TimeRange` object indicating ranges of time that can currently be `seeked` to.\n *\n * @method Html5#seekable\n * @return {TimeRange}\n *         The value of `seekable` from the media element. A `TimeRange` object\n *         indicating the current ranges of time that can be seeked to.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-seekable}\n */\n'seekable',\n\n/**\n * Get the value of `ended` from the media element. `ended` indicates whether\n * the media has reached the end or not.\n *\n * @method Html5#ended\n * @return {boolean}\n *         - The value of `ended` from the media element.\n *         - True indicates that the media has ended.\n *         - False indicates that the media has not ended.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-ended}\n */\n'ended',\n\n/**\n * Get the value of `defaultMuted` from the media element. `defaultMuted` indicates\n * whether the media should start muted or not. Only changes the default state of the\n * media. `muted` and `defaultMuted` can have different values. `muted` indicates the\n * current state.\n *\n * @method Html5#defaultMuted\n * @return {boolean}\n *         - The value of `defaultMuted` from the media element.\n *         - True indicates that the media should start muted.\n *         - False indicates that the media should not start muted\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-defaultmuted}\n */\n'defaultMuted',\n\n/**\n * Get the value of `playbackRate` from the media element. `playbackRate` indicates\n * the rate at which the media is currently playing back. Examples:\n *   - if playbackRate is set to 2, media will play twice as fast.\n *   - if playbackRate is set to 0.5, media will play half as fast.\n *\n * @method Html5#playbackRate\n * @return {number}\n *         The value of `playbackRate` from the media element. A number indicating\n *         the current playback speed of the media, where 1 is normal speed.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-playbackrate}\n */\n'playbackRate',\n\n/**\n * Get the value of `played` from the media element. `played` returns a `TimeRange`\n * object representing points in the media timeline that have been played.\n *\n * @method Html5#played\n * @return {TimeRange}\n *         The value of `played` from the media element. A `TimeRange` object indicating\n *         the ranges of time that have been played.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-played}\n */\n'played',\n\n/**\n * Get the value of `networkState` from the media element. `networkState` indicates\n * the current network state. It returns an enumeration from the following list:\n * - 0: NETWORK_EMPTY\n * - 1: NEWORK_IDLE\n * - 2: NETWORK_LOADING\n * - 3: NETWORK_NO_SOURCE\n *\n * @method Html5#networkState\n * @return {number}\n *         The value of `networkState` from the media element. This will be a number\n *         from the list in the description.\n *\n * @see [Spec] {@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-networkstate}\n */\n'networkState',\n\n/**\n * Get the value of `readyState` from the media element. `readyState` indicates\n * the current state of the media element. It returns an enumeration from the\n * following list:\n * - 0: HAVE_NOTHING\n * - 1: HAVE_METADATA\n * - 2: HAVE_CURRENT_DATA\n * - 3: HAVE_FUTURE_DATA\n * - 4: HAVE_ENOUGH_DATA\n *\n * @method Html5#readyState\n * @return {number}\n *         The value of `readyState` from the media element. This will be a number\n *         from the list in the description.\n *\n * @see [Spec] {@link https://www.w3.org/TR/html5/embedded-content-0.html#ready-states}\n */\n'readyState',\n\n/**\n * Get the value of `videoWidth` from the video element. `videoWidth` indicates\n * the current width of the video in css pixels.\n *\n * @method Html5#videoWidth\n * @return {number}\n *         The value of `videoWidth` from the video element. This will be a number\n *         in css pixels.\n *\n * @see [Spec] {@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-video-videowidth}\n */\n'videoWidth',\n\n/**\n * Get the value of `videoHeight` from the video element. `videoHeigth` indicates\n * the current height of the video in css pixels.\n *\n * @method Html5#videoHeight\n * @return {number}\n *         The value of `videoHeight` from the video element. This will be a number\n *         in css pixels.\n *\n * @see [Spec] {@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-video-videowidth}\n */\n'videoHeight'].forEach(function (prop) {\n  Html5.prototype[prop] = function () {\n    return this.el_[prop];\n  };\n});\n\n// Wrap native properties with a setter in this format:\n// set + toTitleCase(name)\n[\n/**\n * Set the value of `volume` on the media element. `volume` indicates the current\n * audio level as a percentage in decimal form. This means that 1 is 100%, 0.5 is 50%, and\n * so on.\n *\n * @method Html5#setVolume\n * @param {number} percentAsDecimal\n *        The volume percent as a decimal. Valid range is from 0-1.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-a-volume}\n */\n'volume',\n\n/**\n * Set the value of `muted` on the media element. `muted` indicates the current\n * audio level should be silent.\n *\n * @method Html5#setMuted\n * @param {boolean} muted\n *        - True if the audio should be set to silent\n *        - False otherwise\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-muted}\n */\n'muted',\n\n/**\n * Set the value of `src` on the media element. `src` indicates the current\n * {@link Tech~SourceObject} for the media.\n *\n * @method Html5#setSrc\n * @param {Tech~SourceObject} src\n *        The source object to set as the current source.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-src}\n */\n'src',\n\n/**\n * Set the value of `poster` on the media element. `poster` is the url to\n * an image file that can/will be shown when no media data is available.\n *\n * @method Html5#setPoster\n * @param {string} poster\n *        The url to an image that should be used as the `poster` for the media\n *        element.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#attr-media-poster}\n */\n'poster',\n\n/**\n * Set the value of `preload` on the media element. `preload` indicates\n * what should download before the media is interacted with. It can have the following\n * values:\n * - none: nothing should be downloaded\n * - metadata: poster and the first few frames of the media may be downloaded to get\n *   media dimensions and other metadata\n * - auto: allow the media and metadata for the media to be downloaded before\n *    interaction\n *\n * @method Html5#setPreload\n * @param {string} preload\n *         The value of `preload` to set on the media element. Must be 'none', 'metadata',\n *         or 'auto'.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#attr-media-preload}\n */\n'preload',\n\n/**\n * Set the value of `autoplay` on the media element. `autoplay` indicates\n * that the media should start to play as soon as the page is ready.\n *\n * @method Html5#setAutoplay\n * @param {boolean} autoplay\n *         - True indicates that the media should start as soon as the page loads.\n *         - False indicates that the media should not start as soon as the page loads.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#attr-media-autoplay}\n */\n'autoplay',\n\n/**\n * Set the value of `loop` on the media element. `loop` indicates\n * that the media should return to the start of the media and continue playing once\n * it reaches the end.\n *\n * @method Html5#setLoop\n * @param {boolean} loop\n *         - True indicates that playback should seek back to start once\n *           the end of a media is reached.\n *         - False indicates that playback should not loop back to the start when the\n *           end of the media is reached.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#attr-media-loop}\n */\n'loop',\n\n/**\n * Set the value of `playbackRate` on the media element. `playbackRate` indicates\n * the rate at which the media should play back. Examples:\n *   - if playbackRate is set to 2, media will play twice as fast.\n *   - if playbackRate is set to 0.5, media will play half as fast.\n *\n * @method Html5#setPlaybackRate\n * @return {number}\n *         The value of `playbackRate` from the media element. A number indicating\n *         the current playback speed of the media, where 1 is normal speed.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-playbackrate}\n */\n'playbackRate'].forEach(function (prop) {\n  Html5.prototype['set' + (0, _toTitleCase2['default'])(prop)] = function (v) {\n    this.el_[prop] = v;\n  };\n});\n\n// wrap native functions with a function\n[\n/**\n * A wrapper around the media elements `pause` function. This will call the `HTML5`\n * media elements `pause` function.\n *\n * @method Html5#pause\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-pause}\n */\n'pause',\n\n/**\n * A wrapper around the media elements `load` function. This will call the `HTML5`s\n * media element `load` function.\n *\n * @method Html5#load\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-load}\n */\n'load'].forEach(function (prop) {\n  Html5.prototype[prop] = function () {\n    return this.el_[prop]();\n  };\n});\n\n_tech2['default'].withSourceHandlers(Html5);\n\n/**\n * Native source handler for Html5, simply passes the source to the media element.\n *\n * @proprety {Tech~SourceObject} source\n *        The source object\n *\n * @proprety {Html5} tech\n *        The instance of the HTML5 tech.\n */\nHtml5.nativeSourceHandler = {};\n\n/**\n * Check if the media element can play the given mime type.\n *\n * @param {string} type\n *        The mimetype to check\n *\n * @return {string}\n *         'probably', 'maybe', or '' (empty string)\n */\nHtml5.nativeSourceHandler.canPlayType = function (type) {\n  // IE9 on Windows 7 without MediaPlayer throws an error here\n  // https://github.com/videojs/video.js/issues/519\n  try {\n    return Html5.TEST_VID.canPlayType(type);\n  } catch (e) {\n    return '';\n  }\n};\n\n/**\n * Check if the media element can handle a source natively.\n *\n * @param {Tech~SourceObject} source\n *         The source object\n *\n * @param {Object} [options]\n *         Options to be passed to the tech.\n *\n * @return {string}\n *         'probably', 'maybe', or '' (empty string).\n */\nHtml5.nativeSourceHandler.canHandleSource = function (source, options) {\n\n  // If a type was provided we should rely on that\n  if (source.type) {\n    return Html5.nativeSourceHandler.canPlayType(source.type);\n\n    // If no type, fall back to checking 'video/[EXTENSION]'\n  } else if (source.src) {\n    var ext = Url.getFileExtension(source.src);\n\n    return Html5.nativeSourceHandler.canPlayType('video/' + ext);\n  }\n\n  return '';\n};\n\n/**\n * Pass the source to the native media element.\n *\n * @param {Tech~SourceObject} source\n *        The source object\n *\n * @param {Html5} tech\n *        The instance of the Html5 tech\n *\n * @param {Object} [options]\n *        The options to pass to the source\n */\nHtml5.nativeSourceHandler.handleSource = function (source, tech, options) {\n  tech.setSrc(source.src);\n};\n\n/**\n * A noop for the native dispose function, as cleanup is not needed.\n */\nHtml5.nativeSourceHandler.dispose = function () {};\n\n// Register the native source handler\nHtml5.registerSourceHandler(Html5.nativeSourceHandler);\n\n_component2['default'].registerComponent('Html5', Html5);\n_tech2['default'].registerTech('Html5', Html5);\nexports['default'] = Html5;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/video.js/es5/tech/html5.js\n ** module id = 108\n ** module chunks = 0 1\n **/","'use strict';\n\nexports.__esModule = true;\n\nvar _player = require('./player.js');\n\nvar _player2 = _interopRequireDefault(_player);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\n/**\n * The method for registering a video.js plugin. {@link videojs:videojs.registerPlugin].\n *\n * @param {string} name\n *        The name of the plugin that is being registered\n *\n * @param {plugins:PluginFn} init\n *        The function that gets run when a `Player` initializes.\n */\nvar plugin = function plugin(name, init) {\n  _player2['default'].prototype[name] = init;\n}; /**\n    * @file plugins.js\n    * @module plugins\n    */\nexports['default'] = plugin;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/video.js/es5/plugins.js\n ** module id = 109\n ** module chunks = 0 1\n **/","'use strict';\n\nexports.__esModule = true;\n\nvar _trackEnums = require('./track-enums');\n\nvar _track = require('./track');\n\nvar _track2 = _interopRequireDefault(_track);\n\nvar _mergeOptions = require('../utils/merge-options');\n\nvar _mergeOptions2 = _interopRequireDefault(_mergeOptions);\n\nvar _browser = require('../utils/browser.js');\n\nvar browser = _interopRequireWildcard(_browser);\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj['default'] = obj; return newObj; } }\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\n/**\n * A representation of a single `AudioTrack`. If it is part of an {@link AudioTrackList}\n * only one `AudioTrack` in the list will be enabled at a time.\n *\n * @see [Spec]{@link https://html.spec.whatwg.org/multipage/embedded-content.html#audiotrack}\n * @extends Track\n */\nvar AudioTrack = function (_Track) {\n  _inherits(AudioTrack, _Track);\n\n  /**\n   * Create an instance of this class.\n   *\n   * @param {Object} [options={}]\n   *        Object of option names and values\n   *\n   * @param {AudioTrack~Kind} [options.kind='']\n   *        A valid audio track kind\n   *\n   * @param {string} [options.id='vjs_track_' + Guid.newGUID()]\n   *        A unique id for this AudioTrack.\n   *\n   * @param {string} [options.label='']\n   *        The menu label for this track.\n   *\n   * @param {string} [options.language='']\n   *        A valid two character language code.\n   *\n   * @param {boolean} [options.enabled]\n   *        If this track is the one that is currently playing. If this track is part of\n   *        an {@link AudioTrackList}, only one {@link AudioTrack} will be enabled.\n   */\n  function AudioTrack() {\n    var _this, _ret;\n\n    var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n    _classCallCheck(this, AudioTrack);\n\n    var settings = (0, _mergeOptions2['default'])(options, {\n      kind: _trackEnums.AudioTrackKind[options.kind] || ''\n    });\n    // on IE8 this will be a document element\n    // for every other browser this will be a normal object\n    var track = (_this = _possibleConstructorReturn(this, _Track.call(this, settings)), _this);\n    var enabled = false;\n\n    if (browser.IS_IE8) {\n      for (var prop in AudioTrack.prototype) {\n        if (prop !== 'constructor') {\n          track[prop] = AudioTrack.prototype[prop];\n        }\n      }\n    }\n    /**\n     * @member {boolean} enabled\n     *         If this `AudioTrack` is enabled or not. When setting this will\n     *         fire {@link AudioTrack#enabledchange} if the state of enabled is changed.\n     *\n     * @fires VideoTrack#selectedchange\n     */\n    Object.defineProperty(track, 'enabled', {\n      get: function get() {\n        return enabled;\n      },\n      set: function set(newEnabled) {\n        // an invalid or unchanged value\n        if (typeof newEnabled !== 'boolean' || newEnabled === enabled) {\n          return;\n        }\n        enabled = newEnabled;\n\n        /**\n         * An event that fires when enabled changes on this track. This allows\n         * the AudioTrackList that holds this track to act accordingly.\n         *\n         * > Note: This is not part of the spec! Native tracks will do\n         *         this internally without an event.\n         *\n         * @event AudioTrack#enabledchange\n         * @type {EventTarget~Event}\n         */\n        this.trigger('enabledchange');\n      }\n    });\n\n    // if the user sets this track to selected then\n    // set selected to that true value otherwise\n    // we keep it false\n    if (settings.enabled) {\n      track.enabled = settings.enabled;\n    }\n    track.loaded_ = true;\n\n    return _ret = track, _possibleConstructorReturn(_this, _ret);\n  }\n\n  return AudioTrack;\n}(_track2['default']);\n\nexports['default'] = AudioTrack;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/video.js/es5/tracks/audio-track.js\n ** module id = 110\n ** module chunks = 0 1\n **/","'use strict';\n\nexports.__esModule = true;\n\nvar _trackEnums = require('./track-enums');\n\nvar _track = require('./track');\n\nvar _track2 = _interopRequireDefault(_track);\n\nvar _mergeOptions = require('../utils/merge-options');\n\nvar _mergeOptions2 = _interopRequireDefault(_mergeOptions);\n\nvar _browser = require('../utils/browser.js');\n\nvar browser = _interopRequireWildcard(_browser);\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj['default'] = obj; return newObj; } }\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\n/**\n * A representation of a single `VideoTrack`.\n *\n * @see [Spec]{@link https://html.spec.whatwg.org/multipage/embedded-content.html#videotrack}\n * @extends Track\n */\nvar VideoTrack = function (_Track) {\n  _inherits(VideoTrack, _Track);\n\n  /**\n   * Create an instance of this class.\n   *\n   * @param {Object} [options={}]\n   *        Object of option names and values\n   *\n   * @param {string} [options.kind='']\n   *        A valid {@link VideoTrack~Kind}\n   *\n   * @param {string} [options.id='vjs_track_' + Guid.newGUID()]\n   *        A unique id for this AudioTrack.\n   *\n   * @param {string} [options.label='']\n   *        The menu label for this track.\n   *\n   * @param {string} [options.language='']\n   *        A valid two character language code.\n   *\n   * @param {boolean} [options.selected]\n   *        If this track is the one that is currently playing.\n   */\n  function VideoTrack() {\n    var _this, _ret;\n\n    var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n    _classCallCheck(this, VideoTrack);\n\n    var settings = (0, _mergeOptions2['default'])(options, {\n      kind: _trackEnums.VideoTrackKind[options.kind] || ''\n    });\n\n    // on IE8 this will be a document element\n    // for every other browser this will be a normal object\n    var track = (_this = _possibleConstructorReturn(this, _Track.call(this, settings)), _this);\n    var selected = false;\n\n    if (browser.IS_IE8) {\n      for (var prop in VideoTrack.prototype) {\n        if (prop !== 'constructor') {\n          track[prop] = VideoTrack.prototype[prop];\n        }\n      }\n    }\n\n    /**\n     * @member {boolean} selected\n     *         If this `VideoTrack` is selected or not. When setting this will\n     *         fire {@link VideoTrack#selectedchange} if the state of selected changed.\n     *\n     * @fires VideoTrack#selectedchange\n     */\n    Object.defineProperty(track, 'selected', {\n      get: function get() {\n        return selected;\n      },\n      set: function set(newSelected) {\n        // an invalid or unchanged value\n        if (typeof newSelected !== 'boolean' || newSelected === selected) {\n          return;\n        }\n        selected = newSelected;\n\n        /**\n         * An event that fires when selected changes on this track. This allows\n         * the VideoTrackList that holds this track to act accordingly.\n         *\n         * > Note: This is not part of the spec! Native tracks will do\n         *         this internally without an event.\n         *\n         * @event VideoTrack#selectedchange\n         * @type {EventTarget~Event}\n         */\n        this.trigger('selectedchange');\n      }\n    });\n\n    // if the user sets this track to selected then\n    // set selected to that true value otherwise\n    // we keep it false\n    if (settings.selected) {\n      track.selected = settings.selected;\n    }\n\n    return _ret = track, _possibleConstructorReturn(_this, _ret);\n  }\n\n  return VideoTrack;\n}(_track2['default']);\n\nexports['default'] = VideoTrack;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/video.js/es5/tracks/video-track.js\n ** module id = 111\n ** module chunks = 0 1\n **/","'use strict';\n\nexports.__esModule = true;\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nvar _log = require('./utils/log');\n\nvar _log2 = _interopRequireDefault(_log);\n\nvar _obj = require('./utils/obj');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\n/**\n * @file extend.js\n * @module extend\n */\n\n/**\n * A combination of node inherits and babel's inherits (after transpile).\n * Both work the same but node adds `super_` to the subClass\n * and Bable adds the superClass as __proto__. Both seem useful.\n *\n * @param {Object} subClass\n *        The class to inherit to\n *\n * @param {Object} superClass\n *        The class to inherit from\n *\n * @private\n */\nvar _inherits = function _inherits(subClass, superClass) {\n  if (typeof superClass !== 'function' && superClass !== null) {\n    throw new TypeError('Super expression must either be null or a function, not ' + (typeof superClass === 'undefined' ? 'undefined' : _typeof(superClass)));\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n\n  if (superClass) {\n    // node\n    subClass.super_ = superClass;\n  }\n};\n\n/**\n * Function for subclassing using the same inheritance that\n * videojs uses internally\n *\n * @param {Object} superClass\n *        The class to inherit from\n *\n * @param {Object} [subClassMethods={}]\n *        The class to inherit to\n *\n * @return {Object}\n *         The new object with subClassMethods that inherited superClass.\n */\nvar extendFn = function extendFn(superClass) {\n  var subClassMethods = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n  var subClass = function subClass() {\n    superClass.apply(this, arguments);\n  };\n\n  var methods = {};\n\n  if ((0, _obj.isObject)(subClassMethods)) {\n    if (typeof subClassMethods.init === 'function') {\n      _log2['default'].warn('Constructor logic via init() is deprecated; please use constructor() instead.');\n      subClassMethods.constructor = subClassMethods.init;\n    }\n    if (subClassMethods.constructor !== Object.prototype.constructor) {\n      subClass = subClassMethods.constructor;\n    }\n    methods = subClassMethods;\n  } else if (typeof subClassMethods === 'function') {\n    subClass = subClassMethods;\n  }\n\n  _inherits(subClass, superClass);\n\n  // Extend subObj's prototype with functions and other properties from props\n  for (var name in methods) {\n    if (methods.hasOwnProperty(name)) {\n      subClass.prototype[name] = methods[name];\n    }\n  }\n\n  return subClass;\n};\n\nexports['default'] = extendFn;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/video.js/es5/extend.js\n ** module id = 112\n ** module chunks = 0 1\n **/","/**\n * Basic Ad support plugin for video.js.\n *\n * Common code to support ad integrations.\n */\n(function(window, videojs, undefined) {\n'use strict';\n\nvar\n\n  VIDEO_EVENTS = videojs.getComponent('Html5').Events,\n\n  /**\n   * If ads are not playing, pauses the player at the next available\n   * opportunity. Has no effect if ads have started. This function is necessary\n   * because pausing a video element while processing a `play` event on iOS can\n   * cause the video element to continuously toggle between playing and paused\n   * states.\n   *\n   * @param {object} player The video player\n   */\n  cancelContentPlay = function(player) {\n    if (player.ads.cancelPlayTimeout) {\n      // another cancellation is already in flight, so do nothing\n      return;\n    }\n    player.ads.cancelPlayTimeout = window.setTimeout(function() {\n      // deregister the cancel timeout so subsequent cancels are scheduled\n      player.ads.cancelPlayTimeout = null;\n\n      // pause playback so ads can be handled.\n      if (!player.paused()) {\n        player.pause();\n      }\n\n      // add a contentplayback handler to resume playback when ads finish.\n      player.one('contentplayback', function() {\n        if (player.paused()) {\n          player.play();\n        }\n      });\n    }, 1);\n  },\n\n  /**\n   * Returns an object that captures the portions of player state relevant to\n   * video playback. The result of this function can be passed to\n   * restorePlayerSnapshot with a player to return the player to the state it\n   * was in when this function was invoked.\n   * @param {object} player The videojs player object\n   */\n  getPlayerSnapshot = function(player) {\n    var\n      tech = player.$('.vjs-tech'),\n      tracks = player.remoteTextTracks ? player.remoteTextTracks() : [],\n      track,\n      i,\n      suppressedTracks = [],\n      snapshot = {\n        ended: player.ended(),\n        currentSrc: player.currentSrc(),\n        src: player.src(),\n        currentTime: player.currentTime(),\n        type: player.currentType()\n      };\n\n    if (tech) {\n      snapshot.nativePoster = tech.poster;\n      snapshot.style = tech.getAttribute('style');\n    }\n\n    i = tracks.length;\n    while (i--) {\n      track = tracks[i];\n      suppressedTracks.push({\n        track: track,\n        mode: track.mode\n      });\n      track.mode = 'disabled';\n    }\n    snapshot.suppressedTracks = suppressedTracks;\n\n    return snapshot;\n  },\n\n  /**\n   * Attempts to modify the specified player so that its state is equivalent to\n   * the state of the snapshot.\n   * @param {object} snapshot - the player state to apply\n   */\n  restorePlayerSnapshot = function(player, snapshot) {\n    var\n      // the playback tech\n      tech = player.$('.vjs-tech'),\n\n      // the number of remaining attempts to restore the snapshot\n      attempts = 20,\n\n      suppressedTracks = snapshot.suppressedTracks,\n      trackSnapshot,\n      restoreTracks =  function() {\n        var i = suppressedTracks.length;\n        while (i--) {\n          trackSnapshot = suppressedTracks[i];\n          trackSnapshot.track.mode = trackSnapshot.mode;\n        }\n      },\n\n      // finish restoring the playback state\n      resume = function() {\n        var\n          ended = false,\n          updateEnded = function() {\n            ended = true;\n          };\n        player.currentTime(snapshot.currentTime);\n\n        // Resume playback if this wasn't a postroll\n        if (!snapshot.ended) {\n          player.play();\n        } else {\n          // On iOS 8.1, the \"ended\" event will not fire if you seek\n          // directly to the end of a video. To make that behavior\n          // consistent with the standard, fire a synthetic event if\n          // \"ended\" does not fire within 250ms. Note that the ended\n          // event should occur whether the browser actually has data\n          // available for that position\n          // (https://html.spec.whatwg.org/multipage/embedded-content.html#seeking),\n          // so it should not be necessary to wait for the seek to\n          // indicate completion.\n          player.ads.resumeEndedTimeout = window.setTimeout(function() {\n            if (!ended) {\n              player.play();\n            }\n            player.off('ended', updateEnded);\n            player.ads.resumeEndedTimeout = null;\n          }, 250);\n          player.on('ended', updateEnded);\n\n          // Need to clear the resume/ended timeout on dispose. If it fires\n          // after a player is disposed, an error will be thrown!\n          player.on('dispose', function() {\n            window.clearTimeout(player.ads.resumeEndedTimeout);\n          });\n        }\n      },\n\n      // determine if the video element has loaded enough of the snapshot source\n      // to be ready to apply the rest of the state\n      tryToResume = function() {\n\n        // tryToResume can either have been called through the `contentcanplay`\n        // event or fired through setTimeout.\n        // When tryToResume is called, we should make sure to clear out the other\n        // way it could've been called by removing the listener and clearing out\n        // the timeout.\n        player.off('contentcanplay', tryToResume);\n        if (player.ads.tryToResumeTimeout_) {\n          player.clearTimeout(player.ads.tryToResumeTimeout_);\n          player.ads.tryToResumeTimeout_ = null;\n        }\n\n        // Tech may have changed depending on the differences in sources of the\n        // original video and that of the ad\n        tech = player.el().querySelector('.vjs-tech');\n\n        if (tech.readyState > 1) {\n          // some browsers and media aren't \"seekable\".\n          // readyState greater than 1 allows for seeking without exceptions\n          return resume();\n        }\n\n        if (tech.seekable === undefined) {\n          // if the tech doesn't expose the seekable time ranges, try to\n          // resume playback immediately\n          return resume();\n        }\n\n        if (tech.seekable.length > 0) {\n          // if some period of the video is seekable, resume playback\n          return resume();\n        }\n\n        // delay a bit and then check again unless we're out of attempts\n        if (attempts--) {\n          window.setTimeout(tryToResume, 50);\n        } else {\n          (function() {\n            try {\n              resume();\n            } catch(e) {\n              videojs.log.warn('Failed to resume the content after an advertisement', e);\n            }\n          })();\n        }\n      },\n\n      // whether the video element has been modified since the\n      // snapshot was taken\n      srcChanged;\n\n    if (snapshot.nativePoster) {\n      tech.poster = snapshot.nativePoster;\n    }\n\n    if ('style' in snapshot) {\n      // overwrite all css style properties to restore state precisely\n      tech.setAttribute('style', snapshot.style || '');\n    }\n\n    // Determine whether the player needs to be restored to its state\n    // before ad playback began. With a custom ad display or burned-in\n    // ads, the content player state hasn't been modified and so no\n    // restoration is required\n\n    srcChanged = player.src() !== snapshot.src || player.currentSrc() !== snapshot.currentSrc;\n\n    if (srcChanged) {\n      // on ios7, fiddling with textTracks too early will cause safari to crash\n      player.one('contentloadedmetadata', restoreTracks);\n\n      // if the src changed for ad playback, reset it\n      player.src({ src: snapshot.currentSrc, type: snapshot.type });\n      // safari requires a call to `load` to pick up a changed source\n      player.load();\n      // and then resume from the snapshots time once the original src has loaded\n      // in some browsers (firefox) `canplay` may not fire correctly.\n      // Reace the `canplay` event with a timeout.\n      player.one('contentcanplay', tryToResume);\n      player.ads.tryToResumeTimeout_ = player.setTimeout(tryToResume, 2000);\n    } else if (!player.ended() || !snapshot.ended) {\n      // if we didn't change the src, just restore the tracks\n      restoreTracks();\n      // the src didn't change and this wasn't a postroll\n      // just resume playback at the current time.\n      player.play();\n    }\n  },\n\n  /**\n   * Remove the poster attribute from the video element tech, if present. When\n   * reusing a video element for multiple videos, the poster image will briefly\n   * reappear while the new source loads. Removing the attribute ahead of time\n   * prevents the poster from showing up between videos.\n   * @param {object} player The videojs player object\n   */\n  removeNativePoster = function(player) {\n    var tech = player.$('.vjs-tech');\n    if (tech) {\n      tech.removeAttribute('poster');\n    }\n  },\n\n  // ---------------------------------------------------------------------------\n  // Ad Framework\n  // ---------------------------------------------------------------------------\n\n  // default framework settings\n  defaults = {\n    // maximum amount of time in ms to wait to receive `adsready` from the ad\n    // implementation after play has been requested. Ad implementations are\n    // expected to load any dynamic libraries and make any requests to determine\n    // ad policies for a video during this time.\n    timeout: 5000,\n\n    // maximum amount of time in ms to wait for the ad implementation to start\n    // linear ad mode after `readyforpreroll` has fired. This is in addition to\n    // the standard timeout.\n    prerollTimeout: 100,\n\n    // maximum amount of time in ms to wait for the ad implementation to start\n    // linear ad mode after `contentended` has fired.\n    postrollTimeout: 100,\n\n    // when truthy, instructs the plugin to output additional information about\n    // plugin state to the video.js log. On most devices, the video.js log is\n    // the same as the developer console.\n    debug: false\n  },\n\n  adFramework = function(options) {\n    var player = this;\n    var settings = videojs.mergeOptions(defaults, options);\n    var fsmHandler;\n\n    // prefix all video element events during ad playback\n    // if the video element emits ad-related events directly,\n    // plugins that aren't ad-aware will break. prefixing allows\n    // plugins that wish to handle ad events to do so while\n    // avoiding the complexity for common usage\n    (function() {\n      var videoEvents = VIDEO_EVENTS.concat([\n        'firstplay',\n        'loadedalldata'\n      ]);\n\n      var returnTrue = function() { return true; };\n\n      var triggerEvent = function(type, event) {\n        // pretend we called stopImmediatePropagation because we want the native\n        // element events to continue propagating\n        event.isImmediatePropagationStopped = returnTrue;\n        event.cancelBubble = true;\n        event.isPropagationStopped = returnTrue;\n        player.trigger({\n          type: type + event.type,\n          state: player.ads.state,\n          originalEvent: event\n        });\n      };\n\n      player.on(videoEvents, function redispatch(event) {\n        if (player.ads.state === 'ad-playback') {\n          triggerEvent('ad', event);\n        } else if (player.ads.state === 'content-playback' && event.type === 'ended') {\n          triggerEvent('content', event);\n        } else if (player.ads.state === 'content-resuming') {\n          if (player.ads.snapshot) {\n            // the video element was recycled for ad playback\n            if (player.currentSrc() !== player.ads.snapshot.currentSrc) {\n              if (event.type === 'loadstart') {\n                return;\n              }\n              return triggerEvent('content', event);\n\n            // we ended playing postrolls and the video itself\n            // the content src is back in place\n            } else if (player.ads.snapshot.ended) {\n              if ((event.type === 'pause' ||\n                  event.type === 'ended')) {\n                // after loading a video, the natural state is to not be started\n                // in this case, it actually has, so, we do it manually\n                player.addClass('vjs-has-started');\n                // let `pause` and `ended` events through, naturally\n                return;\n              }\n              // prefix all other events in content-resuming with `content`\n              return triggerEvent('content', event);\n            }\n          }\n          if (event.type !== 'playing') {\n            triggerEvent('content', event);\n          }\n        }\n      });\n    })();\n\n    // We now auto-play when an ad gets loaded if we're playing ads in the same video element as the content.\n    // The problem is that in IE11, we cannot play in addurationchange but in iOS8, we cannot play from adcanplay.\n    // This will allow ad-integrations from needing to do this themselves.\n    player.on(['addurationchange', 'adcanplay'], function() {\n      if (player.currentSrc() === player.ads.snapshot.currentSrc) {\n        return;\n      }\n\n      player.play();\n    });\n\n    // replace the ad initializer with the ad namespace\n    player.ads = {\n      state: 'content-set',\n\n      // Call this when an ad response has been received and there are\n      // linear ads ready to be played.\n      startLinearAdMode: function() {\n        if (player.ads.state === 'preroll?' ||\n            player.ads.state === 'content-playback' ||\n            player.ads.state === 'postroll?') {\n          player.trigger('adstart');\n        }\n      },\n\n      // Call this when a linear ad pod has finished playing.\n      endLinearAdMode: function() {\n        if (player.ads.state === 'ad-playback') {\n          player.trigger('adend');\n        }\n      },\n\n      // Call this when an ad response has been received but there are no\n      // linear ads to be played (i.e. no ads available, or overlays).\n      // This has no effect if we are already in a linear ad mode.  Always\n      // use endLinearAdMode() to exit from linear ad-playback state.\n      skipLinearAdMode: function() {\n        if (player.ads.state !== 'ad-playback') {\n          player.trigger('adskip');\n        }\n      }\n    };\n\n    fsmHandler = function(event) {\n      // Ad Playback State Machine\n      var fsm = {\n        'content-set': {\n          events: {\n            'adscanceled': function() {\n              this.state = 'content-playback';\n            },\n            'adsready': function() {\n              this.state = 'ads-ready';\n            },\n            'play': function() {\n              this.state = 'ads-ready?';\n              cancelContentPlay(player);\n              // remove the poster so it doesn't flash between videos\n              removeNativePoster(player);\n            },\n            'adserror': function() {\n              this.state = 'content-playback';\n            },\n            'adskip': function() {\n              this.state = 'content-playback';\n            }\n          }\n        },\n        'ads-ready': {\n          events: {\n            'play': function() {\n              this.state = 'preroll?';\n              cancelContentPlay(player);\n            },\n            'adskip': function() {\n              this.state = 'content-playback';\n            },\n            'adserror': function() {\n              this.state = 'content-playback';\n            }\n          }\n        },\n        'preroll?': {\n          enter: function() {\n            // change class to show that we're waiting on ads\n            player.addClass('vjs-ad-loading');\n            // schedule an adtimeout event to fire if we waited too long\n            player.ads.adTimeoutTimeout = window.setTimeout(function() {\n              player.trigger('adtimeout');\n            }, settings.prerollTimeout);\n            // signal to ad plugin that it's their opportunity to play a preroll\n            player.trigger('readyforpreroll');\n          },\n          leave: function() {\n            window.clearTimeout(player.ads.adTimeoutTimeout);\n            player.removeClass('vjs-ad-loading');\n          },\n          events: {\n            'play': function() {\n              cancelContentPlay(player);\n            },\n            'adstart': function() {\n              this.state = 'ad-playback';\n            },\n            'adskip': function() {\n              this.state = 'content-playback';\n            },\n            'adtimeout': function() {\n              this.state = 'content-playback';\n            },\n            'adserror': function() {\n              this.state = 'content-playback';\n            }\n          }\n        },\n        'ads-ready?': {\n          enter: function() {\n            player.addClass('vjs-ad-loading');\n            player.ads.adTimeoutTimeout = window.setTimeout(function() {\n              player.trigger('adtimeout');\n            }, settings.timeout);\n          },\n          leave: function() {\n            window.clearTimeout(player.ads.adTimeoutTimeout);\n            player.removeClass('vjs-ad-loading');\n          },\n          events: {\n            'play': function() {\n              cancelContentPlay(player);\n            },\n            'adscanceled': function() {\n              this.state = 'content-playback';\n            },\n            'adsready': function() {\n              this.state = 'preroll?';\n            },\n            'adskip': function() {\n              this.state = 'content-playback';\n            },\n            'adtimeout': function() {\n              this.state = 'content-playback';\n            },\n            'adserror': function() {\n              this.state = 'content-playback';\n            }\n          }\n        },\n        'ad-playback': {\n          enter: function() {\n            // capture current player state snapshot (playing, currentTime, src)\n            this.snapshot = getPlayerSnapshot(player);\n\n            // add css to the element to indicate and ad is playing.\n            player.addClass('vjs-ad-playing');\n\n            // remove the poster so it doesn't flash between ads\n            removeNativePoster(player);\n\n            // We no longer need to supress play events once an ad is playing.\n            // Clear it if we were.\n            if (player.ads.cancelPlayTimeout) {\n              window.clearTimeout(player.ads.cancelPlayTimeout);\n              player.ads.cancelPlayTimeout = null;\n            }\n          },\n          leave: function() {\n            player.removeClass('vjs-ad-playing');\n            restorePlayerSnapshot(player, this.snapshot);\n            // trigger 'adend' as a consistent notification\n            // event that we're exiting ad-playback.\n            if (player.ads.triggerevent !== 'adend') {\n              player.trigger('adend');\n            }\n          },\n          events: {\n            'adend': function() {\n              this.state = 'content-resuming';\n            },\n            'adserror': function() {\n              this.state = 'content-resuming';\n            }\n          }\n        },\n        'content-resuming': {\n          enter: function() {\n            if (this.snapshot.ended) {\n              window.clearTimeout(player.ads._fireEndedTimeout);\n              // in some cases, ads are played in a swf or another video element\n              // so we do not get an ended event in this state automatically.\n              // If we don't get an ended event we can use, we need to trigger\n              // one ourselves or else we won't actually ever end the current video.\n              player.ads._fireEndedTimeout = window.setTimeout(function() {\n                player.trigger('ended');\n              }, 1000);\n            }\n          },\n          leave: function() {\n            window.clearTimeout(player.ads._fireEndedTimeout);\n          },\n          events: {\n            'contentupdate': function() {\n              this.state = 'content-set';\n            },\n            contentresumed: function() {\n              this.state = 'content-playback';\n            },\n            'playing': function() {\n              this.state = 'content-playback';\n            },\n            'ended': function() {\n              this.state = 'content-playback';\n            }\n          }\n        },\n        'postroll?': {\n          enter: function() {\n            this.snapshot = getPlayerSnapshot(player);\n\n            player.addClass('vjs-ad-loading');\n\n            player.ads.adTimeoutTimeout = window.setTimeout(function() {\n              player.trigger('adtimeout');\n            }, settings.postrollTimeout);\n          },\n          leave: function() {\n            window.clearTimeout(player.ads.adTimeoutTimeout);\n            player.removeClass('vjs-ad-loading');\n          },\n          events: {\n            'adstart': function() {\n              this.state = 'ad-playback';\n            },\n            'adskip': function() {\n              this.state = 'content-resuming';\n              window.setTimeout(function() {\n                player.trigger('ended');\n              }, 1);\n            },\n            'adtimeout': function() {\n              this.state = 'content-resuming';\n              window.setTimeout(function() {\n                player.trigger('ended');\n              }, 1);\n            },\n            'adserror': function() {\n              this.state = 'content-resuming';\n              window.setTimeout(function() {\n                player.trigger('ended');\n              }, 1);\n            }\n          }\n        },\n        'content-playback': {\n          enter: function() {\n            // make sure that any cancelPlayTimeout is cleared\n            if (player.ads.cancelPlayTimeout) {\n              window.clearTimeout(player.ads.cancelPlayTimeout);\n              player.ads.cancelPlayTimeout = null;\n            }\n            // this will cause content to start if a user initiated\n            // 'play' event was canceled earlier.\n            player.trigger({\n              type: 'contentplayback',\n              triggerevent: player.ads.triggerevent\n            });\n          },\n          events: {\n            // in the case of a timeout, adsready might come in late.\n            'adsready': function() {\n              player.trigger('readyforpreroll');\n            },\n            'adstart': function() {\n              this.state = 'ad-playback';\n            },\n            'contentupdate': function() {\n              if (player.paused()) {\n                this.state = 'content-set';\n              } else {\n                this.state = 'ads-ready?';\n              }\n            },\n            'contentended': function() {\n              this.state = 'postroll?';\n            }\n          }\n        }\n      };\n\n      (function(state) {\n        var noop = function() {};\n\n        // process the current event with a noop default handler\n        ((fsm[state].events || {})[event.type] || noop).apply(player.ads);\n\n        // check whether the state has changed\n        if (state !== player.ads.state) {\n\n          // record the event that caused the state transition\n          player.ads.triggerevent = event.type;\n\n          // execute leave/enter callbacks if present\n          (fsm[state].leave || noop).apply(player.ads);\n          (fsm[player.ads.state].enter || noop).apply(player.ads);\n\n          // output debug logging\n          if (settings.debug) {\n            videojs.log('ads', player.ads.triggerevent + ' triggered: ' + state + ' -> ' + player.ads.state);\n          }\n        }\n\n      })(player.ads.state);\n\n    };\n\n    // register for the events we're interested in\n    player.on(VIDEO_EVENTS.concat([\n      // events emitted by ad plugin\n      'adtimeout',\n      'contentupdate',\n      'contentplaying',\n      'contentended',\n      'contentresumed',\n\n      // events emitted by third party ad implementors\n      'adsready',\n      'adserror',\n      'adscanceled',\n      'adstart',  // startLinearAdMode()\n      'adend',    // endLinearAdMode()\n      'adskip'    // skipLinearAdMode()\n    ]), fsmHandler);\n\n    // keep track of the current content source\n    // if you want to change the src of the video without triggering\n    // the ad workflow to restart, you can update this variable before\n    // modifying the player's source\n    player.ads.contentSrc = player.currentSrc();\n\n    // implement 'contentupdate' event.\n    (function(){\n      var\n        // check if a new src has been set, if so, trigger contentupdate\n        checkSrc = function() {\n          var src;\n          if (player.ads.state !== 'ad-playback') {\n            src = player.currentSrc();\n            if (src !== player.ads.contentSrc) {\n              player.trigger({\n                type: 'contentupdate',\n                oldValue: player.ads.contentSrc,\n                newValue: src\n              });\n              player.ads.contentSrc = src;\n            }\n          }\n        };\n      // loadstart reliably indicates a new src has been set\n      player.on('loadstart', checkSrc);\n      // check immediately in case we missed the loadstart\n      window.setTimeout(checkSrc, 1);\n    })();\n\n    // kick off the fsm\n    if (!player.paused()) {\n      // simulate a play event if we're autoplaying\n      fsmHandler({type:'play'});\n    }\n\n  };\n\n  // register the ad plugin framework\n  videojs.plugin('ads', adFramework);\n\n})(window, videojs);\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/videojs-contrib-ads/src/videojs.ads.js\n ** module id = 113\n ** module chunks = 0 1\n **/","/**\n * Copyright 2014 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * IMA SDK integration plugin for Video.js. For more information see\n * https://www.github.com/googleads/videojs-ima\n */\n\n(function(vjs) {\n  'use strict';\n  var extend = function(obj) {\n    var arg;\n    var index;\n    var key;\n    for (index = 1; index < arguments.length; index++) {\n      arg = arguments[index];\n      for (key in arg) {\n        if (arg.hasOwnProperty(key)) {\n          obj[key] = arg[key];\n        }\n      }\n    }\n    return obj;\n  };\n\n  var ima_defaults = {\n    debug: false,\n    timeout: 5000,\n    prerollTimeout: 100,\n    adLabel: 'Advertisement',\n    showControlsForJSAds: true\n  };\n\n  var init = function(options, readyCallback) {\n    this.ima = new ImaPlugin(this, options, readyCallback);\n  };\n\n  var ImaPlugin = function(player, options, readyCallback) {\n    this.player = player;\n\n    /**\n     * Assigns the unique id and class names to the given element as well as the style class\n     * @param element\n     * @param controlName\n     * @private\n     */\n    var assignControlAttributes_ = function(element, controlName) {\n      element.id = this.controlPrefix + controlName;\n      element.className = this.controlPrefix + controlName + ' ' + controlName;\n    }.bind(this);\n\n    /**\n     * Returns a regular expression to test a string for the given className\n     * @param className\n     * @returns {RegExp}\n     * @private\n     */\n    var getClassRegexp_ = function(className){\n      // Matches on\n      // (beginning of string OR NOT word char)\n      // classname\n      // (negative lookahead word char OR end of string)\n      return new RegExp('(^|[^A-Za-z-])' + className + '((?![A-Za-z-])|$)', 'gi');\n    };\n\n    /**\n     * Adds a class to the given element if it doesn't already have the class\n     * @param element\n     * @param classToAdd\n     * @private\n     */\n    var addClass_ = function(element, classToAdd){\n      if(getClassRegexp_(classToAdd).test(element.className)){\n        return element;\n      }\n\n      return element.className = element.className.trim() + ' ' + classToAdd;\n    };\n\n    /**\n     * Removes a class from the given element if it has the given class\n     * @param element\n     * @param classToRemove\n     * @private\n     */\n    var removeClass_ = function(element, classToRemove){\n      var classRegexp = getClassRegexp_(classToRemove);\n\n      if(!classRegexp.test(element.className)){\n        return element;\n      }\n\n      return element.className = element.className.trim().replace(classRegexp, '');\n    };\n\n    /**\n     * Creates the ad container passed to the IMA SDK.\n     * @private\n     */\n    var createAdContainer_ = function() {\n      // The adContainerDiv is the DOM of the element that will house\n      // the ads and ad controls.\n      this.vjsControls = this.player.getChild('controlBar');\n      this.adContainerDiv =\n          this.vjsControls.el().parentNode.appendChild(\n              document.createElement('div'));\n      assignControlAttributes_(this.adContainerDiv, 'ima-ad-container');\n      this.adContainerDiv.style.position = \"absolute\";\n      this.adContainerDiv.style.zIndex = 1111;\n      this.adContainerDiv.addEventListener(\n          'mouseenter',\n          showAdControls_,\n          false);\n      this.adContainerDiv.addEventListener(\n          'mouseleave',\n          hideAdControls_,\n          false);\n      createControls_();\n      this.adDisplayContainer =\n          new google.ima.AdDisplayContainer(this.adContainerDiv, this.contentPlayer);\n    }.bind(this);\n\n    /**\n     * Creates the controls for the ad.\n     * @private\n     */\n    var createControls_ = function() {\n      this.controlsDiv = document.createElement('div');\n      assignControlAttributes_(this.controlsDiv, 'ima-controls-div');\n      this.controlsDiv.style.width = '100%';\n      this.countdownDiv = document.createElement('div');\n      assignControlAttributes_(this.countdownDiv, 'ima-countdown-div');\n      this.countdownDiv.innerHTML = this.settings.adLabel;\n      this.countdownDiv.style.display = this.showCountdown ? 'block' : 'none';\n      this.seekBarDiv = document.createElement('div');\n      assignControlAttributes_(this.seekBarDiv, 'ima-seek-bar-div');\n      this.seekBarDiv.style.width = '100%';\n      this.progressDiv = document.createElement('div');\n      assignControlAttributes_(this.progressDiv, 'ima-progress-div');\n      this.playPauseDiv = document.createElement('div');\n      assignControlAttributes_(this.playPauseDiv, 'ima-play-pause-div');\n      addClass_(this.playPauseDiv, 'ima-playing');\n      this.playPauseDiv.addEventListener(\n          'click',\n          onAdPlayPauseClick_,\n          false);\n      this.muteDiv = document.createElement('div');\n      assignControlAttributes_(this.muteDiv, 'ima-mute-div');\n      addClass_(this.muteDiv, 'ima-non-muted');\n      this.muteDiv.addEventListener(\n          'click',\n          onAdMuteClick_,\n          false);\n      this.sliderDiv = document.createElement('div');\n      assignControlAttributes_(this.sliderDiv, 'ima-slider-div');\n      this.sliderDiv.addEventListener(\n          'mousedown',\n          onAdVolumeSliderMouseDown_,\n          false);\n      this.sliderLevelDiv = document.createElement('div');\n      assignControlAttributes_(this.sliderLevelDiv, 'ima-slider-level-div');\n      this.fullscreenDiv = document.createElement('div');\n      assignControlAttributes_(this.fullscreenDiv, 'ima-fullscreen-div');\n      addClass_(this.fullscreenDiv, 'ima-non-fullscreen');\n      this.fullscreenDiv.addEventListener(\n          'click',\n          onAdFullscreenClick_,\n          false);\n      this.adContainerDiv.appendChild(this.controlsDiv);\n      this.controlsDiv.appendChild(this.countdownDiv);\n      this.controlsDiv.appendChild(this.seekBarDiv);\n      this.controlsDiv.appendChild(this.playPauseDiv);\n      this.controlsDiv.appendChild(this.muteDiv);\n      this.controlsDiv.appendChild(this.sliderDiv);\n      this.controlsDiv.appendChild(this.fullscreenDiv);\n      this.seekBarDiv.appendChild(this.progressDiv);\n      this.sliderDiv.appendChild(this.sliderLevelDiv);\n    }.bind(this);\n\n    /**\n     * Initializes the AdDisplayContainer. On mobile, this must be done as a\n     * result of user action.\n     */\n    this.initializeAdDisplayContainer = function() {\n      this.adDisplayContainerInitialized = true;\n      this.adDisplayContainer.initialize();\n    }.bind(this);\n\n    /**\n     * Creates the AdsRequest and request ads through the AdsLoader.\n     */\n    this.requestAds = function() {\n      if (!this.adDisplayContainerInitialized) {\n        this.adDisplayContainer.initialize();\n      }\n      var adsRequest = new google.ima.AdsRequest();\n      if (this.settings.adTagUrl) {\n        adsRequest.adTagUrl = this.settings.adTagUrl;\n      } else {\n        adsRequest.adsResponse = this.settings.adsResponse;\n      }\n      if (this.settings.forceNonLinearFullSlot) {\n        adsRequest.forceNonLinearFullSlot = true;\n      }\n\n      adsRequest.linearAdSlotWidth = this.getPlayerWidth();\n      adsRequest.linearAdSlotHeight = this.getPlayerHeight();\n      adsRequest.nonLinearAdSlotWidth =\n          this.settings.nonLinearWidth || this.getPlayerWidth();\n      adsRequest.nonLinearAdSlotHeight =\n          this.settings.nonLinearHeight || (this.getPlayerHeight() / 3);\n\n      this.adsLoader.requestAds(adsRequest);\n    }.bind(this);\n\n    /**\n     * Listener for the ADS_MANAGER_LOADED event. Creates the AdsManager,\n     * sets up event listeners, and triggers the 'adsready' event for\n     * videojs-ads-contrib.\n     * @private\n     */\n    var onAdsManagerLoaded_ = function(adsManagerLoadedEvent) {\n      this.adsManager = adsManagerLoadedEvent.getAdsManager(\n          this.contentPlayheadTracker, this.adsRenderingSettings);\n\n      this.adsManager.addEventListener(\n          google.ima.AdErrorEvent.Type.AD_ERROR,\n          onAdError_);\n      this.adsManager.addEventListener(\n          google.ima.AdEvent.Type.AD_BREAK_READY,\n          onAdBreakReady_);\n      this.adsManager.addEventListener(\n          google.ima.AdEvent.Type.CONTENT_PAUSE_REQUESTED,\n          this.onContentPauseRequested_);\n      this.adsManager.addEventListener(\n          google.ima.AdEvent.Type.CONTENT_RESUME_REQUESTED,\n          this.onContentResumeRequested_);\n      this.adsManager.addEventListener(\n          google.ima.AdEvent.Type.ALL_ADS_COMPLETED,\n          onAllAdsCompleted_);\n\n      this.adsManager.addEventListener(\n          google.ima.AdEvent.Type.LOADED,\n          onAdLoaded_);\n      this.adsManager.addEventListener(\n          google.ima.AdEvent.Type.STARTED,\n          onAdStarted_);\n      this.adsManager.addEventListener(\n          google.ima.AdEvent.Type.CLICK,\n          onAdPlayPauseClick_);\n      this.adsManager.addEventListener(\n          google.ima.AdEvent.Type.COMPLETE,\n          this.onAdComplete_);\n      this.adsManager.addEventListener(\n          google.ima.AdEvent.Type.SKIPPED,\n          this.onAdComplete_);\n\n      if (!this.autoPlayAdBreaks) {\n        try {\n          var initWidth = this.getPlayerWidth();\n          var initHeight = this.getPlayerHeight();\n          this.adsManagerDimensions.width = initWidth;\n          this.adsManagerDimensions.height = initHeight;\n          this.adsManager.init(\n              initWidth,\n              initHeight,\n              google.ima.ViewMode.NORMAL);\n          this.adsManager.setVolume(this.player.muted() ? 0 : this.player.volume());\n        } catch (adError) {\n          onAdError_(adError);\n        }\n      }\n\n      this.player.trigger('adsready');\n    }.bind(this);\n\n    /**\n     * DEPRECATED: Use startFromReadyCallback\n     * Start ad playback, or content video playback in the absence of a\n     * pre-roll.\n     */\n    this.start = function() {\n      window.console.log(\n          'WARNING: player.ima.start is deprecated. Use ' +\n              'player.ima.startFromReadyCallback instead.');\n    };\n\n    /**\n     * Start ad playback, or content video playback in the absence of a\n     * pre-roll. **NOTE**: This method only needs to be called if you provide\n     * your own readyCallback as the second parameter to player.ima(). If you\n     * only provide options and do not provide your own readyCallback,\n     * **DO NOT** call this method. If you do provide your own readyCallback,\n     * you should call this method in the last line of that callback. For more\n     * info, see this method's usage in our advanced and playlist examples.\n     */\n    this.startFromReadyCallback = function() {\n      if (this.autoPlayAdBreaks) {\n        try {\n          this.adsManager.init(\n              this.getPlayerWidth(),\n              this.getPlayerHeight(),\n              google.ima.ViewMode.NORMAL);\n          this.adsManager.setVolume(this.player.muted() ? 0 : this.player.volume());\n          this.adsManager.start();\n        } catch (adError) {\n          onAdError_(adError);\n        }\n      }\n    }.bind(this);\n\n    /**\n     * Listener for errors fired by the AdsLoader.\n     * @param {google.ima.AdErrorEvent} event The error event thrown by the\n     *     AdsLoader. See\n     *     https://developers.google.com/interactive-media-ads/docs/sdks/html5/v3/apis#ima.AdError.Type\n     * @private\n     */\n    var onAdsLoaderError_ = function(event) {\n      window.console.log('AdsLoader error: ' + event.getError());\n      this.adContainerDiv.style.display = 'none';\n      if (this.adsManager) {\n        this.adsManager.destroy();\n      }\n      this.player.trigger({type: 'adserror', data: { AdError: event.getError(), AdErrorEvent: event }});\n    }.bind(this);\n\n    /**\n     * Listener for errors thrown by the AdsManager.\n     * @param {google.ima.AdErrorEvent} adErrorEvent The error event thrown by\n     *     the AdsManager.\n     * @private\n     */\n    var onAdError_ = function(adErrorEvent) {\n      var errorMessage = adErrorEvent.getError !== undefined ? adErrorEvent.getError() : adErrorEvent.stack;\n      window.console.log('Ad error: ' + errorMessage);\n      this.vjsControls.show();\n      this.adsManager.destroy();\n      this.adContainerDiv.style.display = 'none';\n      this.player.trigger({ type: 'adserror', data: { AdError: errorMessage, AdErrorEvent: adErrorEvent }});\n    }.bind(this);\n\n    /**\n     * Listener for AD_BREAK_READY. Passes event on to publisher's listener.\n     * @param {google.ima.AdEvent} adEvent AdEvent thrown by the AdsManager.\n     * @private\n     */\n    var onAdBreakReady_ = function(adEvent) {\n      this.adBreakReadyListener(adEvent);\n    }.bind(this);\n\n    /**\n     * Called by publishers in manual ad break playback mode to start an ad\n     * break.\n     */\n    this.playAdBreak = function() {\n      if (!this.autoPlayAdBreaks) {\n        this.adsManager.start();\n      }\n    }.bind(this);\n\n    /**\n     * Pauses the content video and displays the ad container so ads can play.\n     * @param {google.ima.AdEvent} adEvent The AdEvent thrown by the AdsManager.\n     * @private\n     */\n    this.onContentPauseRequested_ = function(adEvent) {\n      this.adsActive = true;\n      this.adPlaying = true;\n      this.contentSource = this.player.currentSrc();\n      this.player.off('ended', this.localContentEndedListener);\n      if (adEvent.getAd().getAdPodInfo().getPodIndex() != -1) {\n        // Skip this call for post-roll ads\n        this.player.ads.startLinearAdMode();\n      }\n      this.adContainerDiv.style.display = 'block';\n\n      var contentType = adEvent.getAd().getContentType();\n      if ((contentType === 'application/javascript') && !this.settings.showControlsForJSAds) {\n        this.controlsDiv.style.display = 'none';\n      } else {\n        this.controlsDiv.style.display = 'block';\n      }\n\n      this.vjsControls.hide();\n      showPlayButton();\n      this.player.pause();\n    }.bind(this);\n\n    /**\n     * Resumes content video and hides the ad container.\n     * @param {google.ima.AdEvent} adEvent The AdEvent thrown by the AdsManager.\n     * @private\n     */\n    this.onContentResumeRequested_ = function(adEvent) {\n      this.adsActive = false;\n      this.adPlaying = false;\n      this.player.on('ended', this.localContentEndedListener);\n      if (this.currentAd == null || // hide for post-roll only playlist\n          this.currentAd.isLinear()) { // don't hide for non-linear ads\n        this.adContainerDiv.style.display = 'none';\n      }\n      this.vjsControls.show();\n      if (!this.currentAd) {\n        // Something went wrong playing the ad\n        this.player.ads.endLinearAdMode();\n      } else if (!this.contentComplete &&\n          // Don't exit linear mode after post-roll or content will auto-replay\n          this.currentAd.getAdPodInfo().getPodIndex() != -1 ) {\n        this.player.ads.endLinearAdMode();\n      }\n      this.countdownDiv.innerHTML = '';\n    }.bind(this);\n\n    /**\n     * Records that ads have completed and calls contentAndAdsEndedListeners\n     * if content is also complete.\n     * @param {google.ima.AdEvent} adEvent The AdEvent thrown by the AdsManager.\n     * @private\n     */\n    var onAllAdsCompleted_ = function(adEvent) {\n      this.allAdsCompleted = true;\n      this.adContainerDiv.style.display = 'none';\n      if (this.contentComplete == true) {\n        if (this.contentPlayer.src != this.contentSource) {\n          this.player.src(this.contentSource);\n        }\n        for (var index in this.contentAndAdsEndedListeners) {\n          this.contentAndAdsEndedListeners[index]();\n        }\n      }\n    }.bind(this);\n\n    /**\n     * Starts the content video when a non-linear ad is loaded.\n     * @param {google.ima.AdEvent} adEvent The AdEvent thrown by the AdsManager.\n     * @private\n     */\n   var onAdLoaded_ = function(adEvent) {\n      if (!adEvent.getAd().isLinear()) {\n        this.player.play();\n      }\n    }.bind(this);\n\n    /**\n     * Starts the interval timer to check the current ad time when an ad starts\n     * playing.\n     * @param {google.ima.AdEvent} adEvent The AdEvent thrown by the AdsManager.\n     * @private\n     */\n    var onAdStarted_ = function(adEvent) {\n      this.currentAd = adEvent.getAd();\n      if (this.currentAd.isLinear()) {\n        this.adTrackingTimer = setInterval(\n            onAdPlayheadTrackerInterval_, 250);\n        // Don't bump container when controls are shown\n        removeClass_(this.adContainerDiv, 'bumpable-ima-ad-container');\n      } else {\n        // Bump container when controls are shown\n       addClass_(this.adContainerDiv, 'bumpable-ima-ad-container');\n      }\n    }.bind(this);\n\n    /**\n     * Clears the interval timer for current ad time when an ad completes.\n     * @param {google.ima.AdEvent} adEvent The AdEvent thrown by the AdsManager.\n     * @private\n     */\n    this.onAdComplete_ = function(adEvent) {\n      if (this.currentAd.isLinear()) {\n        clearInterval(this.adTrackingTimer);\n      }\n    }.bind(this);\n\n    /**\n     * Gets the current time and duration of the ad and calls the method to\n     * update the ad UI.\n     * @private\n     */\n    var onAdPlayheadTrackerInterval_ = function() {\n      var remainingTime = this.adsManager.getRemainingTime();\n      var duration =  this.currentAd.getDuration();\n      var currentTime = duration - remainingTime;\n      currentTime = currentTime > 0 ? currentTime : 0;\n      var isPod = false;\n      var totalAds = 0;\n      var adPosition;\n      if (this.currentAd.getAdPodInfo()) {\n        isPod = true;\n        adPosition = this.currentAd.getAdPodInfo().getAdPosition();\n        totalAds = this.currentAd.getAdPodInfo().getTotalAds();\n      }\n\n      // Update countdown timer data\n      var remainingMinutes = Math.floor(remainingTime / 60);\n      var remainingSeconds = Math.floor(remainingTime % 60);\n      if (remainingSeconds.toString().length < 2) {\n        remainingSeconds = '0' + remainingSeconds;\n      }\n      var podCount = ': ';\n      if (isPod && (totalAds > 1)) {\n        podCount = ' (' + adPosition + ' of ' + totalAds + '): ';\n      }\n      this.countdownDiv.innerHTML =\n          this.settings.adLabel + podCount +\n          remainingMinutes + ':' + remainingSeconds;\n\n      // Update UI\n      var playProgressRatio = currentTime / duration;\n      var playProgressPercent = playProgressRatio * 100;\n      this.progressDiv.style.width = playProgressPercent + '%';\n    }.bind(this);\n\n    this.getPlayerWidth = function() {\n      var retVal = parseInt(getComputedStyle(this.player.el()).width, 10) ||\n          this.player.width();\n      return retVal;\n    }.bind(this);\n\n    this.getPlayerHeight = function() {\n      var retVal = parseInt(getComputedStyle(this.player.el()).height, 10) ||\n          this.player.height();\n      return retVal;\n    }.bind(this);\n\n    /**\n     * Hides the ad controls on mouseout.\n     * @private\n     */\n    var hideAdControls_ = function() {\n      this.controlsDiv.style.height = '14px';\n      this.playPauseDiv.style.display = 'none';\n      this.muteDiv.style.display = 'none';\n      this.sliderDiv.style.display = 'none';\n      this.fullscreenDiv.style.display = 'none';\n    }.bind(this);\n\n    /**\n     * Shows ad controls on mouseover.\n     * @private\n     */\n    var showAdControls_ = function() {\n      this.controlsDiv.style.height = '37px';\n      this.playPauseDiv.style.display = 'block';\n      this.muteDiv.style.display = 'block';\n      this.sliderDiv.style.display = 'block';\n      this.fullscreenDiv.style.display = 'block';\n    }.bind(this);\n\n    /**\n     * Show pause and hide play button\n     */\n    var showPauseButton = function() {\n      addClass_(this.playPauseDiv, 'ima-paused');\n      removeClass_(this.playPauseDiv, 'ima-playing');\n    }.bind(this);\n\n    /**\n     * Show play and hide pause button\n     */\n    var showPlayButton = function() {\n      addClass_(this.playPauseDiv, 'ima-playing');\n      removeClass_(this.playPauseDiv, 'ima-paused');\n    }.bind(this);\n\n    /**\n     * Listener for clicks on the play/pause button during ad playback.\n     * @private\n     */\n    var onAdPlayPauseClick_ = function() {\n      if (this.adPlaying) {\n        showPauseButton();\n        this.adsManager.pause();\n        this.adPlaying = false;\n      } else {\n        showPlayButton();\n        this.adsManager.resume();\n        this.adPlaying = true;\n      }\n    }.bind(this);\n\n    /**\n     * Listener for clicks on the mute button during ad playback.\n     * @private\n     */\n    var onAdMuteClick_ = function() {\n      if (this.adMuted) {\n        addClass_(this.muteDiv, 'ima-non-muted');\n        removeClass_(this.muteDiv, 'ima-muted');\n        this.adsManager.setVolume(1);\n        // Bubble down to content player\n        this.player.muted(false);\n        this.adMuted = false;\n        this.sliderLevelDiv.style.width = this.player.volume() * 100 + \"%\";\n      } else {\n        addClass_(this.muteDiv, 'ima-muted');\n        removeClass_(this.muteDiv, 'ima-non-muted');\n        this.adsManager.setVolume(0);\n        // Bubble down to content player\n        this.player.muted(true);\n        this.adMuted = true;\n        this.sliderLevelDiv.style.width = \"0%\";\n      }\n    }.bind(this);\n\n    /* Listener for mouse down events during ad playback. Used for volume.\n     * @private\n     */\n    var onAdVolumeSliderMouseDown_ = function() {\n       document.addEventListener('mouseup', onMouseUp_, false);\n       document.addEventListener('mousemove', onMouseMove_, false);\n    };\n\n    /* Mouse movement listener used for volume slider.\n     * @private\n     */\n    var onMouseMove_ = function(event) {\n      setVolumeSlider_(event);\n    };\n\n    /* Mouse release listener used for volume slider.\n     * @private\n     */\n    var onMouseUp_ = function(event) {\n      setVolumeSlider_(event);\n      document.removeEventListener('mousemove', onMouseMove_);\n      document.removeEventListener('mouseup', onMouseUp_);\n    };\n\n    /* Utility function to set volume and associated UI\n     * @private\n     */\n    var setVolumeSlider_ = function(event) {\n      var percent =\n          (event.clientX - this.sliderDiv.getBoundingClientRect().left) /\n              this.sliderDiv.offsetWidth;\n      percent *= 100;\n      //Bounds value 0-100 if mouse is outside slider region.\n      percent = Math.min(Math.max(percent, 0), 100);\n      this.sliderLevelDiv.style.width = percent + \"%\";\n      this.player.volume(percent / 100); //0-1\n      this.adsManager.setVolume(percent / 100);\n      if (this.player.volume() == 0) {\n        addClass_(this.muteDiv, 'ima-muted');\n        removeClass_(this.muteDiv, 'ima-non-muted');\n        this.player.muted(true);\n        this.adMuted = true;\n      }\n      else\n      {\n        addClass_(this.muteDiv, 'ima-non-muted');\n        removeClass_(this.muteDiv, 'ima-muted');\n        this.player.muted(false);\n        this.adMuted = false;\n      }\n    }.bind(this);\n\n    /**\n     * Listener for clicks on the fullscreen button during ad playback.\n     * @private\n     */\n    var onAdFullscreenClick_ = function() {\n      if (this.player.isFullscreen()) {\n        this.player.exitFullscreen();\n      } else {\n        this.player.requestFullscreen();\n      }\n    }.bind(this);\n\n    /**\n     * Listens for the video.js player to change its fullscreen status. This\n     * keeps the fullscreen-ness of the AdContainer in sync with the player.\n     * @private\n     */\n    var onFullscreenChange_ = function() {\n      if (this.player.isFullscreen()) {\n        addClass_(this.fullscreenDiv, 'ima-fullscreen');\n        removeClass_(this.fullscreenDiv, 'ima-non-fullscreen');\n        if (this.adsManager) {\n          this.adsManager.resize(\n              window.screen.width,\n              window.screen.height,\n              google.ima.ViewMode.FULLSCREEN);\n        }\n      } else {\n        addClass_(this.fullscreenDiv, 'ima-non-fullscreen');\n        removeClass_(this.fullscreenDiv, 'ima-fullscreen');\n        if (this.adsManager) {\n          this.adsManager.resize(\n              this.getPlayerWidth(),\n              this.getPlayerHeight(),\n              google.ima.ViewMode.NORMAL);\n        }\n      }\n    }.bind(this);\n\n    /**\n     * Listens for the video.js player to change its volume. This keeps the ad\n     * volume in sync with the content volume if the volume of the player is\n     * changed while content is playing\n     * @private\n     */\n    var onVolumeChange_ = function() {\n      var newVolume = this.player.muted() ? 0 : this.player.volume();\n      if (this.adsManager) {\n        this.adsManager.setVolume(newVolume);\n      }\n      // Update UI\n      if (newVolume == 0) {\n        this.adMuted = true;\n        addClass_(this.muteDiv, 'ima-muted');\n        removeClass_(this.muteDiv, 'ima-non-muted');\n        this.sliderLevelDiv.style.width = '0%';\n      } else {\n        this.adMuted = false;\n        addClass_(this.muteDiv, 'ima-non-muted');\n        removeClass_(this.muteDiv, 'ima-muted');\n        this.sliderLevelDiv.style.width = newVolume * 100 + '%';\n      }\n    }.bind(this);\n\n    /**\n     * Seeks content to 00:00:00. This is used as an event handler for the\n     * loadedmetadata event, since seeking is not possible until that event has\n     * fired.\n     * @private\n     */\n    var seekContentToZero_ = function() {\n      this.player.off('loadedmetadata', seekContentToZero_);\n      this.player.currentTime(0);\n    }.bind(this);\n\n    /**\n     * Seeks content to 00:00:00 and starts playback. This is used as an event\n     * handler for the loadedmetadata event, since seeking is not possible until\n     * that event has fired.\n     * @private\n     */\n    var playContentFromZero_ = function() {\n      this.player.off('loadedmetadata', playContentFromZero_);\n      this.player.currentTime(0);\n      this.player.play();\n    }.bind(this);\n\n    /**\n     * Destroys the AdsManager, sets it to null, and calls contentComplete to\n     * reset correlators. Once this is done it requests ads again to keep the\n     * inventory available.\n     * @private\n     */\n    var resetIMA_ = function() {\n      this.adsActive = false;\n      this.adPlaying = false;\n      this.player.on('ended', this.localContentEndedListener);\n      if (this.currentAd && this.currentAd.isLinear()) {\n        this.adContainerDiv.style.display = 'none';\n      }\n      this.vjsControls.show();\n      this.player.ads.endLinearAdMode();\n      if (this.adTrackingTimer) {\n        // If this is called while an ad is playing, stop trying to get that\n        // ad's current time.\n        clearInterval(this.adTrackingTimer);\n      }\n      if (this.adsManager) {\n        this.adsManager.destroy();\n        this.adsManager = null;\n      }\n      if (this.adsLoader && !this.contentComplete) {\n        this.adsLoader.contentComplete();\n      }\n      this.contentComplete = false;\n      this.allAdsCompleted = false;\n    }.bind(this);\n\n    /**\n     * Ads an EventListener to the AdsManager. For a list of available events,\n     * see\n     * https://developers.google.com/interactive-media-ads/docs/sdks/html5/v3/apis#ima.AdEvent.Type\n     * @param {google.ima.AdEvent.Type} event The AdEvent.Type for which to listen.\n     * @param {function} callback The method to call when the event is fired.\n     */\n    this.addEventListener = function(event, callback) {\n      if (this.adsManager) {\n        this.adsManager.addEventListener(event, callback);\n      }\n    }.bind(this);\n\n    /**\n     * Returns the instance of the AdsManager.\n     * @return {google.ima.AdsManager} The AdsManager being used by the plugin.\n     */\n    this.getAdsManager = function() {\n      return this.adsManager;\n    }.bind(this);\n\n    /**\n     * DEPRECATED: Use setContentWithAdTag.\n     * Sets the content of the video player. You should use this method instead\n     * of setting the content src directly to ensure the proper ad tag is\n     * requested when the video content is loaded.\n     * @param {?string} contentSrc The URI for the content to be played. Leave\n     *     blank to use the existing content.\n     * @param {?string} adTag The ad tag to be requested when the content loads.\n     *     Leave blank to use the existing ad tag.\n     * @param {?boolean} playOnLoad True to play the content once it has loaded,\n     *     false to only load the content but not start playback.\n     */\n    this.setContent = function(contentSrc, adTag, playOnLoad) {\n      window.console.log(\n          'WARNING: player.ima.setContent is deprecated. Use ' +\n              'player.ima.setContentWithAdTag instead.');\n      this.setContentWithAdTag(contentSrc, adTag, playOnLoad);\n    }.bind(this);\n\n    /**\n     * Sets the content of the video player. You should use this method instead\n     * of setting the content src directly to ensure the proper ad tag is\n     * requested when the video content is loaded.\n     * @param {?string} contentSrc The URI for the content to be played. Leave\n     *     blank to use the existing content.\n     * @param {?string} adTag The ad tag to be requested when the content loads.\n     *     Leave blank to use the existing ad tag.\n     * @param {?boolean} playOnLoad True to play the content once it has loaded,\n     *     false to only load the content but not start playback.\n     */\n    this.setContentWithAdTag = function(contentSrc, adTag, playOnLoad) {\n      resetIMA_();\n      this.settings.adTagUrl = adTag ? adTag : this.settings.adTagUrl;\n      changeSource_(contentSrc, playOnLoad);\n    }.bind(this);\n\n    /**\n     * Sets the content of the video player. You should use this method instead\n     * of setting the content src directly to ensure the proper ads response is\n     * used when the video content is loaded.\n     * @param {?string} contentSrc The URI for the content to be played. Leave\n     *     blank to use the existing content.\n     * @param {?string} adsResponse The ads response to be requested when the\n     *     content loads. Leave blank to use the existing ads response.\n     * @param {?boolean} playOnLoad True to play the content once it has loaded,\n     *     false to only load the content but not start playback.\n     */\n    this.setContentWithAdsResponse = function(contentSrc, adsResponse, playOnLoad) {\n      resetIMA_();\n      this.settings.adsResponse = adsResponse ? adsResponse : this.settings.adsResponse;\n      changeSource_(contentSrc, playOnLoad);\n    }.bind(this);\n\n    /**\n     * Changes the player source.\n     * @param {?string} contentSrc The URI for the content to be played. Leave\n     *     blank to use the existing content.\n     * @param {?boolean} playOnLoad True to play the content once it has loaded,\n     *     false to only load the content but not start playback.\n     * @private\n     */\n    var changeSource_ = function(contentSrc, playOnLoad) {\n      // Only try to pause the player when initialised with a source already\n      if (!!this.player.currentSrc()) {\n        this.player.currentTime(0);\n        this.player.pause();\n      }\n      if (contentSrc) {\n        this.player.src(contentSrc);\n      }\n      if (playOnLoad) {\n        this.player.on('loadedmetadata', playContentFromZero_);\n      } else {\n        this.player.on('loadedmetadata', seekContentToZero_);\n      }\n    }.bind(this);\n\n    /**\n     * Adds a listener for the 'ended' event of the video player. This should be\n     * used instead of setting an 'ended' listener directly to ensure that the\n     * ima can do proper cleanup of the SDK before other event listeners\n     * are called.\n     * @param {function} listener The listener to be called when content completes.\n     */\n    this.addContentEndedListener = function(listener) {\n      this.contentEndedListeners.push(listener);\n    }.bind(this);\n\n    /**\n     * Adds a listener that will be called when content and all ads have\n     * finished playing.\n     * @param {function} listener The listener to be called when content and ads complete.\n     */\n    this.addContentAndAdsEndedListener = function(listener) {\n      this.contentAndAdsEndedListeners.push(listener);\n    }.bind(this);\n\n    /**\n     * Sets the listener to be called to trigger manual ad break playback.\n     * @param {function} listener The listener to be called to trigger manual ad break playback.\n     */\n    this.setAdBreakReadyListener = function(listener) {\n      this.adBreakReadyListener = listener;\n    }.bind(this);\n\n    /**\n     * Pauses the ad.\n     */\n    this.pauseAd = function() {\n      if (this.adsActive && this.adPlaying) {\n        showPauseButton();\n        this.adsManager.pause();\n        this.adPlaying = false;\n      }\n    }.bind(this);\n\n    /**\n     * Resumes the ad.\n     */\n    this.resumeAd = function() {\n      if (this.adsActive && !this.adPlaying) {\n        showPlayButton();\n        this.adsManager.resume();\n        this.adPlaying = true;\n      }\n    }.bind(this);\n\n    /**\n     * Set up intervals to check for seeking and update current video time.\n     * @private\n     */\n    var setUpPlayerIntervals_ = function() {\n      this.updateTimeIntervalHandle =\n          setInterval(updateCurrentTime_, this.seekCheckInterval);\n      this.seekCheckIntervalHandle =\n          setInterval(checkForSeeking_, this.seekCheckInterval);\n      this.resizeCheckIntervalHandle =\n          setInterval(checkForResize_, this.resizeCheckInterval);\n    }.bind(this);\n\n    /**\n     * Updates the current time of the video\n     * @private\n     */\n    var updateCurrentTime_ = function() {\n      if (!this.contentPlayheadTracker.seeking) {\n        this.contentPlayheadTracker.currentTime = this.player.currentTime();\n      }\n    }.bind(this);\n\n    /**\n     * Detects when the user is seeking through a video.\n     * This is used to prevent mid-rolls from playing while a user is seeking.\n     *\n     * There *is* a seeking property of the HTML5 video element, but it's not\n     * properly implemented on all platforms (e.g. mobile safari), so we have to\n     * check ourselves to be sure.\n     *\n     * @private\n     */\n    var checkForSeeking_ = function() {\n      var tempCurrentTime = this.player.currentTime();\n      var diff = (tempCurrentTime - this.contentPlayheadTracker.previousTime) * 1000;\n      if (Math.abs(diff) > this.seekCheckInterval + this.seekThreshold) {\n        this.contentPlayheadTracker.seeking = true;\n      } else {\n        this.contentPlayheadTracker.seeking = false;\n      }\n      this.contentPlayheadTracker.previousTime = this.player.currentTime();\n    }.bind(this);\n\n    /**\n     * Detects when the player is resized (for fluid support) and resizes the\n     * ads manager to match.\n     *\n     * @private\n     */\n    var checkForResize_ = function() {\n      var currentWidth = this.getPlayerWidth();\n      var currentHeight = this.getPlayerHeight();\n\n      if (this.adsManager && (currentWidth != this.adsManagerDimensions.width ||\n          currentHeight != this.adsManagerDimensions.height)) {\n        this.adsManagerDimensions.width = currentWidth;\n        this.adsManagerDimensions.height = currentHeight;\n        this.adsManager.resize(currentWidth, currentHeight, google.ima.ViewMode.NORMAL);\n      }\n    }.bind(this);\n\n    /**\n     * Changes the flag to show or hide the ad countdown timer.\n     *\n     * @param {boolean} showCountdownIn Show or hide the countdown timer.\n     */\n    this.setShowCountdown = function(showCountdownIn) {\n      this.showCountdown = showCountdownIn;\n      this.countdownDiv.style.display = this.showCountdown ? 'block' : 'none';\n    }.bind(this);\n\n    /**\n     * Current plugin version.\n     */\n    this.VERSION = '0.2.0';\n\n    /**\n     * Stores user-provided settings.\n     */\n    this.settings;\n\n    /**\n     * Used to prefix videojs ima\n     */\n    this.controlPrefix;\n\n    /**\n     * Video element playing content.\n     */\n    this.contentPlayer;\n\n    /**\n     * Boolean flag to show or hide the ad countdown timer.\n     */\n    this.showCountdown;\n\n    /**\n     * Boolena flag to enable manual ad break playback.\n     */\n    this.autoPlayAdBreaks;\n\n    /**\n     * Video.js control bar.\n     */\n    this.vjsControls;\n\n    /**\n     * Div used as an ad container.\n     */\n    this.adContainerDiv;\n\n    /**\n     * Div used to display ad controls.\n     */\n    this.controlsDiv;\n\n    /**\n     * Div used to display ad countdown timer.\n     */\n    this.countdownDiv;\n\n    /**\n     * Div used to display add seek bar.\n     */\n    this.seekBarDiv;\n\n    /**\n     * Div used to display ad progress (in seek bar).\n     */\n    this.progressDiv;\n\n    /**\n     * Div used to display ad play/pause button.\n     */\n    this.playPauseDiv;\n\n    /**\n     * Div used to display ad mute button.\n     */\n    this.muteDiv;\n\n    /**\n     * Div used by the volume slider.\n     */\n    this.sliderDiv;\n\n    /**\n     * Volume slider level visuals\n     */\n    this.sliderLevelDiv;\n\n    /**\n     * Div used to display ad fullscreen button.\n     */\n    this.fullscreenDiv;\n\n    /**\n     * IMA SDK AdDisplayContainer.\n     */\n    this.adDisplayContainer;\n\n    /**\n     * True if the AdDisplayContainer has been initialized. False otherwise.\n     */\n    this.adDisplayContainerInitialized = false;\n\n    /**\n     * IMA SDK AdsLoader\n     */\n    this.adsLoader;\n\n    /**\n     * IMA SDK AdsManager\n     */\n    this.adsManager;\n\n    /**\n     * IMA SDK AdsRenderingSettings.\n     */\n    this.adsRenderingSettings = null;\n\n    /**\n     * Ad tag URL. Should return VAST, VMAP, or ad rules.\n     */\n    this.adTagUrl;\n\n    /**\n     * VAST, VMAP, or ad rules response. Used in lieu of fetching a response\n     * from an ad tag URL.\n     */\n    this.adsResponse;\n\n    /**\n     * Current IMA SDK Ad.\n     */\n    this.currentAd;\n\n    /**\n     * Timer used to track content progress.\n     */\n    this.contentTrackingTimer;\n\n    /**\n     * Timer used to track ad progress.\n     */\n    this.adTrackingTimer;\n\n    /**\n     * True if ads are currently displayed, false otherwise.\n     * True regardless of ad pause state if an ad is currently being displayed.\n     */\n    this.adsActive = false;\n\n    /**\n     * True if ad is currently playing, false if ad is paused or ads are not\n     * currently displayed.\n     */\n    this.adPlaying = false;\n\n    /**\n     * True if the ad is muted, false otherwise.\n     */\n    this.adMuted = false;\n\n    /**\n     * True if our content video has completed, false otherwise.\n     */\n    this.contentComplete = false;\n\n    /**\n     * True if ALL_ADS_COMPLETED has fired, false until then.\n     */\n     this.allAdsCompleted = false;\n\n    /**\n     * Handle to interval that repeatedly updates current time.\n     */\n    this.updateTimeIntervalHandle;\n\n    /**\n     * Handle to interval that repeatedly checks for seeking.\n     */\n    this.seekCheckIntervalHandle;\n\n    /**\n     * Interval (ms) on which to check if the user is seeking through the\n     * content.\n     */\n    this.seekCheckInterval = 1000;\n\n    /**\n     * Handle to interval that repeatedly checks for player resize.\n     */\n    this.resizeCheckIntervalHandle;\n\n    /**\n     * Interval (ms) to check for player resize for fluid support.\n     */\n    this.resizeCheckInterval = 250;\n\n    /**\n     * Threshold by which to judge user seeking. We check every 1000 ms to see\n     * if the user is seeking. In order for us to decide that they are *not*\n     * seeking, the content video playhead must only change by 900-1100 ms\n     * between checks. Any greater change and we assume the user is seeking\n     * through the video.\n     */\n    this.seekThreshold = 100;\n\n    /**\n     * Stores data for the content playhead tracker.\n     */\n    this.contentPlayheadTracker = {\n      currentTime: 0,\n      previousTime: 0,\n      seeking: false,\n      duration: 0\n    };\n\n    /**\n     * Stores data for the ad playhead tracker.\n     */\n    this.adPlayheadTracker = {\n      currentTime: 0,\n      duration: 0,\n      isPod: false,\n      adPosition: 0,\n      totalAds: 0\n    };\n\n    /**\n     * Stores the dimensions for the ads manager.\n     */\n    this.adsManagerDimensions = {\n      width: 0,\n      height: 0\n    };\n\n    /**\n     * Content ended listeners passed by the publisher to the plugin. Publishers\n     * should allow the plugin to handle content ended to ensure proper support\n     * of custom ad playback.\n     */\n    this.contentEndedListeners = [];\n\n    /**\n     * Content and ads ended listeners passed by the publisher to the plugin.\n     * These will be called when the plugin detects that content *and all\n     * ads* have completed. This differs from the contentEndedListeners in that\n     * contentEndedListeners will fire between content ending and a post-roll\n     * playing, whereas the contentAndAdsEndedListeners will fire after the\n     * post-roll completes.\n     */\n    this.contentAndAdsEndedListeners = [];\n\n     /**\n      * Listener to be called to trigger manual ad break playback.\n      */\n    this.adBreakReadyListener = undefined;\n\n    /**\n     * Stores the content source so we can re-populate it manually after a\n     * post-roll on iOS.\n     */\n    this.contentSource = '';\n\n    /**\n     * Local content ended listener for contentComplete.\n     */\n    this.localContentEndedListener = function() {\n      if (this.adsLoader && !this.contentComplete) {\n        this.adsLoader.contentComplete();\n        this.contentComplete = true;\n      }\n      for (var index in this.contentEndedListeners) {\n        this.contentEndedListeners[index]();\n      }\n      if (this.allAdsCompleted) {\n        for (var index in this.contentAndAdsEndedListeners) {\n          this.contentAndAdsEndedListeners[index]();\n        }\n      }\n      clearInterval(this.updateTimeIntervalHandle);\n      clearInterval(this.seekCheckIntervalHandle);\n      clearInterval(this.resizeCheckIntervalHandle);\n      if(this.player.el()) {\n        this.player.one('play', setUpPlayerIntervals_);\n      }\n    }.bind(this);\n\n    this.playerDisposedListener = function(){\n      this.contentEndedListeners, this.contentAndAdsEndedListeners = [], [];\n      this.contentComplete = true;\n      this.player.off('ended', this.localContentEndedListener);\n\n      // Bug fix: https://github.com/googleads/videojs-ima/issues/306\n      if (this.player.ads.adTimeoutTimeout) {\n        clearTimeout(this.player.ads.adTimeoutTimeout);\n      }\n\n      var intervalsToClear = [this.updateTimeIntervalHandle, this.seekCheckIntervalHandle,\n        this.adTrackingTimer, this.resizeCheckIntervalHandle];\n      for (var index in intervalsToClear) {\n        var interval = intervalsToClear[index];\n        if (interval) {\n          clearInterval(interval);\n        }\n      }\n      if (this.adsManager) {\n        this.adsManager.destroy();\n        this.adsManager = null;\n      }\n    }.bind(this);\n\n    this.settings = extend({}, ima_defaults, options || {});\n\n    // Currently this isn't used but I can see it being needed in the future, so\n    // to avoid implementation problems with later updates I'm requiring it.\n    if (!this.settings['id']) {\n      window.console.log('Error: must provide id of video.js div');\n      return;\n    }\n\n    this.controlPrefix = (this.settings.id + '_') || '';\n\n    this.contentPlayer = document.getElementById(this.settings['id'] + '_html5_api');\n    // Default showing countdown timer to true.\n    this.showCountdown = true;\n    if (this.settings['showCountdown'] == false) {\n      this.showCountdown = false;\n    }\n\n    this.autoPlayAdBreaks = true;\n    if (this.settings['autoPlayAdBreaks'] == false) {\n      this.autoPlayAdBreaks = false;\n    }\n\n    player.one('play', setUpPlayerIntervals_);\n\n    player.on('ended', this.localContentEndedListener);\n    player.on('dispose', this.playerDisposedListener);\n\n    var contrib_ads_defaults = {\n      debug: this.settings.debug,\n      timeout: this.settings.timeout,\n      prerollTimeout: this.settings.prerollTimeout\n    };\n\n    var ads_plugin_settings =\n        extend({}, contrib_ads_defaults, options['contribAdsSettings'] || {});\n\n    player.ads(ads_plugin_settings);\n\n    this.adsRenderingSettings = new google.ima.AdsRenderingSettings();\n    this.adsRenderingSettings.restoreCustomPlaybackStateOnAdBreakComplete = true;\n    if (this.settings['adsRenderingSettings']) {\n      for (var setting in this.settings['adsRenderingSettings']) {\n        this.adsRenderingSettings[setting] =\n            this.settings['adsRenderingSettings'][setting];\n      }\n    }\n\n    if (this.settings['locale']) {\n      google.ima.settings.setLocale(this.settings['locale']);\n    }\n\n    createAdContainer_();\n    this.adsLoader = new google.ima.AdsLoader(this.adDisplayContainer);\n\n    this.adsLoader.getSettings().setVpaidMode(\n        google.ima.ImaSdkSettings.VpaidMode.ENABLED);\n    if (this.settings.vpaidAllowed == false) {\n      this.adsLoader.getSettings().setVpaidMode(\n          google.ima.ImaSdkSettings.VpaidMode.DISABLED);\n    }\n    if (this.settings.vpaidMode) {\n      this.adsLoader.getSettings().setVpaidMode(this.settings.vpaidMode);\n    }\n\n    if (this.settings.locale) {\n      this.adsLoader.getSettings().setLocale(this.settings.locale);\n    }\n\n    if (this.settings.numRedirects) {\n      this.adsLoader.getSettings().setNumRedirects(this.settings.numRedirects);\n    }\n\n    this.adsLoader.getSettings().setPlayerType('videojs-ima');\n    this.adsLoader.getSettings().setPlayerVersion(this.VERSION);\n    this.adsLoader.getSettings().setAutoPlayAdBreaks(this.autoPlayAdBreaks);\n\n    this.adsLoader.addEventListener(\n      google.ima.AdsManagerLoadedEvent.Type.ADS_MANAGER_LOADED,\n      onAdsManagerLoaded_,\n      false);\n    this.adsLoader.addEventListener(\n      google.ima.AdErrorEvent.Type.AD_ERROR,\n      onAdsLoaderError_,\n      false);\n\n    if (!readyCallback) {\n      readyCallback = this.startFromReadyCallback;\n    }\n    player.on('readyforpreroll', readyCallback);\n    player.ready(function() {\n      player.on('fullscreenchange', onFullscreenChange_);\n      player.on('volumechange', onVolumeChange_);\n    });\n  };\n\n  vjs.plugin('ima', init);\n}(window.videojs));\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/videojs-ima/src/videojs.ima.js\n ** module id = 114\n ** module chunks = 0 1\n **/","/*\n* videojs-ga - v0.5.1 - 2017-04-24\n* Copyright (c) 2017 Michael Bensoussan\n* Licensed MIT\n*/\n(function() {\n  var __indexOf = [].indexOf || function(item) { for (var i = 0, l = this.length; i < l; i++) { if (i in this && this[i] === item) return i; } return -1; };\n\n  videojs.plugin('ga', function(options) {\n    var adend, adpause, adserror, adskip, adstart, adtimeout, autoLabel, dataSetupOptions, defaultsEventsToTrack, end, ended, error, eventCategory, eventLabel, eventsToTrack, firstplay, fullscreen, getCurrentTime, getCurrentValue, init, interval, isFinite, loaded, parsedOptions, pause, percentsPlayedInterval, percentsPlayedMoments, percentsTracked, play, playing, resize, secondsPlayed, secondsPlayedInterval, secondsPlayedMoments, seekEnd, seekStart, seeking, sendbeacon, startTimeTracking, stopTimeTracking, timeupdate, trackPercent, trackReplaySeconds, trackSeconds, trackSeek, trackingTime, volumeChange,\n      _this = this;\n    if (options == null) {\n      options = {};\n    }\n    dataSetupOptions = {};\n    if (this.options_['data-setup']) {\n      parsedOptions = JSON.parse(this.options_['data-setup']);\n      if (parsedOptions.ga) {\n        dataSetupOptions = parsedOptions.ga;\n      }\n    }\n    defaultsEventsToTrack = ['loaded', 'percentsPlayed', 'secondsPlayed', 'start', 'end', 'seek', 'play', 'pause', 'resize', 'volumeChange', 'error', 'fullscreen', 'adstart', 'adpause', 'adend', 'adskip', 'adtimeout', 'adserror'];\n    eventsToTrack = options.eventsToTrack || dataSetupOptions.eventsToTrack || defaultsEventsToTrack;\n    eventCategory = options.eventCategory || dataSetupOptions.eventCategory || 'Video';\n    autoLabel = options.autoLabel != null ? options.autoLabel : true;\n    eventLabel = options.eventLabel || dataSetupOptions.eventLabel;\n    percentsPlayedInterval = options.percentsPlayedInterval || dataSetupOptions.percentsPlayedInterval || 10;\n    percentsPlayedMoments = options.percentsPlayedMoments || dataSetupOptions.percentsPlayedMoments || [];\n    secondsPlayedInterval = options.secondsPlayedInterval || dataSetupOptions.secondsPlayedInterval || 60;\n    secondsPlayedMoments = options.secondsPlayedMoments || dataSetupOptions.secondsPlayedMoments || [];\n    trackReplaySeconds = options.trackReplaySeconds;\n    percentsTracked = [];\n    seekStart = seekEnd = 0;\n    seeking = false;\n    ended = false;\n    trackingTime = false;\n    secondsPlayed = 0;\n    isFinite = void 0;\n    trackSeconds = void 0;\n    interval = void 0;\n    options.debug = options.debug || false;\n    init = function() {\n      isFinite = Number.isFinite(_this.duration());\n      trackSeconds = __indexOf.call(eventsToTrack, 'secondsPlayed') >= 0 && (!isFinite || options.trackFiniteSeconds);\n      if (!eventLabel && autoLabel) {\n        eventLabel = _this.currentSrc().split('/').slice(-1)[0].replace(/\\.(\\w{3,4})(\\?.*)?$/i, '');\n      }\n      if (!isFinite && !(options.eventCategory || dataSetupOptions.eventCategory)) {\n        eventCategory = 'Stream';\n      }\n      return startTimeTracking();\n    };\n    loaded = function() {\n      init();\n      if (__indexOf.call(eventsToTrack, 'loadedmetadata') >= 0) {\n        sendbeacon('loadedmetadata', true);\n      }\n    };\n    timeupdate = function() {\n      if (!isFinite) {\n        return;\n      }\n      if (__indexOf.call(eventsToTrack, 'percentsPlayed') >= 0) {\n        trackPercent();\n      }\n      if (__indexOf.call(eventsToTrack, 'seek') >= 0) {\n        trackSeek();\n      }\n    };\n    trackPercent = function() {\n      var currentTime, duration, percent, percentToTrack, percentsPlayed, _i, _len;\n      currentTime = _this.currentTime();\n      duration = _this.duration();\n      percentsPlayed = Math.round(currentTime / duration * 100);\n      percentToTrack = void 0;\n      if (!percentsPlayed || __indexOf.call(percentsTracked, percentsPlayed) >= 0) {\n        return;\n      }\n      for (_i = 0, _len = percentsPlayedMoments.length; _i < _len; _i++) {\n        percent = percentsPlayedMoments[_i];\n        if (percent === percentsPlayed) {\n          percentToTrack = percentsPlayed;\n        }\n      }\n      if (percentsPlayedInterval && !(percentsPlayed % percentsPlayedInterval)) {\n        percentToTrack = percent = percentsPlayed;\n      }\n      if (percentToTrack) {\n        sendbeacon('percent played', true, percentsPlayed);\n        return percentsTracked.push(percentsPlayed);\n      }\n    };\n    trackSeek = function() {\n      seekStart = seekEnd;\n      seekEnd = getCurrentValue();\n      if (Math.abs(seekStart - seekEnd) > 1) {\n        seeking = true;\n        sendbeacon('seek start', false, seekStart);\n        return sendbeacon('seek end', false, seekEnd);\n      }\n    };\n    startTimeTracking = function() {\n      var currentTime;\n      if (!trackSeconds || trackingTime) {\n        return;\n      }\n      trackingTime = true;\n      currentTime = getCurrentTime();\n      return interval = setInterval(function() {\n        if (!(getCurrentTime() > currentTime)) {\n          return;\n        }\n        secondsPlayed++;\n        if (__indexOf.call(secondsPlayedMoments, secondsPlayed) >= 0 || !(secondsPlayed % secondsPlayedInterval)) {\n          sendbeacon('seconds played', true, secondsPlayed);\n        }\n      }, 1000);\n    };\n    stopTimeTracking = function() {\n      clearInterval(interval);\n      return trackingTime = false;\n    };\n    firstplay = function() {\n      startTimeTracking();\n      if (__indexOf.call(eventsToTrack, 'start') >= 0 && !isFinite) {\n        return sendbeacon('start', true);\n      }\n    };\n    end = function() {\n      ended = true;\n      stopTimeTracking();\n      if (trackReplaySeconds) {\n        secondsPlayed = 0;\n      } else {\n        trackSeconds = false;\n      }\n      sendbeacon('end', true);\n    };\n    play = function() {\n      var currentTime;\n      startTimeTracking();\n      currentTime = getCurrentValue();\n      if (currentTime > 0 || __indexOf.call(eventsToTrack, 'start') < 0) {\n        sendbeacon('play', true, currentTime);\n      }\n      if (ended && currentTime === 0 && trackReplaySeconds) {\n        sendbeacon('start', true);\n      }\n      seeking = false;\n    };\n    playing = function() {\n      startTimeTracking();\n      seeking = false;\n    };\n    pause = function() {\n      var currentTime, duration;\n      stopTimeTracking();\n      currentTime = getCurrentValue();\n      duration = Math.round(this.duration());\n      if (currentTime !== duration && !seeking) {\n        sendbeacon('pause', false, currentTime);\n      }\n    };\n    volumeChange = function() {\n      var volume;\n      volume = this.muted() === true ? 0 : this.volume();\n      sendbeacon('volume change', false, volume);\n    };\n    resize = function() {\n      sendbeacon('resize - ' + this.width() + '*' + this.height(), true);\n    };\n    error = function() {\n      var currentTime;\n      currentTime = getCurrentValue();\n      sendbeacon('error', true, currentTime);\n    };\n    fullscreen = function() {\n      var currentTime;\n      currentTime = getCurrentValue();\n      if ((typeof this.isFullscreen === \"function\" ? this.isFullscreen() : void 0) || (typeof this.isFullScreen === \"function\" ? this.isFullScreen() : void 0)) {\n        sendbeacon('enter fullscreen', false, currentTime);\n      } else {\n        sendbeacon('exit fullscreen', false, currentTime);\n      }\n    };\n    adstart = function() {\n      stopTimeTracking();\n      if (__indexOf.call(eventsToTrack, 'adstart') >= 0) {\n        return sendbeacon('adstart', false, getCurrentValue());\n      }\n    };\n    adpause = function() {\n      return sendbeacon('adpause', false);\n    };\n    adend = function() {\n      startTimeTracking();\n      return sendbeacon('adend', true);\n    };\n    adskip = function() {\n      return sendbeacon('adskip', false);\n    };\n    adtimeout = function() {\n      return sendbeacon('adtimeout', true);\n    };\n    adserror = function(data) {\n      return sendbeacon('adserror', true, data != null ? data.AdError : void 0);\n    };\n    getCurrentValue = function() {\n      if (isFinite) {\n        return getCurrentTime();\n      } else {\n        return secondsPlayed;\n      }\n    };\n    getCurrentTime = function() {\n      return Math.round(_this.currentTime());\n    };\n    sendbeacon = function(action, nonInteraction, value) {\n      var eventFields;\n      eventFields = {\n        eventCategory: eventCategory,\n        eventAction: action,\n        nonInteraction: nonInteraction\n      };\n      if (eventLabel != null) {\n        eventFields.eventLabel = eventLabel;\n      }\n      if (value != null) {\n        eventFields.eventValue = value;\n      }\n      _this.trigger('gaEvent', eventFields);\n      if (options.sendGaEventDirectly && window.ga) {\n        ga('send', 'event', {\n          'eventCategory': eventCategory,\n          'eventAction': action,\n          'eventLabel': eventLabel,\n          'eventValue': value,\n          'nonInteraction': nonInteraction\n        });\n      }\n      if (options.debug) {\n        console.log(eventFields);\n      }\n    };\n    this.ready(function() {\n      this.on('loadedmetadata', loaded);\n      this.on('timeupdate', timeupdate);\n      this.one('firstplay', firstplay);\n      if (__indexOf.call(eventsToTrack, 'end') >= 0) {\n        this.on('ended', end);\n      }\n      if (__indexOf.call(eventsToTrack, 'play') >= 0) {\n        this.on('play', play);\n      }\n      this.on('playing', playing);\n      if (__indexOf.call(eventsToTrack, 'pause') >= 0) {\n        this.on('pause', pause);\n      }\n      if (__indexOf.call(eventsToTrack, 'volumeChange') >= 0) {\n        this.on('volumechange', volumeChange);\n      }\n      if (__indexOf.call(eventsToTrack, 'resize') >= 0) {\n        this.on('resize', resize);\n      }\n      if (__indexOf.call(eventsToTrack, 'error') >= 0) {\n        this.on('error', error);\n      }\n      if (__indexOf.call(eventsToTrack, 'fullscreen') >= 0) {\n        this.on('fullscreenchange', fullscreen);\n      }\n      if (__indexOf.call(eventsToTrack, 'adstart') >= 0) {\n        this.on('adstart', adstart);\n      }\n      if (__indexOf.call(eventsToTrack, 'adpause') >= 0) {\n        this.on('adpause', adpause);\n      }\n      if (__indexOf.call(eventsToTrack, 'adend') >= 0) {\n        this.on('adend', adend);\n      }\n      if (__indexOf.call(eventsToTrack, 'adskip') >= 0) {\n        this.on('adskip', adskip);\n      }\n      if (__indexOf.call(eventsToTrack, 'adtimeout') >= 0) {\n        this.on('adtimeout', adtimeout);\n      }\n      if (__indexOf.call(eventsToTrack, 'adserror') >= 0) {\n        return this.on('adserror', adserror);\n      }\n    });\n    return {\n      'sendbeacon': sendbeacon\n    };\n  });\n\n}).call(this);\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/videojs-ga/dist/videojs.ga.js\n ** module id = 115\n ** module chunks = 0 1\n **/","/*!\n videojs-social - v1.5.2 - 2015-09-15\n * Copyright (c) 2015 Brightcove; Licensed https://accounts.brightcove.com/en/terms-and-conditions\n */\n\n/*! videojs-endscreen - v0.0.0 - 2014-10-13\n * Copyright (c) 2014 Brightcove\n * Modified by Hany alsamman for support videojs-5\n */\n(function (window, videojs) {\n    'use strict';\n\n    /**\n     * Initialize the plugin.\n     * @param options (optional) {object} configuration for the plugin\n     */\n    var endscreen = function (options) {\n        var player = this,\n            hasAds = !!(player.ads),\n            videoFinished = false,\n            adStarted = false,\n            adFinished = false;\n\n        /**\n         * videojs-ima3 appears to be firing an `adend` event at the start of the actual video when the ad\n         * is a postroll. We can account for it by checking if start was called and then if end was called.\n         * If a postroll is being run, it will bind displaying the Overlay to `adend` instead of `ended`.\n         */\n        if (hasAds) {\n            player.on('adstart', function () {\n                adStarted = true;\n                adFinished = false;\n            });\n\n            player.on('adend', function () {\n                if (adStarted) {\n                    adFinished = true;\n                }\n            });\n        }\n\n        player.on('ended', function () {\n            if (!videoFinished && (!hasAds || (adStarted && adFinished) || (!adStarted && !adFinished))) {\n                videoFinished = true;\n            }\n\n            if (videoFinished && hasAds && !adFinished) {\n                player.on('adend', function () {\n                    player.trigger('endscreen');\n                });\n            } else if (videoFinished) {\n                player.trigger('endscreen');\n            }\n        });\n    };\n\n    // register the plugin\n    videojs.plugin('endscreen', endscreen);\n})(window, window.videojs);\n\n/*! videojs-social - v0.0.0 - 2014-5-1\n * Copyright (c) 2014 Brightcove */\n(function (window, videojs) {\n    'use strict';\n\n    // Allocate all variables to be used\n    var defaults = {\n            title: '',\n            description: '',\n            url: '',\n            deeplinking: false,\n            displayAfterVideo: false,\n            offset: '00:00:00',\n            services: {\n                facebook: true,\n                google: true,\n                twitter: true,\n                tumblr: true,\n                pinterest: true,\n                linkedin: true\n            }\n        },\n        addEvent = function (el, type, callback) {\n            if (el.addEventListener) {\n                return el.addEventListener(type, callback, false);\n            }\n\n            // IE8 is onclick, not click\n            if (!el.addEventListener && type === 'click') {\n                type = 'onclick';\n            }\n            return el.attachEvent(type, callback);\n        },\n\n        removeEvent = function (el, type, callback) {\n            if (el.removeEventListener) {\n                return el.removeEventListener(type, callback, false);\n            }\n            if (!el.removeEventListener && type === 'click') {\n                type = 'onclick';\n            }\n            return el.detachEvent(type, callback);\n        },\n\n        social,\n        SocialButton,\n        SocialOverlay;\n\n    var handleEvent = function (e) {\n        e.preventDefault();\n        window.open(\n            this.href,\n            '_blank',\n            'width=600, height=400, top=100, left=100, titlebar=yes, modal=yes, resizable=yes, toolbar=no, status=1, location=no, menubar=no, centerscreen=yes'\n        );\n    };\n\n    /**\n     * Initialize the plugin.\n     * @param options (optional) {object} configuration for the plugin\n     */\n    social = function (options) {\n\n        var settings,\n            player = this;\n\n        // Merge options with the buttons defaults\n        settings = videojs.mergeOptions(defaults, options);\n\n        // If we are being re-initialized then remove the old stuff\n        if (player.controlBar.socialButton) {\n            player.controlBar.removeChild(player.controlBar.socialButton);\n            delete player.controlBar.socialButton;\n\n            if (player.socialOverlay) {\n                player.removeChild(player.socialOverlay);\n                delete player.socialOverlay;\n            }\n        }\n\n        // Add social button to player\n        player.controlBar.socialButton = player.controlBar.addChild('socialButton', settings);\n        player.socialOverlay = player.addChild('socialOverlay', settings);\n\n        // Add tabindex\n        player.controlBar.socialButton.el().setAttribute('tabindex', '0');\n\n        if (settings.displayAfterVideo) {\n            player.endscreen();\n            player.on('endscreen', function () {\n                player.socialOverlay.enableRestartButton();\n                player.socialOverlay.show();\n            });\n        }\n    };\n\n    /*\n     * The \"Share\" control bar button\n     */\n    SocialButton = videojs.extend(videojs.getComponent('Button'), {\n        constructor: function (player, options) {\n            videojs.getComponent('Button').call(this, player, options);\n\n            // Bind touchstart for mobile browsers and prevent default\n            this.on('touchstart', function (e) {\n                player.socialOverlay.update();\n                player.socialOverlay.disableRestartButton();\n                player.socialOverlay.show();\n                e.preventDefault();\n            });\n\n            // Bind click event for desktop browsers\n            this.on('click', function () {\n                player.socialOverlay.update();\n                player.socialOverlay.disableRestartButton();\n                player.socialOverlay.show();\n            });\n\n        }\n    });\n\n    SocialButton.prototype.createEl = function () {\n        return videojs.getComponent('ClickableComponent').prototype.createEl.call(this, 'div', {\n            className: 'vjs-share-control vjs-control',\n            innerHTML: '<div class=\"vjs-control-content\"><span class=\"vjs-control-text\">Share</span></div>'\n        }, {\n            role: 'button',\n            'aria-live': 'polite',\n        });\n    };\n\n    videojs.registerComponent('SocialButton', SocialButton);\n\n    /*\n     * The overlay panel that is toggled when the SocialButton is clicked\n     */\n    SocialOverlay = videojs.extend(videojs.getComponent('Component'), {\n        constructor: function (player, options) {\n\n            var embedCode,\n                start,\n                directLinkTextBox,\n                embedCodeTextBox,\n                offsetTextBox,\n                servicesHtml,\n                service,\n                restartButton;\n\n            // If we are being recreated, then remove our old self\n            if (player.socialOverlay) {\n                player.removeChild(player.socialOverlay);\n            }\n\n            videojs.getComponent('Component').call(this, player, options);\n\n            // set the direct link and embed code\n            this.el().querySelector('.vjs-social-embed-container input').setAttribute('value', this.getEmbedCode());\n            this.el().querySelector('.vjs-social-direct-link-container input').setAttribute('value', this._getUrlWithTime());\n\n            // Setup the Restart Button\n            restartButton = this.el().querySelector('.vjs-restart');\n            addEvent(restartButton, 'click', videojs.bind(this, this._restartPlayer));\n            addEvent(restartButton, 'activate', videojs.bind(this, this._restartPlayer));\n\n            // Hide offset if deeplinking is disabled\n            if (!options.deeplinking) {\n                start = this.el().querySelector('.vjs-social-start');\n                start.className += ' vjs-hidden ';\n            }\n\n            // Hide Embed code if disabled\n            if (options.removeEmbed && options.removeEmbed === true) {\n                this.el().querySelector('.vjs-social-embed-container').className += ' vjs-hidden ';\n            }\n\n            // Hide Direct Link\n            if (options.removeDirect && options.removeDirect === true) {\n                this.el().querySelector('.vjs-social-direct-link-container').className += ' vjs-hidden ';\n            }\n\n            // Add event to select the direct link when clicked\n            directLinkTextBox = this.el().querySelector('.direct-link-textbox');\n            addEvent(directLinkTextBox, 'click', function () {\n                this.select();\n            });\n\n            // Add event to select the embed code when clicked\n            embedCodeTextBox = this.el().querySelector('.embed-code-textbox');\n            addEvent(embedCodeTextBox, 'click', function () {\n                this.select();\n            });\n\n            this.offsetTextBox = this.el().querySelector('.start-offset-textbox');\n\n            // Bind changed event to the start offset\n            //  which will update the direct and embed links on changes and show it's current state\n            addEvent(this.offsetTextBox, 'change', videojs.bind(this, this.update));\n\n            // Bind the click event of the close button to hide the social overlay\n            this.closeButton = this.el().querySelector('.vjs-social-cancel');\n\n            // Catch escape key and hide dialog when pressed\n            addEvent(this.el(), 'keydown', function (event) {\n                if (player.socialOverlay.el().display !== 'none' && event.keyCode === 27) {\n                    // Hide the overlay, return focus to social button\n                    player.socialOverlay.hide();\n                }\n            }, true);\n\n\n            this.on('click', function (event) {\n                // if we clicked in the close button, we should close the overlay,\n                // this is specifically added to enable the closeButton in IE8\n                if (event.target === this.closeButton) {\n                    player.socialOverlay.hide();\n                }\n            });\n        },\n\n        update: function () {\n            var embedCodeTextBox = this.el().querySelector('.embed-code-textbox'),\n                directLinkTextBox;\n            var options = this.options_;\n\n            if (/^\\s*(0*[1-5]*\\d|0*[1-5]*\\d:[0-5]\\d|\\d+:[0-5]\\d:[0-5]\\d)\\s*$/.test(this.offsetTextBox.value)) {\n\n                directLinkTextBox = this.el().querySelector('.direct-link-textbox');\n\n                // update the validation state\n                this.offsetTextBox.className = this.offsetTextBox.className.replace(/(^|\\s)vjs-invalid/, '');\n\n                // Compute the new direct link\n                directLinkTextBox.value = this._getUrlWithTime();\n            } else {\n                this.offsetTextBox.className += ' vjs-invalid';\n            }\n\n            // Compute the new embed code\n            embedCodeTextBox.setAttribute('value', this.getEmbedCode());\n        },\n\n        enableRestartButton: function () {\n            var restartButton = this.el().querySelector('.vjs-restart');\n            restartButton.className = restartButton.className.replace(/\\bvjs\\-hidden\\b/, '');\n        },\n\n        disableRestartButton: function () {\n            var restartButton = this.el().querySelector('.vjs-restart');\n            if (!/\\bvjs-hidden\\b/.test(restartButton.className)) {\n                restartButton.className += ' vjs-hidden';\n            }\n        },\n\n        hide: function () {\n            var player = this.player();\n            videojs.getComponent('Component').prototype.hide.call(this);\n            if (this.previouslyPlaying) {\n                player.play();\n            }\n            // Set focus back to the social button for accessibility\n            player.controlBar.socialButton.el().focus();\n            player.trigger('sharing:closed');\n        },\n\n        show: function () {\n            var player = this.player();\n            videojs.getComponent('Component').prototype.show.call(this);\n            if (!player.paused()) {\n                this.previouslyPlaying = true;\n                player.pause();\n            }\n            player.trigger('sharing:opened');\n        }\n    });\n\n    SocialOverlay.prototype.createEl = function () {\n        var player = this.player(),\n            options = this.options_;\n\n        return videojs.getComponent('Component').prototype.createEl.call(this, 'div', {\n            className: 'vjs-social-overlay vjs-hidden',\n            'tabindex': -1,\n            innerHTML: '<div class=\"vjs-social-cancel\" role=\"button\">' +\n            '<div class=\"vjs-control-text\" aria-label=\"' + player.localize('Close button') + '\">' + player.localize('Close') + '</div>' +\n            '</div>' +\n            '<form>' +\n            '<legend>' + player.localize('Share Video') + ' ' + this._getTitle() + '</legend>' +\n            '<div class=\"vjs-social-link-options\">' +\n            '<label class=\"vjs-social-start\" aria-label=\"' + player.localize('Start From') + '\">' + player.localize('Start From') + ': <input class=\"start-offset-textbox\" type=\"text\" tabindex=\"9\" title=\"The offset must be specified using the following pattern: hh:mm:ss\" placeholder=\"hh:mm:ss\" maxlength=\"10\" value=\"' + options.offset + '\" /></label>' +\n            '<div class=\"vjs-social-direct-link-container\">' +\n            '<label class=\"vjs-social-link\" aria-label=\"Read Only: Direct Link To Content\">' + player.localize('Direct Link') + ': <input class=\"direct-link-textbox\" type=\"text\" tabindex=\"8\" readonly=\"true\" /></label>' +\n            '</div>' +\n            '</div>' +\n            '<div class=\"vjs-social-embed-container\">' +\n            '<label arial-label=\"Read Only: Embed Code\">' + player.localize('Embed Code') + ': <input class=\"embed-code-textbox\" type=\"text\" tabindex=\"10\" readonly=\"true\" /></label>' +\n            '</div>' +\n            '</form>' +\n            '<button tabindex=\"0\" class=\"vjs-restart vjs-hidden\">' +\n            '<div class=\"vjs-control-content\"><span class=\"vjs-control-text\">' + player.localize('Restart') + '</span></div>' +\n            '</button>'\n        }, {\n            'aria-role': 'dialog',\n            'aria-label': player.localize('Sharing Dialog'),\n        });\n    };\n\n    /*\n     * Computes the new embed code\n     */\n    SocialOverlay.prototype.getEmbedCode = function () {\n        // Declare variables\n        var offset, offsetTextBox, playerOptions, embedCode, urlTemplate, player, options;\n\n        player = this.player();\n        options = this.options_;\n\n        // Assign converted initial options offset value\n        offset = options.deeplinking ? this._convertOffset(options.offset) : null;\n        // If we can't find the offset control we should use the options value\n        offsetTextBox = player.el().querySelector('.start-offset-textbox');\n        if (offsetTextBox && options.deeplinking) {\n            offset = this._convertOffset(offsetTextBox.value);\n        }\n        // Get the player options so we can retrieve the account_id, player_id, and embed_id\n        playerOptions = player.options_;\n\n        // encode the URL for security\n        if (playerOptions['data-embed-url']) {\n            playerOptions['data-embed-url'] = encodeURI(playerOptions['data-embed-url']);\n        }\n\n        // Fallback Url Template\n        urlTemplate = '//players.brightcove.net/{{account_id}}/{{player_id}}_{{embed_id}}/index.html{{video_id}}';\n\n        // If in iframe use its URL\n        // jshint -W116\n        if (window.parent != window) {\n            urlTemplate = window.location.href;\n        }\n        // jshint +W116\n\n        // Embed code\n        if (options.embedCode) {\n            embedCode = options.embedCode;\n        } else {\n            embedCode = '<iframe src=\\'' + urlTemplate + '{{offset}}\\' allowfullscreen frameborder=0></iframe>';\n        }\n\n        // Construct the embed code snippet. Replace values with known template params.\n        return embedCode\n            .replace('{{account_id}}', playerOptions['data-account'])\n            .replace('{{player_id}}', playerOptions['data-player'])\n            .replace('{{embed_id}}', playerOptions['data-embed'])\n            .replace('{{video_id}}', (player.mediainfo && player.mediainfo.id) ? '?videoId=' + player.mediainfo.id : '')\n            .replace('{{offset}}', offset ? '#t=' + offset : '');\n    };\n\n    /*\n     * Determines the URL to be dispayed in the share dialog\n     */\n    SocialOverlay.prototype._getUrl = function () {\n        var url,\n            options = this.options_;\n\n        // Determine the custom base url\n        // In IE8, window.parent doesn't === window, but it does == equal it.\n        // jshint -W116\n        if (options.url) {\n            url = options.url;\n        } else if (window.parent != window) {\n            url = document.referrer;\n        } else {\n            url = window.location.href;\n        }\n        // jshint +W116\n\n        return url;\n    };\n\n    SocialOverlay.prototype._getUrlWithTime = function () {\n        var options = this.options_,\n            url = this._getUrl(),\n            offset;\n\n        // Get the start offset textbox (Only include offset if deeplinking is enabled)\n        if (options.deeplinking) {\n            offset = this._convertOffset(this.el().querySelector('.start-offset-textbox').value);\n        }\n\n        // Append the offset if available\n        if (offset) {\n            url = url + '#t=' + offset;\n        }\n\n        return url;\n    };\n\n    /*\n     * Updates the title based on the media date or the custom options setting\n     */\n    SocialOverlay.prototype._getTitle = function () {\n        var playerOptions,\n            options = this.options_,\n            player = this.player(),\n            title = options.title;\n\n        // If there's no title try and find one in the options\n        if (!title) {\n\n            // Get player options\n            playerOptions = player.options_;\n\n            // Search the player options data media for a title\n            if (playerOptions['data-media'] && playerOptions['data-media'].title) {\n                title = playerOptions['data-media'].title;\n            }\n        }\n\n        return title || '';\n    };\n    /*\n     * Converts an offset from hh:mm:ss to the YouTube format of 1h27m14s\n     */\n    SocialOverlay.prototype._convertOffset = function (offset) {\n\n        var segments,\n            seconds = 0,\n            multiples = [1, 60, 3600],\n            ret = '',\n            i,\n            s;\n\n        if (offset) {\n            segments = offset.split(':');\n            if (segments.length >= 1 && segments.length <= 3) {\n                // Parse each segment into an integer to remove leading zeros and other dentritis\n                for (i = 0; i < segments.length; ++i) {\n                    s = parseInt(segments[i], 10) * multiples[segments.length - 1 - i];\n                    if (isNaN(s)) {\n                        return '';\n                    }\n                    seconds += s;\n                }\n                ret = '';\n                if (seconds >= 3600 && Math.floor(seconds / 3600) !== 0) {\n                    ret = Math.floor(seconds / 3600) + 'h';\n                    seconds = seconds % 3600;\n                }\n\n                if (seconds >= 60 && Math.floor(seconds / 60) !== 0) {\n                    ret += Math.floor(seconds / 60) + 'm';\n                    seconds = seconds % 60;\n                }\n\n                if (seconds > 0) {\n                    ret += seconds + 's';\n                }\n\n                return ret;\n\n            }\n        }\n\n        return '';\n    };\n\n    SocialOverlay.prototype._restartPlayer = function () {\n        var player = this.player();\n        player.socialOverlay.hide();\n        player.currentTime(0);\n        player.play();\n    };\n\n    videojs.registerComponent('SocialOverlay', SocialOverlay);\n\n    // register the plugin\n    videojs.plugin('social', social);\n\n    // End the closure\n})(window, window.videojs);\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/videojs-social/videojs-social.js\n ** module id = 116\n ** module chunks = 0 1\n **/","'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nvar _videoJs = require('video.js');\n\nvar _videoJs2 = _interopRequireDefault(_videoJs);\n\nvar ClickableComponent = _videoJs2['default'].getComponent('ClickableComponent');\n\n// Default options for the plugin.\nvar defaults = {\n  text: 'Download'\n};\n\n/**\n * Stack CSS class names.\n * @return {String}\n */\nvar buildCSSClass = function buildCSSClass() {\n  return 'vjs-download-button-control ' + ClickableComponent.prototype.buildCSSClass();\n};\n\n/**\n * Function to invoke when the player is ready.\n *\n * @function onPlayerReady\n * @param    {Player} player\n * @param    {Object} [options={}]\n */\nvar onPlayerReady = function onPlayerReady(player, options) {\n  player.addClass('vjs-download-button');\n\n  if (!player.controlBar.childNameIndex_.hasOwnProperty('DownloadButton')) {\n    var linkProps = {\n      className: buildCSSClass(),\n      href: player.currentSrc(),\n      title: options.text,\n      download: ''\n    };\n    var linkAttrs = {\n      'aria-live': 'polite',\n      'aria-label': options.text\n    };\n\n    player.controlBar.addChild(new ClickableComponent(undefined, {\n      el: ClickableComponent.prototype.createEl('a', linkProps, linkAttrs)\n    }));\n  }\n};\n\n/**\n * A video.js plugin.\n *\n * In the plugin function, the value of `this` is a video.js `Player`\n * instance. You cannot rely on the player being in a \"ready\" state here,\n * depending on how the plugin is invoked. This may or may not be important\n * to you; if not, remove the wait for \"ready\"!\n *\n * @function downloadButton\n * @param    {Object} [options={}]\n *           An object of options left to the plugin author to define.\n */\nvar downloadButton = function downloadButton(options) {\n  var _this = this;\n\n  this.ready(function () {\n    onPlayerReady(_this, _videoJs2['default'].mergeOptions(defaults, options));\n  });\n};\n\n// Register the plugin with video.js.\n_videoJs2['default'].plugin('downloadButton', downloadButton);\n\n// Include the version number.\ndownloadButton.VERSION = '__VERSION__';\n\nexports['default'] = downloadButton;\nmodule.exports = exports['default'];\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/videojs-download-button/es5/plugin.js\n ** module id = 117\n ** module chunks = 0 1\n **/","const google = window.google;\n\n/**\n * Creates a new player and places it to container with the specified id.\n *\n * @example\n * // Create a video player\n * var player = wjplayer({\n *  containerId: 'player-container',\n *   sources: [{\n *     src: '//vjs.zencdn.net/v/oceans.mp4',\n *     type: 'video/mp4'\n *   }]\n * );\n *\n * // Specify resolution and label of each source\n * var player = wjplayer({\n *  containerId: 'player-container',\n *  defaultQuality: 'high',\n *  // sourcesWithRes array will be passed to videojs-resolution-switcher\n *  sourcesWithRes: [\n *  {\n *    src: 'path-to-video-low-quality.m3u8',\n *    type: 'application/x-mpegURL',\n *    res: 360,\n *    label: 'SD'\n *  },\n *  {\n *    src: 'path-to-video-high-quality.m3u8',\n *    type: 'application/x-mpegURL',\n *    res: 720,\n *    label: 'HD'\n *  }]\n * });\n *\n * // Create an audio player\n *  var audioPlayer = wjplayer({\n *    containerId: 'player-container',\n *    playerType: 'audio',\n *    sources: [{\n *      src: '//vjs.zencdn.net/v/oceans.mp3',\n *      type: 'video/mp3'\n *    }]\n *  });\n *\n *  // Insert ads\n *  var player = wjplayer({\n *    containerId: 'player-container',\n *    sources: [{\n *      src: '//vjs.zencdn.net/v/oceans.mp4',\n *      type: 'video/mp4'\n *    }],\n *    ads: {\n *      adTagUrl: '//example.com/vmap.xml'\n *    }\n *  });\n *\n * @param {Object} options\n *   Configuration options.\n *\n * @param {String} options.containerId\n *   REQUIRED id of the container\n *   where player shoud be inserted (appendChild() will be used)\n *\n * @param {Array} options.sources\n *   REQUIRED IF `sourcesWithRes` IS NOT PROVIDED\n *   Array of sources to pass to player.src()\n *   @see http://docs.videojs.com/docs/api/player.html#Methodssrc\n *\n * @param {Array} options.sourcesWithRes\n *   REQUIRED IF `sources` IS NOT PROVIDED\n *   Array of sources to pass to player.updateSrc()\n *   @see https://github.com/kmoskwiak/videojs-resolution-switcher#updatesrcsource\n *\n * @param {String} options.playerId\n *   id to assign to the player element.\n *   Defaults to \"player\"\n *\n * @param {String} options.playerType\n *   \"video\" or \"audio\"\n *   Defaults to \"video\"\n *\n * @param {String|Number} options.defaultQuality\n *   \"low\", \"high\" or Number\n *   @see https://github.com/kmoskwiak/videojs-resolution-switcher#avalible-options\n *\n * @param {String} options.pathToSwf\n *   Path to flash player file (will be passed to videojs as videojs.options.flash.swf)\n *\n * @param {String} options.locale\n *  If specified, will be set as player and ads locale.\n *  This may be any ISO 639-1 (two-letter) code.\n *\n * @param {Boolean} options.autoplay\n *   Defaults to false\n *\n * @param {Boolean} options.controls\n *   Defaults to true\n *\n * @param {Boolean} options.loop\n *   The loop attribute causes the video to start over as soon as it ends.\n *   Defaults to false\n *\n * @param {String} options.preload\n *   Defaults to \"metadata\"\n *\n * @param {String} options.poster\n *   The width attribute sets the display width of the video (in pixels).\n *   This will take effect only if `options.classes` param is set\n *   (`vjs-fill` class, used by defaults, sets player width and height to 100%).\n *\n * @param {Number} options.width\n *   The height attribute sets the display height of the video (in pixels).\n *\n * @param {Number} options.height\n *   Player height\n *\n * @param {Object} options.videojs\n *   Any additilnal ptions to pass to videojs.\n *   @see  http://docs.videojs.com/docs/guides/options.html\n *\n * @param {Boolean} options.muted\n *   Indicates whether the player should be muted by default.\n *   Defaults to false\n *\n * @param {String} options.skin\n *   Skin name.\n *   Defaults to \"default\"\n *\n * @param {Array} options.classes\n *   CSS classnames to assign to the player in addition to `video-js`.\n *   By default, the following classes are used:\n *   `['vjs-default-skin',\n *   'vjs-fill',\n *   'vjs-big-play-centered']`\n *\n * @param {Boolean} options.stretch\n *   Indicates whether video should stretch to fit the container.\n *   Defaults to false\n *\n * @param {Boolean} options.playOnClick\n *   If true, click/touch event on player will start/stop the playback even if controls are disabled.\n *   Defaults to false\n *\n * @param {Boolean|Object} options.downloadButton\n *   Indicates whether a download button should be shown in control bar.\n * @param {String} options.downloadButton.text\n *   Button title.\n *   Defaults to \"Download\"\n *\n * @param {String} options.volumeStyle\n *   \"horizontal\" or \"vertical\".\n *   Defaults to \"vertical\"\n *\n * @param {Boolean|Object} options.panorama\n *   Used for pamoramic (360-degree) videos.\n *   Pass true or options object for videojs-panorama plugin\n *   @see https://github.com/yanwsh/videojs-panorama\n *   Defaults to false\n *\n * @param {String} options.crossorigin\n *   Used with videojs-panorama plugin.\n *   Pass \"anonymous\" to avoid cross domain issue\n *   (will work on Chrome and Firefox, not Safari)\n *   @see https://github.com/yanwsh/videojs-panorama#cross-domian-issue\n *\n * @param {Object} options.ads\n *   Settings for videojs-ima plugin.\n *   @see https://github.com/googleads/videojs-ima#additional-settings\n * @param {String} options.ads.adTagUrl\n *   Tag url. The only requried setting here.\n * @param {String} options.ads.adLabel\n *   Replaces the \"Advertisement\" text in the ad label.\n * @param {Boolean} options.ads.showControlsForJSAds\n *   Defaults to false\n *\n * @param {Object} options.share\n *   Will be passed to videojs-social plugin.\n *   @see https://github.com/neuron-digital/videojs-social for details.\n * @param {String} options.share.url\n *   This is the URL that points to your custom web page\n *   which has your video and the meta tags for sharing.\n * @param {String} options.share.embedCode\n *   Iframe embed code for sharing the video.\n *\n * @return {Object} the player object.\n */\nexport default function wjplayer(options) {\n  return new WJPlayer(options);\n}\n\nclass WJPlayer {\n  constructor(options) {\n    if (!(typeof options === 'object' && options.containerId)) {\n      throw new Error('options.containerId isn\\'t specified');\n    }\n\n    this.defaults = {\n      playerId: 'player',\n      playerType: 'video',\n      sources: [],\n      sourcesWithRes: [],\n      pathToSwf: '',\n      poster: '',\n      autoplay: false,\n      controls: true,\n      loop: false,\n      muted: false,\n      preload: 'metadata',\n      volumeStyle: 'vertical',\n      stretch: false,\n      playOnClick: false,\n      skin: 'default',\n      classes: [],\n      enableResolutionSwitcher: false\n    };\n\n    this.browser = {\n      IS_IOS: /iP(hone|ad|od)/i.test(navigator.userAgent),\n      IS_ANDROID: /Android/.test(navigator.userAgent),\n      IS_IE: document.documentMode || /Edge/.test(navigator.userAgent), // detect IE8 and above, and edge\n      IS_IE11: !!window.MSInputMethodContext && !!document.documentMode,\n    };\n    this.browser.IS_MOBILE = this.browser.IS_IOS || this.browser.IS_ANDROID;\n\n    this.clickEvent = this.browser.IS_MOBILE ? 'touchend' : 'click';\n\n    this.options = videojs.mergeOptions(this.defaults, options);\n\n    // will be passed to videojs\n    this.options.videojs = videojs.mergeOptions({\n      controls: this.options.controls,\n      preload: this.options.preload,\n      loop: this.options.loop,\n      poster: this.options.poster,\n      language: this.options.locale,\n      html5: {\n        hlsjsConfig: {}\n      },\n      plugins: {},\n      controlBar: {}\n    }, this.options.videojs);\n\n    this.options.classes = ['video-js'].concat(\n      Array.isArray(options.classes)\n        ? options.classes\n        : ['vjs-fill', 'vjs-big-play-centered']\n    );\n\n    if (this.options.volumeStyle === 'vertical') {\n      this.options.videojs.controlBar.volumeMenuButton = {\n        inline: false,\n        vertical: true\n      };\n    }\n\n    if (this.options.playerType === 'video'\n      && videojs.Hls\n      && (!this.browser.IS_MOBILE || this.options.sourcesWithRes.length)) {\n      if (this.browser.IS_IE11) {\n        // https://github.com/videojs/videojs-contrib-hls/blob/ab9a3986411ca15e3b4983dc03de8d32e9c686a2/README.md#ie11\n        // on IE11 force using flash\n        this.options.videojs.techOrder = ['flash'];\n\n        if (!this.options.sources.length && this.options.sourcesWithRes.length) {\n          this.options.sources = this.options.sourcesWithRes;\n        }\n\n      } else {\n        this.options.enableResolutionSwitcher = true;\n        // will be passed to videoJsResolutionSwitcher plugin\n        this.options.videojs.plugins.videoJsResolutionSwitcher = {\n          default: this.options.defaultQuality,\n          dynamicLabel: true\n        };\n      }\n    }\n\n    if (this.options.ads && this.options.ads.adTagUrl) {\n      // will be passed to ima plugin\n      this.options.ads = videojs.mergeOptions({\n        id: this.options.playerId,\n        locale: this.options.locale,\n        showControlsForJSAds: false\n      }, this.options.ads);\n    } else {\n      this.options.ads = {};\n    }\n\n    this.init();\n\n    return this.player;\n  }\n\n  init() {\n    this.createPlayer();\n\n    if (this.options.pathToSwf) {\n      videojs.options.flash.swf = this.options.pathToSwf;\n    }\n\n    if (this.options.share) {\n      videojs.addLanguage('ru', {\n        'Share Video': 'Поделиться',\n        'Direct Link': 'Прямая ссылка',\n        'Embed Code': 'Код для встраивания плеера'\n      });\n    }\n\n    // Init player\n    this.player = videojs(this.options.playerId, this.options.videojs, () => {\n      if (!!this.options.panorama && (this.player.panorama)) {\n        this.player.panorama(typeof this.options.panorama === 'object'\n          ? this.options.panorama\n          : {}\n        );\n        window.addEventListener('resize', () => {\n          const canvas = this.player.getChild('Canvas');\n          return canvas.handleResize();\n        });\n      }\n\n      // Init resolution switcher plugin\n      if (this.options.enableResolutionSwitcher && this.options.sourcesWithRes.length) {\n        this.player.updateSrc(this.options.sourcesWithRes);\n      }\n\n      // Init download button plugin\n      if (this.options.downloadButton && (this.player.downloadButton)) {\n        this.player.downloadButton(this.options.downloadButton);\n      }\n\n      // Init share plugin\n      if (this.options.share) {\n        this.player.social(this.options.share);\n      }\n\n      if (this.options.loop) {\n        this.player.loadingSpinner.hide();\n      }\n\n      // autoplay is not supported on mobile devices\n      if (this.options.autoplay && !this.browser.IS_MOBILE) {\n        this.initAds();\n        this.play();\n      } else if (this.browser.IS_MOBILE) {\n        // init ads and start playback on tap\n        this.player.one(this.clickEvent, () => {\n          this.initAds();\n          this.play();\n        });\n      } else {\n        this.initAds();\n      }\n\n      // allow to start/stop the playback on click even if controls are disabled\n      if (this.options.playOnClick) {\n        this.player.on(this.clickEvent, () => {\n          if (this.player.paused()) {\n            this.player.play();\n          } else {\n            this.player.pause();\n          }\n        });\n      }\n    });\n    if (typeof this.player.qualityPickerPlugin === 'function') {\n      this.player.qualityPickerPlugin({});\n    }\n  }\n\n  createPlayer() {\n    this.container = document.getElementById(this.options.containerId);\n\n    let classes = this.options.classes;\n    classes.push('vjs-' + this.options.skin + '-skin');\n\n    if (this.browser.IS_IE) {\n      classes.push('ie');\n    }\n\n    if (this.options.stretch) {\n      classes.push('vjs-stretch');\n    }\n\n    const dumbPlayer = document.createElement(this.options.playerType);\n    dumbPlayer.id = this.options.playerId;\n    dumbPlayer.className = classes.join(' ');\n\n    if (this.options.crossorigin) {\n      dumbPlayer.setAttribute('crossorigin', this.options.crossorigin);\n    }\n\n    if (this.options.muted) {\n      dumbPlayer.setAttribute('muted', '');\n    }\n\n    this.options.sources.forEach(function(source) {\n      const contentSrc = document.createElement('source');\n      contentSrc.setAttribute('src', source.src);\n      contentSrc.setAttribute('type', source.type);\n      dumbPlayer.appendChild(contentSrc);\n    });\n\n    this.container.appendChild(dumbPlayer);\n  }\n\n  play() {\n    this.player.play();\n    this.options.autoplay && this.player.autoplay(true);\n  }\n\n  initAds() {\n    if (!this.options.ads || !this.options.ads.adTagUrl || !this.player.ima) {\n      return;\n    }\n\n    this.player.ima(this.options.ads);\n    this.player.ima.initializeAdDisplayContainer();\n    this.player.ima.requestAds();\n  }\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/wjplayer.js\n **/","(function(f){if(typeof exports===\"object\"&&typeof module!==\"undefined\"){module.exports=f()}else if(typeof define===\"function\"&&define.amd){define([],f)}else{var g;if(typeof window!==\"undefined\"){g=window}else if(typeof global!==\"undefined\"){g=global}else if(typeof self!==\"undefined\"){g=self}else{g=this}g.Hls = f()}})(function(){var define,module,exports;return (function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(_dereq_,module,exports){\n// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nfunction EventEmitter() {\n  this._events = this._events || {};\n  this._maxListeners = this._maxListeners || undefined;\n}\nmodule.exports = EventEmitter;\n\n// Backwards-compat with node 0.10.x\nEventEmitter.EventEmitter = EventEmitter;\n\nEventEmitter.prototype._events = undefined;\nEventEmitter.prototype._maxListeners = undefined;\n\n// By default EventEmitters will print a warning if more than 10 listeners are\n// added to it. This is a useful default which helps finding memory leaks.\nEventEmitter.defaultMaxListeners = 10;\n\n// Obviously not all Emitters should be limited to 10. This function allows\n// that to be increased. Set to zero for unlimited.\nEventEmitter.prototype.setMaxListeners = function(n) {\n  if (!isNumber(n) || n < 0 || isNaN(n))\n    throw TypeError('n must be a positive number');\n  this._maxListeners = n;\n  return this;\n};\n\nEventEmitter.prototype.emit = function(type) {\n  var er, handler, len, args, i, listeners;\n\n  if (!this._events)\n    this._events = {};\n\n  // If there is no 'error' event listener then throw.\n  if (type === 'error') {\n    if (!this._events.error ||\n        (isObject(this._events.error) && !this._events.error.length)) {\n      er = arguments[1];\n      if (er instanceof Error) {\n        throw er; // Unhandled 'error' event\n      } else {\n        // At least give some kind of context to the user\n        var err = new Error('Uncaught, unspecified \"error\" event. (' + er + ')');\n        err.context = er;\n        throw err;\n      }\n    }\n  }\n\n  handler = this._events[type];\n\n  if (isUndefined(handler))\n    return false;\n\n  if (isFunction(handler)) {\n    switch (arguments.length) {\n      // fast cases\n      case 1:\n        handler.call(this);\n        break;\n      case 2:\n        handler.call(this, arguments[1]);\n        break;\n      case 3:\n        handler.call(this, arguments[1], arguments[2]);\n        break;\n      // slower\n      default:\n        args = Array.prototype.slice.call(arguments, 1);\n        handler.apply(this, args);\n    }\n  } else if (isObject(handler)) {\n    args = Array.prototype.slice.call(arguments, 1);\n    listeners = handler.slice();\n    len = listeners.length;\n    for (i = 0; i < len; i++)\n      listeners[i].apply(this, args);\n  }\n\n  return true;\n};\n\nEventEmitter.prototype.addListener = function(type, listener) {\n  var m;\n\n  if (!isFunction(listener))\n    throw TypeError('listener must be a function');\n\n  if (!this._events)\n    this._events = {};\n\n  // To avoid recursion in the case that type === \"newListener\"! Before\n  // adding it to the listeners, first emit \"newListener\".\n  if (this._events.newListener)\n    this.emit('newListener', type,\n              isFunction(listener.listener) ?\n              listener.listener : listener);\n\n  if (!this._events[type])\n    // Optimize the case of one listener. Don't need the extra array object.\n    this._events[type] = listener;\n  else if (isObject(this._events[type]))\n    // If we've already got an array, just append.\n    this._events[type].push(listener);\n  else\n    // Adding the second element, need to change to array.\n    this._events[type] = [this._events[type], listener];\n\n  // Check for listener leak\n  if (isObject(this._events[type]) && !this._events[type].warned) {\n    if (!isUndefined(this._maxListeners)) {\n      m = this._maxListeners;\n    } else {\n      m = EventEmitter.defaultMaxListeners;\n    }\n\n    if (m && m > 0 && this._events[type].length > m) {\n      this._events[type].warned = true;\n      console.error('(node) warning: possible EventEmitter memory ' +\n                    'leak detected. %d listeners added. ' +\n                    'Use emitter.setMaxListeners() to increase limit.',\n                    this._events[type].length);\n      if (typeof console.trace === 'function') {\n        // not supported in IE 10\n        console.trace();\n      }\n    }\n  }\n\n  return this;\n};\n\nEventEmitter.prototype.on = EventEmitter.prototype.addListener;\n\nEventEmitter.prototype.once = function(type, listener) {\n  if (!isFunction(listener))\n    throw TypeError('listener must be a function');\n\n  var fired = false;\n\n  function g() {\n    this.removeListener(type, g);\n\n    if (!fired) {\n      fired = true;\n      listener.apply(this, arguments);\n    }\n  }\n\n  g.listener = listener;\n  this.on(type, g);\n\n  return this;\n};\n\n// emits a 'removeListener' event iff the listener was removed\nEventEmitter.prototype.removeListener = function(type, listener) {\n  var list, position, length, i;\n\n  if (!isFunction(listener))\n    throw TypeError('listener must be a function');\n\n  if (!this._events || !this._events[type])\n    return this;\n\n  list = this._events[type];\n  length = list.length;\n  position = -1;\n\n  if (list === listener ||\n      (isFunction(list.listener) && list.listener === listener)) {\n    delete this._events[type];\n    if (this._events.removeListener)\n      this.emit('removeListener', type, listener);\n\n  } else if (isObject(list)) {\n    for (i = length; i-- > 0;) {\n      if (list[i] === listener ||\n          (list[i].listener && list[i].listener === listener)) {\n        position = i;\n        break;\n      }\n    }\n\n    if (position < 0)\n      return this;\n\n    if (list.length === 1) {\n      list.length = 0;\n      delete this._events[type];\n    } else {\n      list.splice(position, 1);\n    }\n\n    if (this._events.removeListener)\n      this.emit('removeListener', type, listener);\n  }\n\n  return this;\n};\n\nEventEmitter.prototype.removeAllListeners = function(type) {\n  var key, listeners;\n\n  if (!this._events)\n    return this;\n\n  // not listening for removeListener, no need to emit\n  if (!this._events.removeListener) {\n    if (arguments.length === 0)\n      this._events = {};\n    else if (this._events[type])\n      delete this._events[type];\n    return this;\n  }\n\n  // emit removeListener for all listeners on all events\n  if (arguments.length === 0) {\n    for (key in this._events) {\n      if (key === 'removeListener') continue;\n      this.removeAllListeners(key);\n    }\n    this.removeAllListeners('removeListener');\n    this._events = {};\n    return this;\n  }\n\n  listeners = this._events[type];\n\n  if (isFunction(listeners)) {\n    this.removeListener(type, listeners);\n  } else if (listeners) {\n    // LIFO order\n    while (listeners.length)\n      this.removeListener(type, listeners[listeners.length - 1]);\n  }\n  delete this._events[type];\n\n  return this;\n};\n\nEventEmitter.prototype.listeners = function(type) {\n  var ret;\n  if (!this._events || !this._events[type])\n    ret = [];\n  else if (isFunction(this._events[type]))\n    ret = [this._events[type]];\n  else\n    ret = this._events[type].slice();\n  return ret;\n};\n\nEventEmitter.prototype.listenerCount = function(type) {\n  if (this._events) {\n    var evlistener = this._events[type];\n\n    if (isFunction(evlistener))\n      return 1;\n    else if (evlistener)\n      return evlistener.length;\n  }\n  return 0;\n};\n\nEventEmitter.listenerCount = function(emitter, type) {\n  return emitter.listenerCount(type);\n};\n\nfunction isFunction(arg) {\n  return typeof arg === 'function';\n}\n\nfunction isNumber(arg) {\n  return typeof arg === 'number';\n}\n\nfunction isObject(arg) {\n  return typeof arg === 'object' && arg !== null;\n}\n\nfunction isUndefined(arg) {\n  return arg === void 0;\n}\n\n},{}],2:[function(_dereq_,module,exports){\n/* jshint ignore:start */\r\n(function(root) { \r\n/* jshint ignore:end */\r\n\r\n  var HASH_SPLIT = /^([^#]*)(.*)$/;\r\n  var QUERY_SPLIT = /^([^\\?]*)(.*)$/;\r\n  var DOMAIN_SPLIT = /^(([a-z]+:\\/\\/)?[^:\\/]+(?::[0-9]+)?)?(\\/?.*)$/i;\r\n\r\n  var URLToolkit = {\r\n    // build an absolute URL from a relative one using the provided baseURL\r\n    // if relativeURL is an absolute URL it will be returned as is.\r\n    buildAbsoluteURL: function(baseURL, relativeURL) {\r\n      // remove any remaining space and CRLF\r\n      relativeURL = relativeURL.trim();\r\n      if (/^[a-z]+:/i.test(relativeURL)) {\r\n        // complete url, not relative\r\n        return relativeURL;\r\n      }\r\n\r\n      var relativeURLQuery = null;\r\n      var relativeURLHash = null;\r\n\r\n      var relativeURLHashSplit = HASH_SPLIT.exec(relativeURL);\r\n      if (relativeURLHashSplit) {\r\n        relativeURLHash = relativeURLHashSplit[2];\r\n        relativeURL = relativeURLHashSplit[1];\r\n      }\r\n      var relativeURLQuerySplit = QUERY_SPLIT.exec(relativeURL);\r\n      if (relativeURLQuerySplit) {\r\n        relativeURLQuery = relativeURLQuerySplit[2];\r\n        relativeURL = relativeURLQuerySplit[1];\r\n      }\r\n\r\n      var baseURLHashSplit = HASH_SPLIT.exec(baseURL);\r\n      if (baseURLHashSplit) {\r\n        baseURL = baseURLHashSplit[1];\r\n      }\r\n      var baseURLQuerySplit = QUERY_SPLIT.exec(baseURL);\r\n      if (baseURLQuerySplit) {\r\n        baseURL = baseURLQuerySplit[1];\r\n      }\r\n\r\n      var baseURLDomainSplit = DOMAIN_SPLIT.exec(baseURL);\r\n      if (!baseURLDomainSplit) {\r\n        throw new Error('Error trying to parse base URL.');\r\n      }\r\n      \r\n      // e.g. 'http://', 'https://', ''\r\n      var baseURLProtocol = baseURLDomainSplit[2] || '';\r\n      // e.g. 'http://example.com', '//example.com', 'example.com', ''\r\n      var baseURLProtocolDomain = baseURLDomainSplit[1] || '';\r\n      // e.g. '/a/b/c/playlist.m3u8', 'a/b/c/playlist.m3u8'\r\n      var baseURLPath = baseURLDomainSplit[3];\r\n      if (baseURLPath.indexOf('/') !== 0 && baseURLProtocolDomain !== '') {\r\n        // this handles a base url of http://example.com (missing last slash)\r\n        baseURLPath = '/'+baseURLPath;\r\n      }\r\n\r\n      var builtURL = null;\r\n      if (/^\\/\\//.test(relativeURL)) {\r\n        // relative url starts wth '//' so copy protocol (which may be '' if baseUrl didn't provide one)\r\n        builtURL = baseURLProtocol+URLToolkit.buildAbsolutePath('', relativeURL.substring(2));\r\n      }\r\n      else if (/^\\//.test(relativeURL)) {\r\n        // relative url starts with '/' so start from root of domain\r\n        builtURL = baseURLProtocolDomain+'/'+URLToolkit.buildAbsolutePath('', relativeURL.substring(1));\r\n      }\r\n      else {\r\n        builtURL = URLToolkit.buildAbsolutePath(baseURLProtocolDomain+baseURLPath, relativeURL);\r\n      }\r\n\r\n      // put the query and hash parts back\r\n      if (relativeURLQuery) {\r\n        builtURL += relativeURLQuery;\r\n      }\r\n      if (relativeURLHash) {\r\n        builtURL += relativeURLHash;\r\n      }\r\n      return builtURL;\r\n    },\r\n\r\n    // build an absolute path using the provided basePath\r\n    // adapted from https://developer.mozilla.org/en-US/docs/Web/API/document/cookie#Using_relative_URLs_in_the_path_parameter\r\n    // this does not handle the case where relativePath is \"/\" or \"//\". These cases should be handled outside this.\r\n    buildAbsolutePath: function(basePath, relativePath) {\r\n      var sRelPath = relativePath;\r\n      var nUpLn, sDir = '', sPath = basePath.replace(/[^\\/]*$/, sRelPath.replace(/(\\/|^)(?:\\.?\\/+)+/g, '$1'));\r\n      for (var nEnd, nStart = 0; nEnd = sPath.indexOf('/../', nStart), nEnd > -1; nStart = nEnd + nUpLn) {\r\n        nUpLn = /^\\/(?:\\.\\.\\/)*/.exec(sPath.slice(nEnd))[0].length;\r\n        sDir = (sDir + sPath.substring(nStart, nEnd)).replace(new RegExp('(?:\\\\\\/+[^\\\\\\/]*){0,' + ((nUpLn - 1) / 3) + '}$'), '/');\r\n      }\r\n      return sDir + sPath.substr(nStart);\r\n    }\r\n  };\r\n\r\n/* jshint ignore:start */\r\n  if(typeof exports === 'object' && typeof module === 'object')\r\n    module.exports = URLToolkit;\r\n  else if(typeof define === 'function' && define.amd)\r\n    define([], function() { return URLToolkit; });\r\n  else if(typeof exports === 'object')\r\n    exports[\"URLToolkit\"] = URLToolkit;\r\n  else\r\n    root[\"URLToolkit\"] = URLToolkit;\r\n})(this);\r\n/* jshint ignore:end */\r\n\n},{}],3:[function(_dereq_,module,exports){\nvar bundleFn = arguments[3];\nvar sources = arguments[4];\nvar cache = arguments[5];\n\nvar stringify = JSON.stringify;\n\nmodule.exports = function (fn, options) {\n    var wkey;\n    var cacheKeys = Object.keys(cache);\n\n    for (var i = 0, l = cacheKeys.length; i < l; i++) {\n        var key = cacheKeys[i];\n        var exp = cache[key].exports;\n        // Using babel as a transpiler to use esmodule, the export will always\n        // be an object with the default export as a property of it. To ensure\n        // the existing api and babel esmodule exports are both supported we\n        // check for both\n        if (exp === fn || exp && exp.default === fn) {\n            wkey = key;\n            break;\n        }\n    }\n\n    if (!wkey) {\n        wkey = Math.floor(Math.pow(16, 8) * Math.random()).toString(16);\n        var wcache = {};\n        for (var i = 0, l = cacheKeys.length; i < l; i++) {\n            var key = cacheKeys[i];\n            wcache[key] = key;\n        }\n        sources[wkey] = [\n            Function(['require','module','exports'], '(' + fn + ')(self)'),\n            wcache\n        ];\n    }\n    var skey = Math.floor(Math.pow(16, 8) * Math.random()).toString(16);\n\n    var scache = {}; scache[wkey] = wkey;\n    sources[skey] = [\n        Function(['require'], (\n            // try to call default if defined to also support babel esmodule\n            // exports\n            'var f = require(' + stringify(wkey) + ');' +\n            '(f.default ? f.default : f)(self);'\n        )),\n        scache\n    ];\n\n    var workerSources = {};\n    resolveSources(skey);\n\n    function resolveSources(key) {\n        workerSources[key] = true;\n\n        for (var depPath in sources[key][1]) {\n            var depKey = sources[key][1][depPath];\n            if (!workerSources[depKey]) {\n                resolveSources(depKey);\n            }\n        }\n    }\n\n    var src = '(' + bundleFn + ')({'\n        + Object.keys(workerSources).map(function (key) {\n            return stringify(key) + ':['\n                + sources[key][0]\n                + ',' + stringify(sources[key][1]) + ']'\n            ;\n        }).join(',')\n        + '},{},[' + stringify(skey) + '])'\n    ;\n\n    var URL = window.URL || window.webkitURL || window.mozURL || window.msURL;\n\n    var blob = new Blob([src], { type: 'text/javascript' });\n    if (options && options.bare) { return blob; }\n    var workerUrl = URL.createObjectURL(blob);\n    var worker = new Worker(workerUrl);\n    worker.objectURL = workerUrl;\n    return worker;\n};\n\n},{}],4:[function(_dereq_,module,exports){\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _events = _dereq_(28);\n\nvar _events2 = _interopRequireDefault(_events);\n\nvar _eventHandler = _dereq_(27);\n\nvar _eventHandler2 = _interopRequireDefault(_eventHandler);\n\nvar _bufferHelper = _dereq_(30);\n\nvar _bufferHelper2 = _interopRequireDefault(_bufferHelper);\n\nvar _errors = _dereq_(26);\n\nvar _logger = _dereq_(45);\n\nvar _ewmaBandwidthEstimator = _dereq_(9);\n\nvar _ewmaBandwidthEstimator2 = _interopRequireDefault(_ewmaBandwidthEstimator);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /*\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * simple ABR Controller\ncompute next level based on last fragment bw heuristics\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                *  - implement an abandon rules triggered if we have less than 2 frag buffered and if computed bw shows that we risk buffer stalling\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                */\n\nvar AbrController = function (_EventHandler) {\n  _inherits(AbrController, _EventHandler);\n\n  function AbrController(hls) {\n    _classCallCheck(this, AbrController);\n\n    var _this = _possibleConstructorReturn(this, (AbrController.__proto__ || Object.getPrototypeOf(AbrController)).call(this, hls, _events2.default.FRAG_LOADING, _events2.default.FRAG_LOADED, _events2.default.FRAG_BUFFERED, _events2.default.ERROR));\n\n    _this.lastLoadedFragLevel = 0;\n    _this._autoLevelCapping = -1;\n    _this._nextAutoLevel = -1;\n    _this.hls = hls;\n    _this.onCheck = _this.abandonRulesCheck.bind(_this);\n    return _this;\n  }\n\n  _createClass(AbrController, [{\n    key: 'destroy',\n    value: function destroy() {\n      this.clearTimer();\n      _eventHandler2.default.prototype.destroy.call(this);\n    }\n  }, {\n    key: 'onFragLoading',\n    value: function onFragLoading(data) {\n      var frag = data.frag;\n      if (frag.type === 'main') {\n        if (!this.timer) {\n          this.timer = setInterval(this.onCheck, 100);\n        }\n        // lazy init of bw Estimator, rationale is that we use different params for Live/VoD\n        // so we need to wait for stream manifest / playlist type to instantiate it.\n        if (!this.bwEstimator) {\n          var hls = this.hls,\n              level = data.frag.level,\n              isLive = hls.levels[level].details.live,\n              config = hls.config,\n              ewmaFast = void 0,\n              ewmaSlow = void 0;\n\n          if (isLive) {\n            ewmaFast = config.abrEwmaFastLive;\n            ewmaSlow = config.abrEwmaSlowLive;\n          } else {\n            ewmaFast = config.abrEwmaFastVoD;\n            ewmaSlow = config.abrEwmaSlowVoD;\n          }\n          this.bwEstimator = new _ewmaBandwidthEstimator2.default(hls, ewmaSlow, ewmaFast, config.abrEwmaDefaultEstimate);\n        }\n        this.fragCurrent = frag;\n      }\n    }\n  }, {\n    key: 'abandonRulesCheck',\n    value: function abandonRulesCheck() {\n      /*\n        monitor fragment retrieval time...\n        we compute expected time of arrival of the complete fragment.\n        we compare it to expected time of buffer starvation\n      */\n      var hls = this.hls,\n          v = hls.media,\n          frag = this.fragCurrent,\n          loader = frag.loader,\n          minAutoLevel = this.minAutoLevel;\n\n      // if loader has been destroyed or loading has been aborted, stop timer and return\n      if (!loader || loader.stats && loader.stats.aborted) {\n        _logger.logger.warn('frag loader destroy or aborted, disarm abandonRules');\n        this.clearTimer();\n        return;\n      }\n      var stats = loader.stats;\n      /* only monitor frag retrieval time if\n      (video not paused OR first fragment being loaded(ready state === HAVE_NOTHING = 0)) AND autoswitching enabled AND not lowest level (=> means that we have several levels) */\n      if (v && (!v.paused && v.playbackRate !== 0 || !v.readyState) && frag.autoLevel && frag.level) {\n        var requestDelay = performance.now() - stats.trequest,\n            playbackRate = Math.abs(v.playbackRate);\n        // monitor fragment load progress after half of expected fragment duration,to stabilize bitrate\n        if (requestDelay > 500 * frag.duration / playbackRate) {\n          var levels = hls.levels,\n              loadRate = Math.max(1, stats.bw ? stats.bw / 8 : stats.loaded * 1000 / requestDelay),\n              // byte/s; at least 1 byte/s to avoid division by zero\n          // compute expected fragment length using frag duration and level bitrate. also ensure that expected len is gte than already loaded size\n          level = levels[frag.level],\n              levelBitrate = level.realBitrate ? Math.max(level.realBitrate, level.bitrate) : level.bitrate,\n              expectedLen = stats.total ? stats.total : Math.max(stats.loaded, Math.round(frag.duration * levelBitrate / 8)),\n              pos = v.currentTime,\n              fragLoadedDelay = (expectedLen - stats.loaded) / loadRate,\n              bufferStarvationDelay = (_bufferHelper2.default.bufferInfo(v, pos, hls.config.maxBufferHole).end - pos) / playbackRate;\n          // consider emergency switch down only if we have less than 2 frag buffered AND\n          // time to finish loading current fragment is bigger than buffer starvation delay\n          // ie if we risk buffer starvation if bw does not increase quickly\n          if (bufferStarvationDelay < 2 * frag.duration / playbackRate && fragLoadedDelay > bufferStarvationDelay) {\n            var fragLevelNextLoadedDelay = void 0,\n                nextLoadLevel = void 0;\n            // lets iterate through lower level and try to find the biggest one that could avoid rebuffering\n            // we start from current level - 1 and we step down , until we find a matching level\n            for (nextLoadLevel = frag.level - 1; nextLoadLevel > minAutoLevel; nextLoadLevel--) {\n              // compute time to load next fragment at lower level\n              // 0.8 : consider only 80% of current bw to be conservative\n              // 8 = bits per byte (bps/Bps)\n              var levelNextBitrate = levels[nextLoadLevel].realBitrate ? Math.max(levels[nextLoadLevel].realBitrate, levels[nextLoadLevel].bitrate) : levels[nextLoadLevel].bitrate;\n              fragLevelNextLoadedDelay = frag.duration * levelNextBitrate / (8 * 0.8 * loadRate);\n              if (fragLevelNextLoadedDelay < bufferStarvationDelay) {\n                // we found a lower level that be rebuffering free with current estimated bw !\n                break;\n              }\n            }\n            // only emergency switch down if it takes less time to load new fragment at lowest level instead\n            // of finishing loading current one ...\n            if (fragLevelNextLoadedDelay < fragLoadedDelay) {\n              _logger.logger.warn('loading too slow, abort fragment loading and switch to level ' + nextLoadLevel + ':fragLoadedDelay[' + nextLoadLevel + ']<fragLoadedDelay[' + (frag.level - 1) + '];bufferStarvationDelay:' + fragLevelNextLoadedDelay.toFixed(1) + '<' + fragLoadedDelay.toFixed(1) + ':' + bufferStarvationDelay.toFixed(1));\n              // force next load level in auto mode\n              hls.nextLoadLevel = nextLoadLevel;\n              // update bw estimate for this fragment before cancelling load (this will help reducing the bw)\n              this.bwEstimator.sample(requestDelay, stats.loaded);\n              //abort fragment loading\n              loader.abort();\n              // stop abandon rules timer\n              this.clearTimer();\n              hls.trigger(_events2.default.FRAG_LOAD_EMERGENCY_ABORTED, { frag: frag, stats: stats });\n            }\n          }\n        }\n      }\n    }\n  }, {\n    key: 'onFragLoaded',\n    value: function onFragLoaded(data) {\n      var frag = data.frag;\n      if (frag.type === 'main') {\n        // stop monitoring bw once frag loaded\n        this.clearTimer();\n        // store level id after successful fragment load\n        this.lastLoadedFragLevel = frag.level;\n        // reset forced auto level value so that next level will be selected\n        this._nextAutoLevel = -1;\n\n        // compute level average bitrate\n        var level = this.hls.levels[frag.level];\n        var loadedBytes = (level.loaded ? level.loaded.bytes : 0) + data.stats.loaded;\n        var loadedDuration = (level.loaded ? level.loaded.duration : 0) + data.frag.duration;\n        level.loaded = { bytes: loadedBytes, duration: loadedDuration };\n        level.realBitrate = Math.round(8 * loadedBytes / loadedDuration);\n        // if fragment has been loaded to perform a bitrate test,\n        if (data.frag.bitrateTest) {\n          var stats = data.stats;\n          stats.tparsed = stats.tbuffered = stats.tload;\n          this.onFragBuffered(data);\n        }\n      }\n    }\n  }, {\n    key: 'onFragBuffered',\n    value: function onFragBuffered(data) {\n      var stats = data.stats,\n          frag = data.frag;\n      // only update stats on first frag buffering\n      // if same frag is loaded multiple times, it might be in browser cache, and loaded quickly\n      // and leading to wrong bw estimation\n      // on bitrate test, also only update stats once (if tload = tbuffered == on FRAG_LOADED)\n      if (stats.aborted !== true && frag.loadCounter === 1 && frag.type === 'main' && (!frag.bitrateTest || stats.tload === stats.tbuffered)) {\n        // use tparsed-trequest instead of tbuffered-trequest to compute fragLoadingProcessing; rationale is that  buffer appending only happens once media is attached\n        // in case we use config.startFragPrefetch while media is not attached yet, fragment might be parsed while media not attached yet, but it will only be buffered on media attached\n        // as a consequence it could happen really late in the process. meaning that appending duration might appears huge ... leading to underestimated throughput estimation\n        var fragLoadingProcessingMs = stats.tparsed - stats.trequest;\n        _logger.logger.log('latency/loading/parsing/append/kbps:' + Math.round(stats.tfirst - stats.trequest) + '/' + Math.round(stats.tload - stats.tfirst) + '/' + Math.round(stats.tparsed - stats.tload) + '/' + Math.round(stats.tbuffered - stats.tparsed) + '/' + Math.round(8 * stats.loaded / (stats.tbuffered - stats.trequest)));\n        this.bwEstimator.sample(fragLoadingProcessingMs, stats.loaded);\n        // if fragment has been loaded to perform a bitrate test, (hls.startLevel = -1), store bitrate test delay duration\n        if (frag.bitrateTest) {\n          this.bitrateTestDelay = fragLoadingProcessingMs / 1000;\n        } else {\n          this.bitrateTestDelay = 0;\n        }\n      }\n    }\n  }, {\n    key: 'onError',\n    value: function onError(data) {\n      // stop timer in case of frag loading error\n      switch (data.details) {\n        case _errors.ErrorDetails.FRAG_LOAD_ERROR:\n        case _errors.ErrorDetails.FRAG_LOAD_TIMEOUT:\n          this.clearTimer();\n          break;\n        default:\n          break;\n      }\n    }\n  }, {\n    key: 'clearTimer',\n    value: function clearTimer() {\n      if (this.timer) {\n        clearInterval(this.timer);\n        this.timer = null;\n      }\n    }\n\n    /** Return the capping/max level value that could be used by automatic level selection algorithm **/\n\n  }, {\n    key: 'findBestLevel',\n    value: function findBestLevel(currentLevel, currentFragDuration, currentBw, minAutoLevel, maxAutoLevel, maxFetchDuration, bwFactor, bwUpFactor, levels) {\n      for (var i = maxAutoLevel; i >= minAutoLevel; i--) {\n        var levelInfo = levels[i],\n            levelDetails = levelInfo.details,\n            avgDuration = levelDetails ? levelDetails.totalduration / levelDetails.fragments.length : currentFragDuration,\n            live = levelDetails ? levelDetails.live : false,\n            adjustedbw = void 0;\n        // follow algorithm captured from stagefright :\n        // https://android.googlesource.com/platform/frameworks/av/+/master/media/libstagefright/httplive/LiveSession.cpp\n        // Pick the highest bandwidth stream below or equal to estimated bandwidth.\n        // consider only 80% of the available bandwidth, but if we are switching up,\n        // be even more conservative (70%) to avoid overestimating and immediately\n        // switching back.\n        if (i <= currentLevel) {\n          adjustedbw = bwFactor * currentBw;\n        } else {\n          adjustedbw = bwUpFactor * currentBw;\n        }\n        var bitrate = levels[i].realBitrate ? Math.max(levels[i].realBitrate, levels[i].bitrate) : levels[i].bitrate,\n            fetchDuration = bitrate * avgDuration / adjustedbw;\n\n        _logger.logger.trace('level/adjustedbw/bitrate/avgDuration/maxFetchDuration/fetchDuration: ' + i + '/' + Math.round(adjustedbw) + '/' + bitrate + '/' + avgDuration + '/' + maxFetchDuration + '/' + fetchDuration);\n        // if adjusted bw is greater than level bitrate AND\n        if (adjustedbw > bitrate && (\n        // fragment fetchDuration unknown OR live stream OR fragment fetchDuration less than max allowed fetch duration, then this level matches\n        // we don't account for max Fetch Duration for live streams, this is to avoid switching down when near the edge of live sliding window ...\n        !fetchDuration || live || fetchDuration < maxFetchDuration)) {\n          // as we are looping from highest to lowest, this will return the best achievable quality level\n\n          return i;\n        }\n      }\n      // not enough time budget even with quality level 0 ... rebuffering might happen\n      return -1;\n    }\n  }, {\n    key: 'autoLevelCapping',\n    get: function get() {\n      return this._autoLevelCapping;\n    }\n\n    /** set the capping/max level value that could be used by automatic level selection algorithm **/\n    ,\n    set: function set(newLevel) {\n      this._autoLevelCapping = newLevel;\n    }\n  }, {\n    key: 'nextAutoLevel',\n    get: function get() {\n      var nextAutoLevel = this._nextAutoLevel,\n          bwEstimator = this.bwEstimator,\n          hls = this.hls,\n          levels = hls.levels,\n          minAutoBitrate = hls.config.minAutoBitrate;\n      // in case next auto level has been forced, and bw not available or not reliable\n      if (nextAutoLevel !== -1 && (!bwEstimator || !bwEstimator.canEstimate())) {\n        // cap next auto level by max auto level\n        return Math.min(nextAutoLevel, this.maxAutoLevel);\n      }\n      // compute next level using ABR logic\n      var nextABRAutoLevel = this.nextABRAutoLevel;\n      if (nextAutoLevel !== -1) {\n        // nextAutoLevel is defined, use it to cap ABR computed quality level\n        nextABRAutoLevel = Math.min(nextAutoLevel, nextABRAutoLevel);\n      }\n      if (minAutoBitrate !== undefined) {\n        var levelNextBitrate = levels[nextABRAutoLevel].realBitrate ? Math.max(levels[nextABRAutoLevel].realBitrate, levels[nextABRAutoLevel].bitrate) : levels[nextABRAutoLevel].bitrate;\n        while (levelNextBitrate < minAutoBitrate) {\n          nextABRAutoLevel++;\n        }\n      }\n      return nextABRAutoLevel;\n    },\n    set: function set(nextLevel) {\n      this._nextAutoLevel = nextLevel;\n    }\n  }, {\n    key: 'minAutoLevel',\n    get: function get() {\n      var hls = this.hls,\n          levels = hls.levels,\n          minAutoBitrate = hls.config.minAutoBitrate,\n          len = levels ? levels.length : 0;\n      for (var i = 0; i < len; i++) {\n        var levelNextBitrate = levels[i].realBitrate ? Math.max(levels[i].realBitrate, levels[i].bitrate) : levels[i].bitrate;\n        if (levelNextBitrate > minAutoBitrate) {\n          return i;\n        }\n      }\n      return 0;\n    }\n  }, {\n    key: 'maxAutoLevel',\n    get: function get() {\n      var levels = this.hls.levels,\n          autoLevelCapping = this._autoLevelCapping,\n          maxAutoLevel;\n      if (autoLevelCapping === -1 && levels && levels.length) {\n        maxAutoLevel = levels.length - 1;\n      } else {\n        maxAutoLevel = autoLevelCapping;\n      }\n      return maxAutoLevel;\n    }\n  }, {\n    key: 'nextABRAutoLevel',\n    get: function get() {\n      var hls = this.hls,\n          maxAutoLevel = this.maxAutoLevel,\n          levels = hls.levels,\n          config = hls.config,\n          minAutoLevel = this.minAutoLevel;\n      var v = hls.media,\n          currentLevel = this.lastLoadedFragLevel,\n          currentFragDuration = this.fragCurrent ? this.fragCurrent.duration : 0,\n          pos = v ? v.currentTime : 0,\n\n      // playbackRate is the absolute value of the playback rate; if v.playbackRate is 0, we use 1 to load as\n      // if we're playing back at the normal rate.\n      playbackRate = v && v.playbackRate !== 0 ? Math.abs(v.playbackRate) : 1.0,\n          avgbw = this.bwEstimator ? this.bwEstimator.getEstimate() : config.abrEwmaDefaultEstimate,\n\n      // bufferStarvationDelay is the wall-clock time left until the playback buffer is exhausted.\n      bufferStarvationDelay = (_bufferHelper2.default.bufferInfo(v, pos, config.maxBufferHole).end - pos) / playbackRate;\n\n      // First, look to see if we can find a level matching with our avg bandwidth AND that could also guarantee no rebuffering at all\n      var bestLevel = this.findBestLevel(currentLevel, currentFragDuration, avgbw, minAutoLevel, maxAutoLevel, bufferStarvationDelay, config.abrBandWidthFactor, config.abrBandWidthUpFactor, levels);\n      if (bestLevel >= 0) {\n        return bestLevel;\n      } else {\n        _logger.logger.trace('rebuffering expected to happen, lets try to find a quality level minimizing the rebuffering');\n        // not possible to get rid of rebuffering ... let's try to find level that will guarantee less than maxStarvationDelay of rebuffering\n        // if no matching level found, logic will return 0\n        var maxStarvationDelay = currentFragDuration ? Math.min(currentFragDuration, config.maxStarvationDelay) : config.maxStarvationDelay,\n            bwFactor = config.abrBandWidthFactor,\n            bwUpFactor = config.abrBandWidthUpFactor;\n        if (bufferStarvationDelay === 0) {\n          // in case buffer is empty, let's check if previous fragment was loaded to perform a bitrate test\n          var bitrateTestDelay = this.bitrateTestDelay;\n          if (bitrateTestDelay) {\n            // if it is the case, then we need to adjust our max starvation delay using maxLoadingDelay config value\n            // max video loading delay used in  automatic start level selection :\n            // in that mode ABR controller will ensure that video loading time (ie the time to fetch the first fragment at lowest quality level +\n            // the time to fetch the fragment at the appropriate quality level is less than ```maxLoadingDelay``` )\n            // cap maxLoadingDelay and ensure it is not bigger 'than bitrate test' frag duration\n            var maxLoadingDelay = currentFragDuration ? Math.min(currentFragDuration, config.maxLoadingDelay) : config.maxLoadingDelay;\n            maxStarvationDelay = maxLoadingDelay - bitrateTestDelay;\n            _logger.logger.trace('bitrate test took ' + Math.round(1000 * bitrateTestDelay) + 'ms, set first fragment max fetchDuration to ' + Math.round(1000 * maxStarvationDelay) + ' ms');\n            // don't use conservative factor on bitrate test\n            bwFactor = bwUpFactor = 1;\n          }\n        }\n        bestLevel = this.findBestLevel(currentLevel, currentFragDuration, avgbw, minAutoLevel, maxAutoLevel, bufferStarvationDelay + maxStarvationDelay, bwFactor, bwUpFactor, levels);\n        return Math.max(bestLevel, 0);\n      }\n    }\n  }]);\n\n  return AbrController;\n}(_eventHandler2.default);\n\nexports.default = AbrController;\n\n},{\"26\":26,\"27\":27,\"28\":28,\"30\":30,\"45\":45,\"9\":9}],5:[function(_dereq_,module,exports){\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _binarySearch = _dereq_(41);\n\nvar _binarySearch2 = _interopRequireDefault(_binarySearch);\n\nvar _bufferHelper = _dereq_(30);\n\nvar _bufferHelper2 = _interopRequireDefault(_bufferHelper);\n\nvar _demuxer = _dereq_(22);\n\nvar _demuxer2 = _interopRequireDefault(_demuxer);\n\nvar _events = _dereq_(28);\n\nvar _events2 = _interopRequireDefault(_events);\n\nvar _eventHandler = _dereq_(27);\n\nvar _eventHandler2 = _interopRequireDefault(_eventHandler);\n\nvar _levelHelper = _dereq_(31);\n\nvar _levelHelper2 = _interopRequireDefault(_levelHelper);\n\nvar _timeRanges = _dereq_(46);\n\nvar _timeRanges2 = _interopRequireDefault(_timeRanges);\n\nvar _errors = _dereq_(26);\n\nvar _logger = _dereq_(45);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /*\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * Audio Stream Controller\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               */\n\nvar State = {\n  STOPPED: 'STOPPED',\n  STARTING: 'STARTING',\n  IDLE: 'IDLE',\n  PAUSED: 'PAUSED',\n  KEY_LOADING: 'KEY_LOADING',\n  FRAG_LOADING: 'FRAG_LOADING',\n  FRAG_LOADING_WAITING_RETRY: 'FRAG_LOADING_WAITING_RETRY',\n  WAITING_TRACK: 'WAITING_TRACK',\n  PARSING: 'PARSING',\n  PARSED: 'PARSED',\n  BUFFER_FLUSHING: 'BUFFER_FLUSHING',\n  ENDED: 'ENDED',\n  ERROR: 'ERROR',\n  WAITING_INIT_PTS: 'WAITING_INIT_PTS'\n};\n\nvar AudioStreamController = function (_EventHandler) {\n  _inherits(AudioStreamController, _EventHandler);\n\n  function AudioStreamController(hls) {\n    _classCallCheck(this, AudioStreamController);\n\n    var _this = _possibleConstructorReturn(this, (AudioStreamController.__proto__ || Object.getPrototypeOf(AudioStreamController)).call(this, hls, _events2.default.MEDIA_ATTACHED, _events2.default.MEDIA_DETACHING, _events2.default.AUDIO_TRACKS_UPDATED, _events2.default.AUDIO_TRACK_SWITCHING, _events2.default.AUDIO_TRACK_LOADED, _events2.default.KEY_LOADED, _events2.default.FRAG_LOADED, _events2.default.FRAG_PARSING_INIT_SEGMENT, _events2.default.FRAG_PARSING_DATA, _events2.default.FRAG_PARSED, _events2.default.ERROR, _events2.default.BUFFER_CREATED, _events2.default.BUFFER_APPENDED, _events2.default.BUFFER_FLUSHED, _events2.default.INIT_PTS_FOUND));\n\n    _this.config = hls.config;\n    _this.audioCodecSwap = false;\n    _this.ticks = 0;\n    _this._state = State.STOPPED;\n    _this.ontick = _this.tick.bind(_this);\n    _this.initPTS = [];\n    _this.waitingFragment = null;\n    return _this;\n  }\n\n  _createClass(AudioStreamController, [{\n    key: 'destroy',\n    value: function destroy() {\n      this.stopLoad();\n      if (this.timer) {\n        clearInterval(this.timer);\n        this.timer = null;\n      }\n      _eventHandler2.default.prototype.destroy.call(this);\n      this.state = State.STOPPED;\n    }\n\n    //Signal that video PTS was found\n\n  }, {\n    key: 'onInitPtsFound',\n    value: function onInitPtsFound(data) {\n      var demuxerId = data.id,\n          cc = data.cc,\n          initPTS = data.initPTS;\n      if (demuxerId === 'main') {\n        //Always update the new INIT PTS\n        //Can change due level switch\n        this.initPTS[cc] = initPTS;\n        _logger.logger.log('InitPTS for cc:' + cc + ' found from video track:' + initPTS);\n\n        //If we are waiting we need to demux/remux the waiting frag\n        //With the new initPTS\n        if (this.state === State.WAITING_INIT_PTS) {\n          _logger.logger.log('sending pending audio frag to demuxer');\n          this.state = State.FRAG_LOADING;\n          //We have audio frag waiting or video pts\n          //Let process it\n          this.onFragLoaded(this.waitingFragment);\n          //Lets clean the waiting frag\n          this.waitingFragment = null;\n        }\n      }\n    }\n  }, {\n    key: 'startLoad',\n    value: function startLoad(startPosition) {\n      if (this.tracks) {\n        var lastCurrentTime = this.lastCurrentTime;\n        this.stopLoad();\n        if (!this.timer) {\n          this.timer = setInterval(this.ontick, 100);\n        }\n        this.fragLoadError = 0;\n        if (lastCurrentTime > 0 && startPosition === -1) {\n          _logger.logger.log('audio:override startPosition with lastCurrentTime @' + lastCurrentTime.toFixed(3));\n          this.state = State.IDLE;\n        } else {\n          this.lastCurrentTime = this.startPosition ? this.startPosition : startPosition;\n          this.state = State.STARTING;\n        }\n        this.nextLoadPosition = this.startPosition = this.lastCurrentTime;\n        this.tick();\n      } else {\n        this.startPosition = startPosition;\n        this.state = State.STOPPED;\n      }\n    }\n  }, {\n    key: 'stopLoad',\n    value: function stopLoad() {\n      var frag = this.fragCurrent;\n      if (frag) {\n        if (frag.loader) {\n          frag.loader.abort();\n        }\n        this.fragCurrent = null;\n      }\n      this.fragPrevious = null;\n      if (this.demuxer) {\n        this.demuxer.destroy();\n        this.demuxer = null;\n      }\n      this.state = State.STOPPED;\n    }\n  }, {\n    key: 'tick',\n    value: function tick() {\n      this.ticks++;\n      if (this.ticks === 1) {\n        this.doTick();\n        if (this.ticks > 1) {\n          setTimeout(this.tick, 1);\n        }\n        this.ticks = 0;\n      }\n    }\n  }, {\n    key: 'doTick',\n    value: function doTick() {\n      var _this2 = this;\n\n      var pos,\n          track,\n          trackDetails,\n          hls = this.hls,\n          config = hls.config;\n      //logger.log('audioStream:' + this.state);\n      var now;\n      var retryDate;\n      var isSeeking;\n\n      var _ret = function () {\n        switch (_this2.state) {\n          case State.ERROR:\n          //don't do anything in error state to avoid breaking further ...\n          case State.PAUSED:\n          //don't do anything in paused state either ...\n          case State.BUFFER_FLUSHING:\n            break;\n          case State.STARTING:\n            _this2.state = State.WAITING_TRACK;\n            _this2.loadedmetadata = false;\n            break;\n          case State.IDLE:\n            var tracks = _this2.tracks;\n            // audio tracks not received => exit loop\n            if (!tracks) {\n              break;\n            }\n            // if video not attached AND\n            // start fragment already requested OR start frag prefetch disable\n            // exit loop\n            // => if media not attached but start frag prefetch is enabled and start frag not requested yet, we will not exit loop\n            if (!_this2.media && (_this2.startFragRequested || !config.startFragPrefetch)) {\n              break;\n            }\n            // determine next candidate fragment to be loaded, based on current position and\n            //  end of buffer position\n            // if we have not yet loaded any fragment, start loading from start position\n            if (_this2.loadedmetadata) {\n              pos = _this2.media.currentTime;\n            } else {\n              pos = _this2.nextLoadPosition;\n            }\n            var media = _this2.mediaBuffer ? _this2.mediaBuffer : _this2.media,\n                bufferInfo = _bufferHelper2.default.bufferInfo(media, pos, config.maxBufferHole),\n                bufferLen = bufferInfo.len,\n                bufferEnd = bufferInfo.end,\n                fragPrevious = _this2.fragPrevious,\n                maxBufLen = config.maxMaxBufferLength,\n                audioSwitch = _this2.audioSwitch,\n                trackId = _this2.trackId;\n\n            // if buffer length is less than maxBufLen try to load a new fragment\n            if (bufferLen < maxBufLen && trackId < tracks.length) {\n              trackDetails = tracks[trackId].details;\n              // if track info not retrieved yet, switch state and wait for track retrieval\n              if (typeof trackDetails === 'undefined') {\n                _this2.state = State.WAITING_TRACK;\n                break;\n              }\n\n              // we just got done loading the final fragment, check if we need to finalize media stream\n              if (!audioSwitch && !trackDetails.live && fragPrevious && fragPrevious.sn === trackDetails.endSN) {\n                // if we are not seeking or if we are seeking but everything (almost) til the end is buffered, let's signal eos\n                // we don't compare exactly media.duration === bufferInfo.end as there could be some subtle media duration difference when switching\n                // between different renditions. using half frag duration should help cope with these cases.\n                if (!_this2.media.seeking || _this2.media.duration - bufferEnd < fragPrevious.duration / 2) {\n                  // Finalize the media stream\n                  _this2.hls.trigger(_events2.default.BUFFER_EOS, { type: 'audio' });\n                  _this2.state = State.ENDED;\n                  break;\n                }\n              }\n\n              // find fragment index, contiguous with end of buffer position\n              var fragments = trackDetails.fragments,\n                  fragLen = fragments.length,\n                  start = fragments[0].start,\n                  end = fragments[fragLen - 1].start + fragments[fragLen - 1].duration,\n                  frag = void 0;\n\n              // When switching audio track, reload audio as close as possible to currentTime\n              if (audioSwitch) {\n                if (trackDetails.live && !trackDetails.PTSKnown) {\n                  _logger.logger.log('switching audiotrack, live stream, unknown PTS,load first fragment');\n                  bufferEnd = 0;\n                } else {\n                  bufferEnd = pos;\n                  // if currentTime (pos) is less than alt audio playlist start time, it means that alt audio is ahead of currentTime\n                  if (trackDetails.PTSKnown && pos < start) {\n                    // if everything is buffered from pos to start or if audio buffer upfront, let's seek to start\n                    if (bufferInfo.end > start || bufferInfo.nextStart) {\n                      _logger.logger.log('alt audio track ahead of main track, seek to start of alt audio track');\n                      _this2.media.currentTime = start + 0.05;\n                    } else {\n                      return {\n                        v: void 0\n                      };\n                    }\n                  }\n                }\n              }\n\n              // if bufferEnd before start of playlist, load first fragment\n              if (bufferEnd <= start) {\n                frag = fragments[0];\n                if (trackDetails.live && frag.loadIdx && frag.loadIdx === _this2.fragLoadIdx) {\n                  // we just loaded this first fragment, and we are still lagging behind the start of the live playlist\n                  // let's force seek to start\n                  var nextBuffered = bufferInfo.nextStart ? bufferInfo.nextStart : start;\n                  _logger.logger.log('no alt audio available @currentTime:' + _this2.media.currentTime + ', seeking @' + (nextBuffered + 0.05));\n                  _this2.media.currentTime = nextBuffered + 0.05;\n                  return {\n                    v: void 0\n                  };\n                }\n              } else {\n                (function () {\n                  var foundFrag = void 0;\n                  var maxFragLookUpTolerance = config.maxFragLookUpTolerance;\n                  if (bufferEnd < end) {\n                    if (bufferEnd > end - maxFragLookUpTolerance) {\n                      maxFragLookUpTolerance = 0;\n                    }\n                    foundFrag = _binarySearch2.default.search(fragments, function (candidate) {\n                      // offset should be within fragment boundary - config.maxFragLookUpTolerance\n                      // this is to cope with situations like\n                      // bufferEnd = 9.991\n                      // frag[Ø] : [0,10]\n                      // frag[1] : [10,20]\n                      // bufferEnd is within frag[0] range ... although what we are expecting is to return frag[1] here\n                      //              frag start               frag start+duration\n                      //                  |-----------------------------|\n                      //              <--->                         <--->\n                      //  ...--------><-----------------------------><---------....\n                      // previous frag         matching fragment         next frag\n                      //  return -1             return 0                 return 1\n                      //logger.log(`level/sn/start/end/bufEnd:${level}/${candidate.sn}/${candidate.start}/${(candidate.start+candidate.duration)}/${bufferEnd}`);\n                      if (candidate.start + candidate.duration - maxFragLookUpTolerance <= bufferEnd) {\n                        return 1;\n                      } else if (candidate.start - maxFragLookUpTolerance > bufferEnd) {\n                        return -1;\n                      }\n                      return 0;\n                    });\n                    if (!foundFrag) {\n                      _logger.logger.log('frag not found @bufferEnd/start:' + bufferEnd + '/' + start);\n                    }\n                  } else {\n                    // reach end of playlist\n                    foundFrag = fragments[fragLen - 1];\n                  }\n                  if (foundFrag) {\n                    frag = foundFrag;\n                    start = foundFrag.start;\n                    //logger.log('find SN matching with pos:' +  bufferEnd + ':' + frag.sn);\n                    if (fragPrevious && frag.level === fragPrevious.level && frag.sn === fragPrevious.sn) {\n                      if (frag.sn < trackDetails.endSN) {\n                        frag = fragments[frag.sn + 1 - trackDetails.startSN];\n                        _logger.logger.log('SN just loaded, load next one: ' + frag.sn);\n                      } else {\n                        frag = null;\n                      }\n                    }\n                  }\n                })();\n              }\n              if (frag) {\n                //logger.log('      loading frag ' + i +',pos/bufEnd:' + pos.toFixed(3) + '/' + bufferEnd.toFixed(3));\n                if (frag.decryptdata.uri != null && frag.decryptdata.key == null) {\n                  _logger.logger.log('Loading key for ' + frag.sn + ' of [' + trackDetails.startSN + ' ,' + trackDetails.endSN + '],track ' + trackId);\n                  _this2.state = State.KEY_LOADING;\n                  hls.trigger(_events2.default.KEY_LOADING, { frag: frag });\n                } else {\n                  _logger.logger.log('Loading ' + frag.sn + ' of [' + trackDetails.startSN + ' ,' + trackDetails.endSN + '],track ' + trackId + ', currentTime:' + pos + ',bufferEnd:' + bufferEnd.toFixed(3));\n                  // ensure that we are not reloading the same fragments in loop ...\n                  if (_this2.fragLoadIdx !== undefined) {\n                    _this2.fragLoadIdx++;\n                  } else {\n                    _this2.fragLoadIdx = 0;\n                  }\n                  if (frag.loadCounter) {\n                    frag.loadCounter++;\n                    var maxThreshold = config.fragLoadingLoopThreshold;\n                    // if this frag has already been loaded 3 times, and if it has been reloaded recently\n                    if (frag.loadCounter > maxThreshold && Math.abs(_this2.fragLoadIdx - frag.loadIdx) < maxThreshold) {\n                      hls.trigger(_events2.default.ERROR, { type: _errors.ErrorTypes.MEDIA_ERROR, details: _errors.ErrorDetails.FRAG_LOOP_LOADING_ERROR, fatal: false, frag: frag });\n                      return {\n                        v: void 0\n                      };\n                    }\n                  } else {\n                    frag.loadCounter = 1;\n                  }\n                  frag.loadIdx = _this2.fragLoadIdx;\n                  _this2.fragCurrent = frag;\n                  _this2.startFragRequested = true;\n                  _this2.nextLoadPosition = frag.start + frag.duration;\n                  hls.trigger(_events2.default.FRAG_LOADING, { frag: frag });\n                  _this2.state = State.FRAG_LOADING;\n                }\n              }\n            }\n            break;\n          case State.WAITING_TRACK:\n            track = _this2.tracks[_this2.trackId];\n            // check if playlist is already loaded\n            if (track && track.details) {\n              _this2.state = State.IDLE;\n            }\n            break;\n          case State.FRAG_LOADING_WAITING_RETRY:\n            now = performance.now();\n            retryDate = _this2.retryDate;\n\n            media = _this2.media;\n            isSeeking = media && media.seeking;\n            // if current time is gt than retryDate, or if media seeking let's switch to IDLE state to retry loading\n\n            if (!retryDate || now >= retryDate || isSeeking) {\n              _logger.logger.log('audioStreamController: retryDate reached, switch back to IDLE state');\n              _this2.state = State.IDLE;\n            }\n            break;\n          case State.WAITING_INIT_PTS:\n          case State.STOPPED:\n          case State.FRAG_LOADING:\n          case State.PARSING:\n          case State.PARSED:\n          case State.ENDED:\n            break;\n          default:\n            break;\n        }\n      }();\n\n      if ((typeof _ret === 'undefined' ? 'undefined' : _typeof(_ret)) === \"object\") return _ret.v;\n    }\n  }, {\n    key: 'onMediaAttached',\n    value: function onMediaAttached(data) {\n      var media = this.media = this.mediaBuffer = data.media;\n      this.onvseeking = this.onMediaSeeking.bind(this);\n      this.onvended = this.onMediaEnded.bind(this);\n      media.addEventListener('seeking', this.onvseeking);\n      media.addEventListener('ended', this.onvended);\n      var config = this.config;\n      if (this.tracks && config.autoStartLoad) {\n        this.startLoad(config.startPosition);\n      }\n    }\n  }, {\n    key: 'onMediaDetaching',\n    value: function onMediaDetaching() {\n      var media = this.media;\n      if (media && media.ended) {\n        _logger.logger.log('MSE detaching and video ended, reset startPosition');\n        this.startPosition = this.lastCurrentTime = 0;\n      }\n\n      // reset fragment loading counter on MSE detaching to avoid reporting FRAG_LOOP_LOADING_ERROR after error recovery\n      var tracks = this.tracks;\n      if (tracks) {\n        // reset fragment load counter\n        tracks.forEach(function (track) {\n          if (track.details) {\n            track.details.fragments.forEach(function (fragment) {\n              fragment.loadCounter = undefined;\n            });\n          }\n        });\n      }\n      // remove video listeners\n      if (media) {\n        media.removeEventListener('seeking', this.onvseeking);\n        media.removeEventListener('ended', this.onvended);\n        this.onvseeking = this.onvseeked = this.onvended = null;\n      }\n      this.media = this.mediaBuffer = null;\n      this.loadedmetadata = false;\n      this.stopLoad();\n    }\n  }, {\n    key: 'onMediaSeeking',\n    value: function onMediaSeeking() {\n      if (this.state === State.ENDED) {\n        // switch to IDLE state to check for potential new fragment\n        this.state = State.IDLE;\n      }\n      if (this.media) {\n        this.lastCurrentTime = this.media.currentTime;\n      }\n      // avoid reporting fragment loop loading error in case user is seeking several times on same position\n      if (this.fragLoadIdx !== undefined) {\n        this.fragLoadIdx += 2 * this.config.fragLoadingLoopThreshold;\n      }\n      // tick to speed up processing\n      this.tick();\n    }\n  }, {\n    key: 'onMediaEnded',\n    value: function onMediaEnded() {\n      // reset startPosition and lastCurrentTime to restart playback @ stream beginning\n      this.startPosition = this.lastCurrentTime = 0;\n    }\n  }, {\n    key: 'onAudioTracksUpdated',\n    value: function onAudioTracksUpdated(data) {\n      _logger.logger.log('audio tracks updated');\n      this.tracks = data.audioTracks;\n    }\n  }, {\n    key: 'onAudioTrackSwitching',\n    value: function onAudioTrackSwitching(data) {\n      // if any URL found on new audio track, it is an alternate audio track\n      var altAudio = !!data.url;\n      this.trackId = data.id;\n      this.state = State.IDLE;\n\n      this.fragCurrent = null;\n      this.state = State.PAUSED;\n      this.waitingFragment = null;\n      // destroy useless demuxer when switching audio to main\n      if (!altAudio) {\n        if (this.demuxer) {\n          this.demuxer.destroy();\n          this.demuxer = null;\n        }\n      } else {\n        // switching to audio track, start timer if not already started\n        if (!this.timer) {\n          this.timer = setInterval(this.ontick, 100);\n        }\n      }\n\n      //should we switch tracks ?\n      if (altAudio) {\n        this.audioSwitch = true;\n        //main audio track are handled by stream-controller, just do something if switching to alt audio track\n        this.state = State.IDLE;\n        // increase fragment load Index to avoid frag loop loading error after buffer flush\n        if (this.fragLoadIdx !== undefined) {\n          this.fragLoadIdx += 2 * this.config.fragLoadingLoopThreshold;\n        }\n      }\n      this.tick();\n    }\n  }, {\n    key: 'onAudioTrackLoaded',\n    value: function onAudioTrackLoaded(data) {\n      var newDetails = data.details,\n          trackId = data.id,\n          track = this.tracks[trackId],\n          duration = newDetails.totalduration,\n          sliding = 0;\n\n      _logger.logger.log('track ' + trackId + ' loaded [' + newDetails.startSN + ',' + newDetails.endSN + '],duration:' + duration);\n\n      if (newDetails.live) {\n        var curDetails = track.details;\n        if (curDetails && newDetails.fragments.length > 0) {\n          // we already have details for that level, merge them\n          _levelHelper2.default.mergeDetails(curDetails, newDetails);\n          sliding = newDetails.fragments[0].start;\n          // TODO\n          //this.liveSyncPosition = this.computeLivePosition(sliding, curDetails);\n          if (newDetails.PTSKnown) {\n            _logger.logger.log('live audio playlist sliding:' + sliding.toFixed(3));\n          } else {\n            _logger.logger.log('live audio playlist - outdated PTS, unknown sliding');\n          }\n        } else {\n          newDetails.PTSKnown = false;\n          _logger.logger.log('live audio playlist - first load, unknown sliding');\n        }\n      } else {\n        newDetails.PTSKnown = false;\n      }\n      track.details = newDetails;\n\n      // compute start position\n      if (!this.startFragRequested) {\n        // compute start position if set to -1. use it straight away if value is defined\n        if (this.startPosition === -1) {\n          // first, check if start time offset has been set in playlist, if yes, use this value\n          var startTimeOffset = newDetails.startTimeOffset;\n          if (!isNaN(startTimeOffset)) {\n            _logger.logger.log('start time offset found in playlist, adjust startPosition to ' + startTimeOffset);\n            this.startPosition = startTimeOffset;\n          } else {\n            this.startPosition = 0;\n          }\n        }\n        this.nextLoadPosition = this.startPosition;\n      }\n      // only switch batck to IDLE state if we were waiting for track to start downloading a new fragment\n      if (this.state === State.WAITING_TRACK) {\n        this.state = State.IDLE;\n      }\n      //trigger handler right now\n      this.tick();\n    }\n  }, {\n    key: 'onKeyLoaded',\n    value: function onKeyLoaded() {\n      if (this.state === State.KEY_LOADING) {\n        this.state = State.IDLE;\n        this.tick();\n      }\n    }\n  }, {\n    key: 'onFragLoaded',\n    value: function onFragLoaded(data) {\n      var fragCurrent = this.fragCurrent;\n      if (this.state === State.FRAG_LOADING && fragCurrent && data.frag.type === 'audio' && data.frag.level === fragCurrent.level && data.frag.sn === fragCurrent.sn) {\n        this.state = State.PARSING;\n        // transmux the MPEG-TS data to ISO-BMFF segments\n        this.stats = data.stats;\n        var track = this.tracks[this.trackId],\n            details = track.details,\n            duration = details.totalduration,\n            start = fragCurrent.start,\n            trackId = fragCurrent.level,\n            sn = fragCurrent.sn,\n            cc = fragCurrent.cc,\n            audioCodec = this.config.defaultAudioCodec || track.audioCodec;\n        this.appended = false;\n        if (!this.demuxer) {\n          this.demuxer = new _demuxer2.default(this.hls, 'audio');\n        }\n        //Check if we have video initPTS\n        // If not we need to wait for it\n        var initPTS = this.initPTS[cc];\n        if (initPTS !== undefined) {\n          this.pendingBuffering = true;\n          _logger.logger.log('Demuxing ' + sn + ' of [' + details.startSN + ' ,' + details.endSN + '],track ' + trackId);\n          // time Offset is accurate if level PTS is known, or if playlist is not sliding (not live)\n          var accurateTimeOffset = false; //details.PTSKnown || !details.live;\n          this.demuxer.push(data.payload, audioCodec, null, start, cc, trackId, sn, duration, fragCurrent.decryptdata, accurateTimeOffset, initPTS);\n        } else {\n          _logger.logger.log('unknown video PTS for continuity counter ' + cc + ', waiting for video PTS before demuxing audio frag ' + sn + ' of [' + details.startSN + ' ,' + details.endSN + '],track ' + trackId);\n          this.waitingFragment = data;\n          this.state = State.WAITING_INIT_PTS;\n        }\n      }\n      this.fragLoadError = 0;\n    }\n  }, {\n    key: 'onFragParsingInitSegment',\n    value: function onFragParsingInitSegment(data) {\n      var fragCurrent = this.fragCurrent;\n      if (fragCurrent && data.id === 'audio' && data.sn === fragCurrent.sn && data.level === fragCurrent.level && this.state === State.PARSING) {\n        var tracks = data.tracks,\n            track = void 0;\n\n        // delete any video track found on audio demuxer\n        if (tracks.video) {\n          delete tracks.video;\n        }\n\n        // include levelCodec in audio and video tracks\n        track = tracks.audio;\n        if (track) {\n          track.levelCodec = 'mp4a.40.2';\n          track.id = data.id;\n          this.hls.trigger(_events2.default.BUFFER_CODECS, tracks);\n          _logger.logger.log('audio track:audio,container:' + track.container + ',codecs[level/parsed]=[' + track.levelCodec + '/' + track.codec + ']');\n          var initSegment = track.initSegment;\n          if (initSegment) {\n            var appendObj = { type: 'audio', data: initSegment, parent: 'audio', content: 'initSegment' };\n            if (this.audioSwitch) {\n              this.pendingData = [appendObj];\n            } else {\n              this.appended = true;\n              // arm pending Buffering flag before appending a segment\n              this.pendingBuffering = true;\n              this.hls.trigger(_events2.default.BUFFER_APPENDING, appendObj);\n            }\n          }\n          //trigger handler right now\n          this.tick();\n        }\n      }\n    }\n  }, {\n    key: 'onFragParsingData',\n    value: function onFragParsingData(data) {\n      var _this3 = this;\n\n      var fragCurrent = this.fragCurrent;\n      if (fragCurrent && data.id === 'audio' && data.type === 'audio' && data.sn === fragCurrent.sn && data.level === fragCurrent.level && this.state === State.PARSING) {\n        (function () {\n          var trackId = _this3.trackId,\n              track = _this3.tracks[trackId],\n              frag = _this3.fragCurrent,\n              hls = _this3.hls;\n\n          _logger.logger.log('parsed ' + data.type + ',PTS:[' + data.startPTS.toFixed(3) + ',' + data.endPTS.toFixed(3) + '],DTS:[' + data.startDTS.toFixed(3) + '/' + data.endDTS.toFixed(3) + '],nb:' + data.nb);\n          _levelHelper2.default.updateFragPTSDTS(track.details, frag.sn, data.startPTS, data.endPTS);\n\n          var audioSwitch = _this3.audioSwitch,\n              media = _this3.media,\n              appendOnBufferFlush = false;\n          //Only flush audio from old audio tracks when PTS is known on new audio track\n          if (audioSwitch && media) {\n            if (media.readyState) {\n              var currentTime = media.currentTime;\n              _logger.logger.log('switching audio track : currentTime:' + currentTime);\n              if (currentTime >= data.startPTS) {\n                _logger.logger.log('switching audio track : flushing all audio');\n                _this3.state = State.BUFFER_FLUSHING;\n                hls.trigger(_events2.default.BUFFER_FLUSHING, { startOffset: 0, endOffset: Number.POSITIVE_INFINITY, type: 'audio' });\n                appendOnBufferFlush = true;\n                //Lets announce that the initial audio track switch flush occur\n                _this3.audioSwitch = false;\n                hls.trigger(_events2.default.AUDIO_TRACK_SWITCHED, { id: trackId });\n              }\n            } else {\n              //Lets announce that the initial audio track switch flush occur\n              _this3.audioSwitch = false;\n              hls.trigger(_events2.default.AUDIO_TRACK_SWITCHED, { id: trackId });\n            }\n          }\n\n          var pendingData = _this3.pendingData;\n          if (!_this3.audioSwitch) {\n            [data.data1, data.data2].forEach(function (buffer) {\n              if (buffer) {\n                pendingData.push({ type: data.type, data: buffer, parent: 'audio', content: 'data' });\n              }\n            });\n            if (!appendOnBufferFlush && pendingData.length) {\n              pendingData.forEach(function (appendObj) {\n                // arm pending Buffering flag before appending a segment\n                _this3.pendingBuffering = true;\n                _this3.hls.trigger(_events2.default.BUFFER_APPENDING, appendObj);\n              });\n              _this3.pendingData = [];\n              _this3.appended = true;\n            }\n          }\n          //trigger handler right now\n          _this3.tick();\n        })();\n      }\n    }\n  }, {\n    key: 'onFragParsed',\n    value: function onFragParsed(data) {\n      var fragCurrent = this.fragCurrent;\n      if (fragCurrent && data.id === 'audio' && data.sn === fragCurrent.sn && data.level === fragCurrent.level && this.state === State.PARSING) {\n        this.stats.tparsed = performance.now();\n        this.state = State.PARSED;\n        this._checkAppendedParsed();\n      }\n    }\n  }, {\n    key: 'onBufferCreated',\n    value: function onBufferCreated(data) {\n      var audioTrack = data.tracks.audio;\n      if (audioTrack) {\n        this.mediaBuffer = audioTrack.buffer;\n        this.loadedmetadata = true;\n      }\n    }\n  }, {\n    key: 'onBufferAppended',\n    value: function onBufferAppended(data) {\n      if (data.parent === 'audio') {\n        var state = this.state;\n        if (state === State.PARSING || state === State.PARSED) {\n          // check if all buffers have been appended\n          this.pendingBuffering = data.pending > 0;\n          this._checkAppendedParsed();\n        }\n      }\n    }\n  }, {\n    key: '_checkAppendedParsed',\n    value: function _checkAppendedParsed() {\n      //trigger handler right now\n      if (this.state === State.PARSED && (!this.appended || !this.pendingBuffering)) {\n        var frag = this.fragCurrent,\n            stats = this.stats,\n            hls = this.hls;\n        if (frag) {\n          this.fragPrevious = frag;\n          stats.tbuffered = performance.now();\n          hls.trigger(_events2.default.FRAG_BUFFERED, { stats: stats, frag: frag, id: 'audio' });\n          var media = this.mediaBuffer ? this.mediaBuffer : this.media;\n          _logger.logger.log('audio buffered : ' + _timeRanges2.default.toString(media.buffered));\n          if (this.audioSwitch && this.appended) {\n            this.audioSwitch = false;\n            hls.trigger(_events2.default.AUDIO_TRACK_SWITCHED, { id: this.trackId });\n          }\n          this.state = State.IDLE;\n        }\n        this.tick();\n      }\n    }\n  }, {\n    key: 'onError',\n    value: function onError(data) {\n      var frag = data.frag;\n      // don't handle frag error not related to audio fragment\n      if (frag && frag.type !== 'audio') {\n        return;\n      }\n      switch (data.details) {\n        case _errors.ErrorDetails.FRAG_LOAD_ERROR:\n        case _errors.ErrorDetails.FRAG_LOAD_TIMEOUT:\n          if (!data.fatal) {\n            var loadError = this.fragLoadError;\n            if (loadError) {\n              loadError++;\n            } else {\n              loadError = 1;\n            }\n            var config = this.config;\n            if (loadError <= config.fragLoadingMaxRetry) {\n              this.fragLoadError = loadError;\n              // reset load counter to avoid frag loop loading error\n              frag.loadCounter = 0;\n              // exponential backoff capped to config.fragLoadingMaxRetryTimeout\n              var delay = Math.min(Math.pow(2, loadError - 1) * config.fragLoadingRetryDelay, config.fragLoadingMaxRetryTimeout);\n              _logger.logger.warn('audioStreamController: frag loading failed, retry in ' + delay + ' ms');\n              this.retryDate = performance.now() + delay;\n              // retry loading state\n              this.state = State.FRAG_LOADING_WAITING_RETRY;\n            } else {\n              _logger.logger.error('audioStreamController: ' + data.details + ' reaches max retry, redispatch as fatal ...');\n              // redispatch same error but with fatal set to true\n              data.fatal = true;\n              this.hls.trigger(_events2.default.ERROR, data);\n              this.state = State.ERROR;\n            }\n          }\n          break;\n        case _errors.ErrorDetails.FRAG_LOOP_LOADING_ERROR:\n        case _errors.ErrorDetails.AUDIO_TRACK_LOAD_ERROR:\n        case _errors.ErrorDetails.AUDIO_TRACK_LOAD_TIMEOUT:\n        case _errors.ErrorDetails.KEY_LOAD_ERROR:\n        case _errors.ErrorDetails.KEY_LOAD_TIMEOUT:\n          //  when in ERROR state, don't switch back to IDLE state in case a non-fatal error is received\n          if (this.state !== State.ERROR) {\n            // if fatal error, stop processing, otherwise move to IDLE to retry loading\n            this.state = data.fatal ? State.ERROR : State.IDLE;\n            _logger.logger.warn('audioStreamController: ' + data.details + ' while loading frag,switch to ' + this.state + ' state ...');\n          }\n          break;\n        default:\n          break;\n      }\n    }\n  }, {\n    key: 'onBufferFlushed',\n    value: function onBufferFlushed() {\n      var _this4 = this;\n\n      var pendingData = this.pendingData;\n      if (pendingData && pendingData.length) {\n        _logger.logger.log('appending pending audio data on Buffer Flushed');\n        pendingData.forEach(function (appendObj) {\n          _this4.hls.trigger(_events2.default.BUFFER_APPENDING, appendObj);\n        });\n        this.appended = true;\n        this.pendingData = [];\n        this.state = State.PARSED;\n      } else {\n        // move to IDLE once flush complete. this should trigger new fragment loading\n        this.state = State.IDLE;\n        // reset reference to frag\n        this.fragPrevious = null;\n        this.tick();\n      }\n    }\n  }, {\n    key: 'state',\n    set: function set(nextState) {\n      if (this.state !== nextState) {\n        var previousState = this.state;\n        this._state = nextState;\n        _logger.logger.log('audio stream:' + previousState + '->' + nextState);\n      }\n    },\n    get: function get() {\n      return this._state;\n    }\n  }]);\n\n  return AudioStreamController;\n}(_eventHandler2.default);\n\nexports.default = AudioStreamController;\n\n},{\"22\":22,\"26\":26,\"27\":27,\"28\":28,\"30\":30,\"31\":31,\"41\":41,\"45\":45,\"46\":46}],6:[function(_dereq_,module,exports){\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _events = _dereq_(28);\n\nvar _events2 = _interopRequireDefault(_events);\n\nvar _eventHandler = _dereq_(27);\n\nvar _eventHandler2 = _interopRequireDefault(_eventHandler);\n\nvar _logger = _dereq_(45);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /*\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * audio track controller\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               */\n\nvar AudioTrackController = function (_EventHandler) {\n  _inherits(AudioTrackController, _EventHandler);\n\n  function AudioTrackController(hls) {\n    _classCallCheck(this, AudioTrackController);\n\n    var _this = _possibleConstructorReturn(this, (AudioTrackController.__proto__ || Object.getPrototypeOf(AudioTrackController)).call(this, hls, _events2.default.MANIFEST_LOADING, _events2.default.MANIFEST_LOADED, _events2.default.AUDIO_TRACK_LOADED));\n\n    _this.ticks = 0;\n    _this.ontick = _this.tick.bind(_this);\n    return _this;\n  }\n\n  _createClass(AudioTrackController, [{\n    key: 'destroy',\n    value: function destroy() {\n      _eventHandler2.default.prototype.destroy.call(this);\n    }\n  }, {\n    key: 'tick',\n    value: function tick() {\n      this.ticks++;\n      if (this.ticks === 1) {\n        this.doTick();\n        if (this.ticks > 1) {\n          setTimeout(this.tick, 1);\n        }\n        this.ticks = 0;\n      }\n    }\n  }, {\n    key: 'doTick',\n    value: function doTick() {\n      this.updateTrack(this.trackId);\n    }\n  }, {\n    key: 'onManifestLoading',\n    value: function onManifestLoading() {\n      // reset audio tracks on manifest loading\n      this.tracks = [];\n      this.trackId = -1;\n    }\n  }, {\n    key: 'onManifestLoaded',\n    value: function onManifestLoaded(data) {\n      var _this2 = this;\n\n      var tracks = data.audioTracks || [];\n      var defaultFound = false;\n      this.tracks = tracks;\n      this.hls.trigger(_events2.default.AUDIO_TRACKS_UPDATED, { audioTracks: tracks });\n      // loop through available audio tracks and autoselect default if needed\n      var id = 0;\n      tracks.forEach(function (track) {\n        if (track.default) {\n          _this2.audioTrack = id;\n          defaultFound = true;\n          return;\n        }\n        id++;\n      });\n      if (defaultFound === false && tracks.length) {\n        _logger.logger.log('no default audio track defined, use first audio track as default');\n        this.audioTrack = 0;\n      }\n    }\n  }, {\n    key: 'onAudioTrackLoaded',\n    value: function onAudioTrackLoaded(data) {\n      if (data.id < this.tracks.length) {\n        _logger.logger.log('audioTrack ' + data.id + ' loaded');\n        this.tracks[data.id].details = data.details;\n        // check if current playlist is a live playlist\n        if (data.details.live && !this.timer) {\n          // if live playlist we will have to reload it periodically\n          // set reload period to playlist target duration\n          this.timer = setInterval(this.ontick, 1000 * data.details.targetduration);\n        }\n        if (!data.details.live && this.timer) {\n          // playlist is not live and timer is armed : stopping it\n          clearInterval(this.timer);\n          this.timer = null;\n        }\n      }\n    }\n\n    /** get alternate audio tracks list from playlist **/\n\n  }, {\n    key: 'setAudioTrackInternal',\n    value: function setAudioTrackInternal(newId) {\n      // check if level idx is valid\n      if (newId >= 0 && newId < this.tracks.length) {\n        // stopping live reloading timer if any\n        if (this.timer) {\n          clearInterval(this.timer);\n          this.timer = null;\n        }\n        this.trackId = newId;\n        _logger.logger.log('switching to audioTrack ' + newId);\n        var audioTrack = this.tracks[newId],\n            hls = this.hls,\n            type = audioTrack.type,\n            url = audioTrack.url,\n            eventObj = { id: newId, type: type, url: url };\n        // keep AUDIO_TRACK_SWITCH for legacy reason\n        hls.trigger(_events2.default.AUDIO_TRACK_SWITCH, eventObj);\n        hls.trigger(_events2.default.AUDIO_TRACK_SWITCHING, eventObj);\n        // check if we need to load playlist for this audio Track\n        var details = audioTrack.details;\n        if (url && (details === undefined || details.live === true)) {\n          // track not retrieved yet, or live playlist we need to (re)load it\n          _logger.logger.log('(re)loading playlist for audioTrack ' + newId);\n          hls.trigger(_events2.default.AUDIO_TRACK_LOADING, { url: url, id: newId });\n        }\n      }\n    }\n  }, {\n    key: 'updateTrack',\n    value: function updateTrack(newId) {\n      // check if level idx is valid\n      if (newId >= 0 && newId < this.tracks.length) {\n        // stopping live reloading timer if any\n        if (this.timer) {\n          clearInterval(this.timer);\n          this.timer = null;\n        }\n        this.trackId = newId;\n        _logger.logger.log('updating audioTrack ' + newId);\n        var audioTrack = this.tracks[newId],\n            url = audioTrack.url;\n        // check if we need to load playlist for this audio Track\n        var details = audioTrack.details;\n        if (url && (details === undefined || details.live === true)) {\n          // track not retrieved yet, or live playlist we need to (re)load it\n          _logger.logger.log('(re)loading playlist for audioTrack ' + newId);\n          this.hls.trigger(_events2.default.AUDIO_TRACK_LOADING, { url: url, id: newId });\n        }\n      }\n    }\n  }, {\n    key: 'audioTracks',\n    get: function get() {\n      return this.tracks;\n    }\n\n    /** get index of the selected audio track (index in audio track lists) **/\n\n  }, {\n    key: 'audioTrack',\n    get: function get() {\n      return this.trackId;\n    }\n\n    /** select an audio track, based on its index in audio track lists**/\n    ,\n    set: function set(audioTrackId) {\n      if (this.trackId !== audioTrackId || this.tracks[audioTrackId].details === undefined) {\n        this.setAudioTrackInternal(audioTrackId);\n      }\n    }\n  }]);\n\n  return AudioTrackController;\n}(_eventHandler2.default);\n\nexports.default = AudioTrackController;\n\n},{\"27\":27,\"28\":28,\"45\":45}],7:[function(_dereq_,module,exports){\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _events = _dereq_(28);\n\nvar _events2 = _interopRequireDefault(_events);\n\nvar _eventHandler = _dereq_(27);\n\nvar _eventHandler2 = _interopRequireDefault(_eventHandler);\n\nvar _logger = _dereq_(45);\n\nvar _errors = _dereq_(26);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /*\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * Buffer Controller\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               */\n\nvar BufferController = function (_EventHandler) {\n  _inherits(BufferController, _EventHandler);\n\n  function BufferController(hls) {\n    _classCallCheck(this, BufferController);\n\n    // the value that we have set mediasource.duration to\n    // (the actual duration may be tweaked slighly by the browser)\n    var _this = _possibleConstructorReturn(this, (BufferController.__proto__ || Object.getPrototypeOf(BufferController)).call(this, hls, _events2.default.MEDIA_ATTACHING, _events2.default.MEDIA_DETACHING, _events2.default.MANIFEST_PARSED, _events2.default.BUFFER_RESET, _events2.default.BUFFER_APPENDING, _events2.default.BUFFER_CODECS, _events2.default.BUFFER_EOS, _events2.default.BUFFER_FLUSHING, _events2.default.LEVEL_PTS_UPDATED, _events2.default.LEVEL_UPDATED));\n\n    _this._msDuration = null;\n    // the value that we want to set mediaSource.duration to\n    _this._levelDuration = null;\n\n    // Source Buffer listeners\n    _this.onsbue = _this.onSBUpdateEnd.bind(_this);\n    _this.onsbe = _this.onSBUpdateError.bind(_this);\n    _this.pendingTracks = {};\n    _this.tracks = {};\n    return _this;\n  }\n\n  _createClass(BufferController, [{\n    key: 'destroy',\n    value: function destroy() {\n      _eventHandler2.default.prototype.destroy.call(this);\n    }\n  }, {\n    key: 'onLevelPtsUpdated',\n    value: function onLevelPtsUpdated(data) {\n      var type = data.type;\n      var audioTrack = this.tracks.audio;\n\n      // Adjusting `SourceBuffer.timestampOffset` (desired point in the timeline where the next frames should be appended)\n      // in Chrome browser when we detect MPEG audio container and time delta between level PTS and `SourceBuffer.timestampOffset`\n      // is greater than 100ms (this is enough to handle seek for VOD or level change for LIVE videos). At the time of change we issue\n      // `SourceBuffer.abort()` and adjusting `SourceBuffer.timestampOffset` if `SourceBuffer.updating` is false or awaiting `updateend`\n      // event if SB is in updating state.\n      // More info here: https://github.com/dailymotion/hls.js/issues/332#issuecomment-257986486\n\n      if (type === 'audio' && audioTrack && audioTrack.container === 'audio/mpeg') {\n        // Chrome audio mp3 track\n        var audioBuffer = this.sourceBuffer.audio;\n        var delta = Math.abs(audioBuffer.timestampOffset - data.start);\n\n        // adjust timestamp offset if time delta is greater than 100ms\n        if (delta > 0.1) {\n          var updating = audioBuffer.updating;\n\n          try {\n            audioBuffer.abort();\n          } catch (err) {\n            updating = true;\n            _logger.logger.warn('can not abort audio buffer: ' + err);\n          }\n\n          if (!updating) {\n            _logger.logger.warn('change mpeg audio timestamp offset from ' + audioBuffer.timestampOffset + ' to ' + data.start);\n            audioBuffer.timestampOffset = data.start;\n          } else {\n            this.audioTimestampOffset = data.start;\n          }\n        }\n      }\n    }\n  }, {\n    key: 'onManifestParsed',\n    value: function onManifestParsed(data) {\n      var audioExpected = data.audio,\n          videoExpected = data.video,\n          sourceBufferNb = 0;\n      // in case of alt audio 2 BUFFER_CODECS events will be triggered, one per stream controller\n      // sourcebuffers will be created all at once when the expected nb of tracks will be reached\n      // in case alt audio is not used, only one BUFFER_CODEC event will be fired from main stream controller\n      // it will contain the expected nb of source buffers, no need to compute it\n      if (data.altAudio && (audioExpected || videoExpected)) {\n        sourceBufferNb = (audioExpected ? 1 : 0) + (videoExpected ? 1 : 0);\n        _logger.logger.log(sourceBufferNb + ' sourceBuffer(s) expected');\n      }\n      this.sourceBufferNb = sourceBufferNb;\n    }\n  }, {\n    key: 'onMediaAttaching',\n    value: function onMediaAttaching(data) {\n      var media = this.media = data.media;\n      if (media) {\n        // setup the media source\n        var ms = this.mediaSource = new MediaSource();\n        //Media Source listeners\n        this.onmso = this.onMediaSourceOpen.bind(this);\n        this.onmse = this.onMediaSourceEnded.bind(this);\n        this.onmsc = this.onMediaSourceClose.bind(this);\n        ms.addEventListener('sourceopen', this.onmso);\n        ms.addEventListener('sourceended', this.onmse);\n        ms.addEventListener('sourceclose', this.onmsc);\n        // link video and media Source\n        media.src = URL.createObjectURL(ms);\n      }\n    }\n  }, {\n    key: 'onMediaDetaching',\n    value: function onMediaDetaching() {\n      _logger.logger.log('media source detaching');\n      var ms = this.mediaSource;\n      if (ms) {\n        if (ms.readyState === 'open') {\n          try {\n            // endOfStream could trigger exception if any sourcebuffer is in updating state\n            // we don't really care about checking sourcebuffer state here,\n            // as we are anyway detaching the MediaSource\n            // let's just avoid this exception to propagate\n            ms.endOfStream();\n          } catch (err) {\n            _logger.logger.warn('onMediaDetaching:' + err.message + ' while calling endOfStream');\n          }\n        }\n        ms.removeEventListener('sourceopen', this.onmso);\n        ms.removeEventListener('sourceended', this.onmse);\n        ms.removeEventListener('sourceclose', this.onmsc);\n\n        // Detach properly the MediaSource from the HTMLMediaElement as\n        // suggested in https://github.com/w3c/media-source/issues/53.\n        if (this.media) {\n          URL.revokeObjectURL(this.media.src);\n          this.media.removeAttribute('src');\n          this.media.load();\n        }\n\n        this.mediaSource = null;\n        this.media = null;\n        this.pendingTracks = {};\n        this.tracks = {};\n        this.sourceBuffer = {};\n        this.flushRange = [];\n        this.segments = [];\n        this.appended = 0;\n      }\n      this.onmso = this.onmse = this.onmsc = null;\n      this.hls.trigger(_events2.default.MEDIA_DETACHED);\n    }\n  }, {\n    key: 'onMediaSourceOpen',\n    value: function onMediaSourceOpen() {\n      _logger.logger.log('media source opened');\n      this.hls.trigger(_events2.default.MEDIA_ATTACHED, { media: this.media });\n      var mediaSource = this.mediaSource;\n      if (mediaSource) {\n        // once received, don't listen anymore to sourceopen event\n        mediaSource.removeEventListener('sourceopen', this.onmso);\n      }\n      this.checkPendingTracks();\n    }\n  }, {\n    key: 'checkPendingTracks',\n    value: function checkPendingTracks() {\n      // if any buffer codecs pending, check if we have enough to create sourceBuffers\n      var pendingTracks = this.pendingTracks,\n          pendingTracksNb = Object.keys(pendingTracks).length;\n      // if any pending tracks and (if nb of pending tracks gt or equal than expected nb or if unknown expected nb)\n      if (pendingTracksNb && (this.sourceBufferNb <= pendingTracksNb || this.sourceBufferNb === 0)) {\n        // ok, let's create them now !\n        this.createSourceBuffers(pendingTracks);\n        this.pendingTracks = {};\n        // append any pending segments now !\n        this.doAppending();\n      }\n    }\n  }, {\n    key: 'onMediaSourceClose',\n    value: function onMediaSourceClose() {\n      _logger.logger.log('media source closed');\n    }\n  }, {\n    key: 'onMediaSourceEnded',\n    value: function onMediaSourceEnded() {\n      _logger.logger.log('media source ended');\n    }\n  }, {\n    key: 'onSBUpdateEnd',\n    value: function onSBUpdateEnd() {\n      // update timestampOffset\n      if (this.audioTimestampOffset) {\n        var audioBuffer = this.sourceBuffer.audio;\n        _logger.logger.warn('change mpeg audio timestamp offset from ' + audioBuffer.timestampOffset + ' to ' + this.audioTimestampOffset);\n        audioBuffer.timestampOffset = this.audioTimestampOffset;\n        delete this.audioTimestampOffset;\n      }\n\n      if (this._needsFlush) {\n        this.doFlush();\n      }\n\n      if (this._needsEos) {\n        this.checkEos();\n      }\n      this.appending = false;\n      var parent = this.parent;\n      // count nb of pending segments waiting for appending on this sourcebuffer\n      var pending = this.segments.reduce(function (counter, segment) {\n        return segment.parent === parent ? counter + 1 : counter;\n      }, 0);\n      this.hls.trigger(_events2.default.BUFFER_APPENDED, { parent: parent, pending: pending });\n\n      // don't append in flushing mode\n      if (!this._needsFlush) {\n        this.doAppending();\n      }\n\n      this.updateMediaElementDuration();\n    }\n  }, {\n    key: 'onSBUpdateError',\n    value: function onSBUpdateError(event) {\n      _logger.logger.error('sourceBuffer error:' + event);\n      // according to http://www.w3.org/TR/media-source/#sourcebuffer-append-error\n      // this error might not always be fatal (it is fatal if decode error is set, in that case\n      // it will be followed by a mediaElement error ...)\n      this.hls.trigger(_events2.default.ERROR, { type: _errors.ErrorTypes.MEDIA_ERROR, details: _errors.ErrorDetails.BUFFER_APPENDING_ERROR, fatal: false });\n      // we don't need to do more than that, as accordin to the spec, updateend will be fired just after\n    }\n  }, {\n    key: 'onBufferReset',\n    value: function onBufferReset() {\n      var sourceBuffer = this.sourceBuffer;\n      for (var type in sourceBuffer) {\n        var sb = sourceBuffer[type];\n        try {\n          this.mediaSource.removeSourceBuffer(sb);\n          sb.removeEventListener('updateend', this.onsbue);\n          sb.removeEventListener('error', this.onsbe);\n        } catch (err) {}\n      }\n      this.sourceBuffer = {};\n      this.flushRange = [];\n      this.segments = [];\n      this.appended = 0;\n    }\n  }, {\n    key: 'onBufferCodecs',\n    value: function onBufferCodecs(tracks) {\n      // if source buffer(s) not created yet, appended buffer tracks in this.pendingTracks\n      // if sourcebuffers already created, do nothing ...\n      if (Object.keys(this.sourceBuffer).length === 0) {\n        for (var trackName in tracks) {\n          this.pendingTracks[trackName] = tracks[trackName];\n        }\n        var mediaSource = this.mediaSource;\n        if (mediaSource && mediaSource.readyState === 'open') {\n          // try to create sourcebuffers if mediasource opened\n          this.checkPendingTracks();\n        }\n      }\n    }\n  }, {\n    key: 'createSourceBuffers',\n    value: function createSourceBuffers(tracks) {\n      var sourceBuffer = this.sourceBuffer,\n          mediaSource = this.mediaSource;\n\n      for (var trackName in tracks) {\n        if (!sourceBuffer[trackName]) {\n          var track = tracks[trackName];\n          // use levelCodec as first priority\n          var codec = track.levelCodec || track.codec;\n          var mimeType = track.container + ';codecs=' + codec;\n          _logger.logger.log('creating sourceBuffer(' + mimeType + ')');\n          try {\n            var sb = sourceBuffer[trackName] = mediaSource.addSourceBuffer(mimeType);\n            sb.addEventListener('updateend', this.onsbue);\n            sb.addEventListener('error', this.onsbe);\n            this.tracks[trackName] = { codec: codec, container: track.container };\n            track.buffer = sb;\n          } catch (err) {\n            _logger.logger.error('error while trying to add sourceBuffer:' + err.message);\n            this.hls.trigger(_events2.default.ERROR, { type: _errors.ErrorTypes.MEDIA_ERROR, details: _errors.ErrorDetails.BUFFER_ADD_CODEC_ERROR, fatal: false, err: err, mimeType: mimeType });\n          }\n        }\n      }\n      this.hls.trigger(_events2.default.BUFFER_CREATED, { tracks: tracks });\n    }\n  }, {\n    key: 'onBufferAppending',\n    value: function onBufferAppending(data) {\n      if (!this._needsFlush) {\n        if (!this.segments) {\n          this.segments = [data];\n        } else {\n          this.segments.push(data);\n        }\n        this.doAppending();\n      }\n    }\n  }, {\n    key: 'onBufferAppendFail',\n    value: function onBufferAppendFail(data) {\n      _logger.logger.error('sourceBuffer error:', data.event);\n      // according to http://www.w3.org/TR/media-source/#sourcebuffer-append-error\n      // this error might not always be fatal (it is fatal if decode error is set, in that case\n      // it will be followed by a mediaElement error ...)\n      this.hls.trigger(_events2.default.ERROR, { type: _errors.ErrorTypes.MEDIA_ERROR, details: _errors.ErrorDetails.BUFFER_APPENDING_ERROR, fatal: false, frag: this.fragCurrent });\n    }\n\n    // on BUFFER_EOS mark matching sourcebuffer(s) as ended and trigger checkEos()\n\n  }, {\n    key: 'onBufferEos',\n    value: function onBufferEos(data) {\n      var sb = this.sourceBuffer;\n      var dataType = data.type;\n      for (var type in sb) {\n        if (!dataType || type === dataType) {\n          if (!sb[type].ended) {\n            sb[type].ended = true;\n            _logger.logger.log(type + ' sourceBuffer now EOS');\n          }\n        }\n      }\n      this.checkEos();\n    }\n\n    // if all source buffers are marked as ended, signal endOfStream() to MediaSource.\n\n  }, {\n    key: 'checkEos',\n    value: function checkEos() {\n      var sb = this.sourceBuffer,\n          mediaSource = this.mediaSource;\n      if (!mediaSource || mediaSource.readyState !== 'open') {\n        this._needsEos = false;\n        return;\n      }\n      for (var type in sb) {\n        var sbobj = sb[type];\n        if (!sbobj.ended) {\n          return;\n        }\n        if (sbobj.updating) {\n          this._needsEos = true;\n          return;\n        }\n      }\n      _logger.logger.log('all media data available, signal endOfStream() to MediaSource and stop loading fragment');\n      //Notify the media element that it now has all of the media data\n      try {\n        mediaSource.endOfStream();\n      } catch (e) {\n        _logger.logger.warn('exception while calling mediaSource.endOfStream()');\n      }\n      this._needsEos = false;\n    }\n  }, {\n    key: 'onBufferFlushing',\n    value: function onBufferFlushing(data) {\n      this.flushRange.push({ start: data.startOffset, end: data.endOffset, type: data.type });\n      // attempt flush immediatly\n      this.flushBufferCounter = 0;\n      this.doFlush();\n    }\n  }, {\n    key: 'onLevelUpdated',\n    value: function onLevelUpdated(event) {\n      var details = event.details;\n      if (details.fragments.length === 0) {\n        return;\n      }\n      this._levelDuration = details.totalduration + details.fragments[0].start;\n      this.updateMediaElementDuration();\n    }\n\n    // https://github.com/dailymotion/hls.js/issues/355\n\n  }, {\n    key: 'updateMediaElementDuration',\n    value: function updateMediaElementDuration() {\n      var media = this.media,\n          mediaSource = this.mediaSource,\n          sourceBuffer = this.sourceBuffer,\n          levelDuration = this._levelDuration;\n      if (levelDuration === null || !media || !mediaSource || !sourceBuffer || media.readyState === 0 || mediaSource.readyState !== 'open') {\n        return;\n      }\n      for (var type in sourceBuffer) {\n        if (sourceBuffer[type].updating) {\n          // can't set duration whilst a buffer is updating\n          return;\n        }\n      }\n      if (this._msDuration === null) {\n        // initialise to the value that the media source is reporting\n        this._msDuration = mediaSource.duration;\n      }\n      var duration = media.duration;\n      // levelDuration was the last value we set.\n      // not using mediaSource.duration as the browser may tweak this value\n      // only update mediasource duration if its value increase, this is to avoid\n      // flushing already buffered portion when switching between quality level\n      if (levelDuration > this._msDuration && levelDuration > duration || duration === Infinity || isNaN(duration)) {\n        _logger.logger.log('Updating mediasource duration to ' + levelDuration.toFixed(3));\n        this._msDuration = mediaSource.duration = levelDuration;\n      }\n    }\n  }, {\n    key: 'doFlush',\n    value: function doFlush() {\n      // loop through all buffer ranges to flush\n      while (this.flushRange.length) {\n        var range = this.flushRange[0];\n        // flushBuffer will abort any buffer append in progress and flush Audio/Video Buffer\n        if (this.flushBuffer(range.start, range.end, range.type)) {\n          // range flushed, remove from flush array\n          this.flushRange.shift();\n          this.flushBufferCounter = 0;\n        } else {\n          this._needsFlush = true;\n          // avoid looping, wait for SB update end to retrigger a flush\n          return;\n        }\n      }\n      if (this.flushRange.length === 0) {\n        // everything flushed\n        this._needsFlush = false;\n\n        // let's recompute this.appended, which is used to avoid flush looping\n        var appended = 0;\n        var sourceBuffer = this.sourceBuffer;\n        try {\n          for (var type in sourceBuffer) {\n            appended += sourceBuffer[type].buffered.length;\n          }\n        } catch (error) {\n          // error could be thrown while accessing buffered, in case sourcebuffer has already been removed from MediaSource\n          // this is harmess at this stage, catch this to avoid reporting an internal exception\n          _logger.logger.error('error while accessing sourceBuffer.buffered');\n        }\n        this.appended = appended;\n        this.hls.trigger(_events2.default.BUFFER_FLUSHED);\n      }\n    }\n  }, {\n    key: 'doAppending',\n    value: function doAppending() {\n      var hls = this.hls,\n          sourceBuffer = this.sourceBuffer,\n          segments = this.segments;\n      if (Object.keys(sourceBuffer).length) {\n        if (this.media.error) {\n          this.segments = [];\n          _logger.logger.error('trying to append although a media error occured, flush segment and abort');\n          return;\n        }\n        if (this.appending) {\n          //logger.log(`sb appending in progress`);\n          return;\n        }\n        if (segments && segments.length) {\n          var segment = segments.shift();\n          try {\n            var type = segment.type,\n                sb = sourceBuffer[type];\n            if (sb) {\n              if (!sb.updating) {\n                // reset sourceBuffer ended flag before appending segment\n                sb.ended = false;\n                //logger.log(`appending ${segment.content} ${type} SB, size:${segment.data.length}, ${segment.parent}`);\n                this.parent = segment.parent;\n                sb.appendBuffer(segment.data);\n                this.appendError = 0;\n                this.appended++;\n                this.appending = true;\n              } else {\n                segments.unshift(segment);\n              }\n            } else {\n              // in case we don't have any source buffer matching with this segment type,\n              // it means that Mediasource fails to create sourcebuffer\n              // discard this segment, and trigger update end\n              this.onSBUpdateEnd();\n            }\n          } catch (err) {\n            // in case any error occured while appending, put back segment in segments table\n            _logger.logger.error('error while trying to append buffer:' + err.message);\n            segments.unshift(segment);\n            var event = { type: _errors.ErrorTypes.MEDIA_ERROR };\n            if (err.code !== 22) {\n              if (this.appendError) {\n                this.appendError++;\n              } else {\n                this.appendError = 1;\n              }\n              event.details = _errors.ErrorDetails.BUFFER_APPEND_ERROR;\n              event.frag = this.fragCurrent;\n              /* with UHD content, we could get loop of quota exceeded error until\n                browser is able to evict some data from sourcebuffer. retrying help recovering this\n              */\n              if (this.appendError > hls.config.appendErrorMaxRetry) {\n                _logger.logger.log('fail ' + hls.config.appendErrorMaxRetry + ' times to append segment in sourceBuffer');\n                segments = [];\n                event.fatal = true;\n                hls.trigger(_events2.default.ERROR, event);\n                return;\n              } else {\n                event.fatal = false;\n                hls.trigger(_events2.default.ERROR, event);\n              }\n            } else {\n              // QuotaExceededError: http://www.w3.org/TR/html5/infrastructure.html#quotaexceedederror\n              // let's stop appending any segments, and report BUFFER_FULL_ERROR error\n              this.segments = [];\n              event.details = _errors.ErrorDetails.BUFFER_FULL_ERROR;\n              event.fatal = false;\n              hls.trigger(_events2.default.ERROR, event);\n              return;\n            }\n          }\n        }\n      }\n    }\n\n    /*\n      flush specified buffered range,\n      return true once range has been flushed.\n      as sourceBuffer.remove() is asynchronous, flushBuffer will be retriggered on sourceBuffer update end\n    */\n\n  }, {\n    key: 'flushBuffer',\n    value: function flushBuffer(startOffset, endOffset, typeIn) {\n      var sb,\n          i,\n          bufStart,\n          bufEnd,\n          flushStart,\n          flushEnd,\n          sourceBuffer = this.sourceBuffer;\n      if (Object.keys(sourceBuffer).length) {\n        _logger.logger.log('flushBuffer,pos/start/end: ' + this.media.currentTime.toFixed(3) + '/' + startOffset + '/' + endOffset);\n        // safeguard to avoid infinite looping : don't try to flush more than the nb of appended segments\n        if (this.flushBufferCounter < this.appended) {\n          for (var type in sourceBuffer) {\n            // check if sourcebuffer type is defined (typeIn): if yes, let's only flush this one\n            // if no, let's flush all sourcebuffers\n            if (typeIn && type !== typeIn) {\n              continue;\n            }\n            sb = sourceBuffer[type];\n            // we are going to flush buffer, mark source buffer as 'not ended'\n            sb.ended = false;\n            if (!sb.updating) {\n              try {\n                for (i = 0; i < sb.buffered.length; i++) {\n                  bufStart = sb.buffered.start(i);\n                  bufEnd = sb.buffered.end(i);\n                  // workaround firefox not able to properly flush multiple buffered range.\n                  if (navigator.userAgent.toLowerCase().indexOf('firefox') !== -1 && endOffset === Number.POSITIVE_INFINITY) {\n                    flushStart = startOffset;\n                    flushEnd = endOffset;\n                  } else {\n                    flushStart = Math.max(bufStart, startOffset);\n                    flushEnd = Math.min(bufEnd, endOffset);\n                  }\n                  /* sometimes sourcebuffer.remove() does not flush\n                     the exact expected time range.\n                     to avoid rounding issues/infinite loop,\n                     only flush buffer range of length greater than 500ms.\n                  */\n                  if (Math.min(flushEnd, bufEnd) - flushStart > 0.5) {\n                    this.flushBufferCounter++;\n                    _logger.logger.log('flush ' + type + ' [' + flushStart + ',' + flushEnd + '], of [' + bufStart + ',' + bufEnd + '], pos:' + this.media.currentTime);\n                    sb.remove(flushStart, flushEnd);\n                    return false;\n                  }\n                }\n              } catch (e) {\n                _logger.logger.warn('exception while accessing sourcebuffer, it might have been removed from MediaSource');\n              }\n            } else {\n              //logger.log('abort ' + type + ' append in progress');\n              // this will abort any appending in progress\n              //sb.abort();\n              _logger.logger.warn('cannot flush, sb updating in progress');\n              return false;\n            }\n          }\n        } else {\n          _logger.logger.warn('abort flushing too many retries');\n        }\n        _logger.logger.log('buffer flushed');\n      }\n      // everything flushed !\n      return true;\n    }\n  }]);\n\n  return BufferController;\n}(_eventHandler2.default);\n\nexports.default = BufferController;\n\n},{\"26\":26,\"27\":27,\"28\":28,\"45\":45}],8:[function(_dereq_,module,exports){\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _events = _dereq_(28);\n\nvar _events2 = _interopRequireDefault(_events);\n\nvar _eventHandler = _dereq_(27);\n\nvar _eventHandler2 = _interopRequireDefault(_eventHandler);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /*\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * cap stream level to media size dimension controller\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               */\n\nvar CapLevelController = function (_EventHandler) {\n  _inherits(CapLevelController, _EventHandler);\n\n  function CapLevelController(hls) {\n    _classCallCheck(this, CapLevelController);\n\n    return _possibleConstructorReturn(this, (CapLevelController.__proto__ || Object.getPrototypeOf(CapLevelController)).call(this, hls, _events2.default.FPS_DROP_LEVEL_CAPPING, _events2.default.MEDIA_ATTACHING, _events2.default.MANIFEST_PARSED));\n  }\n\n  _createClass(CapLevelController, [{\n    key: 'destroy',\n    value: function destroy() {\n      if (this.hls.config.capLevelToPlayerSize) {\n        this.media = this.restrictedLevels = null;\n        this.autoLevelCapping = Number.POSITIVE_INFINITY;\n        if (this.timer) {\n          this.timer = clearInterval(this.timer);\n        }\n      }\n    }\n  }, {\n    key: 'onFpsDropLevelCapping',\n    value: function onFpsDropLevelCapping(data) {\n      if (!this.restrictedLevels) {\n        this.restrictedLevels = [];\n      }\n      if (!this.isLevelRestricted(data.droppedLevel)) {\n        this.restrictedLevels.push(data.droppedLevel);\n      }\n    }\n  }, {\n    key: 'onMediaAttaching',\n    value: function onMediaAttaching(data) {\n      this.media = data.media instanceof HTMLVideoElement ? data.media : null;\n    }\n  }, {\n    key: 'onManifestParsed',\n    value: function onManifestParsed(data) {\n      var hls = this.hls;\n      if (hls.config.capLevelToPlayerSize) {\n        this.autoLevelCapping = Number.POSITIVE_INFINITY;\n        this.levels = data.levels;\n        hls.firstLevel = this.getMaxLevel(data.firstLevel);\n        clearInterval(this.timer);\n        this.timer = setInterval(this.detectPlayerSize.bind(this), 1000);\n        this.detectPlayerSize();\n      }\n    }\n  }, {\n    key: 'detectPlayerSize',\n    value: function detectPlayerSize() {\n      if (this.media) {\n        var levelsLength = this.levels ? this.levels.length : 0;\n        if (levelsLength) {\n          var hls = this.hls;\n          hls.autoLevelCapping = this.getMaxLevel(levelsLength - 1);\n          if (hls.autoLevelCapping > this.autoLevelCapping) {\n            // if auto level capping has a higher value for the previous one, flush the buffer using nextLevelSwitch\n            // usually happen when the user go to the fullscreen mode.\n            hls.streamController.nextLevelSwitch();\n          }\n          this.autoLevelCapping = hls.autoLevelCapping;\n        }\n      }\n    }\n\n    /*\n    * returns level should be the one with the dimensions equal or greater than the media (player) dimensions (so the video will be downscaled)\n    */\n\n  }, {\n    key: 'getMaxLevel',\n    value: function getMaxLevel(capLevelIndex) {\n      var result = 0,\n          i = void 0,\n          level = void 0,\n          mWidth = this.mediaWidth,\n          mHeight = this.mediaHeight,\n          lWidth = 0,\n          lHeight = 0;\n\n      for (i = 0; i <= capLevelIndex; i++) {\n        level = this.levels[i];\n        if (this.isLevelRestricted(i)) {\n          break;\n        }\n        result = i;\n        lWidth = level.width;\n        lHeight = level.height;\n        if (mWidth <= lWidth || mHeight <= lHeight) {\n          break;\n        }\n      }\n      return result;\n    }\n  }, {\n    key: 'isLevelRestricted',\n    value: function isLevelRestricted(level) {\n      return this.restrictedLevels && this.restrictedLevels.indexOf(level) !== -1 ? true : false;\n    }\n  }, {\n    key: 'contentScaleFactor',\n    get: function get() {\n      var pixelRatio = 1;\n      try {\n        pixelRatio = window.devicePixelRatio;\n      } catch (e) {}\n      return pixelRatio;\n    }\n  }, {\n    key: 'mediaWidth',\n    get: function get() {\n      var width = void 0;\n      var media = this.media;\n      if (media) {\n        width = media.width || media.clientWidth || media.offsetWidth;\n        width *= this.contentScaleFactor;\n      }\n      return width;\n    }\n  }, {\n    key: 'mediaHeight',\n    get: function get() {\n      var height = void 0;\n      var media = this.media;\n      if (media) {\n        height = media.height || media.clientHeight || media.offsetHeight;\n        height *= this.contentScaleFactor;\n      }\n      return height;\n    }\n  }]);\n\n  return CapLevelController;\n}(_eventHandler2.default);\n\nexports.default = CapLevelController;\n\n},{\"27\":27,\"28\":28}],9:[function(_dereq_,module,exports){\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }(); /*\nandwidth Estimator\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      *  - heavily inspired from shaka-player\nracks bandwidth samples and estimates available bandwidth.\nased on the minimum of two exponentially-weighted moving averages with\ndifferent half-lives.\nn\nvar _ewma = _dereq_(44);\n\nvar _ewma2 = _interopRequireDefault(_ewma);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar EwmaBandWidthEstimator = function () {\n  function EwmaBandWidthEstimator(hls, slow, fast, defaultEstimate) {\n    _classCallCheck(this, EwmaBandWidthEstimator);\n\n    this.hls = hls;\n    this.defaultEstimate_ = defaultEstimate;\n    this.minWeight_ = 0.001;\n    this.minDelayMs_ = 50;\n    this.slow_ = new _ewma2.default(slow);\n    this.fast_ = new _ewma2.default(fast);\n  }\n\n  _createClass(EwmaBandWidthEstimator, [{\n    key: 'sample',\n    value: function sample(durationMs, numBytes) {\n      durationMs = Math.max(durationMs, this.minDelayMs_);\n      var bandwidth = 8000 * numBytes / durationMs,\n\n      //console.log('instant bw:'+ Math.round(bandwidth));\n      // we weight sample using loading duration....\n      weight = durationMs / 1000;\n      this.fast_.sample(weight, bandwidth);\n      this.slow_.sample(weight, bandwidth);\n    }\n  }, {\n    key: 'canEstimate',\n    value: function canEstimate() {\n      var fast = this.fast_;\n      return fast && fast.getTotalWeight() >= this.minWeight_;\n    }\n  }, {\n    key: 'getEstimate',\n    value: function getEstimate() {\n      if (this.canEstimate()) {\n        //console.log('slow estimate:'+ Math.round(this.slow_.getEstimate()));\n        //console.log('fast estimate:'+ Math.round(this.fast_.getEstimate()));\n        // Take the minimum of these two estimates.  This should have the effect of\n        // adapting down quickly, but up more slowly.\n        return Math.min(this.fast_.getEstimate(), this.slow_.getEstimate());\n      } else {\n        return this.defaultEstimate_;\n      }\n    }\n  }, {\n    key: 'destroy',\n    value: function destroy() {}\n  }]);\n\n  return EwmaBandWidthEstimator;\n}();\n\nexports.default = EwmaBandWidthEstimator;\n\n},{\"44\":44}],10:[function(_dereq_,module,exports){\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _events = _dereq_(28);\n\nvar _events2 = _interopRequireDefault(_events);\n\nvar _eventHandler = _dereq_(27);\n\nvar _eventHandler2 = _interopRequireDefault(_eventHandler);\n\nvar _logger = _dereq_(45);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /*\nontroller\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               */\n\nvar FPSController = function (_EventHandler) {\n  _inherits(FPSController, _EventHandler);\n\n  function FPSController(hls) {\n    _classCallCheck(this, FPSController);\n\n    return _possibleConstructorReturn(this, (FPSController.__proto__ || Object.getPrototypeOf(FPSController)).call(this, hls, _events2.default.MEDIA_ATTACHING));\n  }\n\n  _createClass(FPSController, [{\n    key: 'destroy',\n    value: function destroy() {\n      if (this.timer) {\n        clearInterval(this.timer);\n      }\n      this.isVideoPlaybackQualityAvailable = false;\n    }\n  }, {\n    key: 'onMediaAttaching',\n    value: function onMediaAttaching(data) {\n      var config = this.hls.config;\n      if (config.capLevelOnFPSDrop) {\n        var video = this.video = data.media instanceof HTMLVideoElement ? data.media : null;\n        if (typeof video.getVideoPlaybackQuality === 'function') {\n          this.isVideoPlaybackQualityAvailable = true;\n        }\n        clearInterval(this.timer);\n        this.timer = setInterval(this.checkFPSInterval.bind(this), config.fpsDroppedMonitoringPeriod);\n      }\n    }\n  }, {\n    key: 'checkFPS',\n    value: function checkFPS(video, decodedFrames, droppedFrames) {\n      var currentTime = performance.now();\n      if (decodedFrames) {\n        if (this.lastTime) {\n          var currentPeriod = currentTime - this.lastTime,\n              currentDropped = droppedFrames - this.lastDroppedFrames,\n              currentDecoded = decodedFrames - this.lastDecodedFrames,\n              droppedFPS = 1000 * currentDropped / currentPeriod,\n              hls = this.hls;\n          hls.trigger(_events2.default.FPS_DROP, { currentDropped: currentDropped, currentDecoded: currentDecoded, totalDroppedFrames: droppedFrames });\n          if (droppedFPS > 0) {\n            //logger.log('checkFPS : droppedFPS/decodedFPS:' + droppedFPS/(1000 * currentDecoded / currentPeriod));\n            if (currentDropped > hls.config.fpsDroppedMonitoringThreshold * currentDecoded) {\n              var currentLevel = hls.currentLevel;\n              _logger.logger.warn('drop FPS ratio greater than max allowed value for currentLevel: ' + currentLevel);\n              if (currentLevel > 0 && (hls.autoLevelCapping === -1 || hls.autoLevelCapping >= currentLevel)) {\n                currentLevel = currentLevel - 1;\n                hls.trigger(_events2.default.FPS_DROP_LEVEL_CAPPING, { level: currentLevel, droppedLevel: hls.currentLevel });\n                hls.autoLevelCapping = currentLevel;\n                hls.streamController.nextLevelSwitch();\n              }\n            }\n          }\n        }\n        this.lastTime = currentTime;\n        this.lastDroppedFrames = droppedFrames;\n        this.lastDecodedFrames = decodedFrames;\n      }\n    }\n  }, {\n    key: 'checkFPSInterval',\n    value: function checkFPSInterval() {\n      var video = this.video;\n      if (video) {\n        if (this.isVideoPlaybackQualityAvailable) {\n          var videoPlaybackQuality = video.getVideoPlaybackQuality();\n          this.checkFPS(video, videoPlaybackQuality.totalVideoFrames, videoPlaybackQuality.droppedVideoFrames);\n        } else {\n          this.checkFPS(video, video.webkitDecodedFrameCount, video.webkitDroppedFrameCount);\n        }\n      }\n    }\n  }]);\n\n  return FPSController;\n}(_eventHandler2.default);\n\nexports.default = FPSController;\n\n},{\"27\":27,\"28\":28,\"45\":45}],11:[function(_dereq_,module,exports){\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _events = _dereq_(28);\n\nvar _events2 = _interopRequireDefault(_events);\n\nvar _eventHandler = _dereq_(27);\n\nvar _eventHandler2 = _interopRequireDefault(_eventHandler);\n\nvar _logger = _dereq_(45);\n\nvar _errors = _dereq_(26);\n\nvar _bufferHelper = _dereq_(30);\n\nvar _bufferHelper2 = _interopRequireDefault(_bufferHelper);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /*\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * Level Controller\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               */\n\nvar LevelController = function (_EventHandler) {\n  _inherits(LevelController, _EventHandler);\n\n  function LevelController(hls) {\n    _classCallCheck(this, LevelController);\n\n    var _this = _possibleConstructorReturn(this, (LevelController.__proto__ || Object.getPrototypeOf(LevelController)).call(this, hls, _events2.default.MANIFEST_LOADED, _events2.default.LEVEL_LOADED, _events2.default.FRAG_LOADED, _events2.default.ERROR));\n\n    _this.ontick = _this.tick.bind(_this);\n    _this._manualLevel = _this._autoLevelCapping = -1;\n    return _this;\n  }\n\n  _createClass(LevelController, [{\n    key: 'destroy',\n    value: function destroy() {\n      if (this.timer) {\n        clearTimeout(this.timer);\n        this.timer = null;\n      }\n      this._manualLevel = -1;\n    }\n  }, {\n    key: 'startLoad',\n    value: function startLoad() {\n      this.canload = true;\n      var levels = this._levels;\n      // clean up live level details to force reload them, and reset load errors\n      if (levels) {\n        levels.forEach(function (level) {\n          level.loadError = 0;\n          var levelDetails = level.details;\n          if (levelDetails && levelDetails.live) {\n            level.details = undefined;\n          }\n        });\n      }\n      // speed up live playlist refresh if timer exists\n      if (this.timer) {\n        this.tick();\n      }\n    }\n  }, {\n    key: 'stopLoad',\n    value: function stopLoad() {\n      this.canload = false;\n    }\n  }, {\n    key: 'onManifestLoaded',\n    value: function onManifestLoaded(data) {\n      var levels0 = [],\n          levels = [],\n          bitrateStart,\n          bitrateSet = {},\n          videoCodecFound = false,\n          audioCodecFound = false,\n          hls = this.hls,\n          brokenmp4inmp3 = /chrome|firefox/.test(navigator.userAgent.toLowerCase()),\n          checkSupported = function checkSupported(type, codec) {\n        return MediaSource.isTypeSupported(type + '/mp4;codecs=' + codec);\n      };\n\n      // regroup redundant level together\n      data.levels.forEach(function (level) {\n        if (level.videoCodec) {\n          videoCodecFound = true;\n        }\n        // erase audio codec info if browser does not support mp4a.40.34. demuxer will autodetect codec and fallback to mpeg/audio\n        if (brokenmp4inmp3 && level.audioCodec && level.audioCodec.indexOf('mp4a.40.34') !== -1) {\n          level.audioCodec = undefined;\n        }\n        if (level.audioCodec || level.attrs && level.attrs.AUDIO) {\n          audioCodecFound = true;\n        }\n        var redundantLevelId = bitrateSet[level.bitrate];\n        if (redundantLevelId === undefined) {\n          bitrateSet[level.bitrate] = levels0.length;\n          level.url = [level.url];\n          level.urlId = 0;\n          levels0.push(level);\n        } else {\n          levels0[redundantLevelId].url.push(level.url);\n        }\n      });\n\n      // remove audio-only level if we also have levels with audio+video codecs signalled\n      if (videoCodecFound && audioCodecFound) {\n        levels0.forEach(function (level) {\n          if (level.videoCodec) {\n            levels.push(level);\n          }\n        });\n      } else {\n        levels = levels0;\n      }\n      // only keep level with supported audio/video codecs\n      levels = levels.filter(function (level) {\n        var audioCodec = level.audioCodec,\n            videoCodec = level.videoCodec;\n        return (!audioCodec || checkSupported('audio', audioCodec)) && (!videoCodec || checkSupported('video', videoCodec));\n      });\n\n      if (levels.length) {\n        // start bitrate is the first bitrate of the manifest\n        bitrateStart = levels[0].bitrate;\n        // sort level on bitrate\n        levels.sort(function (a, b) {\n          return a.bitrate - b.bitrate;\n        });\n        this._levels = levels;\n        // find index of first level in sorted levels\n        for (var i = 0; i < levels.length; i++) {\n          if (levels[i].bitrate === bitrateStart) {\n            this._firstLevel = i;\n            _logger.logger.log('manifest loaded,' + levels.length + ' level(s) found, first bitrate:' + bitrateStart);\n            break;\n          }\n        }\n        hls.trigger(_events2.default.MANIFEST_PARSED, { levels: levels, firstLevel: this._firstLevel, stats: data.stats, audio: audioCodecFound, video: videoCodecFound, altAudio: data.audioTracks.length > 0 });\n      } else {\n        hls.trigger(_events2.default.ERROR, { type: _errors.ErrorTypes.MEDIA_ERROR, details: _errors.ErrorDetails.MANIFEST_INCOMPATIBLE_CODECS_ERROR, fatal: true, url: hls.url, reason: 'no level with compatible codecs found in manifest' });\n      }\n      return;\n    }\n  }, {\n    key: 'setLevelInternal',\n    value: function setLevelInternal(newLevel) {\n      var levels = this._levels;\n      // check if level idx is valid\n      if (newLevel >= 0 && newLevel < levels.length) {\n        // stopping live reloading timer if any\n        if (this.timer) {\n          clearTimeout(this.timer);\n          this.timer = null;\n        }\n        if (this._level !== newLevel) {\n          _logger.logger.log('switching to level ' + newLevel);\n          this._level = newLevel;\n          this.hls.trigger(_events2.default.LEVEL_SWITCH, { level: newLevel });\n        }\n        var level = levels[newLevel],\n            levelDetails = level.details;\n        // check if we need to load playlist for this level\n        if (!levelDetails || levelDetails.live === true) {\n          // level not retrieved yet, or live playlist we need to (re)load it\n          var urlId = level.urlId;\n          this.hls.trigger(_events2.default.LEVEL_LOADING, { url: level.url[urlId], level: newLevel, id: urlId });\n        }\n      } else {\n        // invalid level id given, trigger error\n        this.hls.trigger(_events2.default.ERROR, { type: _errors.ErrorTypes.OTHER_ERROR, details: _errors.ErrorDetails.LEVEL_SWITCH_ERROR, level: newLevel, fatal: false, reason: 'invalid level idx' });\n      }\n    }\n  }, {\n    key: 'onError',\n    value: function onError(data) {\n      if (data.fatal) {\n        return;\n      }\n\n      var details = data.details,\n          hls = this.hls,\n          levelId = void 0,\n          level = void 0,\n          levelError = false,\n          abrController = hls.abrController,\n          minAutoLevel = abrController.minAutoLevel;\n      // try to recover not fatal errors\n      switch (details) {\n        case _errors.ErrorDetails.FRAG_LOAD_ERROR:\n        case _errors.ErrorDetails.FRAG_LOAD_TIMEOUT:\n        case _errors.ErrorDetails.FRAG_LOOP_LOADING_ERROR:\n        case _errors.ErrorDetails.KEY_LOAD_ERROR:\n        case _errors.ErrorDetails.KEY_LOAD_TIMEOUT:\n          levelId = data.frag.level;\n          break;\n        case _errors.ErrorDetails.LEVEL_LOAD_ERROR:\n        case _errors.ErrorDetails.LEVEL_LOAD_TIMEOUT:\n          levelId = data.context.level;\n          levelError = true;\n          break;\n        case _errors.ErrorDetails.REMUX_ALLOC_ERROR:\n          levelId = data.level;\n          break;\n        default:\n          break;\n      }\n      /* try to switch to a redundant stream if any available.\n       * if no redundant stream available, emergency switch down (if in auto mode and current level not 0)\n       * otherwise, we cannot recover this network error ...\n       */\n      if (levelId !== undefined) {\n        level = this._levels[levelId];\n        if (!level.loadError) {\n          level.loadError = 1;\n        } else {\n          level.loadError++;\n        }\n        // if any redundant streams available and if we haven't try them all (level.loadError is reseted on successful frag/level load.\n        // if level.loadError reaches nbRedundantLevel it means that we tried them all, no hope  => let's switch down\n        var nbRedundantLevel = level.url.length;\n        if (nbRedundantLevel > 1 && level.loadError < nbRedundantLevel) {\n          level.urlId = (level.urlId + 1) % nbRedundantLevel;\n          level.details = undefined;\n          _logger.logger.warn('level controller,' + details + ' for level ' + levelId + ': switching to redundant stream id ' + level.urlId);\n        } else {\n          // we could try to recover if in auto mode and current level not lowest level (0)\n          var recoverable = this._manualLevel === -1 && levelId;\n          if (recoverable) {\n            _logger.logger.warn('level controller,' + details + ': switch-down for next fragment');\n            abrController.nextAutoLevel = Math.max(minAutoLevel, levelId - 1);\n          } else if (level && level.details && level.details.live) {\n            _logger.logger.warn('level controller,' + details + ' on live stream, discard');\n            if (levelError) {\n              // reset this._level so that another call to set level() will retrigger a frag load\n              this._level = undefined;\n            }\n            // other errors are handled by stream controller\n          } else if (details === _errors.ErrorDetails.LEVEL_LOAD_ERROR || details === _errors.ErrorDetails.LEVEL_LOAD_TIMEOUT) {\n            var media = hls.media,\n\n            // 0.5 : tolerance needed as some browsers stalls playback before reaching buffered end\n            mediaBuffered = media && _bufferHelper2.default.isBuffered(media, media.currentTime) && _bufferHelper2.default.isBuffered(media, media.currentTime + 0.5);\n            if (mediaBuffered) {\n              var retryDelay = hls.config.levelLoadingRetryDelay;\n              _logger.logger.warn('level controller,' + details + ', but media buffered, retry in ' + retryDelay + 'ms');\n              this.timer = setTimeout(this.ontick, retryDelay);\n            } else {\n              _logger.logger.error('cannot recover ' + details + ' error');\n              this._level = undefined;\n              // stopping live reloading timer if any\n              if (this.timer) {\n                clearTimeout(this.timer);\n                this.timer = null;\n              }\n              // redispatch same error but with fatal set to true\n              data.fatal = true;\n              hls.trigger(_events2.default.ERROR, data);\n            }\n          }\n        }\n      }\n    }\n\n    // reset level load error counter on successful frag loaded\n\n  }, {\n    key: 'onFragLoaded',\n    value: function onFragLoaded(data) {\n      var fragLoaded = data.frag;\n      if (fragLoaded && fragLoaded.type === 'main') {\n        var level = this._levels[fragLoaded.level];\n        if (level) {\n          level.loadError = 0;\n        }\n      }\n    }\n  }, {\n    key: 'onLevelLoaded',\n    value: function onLevelLoaded(data) {\n      var levelId = data.level;\n      // only process level loaded events matching with expected level\n      if (levelId === this._level) {\n        var curLevel = this._levels[levelId];\n        // reset level load error counter on successful level loaded\n        curLevel.loadError = 0;\n        var newDetails = data.details;\n        // if current playlist is a live playlist, arm a timer to reload it\n        if (newDetails.live) {\n          var reloadInterval = 1000 * (newDetails.averagetargetduration ? newDetails.averagetargetduration : newDetails.targetduration),\n              curDetails = curLevel.details;\n          if (curDetails && newDetails.endSN === curDetails.endSN) {\n            // follow HLS Spec, If the client reloads a Playlist file and finds that it has not\n            // changed then it MUST wait for a period of one-half the target\n            // duration before retrying.\n            reloadInterval /= 2;\n            _logger.logger.log('same live playlist, reload twice faster');\n          }\n          // decrement reloadInterval with level loading delay\n          reloadInterval -= performance.now() - data.stats.trequest;\n          // in any case, don't reload more than every second\n          reloadInterval = Math.max(1000, Math.round(reloadInterval));\n          _logger.logger.log('live playlist, reload in ' + reloadInterval + ' ms');\n          this.timer = setTimeout(this.ontick, reloadInterval);\n        } else {\n          this.timer = null;\n        }\n      }\n    }\n  }, {\n    key: 'tick',\n    value: function tick() {\n      var levelId = this._level;\n      if (levelId !== undefined && this.canload) {\n        var level = this._levels[levelId],\n            urlId = level.urlId;\n        this.hls.trigger(_events2.default.LEVEL_LOADING, { url: level.url[urlId], level: levelId, id: urlId });\n      }\n    }\n  }, {\n    key: 'levels',\n    get: function get() {\n      return this._levels;\n    }\n  }, {\n    key: 'level',\n    get: function get() {\n      return this._level;\n    },\n    set: function set(newLevel) {\n      var levels = this._levels;\n      if (levels && levels.length > newLevel) {\n        if (this._level !== newLevel || levels[newLevel].details === undefined) {\n          this.setLevelInternal(newLevel);\n        }\n      }\n    }\n  }, {\n    key: 'manualLevel',\n    get: function get() {\n      return this._manualLevel;\n    },\n    set: function set(newLevel) {\n      this._manualLevel = newLevel;\n      if (this._startLevel === undefined) {\n        this._startLevel = newLevel;\n      }\n      if (newLevel !== -1) {\n        this.level = newLevel;\n      }\n    }\n  }, {\n    key: 'firstLevel',\n    get: function get() {\n      return this._firstLevel;\n    },\n    set: function set(newLevel) {\n      this._firstLevel = newLevel;\n    }\n  }, {\n    key: 'startLevel',\n    get: function get() {\n      // hls.startLevel takes precedence over config.startLevel\n      // if none of these values are defined, fallback on this._firstLevel (first quality level appearing in variant manifest)\n      if (this._startLevel === undefined) {\n        var configStartLevel = this.hls.config.startLevel;\n        if (configStartLevel !== undefined) {\n          return configStartLevel;\n        } else {\n          return this._firstLevel;\n        }\n      } else {\n        return this._startLevel;\n      }\n    },\n    set: function set(newLevel) {\n      // if not in autostart level, ensure startLevel is greater than minAutoLevel\n      if (newLevel !== -1) {\n        newLevel = Math.max(newLevel, this.hls.abrController.minAutoLevel);\n      }\n      this._startLevel = newLevel;\n    }\n  }, {\n    key: 'nextLoadLevel',\n    get: function get() {\n      if (this._manualLevel !== -1) {\n        return this._manualLevel;\n      } else {\n        return this.hls.abrController.nextAutoLevel;\n      }\n    },\n    set: function set(nextLevel) {\n      this.level = nextLevel;\n      if (this._manualLevel === -1) {\n        this.hls.abrController.nextAutoLevel = nextLevel;\n      }\n    }\n  }]);\n\n  return LevelController;\n}(_eventHandler2.default);\n\nexports.default = LevelController;\n\n},{\"26\":26,\"27\":27,\"28\":28,\"30\":30,\"45\":45}],12:[function(_dereq_,module,exports){\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _binarySearch = _dereq_(41);\n\nvar _binarySearch2 = _interopRequireDefault(_binarySearch);\n\nvar _bufferHelper = _dereq_(30);\n\nvar _bufferHelper2 = _interopRequireDefault(_bufferHelper);\n\nvar _demuxer = _dereq_(22);\n\nvar _demuxer2 = _interopRequireDefault(_demuxer);\n\nvar _events = _dereq_(28);\n\nvar _events2 = _interopRequireDefault(_events);\n\nvar _eventHandler = _dereq_(27);\n\nvar _eventHandler2 = _interopRequireDefault(_eventHandler);\n\nvar _levelHelper = _dereq_(31);\n\nvar _levelHelper2 = _interopRequireDefault(_levelHelper);\n\nvar _timeRanges = _dereq_(46);\n\nvar _timeRanges2 = _interopRequireDefault(_timeRanges);\n\nvar _errors = _dereq_(26);\n\nvar _logger = _dereq_(45);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /*\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * Stream Controller\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               */\n\nvar State = {\n  STOPPED: 'STOPPED',\n  IDLE: 'IDLE',\n  KEY_LOADING: 'KEY_LOADING',\n  FRAG_LOADING: 'FRAG_LOADING',\n  FRAG_LOADING_WAITING_RETRY: 'FRAG_LOADING_WAITING_RETRY',\n  WAITING_LEVEL: 'WAITING_LEVEL',\n  PARSING: 'PARSING',\n  PARSED: 'PARSED',\n  BUFFER_FLUSHING: 'BUFFER_FLUSHING',\n  ENDED: 'ENDED',\n  ERROR: 'ERROR'\n};\n\nvar StreamController = function (_EventHandler) {\n  _inherits(StreamController, _EventHandler);\n\n  function StreamController(hls) {\n    _classCallCheck(this, StreamController);\n\n    var _this = _possibleConstructorReturn(this, (StreamController.__proto__ || Object.getPrototypeOf(StreamController)).call(this, hls, _events2.default.MEDIA_ATTACHED, _events2.default.MEDIA_DETACHING, _events2.default.MANIFEST_LOADING, _events2.default.MANIFEST_PARSED, _events2.default.LEVEL_LOADED, _events2.default.KEY_LOADED, _events2.default.FRAG_LOADED, _events2.default.FRAG_LOAD_EMERGENCY_ABORTED, _events2.default.FRAG_PARSING_INIT_SEGMENT, _events2.default.FRAG_PARSING_DATA, _events2.default.FRAG_PARSED, _events2.default.ERROR, _events2.default.AUDIO_TRACK_SWITCHING, _events2.default.AUDIO_TRACK_SWITCHED, _events2.default.BUFFER_CREATED, _events2.default.BUFFER_APPENDED, _events2.default.BUFFER_FLUSHED));\n\n    _this.config = hls.config;\n    _this.audioCodecSwap = false;\n    _this.ticks = 0;\n    _this._state = State.STOPPED;\n    _this.ontick = _this.tick.bind(_this);\n    return _this;\n  }\n\n  _createClass(StreamController, [{\n    key: 'destroy',\n    value: function destroy() {\n      this.stopLoad();\n      if (this.timer) {\n        clearInterval(this.timer);\n        this.timer = null;\n      }\n      _eventHandler2.default.prototype.destroy.call(this);\n      this.state = State.STOPPED;\n    }\n  }, {\n    key: 'startLoad',\n    value: function startLoad(startPosition) {\n      if (this.levels) {\n        var lastCurrentTime = this.lastCurrentTime,\n            hls = this.hls;\n        this.stopLoad();\n        if (!this.timer) {\n          this.timer = setInterval(this.ontick, 100);\n        }\n        this.level = -1;\n        this.fragLoadError = 0;\n        if (!this.startFragRequested) {\n          // determine load level\n          var startLevel = hls.startLevel;\n          if (startLevel === -1) {\n            // -1 : guess start Level by doing a bitrate test by loading first fragment of lowest quality level\n            startLevel = 0;\n            this.bitrateTest = true;\n          }\n          // set new level to playlist loader : this will trigger start level load\n          // hls.nextLoadLevel remains until it is set to a new value or until a new frag is successfully loaded\n          this.level = hls.nextLoadLevel = startLevel;\n          this.loadedmetadata = false;\n        }\n        // if startPosition undefined but lastCurrentTime set, set startPosition to last currentTime\n        if (lastCurrentTime > 0 && startPosition === -1) {\n          _logger.logger.log('override startPosition with lastCurrentTime @' + lastCurrentTime.toFixed(3));\n          startPosition = lastCurrentTime;\n        }\n        this.state = State.IDLE;\n        this.nextLoadPosition = this.startPosition = this.lastCurrentTime = startPosition;\n        this.tick();\n      } else {\n        _logger.logger.warn('cannot start loading as manifest not parsed yet');\n        this.state = State.STOPPED;\n      }\n    }\n  }, {\n    key: 'stopLoad',\n    value: function stopLoad() {\n      var frag = this.fragCurrent;\n      if (frag) {\n        if (frag.loader) {\n          frag.loader.abort();\n        }\n        this.fragCurrent = null;\n      }\n      this.fragPrevious = null;\n      if (this.demuxer) {\n        this.demuxer.destroy();\n        this.demuxer = null;\n      }\n      this.state = State.STOPPED;\n    }\n  }, {\n    key: 'tick',\n    value: function tick() {\n      this.ticks++;\n      if (this.ticks === 1) {\n        this.doTick();\n        if (this.ticks > 1) {\n          setTimeout(this.tick, 1);\n        }\n        this.ticks = 0;\n      }\n    }\n  }, {\n    key: 'doTick',\n    value: function doTick() {\n      switch (this.state) {\n        case State.ERROR:\n          //don't do anything in error state to avoid breaking further ...\n          break;\n        case State.BUFFER_FLUSHING:\n          // in buffer flushing state, reset fragLoadError counter\n          this.fragLoadError = 0;\n          break;\n        case State.IDLE:\n          // when this returns false there was an error and we shall return immediatly\n          // from current tick\n          if (!this._doTickIdle()) {\n            return;\n          }\n          break;\n        case State.WAITING_LEVEL:\n          var level = this.levels[this.level];\n          // check if playlist is already loaded\n          if (level && level.details) {\n            this.state = State.IDLE;\n          }\n          break;\n        case State.FRAG_LOADING_WAITING_RETRY:\n          var now = performance.now();\n          var retryDate = this.retryDate;\n          // if current time is gt than retryDate, or if media seeking let's switch to IDLE state to retry loading\n          if (!retryDate || now >= retryDate || this.media && this.media.seeking) {\n            _logger.logger.log('mediaController: retryDate reached, switch back to IDLE state');\n            this.state = State.IDLE;\n          }\n          break;\n        case State.ERROR:\n        case State.STOPPED:\n        case State.FRAG_LOADING:\n        case State.PARSING:\n        case State.PARSED:\n        case State.ENDED:\n          break;\n        default:\n          break;\n      }\n      // check buffer\n      this._checkBuffer();\n      // check/update current fragment\n      this._checkFragmentChanged();\n    }\n\n    // Ironically the \"idle\" state is the on we do the most logic in it seems ....\n    // NOTE: Maybe we could rather schedule a check for buffer length after half of the currently\n    //       played segment, or on pause/play/seek instead of naively checking every 100ms?\n\n  }, {\n    key: '_doTickIdle',\n    value: function _doTickIdle() {\n      var hls = this.hls,\n          config = hls.config,\n          media = this.media;\n\n      // if video not attached AND\n      // start fragment already requested OR start frag prefetch disable\n      // exit loop\n      // => if start level loaded and media not attached but start frag prefetch is enabled and start frag not requested yet, we will not exit loop\n      if (this.levelLastLoaded !== undefined && !media && (this.startFragRequested || !config.startFragPrefetch)) {\n        return true;\n      }\n\n      // if we have not yet loaded any fragment, start loading from start position\n      var pos = void 0;\n      if (this.loadedmetadata) {\n        pos = media.currentTime;\n      } else {\n        pos = this.nextLoadPosition;\n      }\n      // determine next load level\n      var level = hls.nextLoadLevel,\n          levelInfo = this.levels[level],\n          levelBitrate = levelInfo.bitrate,\n          maxBufLen = void 0;\n\n      // compute max Buffer Length that we could get from this load level, based on level bitrate. don't buffer more than 60 MB and more than 30s\n      if (levelBitrate) {\n        maxBufLen = Math.max(8 * config.maxBufferSize / levelBitrate, config.maxBufferLength);\n      } else {\n        maxBufLen = config.maxBufferLength;\n      }\n      maxBufLen = Math.min(maxBufLen, config.maxMaxBufferLength);\n\n      // determine next candidate fragment to be loaded, based on current position and end of buffer position\n      // ensure up to `config.maxMaxBufferLength` of buffer upfront\n\n      var bufferInfo = _bufferHelper2.default.bufferInfo(this.mediaBuffer ? this.mediaBuffer : media, pos, config.maxBufferHole),\n          bufferLen = bufferInfo.len;\n      // Stay idle if we are still with buffer margins\n      if (bufferLen >= maxBufLen) {\n        return true;\n      }\n\n      // if buffer length is less than maxBufLen try to load a new fragment ...\n      _logger.logger.trace('buffer length of ' + bufferLen.toFixed(3) + ' is below max of ' + maxBufLen.toFixed(3) + '. checking for more payload ...');\n\n      // set next load level : this will trigger a playlist load if needed\n      this.level = hls.nextLoadLevel = level;\n\n      var levelDetails = levelInfo.details;\n      // if level info not retrieved yet, switch state and wait for level retrieval\n      // if live playlist, ensure that new playlist has been refreshed to avoid loading/try to load\n      // a useless and outdated fragment (that might even introduce load error if it is already out of the live playlist)\n      if (typeof levelDetails === 'undefined' || levelDetails.live && this.levelLastLoaded !== level) {\n        this.state = State.WAITING_LEVEL;\n        return true;\n      }\n\n      // we just got done loading the final fragment, check if we need to finalize media stream\n      var fragPrevious = this.fragPrevious;\n      if (!levelDetails.live && fragPrevious && fragPrevious.sn === levelDetails.endSN) {\n        // if everything (almost) til the end is buffered, let's signal eos\n        // we don't compare exactly media.duration === bufferInfo.end as there could be some subtle media duration difference\n        // using half frag duration should help cope with these cases.\n        // also cope with almost zero last frag duration (max last frag duration with 200ms) refer to https://github.com/dailymotion/hls.js/pull/657\n        if (media.duration - Math.max(bufferInfo.end, fragPrevious.start) <= Math.max(0.2, fragPrevious.duration / 2)) {\n          // Finalize the media stream\n          var data = {};\n          if (this.altAudio) {\n            data.type = 'video';\n          }\n          this.hls.trigger(_events2.default.BUFFER_EOS, data);\n          this.state = State.ENDED;\n          return true;\n        }\n      }\n\n      // if we have the levelDetails for the selected variant, lets continue enrichen our stream (load keys/fragments or trigger EOS, etc..)\n      return this._fetchPayloadOrEos(pos, bufferInfo, levelDetails);\n    }\n  }, {\n    key: '_fetchPayloadOrEos',\n    value: function _fetchPayloadOrEos(pos, bufferInfo, levelDetails) {\n      var fragPrevious = this.fragPrevious,\n          level = this.level,\n          fragments = levelDetails.fragments,\n          fragLen = fragments.length;\n\n      // empty playlist\n      if (fragLen === 0) {\n        return false;\n      }\n\n      // find fragment index, contiguous with end of buffer position\n      var start = fragments[0].start,\n          end = fragments[fragLen - 1].start + fragments[fragLen - 1].duration,\n          bufferEnd = bufferInfo.end,\n          frag = void 0;\n\n      // in case of live playlist we need to ensure that requested position is not located before playlist start\n      if (levelDetails.live) {\n        var initialLiveManifestSize = this.config.initialLiveManifestSize;\n        if (fragLen < initialLiveManifestSize) {\n          _logger.logger.warn('Can not start playback of a level, reason: not enough fragments ' + fragLen + ' < ' + initialLiveManifestSize);\n          return false;\n        }\n\n        frag = this._ensureFragmentAtLivePoint(levelDetails, bufferEnd, start, end, fragPrevious, fragments, fragLen);\n        // if it explicitely returns null don't load any fragment and exit function now\n        if (frag === null) {\n          return false;\n        }\n      } else {\n        // VoD playlist: if bufferEnd before start of playlist, load first fragment\n        if (bufferEnd < start) {\n          frag = fragments[0];\n        }\n      }\n      if (!frag) {\n        frag = this._findFragment(start, fragPrevious, fragLen, fragments, bufferEnd, end, levelDetails);\n      }\n      if (frag) {\n        return this._loadFragmentOrKey(frag, level, levelDetails, pos, bufferEnd);\n      }\n      return true;\n    }\n  }, {\n    key: '_ensureFragmentAtLivePoint',\n    value: function _ensureFragmentAtLivePoint(levelDetails, bufferEnd, start, end, fragPrevious, fragments, fragLen) {\n      var config = this.hls.config,\n          media = this.media;\n\n      var frag = void 0;\n\n      // check if requested position is within seekable boundaries :\n      //logger.log(`start/pos/bufEnd/seeking:${start.toFixed(3)}/${pos.toFixed(3)}/${bufferEnd.toFixed(3)}/${this.media.seeking}`);\n      var maxLatency = config.liveMaxLatencyDuration !== undefined ? config.liveMaxLatencyDuration : config.liveMaxLatencyDurationCount * levelDetails.targetduration;\n\n      if (bufferEnd < Math.max(start - config.maxFragLookUpTolerance, end - maxLatency)) {\n        var liveSyncPosition = this.liveSyncPosition = this.computeLivePosition(start, levelDetails);\n        _logger.logger.log('buffer end: ' + bufferEnd.toFixed(3) + ' is located too far from the end of live sliding playlist, reset currentTime to : ' + liveSyncPosition.toFixed(3));\n        bufferEnd = liveSyncPosition;\n        if (media && media.readyState && media.duration > liveSyncPosition) {\n          media.currentTime = liveSyncPosition;\n        }\n      }\n\n      // if end of buffer greater than live edge, don't load any fragment\n      // this could happen if live playlist intermittently slides in the past.\n      // level 1 loaded [182580161,182580167]\n      // level 1 loaded [182580162,182580169]\n      // Loading 182580168 of [182580162 ,182580169],level 1 ..\n      // Loading 182580169 of [182580162 ,182580169],level 1 ..\n      // level 1 loaded [182580162,182580168] <============= here we should have bufferEnd > end. in that case break to avoid reloading 182580168\n      // level 1 loaded [182580164,182580171]\n      //\n      // don't return null in case media not loaded yet (readystate === 0)\n      if (levelDetails.PTSKnown && bufferEnd > end && media && media.readyState) {\n        return null;\n      }\n\n      if (this.startFragRequested && !levelDetails.PTSKnown) {\n        /* we are switching level on live playlist, but we don't have any PTS info for that quality level ...\n           try to load frag matching with next SN.\n           even if SN are not synchronized between playlists, loading this frag will help us\n           compute playlist sliding and find the right one after in case it was not the right consecutive one */\n        if (fragPrevious) {\n          var targetSN = fragPrevious.sn + 1;\n          if (targetSN >= levelDetails.startSN && targetSN <= levelDetails.endSN) {\n            frag = fragments[targetSN - levelDetails.startSN];\n            _logger.logger.log('live playlist, switching playlist, load frag with next SN: ' + frag.sn);\n          }\n        }\n        if (!frag) {\n          /* we have no idea about which fragment should be loaded.\n             so let's load mid fragment. it will help computing playlist sliding and find the right one\n          */\n          frag = fragments[Math.min(fragLen - 1, Math.round(fragLen / 2))];\n          _logger.logger.log('live playlist, switching playlist, unknown, load middle frag : ' + frag.sn);\n        }\n      }\n      return frag;\n    }\n  }, {\n    key: '_findFragment',\n    value: function _findFragment(start, fragPrevious, fragLen, fragments, bufferEnd, end, levelDetails) {\n      var config = this.hls.config;\n\n      var frag = void 0,\n          foundFrag = void 0,\n          maxFragLookUpTolerance = config.maxFragLookUpTolerance;\n\n      if (bufferEnd < end) {\n        if (bufferEnd > end - maxFragLookUpTolerance) {\n          maxFragLookUpTolerance = 0;\n        }\n        foundFrag = _binarySearch2.default.search(fragments, function (candidate) {\n          // offset should be within fragment boundary - config.maxFragLookUpTolerance\n          // this is to cope with situations like\n          // bufferEnd = 9.991\n          // frag[Ø] : [0,10]\n          // frag[1] : [10,20]\n          // bufferEnd is within frag[0] range ... although what we are expecting is to return frag[1] here\n          //              frag start               frag start+duration\n          //                  |-----------------------------|\n          //              <--->                         <--->\n          //  ...--------><-----------------------------><---------....\n          // previous frag         matching fragment         next frag\n          //  return -1             return 0                 return 1\n          //logger.log(`level/sn/start/end/bufEnd:${level}/${candidate.sn}/${candidate.start}/${(candidate.start+candidate.duration)}/${bufferEnd}`);\n          if (candidate.start + candidate.duration - maxFragLookUpTolerance <= bufferEnd) {\n            return 1;\n          } // if maxFragLookUpTolerance will have negative value then don't return -1 for first element\n          else if (candidate.start - maxFragLookUpTolerance > bufferEnd && candidate.start) {\n              return -1;\n            }\n          return 0;\n        });\n      } else {\n        // reach end of playlist\n        foundFrag = fragments[fragLen - 1];\n      }\n      if (foundFrag) {\n        frag = foundFrag;\n        start = foundFrag.start;\n        //logger.log('find SN matching with pos:' +  bufferEnd + ':' + frag.sn);\n        if (fragPrevious && frag.level === fragPrevious.level && frag.sn === fragPrevious.sn) {\n          if (frag.sn < levelDetails.endSN) {\n            var deltaPTS = fragPrevious.deltaPTS,\n                curSNIdx = frag.sn - levelDetails.startSN;\n            // if there is a significant delta between audio and video, larger than max allowed hole,\n            // and if previous remuxed fragment did not start with a keyframe. (fragPrevious.dropped)\n            // let's try to load previous fragment again to get last keyframe\n            // then we will reload again current fragment (that way we should be able to fill the buffer hole ...)\n            if (deltaPTS && deltaPTS > config.maxBufferHole && fragPrevious.dropped && curSNIdx) {\n              frag = fragments[curSNIdx - 1];\n              _logger.logger.warn('SN just loaded, with large PTS gap between audio and video, maybe frag is not starting with a keyframe ? load previous one to try to overcome this');\n              // decrement previous frag load counter to avoid frag loop loading error when next fragment will get reloaded\n              fragPrevious.loadCounter--;\n            } else {\n              frag = fragments[curSNIdx + 1];\n              _logger.logger.log('SN just loaded, load next one: ' + frag.sn);\n            }\n          } else {\n            frag = null;\n          }\n        }\n      }\n      return frag;\n    }\n  }, {\n    key: '_loadFragmentOrKey',\n    value: function _loadFragmentOrKey(frag, level, levelDetails, pos, bufferEnd) {\n      var hls = this.hls,\n          config = hls.config;\n\n      //logger.log('loading frag ' + i +',pos/bufEnd:' + pos.toFixed(3) + '/' + bufferEnd.toFixed(3));\n      if (frag.decryptdata.uri != null && frag.decryptdata.key == null) {\n        _logger.logger.log('Loading key for ' + frag.sn + ' of [' + levelDetails.startSN + ' ,' + levelDetails.endSN + '],level ' + level);\n        this.state = State.KEY_LOADING;\n        hls.trigger(_events2.default.KEY_LOADING, { frag: frag });\n      } else {\n        _logger.logger.log('Loading ' + frag.sn + ' of [' + levelDetails.startSN + ' ,' + levelDetails.endSN + '],level ' + level + ', currentTime:' + pos.toFixed(3) + ',bufferEnd:' + bufferEnd.toFixed(3));\n        // ensure that we are not reloading the same fragments in loop ...\n        if (this.fragLoadIdx !== undefined) {\n          this.fragLoadIdx++;\n        } else {\n          this.fragLoadIdx = 0;\n        }\n        if (frag.loadCounter) {\n          frag.loadCounter++;\n          var maxThreshold = config.fragLoadingLoopThreshold;\n          // if this frag has already been loaded 3 times, and if it has been reloaded recently\n          if (frag.loadCounter > maxThreshold && Math.abs(this.fragLoadIdx - frag.loadIdx) < maxThreshold) {\n            hls.trigger(_events2.default.ERROR, { type: _errors.ErrorTypes.MEDIA_ERROR, details: _errors.ErrorDetails.FRAG_LOOP_LOADING_ERROR, fatal: false, frag: frag });\n            return false;\n          }\n        } else {\n          frag.loadCounter = 1;\n        }\n        frag.loadIdx = this.fragLoadIdx;\n        this.fragCurrent = frag;\n        this.startFragRequested = true;\n        this.nextLoadPosition = frag.start + frag.duration;\n        frag.autoLevel = hls.autoLevelEnabled;\n        frag.bitrateTest = this.bitrateTest;\n        hls.trigger(_events2.default.FRAG_LOADING, { frag: frag });\n        // lazy demuxer init, as this could take some time ... do it during frag loading\n        if (!this.demuxer) {\n          this.demuxer = new _demuxer2.default(hls, 'main');\n        }\n        this.state = State.FRAG_LOADING;\n        return true;\n      }\n    }\n  }, {\n    key: 'getBufferRange',\n    value: function getBufferRange(position) {\n      return _binarySearch2.default.search(this.bufferRange, function (range) {\n        if (position < range.start) {\n          return -1;\n        } else if (position > range.end) {\n          return 1;\n        }\n        return 0;\n      });\n    }\n  }, {\n    key: 'followingBufferRange',\n    value: function followingBufferRange(range) {\n      if (range) {\n        // try to get range of next fragment (500ms after this range)\n        return this.getBufferRange(range.end + 0.5);\n      }\n      return null;\n    }\n  }, {\n    key: '_checkFragmentChanged',\n    value: function _checkFragmentChanged() {\n      var rangeCurrent,\n          currentTime,\n          video = this.media;\n      if (video && video.readyState && video.seeking === false) {\n        currentTime = video.currentTime;\n        /* if video element is in seeked state, currentTime can only increase.\n          (assuming that playback rate is positive ...)\n          As sometimes currentTime jumps back to zero after a\n          media decode error, check this, to avoid seeking back to\n          wrong position after a media decode error\n        */\n        if (currentTime > video.playbackRate * this.lastCurrentTime) {\n          this.lastCurrentTime = currentTime;\n        }\n        if (_bufferHelper2.default.isBuffered(video, currentTime)) {\n          rangeCurrent = this.getBufferRange(currentTime);\n        } else if (_bufferHelper2.default.isBuffered(video, currentTime + 0.1)) {\n          /* ensure that FRAG_CHANGED event is triggered at startup,\n            when first video frame is displayed and playback is paused.\n            add a tolerance of 100ms, in case current position is not buffered,\n            check if current pos+100ms is buffered and use that buffer range\n            for FRAG_CHANGED event reporting */\n          rangeCurrent = this.getBufferRange(currentTime + 0.1);\n        }\n        if (rangeCurrent) {\n          var fragPlaying = rangeCurrent.frag;\n          if (fragPlaying !== this.fragPlaying) {\n            this.fragPlaying = fragPlaying;\n            this.hls.trigger(_events2.default.FRAG_CHANGED, { frag: fragPlaying });\n          }\n        }\n      }\n    }\n\n    /*\n      on immediate level switch :\n       - pause playback if playing\n       - cancel any pending load request\n       - and trigger a buffer flush\n    */\n\n  }, {\n    key: 'immediateLevelSwitch',\n    value: function immediateLevelSwitch() {\n      _logger.logger.log('immediateLevelSwitch');\n      if (!this.immediateSwitch) {\n        this.immediateSwitch = true;\n        var media = this.media,\n            previouslyPaused = void 0;\n        if (media) {\n          previouslyPaused = media.paused;\n          media.pause();\n        } else {\n          // don't restart playback after instant level switch in case media not attached\n          previouslyPaused = true;\n        }\n        this.previouslyPaused = previouslyPaused;\n      }\n      var fragCurrent = this.fragCurrent;\n      if (fragCurrent && fragCurrent.loader) {\n        fragCurrent.loader.abort();\n      }\n      this.fragCurrent = null;\n      // increase fragment load Index to avoid frag loop loading error after buffer flush\n      this.fragLoadIdx += 2 * this.config.fragLoadingLoopThreshold;\n      // flush everything\n      this.flushMainBuffer(0, Number.POSITIVE_INFINITY);\n    }\n\n    /*\n       on immediate level switch end, after new fragment has been buffered :\n        - nudge video decoder by slightly adjusting video currentTime (if currentTime buffered)\n        - resume the playback if needed\n    */\n\n  }, {\n    key: 'immediateLevelSwitchEnd',\n    value: function immediateLevelSwitchEnd() {\n      var media = this.media;\n      if (media && media.buffered.length) {\n        this.immediateSwitch = false;\n        if (_bufferHelper2.default.isBuffered(media, media.currentTime)) {\n          // only nudge if currentTime is buffered\n          media.currentTime -= 0.0001;\n        }\n        if (!this.previouslyPaused) {\n          media.play();\n        }\n      }\n    }\n  }, {\n    key: 'nextLevelSwitch',\n    value: function nextLevelSwitch() {\n      /* try to switch ASAP without breaking video playback :\n         in order to ensure smooth but quick level switching,\n        we need to find the next flushable buffer range\n        we should take into account new segment fetch time\n      */\n      var media = this.media;\n      // ensure that media is defined and that metadata are available (to retrieve currentTime)\n      if (media && media.readyState) {\n        var fetchdelay = void 0,\n            currentRange = void 0,\n            nextRange = void 0;\n        // increase fragment load Index to avoid frag loop loading error after buffer flush\n        this.fragLoadIdx += 2 * this.config.fragLoadingLoopThreshold;\n        currentRange = this.getBufferRange(media.currentTime);\n        if (currentRange && currentRange.start > 1) {\n          // flush buffer preceding current fragment (flush until current fragment start offset)\n          // minus 1s to avoid video freezing, that could happen if we flush keyframe of current video ...\n          this.flushMainBuffer(0, currentRange.start - 1);\n        }\n        if (!media.paused) {\n          // add a safety delay of 1s\n          var nextLevelId = this.hls.nextLoadLevel,\n              nextLevel = this.levels[nextLevelId],\n              fragLastKbps = this.fragLastKbps;\n          if (fragLastKbps && this.fragCurrent) {\n            fetchdelay = this.fragCurrent.duration * nextLevel.bitrate / (1000 * fragLastKbps) + 1;\n          } else {\n            fetchdelay = 0;\n          }\n        } else {\n          fetchdelay = 0;\n        }\n        //logger.log('fetchdelay:'+fetchdelay);\n        // find buffer range that will be reached once new fragment will be fetched\n        nextRange = this.getBufferRange(media.currentTime + fetchdelay);\n        if (nextRange) {\n          // we can flush buffer range following this one without stalling playback\n          nextRange = this.followingBufferRange(nextRange);\n          if (nextRange) {\n            // if we are here, we can also cancel any loading/demuxing in progress, as they are useless\n            var fragCurrent = this.fragCurrent;\n            if (fragCurrent && fragCurrent.loader) {\n              fragCurrent.loader.abort();\n            }\n            this.fragCurrent = null;\n            // flush position is the start position of this new buffer\n            this.flushMainBuffer(nextRange.start, Number.POSITIVE_INFINITY);\n          }\n        }\n      }\n    }\n  }, {\n    key: 'flushMainBuffer',\n    value: function flushMainBuffer(startOffset, endOffset) {\n      this.state = State.BUFFER_FLUSHING;\n      var flushScope = { startOffset: startOffset, endOffset: endOffset };\n      // if alternate audio tracks are used, only flush video, otherwise flush everything\n      if (this.altAudio) {\n        flushScope.type = 'video';\n      }\n      this.hls.trigger(_events2.default.BUFFER_FLUSHING, flushScope);\n    }\n  }, {\n    key: 'onMediaAttached',\n    value: function onMediaAttached(data) {\n      var media = this.media = this.mediaBuffer = data.media;\n      this.onvseeking = this.onMediaSeeking.bind(this);\n      this.onvseeked = this.onMediaSeeked.bind(this);\n      this.onvended = this.onMediaEnded.bind(this);\n      media.addEventListener('seeking', this.onvseeking);\n      media.addEventListener('seeked', this.onvseeked);\n      media.addEventListener('ended', this.onvended);\n      var config = this.config;\n      if (this.levels && config.autoStartLoad) {\n        this.hls.startLoad(config.startPosition);\n      }\n    }\n  }, {\n    key: 'onMediaDetaching',\n    value: function onMediaDetaching() {\n      var media = this.media;\n      if (media && media.ended) {\n        _logger.logger.log('MSE detaching and video ended, reset startPosition');\n        this.startPosition = this.lastCurrentTime = 0;\n      }\n\n      // reset fragment loading counter on MSE detaching to avoid reporting FRAG_LOOP_LOADING_ERROR after error recovery\n      var levels = this.levels;\n      if (levels) {\n        // reset fragment load counter\n        levels.forEach(function (level) {\n          if (level.details) {\n            level.details.fragments.forEach(function (fragment) {\n              fragment.loadCounter = undefined;\n            });\n          }\n        });\n      }\n      // remove video listeners\n      if (media) {\n        media.removeEventListener('seeking', this.onvseeking);\n        media.removeEventListener('seeked', this.onvseeked);\n        media.removeEventListener('ended', this.onvended);\n        this.onvseeking = this.onvseeked = this.onvended = null;\n      }\n      this.media = this.mediaBuffer = null;\n      this.loadedmetadata = false;\n      this.stopLoad();\n    }\n  }, {\n    key: 'onMediaSeeking',\n    value: function onMediaSeeking() {\n      var media = this.media,\n          currentTime = media ? media.currentTime : undefined,\n          config = this.config;\n      _logger.logger.log('media seeking to ' + currentTime.toFixed(3));\n      if (this.state === State.FRAG_LOADING) {\n        var mediaBuffer = this.mediaBuffer ? this.mediaBuffer : media;\n        var bufferInfo = _bufferHelper2.default.bufferInfo(mediaBuffer, currentTime, this.config.maxBufferHole),\n            fragCurrent = this.fragCurrent;\n        // check if we are seeking to a unbuffered area AND if frag loading is in progress\n        if (bufferInfo.len === 0 && fragCurrent) {\n          var tolerance = config.maxFragLookUpTolerance,\n              fragStartOffset = fragCurrent.start - tolerance,\n              fragEndOffset = fragCurrent.start + fragCurrent.duration + tolerance;\n          // check if we seek position will be out of currently loaded frag range : if out cancel frag load, if in, don't do anything\n          if (currentTime < fragStartOffset || currentTime > fragEndOffset) {\n            if (fragCurrent.loader) {\n              _logger.logger.log('seeking outside of buffer while fragment load in progress, cancel fragment load');\n              fragCurrent.loader.abort();\n            }\n            this.fragCurrent = null;\n            this.fragPrevious = null;\n            // switch to IDLE state to load new fragment\n            this.state = State.IDLE;\n          } else {\n            _logger.logger.log('seeking outside of buffer but within currently loaded fragment range');\n          }\n        }\n      } else if (this.state === State.ENDED) {\n        // switch to IDLE state to check for potential new fragment\n        this.state = State.IDLE;\n      }\n      if (media) {\n        this.lastCurrentTime = currentTime;\n      }\n      // avoid reporting fragment loop loading error in case user is seeking several times on same position\n      if (this.state !== State.FRAG_LOADING && this.fragLoadIdx !== undefined) {\n        this.fragLoadIdx += 2 * config.fragLoadingLoopThreshold;\n      }\n      // in case seeking occurs although no media buffered, adjust startPosition and nextLoadPosition to seek target\n      if (!this.loadedmetadata) {\n        this.nextLoadPosition = this.startPosition = currentTime;\n      }\n      // tick to speed up processing\n      this.tick();\n    }\n  }, {\n    key: 'onMediaSeeked',\n    value: function onMediaSeeked() {\n      _logger.logger.log('media seeked to ' + this.media.currentTime.toFixed(3));\n      // tick to speed up FRAGMENT_PLAYING triggering\n      this.tick();\n    }\n  }, {\n    key: 'onMediaEnded',\n    value: function onMediaEnded() {\n      _logger.logger.log('media ended');\n      // reset startPosition and lastCurrentTime to restart playback @ stream beginning\n      this.startPosition = this.lastCurrentTime = 0;\n    }\n  }, {\n    key: 'onManifestLoading',\n    value: function onManifestLoading() {\n      // reset buffer on manifest loading\n      _logger.logger.log('trigger BUFFER_RESET');\n      this.hls.trigger(_events2.default.BUFFER_RESET);\n      this.bufferRange = [];\n      this.stalled = false;\n      this.startPosition = this.lastCurrentTime = 0;\n    }\n  }, {\n    key: 'onManifestParsed',\n    value: function onManifestParsed(data) {\n      var aac = false,\n          heaac = false,\n          codec;\n      data.levels.forEach(function (level) {\n        // detect if we have different kind of audio codecs used amongst playlists\n        codec = level.audioCodec;\n        if (codec) {\n          if (codec.indexOf('mp4a.40.2') !== -1) {\n            aac = true;\n          }\n          if (codec.indexOf('mp4a.40.5') !== -1) {\n            heaac = true;\n          }\n        }\n      });\n      this.audioCodecSwitch = aac && heaac;\n      if (this.audioCodecSwitch) {\n        _logger.logger.log('both AAC/HE-AAC audio found in levels; declaring level codec as HE-AAC');\n      }\n      this.levels = data.levels;\n      this.startLevelLoaded = false;\n      this.startFragRequested = false;\n      var config = this.config;\n      if (config.autoStartLoad) {\n        this.hls.startLoad(config.startPosition);\n      }\n    }\n  }, {\n    key: 'onLevelLoaded',\n    value: function onLevelLoaded(data) {\n      var newDetails = data.details,\n          newLevelId = data.level,\n          curLevel = this.levels[newLevelId],\n          duration = newDetails.totalduration,\n          sliding = 0;\n\n      _logger.logger.log('level ' + newLevelId + ' loaded [' + newDetails.startSN + ',' + newDetails.endSN + '],duration:' + duration);\n      this.levelLastLoaded = newLevelId;\n\n      if (newDetails.live) {\n        var curDetails = curLevel.details;\n        if (curDetails && newDetails.fragments.length > 0) {\n          // we already have details for that level, merge them\n          _levelHelper2.default.mergeDetails(curDetails, newDetails);\n          sliding = newDetails.fragments[0].start;\n          this.liveSyncPosition = this.computeLivePosition(sliding, curDetails);\n          if (newDetails.PTSKnown) {\n            _logger.logger.log('live playlist sliding:' + sliding.toFixed(3));\n          } else {\n            _logger.logger.log('live playlist - outdated PTS, unknown sliding');\n          }\n        } else {\n          newDetails.PTSKnown = false;\n          _logger.logger.log('live playlist - first load, unknown sliding');\n        }\n      } else {\n        newDetails.PTSKnown = false;\n      }\n      // override level info\n      curLevel.details = newDetails;\n      this.hls.trigger(_events2.default.LEVEL_UPDATED, { details: newDetails, level: newLevelId });\n\n      if (this.startFragRequested === false) {\n        // compute start position if set to -1. use it straight away if value is defined\n        if (this.startPosition === -1 || this.lastCurrentTime === -1) {\n          // first, check if start time offset has been set in playlist, if yes, use this value\n          var startTimeOffset = newDetails.startTimeOffset;\n          if (!isNaN(startTimeOffset)) {\n            if (startTimeOffset < 0) {\n              _logger.logger.log('negative start time offset ' + startTimeOffset + ', count from end of last fragment');\n              startTimeOffset = sliding + duration + startTimeOffset;\n            }\n            _logger.logger.log('start time offset found in playlist, adjust startPosition to ' + startTimeOffset);\n            this.startPosition = startTimeOffset;\n          } else {\n            // if live playlist, set start position to be fragment N-this.config.liveSyncDurationCount (usually 3)\n            if (newDetails.live) {\n              this.startPosition = this.computeLivePosition(sliding, newDetails);\n              _logger.logger.log('configure startPosition to ' + this.startPosition);\n            } else {\n              this.startPosition = 0;\n            }\n          }\n          this.lastCurrentTime = this.startPosition;\n        }\n        this.nextLoadPosition = this.startPosition;\n      }\n      // only switch batck to IDLE state if we were waiting for level to start downloading a new fragment\n      if (this.state === State.WAITING_LEVEL) {\n        this.state = State.IDLE;\n      }\n      //trigger handler right now\n      this.tick();\n    }\n  }, {\n    key: 'onKeyLoaded',\n    value: function onKeyLoaded() {\n      if (this.state === State.KEY_LOADING) {\n        this.state = State.IDLE;\n        this.tick();\n      }\n    }\n  }, {\n    key: 'onFragLoaded',\n    value: function onFragLoaded(data) {\n      var fragCurrent = this.fragCurrent,\n          fragLoaded = data.frag;\n      if (this.state === State.FRAG_LOADING && fragCurrent && fragLoaded.type === 'main' && fragLoaded.level === fragCurrent.level && fragLoaded.sn === fragCurrent.sn) {\n        var stats = data.stats,\n            currentLevel = this.levels[fragCurrent.level],\n            details = currentLevel.details;\n        _logger.logger.log('Loaded  ' + fragCurrent.sn + ' of [' + details.startSN + ' ,' + details.endSN + '],level ' + fragCurrent.level);\n        // reset frag bitrate test in any case after frag loaded event\n        this.bitrateTest = false;\n        // if this frag was loaded to perform a bitrate test AND if hls.nextLoadLevel is greater than 0\n        // then this means that we should be able to load a fragment at a higher quality level\n        if (fragLoaded.bitrateTest === true && this.hls.nextLoadLevel) {\n          // switch back to IDLE state ... we just loaded a fragment to determine adequate start bitrate and initialize autoswitch algo\n          this.state = State.IDLE;\n          this.startFragRequested = false;\n          stats.tparsed = stats.tbuffered = performance.now();\n          this.hls.trigger(_events2.default.FRAG_BUFFERED, { stats: stats, frag: fragCurrent, id: 'main' });\n          this.tick();\n        } else {\n          this.state = State.PARSING;\n          // transmux the MPEG-TS data to ISO-BMFF segments\n          this.stats = stats;\n          var duration = details.totalduration,\n              start = !isNaN(fragCurrent.startDTS) ? fragCurrent.startDTS : fragCurrent.start,\n              level = fragCurrent.level,\n              sn = fragCurrent.sn,\n              audioCodec = this.config.defaultAudioCodec || currentLevel.audioCodec;\n          if (this.audioCodecSwap) {\n            _logger.logger.log('swapping playlist audio codec');\n            if (audioCodec === undefined) {\n              audioCodec = this.lastAudioCodec;\n            }\n            if (audioCodec) {\n              if (audioCodec.indexOf('mp4a.40.5') !== -1) {\n                audioCodec = 'mp4a.40.2';\n              } else {\n                audioCodec = 'mp4a.40.5';\n              }\n            }\n          }\n          this.pendingBuffering = true;\n          this.appended = false;\n          _logger.logger.log('Parsing ' + sn + ' of [' + details.startSN + ' ,' + details.endSN + '],level ' + level + ', cc ' + fragCurrent.cc);\n          var demuxer = this.demuxer;\n          if (!demuxer) {\n            demuxer = this.demuxer = new _demuxer2.default(this.hls, 'main');\n          }\n          // time Offset is accurate if level PTS is known, or if playlist is not sliding (not live) and if media is not seeking (this is to overcome potential timestamp drifts between playlists and fragments)\n          var media = this.media;\n          var mediaSeeking = media && media.seeking;\n          var accurateTimeOffset = !mediaSeeking && (details.PTSKnown || !details.live);\n          demuxer.push(data.payload, audioCodec, currentLevel.videoCodec, start, fragCurrent.cc, level, sn, duration, fragCurrent.decryptdata, accurateTimeOffset, null);\n        }\n      }\n      this.fragLoadError = 0;\n    }\n  }, {\n    key: 'onFragParsingInitSegment',\n    value: function onFragParsingInitSegment(data) {\n      var fragCurrent = this.fragCurrent;\n      if (fragCurrent && data.id === 'main' && data.sn === fragCurrent.sn && data.level === fragCurrent.level && this.state === State.PARSING) {\n        var tracks = data.tracks,\n            trackName,\n            track;\n\n        // if audio track is expected to come from audio stream controller, discard any coming from main\n        if (tracks.audio && this.altAudio) {\n          delete tracks.audio;\n        }\n        // include levelCodec in audio and video tracks\n        track = tracks.audio;\n        if (track) {\n          var audioCodec = this.levels[this.level].audioCodec,\n              ua = navigator.userAgent.toLowerCase();\n          if (audioCodec && this.audioCodecSwap) {\n            _logger.logger.log('swapping playlist audio codec');\n            if (audioCodec.indexOf('mp4a.40.5') !== -1) {\n              audioCodec = 'mp4a.40.2';\n            } else {\n              audioCodec = 'mp4a.40.5';\n            }\n          }\n          // in case AAC and HE-AAC audio codecs are signalled in manifest\n          // force HE-AAC , as it seems that most browsers prefers that way,\n          // except for mono streams OR on FF\n          // these conditions might need to be reviewed ...\n          if (this.audioCodecSwitch) {\n            // don't force HE-AAC if mono stream\n            if (track.metadata.channelCount !== 1 &&\n            // don't force HE-AAC if firefox\n            ua.indexOf('firefox') === -1) {\n              audioCodec = 'mp4a.40.5';\n            }\n          }\n          // HE-AAC is broken on Android, always signal audio codec as AAC even if variant manifest states otherwise\n          if (ua.indexOf('android') !== -1 && track.container !== 'audio/mpeg') {\n            // Exclude mpeg audio\n            audioCodec = 'mp4a.40.2';\n            _logger.logger.log('Android: force audio codec to ' + audioCodec);\n          }\n          track.levelCodec = audioCodec;\n          track.id = data.id;\n        }\n        track = tracks.video;\n        if (track) {\n          track.levelCodec = this.levels[this.level].videoCodec;\n          track.id = data.id;\n        }\n\n        // if remuxer specify that a unique track needs to generated,\n        // let's merge all tracks together\n        if (data.unique) {\n          var mergedTrack = {\n            codec: '',\n            levelCodec: ''\n          };\n          for (trackName in data.tracks) {\n            track = tracks[trackName];\n            mergedTrack.container = track.container;\n            if (mergedTrack.codec) {\n              mergedTrack.codec += ',';\n              mergedTrack.levelCodec += ',';\n            }\n            if (track.codec) {\n              mergedTrack.codec += track.codec;\n            }\n            if (track.levelCodec) {\n              mergedTrack.levelCodec += track.levelCodec;\n            }\n          }\n          tracks = { audiovideo: mergedTrack };\n        }\n        this.hls.trigger(_events2.default.BUFFER_CODECS, tracks);\n        // loop through tracks that are going to be provided to bufferController\n        for (trackName in tracks) {\n          track = tracks[trackName];\n          _logger.logger.log('main track:' + trackName + ',container:' + track.container + ',codecs[level/parsed]=[' + track.levelCodec + '/' + track.codec + ']');\n          var initSegment = track.initSegment;\n          if (initSegment) {\n            this.appended = true;\n            // arm pending Buffering flag before appending a segment\n            this.pendingBuffering = true;\n            this.hls.trigger(_events2.default.BUFFER_APPENDING, { type: trackName, data: initSegment, parent: 'main', content: 'initSegment' });\n          }\n        }\n        //trigger handler right now\n        this.tick();\n      }\n    }\n  }, {\n    key: 'onFragParsingData',\n    value: function onFragParsingData(data) {\n      var _this2 = this;\n\n      var fragCurrent = this.fragCurrent;\n      if (fragCurrent && data.id === 'main' && data.sn === fragCurrent.sn && data.level === fragCurrent.level && !(data.type === 'audio' && this.altAudio) && // filter out main audio if audio track is loaded through audio stream controller\n      this.state === State.PARSING) {\n        var level = this.levels[this.level],\n            frag = this.fragCurrent;\n\n        _logger.logger.log('Parsed ' + data.type + ',PTS:[' + data.startPTS.toFixed(3) + ',' + data.endPTS.toFixed(3) + '],DTS:[' + data.startDTS.toFixed(3) + '/' + data.endDTS.toFixed(3) + '],nb:' + data.nb + ',dropped:' + (data.dropped || 0));\n\n        var drift = _levelHelper2.default.updateFragPTSDTS(level.details, frag.sn, data.startPTS, data.endPTS, data.startDTS, data.endDTS),\n            hls = this.hls;\n        hls.trigger(_events2.default.LEVEL_PTS_UPDATED, { details: level.details, level: this.level, drift: drift, type: data.type, start: data.startPTS, end: data.endPTS });\n\n        // has remuxer dropped video frames located before first keyframe ?\n        if (data.type === 'video') {\n          frag.dropped = data.dropped;\n        }\n\n        [data.data1, data.data2].forEach(function (buffer) {\n          if (buffer) {\n            _this2.appended = true;\n            // arm pending Buffering flag before appending a segment\n            _this2.pendingBuffering = true;\n            hls.trigger(_events2.default.BUFFER_APPENDING, { type: data.type, data: buffer, parent: 'main', content: 'data' });\n          }\n        });\n        //trigger handler right now\n        this.tick();\n      }\n    }\n  }, {\n    key: 'onFragParsed',\n    value: function onFragParsed(data) {\n      var fragCurrent = this.fragCurrent;\n      if (fragCurrent && data.id === 'main' && data.sn === fragCurrent.sn && data.level === fragCurrent.level && this.state === State.PARSING) {\n        this.stats.tparsed = performance.now();\n        this.state = State.PARSED;\n        this._checkAppendedParsed();\n      }\n    }\n  }, {\n    key: 'onAudioTrackSwitching',\n    value: function onAudioTrackSwitching(data) {\n      // if any URL found on new audio track, it is an alternate audio track\n      var altAudio = !!data.url,\n          trackId = data.id;\n      // if we switch on main audio, ensure that main fragment scheduling is synced with media.buffered\n      // don't do anything if we switch to alt audio: audio stream controller is handling it.\n      // we will just have to change buffer scheduling on audioTrackSwitched\n      if (!altAudio) {\n        if (this.mediaBuffer !== this.media) {\n          _logger.logger.log('switching on main audio, use media.buffered to schedule main fragment loading');\n          this.mediaBuffer = this.media;\n          var fragCurrent = this.fragCurrent;\n          // we need to refill audio buffer from main: cancel any frag loading to speed up audio switch\n          if (fragCurrent.loader) {\n            _logger.logger.log('switching to main audio track, cancel main fragment load');\n            fragCurrent.loader.abort();\n          }\n          this.fragCurrent = null;\n          this.fragPrevious = null;\n          // destroy demuxer to force init segment generation (following audio switch)\n          if (this.demuxer) {\n            this.demuxer.destroy();\n            this.demuxer = null;\n          }\n          // switch to IDLE state to load new fragment\n          this.state = State.IDLE;\n        }\n        var hls = this.hls;\n        // switching to main audio, flush all audio and trigger track switched\n        hls.trigger(_events2.default.BUFFER_FLUSHING, { startOffset: 0, endOffset: Number.POSITIVE_INFINITY, type: 'audio' });\n        hls.trigger(_events2.default.AUDIO_TRACK_SWITCHED, { id: trackId });\n        this.altAudio = false;\n      }\n    }\n  }, {\n    key: 'onAudioTrackSwitched',\n    value: function onAudioTrackSwitched(data) {\n      var trackId = data.id,\n          altAudio = !!this.hls.audioTracks[trackId].url;\n      if (altAudio) {\n        var videoBuffer = this.videoBuffer;\n        // if we switched on alternate audio, ensure that main fragment scheduling is synced with video sourcebuffer buffered\n        if (videoBuffer && this.mediaBuffer !== videoBuffer) {\n          _logger.logger.log('switching on alternate audio, use video.buffered to schedule main fragment loading');\n          this.mediaBuffer = videoBuffer;\n        }\n      }\n      this.altAudio = altAudio;\n      this.tick();\n    }\n  }, {\n    key: 'onBufferCreated',\n    value: function onBufferCreated(data) {\n      var tracks = data.tracks,\n          mediaTrack = void 0,\n          name = void 0,\n          alternate = false;\n      for (var type in tracks) {\n        var track = tracks[type];\n        if (track.id === 'main') {\n          name = type;\n          mediaTrack = track;\n          // keep video source buffer reference\n          if (type === 'video') {\n            this.videoBuffer = tracks[type].buffer;\n          }\n        } else {\n          alternate = true;\n        }\n      }\n      if (alternate && mediaTrack) {\n        _logger.logger.log('alternate track found, use ' + name + '.buffered to schedule main fragment loading');\n        this.mediaBuffer = mediaTrack.buffer;\n      } else {\n        this.mediaBuffer = this.media;\n      }\n    }\n  }, {\n    key: 'onBufferAppended',\n    value: function onBufferAppended(data) {\n      if (data.parent === 'main') {\n        var state = this.state;\n        if (state === State.PARSING || state === State.PARSED) {\n          // check if all buffers have been appended\n          this.pendingBuffering = data.pending > 0;\n          this._checkAppendedParsed();\n        }\n      }\n    }\n  }, {\n    key: '_checkAppendedParsed',\n    value: function _checkAppendedParsed() {\n      var _this3 = this;\n\n      //trigger handler right now\n      if (this.state === State.PARSED && (!this.appended || !this.pendingBuffering)) {\n        var frag = this.fragCurrent;\n        if (frag) {\n          (function () {\n            var media = _this3.mediaBuffer ? _this3.mediaBuffer : _this3.media;\n            _logger.logger.log('main buffered : ' + _timeRanges2.default.toString(media.buffered));\n            // filter potentially evicted bufferRange. this is to avoid memleak on live streams\n            var bufferRange = _this3.bufferRange.filter(function (range) {\n              return _bufferHelper2.default.isBuffered(media, (range.start + range.end) / 2);\n            });\n            // push new range\n            bufferRange.push({ type: frag.type, start: frag.startPTS, end: frag.endPTS, frag: frag });\n            // sort, as we use BinarySearch for lookup in getBufferRange ...\n            _this3.bufferRange = bufferRange.sort(function (a, b) {\n              return a.start - b.start;\n            });\n            _this3.fragPrevious = frag;\n            var stats = _this3.stats;\n            stats.tbuffered = performance.now();\n            // we should get rid of this.fragLastKbps\n            _this3.fragLastKbps = Math.round(8 * stats.total / (stats.tbuffered - stats.tfirst));\n            _this3.hls.trigger(_events2.default.FRAG_BUFFERED, { stats: stats, frag: frag, id: 'main' });\n            _this3.state = State.IDLE;\n          })();\n        }\n        this.tick();\n      }\n    }\n  }, {\n    key: 'onError',\n    value: function onError(data) {\n      var frag = data.frag || this.fragCurrent;\n      // don't handle frag error not related to main fragment\n      if (frag && frag.type !== 'main') {\n        return;\n      }\n      var media = this.media,\n\n      // 0.5 : tolerance needed as some browsers stalls playback before reaching buffered end\n      mediaBuffered = media && _bufferHelper2.default.isBuffered(media, media.currentTime) && _bufferHelper2.default.isBuffered(media, media.currentTime + 0.5);\n      switch (data.details) {\n        case _errors.ErrorDetails.FRAG_LOAD_ERROR:\n        case _errors.ErrorDetails.FRAG_LOAD_TIMEOUT:\n        case _errors.ErrorDetails.KEY_LOAD_ERROR:\n        case _errors.ErrorDetails.KEY_LOAD_TIMEOUT:\n          if (!data.fatal) {\n            var loadError = this.fragLoadError;\n            if (loadError) {\n              loadError++;\n            } else {\n              loadError = 1;\n            }\n            var config = this.config;\n            // keep retrying / don't raise fatal network error if current position is buffered or if in automode with current level not 0\n            if (loadError <= config.fragLoadingMaxRetry || mediaBuffered || frag.autoLevel && frag.level) {\n              this.fragLoadError = loadError;\n              // reset load counter to avoid frag loop loading error\n              frag.loadCounter = 0;\n              // exponential backoff capped to config.fragLoadingMaxRetryTimeout\n              var delay = Math.min(Math.pow(2, loadError - 1) * config.fragLoadingRetryDelay, config.fragLoadingMaxRetryTimeout);\n              _logger.logger.warn('mediaController: frag loading failed, retry in ' + delay + ' ms');\n              this.retryDate = performance.now() + delay;\n              // retry loading state\n              // if loadedmetadata is not set, it means that we are emergency switch down on first frag\n              // in that case, reset startFragRequested flag\n              if (!this.loadedmetadata) {\n                this.startFragRequested = false;\n                this.nextLoadPosition = this.startPosition;\n              }\n              this.state = State.FRAG_LOADING_WAITING_RETRY;\n            } else {\n              _logger.logger.error('mediaController: ' + data.details + ' reaches max retry, redispatch as fatal ...');\n              // redispatch same error but with fatal set to true\n              data.fatal = true;\n              this.hls.trigger(_events2.default.ERROR, data);\n              this.state = State.ERROR;\n            }\n          }\n          break;\n        case _errors.ErrorDetails.FRAG_LOOP_LOADING_ERROR:\n          if (!data.fatal) {\n            // if buffer is not empty\n            if (mediaBuffered) {\n              // try to reduce max buffer length : rationale is that we could get\n              // frag loop loading error because of buffer eviction\n              this._reduceMaxBufferLength(frag.duration);\n              this.state = State.IDLE;\n            } else {\n              // buffer empty. report as fatal if in manual mode or if lowest level.\n              // level controller takes care of emergency switch down logic\n              if (!frag.autoLevel || frag.level === 0) {\n                // redispatch same error but with fatal set to true\n                data.fatal = true;\n                this.hls.trigger(_events2.default.ERROR, data);\n                this.state = State.ERROR;\n              }\n            }\n          }\n          break;\n        case _errors.ErrorDetails.LEVEL_LOAD_ERROR:\n        case _errors.ErrorDetails.LEVEL_LOAD_TIMEOUT:\n          if (this.state !== State.ERROR) {\n            if (data.fatal) {\n              // if fatal error, stop processing\n              this.state = State.ERROR;\n              _logger.logger.warn('streamController: ' + data.details + ',switch to ' + this.state + ' state ...');\n            } else {\n              // in cas of non fatal error while waiting level load to be completed, switch back to IDLE\n              if (this.state === State.WAITING_LEVEL) {\n                this.state = State.IDLE;\n              }\n            }\n          }\n          break;\n        case _errors.ErrorDetails.BUFFER_FULL_ERROR:\n          // if in appending state\n          if (this.state === State.PARSING || this.state === State.PARSED) {\n            // reduce max buf len if current position is buffered\n            if (mediaBuffered) {\n              this._reduceMaxBufferLength(frag.duration);\n              this.state = State.IDLE;\n            } else {\n              // current position is not buffered, but browser is still complaining about buffer full error\n              // this happens on IE/Edge, refer to https://github.com/dailymotion/hls.js/pull/708\n              // in that case flush the whole buffer to recover\n              _logger.logger.warn('buffer full error also media.currentTime is not buffered, flush everything');\n              this.fragCurrent = null;\n              // flush everything\n              this.flushMainBuffer(0, Number.POSITIVE_INFINITY);\n            }\n          }\n          break;\n        default:\n          break;\n      }\n    }\n  }, {\n    key: '_reduceMaxBufferLength',\n    value: function _reduceMaxBufferLength(minLength) {\n      var config = this.config;\n      if (config.maxMaxBufferLength >= minLength) {\n        // reduce max buffer length as it might be too high. we do this to avoid loop flushing ...\n        config.maxMaxBufferLength /= 2;\n        _logger.logger.warn('reduce max buffer length to ' + config.maxMaxBufferLength + 's and switch to IDLE state');\n        // increase fragment load Index to avoid frag loop loading error after buffer flush\n        this.fragLoadIdx += 2 * config.fragLoadingLoopThreshold;\n      }\n    }\n  }, {\n    key: '_checkBuffer',\n    value: function _checkBuffer() {\n      var media = this.media;\n      // if ready state different from HAVE_NOTHING (numeric value 0), we are allowed to seek\n      if (media && media.readyState) {\n        var currentTime = media.currentTime,\n            mediaBuffer = this.mediaBuffer ? this.mediaBuffer : media,\n            buffered = mediaBuffer.buffered;\n        // adjust currentTime to start position on loaded metadata\n        if (!this.loadedmetadata && buffered.length && !media.seeking) {\n          this.loadedmetadata = true;\n          // only adjust currentTime if different from startPosition or if startPosition not buffered\n          // at that stage, there should be only one buffered range, as we reach that code after first fragment has been buffered\n          var startPosition = this.startPosition,\n              startPositionBuffered = _bufferHelper2.default.isBuffered(mediaBuffer, startPosition);\n          // if currentTime not matching with expected startPosition or startPosition not buffered\n          if (currentTime !== startPosition || !startPositionBuffered) {\n            _logger.logger.log('target start position:' + startPosition);\n            // if startPosition not buffered, let's seek to buffered.start(0)\n            if (!startPositionBuffered) {\n              startPosition = buffered.start(0);\n              _logger.logger.log('target start position not buffered, seek to buffered.start(0) ' + startPosition);\n            }\n            _logger.logger.log('adjust currentTime from ' + currentTime + ' to ' + startPosition);\n            media.currentTime = startPosition;\n          }\n        } else if (this.immediateSwitch) {\n          this.immediateLevelSwitchEnd();\n        } else {\n          var bufferInfo = _bufferHelper2.default.bufferInfo(media, currentTime, 0),\n              expectedPlaying = !(media.paused || // not playing when media is paused\n          media.ended || // not playing when media is ended\n          media.buffered.length === 0),\n              // not playing if nothing buffered\n          jumpThreshold = 0.5,\n              // tolerance needed as some browsers stalls playback before reaching buffered range end\n          playheadMoving = currentTime !== this.lastCurrentTime,\n              config = this.config;\n\n          if (playheadMoving) {\n            // played moving, but was previously stalled => now not stuck anymore\n            if (this.stallReported) {\n              _logger.logger.warn('playback not stuck anymore @' + currentTime + ', after ' + Math.round(performance.now() - this.stalled) + 'ms');\n              this.stallReported = false;\n            }\n            this.stalled = undefined;\n            this.nudgeRetry = 0;\n          } else {\n            // playhead not moving\n            if (expectedPlaying) {\n              // playhead not moving BUT media expected to play\n              var tnow = performance.now();\n              var hls = this.hls;\n              if (!this.stalled) {\n                // stall just detected, store current time\n                this.stalled = tnow;\n                this.stallReported = false;\n              } else {\n                // playback already stalled, check stalling duration\n                // if stalling for more than a given threshold, let's try to recover\n                var stalledDuration = tnow - this.stalled;\n                var bufferLen = bufferInfo.len;\n                var nudgeRetry = this.nudgeRetry || 0;\n                // have we reached stall deadline ?\n                if (bufferLen <= jumpThreshold && stalledDuration > config.lowBufferWatchdogPeriod * 1000) {\n                  // report stalled error once\n                  if (!this.stallReported) {\n                    this.stallReported = true;\n                    _logger.logger.warn('playback stalling in low buffer @' + currentTime);\n                    hls.trigger(_events2.default.ERROR, { type: _errors.ErrorTypes.MEDIA_ERROR, details: _errors.ErrorDetails.BUFFER_STALLED_ERROR, fatal: false, buffer: bufferLen });\n                  }\n                  // if buffer len is below threshold, try to jump to start of next buffer range if close\n                  // no buffer available @ currentTime, check if next buffer is close (within a config.maxSeekHole second range)\n                  var nextBufferStart = bufferInfo.nextStart,\n                      delta = nextBufferStart - currentTime;\n                  if (nextBufferStart && delta < config.maxSeekHole && delta > 0) {\n                    this.nudgeRetry = ++nudgeRetry;\n                    var nudgeOffset = nudgeRetry * config.nudgeOffset;\n                    // next buffer is close ! adjust currentTime to nextBufferStart\n                    // this will ensure effective video decoding\n                    _logger.logger.log('adjust currentTime from ' + media.currentTime + ' to next buffered @ ' + nextBufferStart + ' + nudge ' + nudgeOffset);\n                    media.currentTime = nextBufferStart + nudgeOffset;\n                    // reset stalled so to rearm watchdog timer\n                    this.stalled = undefined;\n                    hls.trigger(_events2.default.ERROR, { type: _errors.ErrorTypes.MEDIA_ERROR, details: _errors.ErrorDetails.BUFFER_SEEK_OVER_HOLE, fatal: false, hole: nextBufferStart + nudgeOffset - currentTime });\n                  }\n                } else if (bufferLen > jumpThreshold && stalledDuration > config.highBufferWatchdogPeriod * 1000) {\n                  // report stalled error once\n                  if (!this.stallReported) {\n                    this.stallReported = true;\n                    _logger.logger.warn('playback stalling in high buffer @' + currentTime);\n                    hls.trigger(_events2.default.ERROR, { type: _errors.ErrorTypes.MEDIA_ERROR, details: _errors.ErrorDetails.BUFFER_STALLED_ERROR, fatal: false, buffer: bufferLen });\n                  }\n                  // reset stalled so to rearm watchdog timer\n                  this.stalled = undefined;\n                  this.nudgeRetry = ++nudgeRetry;\n                  if (nudgeRetry < config.nudgeMaxRetry) {\n                    var _currentTime = media.currentTime;\n                    var targetTime = _currentTime + nudgeRetry * config.nudgeOffset;\n                    _logger.logger.log('adjust currentTime from ' + _currentTime + ' to ' + targetTime);\n                    // playback stalled in buffered area ... let's nudge currentTime to try to overcome this\n                    media.currentTime = targetTime;\n                    hls.trigger(_events2.default.ERROR, { type: _errors.ErrorTypes.MEDIA_ERROR, details: _errors.ErrorDetails.BUFFER_NUDGE_ON_STALL, fatal: false });\n                  } else {\n                    _logger.logger.error('still stuck in high buffer @' + currentTime + ' after ' + config.nudgeMaxRetry + ', raise fatal error');\n                    hls.trigger(_events2.default.ERROR, { type: _errors.ErrorTypes.MEDIA_ERROR, details: _errors.ErrorDetails.BUFFER_STALLED_ERROR, fatal: true });\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }, {\n    key: 'onFragLoadEmergencyAborted',\n    value: function onFragLoadEmergencyAborted() {\n      this.state = State.IDLE;\n      // if loadedmetadata is not set, it means that we are emergency switch down on first frag\n      // in that case, reset startFragRequested flag\n      if (!this.loadedmetadata) {\n        this.startFragRequested = false;\n        this.nextLoadPosition = this.startPosition;\n      }\n      this.tick();\n    }\n  }, {\n    key: 'onBufferFlushed',\n    value: function onBufferFlushed() {\n      /* after successful buffer flushing, filter flushed fragments from bufferRange\n        use mediaBuffered instead of media (so that we will check against video.buffered ranges in case of alt audio track)\n      */\n      var media = this.mediaBuffer ? this.mediaBuffer : this.media;\n      this.bufferRange = this.bufferRange.filter(function (range) {\n        return _bufferHelper2.default.isBuffered(media, (range.start + range.end) / 2);\n      });\n\n      // increase fragment load Index to avoid frag loop loading error after buffer flush\n      this.fragLoadIdx += 2 * this.config.fragLoadingLoopThreshold;\n      // move to IDLE once flush complete. this should trigger new fragment loading\n      this.state = State.IDLE;\n      // reset reference to frag\n      this.fragPrevious = null;\n    }\n  }, {\n    key: 'swapAudioCodec',\n    value: function swapAudioCodec() {\n      this.audioCodecSwap = !this.audioCodecSwap;\n    }\n  }, {\n    key: 'computeLivePosition',\n    value: function computeLivePosition(sliding, levelDetails) {\n      var targetLatency = this.config.liveSyncDuration !== undefined ? this.config.liveSyncDuration : this.config.liveSyncDurationCount * levelDetails.targetduration;\n      return sliding + Math.max(0, levelDetails.totalduration - targetLatency);\n    }\n  }, {\n    key: 'state',\n    set: function set(nextState) {\n      if (this.state !== nextState) {\n        var previousState = this.state;\n        this._state = nextState;\n        _logger.logger.log('main stream:' + previousState + '->' + nextState);\n        this.hls.trigger(_events2.default.STREAM_STATE_TRANSITION, { previousState: previousState, nextState: nextState });\n      }\n    },\n    get: function get() {\n      return this._state;\n    }\n  }, {\n    key: 'currentLevel',\n    get: function get() {\n      var media = this.media;\n      if (media) {\n        var range = this.getBufferRange(media.currentTime);\n        if (range) {\n          return range.frag.level;\n        }\n      }\n      return -1;\n    }\n  }, {\n    key: 'nextBufferRange',\n    get: function get() {\n      var media = this.media;\n      if (media) {\n        // first get end range of current fragment\n        return this.followingBufferRange(this.getBufferRange(media.currentTime));\n      } else {\n        return null;\n      }\n    }\n  }, {\n    key: 'nextLevel',\n    get: function get() {\n      var range = this.nextBufferRange;\n      if (range) {\n        return range.frag.level;\n      } else {\n        return -1;\n      }\n    }\n  }, {\n    key: 'liveSyncPosition',\n    get: function get() {\n      return this._liveSyncPosition;\n    },\n    set: function set(value) {\n      this._liveSyncPosition = value;\n    }\n  }]);\n\n  return StreamController;\n}(_eventHandler2.default);\n\nexports.default = StreamController;\n\n},{\"22\":22,\"26\":26,\"27\":27,\"28\":28,\"30\":30,\"31\":31,\"41\":41,\"45\":45,\"46\":46}],13:[function(_dereq_,module,exports){\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _events = _dereq_(28);\n\nvar _events2 = _interopRequireDefault(_events);\n\nvar _eventHandler = _dereq_(27);\n\nvar _eventHandler2 = _interopRequireDefault(_eventHandler);\n\nvar _cea608Parser = _dereq_(42);\n\nvar _cea608Parser2 = _interopRequireDefault(_cea608Parser);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /*\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * Timeline Controller\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               */\n\nvar TimelineController = function (_EventHandler) {\n  _inherits(TimelineController, _EventHandler);\n\n  function TimelineController(hls) {\n    _classCallCheck(this, TimelineController);\n\n    var _this = _possibleConstructorReturn(this, (TimelineController.__proto__ || Object.getPrototypeOf(TimelineController)).call(this, hls, _events2.default.MEDIA_ATTACHING, _events2.default.MEDIA_DETACHING, _events2.default.FRAG_PARSING_USERDATA, _events2.default.MANIFEST_LOADING, _events2.default.FRAG_LOADED, _events2.default.LEVEL_SWITCH));\n\n    _this.hls = hls;\n    _this.config = hls.config;\n    _this.enabled = true;\n    _this.Cues = hls.config.cueHandler;\n\n    if (_this.config.enableCEA708Captions) {\n      var self = _this;\n      var sendAddTrackEvent = function sendAddTrackEvent(track, media) {\n        var e = null;\n        try {\n          e = new window.Event('addtrack');\n        } catch (err) {\n          //for IE11\n          e = document.createEvent('Event');\n          e.initEvent('addtrack', false, false);\n        }\n        e.track = track;\n        media.dispatchEvent(e);\n      };\n\n      var channel1 = {\n        'newCue': function newCue(startTime, endTime, screen) {\n          if (!self.textTrack1) {\n            //Enable reuse of existing text track.\n            var existingTrack1 = self.getExistingTrack('1');\n            if (!existingTrack1) {\n              self.textTrack1 = self.createTextTrack('captions', 'English', 'en');\n              self.textTrack1.textTrack1 = true;\n            } else {\n              self.textTrack1 = existingTrack1;\n              self.clearCurrentCues(self.textTrack1);\n\n              sendAddTrackEvent(self.textTrack1, self.media);\n            }\n          }\n\n          self.Cues.newCue(self.textTrack1, startTime, endTime, screen);\n        }\n      };\n\n      var channel2 = {\n        'newCue': function newCue(startTime, endTime, screen) {\n          if (!self.textTrack2) {\n            //Enable reuse of existing text track.\n            var existingTrack2 = self.getExistingTrack('2');\n            if (!existingTrack2) {\n              self.textTrack2 = self.createTextTrack('captions', 'Spanish', 'es');\n              self.textTrack2.textTrack2 = true;\n            } else {\n              self.textTrack2 = existingTrack2;\n              self.clearCurrentCues(self.textTrack2);\n\n              sendAddTrackEvent(self.textTrack2, self.media);\n            }\n          }\n\n          self.Cues.newCue(self.textTrack2, startTime, endTime, screen);\n        }\n      };\n\n      _this.cea608Parser = new _cea608Parser2.default(0, channel1, channel2);\n    }\n    return _this;\n  }\n\n  _createClass(TimelineController, [{\n    key: 'clearCurrentCues',\n    value: function clearCurrentCues(track) {\n      if (track && track.cues) {\n        while (track.cues.length > 0) {\n          track.removeCue(track.cues[0]);\n        }\n      }\n    }\n  }, {\n    key: 'getExistingTrack',\n    value: function getExistingTrack(channelNumber) {\n      var media = this.media;\n      if (media) {\n        for (var i = 0; i < media.textTracks.length; i++) {\n          var textTrack = media.textTracks[i];\n          var propName = 'textTrack' + channelNumber;\n          if (textTrack[propName] === true) {\n            return textTrack;\n          }\n        }\n      }\n      return null;\n    }\n  }, {\n    key: 'createTextTrack',\n    value: function createTextTrack(kind, label, lang) {\n      if (this.media) {\n        return this.media.addTextTrack(kind, label, lang);\n      }\n    }\n  }, {\n    key: 'destroy',\n    value: function destroy() {\n      _eventHandler2.default.prototype.destroy.call(this);\n    }\n  }, {\n    key: 'onMediaAttaching',\n    value: function onMediaAttaching(data) {\n      this.media = data.media;\n    }\n  }, {\n    key: 'onMediaDetaching',\n    value: function onMediaDetaching() {\n      this.clearCurrentCues(this.textTrack1);\n      this.clearCurrentCues(this.textTrack2);\n    }\n  }, {\n    key: 'onManifestLoading',\n    value: function onManifestLoading() {\n      this.lastPts = Number.NEGATIVE_INFINITY;\n    }\n  }, {\n    key: 'onLevelSwitch',\n    value: function onLevelSwitch() {\n      if (this.hls.currentLevel.closedCaptions === 'NONE') {\n        this.enabled = false;\n      } else {\n        this.enabled = true;\n      }\n    }\n  }, {\n    key: 'onFragLoaded',\n    value: function onFragLoaded(data) {\n      if (data.frag.type === 'main') {\n        var pts = data.frag.start; //Number.POSITIVE_INFINITY;\n        // if this is a frag for a previously loaded timerange, remove all captions\n        // TODO: consider just removing captions for the timerange\n        if (pts <= this.lastPts) {\n          this.clearCurrentCues(this.textTrack1);\n          this.clearCurrentCues(this.textTrack2);\n        }\n        this.lastPts = pts;\n      }\n    }\n  }, {\n    key: 'onFragParsingUserdata',\n    value: function onFragParsingUserdata(data) {\n      // push all of the CEA-708 messages into the interpreter\n      // immediately. It will create the proper timestamps based on our PTS value\n      if (this.enabled && this.config.enableCEA708Captions) {\n        for (var i = 0; i < data.samples.length; i++) {\n          var ccdatas = this.extractCea608Data(data.samples[i].bytes);\n          this.cea608Parser.addData(data.samples[i].pts, ccdatas);\n        }\n      }\n    }\n  }, {\n    key: 'extractCea608Data',\n    value: function extractCea608Data(byteArray) {\n      var count = byteArray[0] & 31;\n      var position = 2;\n      var tmpByte, ccbyte1, ccbyte2, ccValid, ccType;\n      var actualCCBytes = [];\n\n      for (var j = 0; j < count; j++) {\n        tmpByte = byteArray[position++];\n        ccbyte1 = 0x7F & byteArray[position++];\n        ccbyte2 = 0x7F & byteArray[position++];\n        ccValid = (4 & tmpByte) === 0 ? false : true;\n        ccType = 3 & tmpByte;\n\n        if (ccbyte1 === 0 && ccbyte2 === 0) {\n          continue;\n        }\n\n        if (ccValid) {\n          if (ccType === 0) // || ccType === 1\n            {\n              actualCCBytes.push(ccbyte1);\n              actualCCBytes.push(ccbyte2);\n            }\n        }\n      }\n      return actualCCBytes;\n    }\n  }]);\n\n  return TimelineController;\n}(_eventHandler2.default);\n\nexports.default = TimelineController;\n\n},{\"27\":27,\"28\":28,\"42\":42}],14:[function(_dereq_,module,exports){\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar AESCrypto = function () {\n  function AESCrypto(subtle, iv) {\n    _classCallCheck(this, AESCrypto);\n\n    this.subtle = subtle;\n    this.aesIV = iv;\n  }\n\n  _createClass(AESCrypto, [{\n    key: 'decrypt',\n    value: function decrypt(data, key) {\n      return this.subtle.decrypt({ name: 'AES-CBC', iv: this.aesIV }, key, data);\n    }\n  }]);\n\n  return AESCrypto;\n}();\n\nexports.default = AESCrypto;\n\n},{}],15:[function(_dereq_,module,exports){\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar AESDecryptor = function () {\n  function AESDecryptor() {\n    _classCallCheck(this, AESDecryptor);\n\n    // Static after running initTable\n    this.rcon = [0x0, 0x1, 0x2, 0x4, 0x8, 0x10, 0x20, 0x40, 0x80, 0x1b, 0x36];\n\n    this.subMix = [];\n    this.subMix[0] = new Uint32Array(256);\n    this.subMix[1] = new Uint32Array(256);\n    this.subMix[2] = new Uint32Array(256);\n    this.subMix[3] = new Uint32Array(256);\n\n    this.invSubMix = [];\n    this.invSubMix[0] = new Uint32Array(256);\n    this.invSubMix[1] = new Uint32Array(256);\n    this.invSubMix[2] = new Uint32Array(256);\n    this.invSubMix[3] = new Uint32Array(256);\n\n    this.sBox = new Uint32Array(256);\n    this.invSBox = new Uint32Array(256);\n\n    // Changes during runtime\n    this.key = new Uint32Array(0);\n\n    this.initTable();\n  }\n\n  // Using view.getUint32() also swaps the byte order.\n\n\n  _createClass(AESDecryptor, [{\n    key: 'uint8ArrayToUint32Array_',\n    value: function uint8ArrayToUint32Array_(arrayBuffer) {\n      var view = new DataView(arrayBuffer);\n      var newArray = new Uint32Array(4);\n      for (var i = 0; i < newArray.length; i++) {\n        newArray[i] = view.getUint32(i * 4);\n      }\n      return newArray;\n    }\n  }, {\n    key: 'initTable',\n    value: function initTable() {\n      var sBox = this.sBox;\n      var invSBox = this.invSBox;\n      var subMix0 = this.subMix[0];\n      var subMix1 = this.subMix[1];\n      var subMix2 = this.subMix[2];\n      var subMix3 = this.subMix[3];\n      var invSubMix0 = this.invSubMix[0];\n      var invSubMix1 = this.invSubMix[1];\n      var invSubMix2 = this.invSubMix[2];\n      var invSubMix3 = this.invSubMix[3];\n\n      var d = new Uint32Array(256);\n      var x = 0;\n      var xi = 0;\n      var i = 0;\n      for (i = 0; i < 256; i++) {\n        if (i < 128) {\n          d[i] = i << 1;\n        } else {\n          d[i] = i << 1 ^ 0x11b;\n        }\n      }\n\n      for (i = 0; i < 256; i++) {\n        var sx = xi ^ xi << 1 ^ xi << 2 ^ xi << 3 ^ xi << 4;\n        sx = sx >>> 8 ^ sx & 0xff ^ 0x63;\n        sBox[x] = sx;\n        invSBox[sx] = x;\n\n        // Compute multiplication\n        var x2 = d[x];\n        var x4 = d[x2];\n        var x8 = d[x4];\n\n        // Compute sub/invSub bytes, mix columns tables\n        var t = d[sx] * 0x101 ^ sx * 0x1010100;\n        subMix0[x] = t << 24 | t >>> 8;\n        subMix1[x] = t << 16 | t >>> 16;\n        subMix2[x] = t << 8 | t >>> 24;\n        subMix3[x] = t;\n\n        // Compute inv sub bytes, inv mix columns tables\n        t = x8 * 0x1010101 ^ x4 * 0x10001 ^ x2 * 0x101 ^ x * 0x1010100;\n        invSubMix0[sx] = t << 24 | t >>> 8;\n        invSubMix1[sx] = t << 16 | t >>> 16;\n        invSubMix2[sx] = t << 8 | t >>> 24;\n        invSubMix3[sx] = t;\n\n        // Compute next counter\n        if (!x) {\n          x = xi = 1;\n        } else {\n          x = x2 ^ d[d[d[x8 ^ x2]]];\n          xi ^= d[d[xi]];\n        }\n      }\n    }\n  }, {\n    key: 'expandKey',\n    value: function expandKey(keyBuffer) {\n      // convert keyBuffer to Uint32Array\n      var key = this.uint8ArrayToUint32Array_(keyBuffer);\n      var sameKey = true;\n      var offset = 0;\n\n      while (offset < key.length && sameKey) {\n        sameKey = key[offset] === this.key[offset];\n        offset++;\n      }\n\n      if (sameKey) {\n        return;\n      }\n\n      this.key = key;\n      var keySize = this.keySize = key.length;\n\n      if (keySize !== 4 && keySize !== 6 && keySize !== 8) {\n        throw new Error('Invalid aes key size=' + keySize);\n      }\n\n      var ksRows = this.ksRows = (keySize + 6 + 1) * 4;\n      var ksRow = void 0;\n      var invKsRow = void 0;\n\n      var keySchedule = this.keySchedule = new Uint32Array(this.ksRows);\n      var invKeySchedule = this.invKeySchedule = new Uint32Array(this.ksRows);\n      var sbox = this.sBox;\n      var rcon = this.rcon;\n\n      var invSubMix0 = this.invSubMix[0];\n      var invSubMix1 = this.invSubMix[1];\n      var invSubMix2 = this.invSubMix[2];\n      var invSubMix3 = this.invSubMix[3];\n\n      var prev = void 0;\n      var t = void 0;\n\n      for (ksRow = 0; ksRow < ksRows; ksRow++) {\n        if (ksRow < keySize) {\n          prev = keySchedule[ksRow] = key[ksRow];\n          continue;\n        }\n        t = prev;\n\n        if (ksRow % keySize === 0) {\n          // Rot word\n          t = t << 8 | t >>> 24;\n\n          // Sub word\n          t = sbox[t >>> 24] << 24 | sbox[t >>> 16 & 0xff] << 16 | sbox[t >>> 8 & 0xff] << 8 | sbox[t & 0xff];\n\n          // Mix Rcon\n          t ^= rcon[ksRow / keySize | 0] << 24;\n        } else if (keySize > 6 && ksRow % keySize === 4) {\n          // Sub word\n          t = sbox[t >>> 24] << 24 | sbox[t >>> 16 & 0xff] << 16 | sbox[t >>> 8 & 0xff] << 8 | sbox[t & 0xff];\n        }\n\n        keySchedule[ksRow] = prev = (keySchedule[ksRow - keySize] ^ t) >>> 0;\n      }\n\n      for (invKsRow = 0; invKsRow < ksRows; invKsRow++) {\n        ksRow = ksRows - invKsRow;\n        if (invKsRow & 3) {\n          t = keySchedule[ksRow];\n        } else {\n          t = keySchedule[ksRow - 4];\n        }\n\n        if (invKsRow < 4 || ksRow <= 4) {\n          invKeySchedule[invKsRow] = t;\n        } else {\n          invKeySchedule[invKsRow] = invSubMix0[sbox[t >>> 24]] ^ invSubMix1[sbox[t >>> 16 & 0xff]] ^ invSubMix2[sbox[t >>> 8 & 0xff]] ^ invSubMix3[sbox[t & 0xff]];\n        }\n\n        invKeySchedule[invKsRow] = invKeySchedule[invKsRow] >>> 0;\n      }\n    }\n\n    // Adding this as a method greatly improves performance.\n\n  }, {\n    key: 'networkToHostOrderSwap',\n    value: function networkToHostOrderSwap(word) {\n      return word << 24 | (word & 0xff00) << 8 | (word & 0xff0000) >> 8 | word >>> 24;\n    }\n  }, {\n    key: 'decrypt',\n    value: function decrypt(inputArrayBuffer, offset, aesIV) {\n      var nRounds = this.keySize + 6;\n      var invKeySchedule = this.invKeySchedule;\n      var invSBOX = this.invSBox;\n\n      var invSubMix0 = this.invSubMix[0];\n      var invSubMix1 = this.invSubMix[1];\n      var invSubMix2 = this.invSubMix[2];\n      var invSubMix3 = this.invSubMix[3];\n\n      var initVector = this.uint8ArrayToUint32Array_(aesIV);\n      var initVector0 = initVector[0];\n      var initVector1 = initVector[1];\n      var initVector2 = initVector[2];\n      var initVector3 = initVector[3];\n\n      var inputInt32 = new Int32Array(inputArrayBuffer);\n      var outputInt32 = new Int32Array(inputInt32.length);\n\n      var t0 = void 0,\n          t1 = void 0,\n          t2 = void 0,\n          t3 = void 0;\n      var s0 = void 0,\n          s1 = void 0,\n          s2 = void 0,\n          s3 = void 0;\n      var inputWords0 = void 0,\n          inputWords1 = void 0,\n          inputWords2 = void 0,\n          inputWords3 = void 0;\n\n      var ksRow, i;\n\n      while (offset < inputInt32.length) {\n        inputWords0 = this.networkToHostOrderSwap(inputInt32[offset]);\n        inputWords1 = this.networkToHostOrderSwap(inputInt32[offset + 1]);\n        inputWords2 = this.networkToHostOrderSwap(inputInt32[offset + 2]);\n        inputWords3 = this.networkToHostOrderSwap(inputInt32[offset + 3]);\n\n        s0 = inputWords0 ^ invKeySchedule[0];\n        s1 = inputWords3 ^ invKeySchedule[1];\n        s2 = inputWords2 ^ invKeySchedule[2];\n        s3 = inputWords1 ^ invKeySchedule[3];\n\n        ksRow = 4;\n\n        // Iterate through the rounds of decryption\n        for (i = 1; i < nRounds; i++) {\n          t0 = invSubMix0[s0 >>> 24] ^ invSubMix1[s1 >> 16 & 0xff] ^ invSubMix2[s2 >> 8 & 0xff] ^ invSubMix3[s3 & 0xff] ^ invKeySchedule[ksRow];\n          t1 = invSubMix0[s1 >>> 24] ^ invSubMix1[s2 >> 16 & 0xff] ^ invSubMix2[s3 >> 8 & 0xff] ^ invSubMix3[s0 & 0xff] ^ invKeySchedule[ksRow + 1];\n          t2 = invSubMix0[s2 >>> 24] ^ invSubMix1[s3 >> 16 & 0xff] ^ invSubMix2[s0 >> 8 & 0xff] ^ invSubMix3[s1 & 0xff] ^ invKeySchedule[ksRow + 2];\n          t3 = invSubMix0[s3 >>> 24] ^ invSubMix1[s0 >> 16 & 0xff] ^ invSubMix2[s1 >> 8 & 0xff] ^ invSubMix3[s2 & 0xff] ^ invKeySchedule[ksRow + 3];\n          // Update state\n          s0 = t0;\n          s1 = t1;\n          s2 = t2;\n          s3 = t3;\n\n          ksRow = ksRow + 4;\n        }\n\n        // Shift rows, sub bytes, add round key\n        t0 = invSBOX[s0 >>> 24] << 24 ^ invSBOX[s1 >> 16 & 0xff] << 16 ^ invSBOX[s2 >> 8 & 0xff] << 8 ^ invSBOX[s3 & 0xff] ^ invKeySchedule[ksRow];\n        t1 = invSBOX[s1 >>> 24] << 24 ^ invSBOX[s2 >> 16 & 0xff] << 16 ^ invSBOX[s3 >> 8 & 0xff] << 8 ^ invSBOX[s0 & 0xff] ^ invKeySchedule[ksRow + 1];\n        t2 = invSBOX[s2 >>> 24] << 24 ^ invSBOX[s3 >> 16 & 0xff] << 16 ^ invSBOX[s0 >> 8 & 0xff] << 8 ^ invSBOX[s1 & 0xff] ^ invKeySchedule[ksRow + 2];\n        t3 = invSBOX[s3 >>> 24] << 24 ^ invSBOX[s0 >> 16 & 0xff] << 16 ^ invSBOX[s1 >> 8 & 0xff] << 8 ^ invSBOX[s2 & 0xff] ^ invKeySchedule[ksRow + 3];\n        ksRow = ksRow + 3;\n\n        // Write\n        outputInt32[offset] = this.networkToHostOrderSwap(t0 ^ initVector0);\n        outputInt32[offset + 1] = this.networkToHostOrderSwap(t3 ^ initVector1);\n        outputInt32[offset + 2] = this.networkToHostOrderSwap(t2 ^ initVector2);\n        outputInt32[offset + 3] = this.networkToHostOrderSwap(t1 ^ initVector3);\n\n        // reset initVector to last 4 unsigned int\n        initVector0 = inputWords0;\n        initVector1 = inputWords1;\n        initVector2 = inputWords2;\n        initVector3 = inputWords3;\n\n        offset = offset + 4;\n      }\n\n      return outputInt32.buffer;\n    }\n  }, {\n    key: 'destroy',\n    value: function destroy() {\n      this.key = undefined;\n      this.keySize = undefined;\n      this.ksRows = undefined;\n\n      this.sBox = undefined;\n      this.invSBox = undefined;\n      this.subMix = undefined;\n      this.invSubMix = undefined;\n      this.keySchedule = undefined;\n      this.invKeySchedule = undefined;\n\n      this.rcon = undefined;\n    }\n  }]);\n\n  return AESDecryptor;\n}();\n\nexports.default = AESDecryptor;\n\n},{}],16:[function(_dereq_,module,exports){\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _aesCrypto = _dereq_(14);\n\nvar _aesCrypto2 = _interopRequireDefault(_aesCrypto);\n\nvar _fastAesKey = _dereq_(17);\n\nvar _fastAesKey2 = _interopRequireDefault(_fastAesKey);\n\nvar _aesDecryptor = _dereq_(15);\n\nvar _aesDecryptor2 = _interopRequireDefault(_aesDecryptor);\n\nvar _errors = _dereq_(26);\n\nvar _logger = _dereq_(45);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n/*globals self: false */\n\nvar Decrypter = function () {\n  function Decrypter(observer, config) {\n    _classCallCheck(this, Decrypter);\n\n    this.observer = observer;\n    this.config = config;\n    try {\n      var browserCrypto = crypto ? crypto : self.crypto;\n      this.subtle = browserCrypto.subtle || browserCrypto.webkitSubtle;\n    } catch (e) {}\n    this.disableWebCrypto = !this.subtle;\n  }\n\n  _createClass(Decrypter, [{\n    key: 'decrypt',\n    value: function decrypt(data, key, iv, callback) {\n      var _this = this;\n\n      if (this.disableWebCrypto && this.config.enableSoftwareAES) {\n        _logger.logger.log('JS AES decrypt');\n        var decryptor = this.decryptor;\n        if (!decryptor) {\n          this.decryptor = decryptor = new _aesDecryptor2.default();\n        }\n        decryptor.expandKey(key);\n        callback(decryptor.decrypt(data, 0, iv));\n      } else {\n        (function () {\n          _logger.logger.log('WebCrypto AES decrypt');\n          var subtle = _this.subtle;\n          if (_this.key !== key) {\n            _this.key = key;\n            _this.fastAesKey = new _fastAesKey2.default(subtle, key);\n          }\n\n          _this.fastAesKey.expandKey().then(function (aesKey) {\n            // decrypt using web crypto\n            var crypto = new _aesCrypto2.default(subtle, iv);\n            crypto.decrypt(data, aesKey).then(function (result) {\n              callback(result);\n            });\n          }).catch(function (err) {\n            _this.onWebCryptoError(err, data, key, iv, callback);\n          });\n        })();\n      }\n    }\n  }, {\n    key: 'onWebCryptoError',\n    value: function onWebCryptoError(err, data, key, iv, callback) {\n      if (this.config.enableSoftwareAES) {\n        _logger.logger.log('WebCrypto Error, disable WebCrypto API');\n        this.disableWebCrypto = true;\n        this.decrypt(data, key, iv, callback);\n      } else {\n        _logger.logger.error('decrypting error : ' + err.message);\n        this.observer.trigger(Event.ERROR, { type: _errors.ErrorTypes.MEDIA_ERROR, details: _errors.ErrorDetails.FRAG_DECRYPT_ERROR, fatal: true, reason: err.message });\n      }\n    }\n  }, {\n    key: 'destroy',\n    value: function destroy() {\n      var decryptor = this.decryptor;\n      if (decryptor) {\n        decryptor.destroy();\n        this.decryptor = undefined;\n      }\n    }\n  }]);\n\n  return Decrypter;\n}();\n\nexports.default = Decrypter;\n\n},{\"14\":14,\"15\":15,\"17\":17,\"26\":26,\"45\":45}],17:[function(_dereq_,module,exports){\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar FastAESKey = function () {\n  function FastAESKey(subtle, key) {\n    _classCallCheck(this, FastAESKey);\n\n    this.subtle = subtle;\n    this.key = key;\n  }\n\n  _createClass(FastAESKey, [{\n    key: 'expandKey',\n    value: function expandKey() {\n      return this.subtle.importKey('raw', this.key, { name: 'AES-CBC' }, false, ['encrypt', 'decrypt']);\n    }\n  }]);\n\n  return FastAESKey;\n}();\n\nexports.default = FastAESKey;\n\n},{}],18:[function(_dereq_,module,exports){\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }(); /**\ndemuxer\nn\n\nvar _adts = _dereq_(19);\n\nvar _adts2 = _interopRequireDefault(_adts);\n\nvar _logger = _dereq_(45);\n\nvar _id = _dereq_(24);\n\nvar _id2 = _interopRequireDefault(_id);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar AACDemuxer = function () {\n  function AACDemuxer(observer, id, remuxerClass, config, typeSupported) {\n    _classCallCheck(this, AACDemuxer);\n\n    this.observer = observer;\n    this.id = id;\n    this.remuxerClass = remuxerClass;\n    this.config = config;\n    this.remuxer = new this.remuxerClass(observer, id, config, typeSupported);\n    this.insertDiscontinuity();\n  }\n\n  _createClass(AACDemuxer, [{\n    key: 'insertDiscontinuity',\n    value: function insertDiscontinuity() {\n      this._aacTrack = { container: 'audio/adts', type: 'audio', id: -1, sequenceNumber: 0, isAAC: true, samples: [], len: 0 };\n    }\n  }, {\n    key: 'push',\n\n\n    // feed incoming data to the front of the parsing pipeline\n    value: function push(data, audioCodec, videoCodec, timeOffset, cc, level, sn, duration, accurateTimeOffset, defaultInitPTS) {\n      var track,\n          id3 = new _id2.default(data),\n          pts = 90 * id3.timeStamp,\n          config,\n          frameLength,\n          frameDuration,\n          frameIndex,\n          offset,\n          headerLength,\n          stamp,\n          len,\n          aacSample;\n\n      var contiguous = false;\n      if (cc !== this.lastCC) {\n        _logger.logger.log(this.id + ' discontinuity detected');\n        this.lastCC = cc;\n        this.insertDiscontinuity();\n        this.remuxer.switchLevel();\n        this.remuxer.insertDiscontinuity();\n      } else if (level !== this.lastLevel) {\n        _logger.logger.log('audio track switch detected');\n        this.lastLevel = level;\n        this.remuxer.switchLevel();\n        this.insertDiscontinuity();\n      } else if (sn === this.lastSN + 1) {\n        contiguous = true;\n      }\n      track = this._aacTrack;\n      this.lastSN = sn;\n      this.lastLevel = level;\n\n      // look for ADTS header (0xFFFx)\n      for (offset = id3.length, len = data.length; offset < len - 1; offset++) {\n        if (data[offset] === 0xff && (data[offset + 1] & 0xf0) === 0xf0) {\n          break;\n        }\n      }\n\n      if (!track.audiosamplerate) {\n        config = _adts2.default.getAudioConfig(this.observer, data, offset, audioCodec);\n        track.config = config.config;\n        track.audiosamplerate = config.samplerate;\n        track.channelCount = config.channelCount;\n        track.codec = config.codec;\n        track.manifestCodec = config.manifestCodec;\n        track.duration = duration;\n        _logger.logger.log('parsed codec:' + track.codec + ',rate:' + config.samplerate + ',nb channel:' + config.channelCount);\n      }\n      frameIndex = 0;\n      frameDuration = 1024 * 90000 / track.audiosamplerate;\n      while (offset + 5 < len) {\n        // The protection skip bit tells us if we have 2 bytes of CRC data at the end of the ADTS header\n        headerLength = !!(data[offset + 1] & 0x01) ? 7 : 9;\n        // retrieve frame size\n        frameLength = (data[offset + 3] & 0x03) << 11 | data[offset + 4] << 3 | (data[offset + 5] & 0xE0) >>> 5;\n        frameLength -= headerLength;\n        //stamp = pes.pts;\n\n        if (frameLength > 0 && offset + headerLength + frameLength <= len) {\n          stamp = pts + frameIndex * frameDuration;\n          //logger.log(`AAC frame, offset/length/total/pts:${offset+headerLength}/${frameLength}/${data.byteLength}/${(stamp/90).toFixed(0)}`);\n          aacSample = { unit: data.subarray(offset + headerLength, offset + headerLength + frameLength), pts: stamp, dts: stamp };\n          track.samples.push(aacSample);\n          track.len += frameLength;\n          offset += frameLength + headerLength;\n          frameIndex++;\n          // look for ADTS header (0xFFFx)\n          for (; offset < len - 1; offset++) {\n            if (data[offset] === 0xff && (data[offset + 1] & 0xf0) === 0xf0) {\n              break;\n            }\n          }\n        } else {\n          break;\n        }\n      }\n      this.remuxer.remux(level, sn, cc, track, { samples: [] }, { samples: [{ pts: pts, dts: pts, unit: id3.payload }] }, { samples: [] }, timeOffset, contiguous, accurateTimeOffset, defaultInitPTS);\n    }\n  }, {\n    key: 'destroy',\n    value: function destroy() {}\n  }], [{\n    key: 'probe',\n    value: function probe(data) {\n      // check if data contains ID3 timestamp and ADTS sync worc\n      var id3 = new _id2.default(data),\n          offset,\n          len;\n      if (id3.hasTimeStamp) {\n        // look for ADTS header (0xFFFx)\n        for (offset = id3.length, len = data.length; offset < len - 1; offset++) {\n          if (data[offset] === 0xff && (data[offset + 1] & 0xf0) === 0xf0) {\n            //logger.log('ADTS sync word found !');\n            return true;\n          }\n        }\n      }\n      return false;\n    }\n  }]);\n\n  return AACDemuxer;\n}();\n\nexports.default = AACDemuxer;\n\n},{\"19\":19,\"24\":24,\"45\":45}],19:[function(_dereq_,module,exports){\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }(); /**\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      *  ADTS parser helper\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      */\n\n\nvar _logger = _dereq_(45);\n\nvar _errors = _dereq_(26);\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar ADTS = function () {\n  function ADTS() {\n    _classCallCheck(this, ADTS);\n  }\n\n  _createClass(ADTS, null, [{\n    key: 'getAudioConfig',\n    value: function getAudioConfig(observer, data, offset, audioCodec) {\n      var adtsObjectType,\n          // :int\n      adtsSampleingIndex,\n          // :int\n      adtsExtensionSampleingIndex,\n          // :int\n      adtsChanelConfig,\n          // :int\n      config,\n          userAgent = navigator.userAgent.toLowerCase(),\n          manifestCodec = audioCodec,\n          adtsSampleingRates = [96000, 88200, 64000, 48000, 44100, 32000, 24000, 22050, 16000, 12000, 11025, 8000, 7350];\n      // byte 2\n      adtsObjectType = ((data[offset + 2] & 0xC0) >>> 6) + 1;\n      adtsSampleingIndex = (data[offset + 2] & 0x3C) >>> 2;\n      if (adtsSampleingIndex > adtsSampleingRates.length - 1) {\n        observer.trigger(Event.ERROR, { type: _errors.ErrorTypes.MEDIA_ERROR, details: _errors.ErrorDetails.FRAG_PARSING_ERROR, fatal: true, reason: 'invalid ADTS sampling index:' + adtsSampleingIndex });\n        return;\n      }\n      adtsChanelConfig = (data[offset + 2] & 0x01) << 2;\n      // byte 3\n      adtsChanelConfig |= (data[offset + 3] & 0xC0) >>> 6;\n      _logger.logger.log('manifest codec:' + audioCodec + ',ADTS data:type:' + adtsObjectType + ',sampleingIndex:' + adtsSampleingIndex + '[' + adtsSampleingRates[adtsSampleingIndex] + 'Hz],channelConfig:' + adtsChanelConfig);\n      // firefox: freq less than 24kHz = AAC SBR (HE-AAC)\n      if (/firefox/i.test(userAgent)) {\n        if (adtsSampleingIndex >= 6) {\n          adtsObjectType = 5;\n          config = new Array(4);\n          // HE-AAC uses SBR (Spectral Band Replication) , high frequencies are constructed from low frequencies\n          // there is a factor 2 between frame sample rate and output sample rate\n          // multiply frequency by 2 (see table below, equivalent to substract 3)\n          adtsExtensionSampleingIndex = adtsSampleingIndex - 3;\n        } else {\n          adtsObjectType = 2;\n          config = new Array(2);\n          adtsExtensionSampleingIndex = adtsSampleingIndex;\n        }\n        // Android : always use AAC\n      } else if (userAgent.indexOf('android') !== -1) {\n        adtsObjectType = 2;\n        config = new Array(2);\n        adtsExtensionSampleingIndex = adtsSampleingIndex;\n      } else {\n        /*  for other browsers (Chrome/Vivaldi/Opera ...)\n            always force audio type to be HE-AAC SBR, as some browsers do not support audio codec switch properly (like Chrome ...)\n        */\n        adtsObjectType = 5;\n        config = new Array(4);\n        // if (manifest codec is HE-AAC or HE-AACv2) OR (manifest codec not specified AND frequency less than 24kHz)\n        if (audioCodec && (audioCodec.indexOf('mp4a.40.29') !== -1 || audioCodec.indexOf('mp4a.40.5') !== -1) || !audioCodec && adtsSampleingIndex >= 6) {\n          // HE-AAC uses SBR (Spectral Band Replication) , high frequencies are constructed from low frequencies\n          // there is a factor 2 between frame sample rate and output sample rate\n          // multiply frequency by 2 (see table below, equivalent to substract 3)\n          adtsExtensionSampleingIndex = adtsSampleingIndex - 3;\n        } else {\n          // if (manifest codec is AAC) AND (frequency less than 24kHz AND nb channel is 1) OR (manifest codec not specified and mono audio)\n          // Chrome fails to play back with low frequency AAC LC mono when initialized with HE-AAC.  This is not a problem with stereo.\n          if (audioCodec && audioCodec.indexOf('mp4a.40.2') !== -1 && adtsSampleingIndex >= 6 && adtsChanelConfig === 1 || !audioCodec && adtsChanelConfig === 1) {\n            adtsObjectType = 2;\n            config = new Array(2);\n          }\n          adtsExtensionSampleingIndex = adtsSampleingIndex;\n        }\n      }\n      /* refer to http://wiki.multimedia.cx/index.php?title=MPEG-4_Audio#Audio_Specific_Config\n          ISO 14496-3 (AAC).pdf - Table 1.13 — Syntax of AudioSpecificConfig()\n        Audio Profile / Audio Object Type\n        0: Null\n        1: AAC Main\n        2: AAC LC (Low Complexity)\n        3: AAC SSR (Scalable Sample Rate)\n        4: AAC LTP (Long Term Prediction)\n        5: SBR (Spectral Band Replication)\n        6: AAC Scalable\n       sampling freq\n        0: 96000 Hz\n        1: 88200 Hz\n        2: 64000 Hz\n        3: 48000 Hz\n        4: 44100 Hz\n        5: 32000 Hz\n        6: 24000 Hz\n        7: 22050 Hz\n        8: 16000 Hz\n        9: 12000 Hz\n        10: 11025 Hz\n        11: 8000 Hz\n        12: 7350 Hz\n        13: Reserved\n        14: Reserved\n        15: frequency is written explictly\n        Channel Configurations\n        These are the channel configurations:\n        0: Defined in AOT Specifc Config\n        1: 1 channel: front-center\n        2: 2 channels: front-left, front-right\n      */\n      // audioObjectType = profile => profile, the MPEG-4 Audio Object Type minus 1\n      config[0] = adtsObjectType << 3;\n      // samplingFrequencyIndex\n      config[0] |= (adtsSampleingIndex & 0x0E) >> 1;\n      config[1] |= (adtsSampleingIndex & 0x01) << 7;\n      // channelConfiguration\n      config[1] |= adtsChanelConfig << 3;\n      if (adtsObjectType === 5) {\n        // adtsExtensionSampleingIndex\n        config[1] |= (adtsExtensionSampleingIndex & 0x0E) >> 1;\n        config[2] = (adtsExtensionSampleingIndex & 0x01) << 7;\n        // adtsObjectType (force to 2, chrome is checking that object type is less than 5 ???\n        //    https://chromium.googlesource.com/chromium/src.git/+/master/media/formats/mp4/aac.cc\n        config[2] |= 2 << 2;\n        config[3] = 0;\n      }\n      return { config: config, samplerate: adtsSampleingRates[adtsSampleingIndex], channelCount: adtsChanelConfig, codec: 'mp4a.40.' + adtsObjectType, manifestCodec: manifestCodec };\n    }\n  }]);\n\n  return ADTS;\n}();\n\nexports.default = ADTS;\n\n},{\"26\":26,\"45\":45}],20:[function(_dereq_,module,exports){\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }(); /*  inline demuxer.\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      *   probe fragments and instantiate appropriate demuxer depending on content type (TSDemuxer, AACDemuxer, ...)\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      */\n\nvar _events = _dereq_(28);\n\nvar _events2 = _interopRequireDefault(_events);\n\nvar _errors = _dereq_(26);\n\nvar _decrypter = _dereq_(16);\n\nvar _decrypter2 = _interopRequireDefault(_decrypter);\n\nvar _aacdemuxer = _dereq_(18);\n\nvar _aacdemuxer2 = _interopRequireDefault(_aacdemuxer);\n\nvar _tsdemuxer = _dereq_(25);\n\nvar _tsdemuxer2 = _interopRequireDefault(_tsdemuxer);\n\nvar _mp4Remuxer = _dereq_(38);\n\nvar _mp4Remuxer2 = _interopRequireDefault(_mp4Remuxer);\n\nvar _passthroughRemuxer = _dereq_(39);\n\nvar _passthroughRemuxer2 = _interopRequireDefault(_passthroughRemuxer);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar DemuxerInline = function () {\n  function DemuxerInline(hls, id, typeSupported) {\n    var config = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : null;\n\n    _classCallCheck(this, DemuxerInline);\n\n    this.hls = hls;\n    this.id = id;\n    this.config = this.hls.config || config;\n    this.typeSupported = typeSupported;\n  }\n\n  _createClass(DemuxerInline, [{\n    key: 'destroy',\n    value: function destroy() {\n      var demuxer = this.demuxer;\n      if (demuxer) {\n        demuxer.destroy();\n      }\n    }\n  }, {\n    key: 'push',\n    value: function push(data, audioCodec, videoCodec, timeOffset, cc, level, sn, duration, decryptdata, accurateTimeOffset, defaultInitPTS) {\n      if (data.byteLength > 0 && decryptdata != null && decryptdata.key != null && decryptdata.method === 'AES-128') {\n        if (this.decrypter == null) {\n          this.decrypter = new _decrypter2.default(this.hls, this.config);\n        }\n        var localthis = this;\n        // performance.now() not available on WebWorker, at least on Safari Desktop\n        var startTime;\n        try {\n          startTime = performance.now();\n        } catch (error) {\n          startTime = Date.now();\n        }\n        this.decrypter.decrypt(data, decryptdata.key.buffer, decryptdata.iv.buffer, function (decryptedData) {\n          var endTime;\n          try {\n            endTime = performance.now();\n          } catch (error) {\n            endTime = Date.now();\n          }\n          localthis.hls.trigger(_events2.default.FRAG_DECRYPTED, { level: level, sn: sn, stats: { tstart: startTime, tdecrypt: endTime } });\n          localthis.pushDecrypted(new Uint8Array(decryptedData), audioCodec, videoCodec, timeOffset, cc, level, sn, duration, accurateTimeOffset, defaultInitPTS);\n        });\n      } else {\n        this.pushDecrypted(new Uint8Array(data), audioCodec, videoCodec, timeOffset, cc, level, sn, duration, accurateTimeOffset, defaultInitPTS);\n      }\n    }\n  }, {\n    key: 'pushDecrypted',\n    value: function pushDecrypted(data, audioCodec, videoCodec, timeOffset, cc, level, sn, duration, accurateTimeOffset, defaultInitPTS) {\n      var demuxer = this.demuxer;\n      if (!demuxer ||\n      // in case of continuity change, we might switch from content type (AAC container to TS container for example)\n      // so let's check that current demuxer is still valid\n      cc !== this.cc && !demuxer.probe(data)) {\n        var hls = this.hls,\n            id = this.id,\n            config = this.config,\n            typeSupported = this.typeSupported;\n        // probe for content type\n        if (_tsdemuxer2.default.probe(data)) {\n          if (this.typeSupported.mp2t === true) {\n            demuxer = new _tsdemuxer2.default(hls, id, _passthroughRemuxer2.default, config, typeSupported);\n          } else {\n            demuxer = new _tsdemuxer2.default(hls, id, _mp4Remuxer2.default, config, typeSupported);\n          }\n          demuxer.probe = _tsdemuxer2.default.probe;\n        } else if (_aacdemuxer2.default.probe(data)) {\n          demuxer = new _aacdemuxer2.default(hls, id, _mp4Remuxer2.default, config, typeSupported);\n          demuxer.probe = _aacdemuxer2.default.probe;\n        } else {\n          hls.trigger(_events2.default.ERROR, { type: _errors.ErrorTypes.MEDIA_ERROR, id: id, details: _errors.ErrorDetails.FRAG_PARSING_ERROR, fatal: true, reason: 'no demux matching with content found' });\n          return;\n        }\n        this.demuxer = demuxer;\n      }\n      demuxer.push(data, audioCodec, videoCodec, timeOffset, cc, level, sn, duration, accurateTimeOffset, defaultInitPTS);\n      this.cc = cc;\n    }\n  }]);\n\n  return DemuxerInline;\n}();\n\nexports.default = DemuxerInline;\n\n},{\"16\":16,\"18\":18,\"25\":25,\"26\":26,\"28\":28,\"38\":38,\"39\":39}],21:[function(_dereq_,module,exports){\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _demuxerInline = _dereq_(20);\n\nvar _demuxerInline2 = _interopRequireDefault(_demuxerInline);\n\nvar _events = _dereq_(28);\n\nvar _events2 = _interopRequireDefault(_events);\n\nvar _logger = _dereq_(45);\n\nvar _events3 = _dereq_(1);\n\nvar _events4 = _interopRequireDefault(_events3);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/* demuxer web worker.\n *  - listen to worker message, and trigger DemuxerInline upon reception of Fragments.\n *  - provides MP4 Boxes back to main thread using [transferable objects](https://developers.google.com/web/updates/2011/12/Transferable-Objects-Lightning-Fast) in order to minimize message passing overhead.\n */\n\nvar DemuxerWorker = function DemuxerWorker(self) {\n  // observer setup\n  var observer = new _events4.default();\n  observer.trigger = function trigger(event) {\n    for (var _len = arguments.length, data = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n      data[_key - 1] = arguments[_key];\n    }\n\n    observer.emit.apply(observer, [event, event].concat(data));\n  };\n\n  observer.off = function off(event) {\n    for (var _len2 = arguments.length, data = Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {\n      data[_key2 - 1] = arguments[_key2];\n    }\n\n    observer.removeListener.apply(observer, [event].concat(data));\n  };\n\n  var forwardMessage = function forwardMessage(ev, data) {\n    self.postMessage({ event: ev, data: data });\n  };\n\n  self.addEventListener('message', function (ev) {\n    var data = ev.data;\n    //console.log('demuxer cmd:' + data.cmd);\n    switch (data.cmd) {\n      case 'init':\n        var config = JSON.parse(data.config);\n        self.demuxer = new _demuxerInline2.default(observer, data.id, data.typeSupported, config);\n        try {\n          (0, _logger.enableLogs)(config.debug === true);\n        } catch (err) {\n          console.warn('demuxerWorker: unable to enable logs');\n        }\n        // signal end of worker init\n        forwardMessage('init', null);\n        break;\n      case 'demux':\n        self.demuxer.push(data.data, data.audioCodec, data.videoCodec, data.timeOffset, data.cc, data.level, data.sn, data.duration, data.decryptdata, data.accurateTimeOffset, data.defaultInitPTS);\n        break;\n      default:\n        break;\n    }\n  });\n\n  // forward events to main thread\n  observer.on(_events2.default.FRAG_DECRYPTED, forwardMessage);\n  observer.on(_events2.default.FRAG_PARSING_INIT_SEGMENT, forwardMessage);\n  observer.on(_events2.default.FRAG_PARSED, forwardMessage);\n  observer.on(_events2.default.ERROR, forwardMessage);\n  observer.on(_events2.default.FRAG_PARSING_METADATA, forwardMessage);\n  observer.on(_events2.default.FRAG_PARSING_USERDATA, forwardMessage);\n  observer.on(_events2.default.INIT_PTS_FOUND, forwardMessage);\n\n  // special case for FRAG_PARSING_DATA: pass data1/data2 as transferable object (no copy)\n  observer.on(_events2.default.FRAG_PARSING_DATA, function (ev, data) {\n    var data1 = data.data1.buffer,\n        data2 = data.data2.buffer;\n    // remove data1 and data2 reference from data to avoid copying them ...\n    delete data.data1;\n    delete data.data2;\n    self.postMessage({ event: ev, data: data, data1: data1, data2: data2 }, [data1, data2]);\n  });\n};\n\nexports.default = DemuxerWorker;\n\n},{\"1\":1,\"20\":20,\"28\":28,\"45\":45}],22:[function(_dereq_,module,exports){\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _events = _dereq_(28);\n\nvar _events2 = _interopRequireDefault(_events);\n\nvar _demuxerInline = _dereq_(20);\n\nvar _demuxerInline2 = _interopRequireDefault(_demuxerInline);\n\nvar _demuxerWorker = _dereq_(21);\n\nvar _demuxerWorker2 = _interopRequireDefault(_demuxerWorker);\n\nvar _logger = _dereq_(45);\n\nvar _errors = _dereq_(26);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar Demuxer = function () {\n  function Demuxer(hls, id) {\n    _classCallCheck(this, Demuxer);\n\n    this.hls = hls;\n    this.id = id;\n    var typeSupported = {\n      mp4: MediaSource.isTypeSupported('video/mp4'),\n      mp2t: hls.config.enableMP2TPassThrough && MediaSource.isTypeSupported('video/mp2t'),\n      mpeg: MediaSource.isTypeSupported('audio/mpeg'),\n      mp3: MediaSource.isTypeSupported('audio/mp4; codecs=\"mp3\"')\n    };\n    if (hls.config.enableWorker && typeof Worker !== 'undefined') {\n      _logger.logger.log('demuxing in webworker');\n      var w = void 0;\n      try {\n        var work = _dereq_(3);\n        w = this.w = work(_demuxerWorker2.default);\n        this.onwmsg = this.onWorkerMessage.bind(this);\n        w.addEventListener('message', this.onwmsg);\n        w.onerror = function (event) {\n          hls.trigger(_events2.default.ERROR, { type: _errors.ErrorTypes.OTHER_ERROR, details: _errors.ErrorDetails.INTERNAL_EXCEPTION, fatal: true, event: 'demuxerWorker', err: { message: event.message + ' (' + event.filename + ':' + event.lineno + ')' } });\n        };\n        w.postMessage({ cmd: 'init', typeSupported: typeSupported, id: id, config: JSON.stringify(hls.config) });\n      } catch (err) {\n        _logger.logger.error('error while initializing DemuxerWorker, fallback on DemuxerInline');\n        if (w) {\n          // revoke the Object URL that was used to create demuxer worker, so as not to leak it\n          URL.revokeObjectURL(w.objectURL);\n        }\n        this.demuxer = new _demuxerInline2.default(hls, id, typeSupported);\n        this.w = undefined;\n      }\n    } else {\n      this.demuxer = new _demuxerInline2.default(hls, id, typeSupported);\n    }\n    this.demuxInitialized = true;\n  }\n\n  _createClass(Demuxer, [{\n    key: 'destroy',\n    value: function destroy() {\n      var w = this.w;\n      if (w) {\n        w.removeEventListener('message', this.onwmsg);\n        w.terminate();\n        this.w = null;\n      } else {\n        var demuxer = this.demuxer;\n        if (demuxer) {\n          demuxer.destroy();\n          this.demuxer = null;\n        }\n      }\n    }\n  }, {\n    key: 'push',\n    value: function push(data, audioCodec, videoCodec, timeOffset, cc, level, sn, duration, decryptdata, accurateTimeOffset, defaultInitPTS) {\n      var w = this.w;\n      if (w) {\n        // post fragment payload as transferable objects (no copy)\n        w.postMessage({ cmd: 'demux', data: data, audioCodec: audioCodec, videoCodec: videoCodec, timeOffset: timeOffset, cc: cc, level: level, sn: sn, duration: duration, decryptdata: decryptdata, accurateTimeOffset: accurateTimeOffset, defaultInitPTS: defaultInitPTS }, [data]);\n      } else {\n        var demuxer = this.demuxer;\n        if (demuxer) {\n          demuxer.push(data, audioCodec, videoCodec, timeOffset, cc, level, sn, duration, decryptdata, accurateTimeOffset, defaultInitPTS);\n        }\n      }\n    }\n  }, {\n    key: 'onWorkerMessage',\n    value: function onWorkerMessage(ev) {\n      var data = ev.data,\n          hls = this.hls;\n      //console.log('onWorkerMessage:' + data.event);\n      switch (data.event) {\n        case 'init':\n          // revoke the Object URL that was used to create demuxer worker, so as not to leak it\n          URL.revokeObjectURL(this.w.objectURL);\n          break;\n        // special case for FRAG_PARSING_DATA: data1 and data2 are transferable objects\n        case _events2.default.FRAG_PARSING_DATA:\n          data.data.data1 = new Uint8Array(data.data1);\n          data.data.data2 = new Uint8Array(data.data2);\n        /* falls through */\n        default:\n          hls.trigger(data.event, data.data);\n          break;\n      }\n    }\n  }]);\n\n  return Demuxer;\n}();\n\nexports.default = Demuxer;\n\n},{\"20\":20,\"21\":21,\"26\":26,\"28\":28,\"3\":3,\"45\":45}],23:[function(_dereq_,module,exports){\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }(); /**\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      * Parser for exponential Golomb codes, a variable-bitwidth number encoding scheme used by h264.\nn\nvar _logger = _dereq_(45);\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar ExpGolomb = function () {\n  function ExpGolomb(data) {\n    _classCallCheck(this, ExpGolomb);\n\n    this.data = data;\n    // the number of bytes left to examine in this.data\n    this.bytesAvailable = data.byteLength;\n    // the current word being examined\n    this.word = 0; // :uint\n    // the number of bits left to examine in the current word\n    this.bitsAvailable = 0; // :uint\n  }\n\n  // ():void\n\n\n  _createClass(ExpGolomb, [{\n    key: 'loadWord',\n    value: function loadWord() {\n      var data = this.data,\n          bytesAvailable = this.bytesAvailable,\n          position = data.byteLength - bytesAvailable,\n          workingBytes = new Uint8Array(4),\n          availableBytes = Math.min(4, bytesAvailable);\n      if (availableBytes === 0) {\n        throw new Error('no bytes available');\n      }\n      workingBytes.set(data.subarray(position, position + availableBytes));\n      this.word = new DataView(workingBytes.buffer).getUint32(0);\n      // track the amount of this.data that has been processed\n      this.bitsAvailable = availableBytes * 8;\n      this.bytesAvailable -= availableBytes;\n    }\n\n    // (count:int):void\n\n  }, {\n    key: 'skipBits',\n    value: function skipBits(count) {\n      var skipBytes; // :int\n      if (this.bitsAvailable > count) {\n        this.word <<= count;\n        this.bitsAvailable -= count;\n      } else {\n        count -= this.bitsAvailable;\n        skipBytes = count >> 3;\n        count -= skipBytes >> 3;\n        this.bytesAvailable -= skipBytes;\n        this.loadWord();\n        this.word <<= count;\n        this.bitsAvailable -= count;\n      }\n    }\n\n    // (size:int):uint\n\n  }, {\n    key: 'readBits',\n    value: function readBits(size) {\n      var bits = Math.min(this.bitsAvailable, size),\n          // :uint\n      valu = this.word >>> 32 - bits; // :uint\n      if (size > 32) {\n        _logger.logger.error('Cannot read more than 32 bits at a time');\n      }\n      this.bitsAvailable -= bits;\n      if (this.bitsAvailable > 0) {\n        this.word <<= bits;\n      } else if (this.bytesAvailable > 0) {\n        this.loadWord();\n      }\n      bits = size - bits;\n      if (bits > 0 && this.bitsAvailable) {\n        return valu << bits | this.readBits(bits);\n      } else {\n        return valu;\n      }\n    }\n\n    // ():uint\n\n  }, {\n    key: 'skipLZ',\n    value: function skipLZ() {\n      var leadingZeroCount; // :uint\n      for (leadingZeroCount = 0; leadingZeroCount < this.bitsAvailable; ++leadingZeroCount) {\n        if (0 !== (this.word & 0x80000000 >>> leadingZeroCount)) {\n          // the first bit of working word is 1\n          this.word <<= leadingZeroCount;\n          this.bitsAvailable -= leadingZeroCount;\n          return leadingZeroCount;\n        }\n      }\n      // we exhausted word and still have not found a 1\n      this.loadWord();\n      return leadingZeroCount + this.skipLZ();\n    }\n\n    // ():void\n\n  }, {\n    key: 'skipUEG',\n    value: function skipUEG() {\n      this.skipBits(1 + this.skipLZ());\n    }\n\n    // ():void\n\n  }, {\n    key: 'skipEG',\n    value: function skipEG() {\n      this.skipBits(1 + this.skipLZ());\n    }\n\n    // ():uint\n\n  }, {\n    key: 'readUEG',\n    value: function readUEG() {\n      var clz = this.skipLZ(); // :uint\n      return this.readBits(clz + 1) - 1;\n    }\n\n    // ():int\n\n  }, {\n    key: 'readEG',\n    value: function readEG() {\n      var valu = this.readUEG(); // :int\n      if (0x01 & valu) {\n        // the number is odd if the low order bit is set\n        return 1 + valu >>> 1; // add 1 to make it even, and divide by 2\n      } else {\n        return -1 * (valu >>> 1); // divide by two then make it negative\n      }\n    }\n\n    // Some convenience functions\n    // :Boolean\n\n  }, {\n    key: 'readBoolean',\n    value: function readBoolean() {\n      return 1 === this.readBits(1);\n    }\n\n    // ():int\n\n  }, {\n    key: 'readUByte',\n    value: function readUByte() {\n      return this.readBits(8);\n    }\n\n    // ():int\n\n  }, {\n    key: 'readUShort',\n    value: function readUShort() {\n      return this.readBits(16);\n    }\n    // ():int\n\n  }, {\n    key: 'readUInt',\n    value: function readUInt() {\n      return this.readBits(32);\n    }\n\n    /**\n     * Advance the ExpGolomb decoder past a scaling list. The scaling\n     * list is optionally transmitted as part of a sequence parameter\n     * set and is not relevant to transmuxing.\n     * @param count {number} the number of entries in this scaling list\n     * @see Recommendation ITU-T H.264, Section 7.3.2.1.1.1\n     */\n\n  }, {\n    key: 'skipScalingList',\n    value: function skipScalingList(count) {\n      var lastScale = 8,\n          nextScale = 8,\n          j,\n          deltaScale;\n      for (j = 0; j < count; j++) {\n        if (nextScale !== 0) {\n          deltaScale = this.readEG();\n          nextScale = (lastScale + deltaScale + 256) % 256;\n        }\n        lastScale = nextScale === 0 ? lastScale : nextScale;\n      }\n    }\n\n    /**\n     * Read a sequence parameter set and return some interesting video\n     * properties. A sequence parameter set is the H264 metadata that\n     * describes the properties of upcoming video frames.\n     * @param data {Uint8Array} the bytes of a sequence parameter set\n     * @return {object} an object with configuration parsed from the\n     * sequence parameter set, including the dimensions of the\n     * associated video frames.\n     */\n\n  }, {\n    key: 'readSPS',\n    value: function readSPS() {\n      var frameCropLeftOffset = 0,\n          frameCropRightOffset = 0,\n          frameCropTopOffset = 0,\n          frameCropBottomOffset = 0,\n          profileIdc,\n          profileCompat,\n          levelIdc,\n          numRefFramesInPicOrderCntCycle,\n          picWidthInMbsMinus1,\n          picHeightInMapUnitsMinus1,\n          frameMbsOnlyFlag,\n          scalingListCount,\n          i,\n          readUByte = this.readUByte.bind(this),\n          readBits = this.readBits.bind(this),\n          readUEG = this.readUEG.bind(this),\n          readBoolean = this.readBoolean.bind(this),\n          skipBits = this.skipBits.bind(this),\n          skipEG = this.skipEG.bind(this),\n          skipUEG = this.skipUEG.bind(this),\n          skipScalingList = this.skipScalingList.bind(this);\n\n      readUByte();\n      profileIdc = readUByte(); // profile_idc\n      profileCompat = readBits(5); // constraint_set[0-4]_flag, u(5)\n      skipBits(3); // reserved_zero_3bits u(3),\n      levelIdc = readUByte(); //level_idc u(8)\n      skipUEG(); // seq_parameter_set_id\n      // some profiles have more optional data we don't need\n      if (profileIdc === 100 || profileIdc === 110 || profileIdc === 122 || profileIdc === 244 || profileIdc === 44 || profileIdc === 83 || profileIdc === 86 || profileIdc === 118 || profileIdc === 128) {\n        var chromaFormatIdc = readUEG();\n        if (chromaFormatIdc === 3) {\n          skipBits(1); // separate_colour_plane_flag\n        }\n        skipUEG(); // bit_depth_luma_minus8\n        skipUEG(); // bit_depth_chroma_minus8\n        skipBits(1); // qpprime_y_zero_transform_bypass_flag\n        if (readBoolean()) {\n          // seq_scaling_matrix_present_flag\n          scalingListCount = chromaFormatIdc !== 3 ? 8 : 12;\n          for (i = 0; i < scalingListCount; i++) {\n            if (readBoolean()) {\n              // seq_scaling_list_present_flag[ i ]\n              if (i < 6) {\n                skipScalingList(16);\n              } else {\n                skipScalingList(64);\n              }\n            }\n          }\n        }\n      }\n      skipUEG(); // log2_max_frame_num_minus4\n      var picOrderCntType = readUEG();\n      if (picOrderCntType === 0) {\n        readUEG(); //log2_max_pic_order_cnt_lsb_minus4\n      } else if (picOrderCntType === 1) {\n        skipBits(1); // delta_pic_order_always_zero_flag\n        skipEG(); // offset_for_non_ref_pic\n        skipEG(); // offset_for_top_to_bottom_field\n        numRefFramesInPicOrderCntCycle = readUEG();\n        for (i = 0; i < numRefFramesInPicOrderCntCycle; i++) {\n          skipEG(); // offset_for_ref_frame[ i ]\n        }\n      }\n      skipUEG(); // max_num_ref_frames\n      skipBits(1); // gaps_in_frame_num_value_allowed_flag\n      picWidthInMbsMinus1 = readUEG();\n      picHeightInMapUnitsMinus1 = readUEG();\n      frameMbsOnlyFlag = readBits(1);\n      if (frameMbsOnlyFlag === 0) {\n        skipBits(1); // mb_adaptive_frame_field_flag\n      }\n      skipBits(1); // direct_8x8_inference_flag\n      if (readBoolean()) {\n        // frame_cropping_flag\n        frameCropLeftOffset = readUEG();\n        frameCropRightOffset = readUEG();\n        frameCropTopOffset = readUEG();\n        frameCropBottomOffset = readUEG();\n      }\n      var pixelRatio = [1, 1];\n      if (readBoolean()) {\n        // vui_parameters_present_flag\n        if (readBoolean()) {\n          // aspect_ratio_info_present_flag\n          var aspectRatioIdc = readUByte();\n          switch (aspectRatioIdc) {\n            case 1:\n              pixelRatio = [1, 1];break;\n            case 2:\n              pixelRatio = [12, 11];break;\n            case 3:\n              pixelRatio = [10, 11];break;\n            case 4:\n              pixelRatio = [16, 11];break;\n            case 5:\n              pixelRatio = [40, 33];break;\n            case 6:\n              pixelRatio = [24, 11];break;\n            case 7:\n              pixelRatio = [20, 11];break;\n            case 8:\n              pixelRatio = [32, 11];break;\n            case 9:\n              pixelRatio = [80, 33];break;\n            case 10:\n              pixelRatio = [18, 11];break;\n            case 11:\n              pixelRatio = [15, 11];break;\n            case 12:\n              pixelRatio = [64, 33];break;\n            case 13:\n              pixelRatio = [160, 99];break;\n            case 14:\n              pixelRatio = [4, 3];break;\n            case 15:\n              pixelRatio = [3, 2];break;\n            case 16:\n              pixelRatio = [2, 1];break;\n            case 255:\n              {\n                pixelRatio = [readUByte() << 8 | readUByte(), readUByte() << 8 | readUByte()];\n                break;\n              }\n          }\n        }\n      }\n      return {\n        width: Math.ceil((picWidthInMbsMinus1 + 1) * 16 - frameCropLeftOffset * 2 - frameCropRightOffset * 2),\n        height: (2 - frameMbsOnlyFlag) * (picHeightInMapUnitsMinus1 + 1) * 16 - (frameMbsOnlyFlag ? 2 : 4) * (frameCropTopOffset + frameCropBottomOffset),\n        pixelRatio: pixelRatio\n      };\n    }\n  }, {\n    key: 'readSliceType',\n    value: function readSliceType() {\n      // skip NALu type\n      this.readUByte();\n      // discard first_mb_in_slice\n      this.readUEG();\n      // return slice_type\n      return this.readUEG();\n    }\n  }]);\n\n  return ExpGolomb;\n}();\n\nexports.default = ExpGolomb;\n\n},{\"45\":45}],24:[function(_dereq_,module,exports){\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }(); /**\nparser\nn\n\nvar _logger = _dereq_(45);\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n//import Hex from '../utils/hex';\n\nvar ID3 = function () {\n  function ID3(data) {\n    _classCallCheck(this, ID3);\n\n    this._hasTimeStamp = false;\n    var offset = 0,\n        byte1,\n        byte2,\n        byte3,\n        byte4,\n        tagSize,\n        endPos,\n        header,\n        len;\n    do {\n      header = this.readUTF(data, offset, 3);\n      offset += 3;\n      // first check for ID3 header\n      if (header === 'ID3') {\n        // skip 24 bits\n        offset += 3;\n        // retrieve tag(s) length\n        byte1 = data[offset++] & 0x7f;\n        byte2 = data[offset++] & 0x7f;\n        byte3 = data[offset++] & 0x7f;\n        byte4 = data[offset++] & 0x7f;\n        tagSize = (byte1 << 21) + (byte2 << 14) + (byte3 << 7) + byte4;\n        endPos = offset + tagSize;\n        //logger.log(`ID3 tag found, size/end: ${tagSize}/${endPos}`);\n\n        // read ID3 tags\n        this._parseID3Frames(data, offset, endPos);\n        offset = endPos;\n      } else if (header === '3DI') {\n        // http://id3.org/id3v2.4.0-structure chapter 3.4.   ID3v2 footer\n        offset += 7;\n        _logger.logger.log('3DI footer found, end: ' + offset);\n      } else {\n        offset -= 3;\n        len = offset;\n        if (len) {\n          //logger.log(`ID3 len: ${len}`);\n          if (!this.hasTimeStamp) {\n            _logger.logger.warn('ID3 tag found, but no timestamp');\n          }\n          this._length = len;\n          this._payload = data.subarray(0, len);\n        }\n        return;\n      }\n    } while (true);\n  }\n\n  _createClass(ID3, [{\n    key: 'readUTF',\n    value: function readUTF(data, start, len) {\n\n      var result = '',\n          offset = start,\n          end = start + len;\n      do {\n        result += String.fromCharCode(data[offset++]);\n      } while (offset < end);\n      return result;\n    }\n  }, {\n    key: '_parseID3Frames',\n    value: function _parseID3Frames(data, offset, endPos) {\n      var tagId, tagLen, tagStart, tagFlags, timestamp;\n      while (offset + 8 <= endPos) {\n        tagId = this.readUTF(data, offset, 4);\n        offset += 4;\n\n        tagLen = data[offset++] << 24 + data[offset++] << 16 + data[offset++] << 8 + data[offset++];\n\n        tagFlags = data[offset++] << 8 + data[offset++];\n\n        tagStart = offset;\n        //logger.log(\"ID3 tag id:\" + tagId);\n        switch (tagId) {\n          case 'PRIV':\n            //logger.log('parse frame:' + Hex.hexDump(data.subarray(offset,endPos)));\n            // owner should be \"com.apple.streaming.transportStreamTimestamp\"\n            if (this.readUTF(data, offset, 44) === 'com.apple.streaming.transportStreamTimestamp') {\n              offset += 44;\n              // smelling even better ! we found the right descriptor\n              // skip null character (string end) + 3 first bytes\n              offset += 4;\n\n              // timestamp is 33 bit expressed as a big-endian eight-octet number, with the upper 31 bits set to zero.\n              var pts33Bit = data[offset++] & 0x1;\n              this._hasTimeStamp = true;\n\n              timestamp = ((data[offset++] << 23) + (data[offset++] << 15) + (data[offset++] << 7) + data[offset++]) / 45;\n\n              if (pts33Bit) {\n                timestamp += 47721858.84; // 2^32 / 90\n              }\n              timestamp = Math.round(timestamp);\n              _logger.logger.trace('ID3 timestamp found: ' + timestamp);\n              this._timeStamp = timestamp;\n            }\n            break;\n          default:\n            break;\n        }\n      }\n    }\n  }, {\n    key: 'hasTimeStamp',\n    get: function get() {\n      return this._hasTimeStamp;\n    }\n  }, {\n    key: 'timeStamp',\n    get: function get() {\n      return this._timeStamp;\n    }\n  }, {\n    key: 'length',\n    get: function get() {\n      return this._length;\n    }\n  }, {\n    key: 'payload',\n    get: function get() {\n      return this._payload;\n    }\n  }]);\n\n  return ID3;\n}();\n\nexports.default = ID3;\n\n},{\"45\":45}],25:[function(_dereq_,module,exports){\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }(); /**\nhighly optimized TS demuxer:\nparse PAT, PMT\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      * extract PES packet from audio and video PIDs\nextract AVC/H264 NAL units and AAC/ADTS samples from PES packet\ntrigger the remuxer upon parsing completion\nit also tries to workaround as best as it can audio codec switch (HE-AAC to AAC and vice versa), without having to restart the MediaSource.\nit also controls the remuxing process :\nupon discontinuity or level switch detection, it will also notifies the remuxer so that it can reset its state.\nn\n// import Hex from '../utils/hex';\n\n\nvar _adts = _dereq_(19);\n\nvar _adts2 = _interopRequireDefault(_adts);\n\nvar _events = _dereq_(28);\n\nvar _events2 = _interopRequireDefault(_events);\n\nvar _expGolomb = _dereq_(23);\n\nvar _expGolomb2 = _interopRequireDefault(_expGolomb);\n\nvar _logger = _dereq_(45);\n\nvar _errors = _dereq_(26);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar TSDemuxer = function () {\n  function TSDemuxer(observer, id, remuxerClass, config, typeSupported) {\n    _classCallCheck(this, TSDemuxer);\n\n    this.observer = observer;\n    this.id = id;\n    this.remuxerClass = remuxerClass;\n    this.config = config;\n    this.typeSupported = typeSupported;\n    this.lastCC = 0;\n    this.remuxer = new this.remuxerClass(observer, id, config, typeSupported);\n  }\n\n  _createClass(TSDemuxer, [{\n    key: 'switchLevel',\n    value: function switchLevel() {\n      this.pmtParsed = false;\n      this._pmtId = -1;\n      this._avcTrack = { container: 'video/mp2t', type: 'video', id: -1, sequenceNumber: 0, samples: [], len: 0, dropped: 0 };\n      this._audioTrack = { container: 'video/mp2t', type: 'audio', id: -1, sequenceNumber: 0, samples: [], len: 0, isAAC: true };\n      this._id3Track = { type: 'id3', id: -1, sequenceNumber: 0, samples: [], len: 0 };\n      this._txtTrack = { type: 'text', id: -1, sequenceNumber: 0, samples: [], len: 0 };\n      // flush any partial content\n      this.aacOverFlow = null;\n      this.aacLastPTS = null;\n      this.avcSample = null;\n      this.remuxer.switchLevel();\n    }\n  }, {\n    key: 'insertDiscontinuity',\n    value: function insertDiscontinuity() {\n      this.switchLevel();\n      this.remuxer.insertDiscontinuity();\n    }\n\n    // feed incoming data to the front of the parsing pipeline\n\n  }, {\n    key: 'push',\n    value: function push(data, audioCodec, videoCodec, timeOffset, cc, level, sn, duration, accurateTimeOffset, defaultInitPTS) {\n      var start,\n          len = data.length,\n          stt,\n          pid,\n          atf,\n          offset,\n          pes,\n          codecsOnly = this.remuxer.passthrough,\n          unknownPIDs = false;\n\n      this.audioCodec = audioCodec;\n      this.videoCodec = videoCodec;\n      this._duration = duration;\n      this.contiguous = false;\n      this.accurateTimeOffset = accurateTimeOffset;\n      if (cc !== this.lastCC) {\n        _logger.logger.log('discontinuity detected');\n        this.insertDiscontinuity();\n        this.lastCC = cc;\n      }\n      if (level !== this.lastLevel) {\n        _logger.logger.log('level switch detected');\n        this.switchLevel();\n        this.lastLevel = level;\n      } else if (sn === this.lastSN + 1) {\n        this.contiguous = true;\n      }\n      this.lastSN = sn;\n\n      var pmtParsed = this.pmtParsed,\n          avcTrack = this._avcTrack,\n          audioTrack = this._audioTrack,\n          id3Track = this._id3Track,\n          avcId = avcTrack.id,\n          audioId = audioTrack.id,\n          id3Id = id3Track.id,\n          pmtId = this._pmtId,\n          avcData = avcTrack.pesData,\n          audioData = audioTrack.pesData,\n          id3Data = id3Track.pesData,\n          parsePAT = this._parsePAT,\n          parsePMT = this._parsePMT,\n          parsePES = this._parsePES,\n          parseAVCPES = this._parseAVCPES.bind(this),\n          parseAACPES = this._parseAACPES.bind(this),\n          parseMPEGPES = this._parseMPEGPES.bind(this),\n          parseID3PES = this._parseID3PES.bind(this);\n\n      // don't parse last TS packet if incomplete\n      len -= len % 188;\n      // loop through TS packets\n      for (start = 0; start < len; start += 188) {\n        if (data[start] === 0x47) {\n          stt = !!(data[start + 1] & 0x40);\n          // pid is a 13-bit field starting at the last bit of TS[1]\n          pid = ((data[start + 1] & 0x1f) << 8) + data[start + 2];\n          atf = (data[start + 3] & 0x30) >> 4;\n          // if an adaption field is present, its length is specified by the fifth byte of the TS packet header.\n          if (atf > 1) {\n            offset = start + 5 + data[start + 4];\n            // continue if there is only adaptation field\n            if (offset === start + 188) {\n              continue;\n            }\n          } else {\n            offset = start + 4;\n          }\n          switch (pid) {\n            case avcId:\n              if (stt) {\n                if (avcData && (pes = parsePES(avcData))) {\n                  parseAVCPES(pes, false);\n                  if (codecsOnly) {\n                    // if we have video codec info AND\n                    // if audio PID is undefined OR if we have audio codec info,\n                    // we have all codec info !\n                    if (avcTrack.codec && (audioId === -1 || audioTrack.codec)) {\n                      this.remux(level, sn, cc, data, timeOffset);\n                      return;\n                    }\n                  }\n                }\n                avcData = { data: [], size: 0 };\n              }\n              if (avcData) {\n                avcData.data.push(data.subarray(offset, start + 188));\n                avcData.size += start + 188 - offset;\n              }\n              break;\n            case audioId:\n              if (stt) {\n                if (audioData && (pes = parsePES(audioData))) {\n                  if (audioTrack.isAAC) {\n                    parseAACPES(pes);\n                  } else {\n                    parseMPEGPES(pes);\n                  }\n                  if (codecsOnly) {\n                    // here we now that we have audio codec info\n                    // if video PID is undefined OR if we have video codec info,\n                    // we have all codec infos !\n                    if (audioTrack.codec && (avcId === -1 || avcTrack.codec)) {\n                      this.remux(level, sn, cc, data, timeOffset);\n                      return;\n                    }\n                  }\n                }\n                audioData = { data: [], size: 0 };\n              }\n              if (audioData) {\n                audioData.data.push(data.subarray(offset, start + 188));\n                audioData.size += start + 188 - offset;\n              }\n              break;\n            case id3Id:\n              if (stt) {\n                if (id3Data && (pes = parsePES(id3Data))) {\n                  parseID3PES(pes);\n                }\n                id3Data = { data: [], size: 0 };\n              }\n              if (id3Data) {\n                id3Data.data.push(data.subarray(offset, start + 188));\n                id3Data.size += start + 188 - offset;\n              }\n              break;\n            case 0:\n              if (stt) {\n                offset += data[offset] + 1;\n              }\n              pmtId = this._pmtId = parsePAT(data, offset);\n              break;\n            case pmtId:\n              if (stt) {\n                offset += data[offset] + 1;\n              }\n              var parsedPIDs = parsePMT(data, offset, this.typeSupported.mpeg === true || this.typeSupported.mp3 === true);\n\n              // only update track id if track PID found while parsing PMT\n              // this is to avoid resetting the PID to -1 in case\n              // track PID transiently disappears from the stream\n              // this could happen in case of transient missing audio samples for example\n              avcId = parsedPIDs.avc;\n              if (avcId > 0) {\n                avcTrack.id = avcId;\n              }\n              audioId = parsedPIDs.audio;\n              if (audioId > 0) {\n                audioTrack.id = audioId;\n                audioTrack.isAAC = parsedPIDs.isAAC;\n              }\n              id3Id = parsedPIDs.id3;\n              if (id3Id > 0) {\n                id3Track.id = id3Id;\n              }\n              if (unknownPIDs && !pmtParsed) {\n                _logger.logger.log('reparse from beginning');\n                unknownPIDs = false;\n                // we set it to -188, the += 188 in the for loop will reset start to 0\n                start = -188;\n              }\n              pmtParsed = this.pmtParsed = true;\n              break;\n            case 17:\n            case 0x1fff:\n              break;\n            default:\n              unknownPIDs = true;\n              break;\n          }\n        } else {\n          this.observer.trigger(_events2.default.ERROR, { type: _errors.ErrorTypes.MEDIA_ERROR, id: this.id, details: _errors.ErrorDetails.FRAG_PARSING_ERROR, fatal: false, reason: 'TS packet did not start with 0x47' });\n        }\n      }\n      // try to parse last PES packets\n      if (avcData && (pes = parsePES(avcData))) {\n        parseAVCPES(pes, true);\n        avcTrack.pesData = null;\n      } else {\n        // either avcData null or PES truncated, keep it for next frag parsing\n        avcTrack.pesData = avcData;\n      }\n\n      if (audioData && (pes = parsePES(audioData))) {\n        if (audioTrack.isAAC) {\n          parseAACPES(pes);\n        } else {\n          parseMPEGPES(pes);\n        }\n        audioTrack.pesData = null;\n      } else {\n        if (audioData && audioData.size) {\n          _logger.logger.log('last AAC PES packet truncated,might overlap between fragments');\n        }\n        // either audioData null or PES truncated, keep it for next frag parsing\n        audioTrack.pesData = audioData;\n      }\n\n      if (id3Data && (pes = parsePES(id3Data))) {\n        parseID3PES(pes);\n        id3Track.pesData = null;\n      } else {\n        // either id3Data null or PES truncated, keep it for next frag parsing\n        id3Track.pesData = id3Data;\n      }\n      this.remux(level, sn, cc, null, timeOffset, defaultInitPTS);\n    }\n  }, {\n    key: 'remux',\n    value: function remux(level, sn, cc, data, timeOffset, defaultInitPTS) {\n      var avcTrack = this._avcTrack,\n          samples = avcTrack.samples,\n          nbNalu = 0,\n          naluLen = 0;\n\n      // compute total/avc sample length and nb of NAL units\n      for (var i = 0; i < samples.length; i++) {\n        var sample = samples[i],\n            units = sample.units.units,\n            nbUnits = units.length,\n            sampleLen = 0;\n        for (var j = 0; j < nbUnits; j++) {\n          sampleLen += units[j].data.length;\n        }\n        naluLen += sampleLen;\n        nbNalu += nbUnits;\n        sample.length = sampleLen;\n      }\n      avcTrack.len = naluLen;\n      avcTrack.nbNalu = nbNalu;\n      this.remuxer.remux(level, sn, cc, this._audioTrack, this._avcTrack, this._id3Track, this._txtTrack, timeOffset, this.contiguous, this.accurateTimeOffset, defaultInitPTS, data);\n    }\n  }, {\n    key: 'destroy',\n    value: function destroy() {\n      this.switchLevel();\n      this._initPTS = this._initDTS = undefined;\n      this._duration = 0;\n    }\n  }, {\n    key: '_parsePAT',\n    value: function _parsePAT(data, offset) {\n      // skip the PSI header and parse the first PMT entry\n      return (data[offset + 10] & 0x1F) << 8 | data[offset + 11];\n      //logger.log('PMT PID:'  + this._pmtId);\n    }\n  }, {\n    key: '_parsePMT',\n    value: function _parsePMT(data, offset, mpegSupported) {\n      var sectionLength,\n          tableEnd,\n          programInfoLength,\n          pid,\n          result = { audio: -1, avc: -1, id3: -1, isAAC: true };\n      sectionLength = (data[offset + 1] & 0x0f) << 8 | data[offset + 2];\n      tableEnd = offset + 3 + sectionLength - 4;\n      // to determine where the table is, we have to figure out how\n      // long the program info descriptors are\n      programInfoLength = (data[offset + 10] & 0x0f) << 8 | data[offset + 11];\n      // advance the offset to the first entry in the mapping table\n      offset += 12 + programInfoLength;\n      while (offset < tableEnd) {\n        pid = (data[offset + 1] & 0x1F) << 8 | data[offset + 2];\n        switch (data[offset]) {\n          // ISO/IEC 13818-7 ADTS AAC (MPEG-2 lower bit-rate audio)\n          case 0x0f:\n            //logger.log('AAC PID:'  + pid);\n            if (result.audio === -1) {\n              result.audio = pid;\n            }\n            break;\n          // Packetized metadata (ID3)\n          case 0x15:\n            //logger.log('ID3 PID:'  + pid);\n            if (result.id3 === -1) {\n              result.id3 = pid;\n            }\n            break;\n          // ITU-T Rec. H.264 and ISO/IEC 14496-10 (lower bit-rate video)\n          case 0x1b:\n            //logger.log('AVC PID:'  + pid);\n            if (result.avc === -1) {\n              result.avc = pid;\n            }\n            break;\n          // ISO/IEC 11172-3 (MPEG-1 audio)\n          // or ISO/IEC 13818-3 (MPEG-2 halved sample rate audio)\n          case 0x03:\n          case 0x04:\n            //logger.log('MPEG PID:'  + pid);\n            if (!mpegSupported) {\n              _logger.logger.log('MPEG audio found, not supported in this browser for now');\n            } else if (result.audio === -1) {\n              result.audio = pid;\n              result.isAAC = false;\n            }\n            break;\n          case 0x24:\n            _logger.logger.warn('HEVC stream type found, not supported for now');\n            break;\n          default:\n            _logger.logger.log('unkown stream type:' + data[offset]);\n            break;\n        }\n        // move to the next table entry\n        // skip past the elementary stream descriptors, if present\n        offset += ((data[offset + 3] & 0x0F) << 8 | data[offset + 4]) + 5;\n      }\n      return result;\n    }\n  }, {\n    key: '_parsePES',\n    value: function _parsePES(stream) {\n      var i = 0,\n          frag,\n          pesFlags,\n          pesPrefix,\n          pesLen,\n          pesHdrLen,\n          pesData,\n          pesPts,\n          pesDts,\n          payloadStartOffset,\n          data = stream.data;\n      // safety check\n      if (!stream || stream.size === 0) {\n        return null;\n      }\n\n      // we might need up to 19 bytes to read PES header\n      // if first chunk of data is less than 19 bytes, let's merge it with following ones until we get 19 bytes\n      // usually only one merge is needed (and this is rare ...)\n      while (data[0].length < 19 && data.length > 1) {\n        var newData = new Uint8Array(data[0].length + data[1].length);\n        newData.set(data[0]);\n        newData.set(data[1], data[0].length);\n        data[0] = newData;\n        data.splice(1, 1);\n      }\n      //retrieve PTS/DTS from first fragment\n      frag = data[0];\n      pesPrefix = (frag[0] << 16) + (frag[1] << 8) + frag[2];\n      if (pesPrefix === 1) {\n        pesLen = (frag[4] << 8) + frag[5];\n        // if PES parsed length is not zero and greater than total received length, stop parsing. PES might be truncated\n        // minus 6 : PES header size\n        if (pesLen && pesLen > stream.size - 6) {\n          return null;\n        }\n        pesFlags = frag[7];\n        if (pesFlags & 0xC0) {\n          /* PES header described here : http://dvd.sourceforge.net/dvdinfo/pes-hdr.html\n              as PTS / DTS is 33 bit we cannot use bitwise operator in JS,\n              as Bitwise operators treat their operands as a sequence of 32 bits */\n          pesPts = (frag[9] & 0x0E) * 536870912 + // 1 << 29\n          (frag[10] & 0xFF) * 4194304 + // 1 << 22\n          (frag[11] & 0xFE) * 16384 + // 1 << 14\n          (frag[12] & 0xFF) * 128 + // 1 << 7\n          (frag[13] & 0xFE) / 2;\n          // check if greater than 2^32 -1\n          if (pesPts > 4294967295) {\n            // decrement 2^33\n            pesPts -= 8589934592;\n          }\n          if (pesFlags & 0x40) {\n            pesDts = (frag[14] & 0x0E) * 536870912 + // 1 << 29\n            (frag[15] & 0xFF) * 4194304 + // 1 << 22\n            (frag[16] & 0xFE) * 16384 + // 1 << 14\n            (frag[17] & 0xFF) * 128 + // 1 << 7\n            (frag[18] & 0xFE) / 2;\n            // check if greater than 2^32 -1\n            if (pesDts > 4294967295) {\n              // decrement 2^33\n              pesDts -= 8589934592;\n            }\n            if (pesPts - pesDts > 60 * 90000) {\n              _logger.logger.warn(Math.round((pesPts - pesDts) / 90000) + 's delta between PTS and DTS, align them');\n              pesPts = pesDts;\n            }\n          } else {\n            pesDts = pesPts;\n          }\n        }\n        pesHdrLen = frag[8];\n        // 9 bytes : 6 bytes for PES header + 3 bytes for PES extension\n        payloadStartOffset = pesHdrLen + 9;\n\n        stream.size -= payloadStartOffset;\n        //reassemble PES packet\n        pesData = new Uint8Array(stream.size);\n        for (var j = 0, dataLen = data.length; j < dataLen; j++) {\n          frag = data[j];\n          var len = frag.byteLength;\n          if (payloadStartOffset) {\n            if (payloadStartOffset > len) {\n              // trim full frag if PES header bigger than frag\n              payloadStartOffset -= len;\n              continue;\n            } else {\n              // trim partial frag if PES header smaller than frag\n              frag = frag.subarray(payloadStartOffset);\n              len -= payloadStartOffset;\n              payloadStartOffset = 0;\n            }\n          }\n          pesData.set(frag, i);\n          i += len;\n        }\n        if (pesLen) {\n          // payload size : remove PES header + PES extension\n          pesLen -= pesHdrLen + 3;\n        }\n        return { data: pesData, pts: pesPts, dts: pesDts, len: pesLen };\n      } else {\n        return null;\n      }\n    }\n  }, {\n    key: 'pushAccesUnit',\n    value: function pushAccesUnit(avcSample, avcTrack) {\n      if (avcSample.units.units.length && avcSample.frame) {\n        // only push AVC sample if starting with a keyframe is not mandatory OR\n        //    if keyframe already found in this fragment OR\n        //       keyframe found in last fragment (track.sps) AND\n        //          samples already appended (we already found a keyframe in this fragment) OR fragment is contiguous\n        if (!this.config.forceKeyFrameOnDiscontinuity || avcSample.key === true || avcTrack.sps && (avcTrack.samples.length || this.contiguous)) {\n          avcTrack.samples.push(avcSample);\n        } else {\n          // dropped samples, track it\n          avcTrack.dropped++;\n        }\n      }\n      if (avcSample.debug.length) {\n        _logger.logger.log(avcSample.pts + '/' + avcSample.dts + ':' + avcSample.debug + ',' + avcSample.units.length);\n      }\n    }\n  }, {\n    key: '_parseAVCPES',\n    value: function _parseAVCPES(pes, last) {\n      var _this = this;\n\n      //logger.log('parse new PES');\n      var track = this._avcTrack,\n          units = this._parseAVCNALu(pes.data),\n          debug = false,\n          expGolombDecoder,\n          avcSample = this.avcSample,\n          push,\n          i;\n      //free pes.data to save up some memory\n      pes.data = null;\n\n      units.forEach(function (unit) {\n        switch (unit.type) {\n          //NDR\n          case 1:\n            push = true;\n            if (debug && avcSample) {\n              avcSample.debug += 'NDR ';\n            }\n            avcSample.frame = true;\n            // retrieve slice type by parsing beginning of NAL unit (follow H264 spec, slice_header definition) to detect keyframe embedded in NDR\n            var data = unit.data;\n            if (data.length > 4) {\n              var sliceType = new _expGolomb2.default(data).readSliceType();\n              // 2 : I slice, 4 : SI slice, 7 : I slice, 9: SI slice\n              // SI slice : A slice that is coded using intra prediction only and using quantisation of the prediction samples.\n              // An SI slice can be coded such that its decoded samples can be constructed identically to an SP slice.\n              // I slice: A slice that is not an SI slice that is decoded using intra prediction only.\n              //if (sliceType === 2 || sliceType === 7) {\n              if (sliceType === 2 || sliceType === 4 || sliceType === 7 || sliceType === 9) {\n                avcSample.key = true;\n              }\n            }\n            break;\n          //IDR\n          case 5:\n            push = true;\n            // handle PES not starting with AUD\n            if (!avcSample) {\n              avcSample = _this.avcSample = _this._createAVCSample(true, pes.pts, pes.dts, '');\n            }\n            if (debug) {\n              avcSample.debug += 'IDR ';\n            }\n            avcSample.key = true;\n            avcSample.frame = true;\n            break;\n          //SEI\n          case 6:\n            push = true;\n            if (debug && avcSample) {\n              avcSample.debug += 'SEI ';\n            }\n            expGolombDecoder = new _expGolomb2.default(_this.discardEPB(unit.data));\n\n            // skip frameType\n            expGolombDecoder.readUByte();\n\n            var payloadType = 0;\n            var payloadSize = 0;\n            var endOfCaptions = false;\n            var b = 0;\n\n            while (!endOfCaptions && expGolombDecoder.bytesAvailable > 1) {\n              payloadType = 0;\n              do {\n                b = expGolombDecoder.readUByte();\n                payloadType += b;\n              } while (b === 0xFF);\n\n              // Parse payload size.\n              payloadSize = 0;\n              do {\n                b = expGolombDecoder.readUByte();\n                payloadSize += b;\n              } while (b === 0xFF);\n\n              // TODO: there can be more than one payload in an SEI packet...\n              // TODO: need to read type and size in a while loop to get them all\n              if (payloadType === 4 && expGolombDecoder.bytesAvailable !== 0) {\n\n                endOfCaptions = true;\n\n                var countryCode = expGolombDecoder.readUByte();\n\n                if (countryCode === 181) {\n                  var providerCode = expGolombDecoder.readUShort();\n\n                  if (providerCode === 49) {\n                    var userStructure = expGolombDecoder.readUInt();\n\n                    if (userStructure === 0x47413934) {\n                      var userDataType = expGolombDecoder.readUByte();\n\n                      // Raw CEA-608 bytes wrapped in CEA-708 packet\n                      if (userDataType === 3) {\n                        var firstByte = expGolombDecoder.readUByte();\n                        var secondByte = expGolombDecoder.readUByte();\n\n                        var totalCCs = 31 & firstByte;\n                        var byteArray = [firstByte, secondByte];\n\n                        for (i = 0; i < totalCCs; i++) {\n                          // 3 bytes per CC\n                          byteArray.push(expGolombDecoder.readUByte());\n                          byteArray.push(expGolombDecoder.readUByte());\n                          byteArray.push(expGolombDecoder.readUByte());\n                        }\n\n                        _this._insertSampleInOrder(_this._txtTrack.samples, { type: 3, pts: pes.pts, bytes: byteArray });\n                      }\n                    }\n                  }\n                }\n              } else if (payloadSize < expGolombDecoder.bytesAvailable) {\n                for (i = 0; i < payloadSize; i++) {\n                  expGolombDecoder.readUByte();\n                }\n              }\n            }\n            break;\n          //SPS\n          case 7:\n            push = true;\n            if (debug && avcSample) {\n              avcSample.debug += 'SPS ';\n            }\n            if (!track.sps) {\n              expGolombDecoder = new _expGolomb2.default(unit.data);\n              var config = expGolombDecoder.readSPS();\n              track.width = config.width;\n              track.height = config.height;\n              track.pixelRatio = config.pixelRatio;\n              track.sps = [unit.data];\n              track.duration = _this._duration;\n              var codecarray = unit.data.subarray(1, 4);\n              var codecstring = 'avc1.';\n              for (i = 0; i < 3; i++) {\n                var h = codecarray[i].toString(16);\n                if (h.length < 2) {\n                  h = '0' + h;\n                }\n                codecstring += h;\n              }\n              track.codec = codecstring;\n            }\n            break;\n          //PPS\n          case 8:\n            push = true;\n            if (debug && avcSample) {\n              avcSample.debug += 'PPS ';\n            }\n            if (!track.pps) {\n              track.pps = [unit.data];\n            }\n            break;\n          // AUD\n          case 9:\n            push = false;\n            if (avcSample) {\n              _this.pushAccesUnit(avcSample, track);\n            }\n            avcSample = _this.avcSample = _this._createAVCSample(false, pes.pts, pes.dts, debug ? 'AUD ' : '');\n            break;\n          // Filler Data\n          case 12:\n            push = false;\n            break;\n          default:\n            push = false;\n            if (avcSample) {\n              avcSample.debug += 'unknown NAL ' + unit.type + ' ';\n            }\n            break;\n        }\n        if (avcSample && push) {\n          var _units = avcSample.units;\n          _units.units.push(unit);\n        }\n      });\n      // if last PES packet, push samples\n      if (last && avcSample) {\n        this.pushAccesUnit(avcSample, track);\n        this.avcSample = null;\n      }\n    }\n  }, {\n    key: '_createAVCSample',\n    value: function _createAVCSample(key, pts, dts, debug) {\n      return { key: key, pts: pts, dts: dts, units: { units: [], length: 0 }, debug: debug };\n    }\n  }, {\n    key: '_insertSampleInOrder',\n    value: function _insertSampleInOrder(arr, data) {\n      var len = arr.length;\n      if (len > 0) {\n        if (data.pts >= arr[len - 1].pts) {\n          arr.push(data);\n        } else {\n          for (var pos = len - 1; pos >= 0; pos--) {\n            if (data.pts < arr[pos].pts) {\n              arr.splice(pos, 0, data);\n              break;\n            }\n          }\n        }\n      } else {\n        arr.push(data);\n      }\n    }\n  }, {\n    key: '_getLastNalUnit',\n    value: function _getLastNalUnit() {\n      var avcSample = this.avcSample,\n          lastUnit = void 0;\n      // try to fallback to previous sample if current one is empty\n      if (!avcSample || avcSample.units.units.length === 0) {\n        var track = this._avcTrack,\n            samples = track.samples;\n        avcSample = samples[samples.length - 1];\n      }\n      if (avcSample) {\n        var units = avcSample.units.units;\n        lastUnit = units[units.length - 1];\n      }\n      return lastUnit;\n    }\n  }, {\n    key: '_parseAVCNALu',\n    value: function _parseAVCNALu(array) {\n      var i = 0,\n          len = array.byteLength,\n          value,\n          overflow,\n          track = this._avcTrack,\n          state = track.naluState || 0,\n          lastState = state;\n      var units = [],\n          unit,\n          unitType,\n          lastUnitStart = -1,\n          lastUnitType;\n      //logger.log('PES:' + Hex.hexDump(array));\n\n      if (state === -1) {\n        // special use case where we found 3 or 4-byte start codes exactly at the end of previous PES packet\n        lastUnitStart = 0;\n        // NALu type is value read from offset 0\n        lastUnitType = array[0] & 0x1f;\n        state = 0;\n        i = 1;\n      }\n\n      while (i < len) {\n        value = array[i++];\n        // optimization. state 0 and 1 are the predominant case. let's handle them outside of the switch/case\n        if (!state) {\n          state = value ? 0 : 1;\n          continue;\n        }\n        if (state === 1) {\n          state = value ? 0 : 2;\n          continue;\n        }\n        // here we have state either equal to 2 or 3\n        if (!value) {\n          state = 3;\n        } else if (value === 1) {\n          if (lastUnitStart >= 0) {\n            unit = { data: array.subarray(lastUnitStart, i - state - 1), type: lastUnitType };\n            //logger.log('pushing NALU, type/size:' + unit.type + '/' + unit.data.byteLength);\n            units.push(unit);\n          } else {\n            // lastUnitStart is undefined => this is the first start code found in this PES packet\n            // first check if start code delimiter is overlapping between 2 PES packets,\n            // ie it started in last packet (lastState not zero)\n            // and ended at the beginning of this PES packet (i <= 4 - lastState)\n            var lastUnit = this._getLastNalUnit();\n            if (lastUnit) {\n              if (lastState && i <= 4 - lastState) {\n                // start delimiter overlapping between PES packets\n                // strip start delimiter bytes from the end of last NAL unit\n                // check if lastUnit had a state different from zero\n                if (lastUnit.state) {\n                  // strip last bytes\n                  lastUnit.data = lastUnit.data.subarray(0, lastUnit.data.byteLength - lastState);\n                }\n              }\n              // If NAL units are not starting right at the beginning of the PES packet, push preceding data into previous NAL unit.\n              overflow = i - state - 1;\n              if (overflow > 0) {\n                //logger.log('first NALU found with overflow:' + overflow);\n                var tmp = new Uint8Array(lastUnit.data.byteLength + overflow);\n                tmp.set(lastUnit.data, 0);\n                tmp.set(array.subarray(0, overflow), lastUnit.data.byteLength);\n                lastUnit.data = tmp;\n              }\n            }\n          }\n          // check if we can read unit type\n          if (i < len) {\n            unitType = array[i] & 0x1f;\n            //logger.log('find NALU @ offset:' + i + ',type:' + unitType);\n            lastUnitStart = i;\n            lastUnitType = unitType;\n            state = 0;\n          } else {\n            // not enough byte to read unit type. let's read it on next PES parsing\n            state = -1;\n          }\n        } else {\n          state = 0;\n        }\n      }\n      if (lastUnitStart >= 0 && state >= 0) {\n        unit = { data: array.subarray(lastUnitStart, len), type: lastUnitType, state: state };\n        units.push(unit);\n        //logger.log('pushing NALU, type/size/state:' + unit.type + '/' + unit.data.byteLength + '/' + state);\n      }\n      // no NALu found\n      if (units.length === 0) {\n        // append pes.data to previous NAL unit\n        var _lastUnit = this._getLastNalUnit();\n        if (_lastUnit) {\n          var _tmp = new Uint8Array(_lastUnit.data.byteLength + array.byteLength);\n          _tmp.set(_lastUnit.data, 0);\n          _tmp.set(array, _lastUnit.data.byteLength);\n          _lastUnit.data = _tmp;\n        }\n      }\n      track.naluState = state;\n      return units;\n    }\n\n    /**\n     * remove Emulation Prevention bytes from a RBSP\n     */\n\n  }, {\n    key: 'discardEPB',\n    value: function discardEPB(data) {\n      var length = data.byteLength,\n          EPBPositions = [],\n          i = 1,\n          newLength,\n          newData;\n\n      // Find all `Emulation Prevention Bytes`\n      while (i < length - 2) {\n        if (data[i] === 0 && data[i + 1] === 0 && data[i + 2] === 0x03) {\n          EPBPositions.push(i + 2);\n          i += 2;\n        } else {\n          i++;\n        }\n      }\n\n      // If no Emulation Prevention Bytes were found just return the original\n      // array\n      if (EPBPositions.length === 0) {\n        return data;\n      }\n\n      // Create a new array to hold the NAL unit data\n      newLength = length - EPBPositions.length;\n      newData = new Uint8Array(newLength);\n      var sourceIndex = 0;\n\n      for (i = 0; i < newLength; sourceIndex++, i++) {\n        if (sourceIndex === EPBPositions[0]) {\n          // Skip this byte\n          sourceIndex++;\n          // Remove this position index\n          EPBPositions.shift();\n        }\n        newData[i] = data[sourceIndex];\n      }\n      return newData;\n    }\n  }, {\n    key: '_parseAACPES',\n    value: function _parseAACPES(pes) {\n      var track = this._audioTrack,\n          data = pes.data,\n          pts = pes.pts,\n          startOffset = 0,\n          aacOverFlow = this.aacOverFlow,\n          aacLastPTS = this.aacLastPTS,\n          config,\n          frameLength,\n          frameDuration,\n          frameIndex,\n          offset,\n          headerLength,\n          stamp,\n          len,\n          aacSample;\n      if (aacOverFlow) {\n        var tmp = new Uint8Array(aacOverFlow.byteLength + data.byteLength);\n        tmp.set(aacOverFlow, 0);\n        tmp.set(data, aacOverFlow.byteLength);\n        //logger.log(`AAC: append overflowing ${aacOverFlow.byteLength} bytes to beginning of new PES`);\n        data = tmp;\n      }\n      // look for ADTS header (0xFFFx)\n      for (offset = startOffset, len = data.length; offset < len - 1; offset++) {\n        if (data[offset] === 0xff && (data[offset + 1] & 0xf0) === 0xf0) {\n          break;\n        }\n      }\n      // if ADTS header does not start straight from the beginning of the PES payload, raise an error\n      if (offset) {\n        var reason, fatal;\n        if (offset < len - 1) {\n          reason = 'AAC PES did not start with ADTS header,offset:' + offset;\n          fatal = false;\n        } else {\n          reason = 'no ADTS header found in AAC PES';\n          fatal = true;\n        }\n        _logger.logger.warn('parsing error:' + reason);\n        this.observer.trigger(_events2.default.ERROR, { type: _errors.ErrorTypes.MEDIA_ERROR, id: this.id, details: _errors.ErrorDetails.FRAG_PARSING_ERROR, fatal: fatal, reason: reason });\n        if (fatal) {\n          return;\n        }\n      }\n      if (!track.audiosamplerate) {\n        var audioCodec = this.audioCodec;\n        config = _adts2.default.getAudioConfig(this.observer, data, offset, audioCodec);\n        track.config = config.config;\n        track.audiosamplerate = config.samplerate;\n        track.channelCount = config.channelCount;\n        track.codec = config.codec;\n        track.manifestCodec = config.manifestCodec;\n        track.duration = this._duration;\n        _logger.logger.log('parsed codec:' + track.codec + ',rate:' + config.samplerate + ',nb channel:' + config.channelCount);\n      }\n      frameIndex = 0;\n      frameDuration = 1024 * 90000 / track.audiosamplerate;\n\n      // if last AAC frame is overflowing, we should ensure timestamps are contiguous:\n      // first sample PTS should be equal to last sample PTS + frameDuration\n      if (aacOverFlow && aacLastPTS) {\n        var newPTS = aacLastPTS + frameDuration;\n        if (Math.abs(newPTS - pts) > 1) {\n          _logger.logger.log('AAC: align PTS for overlapping frames by ' + Math.round((newPTS - pts) / 90));\n          pts = newPTS;\n        }\n      }\n\n      while (offset + 5 < len) {\n        // The protection skip bit tells us if we have 2 bytes of CRC data at the end of the ADTS header\n        headerLength = !!(data[offset + 1] & 0x01) ? 7 : 9;\n        // retrieve frame size\n        frameLength = (data[offset + 3] & 0x03) << 11 | data[offset + 4] << 3 | (data[offset + 5] & 0xE0) >>> 5;\n        frameLength -= headerLength;\n        //stamp = pes.pts;\n\n        if (frameLength > 0 && offset + headerLength + frameLength <= len) {\n          stamp = pts + frameIndex * frameDuration;\n          //logger.log(`AAC frame, offset/length/total/pts:${offset+headerLength}/${frameLength}/${data.byteLength}/${(stamp/90).toFixed(0)}`);\n          aacSample = { unit: data.subarray(offset + headerLength, offset + headerLength + frameLength), pts: stamp, dts: stamp };\n          track.samples.push(aacSample);\n          track.len += frameLength;\n          offset += frameLength + headerLength;\n          frameIndex++;\n          // look for ADTS header (0xFFFx)\n          for (; offset < len - 1; offset++) {\n            if (data[offset] === 0xff && (data[offset + 1] & 0xf0) === 0xf0) {\n              break;\n            }\n          }\n        } else {\n          break;\n        }\n      }\n      if (offset < len) {\n        aacOverFlow = data.subarray(offset, len);\n        //logger.log(`AAC: overflow detected:${len-offset}`);\n      } else {\n        aacOverFlow = null;\n      }\n      this.aacOverFlow = aacOverFlow;\n      this.aacLastPTS = stamp;\n    }\n  }, {\n    key: '_parseMPEGPES',\n    value: function _parseMPEGPES(pes) {\n      var data = pes.data;\n      var pts = pes.pts;\n      var length = data.length;\n      var frameIndex = 0;\n      var offset = 0;\n      var parsed;\n\n      while (offset < length && (parsed = this._parseMpeg(data, offset, length, frameIndex++, pts)) > 0) {\n        offset += parsed;\n      }\n    }\n  }, {\n    key: '_onMpegFrame',\n    value: function _onMpegFrame(data, bitRate, sampleRate, channelCount, frameIndex, pts) {\n      var frameDuration = 1152 / sampleRate * 1000;\n      var stamp = pts + frameIndex * frameDuration;\n      var track = this._audioTrack;\n\n      track.config = [];\n      track.channelCount = channelCount;\n      track.audiosamplerate = sampleRate;\n      track.duration = this._duration;\n      track.samples.push({ unit: data, pts: stamp, dts: stamp });\n      track.len += data.length;\n    }\n  }, {\n    key: '_onMpegNoise',\n    value: function _onMpegNoise(data) {\n      _logger.logger.warn('mpeg audio has noise: ' + data.length + ' bytes');\n    }\n  }, {\n    key: '_parseMpeg',\n    value: function _parseMpeg(data, start, end, frameIndex, pts) {\n      var BitratesMap = [32, 64, 96, 128, 160, 192, 224, 256, 288, 320, 352, 384, 416, 448, 32, 48, 56, 64, 80, 96, 112, 128, 160, 192, 224, 256, 320, 384, 32, 40, 48, 56, 64, 80, 96, 112, 128, 160, 192, 224, 256, 320, 32, 48, 56, 64, 80, 96, 112, 128, 144, 160, 176, 192, 224, 256, 8, 16, 24, 32, 40, 48, 56, 64, 80, 96, 112, 128, 144, 160];\n      var SamplingRateMap = [44100, 48000, 32000, 22050, 24000, 16000, 11025, 12000, 8000];\n\n      if (start + 2 > end) {\n        return -1; // we need at least 2 bytes to detect sync pattern\n      }\n      if (data[start] === 0xFF || (data[start + 1] & 0xE0) === 0xE0) {\n        // Using http://www.datavoyage.com/mpgscript/mpeghdr.htm as a reference\n        if (start + 24 > end) {\n          return -1;\n        }\n        var headerB = data[start + 1] >> 3 & 3;\n        var headerC = data[start + 1] >> 1 & 3;\n        var headerE = data[start + 2] >> 4 & 15;\n        var headerF = data[start + 2] >> 2 & 3;\n        var headerG = !!(data[start + 2] & 2);\n        if (headerB !== 1 && headerE !== 0 && headerE !== 15 && headerF !== 3) {\n          var columnInBitrates = headerB === 3 ? 3 - headerC : headerC === 3 ? 3 : 4;\n          var bitRate = BitratesMap[columnInBitrates * 14 + headerE - 1] * 1000;\n          var columnInSampleRates = headerB === 3 ? 0 : headerB === 2 ? 1 : 2;\n          var sampleRate = SamplingRateMap[columnInSampleRates * 3 + headerF];\n          var padding = headerG ? 1 : 0;\n          var channelCount = data[start + 3] >> 6 === 3 ? 1 : 2; // If bits of channel mode are `11` then it is a single channel (Mono)\n          var frameLength = headerC === 3 ? (headerB === 3 ? 12 : 6) * bitRate / sampleRate + padding << 2 : (headerB === 3 ? 144 : 72) * bitRate / sampleRate + padding | 0;\n          if (start + frameLength > end) {\n            return -1;\n          }\n          if (this._onMpegFrame) {\n            this._onMpegFrame(data.subarray(start, start + frameLength), bitRate, sampleRate, channelCount, frameIndex, pts);\n          }\n          return frameLength;\n        }\n      }\n      // noise or ID3, trying to skip\n      var offset = start + 2;\n      while (offset < end) {\n        if (data[offset - 1] === 0xFF && (data[offset] & 0xE0) === 0xE0) {\n          // sync pattern is found\n          if (this._onMpegNoise) {\n            this._onMpegNoise(data.subarray(start, offset - 1));\n          }\n          return offset - start - 1;\n        }\n        offset++;\n      }\n      return -1;\n    }\n  }, {\n    key: '_parseID3PES',\n    value: function _parseID3PES(pes) {\n      this._id3Track.samples.push(pes);\n    }\n  }], [{\n    key: 'probe',\n    value: function probe(data) {\n      // a TS fragment should contain at least 3 TS packets, a PAT, a PMT, and one PID, each starting with 0x47\n      if (data.length >= 3 * 188 && data[0] === 0x47 && data[188] === 0x47 && data[2 * 188] === 0x47) {\n        return true;\n      } else {\n        return false;\n      }\n    }\n  }]);\n\n  return TSDemuxer;\n}();\n\nexports.default = TSDemuxer;\n\n},{\"19\":19,\"23\":23,\"26\":26,\"28\":28,\"45\":45}],26:[function(_dereq_,module,exports){\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nvar ErrorTypes = exports.ErrorTypes = {\n  // Identifier for a network error (loading error / timeout ...)\n  NETWORK_ERROR: 'networkError',\n  // Identifier for a media Error (video/parsing/mediasource error)\n  MEDIA_ERROR: 'mediaError',\n  // Identifier for a mux Error (demuxing/remuxing)\n  MUX_ERROR: 'muxError',\n  // Identifier for all other errors\n  OTHER_ERROR: 'otherError'\n};\n\nvar ErrorDetails = exports.ErrorDetails = {\n  // Identifier for a manifest load error - data: { url : faulty URL, response : { code: error code, text: error text }}\n  MANIFEST_LOAD_ERROR: 'manifestLoadError',\n  // Identifier for a manifest load timeout - data: { url : faulty URL, response : { code: error code, text: error text }}\n  MANIFEST_LOAD_TIMEOUT: 'manifestLoadTimeOut',\n  // Identifier for a manifest parsing error - data: { url : faulty URL, reason : error reason}\n  MANIFEST_PARSING_ERROR: 'manifestParsingError',\n  // Identifier for a manifest with only incompatible codecs error - data: { url : faulty URL, reason : error reason}\n  MANIFEST_INCOMPATIBLE_CODECS_ERROR: 'manifestIncompatibleCodecsError',\n  // Identifier for a level load error - data: { url : faulty URL, response : { code: error code, text: error text }}\n  LEVEL_LOAD_ERROR: 'levelLoadError',\n  // Identifier for a level load timeout - data: { url : faulty URL, response : { code: error code, text: error text }}\n  LEVEL_LOAD_TIMEOUT: 'levelLoadTimeOut',\n  // Identifier for a level switch error - data: { level : faulty level Id, event : error description}\n  LEVEL_SWITCH_ERROR: 'levelSwitchError',\n  // Identifier for an audio track load error - data: { url : faulty URL, response : { code: error code, text: error text }}\n  AUDIO_TRACK_LOAD_ERROR: 'audioTrackLoadError',\n  // Identifier for an audio track load timeout - data: { url : faulty URL, response : { code: error code, text: error text }}\n  AUDIO_TRACK_LOAD_TIMEOUT: 'audioTrackLoadTimeOut',\n  // Identifier for fragment load error - data: { frag : fragment object, response : { code: error code, text: error text }}\n  FRAG_LOAD_ERROR: 'fragLoadError',\n  // Identifier for fragment loop loading error - data: { frag : fragment object}\n  FRAG_LOOP_LOADING_ERROR: 'fragLoopLoadingError',\n  // Identifier for fragment load timeout error - data: { frag : fragment object}\n  FRAG_LOAD_TIMEOUT: 'fragLoadTimeOut',\n  // Identifier for a fragment decryption error event - data: parsing error description\n  FRAG_DECRYPT_ERROR: 'fragDecryptError',\n  // Identifier for a fragment parsing error event - data: { id : demuxer Id, reason : parsing error description }\n  // will be renamed DEMUX_PARSING_ERROR and switched to MUX_ERROR in the next major release\n  FRAG_PARSING_ERROR: 'fragParsingError',\n  // Identifier for a remux alloc error event - data: { id : demuxer Id, bytes : nb of bytes on which allocation failed , reason : error text }\n  REMUX_ALLOC_ERROR: 'remuxAllocError',\n  // Identifier for decrypt key load error - data: { frag : fragment object, response : { code: error code, text: error text }}\n  KEY_LOAD_ERROR: 'keyLoadError',\n  // Identifier for decrypt key load timeout error - data: { frag : fragment object}\n  KEY_LOAD_TIMEOUT: 'keyLoadTimeOut',\n  // Triggered when an exception occurs while adding a sourceBuffer to MediaSource - data : {  err : exception , mimeType : mimeType }\n  BUFFER_ADD_CODEC_ERROR: 'bufferAddCodecError',\n  // Identifier for a buffer append error - data: append error description\n  BUFFER_APPEND_ERROR: 'bufferAppendError',\n  // Identifier for a buffer appending error event - data: appending error description\n  BUFFER_APPENDING_ERROR: 'bufferAppendingError',\n  // Identifier for a buffer stalled error event\n  BUFFER_STALLED_ERROR: 'bufferStalledError',\n  // Identifier for a buffer full event\n  BUFFER_FULL_ERROR: 'bufferFullError',\n  // Identifier for a buffer seek over hole event\n  BUFFER_SEEK_OVER_HOLE: 'bufferSeekOverHole',\n  // Identifier for a buffer nudge on stall (playback is stuck although currentTime is in a buffered area)\n  BUFFER_NUDGE_ON_STALL: 'bufferNudgeOnStall',\n  // Identifier for an internal exception happening inside hls.js while handling an event\n  INTERNAL_EXCEPTION: 'internalException'\n};\n\n},{}],27:[function(_dereq_,module,exports){\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }(); /*\nnll objects in the event handling chain should inherit from this class\nnn\nvar _logger = _dereq_(45);\n\nvar _errors = _dereq_(26);\n\nvar _events = _dereq_(28);\n\nvar _events2 = _interopRequireDefault(_events);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar EventHandler = function () {\n  function EventHandler(hls) {\n    _classCallCheck(this, EventHandler);\n\n    this.hls = hls;\n    this.onEvent = this.onEvent.bind(this);\n\n    for (var _len = arguments.length, events = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n      events[_key - 1] = arguments[_key];\n    }\n\n    this.handledEvents = events;\n    this.useGenericHandler = true;\n\n    this.registerListeners();\n  }\n\n  _createClass(EventHandler, [{\n    key: 'destroy',\n    value: function destroy() {\n      this.unregisterListeners();\n    }\n  }, {\n    key: 'isEventHandler',\n    value: function isEventHandler() {\n      return _typeof(this.handledEvents) === 'object' && this.handledEvents.length && typeof this.onEvent === 'function';\n    }\n  }, {\n    key: 'registerListeners',\n    value: function registerListeners() {\n      if (this.isEventHandler()) {\n        this.handledEvents.forEach(function (event) {\n          if (event === 'hlsEventGeneric') {\n            throw new Error('Forbidden event name: ' + event);\n          }\n          this.hls.on(event, this.onEvent);\n        }.bind(this));\n      }\n    }\n  }, {\n    key: 'unregisterListeners',\n    value: function unregisterListeners() {\n      if (this.isEventHandler()) {\n        this.handledEvents.forEach(function (event) {\n          this.hls.off(event, this.onEvent);\n        }.bind(this));\n      }\n    }\n\n    /**\n     * arguments: event (string), data (any)\n     */\n\n  }, {\n    key: 'onEvent',\n    value: function onEvent(event, data) {\n      this.onEventGeneric(event, data);\n    }\n  }, {\n    key: 'onEventGeneric',\n    value: function onEventGeneric(event, data) {\n      var eventToFunction = function eventToFunction(event, data) {\n        var funcName = 'on' + event.replace('hls', '');\n        if (typeof this[funcName] !== 'function') {\n          throw new Error('Event ' + event + ' has no generic handler in this ' + this.constructor.name + ' class (tried ' + funcName + ')');\n        }\n        return this[funcName].bind(this, data);\n      };\n      try {\n        eventToFunction.call(this, event, data).call();\n      } catch (err) {\n        _logger.logger.error('internal error happened while processing ' + event + ':' + err.message);\n        this.hls.trigger(_events2.default.ERROR, { type: _errors.ErrorTypes.OTHER_ERROR, details: _errors.ErrorDetails.INTERNAL_EXCEPTION, fatal: false, event: event, err: err });\n      }\n    }\n  }]);\n\n  return EventHandler;\n}();\n\nexports.default = EventHandler;\n\n},{\"26\":26,\"28\":28,\"45\":45}],28:[function(_dereq_,module,exports){\n'use strict';\n\nmodule.exports = {\n  // fired before MediaSource is attaching to media element - data: { media }\n  MEDIA_ATTACHING: 'hlsMediaAttaching',\n  // fired when MediaSource has been succesfully attached to media element - data: { }\n  MEDIA_ATTACHED: 'hlsMediaAttached',\n  // fired before detaching MediaSource from media element - data: { }\n  MEDIA_DETACHING: 'hlsMediaDetaching',\n  // fired when MediaSource has been detached from media element - data: { }\n  MEDIA_DETACHED: 'hlsMediaDetached',\n  // fired when we buffer is going to be resetted\n  BUFFER_RESET: 'hlsBufferReset',\n  // fired when we know about the codecs that we need buffers for to push into - data: {tracks : { container, codec, levelCodec, initSegment, metadata }}\n  BUFFER_CODECS: 'hlsBufferCodecs',\n  // fired when sourcebuffers have been created data: { tracks : tracks}\n  BUFFER_CREATED: 'hlsBufferCreated',\n  // fired when we append a segment to the buffer - data: { segment: segment object }\n  BUFFER_APPENDING: 'hlsBufferAppending',\n  // fired when we are done with appending a media segment to the buffer data : { parent : segment parent that triggered BUFFER_APPENDING , pending : nb of segments waiting for appending for this segment parent}\n  BUFFER_APPENDED: 'hlsBufferAppended',\n  // fired when the stream is finished and we want to notify the media buffer that there will be no more data\n  BUFFER_EOS: 'hlsBufferEos',\n  // fired when the media buffer should be flushed - data {startOffset, endOffset}\n  BUFFER_FLUSHING: 'hlsBufferFlushing',\n  // fired when the media has been flushed\n  BUFFER_FLUSHED: 'hlsBufferFlushed',\n  // fired to signal that a manifest loading starts - data: { url : manifestURL}\n  MANIFEST_LOADING: 'hlsManifestLoading',\n  // fired after manifest has been loaded - data: { levels : [available quality levels] , audioTracks : [ available audio tracks], url : manifestURL, stats : { trequest, tfirst, tload, mtime}}\n  MANIFEST_LOADED: 'hlsManifestLoaded',\n  // fired after manifest has been parsed - data: { levels : [available quality levels] , firstLevel : index of first quality level appearing in Manifest}\n  MANIFEST_PARSED: 'hlsManifestParsed',\n  // fired when a level playlist loading starts - data: { url : level URL  level : id of level being loaded}\n  LEVEL_LOADING: 'hlsLevelLoading',\n  // fired when a level playlist loading finishes - data: { details : levelDetails object, level : id of loaded level, stats : { trequest, tfirst, tload, mtime} }\n  LEVEL_LOADED: 'hlsLevelLoaded',\n  // fired when a level's details have been updated based on previous details, after it has been loaded. - data: { details : levelDetails object, level : id of updated level }\n  LEVEL_UPDATED: 'hlsLevelUpdated',\n  // fired when a level's PTS information has been updated after parsing a fragment - data: { details : levelDetails object, level : id of updated level, drift: PTS drift observed when parsing last fragment }\n  LEVEL_PTS_UPDATED: 'hlsLevelPtsUpdated',\n  // fired when a level switch is requested - data: { level : id of new level }\n  LEVEL_SWITCH: 'hlsLevelSwitch',\n  // fired to notify that audio track lists has been updated data: { audioTracks : audioTracks}\n  AUDIO_TRACKS_UPDATED: 'hlsAudioTracksUpdated',\n  // fired when an audio track switch occurs - data: {  id : audio track id} // deprecated\n  AUDIO_TRACK_SWITCH: 'hlsAudioTrackSwitch',\n  // fired when an audio track switching is requested - data: {  id : audio track id}\n  AUDIO_TRACK_SWITCHING: 'hlsAudioTrackSwitching',\n  // fired when an audio track switch actually occurs - data: {  id : audio track id}\n  AUDIO_TRACK_SWITCHED: 'hlsAudioTrackSwitched',\n  // fired when an audio track loading starts - data: { url : audio track URL  id : audio track id}\n  AUDIO_TRACK_LOADING: 'hlsAudioTrackLoading',\n  // fired when an audio track loading  finishes - data: { details : levelDetails object, id : audio track id, stats : { trequest, tfirst, tload, mtime} }\n  AUDIO_TRACK_LOADED: 'hlsAudioTrackLoaded',\n  // fired when the first timestamp is found. - data: { id : demuxer id, initPTS: initPTS }\n  INIT_PTS_FOUND: 'hlsInitPtsFound',\n  // fired when a fragment loading starts - data: { frag : fragment object}\n  FRAG_LOADING: 'hlsFragLoading',\n  // fired when a fragment loading is progressing - data: { frag : fragment object, { trequest, tfirst, loaded}}\n  FRAG_LOAD_PROGRESS: 'hlsFragLoadProgress',\n  // Identifier for fragment load aborting for emergency switch down - data: {frag : fragment object}\n  FRAG_LOAD_EMERGENCY_ABORTED: 'hlsFragLoadEmergencyAborted',\n  // fired when a fragment loading is completed - data: { frag : fragment object, payload : fragment payload, stats : { trequest, tfirst, tload, length}}\n  FRAG_LOADED: 'hlsFragLoaded',\n  // fired when a fragment has finished decrypting - data: { level : levelId, sn : sequence number }\n  FRAG_DECRYPTED: 'hlsFragDecrypted',\n  // fired when Init Segment has been extracted from fragment - data: { id : demuxer id, level : levelId, sn : sequence number, moov : moov MP4 box, codecs : codecs found while parsing fragment}\n  FRAG_PARSING_INIT_SEGMENT: 'hlsFragParsingInitSegment',\n  // fired when parsing sei text is completed - data: { id : demuxer id, , level : levelId, sn : sequence number, samples : [ sei samples pes ] }\n  FRAG_PARSING_USERDATA: 'hlsFragParsingUserdata',\n  // fired when parsing id3 is completed - data: { id : demuxer id, , level : levelId, sn : sequence number, samples : [ id3 samples pes ] }\n  FRAG_PARSING_METADATA: 'hlsFragParsingMetadata',\n  // fired when data have been extracted from fragment - data: { id : demuxer id, level : levelId, sn : sequence number, data1 : moof MP4 box or TS fragments, data2 : mdat MP4 box or null}\n  FRAG_PARSING_DATA: 'hlsFragParsingData',\n  // fired when fragment parsing is completed - data: { id : demuxer id; level : levelId, sn : sequence number, }\n  FRAG_PARSED: 'hlsFragParsed',\n  // fired when fragment remuxed MP4 boxes have all been appended into SourceBuffer - data: { id : demuxer id,frag : fragment object, stats : { trequest, tfirst, tload, tparsed, tbuffered, length} }\n  FRAG_BUFFERED: 'hlsFragBuffered',\n  // fired when fragment matching with current media position is changing - data : { id : demuxer id, frag : fragment object }\n  FRAG_CHANGED: 'hlsFragChanged',\n  // Identifier for a FPS drop event - data: {curentDropped, currentDecoded, totalDroppedFrames}\n  FPS_DROP: 'hlsFpsDrop',\n  //triggered when FPS drop triggers auto level capping - data: {level, droppedlevel}\n  FPS_DROP_LEVEL_CAPPING: 'hlsFpsDropLevelCapping',\n  // Identifier for an error event - data: { type : error type, details : error details, fatal : if true, hls.js cannot/will not try to recover, if false, hls.js will try to recover,other error specific data}\n  ERROR: 'hlsError',\n  // fired when hls.js instance starts destroying. Different from MEDIA_DETACHED as one could want to detach and reattach a media to the instance of hls.js to handle mid-rolls for example\n  DESTROYING: 'hlsDestroying',\n  // fired when a decrypt key loading starts - data: { frag : fragment object}\n  KEY_LOADING: 'hlsKeyLoading',\n  // fired when a decrypt key loading is completed - data: { frag : fragment object, payload : key payload, stats : { trequest, tfirst, tload, length}}\n  KEY_LOADED: 'hlsKeyLoaded',\n  // fired upon stream controller state transitions - data: {previousState, nextState}\n  STREAM_STATE_TRANSITION: 'hlsStreamStateTransition'\n};\n\n},{}],29:[function(_dereq_,module,exports){\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n/**\n *  AAC helper\n */\n\nvar AAC = function () {\n  function AAC() {\n    _classCallCheck(this, AAC);\n  }\n\n  _createClass(AAC, null, [{\n    key: 'getSilentFrame',\n    value: function getSilentFrame(codec, channelCount) {\n      switch (codec) {\n        case 'mp4a.40.2':\n          if (channelCount === 1) {\n            return new Uint8Array([0x00, 0xc8, 0x00, 0x80, 0x23, 0x80]);\n          } else if (channelCount === 2) {\n            return new Uint8Array([0x21, 0x00, 0x49, 0x90, 0x02, 0x19, 0x00, 0x23, 0x80]);\n          } else if (channelCount === 3) {\n            return new Uint8Array([0x00, 0xc8, 0x00, 0x80, 0x20, 0x84, 0x01, 0x26, 0x40, 0x08, 0x64, 0x00, 0x8e]);\n          } else if (channelCount === 4) {\n            return new Uint8Array([0x00, 0xc8, 0x00, 0x80, 0x20, 0x84, 0x01, 0x26, 0x40, 0x08, 0x64, 0x00, 0x80, 0x2c, 0x80, 0x08, 0x02, 0x38]);\n          } else if (channelCount === 5) {\n            return new Uint8Array([0x00, 0xc8, 0x00, 0x80, 0x20, 0x84, 0x01, 0x26, 0x40, 0x08, 0x64, 0x00, 0x82, 0x30, 0x04, 0x99, 0x00, 0x21, 0x90, 0x02, 0x38]);\n          } else if (channelCount === 6) {\n            return new Uint8Array([0x00, 0xc8, 0x00, 0x80, 0x20, 0x84, 0x01, 0x26, 0x40, 0x08, 0x64, 0x00, 0x82, 0x30, 0x04, 0x99, 0x00, 0x21, 0x90, 0x02, 0x00, 0xb2, 0x00, 0x20, 0x08, 0xe0]);\n          }\n          break;\n        // handle HE-AAC below (mp4a.40.5 / mp4a.40.29)\n        default:\n          if (channelCount === 1) {\n            // ffmpeg -y -f lavfi -i \"aevalsrc=0:d=0.05\" -c:a libfdk_aac -profile:a aac_he -b:a 4k output.aac && hexdump -v -e '16/1 \"0x%x,\" \"\\n\"' -v output.aac\n            return new Uint8Array([0x1, 0x40, 0x22, 0x80, 0xa3, 0x4e, 0xe6, 0x80, 0xba, 0x8, 0x0, 0x0, 0x0, 0x1c, 0x6, 0xf1, 0xc1, 0xa, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5e]);\n          } else if (channelCount === 2) {\n            // ffmpeg -y -f lavfi -i \"aevalsrc=0|0:d=0.05\" -c:a libfdk_aac -profile:a aac_he_v2 -b:a 4k output.aac && hexdump -v -e '16/1 \"0x%x,\" \"\\n\"' -v output.aac\n            return new Uint8Array([0x1, 0x40, 0x22, 0x80, 0xa3, 0x5e, 0xe6, 0x80, 0xba, 0x8, 0x0, 0x0, 0x0, 0x0, 0x95, 0x0, 0x6, 0xf1, 0xa1, 0xa, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5e]);\n          } else if (channelCount === 3) {\n            // ffmpeg -y -f lavfi -i \"aevalsrc=0|0|0:d=0.05\" -c:a libfdk_aac -profile:a aac_he_v2 -b:a 4k output.aac && hexdump -v -e '16/1 \"0x%x,\" \"\\n\"' -v output.aac\n            return new Uint8Array([0x1, 0x40, 0x22, 0x80, 0xa3, 0x5e, 0xe6, 0x80, 0xba, 0x8, 0x0, 0x0, 0x0, 0x0, 0x95, 0x0, 0x6, 0xf1, 0xa1, 0xa, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5e]);\n          }\n          break;\n      }\n      return null;\n    }\n  }]);\n\n  return AAC;\n}();\n\nexports.default = AAC;\n\n},{}],30:[function(_dereq_,module,exports){\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n/**\n * Buffer Helper class, providing methods dealing buffer length retrieval\n*/\n\nvar BufferHelper = function () {\n  function BufferHelper() {\n    _classCallCheck(this, BufferHelper);\n  }\n\n  _createClass(BufferHelper, null, [{\n    key: \"isBuffered\",\n    value: function isBuffered(media, position) {\n      if (media) {\n        var buffered = media.buffered;\n        for (var i = 0; i < buffered.length; i++) {\n          if (position >= buffered.start(i) && position <= buffered.end(i)) {\n            return true;\n          }\n        }\n      }\n      return false;\n    }\n  }, {\n    key: \"bufferInfo\",\n    value: function bufferInfo(media, pos, maxHoleDuration) {\n      if (media) {\n        var vbuffered = media.buffered,\n            buffered = [],\n            i;\n        for (i = 0; i < vbuffered.length; i++) {\n          buffered.push({ start: vbuffered.start(i), end: vbuffered.end(i) });\n        }\n        return this.bufferedInfo(buffered, pos, maxHoleDuration);\n      } else {\n        return { len: 0, start: 0, end: 0, nextStart: undefined };\n      }\n    }\n  }, {\n    key: \"bufferedInfo\",\n    value: function bufferedInfo(buffered, pos, maxHoleDuration) {\n      var buffered2 = [],\n\n      // bufferStart and bufferEnd are buffer boundaries around current video position\n      bufferLen,\n          bufferStart,\n          bufferEnd,\n          bufferStartNext,\n          i;\n      // sort on buffer.start/smaller end (IE does not always return sorted buffered range)\n      buffered.sort(function (a, b) {\n        var diff = a.start - b.start;\n        if (diff) {\n          return diff;\n        } else {\n          return b.end - a.end;\n        }\n      });\n      // there might be some small holes between buffer time range\n      // consider that holes smaller than maxHoleDuration are irrelevant and build another\n      // buffer time range representations that discards those holes\n      for (i = 0; i < buffered.length; i++) {\n        var buf2len = buffered2.length;\n        if (buf2len) {\n          var buf2end = buffered2[buf2len - 1].end;\n          // if small hole (value between 0 or maxHoleDuration ) or overlapping (negative)\n          if (buffered[i].start - buf2end < maxHoleDuration) {\n            // merge overlapping time ranges\n            // update lastRange.end only if smaller than item.end\n            // e.g.  [ 1, 15] with  [ 2,8] => [ 1,15] (no need to modify lastRange.end)\n            // whereas [ 1, 8] with  [ 2,15] => [ 1,15] ( lastRange should switch from [1,8] to [1,15])\n            if (buffered[i].end > buf2end) {\n              buffered2[buf2len - 1].end = buffered[i].end;\n            }\n          } else {\n            // big hole\n            buffered2.push(buffered[i]);\n          }\n        } else {\n          // first value\n          buffered2.push(buffered[i]);\n        }\n      }\n      for (i = 0, bufferLen = 0, bufferStart = bufferEnd = pos; i < buffered2.length; i++) {\n        var start = buffered2[i].start,\n            end = buffered2[i].end;\n        //logger.log('buf start/end:' + buffered.start(i) + '/' + buffered.end(i));\n        if (pos + maxHoleDuration >= start && pos < end) {\n          // play position is inside this buffer TimeRange, retrieve end of buffer position and buffer length\n          bufferStart = start;\n          bufferEnd = end;\n          bufferLen = bufferEnd - pos;\n        } else if (pos + maxHoleDuration < start) {\n          bufferStartNext = start;\n          break;\n        }\n      }\n      return { len: bufferLen, start: bufferStart, end: bufferEnd, nextStart: bufferStartNext };\n    }\n  }]);\n\n  return BufferHelper;\n}();\n\nexports.default = BufferHelper;\n\n},{}],31:[function(_dereq_,module,exports){\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }(); /**\nevel Helper class, providing methods dealing with playlist sliding and drift\nn\nvar _logger = _dereq_(45);\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar LevelHelper = function () {\n  function LevelHelper() {\n    _classCallCheck(this, LevelHelper);\n  }\n\n  _createClass(LevelHelper, null, [{\n    key: 'mergeDetails',\n    value: function mergeDetails(oldDetails, newDetails) {\n      var start = Math.max(oldDetails.startSN, newDetails.startSN) - newDetails.startSN,\n          end = Math.min(oldDetails.endSN, newDetails.endSN) - newDetails.startSN,\n          delta = newDetails.startSN - oldDetails.startSN,\n          oldfragments = oldDetails.fragments,\n          newfragments = newDetails.fragments,\n          ccOffset = 0,\n          PTSFrag;\n\n      // check if old/new playlists have fragments in common\n      if (end < start) {\n        newDetails.PTSKnown = false;\n        return;\n      }\n      // loop through overlapping SN and update startPTS , cc, and duration if any found\n      for (var i = start; i <= end; i++) {\n        var oldFrag = oldfragments[delta + i],\n            newFrag = newfragments[i];\n        if (newFrag && oldFrag) {\n          ccOffset = oldFrag.cc - newFrag.cc;\n          if (!isNaN(oldFrag.startPTS)) {\n            newFrag.start = newFrag.startPTS = oldFrag.startPTS;\n            newFrag.endPTS = oldFrag.endPTS;\n            newFrag.duration = oldFrag.duration;\n            PTSFrag = newFrag;\n          }\n        }\n      }\n\n      if (ccOffset) {\n        _logger.logger.log('discontinuity sliding from playlist, take drift into account');\n        for (i = 0; i < newfragments.length; i++) {\n          newfragments[i].cc += ccOffset;\n        }\n      }\n\n      // if at least one fragment contains PTS info, recompute PTS information for all fragments\n      if (PTSFrag) {\n        LevelHelper.updateFragPTSDTS(newDetails, PTSFrag.sn, PTSFrag.startPTS, PTSFrag.endPTS, PTSFrag.startDTS, PTSFrag.endDTS);\n      } else {\n        // ensure that delta is within oldfragments range\n        // also adjust sliding in case delta is 0 (we could have old=[50-60] and new=old=[50-61])\n        // in that case we also need to adjust start offset of all fragments\n        if (delta >= 0 && delta < oldfragments.length) {\n          // adjust start by sliding offset\n          var sliding = oldfragments[delta].start;\n          for (i = 0; i < newfragments.length; i++) {\n            newfragments[i].start += sliding;\n          }\n        }\n      }\n      // if we are here, it means we have fragments overlapping between\n      // old and new level. reliable PTS info is thus relying on old level\n      newDetails.PTSKnown = oldDetails.PTSKnown;\n      return;\n    }\n  }, {\n    key: 'updateFragPTSDTS',\n    value: function updateFragPTSDTS(details, sn, startPTS, endPTS, startDTS, endDTS) {\n      var fragIdx, fragments, frag, i;\n      // exit if sn out of range\n      if (!details || sn < details.startSN || sn > details.endSN) {\n        return 0;\n      }\n      fragIdx = sn - details.startSN;\n      fragments = details.fragments;\n      frag = fragments[fragIdx];\n      if (!isNaN(frag.startPTS)) {\n        // delta PTS between audio and video\n        var deltaPTS = Math.abs(frag.startPTS - startPTS);\n        if (isNaN(frag.deltaPTS)) {\n          frag.deltaPTS = deltaPTS;\n        } else {\n          frag.deltaPTS = Math.max(deltaPTS, frag.deltaPTS);\n        }\n        startPTS = Math.min(startPTS, frag.startPTS);\n        endPTS = Math.max(endPTS, frag.endPTS);\n        startDTS = Math.min(startDTS, frag.startDTS);\n        endDTS = Math.max(endDTS, frag.endDTS);\n      }\n\n      var drift = startPTS - frag.start;\n\n      frag.start = frag.startPTS = startPTS;\n      frag.endPTS = endPTS;\n      frag.startDTS = startDTS;\n      frag.endDTS = endDTS;\n      frag.duration = endPTS - startPTS;\n      // adjust fragment PTS/duration from seqnum-1 to frag 0\n      for (i = fragIdx; i > 0; i--) {\n        LevelHelper.updatePTS(fragments, i, i - 1);\n      }\n\n      // adjust fragment PTS/duration from seqnum to last frag\n      for (i = fragIdx; i < fragments.length - 1; i++) {\n        LevelHelper.updatePTS(fragments, i, i + 1);\n      }\n      details.PTSKnown = true;\n      //logger.log(`                                            frag start/end:${startPTS.toFixed(3)}/${endPTS.toFixed(3)}`);\n\n      return drift;\n    }\n  }, {\n    key: 'updatePTS',\n    value: function updatePTS(fragments, fromIdx, toIdx) {\n      var fragFrom = fragments[fromIdx],\n          fragTo = fragments[toIdx],\n          fragToPTS = fragTo.startPTS;\n      // if we know startPTS[toIdx]\n      if (!isNaN(fragToPTS)) {\n        // update fragment duration.\n        // it helps to fix drifts between playlist reported duration and fragment real duration\n        if (toIdx > fromIdx) {\n          fragFrom.duration = fragToPTS - fragFrom.start;\n          if (fragFrom.duration < 0) {\n            _logger.logger.warn('negative duration computed for frag ' + fragFrom.sn + ',level ' + fragFrom.level + ', there should be some duration drift between playlist and fragment!');\n          }\n        } else {\n          fragTo.duration = fragFrom.start - fragToPTS;\n          if (fragTo.duration < 0) {\n            _logger.logger.warn('negative duration computed for frag ' + fragTo.sn + ',level ' + fragTo.level + ', there should be some duration drift between playlist and fragment!');\n          }\n        }\n      } else {\n        // we dont know startPTS[toIdx]\n        if (toIdx > fromIdx) {\n          fragTo.start = fragFrom.start + fragFrom.duration;\n        } else {\n          fragTo.start = fragFrom.start - fragTo.duration;\n        }\n      }\n    }\n  }]);\n\n  return LevelHelper;\n}();\n\nexports.default = LevelHelper;\n\n},{\"45\":45}],32:[function(_dereq_,module,exports){\n/**\n * HLS interface\n */\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n//import FetchLoader from './utils/fetch-loader';\n\n\nvar _events = _dereq_(28);\n\nvar _events2 = _interopRequireDefault(_events);\n\nvar _errors = _dereq_(26);\n\nvar _playlistLoader = _dereq_(36);\n\nvar _playlistLoader2 = _interopRequireDefault(_playlistLoader);\n\nvar _fragmentLoader = _dereq_(34);\n\nvar _fragmentLoader2 = _interopRequireDefault(_fragmentLoader);\n\nvar _abrController = _dereq_(4);\n\nvar _abrController2 = _interopRequireDefault(_abrController);\n\nvar _bufferController = _dereq_(7);\n\nvar _bufferController2 = _interopRequireDefault(_bufferController);\n\nvar _capLevelController = _dereq_(8);\n\nvar _capLevelController2 = _interopRequireDefault(_capLevelController);\n\nvar _audioStreamController = _dereq_(5);\n\nvar _audioStreamController2 = _interopRequireDefault(_audioStreamController);\n\nvar _streamController = _dereq_(12);\n\nvar _streamController2 = _interopRequireDefault(_streamController);\n\nvar _levelController = _dereq_(11);\n\nvar _levelController2 = _interopRequireDefault(_levelController);\n\nvar _timelineController = _dereq_(13);\n\nvar _timelineController2 = _interopRequireDefault(_timelineController);\n\nvar _fpsController = _dereq_(10);\n\nvar _fpsController2 = _interopRequireDefault(_fpsController);\n\nvar _audioTrackController = _dereq_(6);\n\nvar _audioTrackController2 = _interopRequireDefault(_audioTrackController);\n\nvar _logger = _dereq_(45);\n\nvar _xhrLoader = _dereq_(47);\n\nvar _xhrLoader2 = _interopRequireDefault(_xhrLoader);\n\nvar _events3 = _dereq_(1);\n\nvar _events4 = _interopRequireDefault(_events3);\n\nvar _keyLoader = _dereq_(35);\n\nvar _keyLoader2 = _interopRequireDefault(_keyLoader);\n\nvar _cues = _dereq_(43);\n\nvar _cues2 = _interopRequireDefault(_cues);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar Hls = function () {\n  _createClass(Hls, null, [{\n    key: 'isSupported',\n    value: function isSupported() {\n      window.MediaSource = window.MediaSource || window.WebKitMediaSource;\n      return window.MediaSource && typeof window.MediaSource.isTypeSupported === 'function' && window.MediaSource.isTypeSupported('video/mp4; codecs=\"avc1.42E01E,mp4a.40.2\"');\n    }\n  }, {\n    key: 'version',\n    get: function get() {\n      // replaced with browserify-versionify transform\n      return '0.6.21';\n    }\n  }, {\n    key: 'Events',\n    get: function get() {\n      return _events2.default;\n    }\n  }, {\n    key: 'ErrorTypes',\n    get: function get() {\n      return _errors.ErrorTypes;\n    }\n  }, {\n    key: 'ErrorDetails',\n    get: function get() {\n      return _errors.ErrorDetails;\n    }\n  }, {\n    key: 'DefaultConfig',\n    get: function get() {\n      if (!Hls.defaultConfig) {\n        Hls.defaultConfig = {\n          autoStartLoad: true,\n          startPosition: -1,\n          defaultAudioCodec: undefined,\n          debug: false,\n          capLevelOnFPSDrop: false,\n          capLevelToPlayerSize: false,\n          initialLiveManifestSize: 1,\n          maxBufferLength: 30,\n          maxBufferSize: 60 * 1000 * 1000,\n          maxBufferHole: 0.5,\n          maxMaxBufferLength: 600,\n          maxSeekHole: 2,\n          lowBufferWatchdogPeriod: 0.5,\n          highBufferWatchdogPeriod: 3,\n          nudgeOffset: 0.1,\n          nudgeMaxRetry: 3,\n          maxFragLookUpTolerance: 0.2,\n          liveSyncDurationCount: 3,\n          liveMaxLatencyDurationCount: Infinity,\n          liveSyncDuration: undefined,\n          liveMaxLatencyDuration: undefined,\n          enableWorker: true,\n          enableSoftwareAES: true,\n          manifestLoadingTimeOut: 10000,\n          manifestLoadingMaxRetry: 1,\n          manifestLoadingRetryDelay: 1000,\n          manifestLoadingMaxRetryTimeout: 64000,\n          startLevel: undefined,\n          levelLoadingTimeOut: 10000,\n          levelLoadingMaxRetry: 4,\n          levelLoadingRetryDelay: 1000,\n          levelLoadingMaxRetryTimeout: 64000,\n          fragLoadingTimeOut: 20000,\n          fragLoadingMaxRetry: 6,\n          fragLoadingRetryDelay: 1000,\n          fragLoadingMaxRetryTimeout: 64000,\n          fragLoadingLoopThreshold: 3,\n          startFragPrefetch: false,\n          fpsDroppedMonitoringPeriod: 5000,\n          fpsDroppedMonitoringThreshold: 0.2,\n          appendErrorMaxRetry: 3,\n          loader: _xhrLoader2.default,\n          //loader: FetchLoader,\n          fLoader: undefined,\n          pLoader: undefined,\n          xhrSetup: undefined,\n          fetchSetup: undefined,\n          abrController: _abrController2.default,\n          bufferController: _bufferController2.default,\n          capLevelController: _capLevelController2.default,\n          fpsController: _fpsController2.default,\n          streamController: _streamController2.default,\n          audioStreamController: _audioStreamController2.default,\n          timelineController: _timelineController2.default,\n          cueHandler: _cues2.default,\n          enableCEA708Captions: true,\n          enableMP2TPassThrough: false,\n          stretchShortVideoTrack: false,\n          forceKeyFrameOnDiscontinuity: true,\n          abrEwmaFastLive: 3,\n          abrEwmaSlowLive: 9,\n          abrEwmaFastVoD: 3,\n          abrEwmaSlowVoD: 9,\n          abrEwmaDefaultEstimate: 5e5, // 500 kbps\n          abrBandWidthFactor: 0.95,\n          abrBandWidthUpFactor: 0.7,\n          maxStarvationDelay: 4,\n          maxLoadingDelay: 4,\n          minAutoBitrate: 0\n        };\n      }\n      return Hls.defaultConfig;\n    },\n    set: function set(defaultConfig) {\n      Hls.defaultConfig = defaultConfig;\n    }\n  }]);\n\n  function Hls() {\n    var config = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n    _classCallCheck(this, Hls);\n\n    var defaultConfig = Hls.DefaultConfig;\n\n    if ((config.liveSyncDurationCount || config.liveMaxLatencyDurationCount) && (config.liveSyncDuration || config.liveMaxLatencyDuration)) {\n      throw new Error('Illegal hls.js config: don\\'t mix up liveSyncDurationCount/liveMaxLatencyDurationCount and liveSyncDuration/liveMaxLatencyDuration');\n    }\n\n    for (var prop in defaultConfig) {\n      if (prop in config) {\n        continue;\n      }\n      config[prop] = defaultConfig[prop];\n    }\n\n    if (config.liveMaxLatencyDurationCount !== undefined && config.liveMaxLatencyDurationCount <= config.liveSyncDurationCount) {\n      throw new Error('Illegal hls.js config: \"liveMaxLatencyDurationCount\" must be gt \"liveSyncDurationCount\"');\n    }\n\n    if (config.liveMaxLatencyDuration !== undefined && (config.liveMaxLatencyDuration <= config.liveSyncDuration || config.liveSyncDuration === undefined)) {\n      throw new Error('Illegal hls.js config: \"liveMaxLatencyDuration\" must be gt \"liveSyncDuration\"');\n    }\n\n    (0, _logger.enableLogs)(config.debug);\n    this.config = config;\n    // observer setup\n    var observer = this.observer = new _events4.default();\n    observer.trigger = function trigger(event) {\n      for (var _len = arguments.length, data = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n        data[_key - 1] = arguments[_key];\n      }\n\n      observer.emit.apply(observer, [event, event].concat(data));\n    };\n\n    observer.off = function off(event) {\n      for (var _len2 = arguments.length, data = Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {\n        data[_key2 - 1] = arguments[_key2];\n      }\n\n      observer.removeListener.apply(observer, [event].concat(data));\n    };\n    this.on = observer.on.bind(observer);\n    this.off = observer.off.bind(observer);\n    this.trigger = observer.trigger.bind(observer);\n    this.playlistLoader = new _playlistLoader2.default(this);\n    this.fragmentLoader = new _fragmentLoader2.default(this);\n    this.levelController = new _levelController2.default(this);\n    this.abrController = new config.abrController(this);\n    this.bufferController = new config.bufferController(this);\n    this.capLevelController = new config.capLevelController(this);\n    this.fpsController = new config.fpsController(this);\n    this.streamController = new config.streamController(this);\n    this.audioStreamController = new config.audioStreamController(this);\n    this.timelineController = new config.timelineController(this);\n    this.audioTrackController = new _audioTrackController2.default(this);\n    this.keyLoader = new _keyLoader2.default(this);\n  }\n\n  _createClass(Hls, [{\n    key: 'destroy',\n    value: function destroy() {\n      _logger.logger.log('destroy');\n      this.trigger(_events2.default.DESTROYING);\n      this.detachMedia();\n      this.playlistLoader.destroy();\n      this.fragmentLoader.destroy();\n      this.levelController.destroy();\n      this.abrController.destroy();\n      this.bufferController.destroy();\n      this.capLevelController.destroy();\n      this.fpsController.destroy();\n      this.streamController.destroy();\n      this.audioStreamController.destroy();\n      this.timelineController.destroy();\n      this.audioTrackController.destroy();\n      this.keyLoader.destroy();\n      this.url = null;\n      this.observer.removeAllListeners();\n    }\n  }, {\n    key: 'attachMedia',\n    value: function attachMedia(media) {\n      _logger.logger.log('attachMedia');\n      this.media = media;\n      this.trigger(_events2.default.MEDIA_ATTACHING, { media: media });\n    }\n  }, {\n    key: 'detachMedia',\n    value: function detachMedia() {\n      _logger.logger.log('detachMedia');\n      this.trigger(_events2.default.MEDIA_DETACHING);\n      this.media = null;\n    }\n  }, {\n    key: 'loadSource',\n    value: function loadSource(url) {\n      _logger.logger.log('loadSource:' + url);\n      this.url = url;\n      // when attaching to a source URL, trigger a playlist load\n      this.trigger(_events2.default.MANIFEST_LOADING, { url: url });\n    }\n  }, {\n    key: 'startLoad',\n    value: function startLoad() {\n      var startPosition = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : -1;\n\n      _logger.logger.log('startLoad(' + startPosition + ')');\n      this.levelController.startLoad();\n      this.streamController.startLoad(startPosition);\n      this.audioStreamController.startLoad(startPosition);\n    }\n  }, {\n    key: 'stopLoad',\n    value: function stopLoad() {\n      _logger.logger.log('stopLoad');\n      this.levelController.stopLoad();\n      this.streamController.stopLoad();\n      this.audioStreamController.stopLoad();\n    }\n  }, {\n    key: 'swapAudioCodec',\n    value: function swapAudioCodec() {\n      _logger.logger.log('swapAudioCodec');\n      this.streamController.swapAudioCodec();\n    }\n  }, {\n    key: 'recoverMediaError',\n    value: function recoverMediaError() {\n      _logger.logger.log('recoverMediaError');\n      var media = this.media;\n      this.detachMedia();\n      this.attachMedia(media);\n    }\n\n    /** Return all quality levels **/\n\n  }, {\n    key: 'levels',\n    get: function get() {\n      return this.levelController.levels;\n    }\n\n    /** Return current playback quality level **/\n\n  }, {\n    key: 'currentLevel',\n    get: function get() {\n      return this.streamController.currentLevel;\n    }\n\n    /* set quality level immediately (-1 for automatic level selection) */\n    ,\n    set: function set(newLevel) {\n      _logger.logger.log('set currentLevel:' + newLevel);\n      this.loadLevel = newLevel;\n      this.streamController.immediateLevelSwitch();\n    }\n\n    /** Return next playback quality level (quality level of next fragment) **/\n\n  }, {\n    key: 'nextLevel',\n    get: function get() {\n      return this.streamController.nextLevel;\n    }\n\n    /* set quality level for next fragment (-1 for automatic level selection) */\n    ,\n    set: function set(newLevel) {\n      _logger.logger.log('set nextLevel:' + newLevel);\n      this.levelController.manualLevel = newLevel;\n      this.streamController.nextLevelSwitch();\n    }\n\n    /** Return the quality level of current/last loaded fragment **/\n\n  }, {\n    key: 'loadLevel',\n    get: function get() {\n      return this.levelController.level;\n    }\n\n    /* set quality level for current/next loaded fragment (-1 for automatic level selection) */\n    ,\n    set: function set(newLevel) {\n      _logger.logger.log('set loadLevel:' + newLevel);\n      this.levelController.manualLevel = newLevel;\n    }\n\n    /** Return the quality level of next loaded fragment **/\n\n  }, {\n    key: 'nextLoadLevel',\n    get: function get() {\n      return this.levelController.nextLoadLevel;\n    }\n\n    /** set quality level of next loaded fragment **/\n    ,\n    set: function set(level) {\n      this.levelController.nextLoadLevel = level;\n    }\n\n    /** Return first level (index of first level referenced in manifest)\n    **/\n\n  }, {\n    key: 'firstLevel',\n    get: function get() {\n      return Math.max(this.levelController.firstLevel, this.abrController.minAutoLevel);\n    }\n\n    /** set first level (index of first level referenced in manifest)\n    **/\n    ,\n    set: function set(newLevel) {\n      _logger.logger.log('set firstLevel:' + newLevel);\n      this.levelController.firstLevel = newLevel;\n    }\n\n    /** Return start level (level of first fragment that will be played back)\n        if not overrided by user, first level appearing in manifest will be used as start level\n        if -1 : automatic start level selection, playback will start from level matching download bandwidth (determined from download of first segment)\n    **/\n\n  }, {\n    key: 'startLevel',\n    get: function get() {\n      return this.levelController.startLevel;\n    }\n\n    /** set  start level (level of first fragment that will be played back)\n        if not overrided by user, first level appearing in manifest will be used as start level\n        if -1 : automatic start level selection, playback will start from level matching download bandwidth (determined from download of first segment)\n    **/\n    ,\n    set: function set(newLevel) {\n      _logger.logger.log('set startLevel:' + newLevel);\n      this.levelController.startLevel = newLevel;\n    }\n\n    /** Return the capping/max level value that could be used by automatic level selection algorithm **/\n\n  }, {\n    key: 'autoLevelCapping',\n    get: function get() {\n      return this.abrController.autoLevelCapping;\n    }\n\n    /** set the capping/max level value that could be used by automatic level selection algorithm **/\n    ,\n    set: function set(newLevel) {\n      _logger.logger.log('set autoLevelCapping:' + newLevel);\n      this.abrController.autoLevelCapping = newLevel;\n    }\n\n    /* check if we are in automatic level selection mode */\n\n  }, {\n    key: 'autoLevelEnabled',\n    get: function get() {\n      return this.levelController.manualLevel === -1;\n    }\n\n    /* return manual level */\n\n  }, {\n    key: 'manualLevel',\n    get: function get() {\n      return this.levelController.manualLevel;\n    }\n\n    /** get alternate audio tracks list from playlist **/\n\n  }, {\n    key: 'audioTracks',\n    get: function get() {\n      return this.audioTrackController.audioTracks;\n    }\n\n    /** get index of the selected audio track (index in audio track lists) **/\n\n  }, {\n    key: 'audioTrack',\n    get: function get() {\n      return this.audioTrackController.audioTrack;\n    }\n\n    /** select an audio track, based on its index in audio track lists**/\n    ,\n    set: function set(audioTrackId) {\n      this.audioTrackController.audioTrack = audioTrackId;\n    }\n  }, {\n    key: 'liveSyncPosition',\n    get: function get() {\n      return this.streamController.liveSyncPosition;\n    }\n  }]);\n\n  return Hls;\n}();\n\nexports.default = Hls;\n\n},{\"1\":1,\"10\":10,\"11\":11,\"12\":12,\"13\":13,\"26\":26,\"28\":28,\"34\":34,\"35\":35,\"36\":36,\"4\":4,\"43\":43,\"45\":45,\"47\":47,\"5\":5,\"6\":6,\"7\":7,\"8\":8}],33:[function(_dereq_,module,exports){\n'use strict';\n\n// This is mostly for support of the es6 module export\n// syntax with the babel compiler, it looks like it doesnt support\n// function exports like we are used to in node/commonjs\nmodule.exports = _dereq_(32).default;\n\n},{\"32\":32}],34:[function(_dereq_,module,exports){\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _events = _dereq_(28);\n\nvar _events2 = _interopRequireDefault(_events);\n\nvar _eventHandler = _dereq_(27);\n\nvar _eventHandler2 = _interopRequireDefault(_eventHandler);\n\nvar _errors = _dereq_(26);\n\nvar _logger = _dereq_(45);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /*\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * Fragment Loader\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               */\n\nvar FragmentLoader = function (_EventHandler) {\n  _inherits(FragmentLoader, _EventHandler);\n\n  function FragmentLoader(hls) {\n    _classCallCheck(this, FragmentLoader);\n\n    var _this = _possibleConstructorReturn(this, (FragmentLoader.__proto__ || Object.getPrototypeOf(FragmentLoader)).call(this, hls, _events2.default.FRAG_LOADING));\n\n    _this.loaders = {};\n    return _this;\n  }\n\n  _createClass(FragmentLoader, [{\n    key: 'destroy',\n    value: function destroy() {\n      var loaders = this.loaders;\n      for (var loaderName in loaders) {\n        var loader = loaders[loaderName];\n        if (loader) {\n          loader.destroy();\n        }\n      }\n      this.loaders = {};\n      _eventHandler2.default.prototype.destroy.call(this);\n    }\n  }, {\n    key: 'onFragLoading',\n    value: function onFragLoading(data) {\n      var frag = data.frag,\n          type = frag.type,\n          loader = this.loaders[type],\n          config = this.hls.config;\n\n      frag.loaded = 0;\n      if (loader) {\n        _logger.logger.warn('abort previous fragment loader for type:' + type);\n        loader.abort();\n      }\n      loader = this.loaders[type] = frag.loader = typeof config.fLoader !== 'undefined' ? new config.fLoader(config) : new config.loader(config);\n\n      var loaderContext = void 0,\n          loaderConfig = void 0,\n          loaderCallbacks = void 0;\n      loaderContext = { url: frag.url, frag: frag, responseType: 'arraybuffer', progressData: false };\n      var start = frag.byteRangeStartOffset,\n          end = frag.byteRangeEndOffset;\n      if (!isNaN(start) && !isNaN(end)) {\n        loaderContext.rangeStart = start;\n        loaderContext.rangeEnd = end;\n      }\n      loaderConfig = { timeout: config.fragLoadingTimeOut, maxRetry: 0, retryDelay: 0, maxRetryDelay: config.fragLoadingMaxRetryTimeout };\n      loaderCallbacks = { onSuccess: this.loadsuccess.bind(this), onError: this.loaderror.bind(this), onTimeout: this.loadtimeout.bind(this), onProgress: this.loadprogress.bind(this) };\n      loader.load(loaderContext, loaderConfig, loaderCallbacks);\n    }\n  }, {\n    key: 'loadsuccess',\n    value: function loadsuccess(response, stats, context) {\n      var payload = response.data,\n          frag = context.frag;\n      // detach fragment loader on load success\n      frag.loader = undefined;\n      this.loaders[frag.type] = undefined;\n      this.hls.trigger(_events2.default.FRAG_LOADED, { payload: payload, frag: frag, stats: stats });\n    }\n  }, {\n    key: 'loaderror',\n    value: function loaderror(response, context) {\n      var loader = context.loader;\n      if (loader) {\n        loader.abort();\n      }\n      this.loaders[context.type] = undefined;\n      this.hls.trigger(_events2.default.ERROR, { type: _errors.ErrorTypes.NETWORK_ERROR, details: _errors.ErrorDetails.FRAG_LOAD_ERROR, fatal: false, frag: context.frag, response: response });\n    }\n  }, {\n    key: 'loadtimeout',\n    value: function loadtimeout(stats, context) {\n      var loader = context.loader;\n      if (loader) {\n        loader.abort();\n      }\n      this.loaders[context.type] = undefined;\n      this.hls.trigger(_events2.default.ERROR, { type: _errors.ErrorTypes.NETWORK_ERROR, details: _errors.ErrorDetails.FRAG_LOAD_TIMEOUT, fatal: false, frag: context.frag });\n    }\n\n    // data will be used for progressive parsing\n\n  }, {\n    key: 'loadprogress',\n    value: function loadprogress(stats, context, data) {\n      // jshint ignore:line\n      var frag = context.frag;\n      frag.loaded = stats.loaded;\n      this.hls.trigger(_events2.default.FRAG_LOAD_PROGRESS, { frag: frag, stats: stats });\n    }\n  }]);\n\n  return FragmentLoader;\n}(_eventHandler2.default);\n\nexports.default = FragmentLoader;\n\n},{\"26\":26,\"27\":27,\"28\":28,\"45\":45}],35:[function(_dereq_,module,exports){\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _events = _dereq_(28);\n\nvar _events2 = _interopRequireDefault(_events);\n\nvar _eventHandler = _dereq_(27);\n\nvar _eventHandler2 = _interopRequireDefault(_eventHandler);\n\nvar _errors = _dereq_(26);\n\nvar _logger = _dereq_(45);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /*\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * Decrypt key Loader\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               */\n\nvar KeyLoader = function (_EventHandler) {\n  _inherits(KeyLoader, _EventHandler);\n\n  function KeyLoader(hls) {\n    _classCallCheck(this, KeyLoader);\n\n    var _this = _possibleConstructorReturn(this, (KeyLoader.__proto__ || Object.getPrototypeOf(KeyLoader)).call(this, hls, _events2.default.KEY_LOADING));\n\n    _this.loaders = {};\n    _this.decryptkey = null;\n    _this.decrypturl = null;\n    return _this;\n  }\n\n  _createClass(KeyLoader, [{\n    key: 'destroy',\n    value: function destroy() {\n      for (var loaderName in this.loaders) {\n        var loader = this.loaders[loaderName];\n        if (loader) {\n          loader.destroy();\n        }\n      }\n      this.loaders = {};\n      _eventHandler2.default.prototype.destroy.call(this);\n    }\n  }, {\n    key: 'onKeyLoading',\n    value: function onKeyLoading(data) {\n      var frag = data.frag,\n          type = frag.type,\n          loader = this.loaders[type],\n          decryptdata = frag.decryptdata,\n          uri = decryptdata.uri;\n      // if uri is different from previous one or if decrypt key not retrieved yet\n      if (uri !== this.decrypturl || this.decryptkey === null) {\n        var config = this.hls.config;\n\n        if (loader) {\n          _logger.logger.warn('abort previous key loader for type:' + type);\n          loader.abort();\n        }\n        frag.loader = this.loaders[type] = new config.loader(config);\n        this.decrypturl = uri;\n        this.decryptkey = null;\n\n        var loaderContext = void 0,\n            loaderConfig = void 0,\n            loaderCallbacks = void 0;\n        loaderContext = { url: uri, frag: frag, responseType: 'arraybuffer' };\n        loaderConfig = { timeout: config.fragLoadingTimeOut, maxRetry: config.fragLoadingMaxRetry, retryDelay: config.fragLoadingRetryDelay, maxRetryDelay: config.fragLoadingMaxRetryTimeout };\n        loaderCallbacks = { onSuccess: this.loadsuccess.bind(this), onError: this.loaderror.bind(this), onTimeout: this.loadtimeout.bind(this) };\n        frag.loader.load(loaderContext, loaderConfig, loaderCallbacks);\n      } else if (this.decryptkey) {\n        // we already loaded this key, return it\n        decryptdata.key = this.decryptkey;\n        this.hls.trigger(_events2.default.KEY_LOADED, { frag: frag });\n      }\n    }\n  }, {\n    key: 'loadsuccess',\n    value: function loadsuccess(response, stats, context) {\n      var frag = context.frag;\n      this.decryptkey = frag.decryptdata.key = new Uint8Array(response.data);\n      // detach fragment loader on load success\n      frag.loader = undefined;\n      this.loaders[frag.type] = undefined;\n      this.hls.trigger(_events2.default.KEY_LOADED, { frag: frag });\n    }\n  }, {\n    key: 'loaderror',\n    value: function loaderror(response, context) {\n      var frag = context.frag,\n          loader = frag.loader;\n      if (loader) {\n        loader.abort();\n      }\n      this.loaders[context.type] = undefined;\n      this.hls.trigger(_events2.default.ERROR, { type: _errors.ErrorTypes.NETWORK_ERROR, details: _errors.ErrorDetails.KEY_LOAD_ERROR, fatal: false, frag: frag, response: response });\n    }\n  }, {\n    key: 'loadtimeout',\n    value: function loadtimeout(stats, context) {\n      var frag = context.frag,\n          loader = frag.loader;\n      if (loader) {\n        loader.abort();\n      }\n      this.loaders[context.type] = undefined;\n      this.hls.trigger(_events2.default.ERROR, { type: _errors.ErrorTypes.NETWORK_ERROR, details: _errors.ErrorDetails.KEY_LOAD_TIMEOUT, fatal: false, frag: frag });\n    }\n  }]);\n\n  return KeyLoader;\n}(_eventHandler2.default);\n\nexports.default = KeyLoader;\n\n},{\"26\":26,\"27\":27,\"28\":28,\"45\":45}],36:[function(_dereq_,module,exports){\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }(); /**\nlaylist Loader\nn\nvar _urlToolkit = _dereq_(2);\n\nvar _urlToolkit2 = _interopRequireDefault(_urlToolkit);\n\nvar _events = _dereq_(28);\n\nvar _events2 = _interopRequireDefault(_events);\n\nvar _eventHandler = _dereq_(27);\n\nvar _eventHandler2 = _interopRequireDefault(_eventHandler);\n\nvar _errors = _dereq_(26);\n\nvar _attrList = _dereq_(40);\n\nvar _attrList2 = _interopRequireDefault(_attrList);\n\nvar _logger = _dereq_(45);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n// https://regex101.com is your friend\nvar MASTER_PLAYLIST_REGEX = /#EXT-X-STREAM-INF:([^\\n\\r]*)[\\r\\n]+([^\\r\\n]+)/g;\nvar MASTER_PLAYLIST_MEDIA_REGEX = /#EXT-X-MEDIA:(.*)/g;\nvar LEVEL_PLAYLIST_REGEX_FAST = /#EXTINF:(\\d*(?:\\.\\d+)?)(?:,(.*))?|(?!#)(\\S.+)|#EXT-X-BYTERANGE: *(.+)|#EXT-X-PROGRAM-DATE-TIME:(.+)|#.*/g;\nvar LEVEL_PLAYLIST_REGEX_SLOW = /(?:(?:#(EXTM3U))|(?:#EXT-X-(PLAYLIST-TYPE):(.+))|(?:#EXT-X-(MEDIA-SEQUENCE): *(\\d+))|(?:#EXT-X-(TARGETDURATION): *(\\d+))|(?:#EXT-X-(KEY):(.+))|(?:#EXT-X-(START):(.+))|(?:#EXT-X-(ENDLIST))|(?:#EXT-X-(DISCONTINUITY-SEQ)UENCE:(\\d+))|(?:#EXT-X-(DIS)CONTINUITY))|(?:#EXT-X-(VERSION):(\\d+))|(?:#EXT-X-(MAP):(.+))|(?:(#)(.*):(.*))|(?:(#)(.*))(?:.*)\\r?\\n?/;\n\nvar LevelKey = function () {\n  function LevelKey() {\n    _classCallCheck(this, LevelKey);\n\n    this.method = null;\n    this.key = null;\n    this.iv = null;\n    this._uri = null;\n  }\n\n  _createClass(LevelKey, [{\n    key: 'uri',\n    get: function get() {\n      if (!this._uri && this.reluri) {\n        this._uri = _urlToolkit2.default.buildAbsoluteURL(this.baseuri, this.reluri);\n      }\n      return this._uri;\n    }\n  }]);\n\n  return LevelKey;\n}();\n\nvar Fragment = function () {\n  function Fragment() {\n    _classCallCheck(this, Fragment);\n\n    this._url = null;\n    this._byteRange = null;\n    this._decryptdata = null;\n    this.tagList = [];\n  }\n\n  _createClass(Fragment, [{\n    key: 'createInitializationVector',\n\n\n    /**\n     * Utility method for parseLevelPlaylist to create an initialization vector for a given segment\n     * @returns {Uint8Array}\n     */\n    value: function createInitializationVector(segmentNumber) {\n      var uint8View = new Uint8Array(16);\n\n      for (var i = 12; i < 16; i++) {\n        uint8View[i] = segmentNumber >> 8 * (15 - i) & 0xff;\n      }\n\n      return uint8View;\n    }\n\n    /**\n     * Utility method for parseLevelPlaylist to get a fragment's decryption data from the currently parsed encryption key data\n     * @param levelkey - a playlist's encryption info\n     * @param segmentNumber - the fragment's segment number\n     * @returns {*} - an object to be applied as a fragment's decryptdata\n     */\n\n  }, {\n    key: 'fragmentDecryptdataFromLevelkey',\n    value: function fragmentDecryptdataFromLevelkey(levelkey, segmentNumber) {\n      var decryptdata = levelkey;\n\n      if (levelkey && levelkey.method && levelkey.uri && !levelkey.iv) {\n        decryptdata = new LevelKey();\n        decryptdata.method = levelkey.method;\n        decryptdata.baseuri = levelkey.baseuri;\n        decryptdata.reluri = levelkey.reluri;\n        decryptdata.iv = this.createInitializationVector(segmentNumber);\n      }\n\n      return decryptdata;\n    }\n  }, {\n    key: 'cloneObj',\n    value: function cloneObj(obj) {\n      return JSON.parse(JSON.stringify(obj));\n    }\n  }, {\n    key: 'url',\n    get: function get() {\n      if (!this._url && this.relurl) {\n        this._url = _urlToolkit2.default.buildAbsoluteURL(this.baseurl, this.relurl);\n      }\n      return this._url;\n    },\n    set: function set(value) {\n      this._url = value;\n    }\n  }, {\n    key: 'programDateTime',\n    get: function get() {\n      if (!this._programDateTime && this.rawProgramDateTime) {\n        this._programDateTime = new Date(Date.parse(this.rawProgramDateTime));\n      }\n      return this._programDateTime;\n    }\n  }, {\n    key: 'byteRange',\n    get: function get() {\n      if (!this._byteRange) {\n        var byteRange = this._byteRange = [];\n        if (this.rawByteRange) {\n          var params = this.rawByteRange.split('@', 2);\n          if (params.length === 1) {\n            var lastByteRangeEndOffset = this.lastByteRangeEndOffset;\n            byteRange[0] = lastByteRangeEndOffset ? lastByteRangeEndOffset : 0;\n          } else {\n            byteRange[0] = parseInt(params[1]);\n          }\n          byteRange[1] = parseInt(params[0]) + byteRange[0];\n        }\n      }\n      return this._byteRange;\n    }\n  }, {\n    key: 'byteRangeStartOffset',\n    get: function get() {\n      return this.byteRange[0];\n    }\n  }, {\n    key: 'byteRangeEndOffset',\n    get: function get() {\n      return this.byteRange[1];\n    }\n  }, {\n    key: 'decryptdata',\n    get: function get() {\n      if (!this._decryptdata) {\n        this._decryptdata = this.fragmentDecryptdataFromLevelkey(this.levelkey, this.sn);\n      }\n      return this._decryptdata;\n    }\n  }]);\n\n  return Fragment;\n}();\n\nvar PlaylistLoader = function (_EventHandler) {\n  _inherits(PlaylistLoader, _EventHandler);\n\n  function PlaylistLoader(hls) {\n    _classCallCheck(this, PlaylistLoader);\n\n    var _this = _possibleConstructorReturn(this, (PlaylistLoader.__proto__ || Object.getPrototypeOf(PlaylistLoader)).call(this, hls, _events2.default.MANIFEST_LOADING, _events2.default.LEVEL_LOADING, _events2.default.AUDIO_TRACK_LOADING));\n\n    _this.loaders = {};\n    return _this;\n  }\n\n  _createClass(PlaylistLoader, [{\n    key: 'destroy',\n    value: function destroy() {\n      for (var loaderName in this.loaders) {\n        var loader = this.loaders[loaderName];\n        if (loader) {\n          loader.destroy();\n        }\n      }\n      this.loaders = {};\n      _eventHandler2.default.prototype.destroy.call(this);\n    }\n  }, {\n    key: 'onManifestLoading',\n    value: function onManifestLoading(data) {\n      this.load(data.url, { type: 'manifest' });\n    }\n  }, {\n    key: 'onLevelLoading',\n    value: function onLevelLoading(data) {\n      this.load(data.url, { type: 'level', level: data.level, id: data.id });\n    }\n  }, {\n    key: 'onAudioTrackLoading',\n    value: function onAudioTrackLoading(data) {\n      this.load(data.url, { type: 'audioTrack', id: data.id });\n    }\n  }, {\n    key: 'load',\n    value: function load(url, context) {\n      var loader = this.loaders[context.type];\n      if (loader) {\n        var loaderContext = loader.context;\n        if (loaderContext && loaderContext.url === url) {\n          _logger.logger.trace('playlist request ongoing');\n          return;\n        } else {\n          _logger.logger.warn('abort previous loader for type:' + context.type);\n          loader.abort();\n        }\n      }\n      var config = this.hls.config,\n          retry = void 0,\n          timeout = void 0,\n          retryDelay = void 0,\n          maxRetryDelay = void 0;\n      if (context.type === 'manifest') {\n        retry = config.manifestLoadingMaxRetry;\n        timeout = config.manifestLoadingTimeOut;\n        retryDelay = config.manifestLoadingRetryDelay;\n        maxRetryDelay = config.manifestLoadingMaxRetryTimeout;\n      } else {\n        retry = config.levelLoadingMaxRetry;\n        timeout = config.levelLoadingTimeOut;\n        retryDelay = config.levelLoadingRetryDelay;\n        maxRetryDelay = config.levelLoadingMaxRetryTimeout;\n        _logger.logger.log('loading playlist for ' + context.type + ' ' + (context.level || context.id));\n      }\n      loader = this.loaders[context.type] = context.loader = typeof config.pLoader !== 'undefined' ? new config.pLoader(config) : new config.loader(config);\n      context.url = url;\n      context.responseType = '';\n\n      var loaderConfig = void 0,\n          loaderCallbacks = void 0;\n      loaderConfig = { timeout: timeout, maxRetry: retry, retryDelay: retryDelay, maxRetryDelay: maxRetryDelay };\n      loaderCallbacks = { onSuccess: this.loadsuccess.bind(this), onError: this.loaderror.bind(this), onTimeout: this.loadtimeout.bind(this) };\n      loader.load(context, loaderConfig, loaderCallbacks);\n    }\n  }, {\n    key: 'resolve',\n    value: function resolve(url, baseUrl) {\n      return _urlToolkit2.default.buildAbsoluteURL(baseUrl, url);\n    }\n  }, {\n    key: 'parseMasterPlaylist',\n    value: function parseMasterPlaylist(string, baseurl) {\n      var levels = [],\n          result = void 0;\n      MASTER_PLAYLIST_REGEX.lastIndex = 0;\n      while ((result = MASTER_PLAYLIST_REGEX.exec(string)) != null) {\n        var level = {};\n\n        var attrs = level.attrs = new _attrList2.default(result[1]);\n        level.url = this.resolve(result[2], baseurl);\n\n        var resolution = attrs.decimalResolution('RESOLUTION');\n        if (resolution) {\n          level.width = resolution.width;\n          level.height = resolution.height;\n        }\n        level.bitrate = attrs.decimalInteger('AVERAGE-BANDWIDTH') || attrs.decimalInteger('BANDWIDTH');\n        level.name = attrs.NAME;\n\n        var codecs = attrs.CODECS;\n        if (codecs) {\n          codecs = codecs.split(/[ ,]+/);\n          for (var i = 0; i < codecs.length; i++) {\n            var codec = codecs[i];\n            if (codec.indexOf('avc1') !== -1) {\n              level.videoCodec = this.avc1toavcoti(codec);\n            } else {\n              level.audioCodec = codec;\n            }\n          }\n        }\n\n        levels.push(level);\n      }\n      return levels;\n    }\n  }, {\n    key: 'parseMasterPlaylistMedia',\n    value: function parseMasterPlaylistMedia(string, baseurl, type) {\n      var result = void 0,\n          medias = [];\n      MASTER_PLAYLIST_MEDIA_REGEX.lastIndex = 0;\n      while ((result = MASTER_PLAYLIST_MEDIA_REGEX.exec(string)) != null) {\n        var media = {};\n        var attrs = new _attrList2.default(result[1]);\n        if (attrs.TYPE === type) {\n          media.groupId = attrs['GROUP-ID'];\n          media.name = attrs.NAME;\n          media.type = type;\n          media.default = attrs.DEFAULT === 'YES';\n          media.autoselect = attrs.AUTOSELECT === 'YES';\n          media.forced = attrs.FORCED === 'YES';\n          if (attrs.URI) {\n            media.url = this.resolve(attrs.URI, baseurl);\n          }\n          media.lang = attrs.LANGUAGE;\n          if (!media.name) {\n            media.name = media.lang;\n          }\n          medias.push(media);\n        }\n      }\n      return medias;\n    }\n  }, {\n    key: 'avc1toavcoti',\n    value: function avc1toavcoti(codec) {\n      var result,\n          avcdata = codec.split('.');\n      if (avcdata.length > 2) {\n        result = avcdata.shift() + '.';\n        result += parseInt(avcdata.shift()).toString(16);\n        result += ('000' + parseInt(avcdata.shift()).toString(16)).substr(-4);\n      } else {\n        result = codec;\n      }\n      return result;\n    }\n  }, {\n    key: 'parseLevelPlaylist',\n    value: function parseLevelPlaylist(string, baseurl, id, type) {\n      var currentSN = 0,\n          totalduration = 0,\n          level = { type: null, version: null, url: baseurl, fragments: [], live: true, startSN: 0 },\n          levelkey = new LevelKey(),\n          cc = 0,\n          prevFrag = null,\n          frag = new Fragment(),\n          result,\n          i;\n\n      LEVEL_PLAYLIST_REGEX_FAST.lastIndex = 0;\n\n      while ((result = LEVEL_PLAYLIST_REGEX_FAST.exec(string)) !== null) {\n        var duration = result[1];\n        if (duration) {\n          // INF\n          frag.duration = parseFloat(duration);\n          // avoid sliced strings    https://github.com/dailymotion/hls.js/issues/939\n          var title = (' ' + result[2]).slice(1);\n          frag.title = title ? title : null;\n          frag.tagList.push(title ? ['INF', duration, title] : ['INF', duration]);\n        } else if (result[3]) {\n          // url\n          if (!isNaN(frag.duration)) {\n            var sn = currentSN++;\n            frag.type = type;\n            frag.start = totalduration;\n            frag.levelkey = levelkey;\n            frag.sn = sn;\n            frag.level = id;\n            frag.cc = cc;\n            frag.baseurl = baseurl;\n            // avoid sliced strings    https://github.com/dailymotion/hls.js/issues/939\n            frag.relurl = (' ' + result[3]).slice(1);\n\n            level.fragments.push(frag);\n            prevFrag = frag;\n            totalduration += frag.duration;\n\n            frag = new Fragment();\n          }\n        } else if (result[4]) {\n          // X-BYTERANGE\n          frag.rawByteRange = (' ' + result[4]).slice(1);\n          if (prevFrag) {\n            var lastByteRangeEndOffset = prevFrag.byteRangeEndOffset;\n            if (lastByteRangeEndOffset) {\n              frag.lastByteRangeEndOffset = lastByteRangeEndOffset;\n            }\n          }\n        } else if (result[5]) {\n          // PROGRAM-DATE-TIME\n          // avoid sliced strings    https://github.com/dailymotion/hls.js/issues/939\n          frag.rawProgramDateTime = (' ' + result[5]).slice(1);\n          frag.tagList.push(['PROGRAM-DATE-TIME', frag.rawProgramDateTime]);\n        } else {\n          result = result[0].match(LEVEL_PLAYLIST_REGEX_SLOW);\n          for (i = 1; i < result.length; i++) {\n            if (result[i] !== undefined) {\n              break;\n            }\n          }\n\n          // avoid sliced strings    https://github.com/dailymotion/hls.js/issues/939\n          var value1 = (' ' + result[i + 1]).slice(1);\n          var value2 = (' ' + result[i + 2]).slice(1);\n\n          switch (result[i]) {\n            case '#':\n              frag.tagList.push(value2 ? [value1, value2] : [value1]);\n              break;\n            case 'PLAYLIST-TYPE':\n              level.type = value1.toUpperCase();\n              break;\n            case 'MEDIA-SEQUENCE':\n              currentSN = level.startSN = parseInt(value1);\n              break;\n            case 'TARGETDURATION':\n              level.targetduration = parseFloat(value1);\n              break;\n            case 'VERSION':\n              level.version = parseInt(value1);\n              break;\n            case 'EXTM3U':\n              break;\n            case 'ENDLIST':\n              level.live = false;\n              break;\n            case 'DIS':\n              cc++;\n              frag.tagList.push(['DIS']);\n              break;\n            case 'DISCONTINUITY-SEQ':\n              cc = parseInt(value1);\n              break;\n            case 'KEY':\n              // https://tools.ietf.org/html/draft-pantos-http-live-streaming-08#section-3.4.4\n              var decryptparams = value1;\n              var keyAttrs = new _attrList2.default(decryptparams);\n              var decryptmethod = keyAttrs.enumeratedString('METHOD'),\n                  decrypturi = keyAttrs.URI,\n                  decryptiv = keyAttrs.hexadecimalInteger('IV');\n              if (decryptmethod) {\n                levelkey = new LevelKey();\n                if (decrypturi && decryptmethod === 'AES-128') {\n                  levelkey.method = decryptmethod;\n                  // URI to get the key\n                  levelkey.baseuri = baseurl;\n                  levelkey.reluri = decrypturi;\n                  levelkey.key = null;\n                  // Initialization Vector (IV)\n                  levelkey.iv = decryptiv;\n                }\n              }\n              break;\n            case 'START':\n              var startParams = value1;\n              var startAttrs = new _attrList2.default(startParams);\n              var startTimeOffset = startAttrs.decimalFloatingPoint('TIME-OFFSET');\n              //TIME-OFFSET can be 0\n              if (!isNaN(startTimeOffset)) {\n                level.startTimeOffset = startTimeOffset;\n              }\n              break;\n            case 'MAP':\n              var mapAttrs = new _attrList2.default(value1);\n              frag.relurl = mapAttrs.URI;\n              frag.rawByteRange = mapAttrs.BYTERANGE;\n              frag.baseurl = baseurl;\n              frag.level = id;\n              frag.type = type;\n              frag.sn = 'initSegment';\n              level.initSegment = frag;\n              frag = new Fragment();\n              break;\n            default:\n              _logger.logger.warn('line parsed but not handled: ' + result);\n              break;\n          }\n        }\n      }\n      frag = prevFrag;\n      //logger.log('found ' + level.fragments.length + ' fragments');\n      if (frag && !frag.relurl) {\n        level.fragments.pop();\n        totalduration -= frag.duration;\n      }\n      level.totalduration = totalduration;\n      level.averagetargetduration = totalduration / level.fragments.length;\n      level.endSN = currentSN - 1;\n      return level;\n    }\n  }, {\n    key: 'loadsuccess',\n    value: function loadsuccess(response, stats, context) {\n      var string = response.data,\n          url = response.url,\n          type = context.type,\n          id = context.id,\n          level = context.level,\n          hls = this.hls;\n\n      this.loaders[type] = undefined;\n      // responseURL not supported on some browsers (it is used to detect URL redirection)\n      // data-uri mode also not supported (but no need to detect redirection)\n      if (url === undefined || url.indexOf('data:') === 0) {\n        // fallback to initial URL\n        url = context.url;\n      }\n      stats.tload = performance.now();\n      //stats.mtime = new Date(target.getResponseHeader('Last-Modified'));\n      if (string.indexOf('#EXTM3U') === 0) {\n        if (string.indexOf('#EXTINF:') > 0) {\n          var isLevel = type !== 'audioTrack',\n              levelDetails = this.parseLevelPlaylist(string, url, (isLevel ? level : id) || 0, isLevel ? 'main' : 'audio');\n          if (type === 'manifest') {\n            // first request, stream manifest (no master playlist), fire manifest loaded event with level details\n            hls.trigger(_events2.default.MANIFEST_LOADED, { levels: [{ url: url, details: levelDetails }], audioTracks: [], url: url, stats: stats });\n          }\n          stats.tparsed = performance.now();\n          if (levelDetails.targetduration) {\n            if (isLevel) {\n              hls.trigger(_events2.default.LEVEL_LOADED, { details: levelDetails, level: level || 0, id: id || 0, stats: stats });\n            } else {\n              hls.trigger(_events2.default.AUDIO_TRACK_LOADED, { details: levelDetails, id: id, stats: stats });\n            }\n          } else {\n            hls.trigger(_events2.default.ERROR, { type: _errors.ErrorTypes.NETWORK_ERROR, details: _errors.ErrorDetails.MANIFEST_PARSING_ERROR, fatal: true, url: url, reason: 'invalid targetduration' });\n          }\n        } else {\n          var levels = this.parseMasterPlaylist(string, url);\n          // multi level playlist, parse level info\n          if (levels.length) {\n            var audiotracks = this.parseMasterPlaylistMedia(string, url, 'AUDIO');\n            if (audiotracks.length) {\n              // check if we have found an audio track embedded in main playlist (audio track without URI attribute)\n              var embeddedAudioFound = false;\n              audiotracks.forEach(function (audioTrack) {\n                if (!audioTrack.url) {\n                  embeddedAudioFound = true;\n                }\n              });\n              // if no embedded audio track defined, but audio codec signaled in quality level, we need to signal this main audio track\n              // this could happen with playlists with alt audio rendition in which quality levels (main) contains both audio+video. but with mixed audio track not signaled\n              if (embeddedAudioFound === false && levels[0].audioCodec && !levels[0].attrs.AUDIO) {\n                _logger.logger.log('audio codec signaled in quality level, but no embedded audio track signaled, create one');\n                audiotracks.unshift({ type: 'main', name: 'main' });\n              }\n            }\n            hls.trigger(_events2.default.MANIFEST_LOADED, { levels: levels, audioTracks: audiotracks, url: url, stats: stats });\n          } else {\n            hls.trigger(_events2.default.ERROR, { type: _errors.ErrorTypes.NETWORK_ERROR, details: _errors.ErrorDetails.MANIFEST_PARSING_ERROR, fatal: true, url: url, reason: 'no level found in manifest' });\n          }\n        }\n      } else {\n        hls.trigger(_events2.default.ERROR, { type: _errors.ErrorTypes.NETWORK_ERROR, details: _errors.ErrorDetails.MANIFEST_PARSING_ERROR, fatal: true, url: url, reason: 'no EXTM3U delimiter' });\n      }\n    }\n  }, {\n    key: 'loaderror',\n    value: function loaderror(response, context) {\n      var details,\n          fatal,\n          loader = context.loader;\n      switch (context.type) {\n        case 'manifest':\n          details = _errors.ErrorDetails.MANIFEST_LOAD_ERROR;\n          fatal = true;\n          break;\n        case 'level':\n          details = _errors.ErrorDetails.LEVEL_LOAD_ERROR;\n          fatal = false;\n          break;\n        case 'audioTrack':\n          details = _errors.ErrorDetails.AUDIO_TRACK_LOAD_ERROR;\n          fatal = false;\n          break;\n      }\n      if (loader) {\n        loader.abort();\n        this.loaders[context.type] = undefined;\n      }\n      this.hls.trigger(_events2.default.ERROR, { type: _errors.ErrorTypes.NETWORK_ERROR, details: details, fatal: fatal, url: loader.url, loader: loader, response: response, context: context });\n    }\n  }, {\n    key: 'loadtimeout',\n    value: function loadtimeout(stats, context) {\n      var details,\n          fatal,\n          loader = context.loader;\n      switch (context.type) {\n        case 'manifest':\n          details = _errors.ErrorDetails.MANIFEST_LOAD_TIMEOUT;\n          fatal = true;\n          break;\n        case 'level':\n          details = _errors.ErrorDetails.LEVEL_LOAD_TIMEOUT;\n          fatal = false;\n          break;\n        case 'audioTrack':\n          details = _errors.ErrorDetails.AUDIO_TRACK_LOAD_TIMEOUT;\n          fatal = false;\n          break;\n      }\n      if (loader) {\n        loader.abort();\n        this.loaders[context.type] = undefined;\n      }\n      this.hls.trigger(_events2.default.ERROR, { type: _errors.ErrorTypes.NETWORK_ERROR, details: details, fatal: fatal, url: loader.url, loader: loader, context: context });\n    }\n  }]);\n\n  return PlaylistLoader;\n}(_eventHandler2.default);\n\nexports.default = PlaylistLoader;\n\n},{\"2\":2,\"26\":26,\"27\":27,\"28\":28,\"40\":40,\"45\":45}],37:[function(_dereq_,module,exports){\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n/**\n * Generate MP4 Box\n*/\n\n//import Hex from '../utils/hex';\nvar MP4 = function () {\n  function MP4() {\n    _classCallCheck(this, MP4);\n  }\n\n  _createClass(MP4, null, [{\n    key: 'init',\n    value: function init() {\n      MP4.types = {\n        avc1: [], // codingname\n        avcC: [],\n        btrt: [],\n        dinf: [],\n        dref: [],\n        esds: [],\n        ftyp: [],\n        hdlr: [],\n        mdat: [],\n        mdhd: [],\n        mdia: [],\n        mfhd: [],\n        minf: [],\n        moof: [],\n        moov: [],\n        mp4a: [],\n        '.mp3': [],\n        mvex: [],\n        mvhd: [],\n        pasp: [],\n        sdtp: [],\n        stbl: [],\n        stco: [],\n        stsc: [],\n        stsd: [],\n        stsz: [],\n        stts: [],\n        tfdt: [],\n        tfhd: [],\n        traf: [],\n        trak: [],\n        trun: [],\n        trex: [],\n        tkhd: [],\n        vmhd: [],\n        smhd: []\n      };\n\n      var i;\n      for (i in MP4.types) {\n        if (MP4.types.hasOwnProperty(i)) {\n          MP4.types[i] = [i.charCodeAt(0), i.charCodeAt(1), i.charCodeAt(2), i.charCodeAt(3)];\n        }\n      }\n\n      var videoHdlr = new Uint8Array([0x00, // version 0\n      0x00, 0x00, 0x00, // flags\n      0x00, 0x00, 0x00, 0x00, // pre_defined\n      0x76, 0x69, 0x64, 0x65, // handler_type: 'vide'\n      0x00, 0x00, 0x00, 0x00, // reserved\n      0x00, 0x00, 0x00, 0x00, // reserved\n      0x00, 0x00, 0x00, 0x00, // reserved\n      0x56, 0x69, 0x64, 0x65, 0x6f, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x72, 0x00 // name: 'VideoHandler'\n      ]);\n\n      var audioHdlr = new Uint8Array([0x00, // version 0\n      0x00, 0x00, 0x00, // flags\n      0x00, 0x00, 0x00, 0x00, // pre_defined\n      0x73, 0x6f, 0x75, 0x6e, // handler_type: 'soun'\n      0x00, 0x00, 0x00, 0x00, // reserved\n      0x00, 0x00, 0x00, 0x00, // reserved\n      0x00, 0x00, 0x00, 0x00, // reserved\n      0x53, 0x6f, 0x75, 0x6e, 0x64, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x72, 0x00 // name: 'SoundHandler'\n      ]);\n\n      MP4.HDLR_TYPES = {\n        'video': videoHdlr,\n        'audio': audioHdlr\n      };\n\n      var dref = new Uint8Array([0x00, // version 0\n      0x00, 0x00, 0x00, // flags\n      0x00, 0x00, 0x00, 0x01, // entry_count\n      0x00, 0x00, 0x00, 0x0c, // entry_size\n      0x75, 0x72, 0x6c, 0x20, // 'url' type\n      0x00, // version 0\n      0x00, 0x00, 0x01 // entry_flags\n      ]);\n\n      var stco = new Uint8Array([0x00, // version\n      0x00, 0x00, 0x00, // flags\n      0x00, 0x00, 0x00, 0x00 // entry_count\n      ]);\n\n      MP4.STTS = MP4.STSC = MP4.STCO = stco;\n\n      MP4.STSZ = new Uint8Array([0x00, // version\n      0x00, 0x00, 0x00, // flags\n      0x00, 0x00, 0x00, 0x00, // sample_size\n      0x00, 0x00, 0x00, 0x00]);\n      MP4.VMHD = new Uint8Array([0x00, // version\n      0x00, 0x00, 0x01, // flags\n      0x00, 0x00, // graphicsmode\n      0x00, 0x00, 0x00, 0x00, 0x00, 0x00 // opcolor\n      ]);\n      MP4.SMHD = new Uint8Array([0x00, // version\n      0x00, 0x00, 0x00, // flags\n      0x00, 0x00, // balance\n      0x00, 0x00 // reserved\n      ]);\n\n      MP4.STSD = new Uint8Array([0x00, // version 0\n      0x00, 0x00, 0x00, // flags\n      0x00, 0x00, 0x00, 0x01]); // entry_count\n\n      var majorBrand = new Uint8Array([105, 115, 111, 109]); // isom\n      var avc1Brand = new Uint8Array([97, 118, 99, 49]); // avc1\n      var minorVersion = new Uint8Array([0, 0, 0, 1]);\n\n      MP4.FTYP = MP4.box(MP4.types.ftyp, majorBrand, minorVersion, majorBrand, avc1Brand);\n      MP4.DINF = MP4.box(MP4.types.dinf, MP4.box(MP4.types.dref, dref));\n    }\n  }, {\n    key: 'box',\n    value: function box(type) {\n      var payload = Array.prototype.slice.call(arguments, 1),\n          size = 8,\n          i = payload.length,\n          len = i,\n          result;\n      // calculate the total size we need to allocate\n      while (i--) {\n        size += payload[i].byteLength;\n      }\n      result = new Uint8Array(size);\n      result[0] = size >> 24 & 0xff;\n      result[1] = size >> 16 & 0xff;\n      result[2] = size >> 8 & 0xff;\n      result[3] = size & 0xff;\n      result.set(type, 4);\n      // copy the payload into the result\n      for (i = 0, size = 8; i < len; i++) {\n        // copy payload[i] array @ offset size\n        result.set(payload[i], size);\n        size += payload[i].byteLength;\n      }\n      return result;\n    }\n  }, {\n    key: 'hdlr',\n    value: function hdlr(type) {\n      return MP4.box(MP4.types.hdlr, MP4.HDLR_TYPES[type]);\n    }\n  }, {\n    key: 'mdat',\n    value: function mdat(data) {\n      return MP4.box(MP4.types.mdat, data);\n    }\n  }, {\n    key: 'mdhd',\n    value: function mdhd(timescale, duration) {\n      duration *= timescale;\n      return MP4.box(MP4.types.mdhd, new Uint8Array([0x00, // version 0\n      0x00, 0x00, 0x00, // flags\n      0x00, 0x00, 0x00, 0x02, // creation_time\n      0x00, 0x00, 0x00, 0x03, // modification_time\n      timescale >> 24 & 0xFF, timescale >> 16 & 0xFF, timescale >> 8 & 0xFF, timescale & 0xFF, // timescale\n      duration >> 24, duration >> 16 & 0xFF, duration >> 8 & 0xFF, duration & 0xFF, // duration\n      0x55, 0xc4, // 'und' language (undetermined)\n      0x00, 0x00]));\n    }\n  }, {\n    key: 'mdia',\n    value: function mdia(track) {\n      return MP4.box(MP4.types.mdia, MP4.mdhd(track.timescale, track.duration), MP4.hdlr(track.type), MP4.minf(track));\n    }\n  }, {\n    key: 'mfhd',\n    value: function mfhd(sequenceNumber) {\n      return MP4.box(MP4.types.mfhd, new Uint8Array([0x00, 0x00, 0x00, 0x00, // flags\n      sequenceNumber >> 24, sequenceNumber >> 16 & 0xFF, sequenceNumber >> 8 & 0xFF, sequenceNumber & 0xFF]));\n    }\n  }, {\n    key: 'minf',\n    value: function minf(track) {\n      if (track.type === 'audio') {\n        return MP4.box(MP4.types.minf, MP4.box(MP4.types.smhd, MP4.SMHD), MP4.DINF, MP4.stbl(track));\n      } else {\n        return MP4.box(MP4.types.minf, MP4.box(MP4.types.vmhd, MP4.VMHD), MP4.DINF, MP4.stbl(track));\n      }\n    }\n  }, {\n    key: 'moof',\n    value: function moof(sn, baseMediaDecodeTime, track) {\n      return MP4.box(MP4.types.moof, MP4.mfhd(sn), MP4.traf(track, baseMediaDecodeTime));\n    }\n    /**\n     * @param tracks... (optional) {array} the tracks associated with this movie\n     */\n\n  }, {\n    key: 'moov',\n    value: function moov(tracks) {\n      var i = tracks.length,\n          boxes = [];\n\n      while (i--) {\n        boxes[i] = MP4.trak(tracks[i]);\n      }\n\n      return MP4.box.apply(null, [MP4.types.moov, MP4.mvhd(tracks[0].timescale, tracks[0].duration)].concat(boxes).concat(MP4.mvex(tracks)));\n    }\n  }, {\n    key: 'mvex',\n    value: function mvex(tracks) {\n      var i = tracks.length,\n          boxes = [];\n\n      while (i--) {\n        boxes[i] = MP4.trex(tracks[i]);\n      }\n      return MP4.box.apply(null, [MP4.types.mvex].concat(boxes));\n    }\n  }, {\n    key: 'mvhd',\n    value: function mvhd(timescale, duration) {\n      duration *= timescale;\n      var bytes = new Uint8Array([0x00, // version 0\n      0x00, 0x00, 0x00, // flags\n      0x00, 0x00, 0x00, 0x01, // creation_time\n      0x00, 0x00, 0x00, 0x02, // modification_time\n      timescale >> 24 & 0xFF, timescale >> 16 & 0xFF, timescale >> 8 & 0xFF, timescale & 0xFF, // timescale\n      duration >> 24 & 0xFF, duration >> 16 & 0xFF, duration >> 8 & 0xFF, duration & 0xFF, // duration\n      0x00, 0x01, 0x00, 0x00, // 1.0 rate\n      0x01, 0x00, // 1.0 volume\n      0x00, 0x00, // reserved\n      0x00, 0x00, 0x00, 0x00, // reserved\n      0x00, 0x00, 0x00, 0x00, // reserved\n      0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0x00, 0x00, 0x00, // transformation: unity matrix\n      0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // pre_defined\n      0xff, 0xff, 0xff, 0xff // next_track_ID\n      ]);\n      return MP4.box(MP4.types.mvhd, bytes);\n    }\n  }, {\n    key: 'sdtp',\n    value: function sdtp(track) {\n      var samples = track.samples || [],\n          bytes = new Uint8Array(4 + samples.length),\n          flags,\n          i;\n      // leave the full box header (4 bytes) all zero\n      // write the sample table\n      for (i = 0; i < samples.length; i++) {\n        flags = samples[i].flags;\n        bytes[i + 4] = flags.dependsOn << 4 | flags.isDependedOn << 2 | flags.hasRedundancy;\n      }\n\n      return MP4.box(MP4.types.sdtp, bytes);\n    }\n  }, {\n    key: 'stbl',\n    value: function stbl(track) {\n      return MP4.box(MP4.types.stbl, MP4.stsd(track), MP4.box(MP4.types.stts, MP4.STTS), MP4.box(MP4.types.stsc, MP4.STSC), MP4.box(MP4.types.stsz, MP4.STSZ), MP4.box(MP4.types.stco, MP4.STCO));\n    }\n  }, {\n    key: 'avc1',\n    value: function avc1(track) {\n      var sps = [],\n          pps = [],\n          i,\n          data,\n          len;\n      // assemble the SPSs\n\n      for (i = 0; i < track.sps.length; i++) {\n        data = track.sps[i];\n        len = data.byteLength;\n        sps.push(len >>> 8 & 0xFF);\n        sps.push(len & 0xFF);\n        sps = sps.concat(Array.prototype.slice.call(data)); // SPS\n      }\n\n      // assemble the PPSs\n      for (i = 0; i < track.pps.length; i++) {\n        data = track.pps[i];\n        len = data.byteLength;\n        pps.push(len >>> 8 & 0xFF);\n        pps.push(len & 0xFF);\n        pps = pps.concat(Array.prototype.slice.call(data));\n      }\n\n      var avcc = MP4.box(MP4.types.avcC, new Uint8Array([0x01, // version\n      sps[3], // profile\n      sps[4], // profile compat\n      sps[5], // level\n      0xfc | 3, // lengthSizeMinusOne, hard-coded to 4 bytes\n      0xE0 | track.sps.length // 3bit reserved (111) + numOfSequenceParameterSets\n      ].concat(sps).concat([track.pps.length // numOfPictureParameterSets\n      ]).concat(pps))),\n          // \"PPS\"\n      width = track.width,\n          height = track.height,\n          hSpacing = track.pixelRatio[0],\n          vSpacing = track.pixelRatio[1];\n      //console.log('avcc:' + Hex.hexDump(avcc));\n      return MP4.box(MP4.types.avc1, new Uint8Array([0x00, 0x00, 0x00, // reserved\n      0x00, 0x00, 0x00, // reserved\n      0x00, 0x01, // data_reference_index\n      0x00, 0x00, // pre_defined\n      0x00, 0x00, // reserved\n      0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // pre_defined\n      width >> 8 & 0xFF, width & 0xff, // width\n      height >> 8 & 0xFF, height & 0xff, // height\n      0x00, 0x48, 0x00, 0x00, // horizresolution\n      0x00, 0x48, 0x00, 0x00, // vertresolution\n      0x00, 0x00, 0x00, 0x00, // reserved\n      0x00, 0x01, // frame_count\n      0x12, 0x64, 0x61, 0x69, 0x6C, //dailymotion/hls.js\n      0x79, 0x6D, 0x6F, 0x74, 0x69, 0x6F, 0x6E, 0x2F, 0x68, 0x6C, 0x73, 0x2E, 0x6A, 0x73, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // compressorname\n      0x00, 0x18, // depth = 24\n      0x11, 0x11]), // pre_defined = -1\n      avcc, MP4.box(MP4.types.btrt, new Uint8Array([0x00, 0x1c, 0x9c, 0x80, // bufferSizeDB\n      0x00, 0x2d, 0xc6, 0xc0, // maxBitrate\n      0x00, 0x2d, 0xc6, 0xc0])), // avgBitrate\n      MP4.box(MP4.types.pasp, new Uint8Array([hSpacing >> 24, // hSpacing\n      hSpacing >> 16 & 0xFF, hSpacing >> 8 & 0xFF, hSpacing & 0xFF, vSpacing >> 24, // vSpacing\n      vSpacing >> 16 & 0xFF, vSpacing >> 8 & 0xFF, vSpacing & 0xFF])));\n    }\n  }, {\n    key: 'esds',\n    value: function esds(track) {\n      var configlen = track.config.length;\n      return new Uint8Array([0x00, // version 0\n      0x00, 0x00, 0x00, // flags\n\n      0x03, // descriptor_type\n      0x17 + configlen, // length\n      0x00, 0x01, //es_id\n      0x00, // stream_priority\n\n      0x04, // descriptor_type\n      0x0f + configlen, // length\n      0x40, //codec : mpeg4_audio\n      0x15, // stream_type\n      0x00, 0x00, 0x00, // buffer_size\n      0x00, 0x00, 0x00, 0x00, // maxBitrate\n      0x00, 0x00, 0x00, 0x00, // avgBitrate\n\n      0x05 // descriptor_type\n      ].concat([configlen]).concat(track.config).concat([0x06, 0x01, 0x02])); // GASpecificConfig)); // length + audio config descriptor\n    }\n  }, {\n    key: 'mp4a',\n    value: function mp4a(track) {\n      var audiosamplerate = track.audiosamplerate;\n      return MP4.box(MP4.types.mp4a, new Uint8Array([0x00, 0x00, 0x00, // reserved\n      0x00, 0x00, 0x00, // reserved\n      0x00, 0x01, // data_reference_index\n      0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // reserved\n      0x00, track.channelCount, // channelcount\n      0x00, 0x10, // sampleSize:16bits\n      0x00, 0x00, 0x00, 0x00, // reserved2\n      audiosamplerate >> 8 & 0xFF, audiosamplerate & 0xff, //\n      0x00, 0x00]), MP4.box(MP4.types.esds, MP4.esds(track)));\n    }\n  }, {\n    key: 'mp3',\n    value: function mp3(track) {\n      var audiosamplerate = track.audiosamplerate;\n      return MP4.box(MP4.types['.mp3'], new Uint8Array([0x00, 0x00, 0x00, // reserved\n      0x00, 0x00, 0x00, // reserved\n      0x00, 0x01, // data_reference_index\n      0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // reserved\n      0x00, track.channelCount, // channelcount\n      0x00, 0x10, // sampleSize:16bits\n      0x00, 0x00, 0x00, 0x00, // reserved2\n      audiosamplerate >> 8 & 0xFF, audiosamplerate & 0xff, //\n      0x00, 0x00]));\n    }\n  }, {\n    key: 'stsd',\n    value: function stsd(track) {\n      if (track.type === 'audio') {\n        if (!track.isAAC && track.codec === 'mp3') {\n          return MP4.box(MP4.types.stsd, MP4.STSD, MP4.mp3(track));\n        }\n        return MP4.box(MP4.types.stsd, MP4.STSD, MP4.mp4a(track));\n      } else {\n        return MP4.box(MP4.types.stsd, MP4.STSD, MP4.avc1(track));\n      }\n    }\n  }, {\n    key: 'tkhd',\n    value: function tkhd(track) {\n      var id = track.id,\n          duration = track.duration * track.timescale,\n          width = track.width,\n          height = track.height;\n      return MP4.box(MP4.types.tkhd, new Uint8Array([0x00, // version 0\n      0x00, 0x00, 0x07, // flags\n      0x00, 0x00, 0x00, 0x00, // creation_time\n      0x00, 0x00, 0x00, 0x00, // modification_time\n      id >> 24 & 0xFF, id >> 16 & 0xFF, id >> 8 & 0xFF, id & 0xFF, // track_ID\n      0x00, 0x00, 0x00, 0x00, // reserved\n      duration >> 24, duration >> 16 & 0xFF, duration >> 8 & 0xFF, duration & 0xFF, // duration\n      0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // reserved\n      0x00, 0x00, // layer\n      0x00, 0x00, // alternate_group\n      0x00, 0x00, // non-audio track volume\n      0x00, 0x00, // reserved\n      0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0x00, 0x00, 0x00, // transformation: unity matrix\n      width >> 8 & 0xFF, width & 0xFF, 0x00, 0x00, // width\n      height >> 8 & 0xFF, height & 0xFF, 0x00, 0x00 // height\n      ]));\n    }\n  }, {\n    key: 'traf',\n    value: function traf(track, baseMediaDecodeTime) {\n      var sampleDependencyTable = MP4.sdtp(track),\n          id = track.id;\n      return MP4.box(MP4.types.traf, MP4.box(MP4.types.tfhd, new Uint8Array([0x00, // version 0\n      0x00, 0x00, 0x00, // flags\n      id >> 24, id >> 16 & 0XFF, id >> 8 & 0XFF, id & 0xFF])), MP4.box(MP4.types.tfdt, new Uint8Array([0x00, // version 0\n      0x00, 0x00, 0x00, // flags\n      baseMediaDecodeTime >> 24, baseMediaDecodeTime >> 16 & 0XFF, baseMediaDecodeTime >> 8 & 0XFF, baseMediaDecodeTime & 0xFF])), MP4.trun(track, sampleDependencyTable.length + 16 + // tfhd\n      16 + // tfdt\n      8 + // traf header\n      16 + // mfhd\n      8 + // moof header\n      8), // mdat header\n      sampleDependencyTable);\n    }\n\n    /**\n     * Generate a track box.\n     * @param track {object} a track definition\n     * @return {Uint8Array} the track box\n     */\n\n  }, {\n    key: 'trak',\n    value: function trak(track) {\n      track.duration = track.duration || 0xffffffff;\n      return MP4.box(MP4.types.trak, MP4.tkhd(track), MP4.mdia(track));\n    }\n  }, {\n    key: 'trex',\n    value: function trex(track) {\n      var id = track.id;\n      return MP4.box(MP4.types.trex, new Uint8Array([0x00, // version 0\n      0x00, 0x00, 0x00, // flags\n      id >> 24, id >> 16 & 0XFF, id >> 8 & 0XFF, id & 0xFF, // track_ID\n      0x00, 0x00, 0x00, 0x01, // default_sample_description_index\n      0x00, 0x00, 0x00, 0x00, // default_sample_duration\n      0x00, 0x00, 0x00, 0x00, // default_sample_size\n      0x00, 0x01, 0x00, 0x01 // default_sample_flags\n      ]));\n    }\n  }, {\n    key: 'trun',\n    value: function trun(track, offset) {\n      var samples = track.samples || [],\n          len = samples.length,\n          arraylen = 12 + 16 * len,\n          array = new Uint8Array(arraylen),\n          i,\n          sample,\n          duration,\n          size,\n          flags,\n          cts;\n      offset += 8 + arraylen;\n      array.set([0x00, // version 0\n      0x00, 0x0f, 0x01, // flags\n      len >>> 24 & 0xFF, len >>> 16 & 0xFF, len >>> 8 & 0xFF, len & 0xFF, // sample_count\n      offset >>> 24 & 0xFF, offset >>> 16 & 0xFF, offset >>> 8 & 0xFF, offset & 0xFF // data_offset\n      ], 0);\n      for (i = 0; i < len; i++) {\n        sample = samples[i];\n        duration = sample.duration;\n        size = sample.size;\n        flags = sample.flags;\n        cts = sample.cts;\n        array.set([duration >>> 24 & 0xFF, duration >>> 16 & 0xFF, duration >>> 8 & 0xFF, duration & 0xFF, // sample_duration\n        size >>> 24 & 0xFF, size >>> 16 & 0xFF, size >>> 8 & 0xFF, size & 0xFF, // sample_size\n        flags.isLeading << 2 | flags.dependsOn, flags.isDependedOn << 6 | flags.hasRedundancy << 4 | flags.paddingValue << 1 | flags.isNonSync, flags.degradPrio & 0xF0 << 8, flags.degradPrio & 0x0F, // sample_flags\n        cts >>> 24 & 0xFF, cts >>> 16 & 0xFF, cts >>> 8 & 0xFF, cts & 0xFF // sample_composition_time_offset\n        ], 12 + 16 * i);\n      }\n      return MP4.box(MP4.types.trun, array);\n    }\n  }, {\n    key: 'initSegment',\n    value: function initSegment(tracks) {\n      if (!MP4.types) {\n        MP4.init();\n      }\n      var movie = MP4.moov(tracks),\n          result;\n      result = new Uint8Array(MP4.FTYP.byteLength + movie.byteLength);\n      result.set(MP4.FTYP);\n      result.set(movie, MP4.FTYP.byteLength);\n      return result;\n    }\n  }]);\n\n  return MP4;\n}();\n\nexports.default = MP4;\n\n},{}],38:[function(_dereq_,module,exports){\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }(); /**\nfMP4 remuxer\nn\nvar _aac = _dereq_(29);\n\nvar _aac2 = _interopRequireDefault(_aac);\n\nvar _events = _dereq_(28);\n\nvar _events2 = _interopRequireDefault(_events);\n\nvar _logger = _dereq_(45);\n\nvar _mp4Generator = _dereq_(37);\n\nvar _mp4Generator2 = _interopRequireDefault(_mp4Generator);\n\nvar _errors = _dereq_(26);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar MP4Remuxer = function () {\n  function MP4Remuxer(observer, id, config, typeSupported) {\n    _classCallCheck(this, MP4Remuxer);\n\n    this.observer = observer;\n    this.id = id;\n    this.config = config;\n    this.typeSupported = typeSupported;\n    this.ISGenerated = false;\n    this.PES2MP4SCALEFACTOR = 4;\n    this.PES_TIMESCALE = 90000;\n    this.MP4_TIMESCALE = this.PES_TIMESCALE / this.PES2MP4SCALEFACTOR;\n  }\n\n  _createClass(MP4Remuxer, [{\n    key: 'destroy',\n    value: function destroy() {}\n  }, {\n    key: 'insertDiscontinuity',\n    value: function insertDiscontinuity() {\n      this._initPTS = this._initDTS = undefined;\n    }\n  }, {\n    key: 'switchLevel',\n    value: function switchLevel() {\n      this.ISGenerated = false;\n    }\n  }, {\n    key: 'remux',\n    value: function remux(level, sn, cc, audioTrack, videoTrack, id3Track, textTrack, timeOffset, contiguous, accurateTimeOffset, defaultInitPTS) {\n      this.level = level;\n      this.sn = sn;\n      // generate Init Segment if needed\n      if (!this.ISGenerated) {\n        this.generateIS(audioTrack, videoTrack, timeOffset, cc);\n      }\n\n      if (defaultInitPTS !== null) {\n        this._initPTS = this._initDTS = defaultInitPTS;\n      }\n\n      if (this.ISGenerated) {\n        // Purposefully remuxing audio before video, so that remuxVideo can use nextAudioPts, which is\n        // calculated in remuxAudio.\n        //logger.log('nb AAC samples:' + audioTrack.samples.length);\n        if (audioTrack.samples.length) {\n          var audioData = this.remuxAudio(audioTrack, timeOffset, contiguous, accurateTimeOffset);\n          //logger.log('nb AVC samples:' + videoTrack.samples.length);\n          if (videoTrack.samples.length) {\n            var audioTrackLength = void 0;\n            if (audioData) {\n              audioTrackLength = audioData.endPTS - audioData.startPTS;\n            }\n            this.remuxVideo(videoTrack, timeOffset, contiguous, audioTrackLength);\n          }\n        } else {\n          var videoData = void 0;\n          //logger.log('nb AVC samples:' + videoTrack.samples.length);\n          if (videoTrack.samples.length) {\n            videoData = this.remuxVideo(videoTrack, timeOffset, contiguous);\n          }\n          if (videoData && audioTrack.codec) {\n            this.remuxEmptyAudio(audioTrack, timeOffset, contiguous, videoData);\n          }\n        }\n      }\n      //logger.log('nb ID3 samples:' + audioTrack.samples.length);\n      if (id3Track.samples.length) {\n        this.remuxID3(id3Track, timeOffset);\n      }\n      //logger.log('nb ID3 samples:' + audioTrack.samples.length);\n      if (textTrack.samples.length) {\n        this.remuxText(textTrack, timeOffset);\n      }\n      //notify end of parsing\n      this.observer.trigger(_events2.default.FRAG_PARSED, { id: this.id, level: this.level, sn: this.sn });\n    }\n  }, {\n    key: 'generateIS',\n    value: function generateIS(audioTrack, videoTrack, timeOffset, cc) {\n      var observer = this.observer,\n          audioSamples = audioTrack.samples,\n          videoSamples = videoTrack.samples,\n          pesTimeScale = this.PES_TIMESCALE,\n          typeSupported = this.typeSupported,\n          container = 'audio/mp4',\n          tracks = {},\n          data = { id: this.id, level: this.level, sn: this.sn, tracks: tracks, unique: false },\n          computePTSDTS = this._initPTS === undefined,\n          initPTS,\n          initDTS;\n\n      if (computePTSDTS) {\n        initPTS = initDTS = Infinity;\n      }\n      if (audioTrack.config && audioSamples.length) {\n        audioTrack.timescale = audioTrack.audiosamplerate;\n        // MP4 duration (track duration in seconds multiplied by timescale) is coded on 32 bits\n        // we know that each AAC sample contains 1024 frames....\n        // in order to avoid overflowing the 32 bit counter for large duration, we use smaller timescale (timescale/gcd)\n        // we just need to ensure that AAC sample duration will still be an integer (will be 1024/gcd)\n        if (audioTrack.timescale * audioTrack.duration > Math.pow(2, 32)) {\n          (function () {\n            var greatestCommonDivisor = function greatestCommonDivisor(a, b) {\n              if (!b) {\n                return a;\n              }\n              return greatestCommonDivisor(b, a % b);\n            };\n            audioTrack.timescale = audioTrack.audiosamplerate / greatestCommonDivisor(audioTrack.audiosamplerate, audioTrack.isAAC ? 1024 : 1152);\n          })();\n        }\n        _logger.logger.log('audio mp4 timescale :' + audioTrack.timescale);\n        if (!audioTrack.isAAC) {\n          if (typeSupported.mpeg) {\n            // Chrome and Safari\n            container = 'audio/mpeg';\n            audioTrack.codec = '';\n          } else if (typeSupported.mp3) {\n            // Firefox\n            audioTrack.codec = 'mp3';\n          }\n        }\n        tracks.audio = {\n          container: container,\n          codec: audioTrack.codec,\n          initSegment: !audioTrack.isAAC && typeSupported.mpeg ? new Uint8Array() : _mp4Generator2.default.initSegment([audioTrack]),\n          metadata: {\n            channelCount: audioTrack.channelCount\n          }\n        };\n        if (computePTSDTS) {\n          // remember first PTS of this demuxing context. for audio, PTS = DTS\n          initPTS = initDTS = audioSamples[0].pts - pesTimeScale * timeOffset;\n        }\n      }\n\n      if (videoTrack.sps && videoTrack.pps && videoSamples.length) {\n        videoTrack.timescale = this.MP4_TIMESCALE;\n        tracks.video = {\n          container: 'video/mp4',\n          codec: videoTrack.codec,\n          initSegment: _mp4Generator2.default.initSegment([videoTrack]),\n          metadata: {\n            width: videoTrack.width,\n            height: videoTrack.height\n          }\n        };\n        if (computePTSDTS) {\n          initPTS = Math.min(initPTS, videoSamples[0].pts - pesTimeScale * timeOffset);\n          initDTS = Math.min(initDTS, videoSamples[0].dts - pesTimeScale * timeOffset);\n          this.observer.trigger(_events2.default.INIT_PTS_FOUND, { id: this.id, initPTS: initPTS, cc: cc });\n        }\n      }\n\n      if (Object.keys(tracks).length) {\n        observer.trigger(_events2.default.FRAG_PARSING_INIT_SEGMENT, data);\n        this.ISGenerated = true;\n        if (computePTSDTS) {\n          this._initPTS = initPTS;\n          this._initDTS = initDTS;\n        }\n      } else {\n        observer.trigger(_events2.default.ERROR, { type: _errors.ErrorTypes.MEDIA_ERROR, id: this.id, details: _errors.ErrorDetails.FRAG_PARSING_ERROR, fatal: false, reason: 'no audio/video samples found' });\n      }\n    }\n  }, {\n    key: 'remuxVideo',\n    value: function remuxVideo(track, timeOffset, contiguous, audioTrackLength) {\n      var offset = 8,\n          pesTimeScale = this.PES_TIMESCALE,\n          pes2mp4ScaleFactor = this.PES2MP4SCALEFACTOR,\n          mp4SampleDuration,\n          mdat,\n          moof,\n          firstPTS,\n          firstDTS,\n          nextDTS,\n          lastPTS,\n          lastDTS,\n          inputSamples = track.samples,\n          outputSamples = [],\n          nbSamples = inputSamples.length,\n          ptsNormalize = this._PTSNormalize,\n          initDTS = this._initDTS;\n\n      // for (let i = 0; i < track.samples.length; i++) {\n      //   let avcSample = track.samples[i];\n      //   let units = avcSample.units.units;\n      //   let unitsString = '';\n      //   for (let j = 0; j < units.length ; j++) {\n      //     unitsString += units[j].type + ',';\n      //     if (units[j].data.length < 500) {\n      //       unitsString += Hex.hexDump(units[j].data);\n      //     }\n      //   }\n      //   logger.log(avcSample.pts + '/' + avcSample.dts + ',' + unitsString + avcSample.units.length);\n      // }\n\n      // sort video samples by DTS then PTS order\n      inputSamples.sort(function (a, b) {\n        var deltadts = a.dts - b.dts;\n        return deltadts ? deltadts : a.pts - b.pts;\n      });\n\n      // handle broken streams with PTS < DTS, tolerance up 200ms (18000 in 90kHz timescale)\n      var PTSDTSshift = inputSamples.reduce(function (prev, curr) {\n        return Math.max(Math.min(prev, curr.pts - curr.dts), -18000);\n      }, 0);\n      if (PTSDTSshift < 0) {\n        _logger.logger.warn('PTS < DTS detected in video samples, shifting DTS by ' + Math.round(PTSDTSshift / 90) + ' ms to overcome this issue');\n        for (var i = 0; i < inputSamples.length; i++) {\n          inputSamples[i].dts += PTSDTSshift;\n        }\n      }\n\n      // PTS is coded on 33bits, and can loop from -2^32 to 2^32\n      // ptsNormalize will make PTS/DTS value monotonic, we use last known DTS value as reference value\n      var nextAvcDts = void 0;\n      // contiguous fragments are consecutive fragments from same quality level (same level, new SN = old SN + 1)\n      if (contiguous) {\n        // if parsed fragment is contiguous with last one, let's use last DTS value as reference\n        nextAvcDts = this.nextAvcDts;\n      } else {\n        // if not contiguous, let's use target timeOffset\n        nextAvcDts = timeOffset * pesTimeScale;\n      }\n\n      // compute first DTS and last DTS, normalize them against reference value\n      var sample = inputSamples[0];\n      firstDTS = Math.max(ptsNormalize(sample.dts - initDTS, nextAvcDts), 0);\n      firstPTS = Math.max(ptsNormalize(sample.pts - initDTS, nextAvcDts), 0);\n\n      // check timestamp continuity accross consecutive fragments (this is to remove inter-fragment gap/hole)\n      var delta = Math.round((firstDTS - nextAvcDts) / 90);\n      // if fragment are contiguous, detect hole/overlapping between fragments\n      if (contiguous) {\n        if (delta) {\n          if (delta > 1) {\n            _logger.logger.log('AVC:' + delta + ' ms hole between fragments detected,filling it');\n          } else if (delta < -1) {\n            _logger.logger.log('AVC:' + -delta + ' ms overlapping between fragments detected');\n          }\n          // remove hole/gap : set DTS to next expected DTS\n          firstDTS = nextAvcDts;\n          inputSamples[0].dts = firstDTS + initDTS;\n          // offset PTS as well, ensure that PTS is smaller or equal than new DTS\n          firstPTS = Math.max(firstPTS - delta, nextAvcDts);\n          inputSamples[0].pts = firstPTS + initDTS;\n          _logger.logger.log('Video/PTS/DTS adjusted: ' + Math.round(firstPTS / 90) + '/' + Math.round(firstDTS / 90) + ',delta:' + delta + ' ms');\n        }\n      }\n      nextDTS = firstDTS;\n\n      // compute lastPTS/lastDTS\n      sample = inputSamples[inputSamples.length - 1];\n      lastDTS = Math.max(ptsNormalize(sample.dts - initDTS, nextAvcDts), 0);\n      lastPTS = Math.max(ptsNormalize(sample.pts - initDTS, nextAvcDts), 0);\n      lastPTS = Math.max(lastPTS, lastDTS);\n\n      var vendor = navigator.vendor,\n          userAgent = navigator.userAgent,\n          isSafari = vendor && vendor.indexOf('Apple') > -1 && userAgent && !userAgent.match('CriOS');\n\n      // on Safari let's signal the same sample duration for all samples\n      // sample duration (as expected by trun MP4 boxes), should be the delta between sample DTS\n      // set this constant duration as being the avg delta between consecutive DTS.\n      if (isSafari) {\n        mp4SampleDuration = Math.round((lastDTS - firstDTS) / (pes2mp4ScaleFactor * (inputSamples.length - 1)));\n      }\n\n      // normalize all PTS/DTS now ...\n      for (var _i = 0; _i < nbSamples; _i++) {\n        var _sample = inputSamples[_i];\n        if (isSafari) {\n          // sample DTS is computed using a constant decoding offset (mp4SampleDuration) between samples\n          _sample.dts = firstDTS + _i * pes2mp4ScaleFactor * mp4SampleDuration;\n        } else {\n          // ensure sample monotonic DTS\n          _sample.dts = Math.max(ptsNormalize(_sample.dts - initDTS, nextAvcDts), firstDTS);\n          // ensure dts is a multiple of scale factor to avoid rounding issues\n          _sample.dts = Math.round(_sample.dts / pes2mp4ScaleFactor) * pes2mp4ScaleFactor;\n        }\n        // we normalize PTS against nextAvcDts, we also substract initDTS (some streams don't start @ PTS O)\n        // and we ensure that computed value is greater or equal than sample DTS\n        _sample.pts = Math.max(ptsNormalize(_sample.pts - initDTS, nextAvcDts), _sample.dts);\n        // ensure pts is a multiple of scale factor to avoid rounding issues\n        _sample.pts = Math.round(_sample.pts / pes2mp4ScaleFactor) * pes2mp4ScaleFactor;\n      }\n\n      /* concatenate the video data and construct the mdat in place\n        (need 8 more bytes to fill length and mpdat type) */\n      var mdatSize = track.len + 4 * track.nbNalu + 8;\n      try {\n        mdat = new Uint8Array(mdatSize);\n      } catch (err) {\n        this.observer.trigger(_events2.default.ERROR, { type: _errors.ErrorTypes.MUX_ERROR, level: this.level, id: this.id, details: _errors.ErrorDetails.REMUX_ALLOC_ERROR, fatal: false, bytes: mdatSize, reason: 'fail allocating video mdat ' + mdatSize });\n        return;\n      }\n      var view = new DataView(mdat.buffer);\n      view.setUint32(0, mdatSize);\n      mdat.set(_mp4Generator2.default.types.mdat, 4);\n\n      for (var _i2 = 0; _i2 < nbSamples; _i2++) {\n        var avcSample = inputSamples[_i2],\n            avcSampleUnits = avcSample.units.units,\n            mp4SampleLength = 0,\n            compositionTimeOffset = void 0;\n        // convert NALU bitstream to MP4 format (prepend NALU with size field)\n        for (var j = 0, nbUnits = avcSampleUnits.length; j < nbUnits; j++) {\n          var unit = avcSampleUnits[j],\n              unitData = unit.data,\n              unitDataLen = unit.data.byteLength;\n          view.setUint32(offset, unitDataLen);\n          offset += 4;\n          mdat.set(unitData, offset);\n          offset += unitDataLen;\n          mp4SampleLength += 4 + unitDataLen;\n        }\n\n        if (!isSafari) {\n          // expected sample duration is the Decoding Timestamp diff of consecutive samples\n          if (_i2 < nbSamples - 1) {\n            mp4SampleDuration = inputSamples[_i2 + 1].dts - avcSample.dts;\n          } else {\n            var config = this.config,\n                lastFrameDuration = avcSample.dts - inputSamples[_i2 > 0 ? _i2 - 1 : _i2].dts;\n            if (config.stretchShortVideoTrack) {\n              // In some cases, a segment's audio track duration may exceed the video track duration.\n              // Since we've already remuxed audio, and we know how long the audio track is, we look to\n              // see if the delta to the next segment is longer than the minimum of maxBufferHole and\n              // maxSeekHole. If so, playback would potentially get stuck, so we artificially inflate\n              // the duration of the last frame to minimize any potential gap between segments.\n              var maxBufferHole = config.maxBufferHole,\n                  maxSeekHole = config.maxSeekHole,\n                  gapTolerance = Math.floor(Math.min(maxBufferHole, maxSeekHole) * pesTimeScale),\n                  deltaToFrameEnd = (audioTrackLength ? firstPTS + audioTrackLength * pesTimeScale : this.nextAudioPts) - avcSample.pts;\n              if (deltaToFrameEnd > gapTolerance) {\n                // We subtract lastFrameDuration from deltaToFrameEnd to try to prevent any video\n                // frame overlap. maxBufferHole/maxSeekHole should be >> lastFrameDuration anyway.\n                mp4SampleDuration = deltaToFrameEnd - lastFrameDuration;\n                if (mp4SampleDuration < 0) {\n                  mp4SampleDuration = lastFrameDuration;\n                }\n                _logger.logger.log('It is approximately ' + deltaToFrameEnd / 90 + ' ms to the next segment; using duration ' + mp4SampleDuration / 90 + ' ms for the last video frame.');\n              } else {\n                mp4SampleDuration = lastFrameDuration;\n              }\n            } else {\n              mp4SampleDuration = lastFrameDuration;\n            }\n          }\n          mp4SampleDuration /= pes2mp4ScaleFactor;\n          compositionTimeOffset = Math.round((avcSample.pts - avcSample.dts) / pes2mp4ScaleFactor);\n        } else {\n          compositionTimeOffset = Math.max(0, mp4SampleDuration * Math.round((avcSample.pts - avcSample.dts) / (pes2mp4ScaleFactor * mp4SampleDuration)));\n        }\n\n        //console.log('PTS/DTS/initDTS/normPTS/normDTS/relative PTS : ${avcSample.pts}/${avcSample.dts}/${initDTS}/${ptsnorm}/${dtsnorm}/${(avcSample.pts/4294967296).toFixed(3)}');\n        outputSamples.push({\n          size: mp4SampleLength,\n          // constant duration\n          duration: mp4SampleDuration,\n          cts: compositionTimeOffset,\n          flags: {\n            isLeading: 0,\n            isDependedOn: 0,\n            hasRedundancy: 0,\n            degradPrio: 0,\n            dependsOn: avcSample.key ? 2 : 1,\n            isNonSync: avcSample.key ? 0 : 1\n          }\n        });\n      }\n      // next AVC sample DTS should be equal to last sample DTS + last sample duration (in PES timescale)\n      this.nextAvcDts = lastDTS + mp4SampleDuration * pes2mp4ScaleFactor;\n      var dropped = track.dropped;\n      track.len = 0;\n      track.nbNalu = 0;\n      track.dropped = 0;\n      if (outputSamples.length && navigator.userAgent.toLowerCase().indexOf('chrome') > -1) {\n        var flags = outputSamples[0].flags;\n        // chrome workaround, mark first sample as being a Random Access Point to avoid sourcebuffer append issue\n        // https://code.google.com/p/chromium/issues/detail?id=229412\n        flags.dependsOn = 2;\n        flags.isNonSync = 0;\n      }\n      track.samples = outputSamples;\n      moof = _mp4Generator2.default.moof(track.sequenceNumber++, firstDTS / pes2mp4ScaleFactor, track);\n      track.samples = [];\n\n      var data = {\n        id: this.id,\n        level: this.level,\n        sn: this.sn,\n        data1: moof,\n        data2: mdat,\n        startPTS: firstPTS / pesTimeScale,\n        endPTS: (lastPTS + pes2mp4ScaleFactor * mp4SampleDuration) / pesTimeScale,\n        startDTS: firstDTS / pesTimeScale,\n        endDTS: this.nextAvcDts / pesTimeScale,\n        type: 'video',\n        nb: outputSamples.length,\n        dropped: dropped\n      };\n      this.observer.trigger(_events2.default.FRAG_PARSING_DATA, data);\n      return data;\n    }\n  }, {\n    key: 'remuxAudio',\n    value: function remuxAudio(track, timeOffset, contiguous, accurateTimeOffset) {\n      var pesTimeScale = this.PES_TIMESCALE,\n          mp4timeScale = track.timescale,\n          pes2mp4ScaleFactor = pesTimeScale / mp4timeScale,\n          expectedSampleDuration = track.timescale * (track.isAAC ? 1024 : 1152) / track.audiosamplerate,\n          pesFrameDuration = expectedSampleDuration * pes2mp4ScaleFactor,\n          ptsNormalize = this._PTSNormalize,\n          initDTS = this._initDTS,\n          rawMPEG = !track.isAAC && this.typeSupported.mpeg;\n\n      var view,\n          offset = rawMPEG ? 0 : 8,\n          audioSample,\n          mp4Sample,\n          unit,\n          mdat,\n          moof,\n          firstPTS,\n          firstDTS,\n          lastDTS,\n          pts,\n          dts,\n          ptsnorm,\n          dtsnorm,\n          outputSamples = [],\n          inputSamples = [],\n          fillFrame,\n          newStamp,\n          nextAudioPts;\n\n      track.samples.sort(function (a, b) {\n        return a.pts - b.pts;\n      });\n      inputSamples = track.samples;\n\n      // for audio samples, also consider consecutive fragments as being contiguous (even if a level switch occurs),\n      // for sake of clarity:\n      // consecutive fragments are frags with\n      //  - less than 100ms gaps between new time offset and next expected PTS OR\n      //  - less than 20 audio frames distance\n      // contiguous fragments are consecutive fragments from same quality level (same level, new SN = old SN + 1)\n      // this helps ensuring audio continuity\n      // and this also avoids audio glitches/cut when switching quality, or reporting wrong duration on first audio frame\n\n      nextAudioPts = this.nextAudioPts;\n      contiguous |= inputSamples.length && nextAudioPts && (Math.abs(timeOffset - nextAudioPts / pesTimeScale) < 0.1 || Math.abs(inputSamples[0].pts - nextAudioPts - this._initDTS) < 20 * pesFrameDuration);\n\n      if (!contiguous) {\n        // if fragments are not contiguous, let's use timeOffset to compute next Audio PTS\n        nextAudioPts = timeOffset * pesTimeScale;\n      }\n      // If the audio track is missing samples, the frames seem to get \"left-shifted\" within the\n      // resulting mp4 segment, causing sync issues and leaving gaps at the end of the audio segment.\n      // In an effort to prevent this from happening, we inject frames here where there are gaps.\n      // When possible, we inject a silent frame; when that's not possible, we duplicate the last\n      // frame.\n\n      // only inject/drop audio frames in case time offset is accurate\n      if (accurateTimeOffset && track.isAAC) {\n        for (var i = 0, nextPtsNorm = nextAudioPts; i < inputSamples.length;) {\n          // First, let's see how far off this frame is from where we expect it to be\n          var sample = inputSamples[i],\n              ptsNorm = ptsNormalize(sample.pts - initDTS, nextAudioPts),\n              delta = ptsNorm - nextPtsNorm;\n\n          // If we're overlapping by more than a duration, drop this sample\n          if (delta <= -pesFrameDuration) {\n            _logger.logger.warn('Dropping 1 audio frame @ ' + Math.round(nextPtsNorm / 90) / 1000 + 's due to ' + Math.round(Math.abs(delta / 90)) + ' ms overlap.');\n            inputSamples.splice(i, 1);\n            track.len -= sample.unit.length;\n            // Don't touch nextPtsNorm or i\n          }\n          // Otherwise, if we're more than a frame away from where we should be, insert missing frames\n          // also only inject silent audio frames if currentTime !== 0 (nextPtsNorm !== 0)\n          else if (delta >= pesFrameDuration && nextPtsNorm) {\n              var missing = Math.round(delta / pesFrameDuration);\n              _logger.logger.warn('Injecting ' + missing + ' audio frame @ ' + Math.round(nextPtsNorm / 90) / 1000 + 's due to ' + Math.round(delta / 90) + ' ms gap.');\n              for (var j = 0; j < missing; j++) {\n                newStamp = nextPtsNorm + initDTS;\n                newStamp = Math.max(newStamp, initDTS);\n                fillFrame = _aac2.default.getSilentFrame(track.manifestCodec || track.codec, track.channelCount);\n                if (!fillFrame) {\n                  _logger.logger.log('Unable to get silent frame for given audio codec; duplicating last frame instead.');\n                  fillFrame = sample.unit.subarray();\n                }\n                inputSamples.splice(i, 0, { unit: fillFrame, pts: newStamp, dts: newStamp });\n                track.len += fillFrame.length;\n                nextPtsNorm += pesFrameDuration;\n                i += 1;\n              }\n\n              // Adjust sample to next expected pts\n              sample.pts = sample.dts = nextPtsNorm + initDTS;\n              nextPtsNorm += pesFrameDuration;\n              i += 1;\n            }\n            // Otherwise, we're within half a frame duration, so just adjust pts\n            else {\n                if (Math.abs(delta) > 0.1 * pesFrameDuration) {\n                  //logger.log(`Invalid frame delta ${Math.round(ptsNorm - nextPtsNorm + pesFrameDuration)} at PTS ${Math.round(ptsNorm / 90)} (should be ${Math.round(pesFrameDuration)}).`);\n                }\n                nextPtsNorm += pesFrameDuration;\n                if (i === 0) {\n                  sample.pts = sample.dts = initDTS + nextAudioPts;\n                } else {\n                  sample.pts = sample.dts = inputSamples[i - 1].pts + pesFrameDuration;\n                }\n                i += 1;\n              }\n        }\n      }\n\n      for (var _j = 0, _nbSamples = inputSamples.length; _j < _nbSamples; _j++) {\n        audioSample = inputSamples[_j];\n        unit = audioSample.unit;\n        pts = audioSample.pts - initDTS;\n        dts = audioSample.dts - initDTS;\n        //logger.log(`Audio/PTS:${Math.round(pts/90)}`);\n        // if not first sample\n        if (lastDTS !== undefined) {\n          ptsnorm = ptsNormalize(pts, lastDTS);\n          dtsnorm = ptsNormalize(dts, lastDTS);\n          mp4Sample.duration = Math.round((dtsnorm - lastDTS) / pes2mp4ScaleFactor);\n        } else {\n          ptsnorm = ptsNormalize(pts, nextAudioPts);\n          dtsnorm = ptsNormalize(dts, nextAudioPts);\n          var _delta = Math.round(1000 * (ptsnorm - nextAudioPts) / pesTimeScale),\n              numMissingFrames = 0;\n          // if fragment are contiguous, detect hole/overlapping between fragments\n          // contiguous fragments are consecutive fragments from same quality level (same level, new SN = old SN + 1)\n          if (contiguous && track.isAAC) {\n            // log delta\n            if (_delta) {\n              if (_delta > 0) {\n                numMissingFrames = Math.round((ptsnorm - nextAudioPts) / pesFrameDuration);\n                _logger.logger.log(_delta + ' ms hole between AAC samples detected,filling it');\n                if (numMissingFrames > 0) {\n                  fillFrame = _aac2.default.getSilentFrame(track.manifestCodec || track.codec, track.channelCount);\n                  if (!fillFrame) {\n                    fillFrame = unit.subarray();\n                  }\n                  track.len += numMissingFrames * fillFrame.length;\n                }\n                // if we have frame overlap, overlapping for more than half a frame duraion\n              } else if (_delta < -12) {\n                // drop overlapping audio frames... browser will deal with it\n                _logger.logger.log(-_delta + ' ms overlapping between AAC samples detected, drop frame');\n                track.len -= unit.byteLength;\n                continue;\n              }\n              // set PTS/DTS to expected PTS/DTS\n              ptsnorm = dtsnorm = nextAudioPts;\n            }\n          }\n          // remember first PTS of our audioSamples, ensure value is positive\n          firstPTS = Math.max(0, ptsnorm);\n          firstDTS = Math.max(0, dtsnorm);\n          if (track.len > 0) {\n            /* concatenate the audio data and construct the mdat in place\n              (need 8 more bytes to fill length and mdat type) */\n\n            var mdatSize = rawMPEG ? track.len : track.len + 8;\n            try {\n              mdat = new Uint8Array(mdatSize);\n            } catch (err) {\n              this.observer.trigger(_events2.default.ERROR, { type: _errors.ErrorTypes.MUX_ERROR, level: this.level, id: this.id, details: _errors.ErrorDetails.REMUX_ALLOC_ERROR, fatal: false, bytes: mdatSize, reason: 'fail allocating audio mdat ' + mdatSize });\n              return;\n            }\n            if (!rawMPEG) {\n              view = new DataView(mdat.buffer);\n              view.setUint32(0, mdatSize);\n              mdat.set(_mp4Generator2.default.types.mdat, 4);\n            }\n          } else {\n            // no audio samples\n            return;\n          }\n          for (var _i3 = 0; _i3 < numMissingFrames; _i3++) {\n            newStamp = ptsnorm - (numMissingFrames - _i3) * pesFrameDuration;\n            fillFrame = _aac2.default.getSilentFrame(track.manifestCodec || track.codec, track.channelCount);\n            if (!fillFrame) {\n              _logger.logger.log('Unable to get silent frame for given audio codec; duplicating this frame instead.');\n              fillFrame = unit.subarray();\n            }\n            mdat.set(fillFrame, offset);\n            offset += fillFrame.byteLength;\n            mp4Sample = {\n              size: fillFrame.byteLength,\n              cts: 0,\n              duration: 1024,\n              flags: {\n                isLeading: 0,\n                isDependedOn: 0,\n                hasRedundancy: 0,\n                degradPrio: 0,\n                dependsOn: 1\n              }\n            };\n            outputSamples.push(mp4Sample);\n          }\n        }\n        mdat.set(unit, offset);\n        var unitLen = unit.byteLength;\n        offset += unitLen;\n        //console.log('PTS/DTS/initDTS/normPTS/normDTS/relative PTS : ${audioSample.pts}/${audioSample.dts}/${initDTS}/${ptsnorm}/${dtsnorm}/${(audioSample.pts/4294967296).toFixed(3)}');\n        mp4Sample = {\n          size: unitLen,\n          cts: 0,\n          duration: 0,\n          flags: {\n            isLeading: 0,\n            isDependedOn: 0,\n            hasRedundancy: 0,\n            degradPrio: 0,\n            dependsOn: 1\n          }\n        };\n        outputSamples.push(mp4Sample);\n        lastDTS = dtsnorm;\n      }\n      var lastSampleDuration = 0;\n      var nbSamples = outputSamples.length;\n      //set last sample duration as being identical to previous sample\n      if (nbSamples >= 2) {\n        lastSampleDuration = outputSamples[nbSamples - 2].duration;\n        mp4Sample.duration = lastSampleDuration;\n      }\n      if (nbSamples) {\n        // next audio sample PTS should be equal to last sample PTS + duration\n        this.nextAudioPts = ptsnorm + pes2mp4ScaleFactor * lastSampleDuration;\n        //logger.log('Audio/PTS/PTSend:' + audioSample.pts.toFixed(0) + '/' + this.nextAacDts.toFixed(0));\n        track.len = 0;\n        track.samples = outputSamples;\n        if (rawMPEG) {\n          moof = new Uint8Array();\n        } else {\n          moof = _mp4Generator2.default.moof(track.sequenceNumber++, firstDTS / pes2mp4ScaleFactor, track);\n        }\n        track.samples = [];\n        var audioData = {\n          id: this.id,\n          level: this.level,\n          sn: this.sn,\n          data1: moof,\n          data2: mdat,\n          startPTS: firstPTS / pesTimeScale,\n          endPTS: this.nextAudioPts / pesTimeScale,\n          startDTS: firstDTS / pesTimeScale,\n          endDTS: (dtsnorm + pes2mp4ScaleFactor * lastSampleDuration) / pesTimeScale,\n          type: 'audio',\n          nb: nbSamples\n        };\n        this.observer.trigger(_events2.default.FRAG_PARSING_DATA, audioData);\n        return audioData;\n      }\n      return null;\n    }\n  }, {\n    key: 'remuxEmptyAudio',\n    value: function remuxEmptyAudio(track, timeOffset, contiguous, videoData) {\n      var pesTimeScale = this.PES_TIMESCALE,\n          mp4timeScale = track.timescale ? track.timescale : track.audiosamplerate,\n          pes2mp4ScaleFactor = pesTimeScale / mp4timeScale,\n          nextAudioPts = this.nextAudioPts,\n\n\n      // sync with video's timestamp\n      startDTS = (nextAudioPts !== undefined ? nextAudioPts : videoData.startDTS * pesTimeScale) + this._initDTS,\n          endDTS = videoData.endDTS * pesTimeScale + this._initDTS,\n\n      // one sample's duration value\n      sampleDuration = 1024,\n          frameDuration = pes2mp4ScaleFactor * sampleDuration,\n\n\n      // samples count of this segment's duration\n      nbSamples = Math.ceil((endDTS - startDTS) / frameDuration),\n\n\n      // silent frame\n      silentFrame = _aac2.default.getSilentFrame(track.manifestCodec || track.codec, track.channelCount);\n\n      _logger.logger.warn('remux empty Audio');\n      // Can't remux if we can't generate a silent frame...\n      if (!silentFrame) {\n        _logger.logger.trace('Unable to remuxEmptyAudio since we were unable to get a silent frame for given audio codec!');\n        return;\n      }\n\n      var samples = [];\n      for (var i = 0; i < nbSamples; i++) {\n        var stamp = startDTS + i * frameDuration;\n        samples.push({ unit: silentFrame, pts: stamp, dts: stamp });\n        track.len += silentFrame.length;\n      }\n      track.samples = samples;\n\n      this.remuxAudio(track, timeOffset, contiguous);\n    }\n  }, {\n    key: 'remuxID3',\n    value: function remuxID3(track, timeOffset) {\n      var length = track.samples.length,\n          sample;\n      // consume samples\n      if (length) {\n        for (var index = 0; index < length; index++) {\n          sample = track.samples[index];\n          // setting id3 pts, dts to relative time\n          // using this._initPTS and this._initDTS to calculate relative time\n          sample.pts = (sample.pts - this._initPTS) / this.PES_TIMESCALE;\n          sample.dts = (sample.dts - this._initDTS) / this.PES_TIMESCALE;\n        }\n        this.observer.trigger(_events2.default.FRAG_PARSING_METADATA, {\n          id: this.id,\n          level: this.level,\n          sn: this.sn,\n          samples: track.samples\n        });\n      }\n\n      track.samples = [];\n      timeOffset = timeOffset;\n    }\n  }, {\n    key: 'remuxText',\n    value: function remuxText(track, timeOffset) {\n      track.samples.sort(function (a, b) {\n        return a.pts - b.pts;\n      });\n\n      var length = track.samples.length,\n          sample;\n      // consume samples\n      if (length) {\n        for (var index = 0; index < length; index++) {\n          sample = track.samples[index];\n          // setting text pts, dts to relative time\n          // using this._initPTS and this._initDTS to calculate relative time\n          sample.pts = (sample.pts - this._initPTS) / this.PES_TIMESCALE;\n        }\n        this.observer.trigger(_events2.default.FRAG_PARSING_USERDATA, {\n          id: this.id,\n          level: this.level,\n          sn: this.sn,\n          samples: track.samples\n        });\n      }\n\n      track.samples = [];\n      timeOffset = timeOffset;\n    }\n  }, {\n    key: '_PTSNormalize',\n    value: function _PTSNormalize(value, reference) {\n      var offset;\n      if (reference === undefined) {\n        return value;\n      }\n      if (reference < value) {\n        // - 2^33\n        offset = -8589934592;\n      } else {\n        // + 2^33\n        offset = 8589934592;\n      }\n      /* PTS is 33bit (from 0 to 2^33 -1)\n        if diff between value and reference is bigger than half of the amplitude (2^32) then it means that\n        PTS looping occured. fill the gap */\n      while (Math.abs(value - reference) > 4294967296) {\n        value += offset;\n      }\n      return value;\n    }\n  }, {\n    key: 'passthrough',\n    get: function get() {\n      return false;\n    }\n  }]);\n\n  return MP4Remuxer;\n}();\n\nexports.default = MP4Remuxer;\n\n},{\"26\":26,\"28\":28,\"29\":29,\"37\":37,\"45\":45}],39:[function(_dereq_,module,exports){\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }(); /**\npassthrough remuxer\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                     */\n\n\nvar _events = _dereq_(28);\n\nvar _events2 = _interopRequireDefault(_events);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar PassThroughRemuxer = function () {\n  function PassThroughRemuxer(observer, id) {\n    _classCallCheck(this, PassThroughRemuxer);\n\n    this.observer = observer;\n    this.id = id;\n    this.ISGenerated = false;\n  }\n\n  _createClass(PassThroughRemuxer, [{\n    key: 'destroy',\n    value: function destroy() {}\n  }, {\n    key: 'insertDiscontinuity',\n    value: function insertDiscontinuity() {}\n  }, {\n    key: 'switchLevel',\n    value: function switchLevel() {\n      this.ISGenerated = false;\n    }\n  }, {\n    key: 'remux',\n    value: function remux(audioTrack, videoTrack, id3Track, textTrack, timeOffset, rawData) {\n      var observer = this.observer;\n      // generate Init Segment if needed\n      if (!this.ISGenerated) {\n        var tracks = {},\n            data = { id: this.id, tracks: tracks, unique: true },\n            track = videoTrack,\n            codec = track.codec;\n\n        if (codec) {\n          data.tracks.video = {\n            container: track.container,\n            codec: codec,\n            metadata: {\n              width: track.width,\n              height: track.height\n            }\n          };\n        }\n\n        track = audioTrack;\n        codec = track.codec;\n        if (codec) {\n          data.tracks.audio = {\n            container: track.container,\n            codec: codec,\n            metadata: {\n              channelCount: track.channelCount\n            }\n          };\n        }\n        this.ISGenerated = true;\n        observer.trigger(_events2.default.FRAG_PARSING_INIT_SEGMENT, data);\n      }\n      observer.trigger(_events2.default.FRAG_PARSING_DATA, {\n        id: this.id,\n        data1: rawData,\n        startPTS: timeOffset,\n        startDTS: timeOffset,\n        type: 'audiovideo',\n        nb: 1,\n        dropped: 0\n      });\n    }\n  }, {\n    key: 'passthrough',\n    get: function get() {\n      return true;\n    }\n  }]);\n\n  return PassThroughRemuxer;\n}();\n\nexports.default = PassThroughRemuxer;\n\n},{\"28\":28}],40:[function(_dereq_,module,exports){\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar DECIMAL_RESOLUTION_REGEX = /^(\\d+)x(\\d+)$/;\nvar ATTR_LIST_REGEX = /\\s*(.+?)\\s*=((?:\\\".*?\\\")|.*?)(?:,|$)/g;\n\n// adapted from https://github.com/kanongil/node-m3u8parse/blob/master/attrlist.js\n\nvar AttrList = function () {\n  function AttrList(attrs) {\n    _classCallCheck(this, AttrList);\n\n    if (typeof attrs === 'string') {\n      attrs = AttrList.parseAttrList(attrs);\n    }\n    for (var attr in attrs) {\n      if (attrs.hasOwnProperty(attr)) {\n        this[attr] = attrs[attr];\n      }\n    }\n  }\n\n  _createClass(AttrList, [{\n    key: 'decimalInteger',\n    value: function decimalInteger(attrName) {\n      var intValue = parseInt(this[attrName], 10);\n      if (intValue > Number.MAX_SAFE_INTEGER) {\n        return Infinity;\n      }\n      return intValue;\n    }\n  }, {\n    key: 'hexadecimalInteger',\n    value: function hexadecimalInteger(attrName) {\n      if (this[attrName]) {\n        var stringValue = (this[attrName] || '0x').slice(2);\n        stringValue = (stringValue.length & 1 ? '0' : '') + stringValue;\n\n        var value = new Uint8Array(stringValue.length / 2);\n        for (var i = 0; i < stringValue.length / 2; i++) {\n          value[i] = parseInt(stringValue.slice(i * 2, i * 2 + 2), 16);\n        }\n        return value;\n      } else {\n        return null;\n      }\n    }\n  }, {\n    key: 'hexadecimalIntegerAsNumber',\n    value: function hexadecimalIntegerAsNumber(attrName) {\n      var intValue = parseInt(this[attrName], 16);\n      if (intValue > Number.MAX_SAFE_INTEGER) {\n        return Infinity;\n      }\n      return intValue;\n    }\n  }, {\n    key: 'decimalFloatingPoint',\n    value: function decimalFloatingPoint(attrName) {\n      return parseFloat(this[attrName]);\n    }\n  }, {\n    key: 'enumeratedString',\n    value: function enumeratedString(attrName) {\n      return this[attrName];\n    }\n  }, {\n    key: 'decimalResolution',\n    value: function decimalResolution(attrName) {\n      var res = DECIMAL_RESOLUTION_REGEX.exec(this[attrName]);\n      if (res === null) {\n        return undefined;\n      }\n      return {\n        width: parseInt(res[1], 10),\n        height: parseInt(res[2], 10)\n      };\n    }\n  }], [{\n    key: 'parseAttrList',\n    value: function parseAttrList(input) {\n      var match,\n          attrs = {};\n      ATTR_LIST_REGEX.lastIndex = 0;\n      while ((match = ATTR_LIST_REGEX.exec(input)) !== null) {\n        var value = match[2],\n            quote = '\"';\n\n        if (value.indexOf(quote) === 0 && value.lastIndexOf(quote) === value.length - 1) {\n          value = value.slice(1, -1);\n        }\n        attrs[match[1]] = value;\n      }\n      return attrs;\n    }\n  }]);\n\n  return AttrList;\n}();\n\nexports.default = AttrList;\n\n},{}],41:[function(_dereq_,module,exports){\n\"use strict\";\n\nvar BinarySearch = {\n    /**\n     * Searches for an item in an array which matches a certain condition.\n     * This requires the condition to only match one item in the array,\n     * and for the array to be ordered.\n     *\n     * @param {Array} list The array to search.\n     * @param {Function} comparisonFunction\n     *      Called and provided a candidate item as the first argument.\n     *      Should return:\n     *          > -1 if the item should be located at a lower index than the provided item.\n     *          > 1 if the item should be located at a higher index than the provided item.\n     *          > 0 if the item is the item you're looking for.\n     *\n     * @return {*} The object if it is found or null otherwise.\n     */\n    search: function search(list, comparisonFunction) {\n        var minIndex = 0;\n        var maxIndex = list.length - 1;\n        var currentIndex = null;\n        var currentElement = null;\n\n        while (minIndex <= maxIndex) {\n            currentIndex = (minIndex + maxIndex) / 2 | 0;\n            currentElement = list[currentIndex];\n\n            var comparisonResult = comparisonFunction(currentElement);\n            if (comparisonResult > 0) {\n                minIndex = currentIndex + 1;\n            } else if (comparisonResult < 0) {\n                maxIndex = currentIndex - 1;\n            } else {\n                return currentElement;\n            }\n        }\n\n        return null;\n    }\n};\n\nmodule.exports = BinarySearch;\n\n},{}],42:[function(_dereq_,module,exports){\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n/**\n *\n * This code was ported from the dash.js project at:\n *   https://github.com/Dash-Industry-Forum/dash.js/blob/development/externals/cea608-parser.js\n *   https://github.com/Dash-Industry-Forum/dash.js/commit/8269b26a761e0853bb21d78780ed945144ecdd4d#diff-71bc295a2d6b6b7093a1d3290d53a4b2\n *\n * The original copyright appears below:\n *\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2015-2016, DASH Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  1. Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  2. Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n/**\n *  Exceptions from regular ASCII. CodePoints are mapped to UTF-16 codes\n */\n\nvar specialCea608CharsCodes = {\n    0x2a: 0xe1, // lowercase a, acute accent\n    0x5c: 0xe9, // lowercase e, acute accent\n    0x5e: 0xed, // lowercase i, acute accent\n    0x5f: 0xf3, // lowercase o, acute accent\n    0x60: 0xfa, // lowercase u, acute accent\n    0x7b: 0xe7, // lowercase c with cedilla\n    0x7c: 0xf7, // division symbol\n    0x7d: 0xd1, // uppercase N tilde\n    0x7e: 0xf1, // lowercase n tilde\n    0x7f: 0x2588, // Full block\n    // THIS BLOCK INCLUDES THE 16 EXTENDED (TWO-BYTE) LINE 21 CHARACTERS\n    // THAT COME FROM HI BYTE=0x11 AND LOW BETWEEN 0x30 AND 0x3F\n    // THIS MEANS THAT \\x50 MUST BE ADDED TO THE VALUES\n    0x80: 0xae, // Registered symbol (R)\n    0x81: 0xb0, // degree sign\n    0x82: 0xbd, // 1/2 symbol\n    0x83: 0xbf, // Inverted (open) question mark\n    0x84: 0x2122, // Trademark symbol (TM)\n    0x85: 0xa2, // Cents symbol\n    0x86: 0xa3, // Pounds sterling\n    0x87: 0x266a, // Music 8'th note\n    0x88: 0xe0, // lowercase a, grave accent\n    0x89: 0x20, // transparent space (regular)\n    0x8a: 0xe8, // lowercase e, grave accent\n    0x8b: 0xe2, // lowercase a, circumflex accent\n    0x8c: 0xea, // lowercase e, circumflex accent\n    0x8d: 0xee, // lowercase i, circumflex accent\n    0x8e: 0xf4, // lowercase o, circumflex accent\n    0x8f: 0xfb, // lowercase u, circumflex accent\n    // THIS BLOCK INCLUDES THE 32 EXTENDED (TWO-BYTE) LINE 21 CHARACTERS\n    // THAT COME FROM HI BYTE=0x12 AND LOW BETWEEN 0x20 AND 0x3F\n    0x90: 0xc1, // capital letter A with acute\n    0x91: 0xc9, // capital letter E with acute\n    0x92: 0xd3, // capital letter O with acute\n    0x93: 0xda, // capital letter U with acute\n    0x94: 0xdc, // capital letter U with diaresis\n    0x95: 0xfc, // lowercase letter U with diaeresis\n    0x96: 0x2018, // opening single quote\n    0x97: 0xa1, // inverted exclamation mark\n    0x98: 0x2a, // asterisk\n    0x99: 0x2019, // closing single quote\n    0x9a: 0x2501, // box drawings heavy horizontal\n    0x9b: 0xa9, // copyright sign\n    0x9c: 0x2120, // Service mark\n    0x9d: 0x2022, // (round) bullet\n    0x9e: 0x201c, // Left double quotation mark\n    0x9f: 0x201d, // Right double quotation mark\n    0xa0: 0xc0, // uppercase A, grave accent\n    0xa1: 0xc2, // uppercase A, circumflex\n    0xa2: 0xc7, // uppercase C with cedilla\n    0xa3: 0xc8, // uppercase E, grave accent\n    0xa4: 0xca, // uppercase E, circumflex\n    0xa5: 0xcb, // capital letter E with diaresis\n    0xa6: 0xeb, // lowercase letter e with diaresis\n    0xa7: 0xce, // uppercase I, circumflex\n    0xa8: 0xcf, // uppercase I, with diaresis\n    0xa9: 0xef, // lowercase i, with diaresis\n    0xaa: 0xd4, // uppercase O, circumflex\n    0xab: 0xd9, // uppercase U, grave accent\n    0xac: 0xf9, // lowercase u, grave accent\n    0xad: 0xdb, // uppercase U, circumflex\n    0xae: 0xab, // left-pointing double angle quotation mark\n    0xaf: 0xbb, // right-pointing double angle quotation mark\n    // THIS BLOCK INCLUDES THE 32 EXTENDED (TWO-BYTE) LINE 21 CHARACTERS\n    // THAT COME FROM HI BYTE=0x13 AND LOW BETWEEN 0x20 AND 0x3F\n    0xb0: 0xc3, // Uppercase A, tilde\n    0xb1: 0xe3, // Lowercase a, tilde\n    0xb2: 0xcd, // Uppercase I, acute accent\n    0xb3: 0xcc, // Uppercase I, grave accent\n    0xb4: 0xec, // Lowercase i, grave accent\n    0xb5: 0xd2, // Uppercase O, grave accent\n    0xb6: 0xf2, // Lowercase o, grave accent\n    0xb7: 0xd5, // Uppercase O, tilde\n    0xb8: 0xf5, // Lowercase o, tilde\n    0xb9: 0x7b, // Open curly brace\n    0xba: 0x7d, // Closing curly brace\n    0xbb: 0x5c, // Backslash\n    0xbc: 0x5e, // Caret\n    0xbd: 0x5f, // Underscore\n    0xbe: 0x7c, // Pipe (vertical line)\n    0xbf: 0x223c, // Tilde operator\n    0xc0: 0xc4, // Uppercase A, umlaut\n    0xc1: 0xe4, // Lowercase A, umlaut\n    0xc2: 0xd6, // Uppercase O, umlaut\n    0xc3: 0xf6, // Lowercase o, umlaut\n    0xc4: 0xdf, // Esszett (sharp S)\n    0xc5: 0xa5, // Yen symbol\n    0xc6: 0xa4, // Generic currency sign\n    0xc7: 0x2503, // Box drawings heavy vertical\n    0xc8: 0xc5, // Uppercase A, ring\n    0xc9: 0xe5, // Lowercase A, ring\n    0xca: 0xd8, // Uppercase O, stroke\n    0xcb: 0xf8, // Lowercase o, strok\n    0xcc: 0x250f, // Box drawings heavy down and right\n    0xcd: 0x2513, // Box drawings heavy down and left\n    0xce: 0x2517, // Box drawings heavy up and right\n    0xcf: 0x251b // Box drawings heavy up and left\n};\n\n/**\n * Utils\n */\nvar getCharForByte = function getCharForByte(byte) {\n    var charCode = byte;\n    if (specialCea608CharsCodes.hasOwnProperty(byte)) {\n        charCode = specialCea608CharsCodes[byte];\n    }\n    return String.fromCharCode(charCode);\n};\n\nvar NR_ROWS = 15,\n    NR_COLS = 32;\n// Tables to look up row from PAC data\nvar rowsLowCh1 = { 0x11: 1, 0x12: 3, 0x15: 5, 0x16: 7, 0x17: 9, 0x10: 11, 0x13: 12, 0x14: 14 };\nvar rowsHighCh1 = { 0x11: 2, 0x12: 4, 0x15: 6, 0x16: 8, 0x17: 10, 0x13: 13, 0x14: 15 };\nvar rowsLowCh2 = { 0x19: 1, 0x1A: 3, 0x1D: 5, 0x1E: 7, 0x1F: 9, 0x18: 11, 0x1B: 12, 0x1C: 14 };\nvar rowsHighCh2 = { 0x19: 2, 0x1A: 4, 0x1D: 6, 0x1E: 8, 0x1F: 10, 0x1B: 13, 0x1C: 15 };\n\nvar backgroundColors = ['white', 'green', 'blue', 'cyan', 'red', 'yellow', 'magenta', 'black', 'transparent'];\n\n/**\n * Simple logger class to be able to write with time-stamps and filter on level.\n */\nvar logger = {\n    verboseFilter: { 'DATA': 3, 'DEBUG': 3, 'INFO': 2, 'WARNING': 2, 'TEXT': 1, 'ERROR': 0 },\n    time: null,\n    verboseLevel: 0, // Only write errors\n    setTime: function setTime(newTime) {\n        this.time = newTime;\n    },\n    log: function log(severity, msg) {\n        var minLevel = this.verboseFilter[severity];\n        if (this.verboseLevel >= minLevel) {\n            console.log(this.time + ' [' + severity + '] ' + msg);\n        }\n    }\n};\n\nvar numArrayToHexArray = function numArrayToHexArray(numArray) {\n    var hexArray = [];\n    for (var j = 0; j < numArray.length; j++) {\n        hexArray.push(numArray[j].toString(16));\n    }\n    return hexArray;\n};\n\nvar PenState = function () {\n    function PenState(foreground, underline, italics, background, flash) {\n        _classCallCheck(this, PenState);\n\n        this.foreground = foreground || 'white';\n        this.underline = underline || false;\n        this.italics = italics || false;\n        this.background = background || 'black';\n        this.flash = flash || false;\n    }\n\n    _createClass(PenState, [{\n        key: 'reset',\n        value: function reset() {\n            this.foreground = 'white';\n            this.underline = false;\n            this.italics = false;\n            this.background = 'black';\n            this.flash = false;\n        }\n    }, {\n        key: 'setStyles',\n        value: function setStyles(styles) {\n            var attribs = ['foreground', 'underline', 'italics', 'background', 'flash'];\n            for (var i = 0; i < attribs.length; i++) {\n                var style = attribs[i];\n                if (styles.hasOwnProperty(style)) {\n                    this[style] = styles[style];\n                }\n            }\n        }\n    }, {\n        key: 'isDefault',\n        value: function isDefault() {\n            return this.foreground === 'white' && !this.underline && !this.italics && this.background === 'black' && !this.flash;\n        }\n    }, {\n        key: 'equals',\n        value: function equals(other) {\n            return this.foreground === other.foreground && this.underline === other.underline && this.italics === other.italics && this.background === other.background && this.flash === other.flash;\n        }\n    }, {\n        key: 'copy',\n        value: function copy(newPenState) {\n            this.foreground = newPenState.foreground;\n            this.underline = newPenState.underline;\n            this.italics = newPenState.italics;\n            this.background = newPenState.background;\n            this.flash = newPenState.flash;\n        }\n    }, {\n        key: 'toString',\n        value: function toString() {\n            return 'color=' + this.foreground + ', underline=' + this.underline + ', italics=' + this.italics + ', background=' + this.background + ', flash=' + this.flash;\n        }\n    }]);\n\n    return PenState;\n}();\n\n/**\n * Unicode character with styling and background.\n * @constructor\n */\n\n\nvar StyledUnicodeChar = function () {\n    function StyledUnicodeChar(uchar, foreground, underline, italics, background, flash) {\n        _classCallCheck(this, StyledUnicodeChar);\n\n        this.uchar = uchar || ' '; // unicode character\n        this.penState = new PenState(foreground, underline, italics, background, flash);\n    }\n\n    _createClass(StyledUnicodeChar, [{\n        key: 'reset',\n        value: function reset() {\n            this.uchar = ' ';\n            this.penState.reset();\n        }\n    }, {\n        key: 'setChar',\n        value: function setChar(uchar, newPenState) {\n            this.uchar = uchar;\n            this.penState.copy(newPenState);\n        }\n    }, {\n        key: 'setPenState',\n        value: function setPenState(newPenState) {\n            this.penState.copy(newPenState);\n        }\n    }, {\n        key: 'equals',\n        value: function equals(other) {\n            return this.uchar === other.uchar && this.penState.equals(other.penState);\n        }\n    }, {\n        key: 'copy',\n        value: function copy(newChar) {\n            this.uchar = newChar.uchar;\n            this.penState.copy(newChar.penState);\n        }\n    }, {\n        key: 'isEmpty',\n        value: function isEmpty() {\n            return this.uchar === ' ' && this.penState.isDefault();\n        }\n    }]);\n\n    return StyledUnicodeChar;\n}();\n\n/**\n * CEA-608 row consisting of NR_COLS instances of StyledUnicodeChar.\n * @constructor\n */\n\n\nvar Row = function () {\n    function Row() {\n        _classCallCheck(this, Row);\n\n        this.chars = [];\n        for (var i = 0; i < NR_COLS; i++) {\n            this.chars.push(new StyledUnicodeChar());\n        }\n        this.pos = 0;\n        this.currPenState = new PenState();\n    }\n\n    _createClass(Row, [{\n        key: 'equals',\n        value: function equals(other) {\n            var equal = true;\n            for (var i = 0; i < NR_COLS; i++) {\n                if (!this.chars[i].equals(other.chars[i])) {\n                    equal = false;\n                    break;\n                }\n            }\n            return equal;\n        }\n    }, {\n        key: 'copy',\n        value: function copy(other) {\n            for (var i = 0; i < NR_COLS; i++) {\n                this.chars[i].copy(other.chars[i]);\n            }\n        }\n    }, {\n        key: 'isEmpty',\n        value: function isEmpty() {\n            var empty = true;\n            for (var i = 0; i < NR_COLS; i++) {\n                if (!this.chars[i].isEmpty()) {\n                    empty = false;\n                    break;\n                }\n            }\n            return empty;\n        }\n\n        /**\n         *  Set the cursor to a valid column.\n         */\n\n    }, {\n        key: 'setCursor',\n        value: function setCursor(absPos) {\n            if (this.pos !== absPos) {\n                this.pos = absPos;\n            }\n            if (this.pos < 0) {\n                logger.log('ERROR', 'Negative cursor position ' + this.pos);\n                this.pos = 0;\n            } else if (this.pos > NR_COLS) {\n                logger.log('ERROR', 'Too large cursor position ' + this.pos);\n                this.pos = NR_COLS;\n            }\n        }\n\n        /**\n         * Move the cursor relative to current position.\n         */\n\n    }, {\n        key: 'moveCursor',\n        value: function moveCursor(relPos) {\n            var newPos = this.pos + relPos;\n            if (relPos > 1) {\n                for (var i = this.pos + 1; i < newPos + 1; i++) {\n                    this.chars[i].setPenState(this.currPenState);\n                }\n            }\n            this.setCursor(newPos);\n        }\n\n        /**\n         * Backspace, move one step back and clear character.\n         */\n\n    }, {\n        key: 'backSpace',\n        value: function backSpace() {\n            this.moveCursor(-1);\n            this.chars[this.pos].setChar(' ', this.currPenState);\n        }\n    }, {\n        key: 'insertChar',\n        value: function insertChar(byte) {\n            if (byte >= 0x90) {\n                //Extended char\n                this.backSpace();\n            }\n            var char = getCharForByte(byte);\n            if (this.pos >= NR_COLS) {\n                logger.log('ERROR', 'Cannot insert ' + byte.toString(16) + ' (' + char + ') at position ' + this.pos + '. Skipping it!');\n                return;\n            }\n            this.chars[this.pos].setChar(char, this.currPenState);\n            this.moveCursor(1);\n        }\n    }, {\n        key: 'clearFromPos',\n        value: function clearFromPos(startPos) {\n            var i;\n            for (i = startPos; i < NR_COLS; i++) {\n                this.chars[i].reset();\n            }\n        }\n    }, {\n        key: 'clear',\n        value: function clear() {\n            this.clearFromPos(0);\n            this.pos = 0;\n            this.currPenState.reset();\n        }\n    }, {\n        key: 'clearToEndOfRow',\n        value: function clearToEndOfRow() {\n            this.clearFromPos(this.pos);\n        }\n    }, {\n        key: 'getTextString',\n        value: function getTextString() {\n            var chars = [];\n            var empty = true;\n            for (var i = 0; i < NR_COLS; i++) {\n                var char = this.chars[i].uchar;\n                if (char !== ' ') {\n                    empty = false;\n                }\n                chars.push(char);\n            }\n            if (empty) {\n                return '';\n            } else {\n                return chars.join('');\n            }\n        }\n    }, {\n        key: 'setPenStyles',\n        value: function setPenStyles(styles) {\n            this.currPenState.setStyles(styles);\n            var currChar = this.chars[this.pos];\n            currChar.setPenState(this.currPenState);\n        }\n    }]);\n\n    return Row;\n}();\n\n/**\n * Keep a CEA-608 screen of 32x15 styled characters\n * @constructor\n*/\n\n\nvar CaptionScreen = function () {\n    function CaptionScreen() {\n        _classCallCheck(this, CaptionScreen);\n\n        this.rows = [];\n        for (var i = 0; i < NR_ROWS; i++) {\n            this.rows.push(new Row()); // Note that we use zero-based numbering (0-14)\n        }\n        this.currRow = NR_ROWS - 1;\n        this.nrRollUpRows = null;\n        this.reset();\n    }\n\n    _createClass(CaptionScreen, [{\n        key: 'reset',\n        value: function reset() {\n            for (var i = 0; i < NR_ROWS; i++) {\n                this.rows[i].clear();\n            }\n            this.currRow = NR_ROWS - 1;\n        }\n    }, {\n        key: 'equals',\n        value: function equals(other) {\n            var equal = true;\n            for (var i = 0; i < NR_ROWS; i++) {\n                if (!this.rows[i].equals(other.rows[i])) {\n                    equal = false;\n                    break;\n                }\n            }\n            return equal;\n        }\n    }, {\n        key: 'copy',\n        value: function copy(other) {\n            for (var i = 0; i < NR_ROWS; i++) {\n                this.rows[i].copy(other.rows[i]);\n            }\n        }\n    }, {\n        key: 'isEmpty',\n        value: function isEmpty() {\n            var empty = true;\n            for (var i = 0; i < NR_ROWS; i++) {\n                if (!this.rows[i].isEmpty()) {\n                    empty = false;\n                    break;\n                }\n            }\n            return empty;\n        }\n    }, {\n        key: 'backSpace',\n        value: function backSpace() {\n            var row = this.rows[this.currRow];\n            row.backSpace();\n        }\n    }, {\n        key: 'clearToEndOfRow',\n        value: function clearToEndOfRow() {\n            var row = this.rows[this.currRow];\n            row.clearToEndOfRow();\n        }\n\n        /**\n         * Insert a character (without styling) in the current row.\n         */\n\n    }, {\n        key: 'insertChar',\n        value: function insertChar(char) {\n            var row = this.rows[this.currRow];\n            row.insertChar(char);\n        }\n    }, {\n        key: 'setPen',\n        value: function setPen(styles) {\n            var row = this.rows[this.currRow];\n            row.setPenStyles(styles);\n        }\n    }, {\n        key: 'moveCursor',\n        value: function moveCursor(relPos) {\n            var row = this.rows[this.currRow];\n            row.moveCursor(relPos);\n        }\n    }, {\n        key: 'setCursor',\n        value: function setCursor(absPos) {\n            logger.log('INFO', 'setCursor: ' + absPos);\n            var row = this.rows[this.currRow];\n            row.setCursor(absPos);\n        }\n    }, {\n        key: 'setPAC',\n        value: function setPAC(pacData, lastOutputScreen) {\n            logger.log('INFO', 'pacData = ' + JSON.stringify(pacData));\n            var newRow = pacData.row - 1;\n            if (this.nrRollUpRows && newRow < this.nrRollUpRows - 1) {\n                newRow = this.nrRollUpRows - 1;\n            }\n\n            //Make sure this only affects Roll-up Captions by checking this.nrRollUpRows\n            if (this.nrRollUpRows && this.currRow !== newRow) {\n                //clear all rows first\n                for (var i = 0; i < NR_ROWS; i++) {\n                    this.rows[i].clear();\n                }\n\n                //Copy this.nrRollUpRows rows from lastOutputScreen and place it in the newRow location\n                //topRowIndex - the start of rows to copy (inclusive index)\n                var topRowIndex = this.currRow + 1 - this.nrRollUpRows;\n                //We only copy if the last position was already shown.\n                //We use the cueStartTime value to check this.\n                var prevLineTime = lastOutputScreen.rows[topRowIndex].cueStartTime;\n                if (prevLineTime && prevLineTime < logger.time) {\n                    for (i = 0; i < this.nrRollUpRows; i++) {\n                        this.rows[newRow - this.nrRollUpRows + i + 1].copy(lastOutputScreen.rows[topRowIndex + i]);\n                    }\n                }\n            }\n\n            this.currRow = newRow;\n            var row = this.rows[this.currRow];\n            if (pacData.indent !== null) {\n                var indent = pacData.indent;\n                var prevPos = Math.max(indent - 1, 0);\n                row.setCursor(pacData.indent);\n                pacData.color = row.chars[prevPos].penState.foreground;\n            }\n            var styles = { foreground: pacData.color, underline: pacData.underline, italics: pacData.italics, background: 'black', flash: false };\n            this.setPen(styles);\n        }\n\n        /**\n         * Set background/extra foreground, but first do back_space, and then insert space (backwards compatibility).\n         */\n\n    }, {\n        key: 'setBkgData',\n        value: function setBkgData(bkgData) {\n\n            logger.log('INFO', 'bkgData = ' + JSON.stringify(bkgData));\n            this.backSpace();\n            this.setPen(bkgData);\n            this.insertChar(0x20); //Space\n        }\n    }, {\n        key: 'setRollUpRows',\n        value: function setRollUpRows(nrRows) {\n            this.nrRollUpRows = nrRows;\n        }\n    }, {\n        key: 'rollUp',\n        value: function rollUp() {\n            if (this.nrRollUpRows === null) {\n                logger.log('DEBUG', 'roll_up but nrRollUpRows not set yet');\n                return; //Not properly setup\n            }\n            logger.log('TEXT', this.getDisplayText());\n            var topRowIndex = this.currRow + 1 - this.nrRollUpRows;\n            var topRow = this.rows.splice(topRowIndex, 1)[0];\n            topRow.clear();\n            this.rows.splice(this.currRow, 0, topRow);\n            logger.log('INFO', 'Rolling up');\n            //logger.log('TEXT', this.get_display_text())\n        }\n\n        /**\n         * Get all non-empty rows with as unicode text.\n         */\n\n    }, {\n        key: 'getDisplayText',\n        value: function getDisplayText(asOneRow) {\n            asOneRow = asOneRow || false;\n            var displayText = [];\n            var text = '';\n            var rowNr = -1;\n            for (var i = 0; i < NR_ROWS; i++) {\n                var rowText = this.rows[i].getTextString();\n                if (rowText) {\n                    rowNr = i + 1;\n                    if (asOneRow) {\n                        displayText.push('Row ' + rowNr + ': \\'' + rowText + '\\'');\n                    } else {\n                        displayText.push(rowText.trim());\n                    }\n                }\n            }\n            if (displayText.length > 0) {\n                if (asOneRow) {\n                    text = '[' + displayText.join(' | ') + ']';\n                } else {\n                    text = displayText.join('\\n');\n                }\n            }\n            return text;\n        }\n    }, {\n        key: 'getTextAndFormat',\n        value: function getTextAndFormat() {\n            return this.rows;\n        }\n    }]);\n\n    return CaptionScreen;\n}();\n\n//var modes = ['MODE_ROLL-UP', 'MODE_POP-ON', 'MODE_PAINT-ON', 'MODE_TEXT'];\n\nvar Cea608Channel = function () {\n    function Cea608Channel(channelNumber, outputFilter) {\n        _classCallCheck(this, Cea608Channel);\n\n        this.chNr = channelNumber;\n        this.outputFilter = outputFilter;\n        this.mode = null;\n        this.verbose = 0;\n        this.displayedMemory = new CaptionScreen();\n        this.nonDisplayedMemory = new CaptionScreen();\n        this.lastOutputScreen = new CaptionScreen();\n        this.currRollUpRow = this.displayedMemory.rows[NR_ROWS - 1];\n        this.writeScreen = this.displayedMemory;\n        this.mode = null;\n        this.cueStartTime = null; // Keeps track of where a cue started.\n    }\n\n    _createClass(Cea608Channel, [{\n        key: 'reset',\n        value: function reset() {\n            this.mode = null;\n            this.displayedMemory.reset();\n            this.nonDisplayedMemory.reset();\n            this.lastOutputScreen.reset();\n            this.currRollUpRow = this.displayedMemory.rows[NR_ROWS - 1];\n            this.writeScreen = this.displayedMemory;\n            this.mode = null;\n            this.cueStartTime = null;\n            this.lastCueEndTime = null;\n        }\n    }, {\n        key: 'getHandler',\n        value: function getHandler() {\n            return this.outputFilter;\n        }\n    }, {\n        key: 'setHandler',\n        value: function setHandler(newHandler) {\n            this.outputFilter = newHandler;\n        }\n    }, {\n        key: 'setPAC',\n        value: function setPAC(pacData) {\n            this.writeScreen.setPAC(pacData, this.lastOutputScreen);\n        }\n    }, {\n        key: 'setBkgData',\n        value: function setBkgData(bkgData) {\n            this.writeScreen.setBkgData(bkgData);\n        }\n    }, {\n        key: 'setMode',\n        value: function setMode(newMode) {\n            if (newMode === this.mode) {\n                return;\n            }\n            this.mode = newMode;\n            logger.log('INFO', 'MODE=' + newMode);\n            if (this.mode === 'MODE_POP-ON') {\n                this.writeScreen = this.nonDisplayedMemory;\n            } else {\n                this.writeScreen = this.displayedMemory;\n                this.writeScreen.reset();\n                this.lastOutputScreen.reset();\n            }\n            if (this.mode !== 'MODE_ROLL-UP') {\n                this.displayedMemory.nrRollUpRows = null;\n                this.nonDisplayedMemory.nrRollUpRows = null;\n            }\n            this.mode = newMode;\n        }\n    }, {\n        key: 'insertChars',\n        value: function insertChars(chars) {\n            for (var i = 0; i < chars.length; i++) {\n                this.writeScreen.insertChar(chars[i]);\n            }\n            var screen = this.writeScreen === this.displayedMemory ? 'DISP' : 'NON_DISP';\n            logger.log('INFO', screen + ': ' + this.writeScreen.getDisplayText(true));\n            if (this.mode === 'MODE_PAINT-ON' || this.mode === 'MODE_ROLL-UP') {\n                logger.log('TEXT', 'DISPLAYED: ' + this.displayedMemory.getDisplayText(true));\n                this.outputDataUpdate();\n            }\n        }\n    }, {\n        key: 'ccRCL',\n        value: function ccRCL() {\n            // Resume Caption Loading (switch mode to Pop On)\n            logger.log('INFO', 'RCL - Resume Caption Loading');\n            this.setMode('MODE_POP-ON');\n        }\n    }, {\n        key: 'ccBS',\n        value: function ccBS() {\n            // BackSpace\n            logger.log('INFO', 'BS - BackSpace');\n            if (this.mode === 'MODE_TEXT') {\n                return;\n            }\n            this.writeScreen.backSpace();\n            if (this.writeScreen === this.displayedMemory) {\n                this.outputDataUpdate();\n            }\n        }\n    }, {\n        key: 'ccAOF',\n        value: function ccAOF() {\n            // Reserved (formerly Alarm Off)\n            return;\n        }\n    }, {\n        key: 'ccAON',\n        value: function ccAON() {\n            // Reserved (formerly Alarm On)\n            return;\n        }\n    }, {\n        key: 'ccDER',\n        value: function ccDER() {\n            // Delete to End of Row\n            logger.log('INFO', 'DER- Delete to End of Row');\n            this.writeScreen.clearToEndOfRow();\n            this.outputDataUpdate();\n        }\n    }, {\n        key: 'ccRU',\n        value: function ccRU(nrRows) {\n            //Roll-Up Captions-2,3,or 4 Rows\n            logger.log('INFO', 'RU(' + nrRows + ') - Roll Up');\n            this.writeScreen = this.displayedMemory;\n            this.setMode('MODE_ROLL-UP');\n            this.writeScreen.setRollUpRows(nrRows);\n        }\n    }, {\n        key: 'ccFON',\n        value: function ccFON() {\n            //Flash On\n            logger.log('INFO', 'FON - Flash On');\n            this.writeScreen.setPen({ flash: true });\n        }\n    }, {\n        key: 'ccRDC',\n        value: function ccRDC() {\n            // Resume Direct Captioning (switch mode to PaintOn)\n            logger.log('INFO', 'RDC - Resume Direct Captioning');\n            this.setMode('MODE_PAINT-ON');\n        }\n    }, {\n        key: 'ccTR',\n        value: function ccTR() {\n            // Text Restart in text mode (not supported, however)\n            logger.log('INFO', 'TR');\n            this.setMode('MODE_TEXT');\n        }\n    }, {\n        key: 'ccRTD',\n        value: function ccRTD() {\n            // Resume Text Display in Text mode (not supported, however)\n            logger.log('INFO', 'RTD');\n            this.setMode('MODE_TEXT');\n        }\n    }, {\n        key: 'ccEDM',\n        value: function ccEDM() {\n            // Erase Displayed Memory\n            logger.log('INFO', 'EDM - Erase Displayed Memory');\n            this.displayedMemory.reset();\n            this.outputDataUpdate();\n        }\n    }, {\n        key: 'ccCR',\n        value: function ccCR() {\n            // Carriage Return\n            logger.log('CR - Carriage Return');\n            this.writeScreen.rollUp();\n            this.outputDataUpdate();\n        }\n    }, {\n        key: 'ccENM',\n        value: function ccENM() {\n            //Erase Non-Displayed Memory\n            logger.log('INFO', 'ENM - Erase Non-displayed Memory');\n            this.nonDisplayedMemory.reset();\n        }\n    }, {\n        key: 'ccEOC',\n        value: function ccEOC() {\n            //End of Caption (Flip Memories)\n            logger.log('INFO', 'EOC - End Of Caption');\n            if (this.mode === 'MODE_POP-ON') {\n                var tmp = this.displayedMemory;\n                this.displayedMemory = this.nonDisplayedMemory;\n                this.nonDisplayedMemory = tmp;\n                this.writeScreen = this.nonDisplayedMemory;\n                logger.log('TEXT', 'DISP: ' + this.displayedMemory.getDisplayText());\n            }\n            this.outputDataUpdate();\n        }\n    }, {\n        key: 'ccTO',\n        value: function ccTO(nrCols) {\n            // Tab Offset 1,2, or 3 columns\n            logger.log('INFO', 'TO(' + nrCols + ') - Tab Offset');\n            this.writeScreen.moveCursor(nrCols);\n        }\n    }, {\n        key: 'ccMIDROW',\n        value: function ccMIDROW(secondByte) {\n            // Parse MIDROW command\n            var styles = { flash: false };\n            styles.underline = secondByte % 2 === 1;\n            styles.italics = secondByte >= 0x2e;\n            if (!styles.italics) {\n                var colorIndex = Math.floor(secondByte / 2) - 0x10;\n                var colors = ['white', 'green', 'blue', 'cyan', 'red', 'yellow', 'magenta'];\n                styles.foreground = colors[colorIndex];\n            } else {\n                styles.foreground = 'white';\n            }\n            logger.log('INFO', 'MIDROW: ' + JSON.stringify(styles));\n            this.writeScreen.setPen(styles);\n        }\n    }, {\n        key: 'outputDataUpdate',\n        value: function outputDataUpdate() {\n            var t = logger.time;\n            if (t === null) {\n                return;\n            }\n            if (this.outputFilter) {\n                if (this.outputFilter.updateData) {\n                    this.outputFilter.updateData(t, this.displayedMemory);\n                }\n                if (this.cueStartTime === null && !this.displayedMemory.isEmpty()) {\n                    // Start of a new cue\n                    this.cueStartTime = t;\n                } else {\n                    if (!this.displayedMemory.equals(this.lastOutputScreen)) {\n                        if (this.outputFilter.newCue) {\n                            this.outputFilter.newCue(this.cueStartTime, t, this.lastOutputScreen);\n                        }\n                        this.cueStartTime = this.displayedMemory.isEmpty() ? null : t;\n                    }\n                }\n                this.lastOutputScreen.copy(this.displayedMemory);\n            }\n        }\n    }, {\n        key: 'cueSplitAtTime',\n        value: function cueSplitAtTime(t) {\n            if (this.outputFilter) {\n                if (!this.displayedMemory.isEmpty()) {\n                    if (this.outputFilter.newCue) {\n                        this.outputFilter.newCue(this.cueStartTime, t, this.displayedMemory);\n                    }\n                    this.cueStartTime = t;\n                }\n            }\n        }\n    }]);\n\n    return Cea608Channel;\n}();\n\nvar Cea608Parser = function () {\n    function Cea608Parser(field, out1, out2) {\n        _classCallCheck(this, Cea608Parser);\n\n        this.field = field || 1;\n        this.outputs = [out1, out2];\n        this.channels = [new Cea608Channel(1, out1), new Cea608Channel(2, out2)];\n        this.currChNr = -1; // Will be 1 or 2\n        this.lastCmdA = null; // First byte of last command\n        this.lastCmdB = null; // Second byte of last command\n        this.bufferedData = [];\n        this.startTime = null;\n        this.lastTime = null;\n        this.dataCounters = { 'padding': 0, 'char': 0, 'cmd': 0, 'other': 0 };\n    }\n\n    _createClass(Cea608Parser, [{\n        key: 'getHandler',\n        value: function getHandler(index) {\n            return this.channels[index].getHandler();\n        }\n    }, {\n        key: 'setHandler',\n        value: function setHandler(index, newHandler) {\n            this.channels[index].setHandler(newHandler);\n        }\n\n        /**\n         * Add data for time t in forms of list of bytes (unsigned ints). The bytes are treated as pairs.\n         */\n\n    }, {\n        key: 'addData',\n        value: function addData(t, byteList) {\n            var cmdFound,\n                a,\n                b,\n                charsFound = false;\n\n            this.lastTime = t;\n            logger.setTime(t);\n\n            for (var i = 0; i < byteList.length; i += 2) {\n                a = byteList[i] & 0x7f;\n                b = byteList[i + 1] & 0x7f;\n                if (a === 0 && b === 0) {\n                    this.dataCounters.padding += 2;\n                    continue;\n                } else {\n                    logger.log('DATA', '[' + numArrayToHexArray([byteList[i], byteList[i + 1]]) + '] -> (' + numArrayToHexArray([a, b]) + ')');\n                }\n                cmdFound = this.parseCmd(a, b);\n                if (!cmdFound) {\n                    cmdFound = this.parseMidrow(a, b);\n                }\n                if (!cmdFound) {\n                    cmdFound = this.parsePAC(a, b);\n                }\n                if (!cmdFound) {\n                    cmdFound = this.parseBackgroundAttributes(a, b);\n                }\n                if (!cmdFound) {\n                    charsFound = this.parseChars(a, b);\n                    if (charsFound) {\n                        if (this.currChNr && this.currChNr >= 0) {\n                            var channel = this.channels[this.currChNr - 1];\n                            channel.insertChars(charsFound);\n                        } else {\n                            logger.log('WARNING', 'No channel found yet. TEXT-MODE?');\n                        }\n                    }\n                }\n                if (cmdFound) {\n                    this.dataCounters.cmd += 2;\n                } else if (charsFound) {\n                    this.dataCounters.char += 2;\n                } else {\n                    this.dataCounters.other += 2;\n                    logger.log('WARNING', 'Couldn\\'t parse cleaned data ' + numArrayToHexArray([a, b]) + ' orig: ' + numArrayToHexArray([byteList[i], byteList[i + 1]]));\n                }\n            }\n        }\n\n        /**\n         * Parse Command.\n         * @returns {Boolean} Tells if a command was found\n         */\n\n    }, {\n        key: 'parseCmd',\n        value: function parseCmd(a, b) {\n            var chNr = null;\n\n            var cond1 = (a === 0x14 || a === 0x1C) && 0x20 <= b && b <= 0x2F;\n            var cond2 = (a === 0x17 || a === 0x1F) && 0x21 <= b && b <= 0x23;\n            if (!(cond1 || cond2)) {\n                return false;\n            }\n\n            if (a === this.lastCmdA && b === this.lastCmdB) {\n                this.lastCmdA = null;\n                this.lastCmdB = null; // Repeated commands are dropped (once)\n                logger.log('DEBUG', 'Repeated command (' + numArrayToHexArray([a, b]) + ') is dropped');\n                return true;\n            }\n\n            if (a === 0x14 || a === 0x17) {\n                chNr = 1;\n            } else {\n                chNr = 2; // (a === 0x1C || a=== 0x1f)\n            }\n\n            var channel = this.channels[chNr - 1];\n\n            if (a === 0x14 || a === 0x1C) {\n                if (b === 0x20) {\n                    channel.ccRCL();\n                } else if (b === 0x21) {\n                    channel.ccBS();\n                } else if (b === 0x22) {\n                    channel.ccAOF();\n                } else if (b === 0x23) {\n                    channel.ccAON();\n                } else if (b === 0x24) {\n                    channel.ccDER();\n                } else if (b === 0x25) {\n                    channel.ccRU(2);\n                } else if (b === 0x26) {\n                    channel.ccRU(3);\n                } else if (b === 0x27) {\n                    channel.ccRU(4);\n                } else if (b === 0x28) {\n                    channel.ccFON();\n                } else if (b === 0x29) {\n                    channel.ccRDC();\n                } else if (b === 0x2A) {\n                    channel.ccTR();\n                } else if (b === 0x2B) {\n                    channel.ccRTD();\n                } else if (b === 0x2C) {\n                    channel.ccEDM();\n                } else if (b === 0x2D) {\n                    channel.ccCR();\n                } else if (b === 0x2E) {\n                    channel.ccENM();\n                } else if (b === 0x2F) {\n                    channel.ccEOC();\n                }\n            } else {\n                //a == 0x17 || a == 0x1F\n                channel.ccTO(b - 0x20);\n            }\n            this.lastCmdA = a;\n            this.lastCmdB = b;\n            this.currChNr = chNr;\n            return true;\n        }\n\n        /**\n         * Parse midrow styling command\n         * @returns {Boolean}\n         */\n\n    }, {\n        key: 'parseMidrow',\n        value: function parseMidrow(a, b) {\n            var chNr = null;\n\n            if ((a === 0x11 || a === 0x19) && 0x20 <= b && b <= 0x2f) {\n                if (a === 0x11) {\n                    chNr = 1;\n                } else {\n                    chNr = 2;\n                }\n                if (chNr !== this.currChNr) {\n                    logger.log('ERROR', 'Mismatch channel in midrow parsing');\n                    return false;\n                }\n                var channel = this.channels[chNr - 1];\n                channel.ccMIDROW(b);\n                logger.log('DEBUG', 'MIDROW (' + numArrayToHexArray([a, b]) + ')');\n                return true;\n            }\n            return false;\n        }\n        /**\n         * Parse Preable Access Codes (Table 53).\n         * @returns {Boolean} Tells if PAC found\n         */\n\n    }, {\n        key: 'parsePAC',\n        value: function parsePAC(a, b) {\n\n            var chNr = null;\n            var row = null;\n\n            var case1 = (0x11 <= a && a <= 0x17 || 0x19 <= a && a <= 0x1F) && 0x40 <= b && b <= 0x7F;\n            var case2 = (a === 0x10 || a === 0x18) && 0x40 <= b && b <= 0x5F;\n            if (!(case1 || case2)) {\n                return false;\n            }\n\n            if (a === this.lastCmdA && b === this.lastCmdB) {\n                this.lastCmdA = null;\n                this.lastCmdB = null;\n                return true; // Repeated commands are dropped (once)\n            }\n\n            chNr = a <= 0x17 ? 1 : 2;\n\n            if (0x40 <= b && b <= 0x5F) {\n                row = chNr === 1 ? rowsLowCh1[a] : rowsLowCh2[a];\n            } else {\n                // 0x60 <= b <= 0x7F\n                row = chNr === 1 ? rowsHighCh1[a] : rowsHighCh2[a];\n            }\n            var pacData = this.interpretPAC(row, b);\n            var channel = this.channels[chNr - 1];\n            channel.setPAC(pacData);\n            this.lastCmdA = a;\n            this.lastCmdB = b;\n            this.currChNr = chNr;\n            return true;\n        }\n\n        /**\n         * Interpret the second byte of the pac, and return the information.\n         * @returns {Object} pacData with style parameters.\n         */\n\n    }, {\n        key: 'interpretPAC',\n        value: function interpretPAC(row, byte) {\n            var pacIndex = byte;\n            var pacData = { color: null, italics: false, indent: null, underline: false, row: row };\n\n            if (byte > 0x5F) {\n                pacIndex = byte - 0x60;\n            } else {\n                pacIndex = byte - 0x40;\n            }\n            pacData.underline = (pacIndex & 1) === 1;\n            if (pacIndex <= 0xd) {\n                pacData.color = ['white', 'green', 'blue', 'cyan', 'red', 'yellow', 'magenta', 'white'][Math.floor(pacIndex / 2)];\n            } else if (pacIndex <= 0xf) {\n                pacData.italics = true;\n                pacData.color = 'white';\n            } else {\n                pacData.indent = Math.floor((pacIndex - 0x10) / 2) * 4;\n            }\n            return pacData; // Note that row has zero offset. The spec uses 1.\n        }\n\n        /**\n         * Parse characters.\n         * @returns An array with 1 to 2 codes corresponding to chars, if found. null otherwise.\n         */\n\n    }, {\n        key: 'parseChars',\n        value: function parseChars(a, b) {\n\n            var channelNr = null,\n                charCodes = null,\n                charCode1 = null;\n\n            if (a >= 0x19) {\n                channelNr = 2;\n                charCode1 = a - 8;\n            } else {\n                channelNr = 1;\n                charCode1 = a;\n            }\n            if (0x11 <= charCode1 && charCode1 <= 0x13) {\n                // Special character\n                var oneCode = b;\n                if (charCode1 === 0x11) {\n                    oneCode = b + 0x50;\n                } else if (charCode1 === 0x12) {\n                    oneCode = b + 0x70;\n                } else {\n                    oneCode = b + 0x90;\n                }\n                logger.log('INFO', 'Special char \\'' + getCharForByte(oneCode) + '\\' in channel ' + channelNr);\n                charCodes = [oneCode];\n            } else if (0x20 <= a && a <= 0x7f) {\n                charCodes = b === 0 ? [a] : [a, b];\n            }\n            if (charCodes) {\n                var hexCodes = numArrayToHexArray(charCodes);\n                logger.log('DEBUG', 'Char codes =  ' + hexCodes.join(','));\n                this.lastCmdA = null;\n                this.lastCmdB = null;\n            }\n            return charCodes;\n        }\n\n        /**\n        * Parse extended background attributes as well as new foreground color black.\n        * @returns{Boolean} Tells if background attributes are found\n        */\n\n    }, {\n        key: 'parseBackgroundAttributes',\n        value: function parseBackgroundAttributes(a, b) {\n            var bkgData, index, chNr, channel;\n\n            var case1 = (a === 0x10 || a === 0x18) && 0x20 <= b && b <= 0x2f;\n            var case2 = (a === 0x17 || a === 0x1f) && 0x2d <= b && b <= 0x2f;\n            if (!(case1 || case2)) {\n                return false;\n            }\n            bkgData = {};\n            if (a === 0x10 || a === 0x18) {\n                index = Math.floor((b - 0x20) / 2);\n                bkgData.background = backgroundColors[index];\n                if (b % 2 === 1) {\n                    bkgData.background = bkgData.background + '_semi';\n                }\n            } else if (b === 0x2d) {\n                bkgData.background = 'transparent';\n            } else {\n                bkgData.foreground = 'black';\n                if (b === 0x2f) {\n                    bkgData.underline = true;\n                }\n            }\n            chNr = a < 0x18 ? 1 : 2;\n            channel = this.channels[chNr - 1];\n            channel.setBkgData(bkgData);\n            this.lastCmdA = null;\n            this.lastCmdB = null;\n            return true;\n        }\n\n        /**\n         * Reset state of parser and its channels.\n         */\n\n    }, {\n        key: 'reset',\n        value: function reset() {\n            for (var i = 0; i < this.channels.length; i++) {\n                if (this.channels[i]) {\n                    this.channels[i].reset();\n                }\n            }\n            this.lastCmdA = null;\n            this.lastCmdB = null;\n        }\n\n        /**\n         * Trigger the generation of a cue, and the start of a new one if displayScreens are not empty.\n         */\n\n    }, {\n        key: 'cueSplitAtTime',\n        value: function cueSplitAtTime(t) {\n            for (var i = 0; i < this.channels.length; i++) {\n                if (this.channels[i]) {\n                    this.channels[i].cueSplitAtTime(t);\n                }\n            }\n        }\n    }]);\n\n    return Cea608Parser;\n}();\n\nexports.default = Cea608Parser;\n\n},{}],43:[function(_dereq_,module,exports){\n'use strict';\n\nvar Cues = {\n\n  newCue: function newCue(track, startTime, endTime, captionScreen) {\n    var row;\n    var cue;\n    var indenting;\n    var indent;\n    var text;\n    var VTTCue = window.VTTCue || window.TextTrackCue;\n\n    for (var r = 0; r < captionScreen.rows.length; r++) {\n      row = captionScreen.rows[r];\n      indenting = true;\n      indent = 0;\n      text = '';\n\n      if (!row.isEmpty()) {\n        for (var c = 0; c < row.chars.length; c++) {\n          if (row.chars[c].uchar.match(/\\s/) && indenting) {\n            indent++;\n          } else {\n            text += row.chars[c].uchar;\n            indenting = false;\n          }\n        }\n        //To be used for cleaning-up orphaned roll-up captions\n        row.cueStartTime = startTime;\n        cue = new VTTCue(startTime, endTime, text.trim());\n\n        if (indent >= 16) {\n          indent--;\n        } else {\n          indent++;\n        }\n\n        // VTTCue.line get's flakey when using controls, so let's now include line 13&14\n        // also, drop line 1 since it's to close to the top\n        if (navigator.userAgent.match(/Firefox\\//)) {\n          cue.line = r + 1;\n        } else {\n          cue.line = r > 7 ? r - 2 : r + 1;\n        }\n        cue.align = 'left';\n        // Clamp the position between 0 and 100 - if out of these bounds, Firefox throws an exception and captions break\n        cue.position = Math.max(0, Math.min(100, 100 * (indent / 32) + (navigator.userAgent.match(/Firefox\\//) ? 50 : 0)));\n        track.addCue(cue);\n      }\n    }\n  }\n\n};\n\nmodule.exports = Cues;\n\n},{}],44:[function(_dereq_,module,exports){\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n/*\n * compute an Exponential Weighted moving average\n * - https://en.wikipedia.org/wiki/Moving_average#Exponential_moving_average\n *  - heavily inspired from shaka-player\n */\n\nvar EWMA = function () {\n\n  //  About half of the estimated value will be from the last |halfLife| samples by weight.\n  function EWMA(halfLife) {\n    _classCallCheck(this, EWMA);\n\n    // Larger values of alpha expire historical data more slowly.\n    this.alpha_ = halfLife ? Math.exp(Math.log(0.5) / halfLife) : 0;\n    this.estimate_ = 0;\n    this.totalWeight_ = 0;\n  }\n\n  _createClass(EWMA, [{\n    key: \"sample\",\n    value: function sample(weight, value) {\n      var adjAlpha = Math.pow(this.alpha_, weight);\n      this.estimate_ = value * (1 - adjAlpha) + adjAlpha * this.estimate_;\n      this.totalWeight_ += weight;\n    }\n  }, {\n    key: \"getTotalWeight\",\n    value: function getTotalWeight() {\n      return this.totalWeight_;\n    }\n  }, {\n    key: \"getEstimate\",\n    value: function getEstimate() {\n      if (this.alpha_) {\n        var zeroFactor = 1 - Math.pow(this.alpha_, this.totalWeight_);\n        return this.estimate_ / zeroFactor;\n      } else {\n        return this.estimate_;\n      }\n    }\n  }]);\n\n  return EWMA;\n}();\n\nexports.default = EWMA;\n\n},{}],45:[function(_dereq_,module,exports){\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nfunction noop() {}\n\nvar fakeLogger = {\n  trace: noop,\n  debug: noop,\n  log: noop,\n  warn: noop,\n  info: noop,\n  error: noop\n};\n\nvar exportedLogger = fakeLogger;\n\n/*globals self: false */\n\n//let lastCallTime;\n// function formatMsgWithTimeInfo(type, msg) {\n//   const now = Date.now();\n//   const diff = lastCallTime ? '+' + (now - lastCallTime) : '0';\n//   lastCallTime = now;\n//   msg = (new Date(now)).toISOString() + ' | [' +  type + '] > ' + msg + ' ( ' + diff + ' ms )';\n//   return msg;\n// }\n\nfunction formatMsg(type, msg) {\n  msg = '[' + type + '] > ' + msg;\n  return msg;\n}\n\nfunction consolePrintFn(type) {\n  var func = self.console[type];\n  if (func) {\n    return function () {\n      for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n\n      if (args[0]) {\n        args[0] = formatMsg(type, args[0]);\n      }\n      func.apply(self.console, args);\n    };\n  }\n  return noop;\n}\n\nfunction exportLoggerFunctions(debugConfig) {\n  for (var _len2 = arguments.length, functions = Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {\n    functions[_key2 - 1] = arguments[_key2];\n  }\n\n  functions.forEach(function (type) {\n    exportedLogger[type] = debugConfig[type] ? debugConfig[type].bind(debugConfig) : consolePrintFn(type);\n  });\n}\n\nvar enableLogs = exports.enableLogs = function enableLogs(debugConfig) {\n  if (debugConfig === true || (typeof debugConfig === 'undefined' ? 'undefined' : _typeof(debugConfig)) === 'object') {\n    exportLoggerFunctions(debugConfig,\n    // Remove out from list here to hard-disable a log-level\n    //'trace',\n    'debug', 'log', 'info', 'warn', 'error');\n    // Some browsers don't allow to use bind on console object anyway\n    // fallback to default if needed\n    try {\n      exportedLogger.log();\n    } catch (e) {\n      exportedLogger = fakeLogger;\n    }\n  } else {\n    exportedLogger = fakeLogger;\n  }\n};\n\nvar logger = exports.logger = exportedLogger;\n\n},{}],46:[function(_dereq_,module,exports){\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n/**\n *  TimeRanges to string helper\n */\n\nvar TimeRanges = function () {\n  function TimeRanges() {\n    _classCallCheck(this, TimeRanges);\n  }\n\n  _createClass(TimeRanges, null, [{\n    key: 'toString',\n    value: function toString(r) {\n      var log = '',\n          len = r.length;\n      for (var i = 0; i < len; i++) {\n        log += '[' + r.start(i).toFixed(3) + ',' + r.end(i).toFixed(3) + ']';\n      }\n      return log;\n    }\n  }]);\n\n  return TimeRanges;\n}();\n\nexports.default = TimeRanges;\n\n},{}],47:[function(_dereq_,module,exports){\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }(); /**\nbased logger\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                     */\n\nvar _logger = _dereq_(45);\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar XhrLoader = function () {\n  function XhrLoader(config) {\n    _classCallCheck(this, XhrLoader);\n\n    if (config && config.xhrSetup) {\n      this.xhrSetup = config.xhrSetup;\n    }\n  }\n\n  _createClass(XhrLoader, [{\n    key: 'destroy',\n    value: function destroy() {\n      this.abort();\n      this.loader = null;\n    }\n  }, {\n    key: 'abort',\n    value: function abort() {\n      var loader = this.loader;\n      if (loader && loader.readyState !== 4) {\n        this.stats.aborted = true;\n        loader.abort();\n      }\n\n      window.clearTimeout(this.requestTimeout);\n      this.requestTimeout = null;\n      window.clearTimeout(this.retryTimeout);\n      this.retryTimeout = null;\n    }\n  }, {\n    key: 'load',\n    value: function load(context, config, callbacks) {\n      this.context = context;\n      this.config = config;\n      this.callbacks = callbacks;\n      this.stats = { trequest: performance.now(), retry: 0 };\n      this.retryDelay = config.retryDelay;\n      this.loadInternal();\n    }\n  }, {\n    key: 'loadInternal',\n    value: function loadInternal() {\n      var xhr,\n          context = this.context;\n\n      if (typeof XDomainRequest !== 'undefined') {\n        xhr = this.loader = new XDomainRequest();\n      } else {\n        xhr = this.loader = new XMLHttpRequest();\n      }\n\n      xhr.onreadystatechange = this.readystatechange.bind(this);\n      xhr.onprogress = this.loadprogress.bind(this);\n\n      xhr.open('GET', context.url, true);\n\n      if (context.rangeEnd) {\n        xhr.setRequestHeader('Range', 'bytes=' + context.rangeStart + '-' + (context.rangeEnd - 1));\n      }\n      xhr.responseType = context.responseType;\n      var stats = this.stats;\n      stats.tfirst = 0;\n      stats.loaded = 0;\n      if (this.xhrSetup) {\n        this.xhrSetup(xhr, context.url);\n      }\n      // setup timeout before we perform request\n      this.requestTimeout = window.setTimeout(this.loadtimeout.bind(this), this.config.timeout);\n      xhr.send();\n    }\n  }, {\n    key: 'readystatechange',\n    value: function readystatechange(event) {\n      var xhr = event.currentTarget,\n          readyState = xhr.readyState,\n          stats = this.stats,\n          context = this.context,\n          config = this.config;\n\n      // don't proceed if xhr has been aborted\n      if (stats.aborted) {\n        return;\n      }\n\n      // >= HEADERS_RECEIVED\n      if (readyState >= 2) {\n        // clear xhr timeout and rearm it if readyState less than 4\n        window.clearTimeout(this.requestTimeout);\n        if (stats.tfirst === 0) {\n          stats.tfirst = Math.max(performance.now(), stats.trequest);\n        }\n        if (readyState === 4) {\n          var status = xhr.status;\n          // http status between 200 to 299 are all successful\n          if (status >= 200 && status < 300) {\n            stats.tload = Math.max(stats.tfirst, performance.now());\n            var data = void 0,\n                len = void 0;\n            if (context.responseType === 'arraybuffer') {\n              data = xhr.response;\n              len = data.byteLength;\n            } else {\n              data = xhr.responseText;\n              len = data.length;\n            }\n            stats.loaded = stats.total = len;\n            var response = { url: xhr.responseURL, data: data };\n            this.callbacks.onSuccess(response, stats, context);\n          } else {\n            // if max nb of retries reached or if http status between 400 and 499 (such error cannot be recovered, retrying is useless), return error\n            if (stats.retry >= config.maxRetry || status >= 400 && status < 499) {\n              _logger.logger.error(status + ' while loading ' + context.url);\n              this.callbacks.onError({ code: status, text: xhr.statusText }, context);\n            } else {\n              // retry\n              _logger.logger.warn(status + ' while loading ' + context.url + ', retrying in ' + this.retryDelay + '...');\n              // aborts and resets internal state\n              this.destroy();\n              // schedule retry\n              this.retryTimeout = window.setTimeout(this.loadInternal.bind(this), this.retryDelay);\n              // set exponential backoff\n              this.retryDelay = Math.min(2 * this.retryDelay, config.maxRetryDelay);\n              stats.retry++;\n            }\n          }\n        } else {\n          // readyState >= 2 AND readyState !==4 (readyState = HEADERS_RECEIVED || LOADING) rearm timeout as xhr not finished yet\n          this.requestTimeout = window.setTimeout(this.loadtimeout.bind(this), config.timeout);\n        }\n      }\n    }\n  }, {\n    key: 'loadtimeout',\n    value: function loadtimeout() {\n      _logger.logger.warn('timeout while loading ' + this.context.url);\n      this.callbacks.onTimeout(this.stats, this.context);\n    }\n  }, {\n    key: 'loadprogress',\n    value: function loadprogress(event) {\n      var stats = this.stats;\n      stats.loaded = event.loaded;\n      if (event.lengthComputable) {\n        stats.total = event.total;\n      }\n      var onProgress = this.callbacks.onProgress;\n      if (onProgress) {\n        // last args is to provide on progress data\n        onProgress(stats, this.context, null);\n      }\n    }\n  }]);\n\n  return XhrLoader;\n}();\n\nexports.default = XhrLoader;\n\n},{\"45\":45}]},{},[33])(33)\n});\n//# sourceMappingURL=hls.js.map\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/hls.js/dist/hls.js\n ** module id = 121\n ** module chunks = 1\n **/","var Hls = require(\"hls.js\");\nvar attachVideojsStreamrootProvider = require('./videojs5-hlsjs-source-handler.js');\n\nattachVideojsStreamrootProvider(window, window.videojs, Hls);\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/videojs5-hlsjs-source-handler/lib/main.js\n ** module id = 122\n ** module chunks = 1\n **/","require(\"videojs-quality-picker\");\n\nvar attachVideojsStreamrootProvider = function (window, videojs, Hls) {\n    function StreamrootProviderHLS (source, tech) {\n        tech.name_ = 'streamrootHLS';\n\n        var _video = tech.el();\n        var _hls;\n        var _errorCounts = {};\n        var _duration = null;\n\n        _video.addEventListener('error', function(evt) {\n            var errorTxt,mediaError=evt.currentTarget.error;\n\n            switch(mediaError.code) {\n                case mediaError.MEDIA_ERR_ABORTED:\n                    errorTxt = \"You aborted the video playback\";\n                    break;\n                case mediaError.MEDIA_ERR_DECODE:\n                    errorTxt = \"The video playback was aborted due to a corruption problem or because the video used features your browser did not support\";\n                    _handleMediaError();\n                    break;\n                case mediaError.MEDIA_ERR_NETWORK:\n                    errorTxt = \"A network error caused the video download to fail part-way\";\n                    break;\n                case mediaError.MEDIA_ERR_SRC_NOT_SUPPORTED:\n                    errorTxt = \"The video could not be loaded, either because the server or network failed or because the format is not supported\";\n                    break;\n            }\n\n            console.error(\"MEDIA_ERROR: \", errorTxt);\n        });\n\n        function initialize() {\n            var hlsjsConfig = tech.options_.hlsjsConfig || {};\n\n            _hls = new Hls(hlsjsConfig);\n            _hls.on(Hls.Events.ERROR, function(event, data) { _onError(event, data, tech, _errorCounts) });\n            _hls.on(Hls.Events.MANIFEST_PARSED, _onMetaData);\n            _hls.on(Hls.Events.LEVEL_LOADED, function(event, data) { _duration = data.details.live ? Infinity : data.details.totalduration; });\n\n            _hls.attachMedia(_video);\n        }\n\n        this.duration = function () {\n            return _duration || _video.duration || 0;\n        };\n\n        this.dispose = function () {\n            _hls.destroy();\n        };\n\n        function load(source) {\n            _hls.loadSource(source.src);\n\n            if (!_hls.config.autoStartLoad) {\n                _startLoadOnPlay();\n            }\n        }\n\n        function switchQuality(qualityId, trackType) {\n            _hls.nextLevel = qualityId;\n        }\n\n        // call _hls.startLoad on video play request\n        function _startLoadOnPlay() {\n            var checkStartLoad = function(e) {\n                e.target.removeEventListener(e.type, checkStartLoad);\n                // if the manifest parsed, call _hls.startLoad immediately, otherwise wait until the manifest is parsed\n                if (typeof _hls.streamController.levels !== 'undefined') {\n                    _hls.startLoad(_hls.config.startPosition);\n                } else {\n                    var startLoad = function() {\n                        _hls.off(Hls.Events.MANIFEST_PARSED, startLoad);\n                        _hls.startLoad(_hls.config.startPosition);\n                    };\n                    _hls.on(Hls.Events.MANIFEST_PARSED, startLoad);\n                }\n            };\n            _video.addEventListener('play', checkStartLoad);\n        }\n\n        function _handleMediaError() {\n            if (_errorCounts[Hls.ErrorTypes.MEDIA_ERROR] === 1) {\n                console.info(\"trying to recover media error\");\n                _hls.recoverMediaError();\n            } else if (_errorCounts[Hls.ErrorTypes.MEDIA_ERROR] === 2) {\n                console.info(\"2nd try to recover media error (by swapping audio codec\");\n                _hls.swapAudioCodec();\n                _hls.recoverMediaError();\n            } else if (_errorCounts[Hls.ErrorTypes.MEDIA_ERROR] > 2) {\n                console.info(\"bubbling media error up to VIDEOJS\");\n                error.code = 3;\n                tech.error = function() { return error; };\n                tech.trigger('error');\n            }\n        }\n\n        function _onError(event, data) {\n            var error = {\n                message: ('HLS.js error: ' + data.type + ' - fatal: ' + data.fatal + ' - ' + data.details),\n            };\n            console.error(error.message);\n\n            // increment/set error count\n            _errorCounts[data.type] ? _errorCounts[data.type] += 1 : _errorCounts[data.type] = 1;\n\n            // implement simple error handling based on hls.js documentation (https://github.com/dailymotion/hls.js/blob/master/API.md#fifth-step-error-handling)\n            if (data.fatal) {\n                switch (data.type) {\n                    case Hls.ErrorTypes.NETWORK_ERROR:\n                        console.info(\"bubbling network error up to VIDEOJS\");\n                        error.code = 2;\n                        tech.error = function() { return error; };\n                        tech.trigger('error');\n                        break;\n\n                    case Hls.ErrorTypes.MEDIA_ERROR:\n                        _handleMediaError();\n                        break;\n\n                    default:\n                        // cannot recover\n                        _hls.destroy();\n                        console.info(\"bubbling error up to VIDEOJS\");\n                        tech.error = function() { return error; };\n                        tech.trigger('error');\n                        break;\n                }\n            }\n        }\n\n        function _onMetaData(event, data) {\n            var cleanTracklist = [];\n\n            if (data.levels.length > 1) {\n                var autoLevel = {\n                    id: -1,\n                    label: \"auto\",\n                    selected: -1 === _hls.manualLevel\n                };\n                cleanTracklist.push(autoLevel);\n            }\n\n            data.levels.forEach(function(level, index) {\n                var quality = {}; // Don't write in level (shared reference with Hls.js)\n                quality.id = index;\n                quality.selected = index === _hls.manualLevel;\n                quality.label = _levelLabel(level);\n\n                cleanTracklist.push(quality);\n            });\n\n            var payload = {\n                qualityData: {video: cleanTracklist},\n                qualitySwitchCallback: switchQuality\n            };\n\n            tech.trigger('loadedqualitydata', payload);\n\n            function _levelLabel(level) {\n                if (level.height) return level.height + \"p\";\n                else if (level.width) return Math.round(level.width * 9 / 16) + \"p\";\n                else if (level.bitrate) return (level.bitrate / 1000) + \"kbps\";\n                else return 0;\n            }\n        }\n\n        initialize();\n        load(source);\n    }\n\n    if (Hls.isSupported()) {\n        videojs.getComponent('Html5').registerSourceHandler({\n\n            canHandleSource: function (source) {\n\n                var hlsTypeRE = /^application\\/x-mpegURL$/i;\n                var hlsExtRE = /\\.m3u8/i;\n                var result;\n\n                if (hlsTypeRE.test(source.type)) {\n                    result = 'probably';\n                } else if (hlsExtRE.test(source.src)) {\n                    result = 'maybe';\n                } else {\n                    result = '';\n                }\n\n                return result;\n            },\n\n            handleSource: function (source, tech) {\n\n                if (tech.hlsProvider) {\n                    tech.hlsProvider.dispose();\n                }\n\n                tech.hlsProvider = new StreamrootProviderHLS(source, tech);\n\n                return tech.hlsProvider;\n            }\n\n        }, 0);\n\n    } else {\n        console.error(\"Hls.js is not supported in this browser!\");\n    }\n\n    videojs.StreamrootProviderHLS = StreamrootProviderHLS;\n};\n\nmodule.exports = attachVideojsStreamrootProvider;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/videojs5-hlsjs-source-handler/lib/videojs5-hlsjs-source-handler.js\n ** module id = 123\n ** module chunks = 1\n **/","import QualityPickerButton from './quality-picker-button';\n\nfunction qualityPickerPlugin(options) {\n    var player = this;\n    var tech = this.tech_;\n\n    let SUPPORTED_TRACKS = [\"video\", \"audio\", \"subtitle\"];\n    let TRACK_CLASS = {\n        video: 'vjs-icon-hd',\n        audio: 'vjs-icon-cog',\n        subtitle: 'vjs-icon-subtitles'\n    };\n\n    tech.on('loadedqualitydata', onQualityData);\n\n    function onQualityData(event, {qualityData, qualitySwitchCallback}) {\n\n        var fullscreenToggle = player.controlBar.getChild('fullscreenToggle');\n        player.controlBar.removeChild(fullscreenToggle);\n\n        for (var i=0; i < SUPPORTED_TRACKS.length; i++) {\n            var track = SUPPORTED_TRACKS[i];\n            var name = track + \"PickerButton\";\n            var qualityPickerButton = player.controlBar.getChild(name);\n            if (qualityPickerButton) {\n                qualityPickerButton.dispose();\n                player.controlBar.removeChild(qualityPickerButton);\n            }\n\n            if (qualityData[track] && qualityData[track].length > 1) {\n                qualityPickerButton = new QualityPickerButton(player, {name, qualityList: qualityData[track], qualitySwitchCallback, trackType: track});\n                qualityPickerButton.addClass(TRACK_CLASS[track]);\n\n                player.controlBar.addChild(qualityPickerButton);\n            }\n        }\n\n        if (fullscreenToggle) {\n            player.controlBar.addChild(fullscreenToggle);\n        }\n    }\n}\n\nvideojs.plugin('qualityPickerPlugin', qualityPickerPlugin);\n\n\n\n/** WEBPACK FOOTER **\n ** ./~/videojs-quality-picker/lib/vjs-quality-picker.js\n **/","import QualityMenu from './quality-menu';\nimport QualityMenuItem from './quality-menu-item';\n\nconst VjsButton = videojs.getComponent('MenuButton');\n\nclass QualityPickerButton extends VjsButton {\n\n  createMenu() {\n    var menu = new QualityMenu(this.player, this.options_);\n    var menuItem;\n    var options;\n    for (var i=0; i < this.options_.qualityList.length; i++) {\n      var quality = this.options_.qualityList[i];\n      var {qualitySwitchCallback, trackType} = this.options_;\n      options = Object.assign({qualitySwitchCallback, trackType}, quality, { selectable: true });\n\n      menuItem = new QualityMenuItem(this.player, options);\n      menu.addItem(menuItem);\n    }\n\n    return menu;\n  }\n}\n\nexport default QualityPickerButton;\n\n\n\n/** WEBPACK FOOTER **\n ** ./~/videojs-quality-picker/lib/quality-picker-button.js\n **/","const VjsMenu = videojs.getComponent('Menu');\n\nclass QualityMenu extends VjsMenu {\n\n  addItem(component) {\n    super.addItem(component);\n\n    component.on('click', () => {\n      let children = this.children();\n\n      for (var i=0; i < children.length; i++) {\n        var child = children[i];\n        if (component !== child) {\n          child.selected(false);\n        }\n      }\n\n    });\n  }\n\n}\n\nexport default QualityMenu;\n\n\n\n/** WEBPACK FOOTER **\n ** ./~/videojs-quality-picker/lib/quality-menu.js\n **/","const VjsMenuItem = videojs.getComponent('MenuItem');\n\nclass QualityMenuItem extends VjsMenuItem {\n    handleClick() {\n        super.handleClick();\n\n        this.options_.qualitySwitchCallback(this.options_.id, this.options_.trackType);\n    }\n}\n\nexport default QualityMenuItem;\n\n\n\n/** WEBPACK FOOTER **\n ** ./~/videojs-quality-picker/lib/quality-menu-item.js\n **/"],"sourceRoot":""}