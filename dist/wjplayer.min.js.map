{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///wjplayer.min.js","webpack:///webpack/bootstrap 65c58f65818e124ab300","webpack:///./src/contrib-hls/index.js","webpack:///./src/bundle.js","webpack:///./~/video.js/es5/video.js?addf","webpack:///./~/video.js/es5/video.js","webpack:///./~/global/window.js","webpack:///./~/global/document.js","webpack:///./~/video.js/es5/setup.js","webpack:///./~/video.js/es5/utils/events.js","webpack:///./~/video.js/es5/utils/dom.js","webpack:///./~/video.js/es5/utils/guid.js","webpack:///./~/video.js/es5/utils/log.js","webpack:///./~/video.js/es5/utils/browser.js","webpack:///./~/video.js/es5/utils/obj.js","webpack:///./~/tsml/tsml.js","webpack:///./~/video.js/es5/utils/stylesheet.js","webpack:///./~/video.js/es5/component.js","webpack:///./~/video.js/es5/utils/fn.js","webpack:///./~/video.js/es5/utils/to-title-case.js","webpack:///./~/video.js/es5/utils/merge-options.js","webpack:///./~/video.js/es5/event-target.js","webpack:///./~/video.js/es5/player.js","webpack:///./~/video.js/es5/utils/time-ranges.js","webpack:///./~/video.js/es5/utils/buffer.js","webpack:///./~/video.js/es5/fullscreen-api.js","webpack:///./~/video.js/es5/media-error.js","webpack:///./~/safe-json-parse/tuple.js","webpack:///./~/video.js/es5/tracks/text-track-list-converter.js","webpack:///./~/video.js/es5/modal-dialog.js","webpack:///./~/video.js/es5/tech/tech.js","webpack:///./~/video.js/es5/tracks/html-track-element.js","webpack:///./~/video.js/es5/tracks/text-track.js","webpack:///./~/video.js/es5/tracks/text-track-cue-list.js","webpack:///./~/video.js/es5/tracks/track-enums.js","webpack:///./~/video.js/es5/tracks/track.js","webpack:///./~/video.js/es5/utils/url.js","webpack:///./~/xhr/index.js","webpack:///./~/xhr/~/once/once.js","webpack:///./~/is-function/index.js","webpack:///./~/parse-headers/parse-headers.js","webpack:///./~/trim/index.js","webpack:///./~/for-each/index.js","webpack:///./~/xtend/immutable.js","webpack:///./~/video.js/es5/tracks/html-track-element-list.js","webpack:///./~/video.js/es5/tracks/text-track-list.js","webpack:///./~/video.js/es5/tracks/track-list.js","webpack:///./~/video.js/es5/tracks/video-track-list.js","webpack:///./~/video.js/es5/tracks/audio-track-list.js","webpack:///./~/video.js/es5/tech/loader.js","webpack:///./~/video.js/es5/tech/flash.js","webpack:///./~/video.js/es5/tech/flash-rtmp.js","webpack:///./~/video.js/es5/poster-image.js","webpack:///./~/video.js/es5/clickable-component.js","webpack:///./~/video.js/es5/tracks/text-track-display.js","webpack:///./~/video.js/es5/loading-spinner.js","webpack:///./~/video.js/es5/big-play-button.js","webpack:///./~/video.js/es5/button.js","webpack:///./~/video.js/es5/close-button.js","webpack:///./~/video.js/es5/control-bar/control-bar.js","webpack:///./~/video.js/es5/control-bar/play-toggle.js","webpack:///./~/video.js/es5/control-bar/time-controls/current-time-display.js","webpack:///./~/video.js/es5/utils/format-time.js","webpack:///./~/video.js/es5/control-bar/time-controls/duration-display.js","webpack:///./~/video.js/es5/control-bar/time-controls/time-divider.js","webpack:///./~/video.js/es5/control-bar/time-controls/remaining-time-display.js","webpack:///./~/video.js/es5/control-bar/live-display.js","webpack:///./~/video.js/es5/control-bar/progress-control/progress-control.js","webpack:///./~/video.js/es5/control-bar/progress-control/seek-bar.js","webpack:///./~/video.js/es5/slider/slider.js","webpack:///./~/video.js/es5/utils/computed-style.js","webpack:///./~/video.js/es5/control-bar/progress-control/load-progress-bar.js","webpack:///./~/video.js/es5/control-bar/progress-control/play-progress-bar.js","webpack:///./~/video.js/es5/control-bar/progress-control/tooltip-progress-bar.js","webpack:///./~/video.js/es5/control-bar/progress-control/mouse-time-display.js","webpack:///./~/video.js/es5/control-bar/fullscreen-toggle.js","webpack:///./~/video.js/es5/control-bar/volume-control/volume-control.js","webpack:///./~/video.js/es5/control-bar/volume-control/volume-bar.js","webpack:///./~/video.js/es5/control-bar/volume-control/volume-level.js","webpack:///./~/video.js/es5/control-bar/volume-menu-button.js","webpack:///./~/video.js/es5/popup/popup.js","webpack:///./~/video.js/es5/popup/popup-button.js","webpack:///./~/video.js/es5/control-bar/mute-toggle.js","webpack:///./~/video.js/es5/control-bar/text-track-controls/chapters-button.js","webpack:///./~/video.js/es5/control-bar/text-track-controls/text-track-button.js","webpack:///./~/video.js/es5/control-bar/track-button.js","webpack:///./~/video.js/es5/menu/menu-button.js","webpack:///./~/video.js/es5/menu/menu.js","webpack:///./~/video.js/es5/control-bar/text-track-controls/text-track-menu-item.js","webpack:///./~/video.js/es5/menu/menu-item.js","webpack:///./~/video.js/es5/control-bar/text-track-controls/off-text-track-menu-item.js","webpack:///./~/video.js/es5/control-bar/text-track-controls/chapters-track-menu-item.js","webpack:///./~/video.js/es5/control-bar/text-track-controls/descriptions-button.js","webpack:///./~/video.js/es5/control-bar/text-track-controls/subtitles-button.js","webpack:///./~/video.js/es5/control-bar/text-track-controls/captions-button.js","webpack:///./~/video.js/es5/control-bar/text-track-controls/caption-settings-menu-item.js","webpack:///./~/video.js/es5/control-bar/audio-track-controls/audio-track-button.js","webpack:///./~/video.js/es5/control-bar/audio-track-controls/audio-track-menu-item.js","webpack:///./~/video.js/es5/control-bar/playback-rate-menu/playback-rate-menu-button.js","webpack:///./~/video.js/es5/control-bar/playback-rate-menu/playback-rate-menu-item.js","webpack:///./~/video.js/es5/control-bar/spacer-controls/custom-control-spacer.js","webpack:///./~/video.js/es5/control-bar/spacer-controls/spacer.js","webpack:///./~/video.js/es5/error-display.js","webpack:///./~/video.js/es5/tracks/text-track-settings.js","webpack:///./~/video.js/es5/tech/html5.js","webpack:///./~/video.js/es5/plugins.js","webpack:///./~/video.js/es5/tracks/audio-track.js","webpack:///./~/video.js/es5/tracks/video-track.js","webpack:///./~/video.js/es5/extend.js","webpack:///./~/videojs-contrib-ads/src/videojs.ads.js","webpack:///./~/videojs-ima/src/videojs.ima.js","webpack:///./~/videojs-ga/dist/videojs.ga.js","webpack:///./~/videojs-social/videojs-social.js","webpack:///./~/videojs-download-button/es5/plugin.js","webpack:///./~/videojs-contrib-hls/dist/videojs-contrib-hls.js","webpack:///./~/videojs-resolution-switcher/lib/videojs-resolution-switcher.js","webpack:///./src/wjplayer.js"],"names":["root","factory","exports","module","define","amd","this","modules","__webpack_require__","moduleId","installedModules","id","loaded","call","m","c","p","_interopRequireDefault","obj","__esModule","default","Object","defineProperty","value","_wjplayer","_wjplayer2","global","_interopRequireWildcard","newObj","key","prototype","hasOwnProperty","videojs","options","ready","tag","indexOf","slice","getPlayers","_log2","warn","Dom","getEl","nodeName","TypeError","player","_player2","players","playerId","hooks","forEach","hookFunction","opts","_mergeOptions3","_obj","isObject","Array","isArray","log","error","PlayerComponent","_component2","getComponent","__WEBPACK_AMD_DEFINE_ARRAY__","__WEBPACK_AMD_DEFINE_RESULT__","_window","Symbol","iterator","constructor","_window2","_document","_document2","_setup","setup","_stylesheet","stylesheet","_component","_eventTarget","_eventTarget2","_events","Events","_player","_plugins","_plugins2","_mergeOptions2","_fn","Fn","_textTrack","_textTrack2","_audioTrack","_audioTrack2","_videoTrack","_videoTrack2","_timeRanges","_formatTime","_formatTime2","_log","_dom","_browser","browser","_url","Url","_computedStyle","_computedStyle2","_extend","_extend2","_xhr","_xhr2","_tech","_tech2","HTMLVideoElement","document","createElement","hooks_","type","fn","concat","hook","removeHook","index","splice","VIDEOJS_NO_DYNAMIC_STYLE","style","$","createStyleElement","head","insertBefore","firstChild","setTextContent","autoSetupTimeout","VERSION","options_","registerComponent","name","comp","isTech","getTech","registerTech","TOUCH_ENABLED","extend","mergeOptions","bind","plugin","addLanguage","code","data","_mergeOptions","toLowerCase","languages","createTimeRange","createTimeRanges","formatTime","parseUrl","isCrossOrigin","EventTarget","on","one","off","trigger","xhr","TextTrack","AudioTrack","VideoTrack","isEl","isTextNode","createEl","hasClass","hasElClass","addClass","addElClass","removeClass","removeElClass","toggleClass","toggleElClass","setAttributes","setElAttributes","getAttributes","getElAttributes","emptyEl","appendContent","insertContent","computedStyle","apply","undefined","window","self","topLevel","minDoc","doccy","wait","vjs","setTimeout","autoSetup","hasLoaded","_windowLoaded","vids","getElementsByTagName","audios","mediaEls","length","i","e","push","_i","_e","_i2","_e2","mediaEl","getAttribute","readyState","_cleanUpEvents","elem","getElData","handlers","removeEventListener","dispatcher","detachEvent","getOwnPropertyNames","disabled","removeElData","_handleMultipleEvents","types","callback","fixEvent","event","returnTrue","returnFalse","isPropagationStopped","old","preventDefault","target","srcElement","relatedTarget","fromElement","toElement","returnValue","defaultPrevented","stopPropagation","cancelBubble","stopImmediatePropagation","isImmediatePropagationStopped","clientX","doc","documentElement","body","pageX","scrollLeft","clientLeft","pageY","clientY","scrollTop","clientTop","which","charCode","keyCode","button","guid","Guid","newGUID","hash","handlersCopy","n","addEventListener","attachEvent","hasElData","removeType","t","elemData","parent","parentNode","ownerDocument","bubbles","targetData","func","arguments","_guid","_taggedTemplateLiteralLoose","strings","raw","isNonBlankString","str","test","throwIfWhitespace","Error","classRegExp","className","RegExp","nodeType","createQuerier","method","selector","context","querySelector","ctx","getElementById","tagName","properties","attributes","content","el","propName","val","_tsml2","_templateObject","setAttribute","textContent","attrName","text","innerText","insertElFirst","child","appendChild","elIdAttr","elData","removeAttribute","element","classToCheck","classList","contains","classToAdd","add","trim","classToRemove","remove","split","filter","join","classToToggle","predicate","has","attrValue","knownBooleans","attrs","attrVal","attribute","blockTextSelection","focus","onselectstart","unblockTextSelection","findElPosition","box","getBoundingClientRect","left","top","docEl","pageXOffset","pageYOffset","Math","round","getPointerPosition","position","boxW","offsetWidth","boxH","offsetHeight","boxY","boxX","changedTouches","y","max","min","x","removeChild","normalizeContent","map","createTextNode","node","$$","_tsml","Date","getTime","logByType","args","stringify","IE_VERSION","unshift","toUpperCase","history","console","a","JSON","String","_len","_key","_len2","_key2","_len3","_key3","BACKGROUND_SIZE_SUPPORTED","IS_ANY_SAFARI","IS_SAFARI","IS_IE8","IS_CHROME","IS_EDGE","IS_FIREFOX","IS_NATIVE_ANDROID","IS_OLD_ANDROID","ANDROID_VERSION","IS_ANDROID","IOS_VERSION","IS_IOS","IS_IPOD","IS_IPHONE","IS_IPAD","USER_AGENT","navigator","userAgent","webkitVersionMap","exec","appleWebkitVersion","parseFloat","pop","match","major","minor","result","DocumentTouch","each","object","keys","reduce","initial","accum","assign","sources","source","_typeof","isPlain","toString","clean","s","replace","sa","styleSheet","cssText","_classCallCheck","instance","Constructor","_toTitleCase","_toTitleCase2","Component","play","player_","id_","name_","el_","children_","childIndex_","childNameIndex_","initChildren","reportTouchActivity","enableTouchActivity","dispose","localize","string","language","primaryCode","primaryLang","contentEl","contentEl_","children","getChildById","getChild","addChild","component","componentName","componentClassName","componentClass","ComponentClass","childNodes","refNode","childFound","compEl","_this","parentOptions","handleAdd","playerOptions","newChild","workingChildren","Tech","some","wchild","buildCSSClass","first","second","third","_this2","removeOnDispose","cleanRemover","_this3","_arguments","newFunc","sync","isReady_","readyQueue_","triggerReady","readyQueue","show","hide","lockShowing","unlockShowing","width","num","skipListeners","dimension","height","dimensions","widthOrHeight","pxIndex","parseInt","currentDimension","computedWidthOrHeight","getComputedStyle","getPropertyValue","rule","currentDimensions","currentWidth","currentHeight","emitTapEvents","touchStart","firstTouch","tapMovementThreshold","touchTimeThreshold","couldBeTap","touches","xdiff","ydiff","touchDistance","sqrt","noTap","touchTime","reportUserActivity","report","touchHolding","clearInterval","setInterval","touchEnd","timeout","timeoutId","disposeFn","clearTimeout","interval","intervalId","components_","Player","playerName","every","Boolean","props","init","subObj","create","throttle","uid","bound","last","now","throttled","toTitleCase","charAt","allowedEvents_","ael","dispatchEvent","_possibleConstructorReturn","ReferenceError","_inherits","subClass","superClass","enumerable","writable","configurable","setPrototypeOf","__proto__","_buffer","_fullscreenApi","_fullscreenApi2","_mediaError","_mediaError2","_tuple","_tuple2","_textTrackListConverter","_textTrackListConverter2","_modalDialog","_modalDialog2","_audioTrackList","_audioTrackList2","_videoTrackList","_videoTrackList2","TECH_EVENTS_RETRIGGER","_Component","getTagSettings","closest","techOrder","tagAttributes","languagesToLower","languages_","cache_","poster_","poster","controls_","controls","scrubbing_","playerOptionsCopy","plugins","isAudio","flexNotSupported_","userActive","listenForUserActivity_","handleFullscreenChange_","handleStageClick_","styleEl_","tech_","attr","defaultsStyleEl","nextSibling","fluid","aspectRatio","links","linkEl","item","initNetworkState_","networkState","_dimension","privDimension","parsedVal","isNaN","updateStyleEl_","bool","fluid_","ratio","aspectRatio_","_width","width_","_height","height_","techEl","idClass","videoWidth","videoHeight","ratioParts","ratioMultiplier","loadTech_","techName","unloadTech_","disposeMediaElement","techName_","techOptions","nativeControlsForTouch","techId","videoTracks","videoTracks_","textTracks","textTracks_","audioTracks","audioTracks_","autoplay","preload","loop","muted","vtt.js","currentType_","src","currentTime","startTime","TechComponent","handleTechReady_","jsonToTextTracks","textTracksJson_","handleTechLoadStart_","handleTechWaiting_","handleTechCanPlay_","handleTechCanPlayThrough_","handleTechPlaying_","handleTechEnded_","handleTechSeeking_","handleTechSeeked_","handleTechPlay_","handleTechFirstPlay_","handleTechPause_","handleTechDurationChange_","handleTechFullscreenChange_","handleTechError_","handleTechPosterChange_","handleTechTextData_","usingNativeControls","techGet_","addTechControlsListeners_","textTracksToJson","tech","safety","IWillNotUseThisInPlugins","errorText","alert","removeTechControlsListeners_","handleTechClick_","handleTechTouchStart_","handleTechTouchMove_","handleTechTouchEnd_","handleTechTap_","volume","techCall_","currentSrc","paused","hasStarted","_hasStarted","hasStarted_","starttime","pause","duration","userWasActive","isFullscreen","getCache","arg","scrubbing","isScrubbing","seconds","Infinity","remainingTime","buffered","bufferedPercent","bufferedEnd","end","percentAsDecimal","vol","_muted","supportsFullScreen","isFS","isFullscreen_","requestFullscreen","fsApi","fullscreenchange","documentFullscreenChange","fullscreenElement","enterFullWindow","exitFullscreen","exitFullWindow","isFullWindow","docOrigOverflow","overflow","fullWindowOnEscKey","canPlayType","can","j","isSupported","selectSource","_this4","techs","_ref","findFirstPassingTechSourcePair","outerArray","innerArray","tester","found","outerChoice","innerChoice","foundSourceAndTech","flip","b","finder","_ref2","canPlaySource","sourceOrder","currentTech","sourceList_","load","sourceTech","message","notSupportedMessage","reset","currentSources","currentSource","currentType","usingNativeControls_","err","error_","errorDisplay","close","errorTypes","userActivity_","userActive_","mouseInProgress","lastMoveX","lastMoveY","handleActivity","handleMouseMove","screenX","screenY","handleMouseDown","handleMouseUp","inactivityTimeout","playbackRate","rate","featuresPlaybackRate","isAudio_","remoteTextTracks","remoteTextTrackEls","addTextTrack","kind","label","addRemoteTextTrack","manualCleanup","removeRemoteTextTrack","_ref3","_ref3$track","track","language_","toJSON","tracks","createModal","_this5","modal","open","baseOptions","tagOptions","dataSetup","_safeParseTuple","hasChildNodes","childName","html5","flash","defaultVolume","playbackRates","userLanguage","rangeCheck","fnName","maxIndex","getRange","valueIndex","ranges","rangeIndex","createTimeRangesObj","start","bufferedDuration","FullscreenApi","apiMap","specApi","browserApi","MediaError","defaultMessages","status","1","2","3","4","5","errNum","SafeParseTuple","reviver","json","parse","trackToJson_","ret","acc","prop","cues","cue","endTime","trackEls","trackObjs","trackEl","addedTrack","addCue","MODAL_CLASS_NAME","ESC","ModalDialog","opened_","hasBeenOpened_","hasBeenFilled_","closeable","uncloseable","role","descEl_","description","tabIndex","aria-describedby","aria-hidden","aria-label","handleKeyPress","desc","fillAlways","fill","wasPlaying_","opened","temporary","closeable_","temp","controlText","fillWith","parentEl","nextSiblingEl","empty","content_","createTrackHelper","addTrack_","_htmlTrackElement","_htmlTrackElement2","_htmlTrackElementList","_htmlTrackElementList2","_textTrackList","_textTrackList2","featuresProgressEvents","manualProgressOn","featuresTimeupdateEvents","manualTimeUpdatesOn","nativeCaptions","featuresNativeTextTracks","emulateTextTracks","autoRemoteTextTracks_","initTextTrackListeners","initTrackListeners","onDurationChange","manualProgress","trackProgress","manualProgressOff","stopTrackingProgress","progressInterval","numBufferedPercent","bufferedPercent_","duration_","manualTimeUpdates","trackCurrentTime","stopTrackingCurrentTime","manualTimeUpdatesOff","currentTimeInterval","manuallyTriggered","clearTracks","list","removeTrack_","cleanupAutoTextTracks","played","setCurrentTime","textTrackListChanges","trackTypes","trackListChanges","addWebVttScript_","WebVTT","script","onload","onerror","updateDisplay","textTracksChanges","mode","remoteTextTracks_","remoteTextTrackEls_","createRemoteTextTrack","htmlTrackElement","addTrackElement_","trackElement","getTrackElementByTrack_","removeTrackElement_","setPoster","techs_","featuresVolumeControl","featuresFullscreenResize","withSourceHandlers","_Tech","registerSourceHandler","handler","sourceHandlers","selectSourceHandler","canHandleSource","srcObj","sh","deferrable","originalFn","sourceHandler_","setSource","nativeSourceHandler","disposeSourceHandler","currentSource_","firstLoadStartListener_","successiveLoadStartListener_","handleSource","NONE","LOADING","LOADED","ERROR","HTMLTrackElement","_EventTarget","srclang","get","_ret","_textTrackCueList","_textTrackCueList2","_trackEnums","_track","_track2","parseCues","srcContent","parser","Parser","vttjs","StringDecoder","errors","oncue","onparsingerror","onflush","groupCollapsed","groupEnd","flush","loadTrack","uri","crossOrigin","cors","response","responseBody","loaded_","loadHandler","_Track","_ret2","settings","TextTrackKind","TextTrackMode","default_","tt","cues_","activeCues_","activeCues","changed","timeupdateHandler","set","newMode","ct","active","l","setCues_","removeCue","_removeCue","removed","cuechange","TextTrackCueList","length_","oldLength","defineProp","getCueById","VideoTrackKind","alternative","captions","main","sign","subtitles","commentary","AudioTrackKind","descriptions","main-desc","translation","chapters","metadata","hidden","showing","Track","trackProps","_loop","getFileExtension","getAbsoluteURL","url","href","addToBody","host","protocol","div","innerHTML","details","path","splitPathRe","pathParts","winLoc","location","urlInfo","srcProtocol","forEachArray","array","isEmpty","initParams","params","isFunction","xtend","createXHR","_createXHR","readystatechange","loadFunc","getBody","responseType","responseText","responseXML","isJson","errorFunc","evt","timeoutTimer","statusCode","failureResponse","aborted","useXDR","headers","rawRequest","getAllResponseHeaders","parseHeaders","once","XDomainRequest","XMLHttpRequest","onreadystatechange","onprogress","ontimeout","username","password","withCredentials","abort","setRequestHeader","beforeSend","send","noop","called","proto","Function","confirm","prompt","row","right","forEachString","forEachObject","len","k","HtmlTrackElementList","trackElements","trackElements_","trackElement_","_trackList","_trackList2","TextTrackList","_TrackList","_prop","TrackList","tracks_","rtrack","getTrackById","change","addtrack","removetrack","disableOthers","selected","VideoTrackList","changing_","addTrack","removeTrack","enabled","AudioTrackList","MediaLoader","_createSetter","attrUpper","_api","vjs_setProperty","_createGetter","vjs_getProperty","_flashRtmp","_flashRtmp2","Flash","onReady","onEvent","onError","lastSeekTarget_","swf","ver","objId","flashVars","readyFunction","eventProxyFunction","errorEventProxyFunction","wmode","bgcolor","class","embed","ended","vjs_play","vjs_pause","_src","setSrc","vjs_src","seeking","time","seekable","NaN","vjs_load","enterFullScreen","_readWrite","_readOnly","version","formats","guessMimeType","ext","video/flv","video/x-flv","video/mp4","video/m4v","currSwf","checkReady","swfID","eventName","ActiveXObject","GetVariable","mimeTypes","enabledPlugin","getEmbedCode","objTag","flashVarsString","paramsString","attrsString","movie","flashvars","allowScriptAccess","allowNetworking","FlashRtmpDecorator","streamingFormats","rtmp/mp4","rtmp/flv","streamFromParts","connection","stream","streamToParts","parts","connEnd","search","streamBegin","lastIndexOf","substring","isStreamingType","srcType","RTMP_RE","isStreamingSrc","rtmpSourceHandler","srcParts","setRtmpConnection","setRtmpStream","_clickableComponent","_clickableComponent2","PosterImage","_ClickableComponent","update","fallbackImg_","backgroundImage","handleClick","ClickableComponent","enable","aria-live","tabIndex_","createControlTextEl","controlTextEl_","controlText_","localizedText","handleFocus","handleBlur","disable","constructColor","color","opacity","tryUpdateStyle","darkGray","lightGray","fontMap","monospace","sansSerif","serif","monospaceSansSerif","monospaceSerif","proportionalSansSerif","proportionalSerif","casual","smallcaps","TextTrackDisplay","toggleDisplay","modes","trackList","firstDesc","firstCaptions","aria-atomic","clearDisplay","processCues","descriptionsTrack","captionsSubtitlesTrack","updateForTrack","overrides","textTrackSettings","getValues","cueDiv","displayState","textOpacity","backgroundColor","backgroundOpacity","windowColor","windowOpacity","edgeStyle","textShadow","fontPercent","fontSize","bottom","fontFamily","fontVariant","LoadingSpinner","dir","_button","_button2","BigPlayButton","_Button","Button","CloseButton","ControlBar","PlayToggle","handlePlay","handlePause","CurrentTimeDisplay","updateContent","formattedTime","formattedTime_","guide","floor","h","gm","gh","DurationDisplay","TimeDivider","RemainingTimeDisplay","LiveDisplay","updateShowing","ProgressControl","_slider","_slider2","SeekBar","_Slider","updateProgress","controlBar","progressControl","keepTooltipsInside","tooltipProgressBar","updateAriaAttributes","bar","playerWidth","tooltipWidth","tooltip","tooltipStyle","maxWidth","minWidth","ceil","getPercent","toFixed","percent","videoWasPlaying","newTime","calculateDistance","stepForward","stepBack","barName","playerEvent","Slider","vertical","aria-valuenow","aria-valuemin","aria-valuemax","progress","percentage","vertical_","cs","currentStyle","LoadProgressBar","partEls_","percentify","part","PlayProgressBar","updateDataAttr","TooltipProgressBar","MouseTimeDisplay","clampedPosition","clampPosition_","difference","tooltipWidthHalf","actualPosition","FullscreenToggle","handleFullscreenChange","VolumeControl","VolumeBar","updateARIAAttributes","checkMuted","VolumeLevel","_popup","_popup2","_popupButton","_popupButton2","_muteToggle","_muteToggle2","_volumeBar","_volumeBar2","VolumeMenuButton","_PopupButton","updateVisibility","inline","volumeBar","volumeUpdate","orientationClass","createPopup","popup","contentElType","vb","menuContent","attachVolumeBarEvents","Popup","addItem","append","PopupButton","items","menuButtonClass","MuteToggle","level","toMute","_textTrackButton","_textTrackButton2","_chaptersTrackMenuItem","_chaptersTrackMenuItem2","ChaptersButton","_TextTrackButton","track_","setTrack","findChaptersTrack","updateHandler_","remoteTextTrackEl","_remoteTextTrackEl","kind_","getMenuCaption","createMenu","title","createItems","mi","_trackButton","_trackButton2","_textTrackMenuItem","_textTrackMenuItem2","_offTextTrackMenuItem","_offTextTrackMenuItem2","TextTrackButton","_TrackButton","selectable","_menuButton","_menuButton2","TrackButton","_MenuButton","updateHandler","_menu","_menu2","MenuButton","enabled_","handleSubmenuKeyPress","menu","buttonPressed_","unpressButton","blur","pressButton","Menu","focusedChild_","stepChild","haveTitle","shift","_menuItem","_menuItem2","TextTrackMenuItem","_MenuItem","changeHandler","handleTracksChange","onchange","Event","createEvent","initEvent","MenuItem","_selected","OffTextTrackMenuItem","_TextTrackMenuItem","ChaptersTrackMenuItem","DescriptionsButton","SubtitlesButton","_captionSettingsMenuItem","_captionSettingsMenuItem2","CaptionsButton","threshold","CaptionSettingsMenuItem","_audioTrackMenuItem","_audioTrackMenuItem2","AudioTrackButton","AudioTrackMenuItem","_playbackRateMenuItem","_playbackRateMenuItem2","PlaybackRateMenuButton","updateLabel","labelEl_","rates","currentRate","newRate","playbackRateSupported","PlaybackRateMenuItem","_spacer","_spacer2","CustomControlSpacer","_Spacer","Spacer","ErrorDisplay","_ModalDialog","parseOptionValue","getSelectedOptionValue","selectedIndex","setSelectedOption","Obj","LOCAL_STORAGE_KEY","COLOR_BLACK","COLOR_BLUE","COLOR_CYAN","COLOR_GREEN","COLOR_MAGENTA","COLOR_RED","COLOR_WHITE","COLOR_YELLOW","OPACITY_OPAQUE","OPACITY_SEMI","OPACITY_TRANS","selectConfigs","v","Number","TextTrackSettings","setDefaults","persistTextTrackSettings","saveSettings","config","restoreSettings","createElSelect_","for","o","createElFgColor_","legend","select","createElBgColor_","createElWinColor_","createElColors_","createElFont_","createElControls_","defaultsButton","doneButton","heading","aria-level","aria-labelledby","setValues","values","localStorage","getItem","setItem","removeItem","ttDisplay","Html5","crossoriginTracks","handleLateInit_","nodes","nodesLength","removeNodes","hasAttribute","elTracks","techTracks","capitalType","currentTarget","removeOldTracks_","handleTextTrackChange_","handleTextTrackChange","handleTextTrackAdd_","handleTextTrackAdd","handleTextTrackRemove_","handleTextTrackRemove","proxyNativeTextTracks_","setControls","proxyWebkitFullscreen_","tl","movingMediaElementInDOM","clone","cloneNode","settingsAttrs","overwriteAttrs","loadstartFired","setLoadstartFired","triggerLoadstart","eventsToTrigger","removeOldTextTracks_","removeTracks","techTrack","playPromise","then","checkProgress","endFn","beginFn","webkitEnterFullScreen","video","HAVE_METADATA","exitFullScreen","webkitExitFullScreen","resetMediaElement","TEST_VID","canControlVolume","canControlPlaybackRate","supportsNativeTextTracks","supportsNativeVideoTracks","supportsVideoTracks","supportsNativeAudioTracks","supportsAudioTracks","featuresNativeVideoTracks","featuresNativeAudioTracks","mpegurlRE","mp4RE","patchCanPlayType","unpatchCanPlayType","r","querySelectorAll","newEnabled","newSelected","super_","extendFn","subClassMethods","methods","VIDEO_EVENTS","cancelContentPlay","ads","cancelPlayTimeout","getPlayerSnapshot","suppressedTracks","snapshot","nativePoster","restorePlayerSnapshot","trackSnapshot","srcChanged","attempts","restoreTracks","resume","updateEnded","resumeEndedTimeout","tryToResume","tryToResumeTimeout_","removeNativePoster","defaults","prerollTimeout","postrollTimeout","debug","adFramework","fsmHandler","videoEvents","triggerEvent","state","originalEvent","startLinearAdMode","endLinearAdMode","skipLinearAdMode","fsm","content-set","events","adscanceled","adsready","adserror","adskip","ads-ready","preroll?","enter","adTimeoutTimeout","leave","adstart","adtimeout","ads-ready?","ad-playback","triggerevent","adend","content-resuming","_fireEndedTimeout","contentupdate","contentresumed","playing","postroll?","content-playback","contentended","contentSrc","checkSrc","oldValue","newValue","ima_defaults","adLabel","showControlsForJSAds","readyCallback","ima","ImaPlugin","assignControlAttributes_","controlName","controlPrefix","getClassRegexp_","addClass_","removeClass_","classRegexp","createAdContainer_","vjsControls","adContainerDiv","zIndex","showAdControls_","hideAdControls_","createControls_","adDisplayContainer","google","AdDisplayContainer","contentPlayer","controlsDiv","countdownDiv","display","showCountdown","seekBarDiv","progressDiv","playPauseDiv","onAdPlayPauseClick_","muteDiv","onAdMuteClick_","sliderDiv","onAdVolumeSliderMouseDown_","sliderLevelDiv","fullscreenDiv","onAdFullscreenClick_","initializeAdDisplayContainer","adDisplayContainerInitialized","initialize","requestAds","adsRequest","AdsRequest","adTagUrl","adsResponse","forceNonLinearFullSlot","linearAdSlotWidth","getPlayerWidth","linearAdSlotHeight","getPlayerHeight","nonLinearAdSlotWidth","nonLinearWidth","nonLinearAdSlotHeight","nonLinearHeight","adsLoader","onAdsManagerLoaded_","adsManagerLoadedEvent","adsManager","getAdsManager","contentPlayheadTracker","adsRenderingSettings","AdErrorEvent","Type","AD_ERROR","onAdError_","AdEvent","AD_BREAK_READY","onAdBreakReady_","CONTENT_PAUSE_REQUESTED","onContentPauseRequested_","CONTENT_RESUME_REQUESTED","onContentResumeRequested_","ALL_ADS_COMPLETED","onAllAdsCompleted_","onAdLoaded_","STARTED","onAdStarted_","CLICK","COMPLETE","onAdComplete_","SKIPPED","autoPlayAdBreaks","initWidth","initHeight","adsManagerDimensions","ViewMode","NORMAL","setVolume","adError","startFromReadyCallback","onAdsLoaderError_","getError","destroy","AdError","adErrorEvent","errorMessage","stack","adEvent","adBreakReadyListener","playAdBreak","adsActive","adPlaying","contentSource","localContentEndedListener","getAd","getAdPodInfo","getPodIndex","contentType","getContentType","showPlayButton","currentAd","isLinear","contentComplete","allAdsCompleted","contentAndAdsEndedListeners","adTrackingTimer","onAdPlayheadTrackerInterval_","getRemainingTime","getDuration","adPosition","isPod","totalAds","getAdPosition","getTotalAds","remainingMinutes","remainingSeconds","podCount","playProgressRatio","playProgressPercent","retVal","showPauseButton","adMuted","onMouseUp_","onMouseMove_","setVolumeSlider_","onFullscreenChange_","resize","screen","FULLSCREEN","onVolumeChange_","newVolume","seekContentToZero_","playContentFromZero_","resetIMA_","setContent","adTag","playOnLoad","setContentWithAdTag","changeSource_","setContentWithAdsResponse","addContentEndedListener","listener","contentEndedListeners","addContentAndAdsEndedListener","setAdBreakReadyListener","pauseAd","resumeAd","setUpPlayerIntervals_","updateTimeIntervalHandle","updateCurrentTime_","seekCheckInterval","seekCheckIntervalHandle","checkForSeeking_","resizeCheckIntervalHandle","checkForResize_","resizeCheckInterval","tempCurrentTime","diff","previousTime","abs","seekThreshold","setShowCountdown","showCountdownIn","contentTrackingTimer","adPlayheadTracker","playerDisposedListener","intervalsToClear","contrib_ads_defaults","ads_plugin_settings","AdsRenderingSettings","restoreCustomPlaybackStateOnAdBreakComplete","setting","setLocale","AdsLoader","getSettings","setVpaidMode","ImaSdkSettings","VpaidMode","ENABLED","vpaidAllowed","DISABLED","vpaidMode","locale","numRedirects","setNumRedirects","setPlayerType","setPlayerVersion","setAutoPlayAdBreaks","AdsManagerLoadedEvent","ADS_MANAGER_LOADED","__indexOf","adpause","autoLabel","dataSetupOptions","defaultsEventsToTrack","eventCategory","eventLabel","eventsToTrack","firstplay","fullscreen","getCurrentTime","getCurrentValue","isFinite","parsedOptions","percentsAlreadyTracked","percentsPlayedInterval","secondsPlayed","secondsPlayedInterval","secondsPlayedMoments","seekEnd","seekStart","sendbeacon","startTimeTracking","stopTimeTracking","timeupdate","trackReplaySeconds","trackSeconds","trackingTime","volumeChange","ga","trackFiniteSeconds","percentPlayed","isFullScreen","action","nonInteraction","eventFields","eventAction","eventValue","sendGaEventDirectly","endscreen","hasAds","videoFinished","adStarted","adFinished","social","SocialButton","SocialOverlay","deeplinking","displayAfterVideo","offset","services","facebook","twitter","tumblr","pinterest","linkedin","addEvent","socialButton","socialOverlay","enableRestartButton","disableRestartButton","directLinkTextBox","embedCodeTextBox","restartButton","_getUrlWithTime","_restartPlayer","removeEmbed","removeDirect","offsetTextBox","closeButton","previouslyPlaying","tabindex","_getTitle","aria-role","embedCode","urlTemplate","_convertOffset","encodeURI","mediainfo","_getUrl","referrer","segments","multiples","_videoJs","_videoJs2","onPlayerReady","linkProps","download","linkAttrs","downloadButton","require","f","u","_slicedToArray","sliceIterator","arr","_arr","_n","_d","_s","next","done","_globalWindow","_globalWindow2","findAdCue","mediaTime","adStartTime","adEndTime","updateAdCues","media","segment","VTTCue","cueOut","adOffset","adTotal","_segment$cueOutCont$split$map","cueOutCont","_segment$cueOutCont$split$map2","global/window","textRange","range","formatHexString","formatAsciiString","fromCharCode","utils","hexDump","bytes","step","hex","ascii","tagDump","textRanges","GOAL_BUFFER_LENGTH","_createClass","defineProperties","descriptor","protoProps","staticProps","_get","_x2","_x3","_x4","_again","property","receiver","getOwnPropertyDescriptor","getter","getPrototypeOf","_playlistLoader","_playlistLoader2","_segmentLoader","_segmentLoader2","_ranges","_ranges2","_adCueTags","_adCueTags2","_syncController","_syncController2","BLACKLIST_DURATION","Hls","objectChanged","parseCodecs","codecs","codecCount","videoCodec","videoObjectTypeIndicator","audioProfile","parsed","mimeTypesForPlaylist_","master","container","audioGroup","mediaAttributes","previousGroup","CODECS","parsedCodecs","mediaGroups","AUDIO","groupId","MasterPlaylistController","_videojs$EventTarget","bandwidth","externHls","useCueTags","hls_","hls","mode_","useCueTags_","cueTagsTrack_","inBandMetadataTrackDispatchType","requestOptions_","audioGroups_","mediaSource","MediaSource","audioinfo_","handleAudioinfoUpdate_","handleSourceOpen_","seekable_","hasPlayed_","syncController_","segmentLoaderOptions","hasPlayed","syncController","masterPlaylistLoader_","setupMasterPlaylistLoaderListeners_","audioPlaylistLoader_","mainSegmentLoader_","audioSegmentLoader_","setupSegmentLoaderListeners_","requestTimeout","targetDuration","endList","playlist","fillAudioTracks_","setupAudio","setupSourceBuffers_","endOfStream","setupFirstPlay","updatedPlaylist","updateAdCues_","updateDuration","addSeekableRange","addSeekableRange_","onDurationchange","initialMedia_","selectPlaylist","blacklistCurrentPlaylist","activeAudioGroup","activeTrack","isLowestEnabledRendition_","onSyncInfoUpdate_","supportsAudioInfoChange_","audioInfo_","info","enabledIndex","enabledTrack","defaultTrack","properties_","mediaRequests","mediaTransferDuration","mediaBytesTransferred","mediaSecondsLoaded","mediaGroup","audioTrack","videoPlaylist","resolvedUri","resetEverything","audioPlaylist","playlists","resetLoader","audiosegmentloader_","currentPlaylist","nextPlaylist","excludeUntil","findRange","Playlist","mainSeekable","audioSeekable","oldDuration","newDuration","setDuration","mimeType","excludeIncompatibleVariants_","variant","variantCodecs","codecString","isTypeSupported","./ad-cue-tags","./playlist-loader","./ranges","./segment-loader","./sync-controller","timerCancelEvents","PlaybackWatcher","consecutiveUpdates","lastRecordedTime","timer_","checkCurrentTimeTimeout_","logger_","waitingHandler","waiting_","cancelTimerHandler","cancelTimer_","monitorCurrentTime_","checkCurrentTime_","fellOutOfLiveWindow_","livePoint","nextRange","findNextRange","videoUnderflow_","skipTheGap_","gap","gapFromVideoUnderflow_","scheduledCurrentTime","TIME_FUDGE_FACTOR","gaps","findGaps","6","_resolveUrl","_resolveUrl2","_stream","_stream2","_m3u8Parser","_m3u8Parser2","updateSegments","original","updateMaster","mediaSequence","PlaylistLoader","srcUrl","loader","mediaUpdateTimeout","request","playlistRequestError","haveMetadata","startingState","setBandwidth","refreshDelay","manifest","media_","stopRequest","oldRequest","enabledPlaylists_","currentBandwidth","BANDWIDTH","mediaChange","req","syncInfo","started","groupKey","labelKey","alternateAudio","VIDEO","CLOSED-CAPTIONS","SUBTITLES","./resolve-url","./stream","m3u8-parser","7","UNSAFE_LIVE_SEGMENTS","backwardDuration","endSequence","precise","forwardDuration","intervalDuration","expired","backward","forward","totalDuration","sumDurations","startIndex","endIndex","durations","getPlaylistSyncPoints","expiredSync","segmentSync","calculateExpiredTime","expiredDiff","segmentDiff","syncIndex","syncTime","_getPlaylistSyncPoints","isWholeNumber","roundSignificantDigit","increment","numDecimalDigits","scale","pow","ceilLeastSignificantDigit","floorLeastSignificantDigit","getMediaInfoForTime_","numSegments","mediaIndex","8","clamp","filterRanges","timeRanges","results","findSoleUncommonTimeRangesEnd","edges","overlapsCurrentEnd","span","bufferIntersection","bufferA","bufferB","arity","extents","count","sort","calculateBufferedPercent","adjustedRange","referenceRange","referenceDuration","adjustedDuration","bufferMissingFromAdjusted","adjustedIntersection","referenceIntersection","adjustedOverlap","referenceOverlap","getSegmentBufferedPercent","startOfSegment","segmentDuration","endOfSegment","originalSegmentRange","adjustedSegmentRange","9","defaultOptions","errorInterval","getSource","sourceObj","initPlugin","lastCalled","seekTo","localOptions","loadedMetadataHandler","errorHandler","cleanupEvents","reinitPlugin","newOptions","reloadSourceOnError","10","enableFunction","changePlaylistFn","currentlyEnabled","Representation","hlsHandler","fastChangeFunction","masterPlaylistController_","fastQualityChange_","RESOLUTION","resolution","renditionSelectionMixin","representations","11","_urlToolkit","_urlToolkit2","resolveUrl","baseURL","relativeURL","buildAbsoluteURL","url-toolkit","12","_playlist","_sourceUpdater","_sourceUpdater2","_aesDecrypter","_config","_config2","CHECK_BUFFER_DELAY","logit","detectEndOfStream","segmentIndex","appendedLastSegment","byterangeStr","byterange","byterangeStart","byterangeEnd","segmentXhrHeaders","Range","initSegmentId","initSegment","SegmentLoader","throughput","roundTrip","resetStats_","currentTime_","seeking_","setCurrentTime_","mediaSource_","checkBufferTimeout_","currentTimeline_","xhr_","pendingSegment_","mimeType_","sourceUpdater_","xhrOptions_","activeInitSegmentId_","initSegments_","syncPoint_","fetchAtBuffer_","abort_","fillBuffer_","_error","monitorBuffer_","playlist_","setDateTimeMapping","init_","newPlaylist","oldPlaylist","segmentInfo","mediaSequenceDiff","isSyncRequest","saveExpiredSegmentInfo","resyncLoader","_mimeType","segmentIndexArray","timeline","syncPoint","lastBufferedEnd","bufferedTime","getSyncSegmentCandidate_","generateSegmentInfo_","mediaSourceInfo","encryptedBytes","timestampOffset","updating","getSyncPoint","checkBuffer_","isEndOfStream","loadSegment_","removeToTime","keyXhr","initSegmentXhr","segmentXhr","trimBuffer_","keyRequestOptions","handleResponse_","initSegmentOptions","segmentRequestOptions","view","timedout","keyXhrRequest","startOfAppend","roundTripTime","bytesReceived","Uint8Array","byteLength","DataView","Uint32Array","getUint32","iv","processResponse_","Decrypter","handleSegment_","probeSegmentInfo","initId","appendBuffer","handleUpdateEnd_","recordThroughput_","currentMediaIndex","segmentProcessingTime","segmentProcessingThroughput","./config","./playlist","./source-updater","aes-decrypter","13","SourceUpdater","createSourceBuffer","sourceBuffer_","addSourceBuffer","onUpdateendCallback_","pendingCallback","pendingCallback_","runCallback_","callbacks_","timestampOffset_","queueCallback_","_duration","_this6","callbacks","14","Stream","listeners","destination","15","_x","_muxJsLibMp4Probe","_muxJsLibMp4Probe2","_muxJsLibToolsTsInspectorJs","syncPointStrategies","run","currentTimeline","datetimeToDisplayTime","dateTimeObject","playlistTime","playlistStart","discontinuityStarts","discontinuity","discontinuitySequence","discontinuities","SyncController","inspectCache_","timelines","strategy","lastRemovedSegment","playlistTimestamp","timingInfo","probeMp4Segment_","probeTsSegment_","calculateSegmentTimeMapping_","saveDiscontinuitySyncInfo_","timescales","timescale","timeInfo","inspect","segmentStartTime","segmentEndTime","dts","dtsTime","audio","mappingObj","mapping","accuracy","mux.js/lib/mp4/probe","mux.js/lib/tools/ts-inspector.js","16","xhrFactory","XhrFunction","beforeRequest","responseTime","requestTime","17","precompute","tables","encTable","decTable","sbox","sboxInv","xInv","d","th","x2","x4","x8","tEnc","tDec","aesTables","AES","_tables","tmp","encKey","decKey","keyLen","rcon","encrypted0","encrypted1","encrypted2","encrypted3","out","a2","b2","c2","nInnerRounds","kIndex","table","table0","table1","table2","table3","18","AsyncStream","_Stream","jobs","delay","timeout_","processJob_","job","19","_aes","_aes2","_asyncStream","_asyncStream2","_pkcs7","ntoh","word","decrypt","encrypted","initVector","encrypted32","Int32Array","buffer","byteOffset","decipher","decrypted","decrypted32","init0","init1","init2","init3","wordIx","STEP","asyncStream_","decryptChunk_","subarray","unpad","./aes","./async-stream","pkcs7","20","_decrypter","./decrypter","21","dup","22","PADDING","plaintext","padding","23","pad","./pad.js","./unpad.js","24","padded","25","26","min-document","27","28","restParam","FUNC_ERROR_TEXT","nativeMax","rest","otherArgs","29","arrayCopy","30","arrayEach","iteratee","31","baseCopy","32","createBaseFor","baseFor","./createBaseFor","33","baseForIn","keysIn","../object/keysIn","./baseFor","34","baseMerge","customizer","stackA","stackB","isSrcArr","isArrayLike","isTypedArray","srcValue","isObjectLike","baseMergeDeep","isCommon","../lang/isArray","../lang/isObject","../lang/isTypedArray","../object/keys","./arrayEach","./baseMergeDeep","./isArrayLike","./isObjectLike","35","mergeFunc","isPlainObject","isArguments","toPlainObject","../lang/isArguments","../lang/isPlainObject","../lang/toPlainObject","./arrayCopy","36","baseProperty","toObject","./toObject","37","bindCallback","thisArg","argCount","identity","collection","accumulator","other","../utility/identity","38","createAssigner","assigner","guard","isIterateeCall","../function/restParam","./bindCallback","./isIterateeCall","39","fromRight","keysFunc","iterable","40","getLength","./baseProperty","41","getNative","isNative","../lang/isNative","42","isLength","./getLength","./isLength","43","isHostObject","44","isIndex","reIsUint","MAX_SAFE_INTEGER","45","./isIndex","46","47","48","shimKeys","propsLength","allowIndexes","isString","objectProto","../lang/isString","49","support","unindexedChars","../support","50","propertyIsEnumerable","../internal/isArrayLike","../internal/isObjectLike","51","arrayTag","objToString","nativeIsArray","../internal/getNative","../internal/isLength","52","funcTag","./isObject","53","reIsNative","fnToString","reIsHostCtor","../internal/isHostObject","./isFunction","54","55","Ctor","objectTag","ownLast","subValue","../internal/baseForIn","./isArguments","56","stringTag","57","typedArrayTags","argsTag","boolTag","dateTag","errorTag","mapTag","numberTag","regexpTag","setTag","weakMapTag","arrayBufferTag","float32Tag","float64Tag","int8Tag","int16Tag","int32Tag","uint8Tag","uint8ClampedTag","uint16Tag","uint32Tag","58","../internal/baseCopy","59","nativeKeys","enumPrototypes","../internal/shimKeys","60","isProto","skipIndexes","skipErrorProps","enumErrorProps","errorProto","skipProto","nonEnumShadows","stringProto","nonEnums","nonEnumProps","shadowProps","nonEnum","toLocaleString","valueOf","../internal/arrayEach","../internal/isIndex","../lang/isFunction","61","merge","../internal/baseMerge","../internal/createAssigner","62","arrayProto","0","spliceObjects","63","64","_lineStream","_lineStream2","_parseStream","_parseStream2","_parser","_parser2","LineStream","ParseStream","./line-stream","./parse-stream","./parser","65","nextNewline","66","attributeSeparator","keyvalue","parseAttributes","line","tagType","number","playlistType","allowed","URI","BYTERANGE","_attributes$BYTERANGE$split","_attributes$BYTERANGE$split2","_length","dateTimeString","IV","67","_lodashCompatObjectMerge","_lodashCompatObjectMerge2","lineStream","parseStream","pipe","uris","currentUri","currentMap","defaultMediaGroups","allowCache","entry","rendition","allow-cache","endlist","inf","METHOD","media-sequence","discontinuity-sequence","playlist-type","stream-inf","TYPE","NAME","mediaGroupType","DEFAULT","autoselect","AUTOSELECT","LANGUAGE","instreamId","program-date-time","targetduration","totalduration","cue-out","cue-out-cont","cue-in","cueIn","comment","chunk","lodash-compat/object/merge","68","69","AacStream","everything","timeStamp","setTimestamp","timestamp","parseId3TagSize","header","byteIndex","returnSize","flags","footerPresent","parseAdtsSize","lowThree","middle","highTwo","bytesLeft","packet","tempLength","frameSize","charCodeAt","pts","../utils/stream.js","70","ADTS_SAMPLING_FREQUENCIES","parseSyncSafeInteger","percentEncode","parseIso88591","unescape","parseType","parseSampleRate","parseAacTimestamp","frameStart","frame","frameHeader","owner","size","71","AdtsStream","frameLength","protectionSkipBytes","frameEnd","oldBuffer","sampleCount","adtsFrameDuration","frameNum","audioobjecttype","channelcount","samplerate","samplingfrequencyindex","samplesize","72","H264Stream","NalByteStream","PROFILES_WITH_OPTIONAL_SPS_DATA","ExpGolomb","swapBuffer","100","110","122","244","83","86","118","128","138","139","134","trackId","currentPts","currentDts","discardEmulationPreventionBytes","readSequenceParameterSet","skipScalingList","nalByteStream","nalUnitType","escapedRBSP","expGolombDecoder","deltaScale","lastScale","nextScale","readExpGolomb","newLength","newData","emulationPreventionBytesPositions","sourceIndex","profileIdc","levelIdc","profileCompatibility","chromaFormatIdc","picOrderCntType","numRefFramesInPicOrderCntCycle","picWidthInMbsMinus1","picHeightInMapUnitsMinus1","frameMbsOnlyFlag","scalingListCount","sarRatio","aspectRatioIdc","frameCropLeftOffset","frameCropRightOffset","frameCropTopOffset","frameCropBottomOffset","sarScale","readUnsignedByte","skipUnsignedExpGolomb","readUnsignedExpGolomb","skipBits","readBoolean","skipExpGolomb","readBits","../utils/exp-golomb.js","73","CoalesceStream","numberOfTracks","metadataStream","videoTags","audioTags","videoTrack","pendingCaptions","pendingMetadata","pendingTracks","processedTracks","output","frames","tags","flushSource","id3","caption","timelineStartPts","timelineStartInfo","startPts","endPts","cueTime","dispatchType","74","FlvTag","extraData","adHoc","bufferStartSize","prepareWrite","flv","minLength","widthBytes","heightBytes","videocodecidBytes","keyFrame","VIDEO_TAG","AUDIO_TAG","METADATA_TAG","writeBytes","writeByte","byte","writeShort","short","setUint16","negIndex","pos","nalUnitSize","startNalUnit","endNalUnit","nalContainer","nalStart","nalLength","setUint32","writeMetaDataDouble","setFloat64","writeMetaDataBoolean","setUint8","finalize","dtsDelta","frameTime","isAudioFrame","isVideoFrame","isMetaData","isKeyFrame","75","Transmuxer","./flv-tag","./transmuxer","76","VideoSegmentStream","AudioSegmentStream","collectTimelineInfo","metaDataTag","extraDataTag","m2ts","sps","pps","oldExtraData","adtsFrames","currentFrame","adtsFrame","lastMetaPts","h264Frame","nalUnits","finishFrame","newMetadata","currentNal","packetStream","elementaryStream","videoTimestampRolloverStream","audioTimestampRolloverStream","timedMetadataTimestampRolloverStream","adtsStream","h264Stream","videoSegmentStream","audioSegmentStream","captionStream","coalesceStream","MetadataStream","TransportPacketStream","TransportParseStream","ElementaryStream","TimestampRolloverStream","CaptionStream","getFlvHeader","metadataLength","headBytes","../codecs/adts.js","../codecs/h264","../m2ts/m2ts.js","./coalesce-stream.js","./flv-tag.js","77","USER_DATA_REGISTERED_ITU_T_T35","RBSP_TRAILING_BITS","parseSei","payloadType","payloadSize","payload","parseUserData","sei","parseCaptionPackets","userData","ccData","captionPackets_","field1_","Cea608Stream","idx","presortIndex","BASIC_CHARACTER_TRANSLATION","92","94","95","96","123","124","125","126","127","getCharFromCode","RESUME_CAPTION_LOADING","END_OF_CAPTION","ROLL_UP_2_ROWS","ROLL_UP_3_ROWS","ROLL_UP_4_ROWS","CARRIAGE_RETURN","BACKSPACE","ERASE_DISPLAYED_MEMORY","ERASE_NON_DISPLAYED_MEMORY","BOTTOM_ROW","createDisplayBuffer","topRow_","startPts_","displayed_","nonDisplayed_","lastControlCode_","swap","char0","char1","flushDisplayed","shiftRowsUp_","popOn","baseRow","rollUp","../utils/stream","78","StreamTypes","m2tsStreamTypes","MP2T_PACKET_LENGTH","SYNC_BYTE","bytesInBuffer","parsePsi","parsePat","parsePmt","packetsWaitingForPmt","programMapTable","psi","payloadUnitStartIndicator","pat","section_number","last_section_number","pmtPid","pmt","sectionLength","tableEnd","programInfoLength","processPes_","pid","streamType","STREAM_TYPES","h264","adts","timedMetadata","parsePes","pes","ptsDtsFlags","dataAlignmentIndicator","flushStream","fragment","packetData","H264_STREAM_TYPE","ADTS_STREAM_TYPE","METADATA_STREAM_TYPE","baseMediaDecodeTime","codec","PAT_PID","./caption-stream","./metadata-stream","./stream-types","./stream-types.js","./timestamp-rollover-stream","79","parseUtf8","decodeURIComponent","tagParsers","TXXX","WXXX","PRIV","privateData","tagSize","bufferSize","80","parsePid","parsePayloadUnitStartIndicator","parseAdaptionField","pusi","payloadOffset","parsePesType","parsePesTime","parseNalUnitType","videoPacketContainsKeyFrame","nalType","frameBuffer","frameI","frameSyncPoint","foundKeyFrame","81","82","MAX_TS","RO_THRESH","handleRollover","reference","direction","lastDTS","referenceDTS","type_","generator","./mp4-generator","84","dinf","esds","ftyp","mdat","mfhd","minf","moof","moov","mvex","mvhd","trak","tkhd","mdia","mdhd","hdlr","sdtp","stbl","stsd","traf","trex","trun","MAJOR_BRAND","MINOR_VERSION","AVC1_BRAND","VIDEO_HDLR","AUDIO_HDLR","HDLR_TYPES","VMHD","SMHD","DREF","STCO","STSC","STSZ","STTS","UINT32_MAX","avc1","avcC","btrt","dref","mp4a","smhd","stco","stsc","stsz","stts","styp","tfdt","tfhd","vmhd","sequenceNumber","trackFragments","boxes","samples","dependsOn","isDependedOn","videoSample","audioSample","sequenceParameterSets","pictureParameterSets","trackFragmentHeader","trackFragmentDecodeTime","trackFragmentRun","sampleDependencyTable","dataOffset","upperWordBaseMediaDecodeTime","lowerWordBaseMediaDecodeTime","audioTrun","videoTrun","trunHeader","durationPresent","sizePresent","flagsPresent","compositionTimeOffset","sample","isLeading","hasRedundancy","paddingValue","isNonSyncSample","degradationPriority","fileType","85","findBox","subresults","traks","trafs","baseTimes","baseTime","createDefaultSample","isLikelyAacData","collectDtsInfo","clearDtsInfo","calculateTrackBaseMediaDecodeTime","arrayEquals","sumFrameByteLengths","mp4","AUDIO_PROPERTIES","VIDEO_PROPERTIES","currentObj","sum","earliestAllowedDts","setEarliestDts","earliestDts","trimAdtsFramesByEarliestDts_","generateSampleTable_","concatenateFrameData_","minSegmentDts","minSegmentPts","minPTS","gopCache_","nalUnit","gopForFusion","gops","resetStream_","groupNalsIntoFrames_","groupFramesIntoGops_","getGopForFusion_","nalCount","extendFirstKeyFrame_","concatenateNalData_","gop","dtsDistance","nearestGopObj","currentGop","currentGopObj","halfSecond","allowableOverlap","nearestDistance","baseDataOffset","nalsByteLength","numberOfNals","totalByteLength","maxSegmentPts","maxSegmentDts","oneSecondInTS","timeSinceStartOfTimeline","remux","remuxTracks","pendingBoxes","pendingBytes","emittedTracks","hasFlushed","transmuxPipeline_","setupAacPipeline","pipeline","aacStream","headOfPipeline","setupTsPipeline","setBaseMediaDecodeTime","isAac","../aac","./mp4-generator.js","87","probe","ts","aac","PES_TIMESCALE","parsePsi_","parseAudioPes_","pesType","endLoop","parseVideoPes_","firstKeyFrame","adjustTimestamp_","baseTimestamp","audioBaseTimestamp","ptsTime","videoBaseTimestamp","inspectAac_","audioCount","sampleRate","audioTimescale","inspectTs_","isAacData","../aac/probe.js","../m2ts/probe.js","../m2ts/stream-types.js","../m2ts/timestamp-rollover-stream.js","88","workingData","workingBytesAvailable","workingWord","workingBitsAvailable","bitsAvailable","loadWord","workingBytes","availableBytes","skipBytes","bits","valu","skipLeadingZeros","leadingZeroCount","clz","89","90","URLToolkit","relativeURLQuery","relativeURLHash","relativeURLHashSplit","relativeURLQuerySplit","baseURLHashSplit","baseURLQuerySplit","baseURLDomainSplit","baseURLProtocol","baseURLProtocolDomain","baseURLPath","builtURL","buildAbsolutePath","basePath","relativePath","nUpLn","nEnd","sRelPath","sDir","sPath","nStart","substr","91","deprecateOldCue","durationOfVideo","dur","MAX_VALUE","addTextTrackData","sourceHandler","captionArray","metadataArray","Cue","WebKitDataCue","inbandTextTrack_","videoDuration","metadataTrack_","cuesArray","removeExistingTrack","cleanupTextTracks","93","isAudioCodec","isVideoCodec","parseContentType","parameters","parameter","pair","_name","_cleanupTextTracks","createTextTracksIfNecessary","sourceBuffer","./cleanup-text-tracks","flashConstants","TIME_BETWEEN_CHUNKS","BYTES_PER_CHUNK","_globalDocument","_globalDocument2","_flashSourceBuffer","_flashSourceBuffer2","_flashConstants","_flashConstants2","_codecUtils","FlashMediaSource","sourceBuffers","swfObj","swfId","parsedType","vjs_endOfStream","./codec-utils","./flash-constants","./flash-source-buffer","global/document","97","_muxJsLibFlv","_muxJsLibFlv2","_removeCuesFromTrack","_removeCuesFromTrack2","_createTextTracksIfNecessary","_createTextTracksIfNecessary2","_addTextTrackData","scheduleTick","toDecimalPlaces","places","FlashSourceBuffer","encodedHeader","chunkSize_","buffer_","bufferSize_","basePtsOffset_","segmentParser_","receiveBuffer_","btoa","vjs_appendBuffer","vjs_discontinuity","chunkInData","vjs_abort","flvBytes","convertTagsToData_","processBuffer_","chunkSize","binary","b64str","CallFunction","segmentData","segmentByteLength","targetPts","filteredTags","getOrderedTags_","./add-text-track-data","./create-text-tracks-if-necessary","./remove-cues-from-track","mux.js/lib/flv","98","_virtualSourceBuffer","_virtualSourceBuffer2","translateLegacyCodecs","orig","profile","avcLevel","profileHex","avcLevelHex","HtmlMediaSource","nativeMediaSource_","activeSourceBuffers_","updateActiveSourceBuffers_","combined","audioOnly","appendAudioInitSegment_","videoCodec_","audioCodec_","audioDisabled_","onPlayerMediachange_","url_","sourcebuffer","transmuxer_","terminate","createRealSourceBuffers_","./virtual-source-buffer","99","removeCuesFromTrack","_muxJsLibMp4","_muxJsLibMp42","wireTransmuxerEvents","transmuxer","initArray","typedArray","postMessage","MessageHandlers","Worker","onmessage","messageHandlers","mux.js/lib/mp4","101","_flashMediaSource","_flashMediaSource2","_htmlMediaSource","_htmlMediaSource2","urlCount","mediaSources","msObjectURL","supportsNativeMediaSources","URL","createObjectURL","objectUrlPrefix","./flash-media-source","./html-media-source","102","_webworkify","_webworkify2","_transmuxerWorker","_transmuxerWorker2","VirtualSourceBuffer","pendingBuffers_","bufferUpdating_","codecs_","data_","done_","videoBuffer_","audioBuffer_","appendWindowStart","videoBuffered","audioBuffered","processPendingSegments_","shouldTrigger","sortedSegments","segmentObj","concatAndAppendSegments_","destinationBuffer","tempBuffer","./transmuxer-worker","webworkify","103","bundleFn","cache","wkey","cacheKeys","random","wcache","skey","scache","webkitURL","mozURL","msURL","Blob","104","_playlist2","_binUtils","_binUtils2","_videojsContribMediaSources","_masterPlaylistController","_renditionMixin","_renditionMixin2","_playbackWatcher","_playbackWatcher2","_reloadSourceOnError","_reloadSourceOnError2","BANDWIDTH_VARIANCE","safeGetComputedStyle","STANDARD_PLAYLIST_SELECTOR","effectiveBitrate","sortedPlaylists","bandwidthPlaylists","bandwidthBestVariant","resolutionPlusOne","resolutionPlusOneAttribute","resolutionBestVariant","comparePlaylistBandwidth","localVariant","systemBandwidth","comparePlaylistResolution","variantResolution","supportsNativeHls","canPlay","canItPlay","firefoxVersionMap","HlsHandler","source_","stats","ignoreNextSeekingEvent_","setOptions_","webkitFullscreenElement","mozFullScreenElement","msFullscreenElement","pauseLoading","audioTrackChange_","option","playbackWatcher_","invBandwidth","invThroughput","systemBitrate","mediaRequests_","mediaTransferDuration_","mediaBytesTransferred_","mediaSecondsLoaded_","HlsSourceHandler","leftBandwidth","rightBandwidth","leftWidth","rightWidth","overrideNative","m3u8","./bin-utils","./master-playlist-controller","./playback-watcher","./reload-source-on-error","./rendition-mixin","./xhr","videojs-contrib-media-sources","setSourcesSanitized","customSourcePicker","currentResolution","res","videoJsResolutionSwitcher","menuItemsHolder","ResolutionMenuItem","onClickListener","onClick","initialySelected","showAsLabel","isPaused","bigPlayButton","handleSeekEvent","ResolutionMenuButton","initialySelectedLabel","dynamicLabel","staticLabel","menuItems","labels","onClickUnselectOthers","clickedItem","compareResolutions","bucketSources","resolutions","initResolutionKey","appendSourceToKey","chooseSrc","groupedSrc","selectedRes","selectedLabel","initResolutionForYt","ytPlayer","setPlaybackQuality","qualities","getAvailableQualityLevels","_yts","highres","yt","hd1080","hd720","large","medium","small","tiny","auto","_sources","q","_yt","_customSourcePicker","_label","choosen","menuButton","initialySelectedRes","resolutionSwitcher","initResolutionForHLS","selectedResolution","_selectPlaylist","updateSrc","_options","getGroupedSrc","wjplayer","WJPlayer","containerId","playerType","sourcesWithRes","pathToSwf","volumeStyle","stretch","skin","classes","enableResolutionSwitcher","IS_MOBILE","hlsjsConfig","volumeMenuButton","defaultQuality","createPlayer","share","Share Video","Direct Link","Embed Code","panorama","canvas","handleResize","loadingSpinner","placeholder","initAds","qualityPickerPlugin","dumbPlayer","crossorigin","adsManagerLoadedCallback","imaContainer"],"mappings":"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","file":"wjplayer.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"wjplayer\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"wjplayer\"] = factory();\n\telse\n\t\troot[\"wjplayer\"] = factory();\n})(this, function() {\nreturn \n\n\n/** WEBPACK FOOTER **\n ** webpack/universalModuleDefinition\n **/","(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"wjplayer\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"wjplayer\"] = factory();\n\telse\n\t\troot[\"wjplayer\"] = factory();\n})(this, function() {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\t__webpack_require__(1);\n\t\n\t__webpack_require__(113);\n\t\n\t__webpack_require__(114);\n\t\n\tvar _wjplayer = __webpack_require__(115);\n\t\n\tvar _wjplayer2 = _interopRequireDefault(_wjplayer);\n\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n\texports.default = _wjplayer2.default;\n\tmodule.exports = exports['default'];\n\n/***/ },\n/* 1 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\t__webpack_require__(2);\n\t\n\t__webpack_require__(108);\n\t\n\t__webpack_require__(109);\n\t\n\t__webpack_require__(110);\n\t\n\t__webpack_require__(111);\n\t\n\t__webpack_require__(112);\n\n/***/ },\n/* 2 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/* WEBPACK VAR INJECTION */(function(global) {module.exports = global[\"videojs\"] = __webpack_require__(3);\n\t/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }())))\n\n/***/ },\n/* 3 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;'use strict';\n\t\n\texports.__esModule = true;\n\t\n\tvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; /**\n\t                                                                                                                                                                                                                                                                               * @file video.js\n\t                                                                                                                                                                                                                                                                               * @module videojs\n\t                                                                                                                                                                                                                                                                               */\n\t\n\t/* global define */\n\t\n\t// Include the built-in techs\n\t\n\t\n\tvar _window = __webpack_require__(4);\n\t\n\tvar _window2 = _interopRequireDefault(_window);\n\t\n\tvar _document = __webpack_require__(5);\n\t\n\tvar _document2 = _interopRequireDefault(_document);\n\t\n\tvar _setup = __webpack_require__(7);\n\t\n\tvar setup = _interopRequireWildcard(_setup);\n\t\n\tvar _stylesheet = __webpack_require__(15);\n\t\n\tvar stylesheet = _interopRequireWildcard(_stylesheet);\n\t\n\tvar _component = __webpack_require__(16);\n\t\n\tvar _component2 = _interopRequireDefault(_component);\n\t\n\tvar _eventTarget = __webpack_require__(20);\n\t\n\tvar _eventTarget2 = _interopRequireDefault(_eventTarget);\n\t\n\tvar _events = __webpack_require__(8);\n\t\n\tvar Events = _interopRequireWildcard(_events);\n\t\n\tvar _player = __webpack_require__(21);\n\t\n\tvar _player2 = _interopRequireDefault(_player);\n\t\n\tvar _plugins = __webpack_require__(104);\n\t\n\tvar _plugins2 = _interopRequireDefault(_plugins);\n\t\n\tvar _mergeOptions2 = __webpack_require__(19);\n\t\n\tvar _mergeOptions3 = _interopRequireDefault(_mergeOptions2);\n\t\n\tvar _fn = __webpack_require__(17);\n\t\n\tvar Fn = _interopRequireWildcard(_fn);\n\t\n\tvar _textTrack = __webpack_require__(31);\n\t\n\tvar _textTrack2 = _interopRequireDefault(_textTrack);\n\t\n\tvar _audioTrack = __webpack_require__(105);\n\t\n\tvar _audioTrack2 = _interopRequireDefault(_audioTrack);\n\t\n\tvar _videoTrack = __webpack_require__(106);\n\t\n\tvar _videoTrack2 = _interopRequireDefault(_videoTrack);\n\t\n\tvar _timeRanges = __webpack_require__(22);\n\t\n\tvar _formatTime = __webpack_require__(61);\n\t\n\tvar _formatTime2 = _interopRequireDefault(_formatTime);\n\t\n\tvar _log = __webpack_require__(11);\n\t\n\tvar _log2 = _interopRequireDefault(_log);\n\t\n\tvar _dom = __webpack_require__(9);\n\t\n\tvar Dom = _interopRequireWildcard(_dom);\n\t\n\tvar _browser = __webpack_require__(12);\n\t\n\tvar browser = _interopRequireWildcard(_browser);\n\t\n\tvar _url = __webpack_require__(35);\n\t\n\tvar Url = _interopRequireWildcard(_url);\n\t\n\tvar _obj = __webpack_require__(13);\n\t\n\tvar _computedStyle = __webpack_require__(69);\n\t\n\tvar _computedStyle2 = _interopRequireDefault(_computedStyle);\n\t\n\tvar _extend = __webpack_require__(107);\n\t\n\tvar _extend2 = _interopRequireDefault(_extend);\n\t\n\tvar _xhr = __webpack_require__(36);\n\t\n\tvar _xhr2 = _interopRequireDefault(_xhr);\n\t\n\tvar _tech = __webpack_require__(29);\n\t\n\tvar _tech2 = _interopRequireDefault(_tech);\n\t\n\tfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj['default'] = obj; return newObj; } }\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\t\n\t// HTML5 Element Shim for IE8\n\tif (typeof HTMLVideoElement === 'undefined' && _window2['default'].document && _window2['default'].document.createElement) {\n\t  _document2['default'].createElement('video');\n\t  _document2['default'].createElement('audio');\n\t  _document2['default'].createElement('track');\n\t}\n\t\n\t/**\n\t * Doubles as the main function for users to create a player instance and also\n\t * the main library object.\n\t * The `videojs` function can be used to initialize or retrieve a player.\n\t * ```js\n\t *   var myPlayer = videojs('my_video_id');\n\t * ```\n\t *\n\t * @param {string|Element} id\n\t *        Video element or video element ID\n\t *\n\t * @param {Object} [options]\n\t *        Optional options object for config/settings\n\t *\n\t * @param {Component~ReadyCallback} [ready]\n\t *        Optional ready callback\n\t *\n\t * @return {Player}\n\t *         A player instance\n\t *\n\t * @mixes videojs\n\t */\n\tfunction videojs(id, options, ready) {\n\t  var tag = void 0;\n\t\n\t  options = options || {};\n\t\n\t  // Allow for element or ID to be passed in\n\t  // String ID\n\t  if (typeof id === 'string') {\n\t\n\t    // Adjust for jQuery ID syntax\n\t    if (id.indexOf('#') === 0) {\n\t      id = id.slice(1);\n\t    }\n\t\n\t    // If a player instance has already been created for this ID return it.\n\t    if (videojs.getPlayers()[id]) {\n\t\n\t      // If options or ready funtion are passed, warn\n\t      if (options) {\n\t        _log2['default'].warn('Player \"' + id + '\" is already initialised. Options will not be applied.');\n\t      }\n\t\n\t      if (ready) {\n\t        videojs.getPlayers()[id].ready(ready);\n\t      }\n\t\n\t      return videojs.getPlayers()[id];\n\t    }\n\t\n\t    // Otherwise get element for ID\n\t    tag = Dom.getEl(id);\n\t\n\t    // ID is a media element\n\t  } else {\n\t    tag = id;\n\t  }\n\t\n\t  // Check for a useable element\n\t  // re: nodeName, could be a box div also\n\t  if (!tag || !tag.nodeName) {\n\t    throw new TypeError('The element or ID supplied is not valid. (videojs)');\n\t  }\n\t\n\t  // Element may have a player attr referring to an already created player instance.\n\t  // If so return that otherwise set up a new player below\n\t  if (tag.player || _player2['default'].players[tag.playerId]) {\n\t    return tag.player || _player2['default'].players[tag.playerId];\n\t  }\n\t\n\t  videojs.hooks('beforesetup').forEach(function (hookFunction) {\n\t    var opts = hookFunction(tag, (0, _mergeOptions3['default'])(options));\n\t\n\t    if (!(0, _obj.isObject)(opts) || Array.isArray(opts)) {\n\t      videojs.log.error('please return an object in beforesetup hooks');\n\t      return;\n\t    }\n\t\n\t    options = (0, _mergeOptions3['default'])(options, opts);\n\t  });\n\t\n\t  var PlayerComponent = _component2['default'].getComponent('Player');\n\t  // If not, set up a new player\n\t  var player = new PlayerComponent(tag, options, ready);\n\t\n\t  videojs.hooks('setup').forEach(function (hookFunction) {\n\t    return hookFunction(player);\n\t  });\n\t\n\t  return player;\n\t}\n\t\n\t/**\n\t * An Object that contains lifecycle hooks as keys which point to an array\n\t * of functions that are run when a lifecycle is triggered\n\t */\n\tvideojs.hooks_ = {};\n\t\n\t/**\n\t * Get a list of hooks for a specific lifecycle\n\t *\n\t * @param {string} type\n\t *        the lifecyle to get hooks from\n\t *\n\t * @param {Function} [fn]\n\t *        Optionally add a hook to the lifecycle that your are getting.\n\t *\n\t * @return {Array}\n\t *         an array of hooks, or an empty array if there are none.\n\t */\n\tvideojs.hooks = function (type, fn) {\n\t  videojs.hooks_[type] = videojs.hooks_[type] || [];\n\t  if (fn) {\n\t    videojs.hooks_[type] = videojs.hooks_[type].concat(fn);\n\t  }\n\t  return videojs.hooks_[type];\n\t};\n\t\n\t/**\n\t * Add a function hook to a specific videojs lifecycle.\n\t *\n\t * @param {string} type\n\t *        the lifecycle to hook the function to.\n\t *\n\t * @param {Function|Function[]}\n\t *        The function or array of functions to attach.\n\t */\n\tvideojs.hook = function (type, fn) {\n\t  videojs.hooks(type, fn);\n\t};\n\t\n\t/**\n\t * Remove a hook from a specific videojs lifecycle.\n\t *\n\t * @param {string} type\n\t *        the lifecycle that the function hooked to\n\t *\n\t * @param {Function} fn\n\t *        The hooked function to remove\n\t *\n\t * @return {boolean}\n\t *         The function that was removed or undef\n\t */\n\tvideojs.removeHook = function (type, fn) {\n\t  var index = videojs.hooks(type).indexOf(fn);\n\t\n\t  if (index <= -1) {\n\t    return false;\n\t  }\n\t\n\t  videojs.hooks_[type] = videojs.hooks_[type].slice();\n\t  videojs.hooks_[type].splice(index, 1);\n\t\n\t  return true;\n\t};\n\t\n\t// Add default styles\n\tif (_window2['default'].VIDEOJS_NO_DYNAMIC_STYLE !== true) {\n\t  var style = Dom.$('.vjs-styles-defaults');\n\t\n\t  if (!style) {\n\t    style = stylesheet.createStyleElement('vjs-styles-defaults');\n\t    var head = Dom.$('head');\n\t\n\t    if (head) {\n\t      head.insertBefore(style, head.firstChild);\n\t    }\n\t    stylesheet.setTextContent(style, '\\n      .video-js {\\n        width: 300px;\\n        height: 150px;\\n      }\\n\\n      .vjs-fluid {\\n        padding-top: 56.25%\\n      }\\n    ');\n\t  }\n\t}\n\t\n\t// Run Auto-load players\n\t// You have to wait at least once in case this script is loaded after your\n\t// video in the DOM (weird behavior only with minified version)\n\tsetup.autoSetupTimeout(1, videojs);\n\t\n\t/**\n\t * Current software version. Follows semver.\n\t *\n\t * @type {string}\n\t */\n\tvideojs.VERSION = '5.14.1';\n\t\n\t/**\n\t * The global options object. These are the settings that take effect\n\t * if no overrides are specified when the player is created.\n\t *\n\t * ```js\n\t *     videojs.options.autoplay = true\n\t *     // -> all players will autoplay by default\n\t * ```\n\t *\n\t * @type {Object}\n\t */\n\tvideojs.options = _player2['default'].prototype.options_;\n\t\n\t/**\n\t * Get an object with the currently created players, keyed by player ID\n\t *\n\t * @return {Object}\n\t *         The created players\n\t */\n\tvideojs.getPlayers = function () {\n\t  return _player2['default'].players;\n\t};\n\t\n\t/**\n\t * Expose players object.\n\t *\n\t * @memberOf videojs\n\t * @property {Object} players\n\t */\n\tvideojs.players = _player2['default'].players;\n\t\n\t/**\n\t * Get a component class object by name\n\t * ```js\n\t *     var VjsButton = videojs.getComponent('Button');\n\t *     // Create a new instance of the component\n\t *     var myButton = new VjsButton(myPlayer);\n\t * ```\n\t *\n\t * @borrows Component.getComponent as videojs.getComponent\n\t */\n\tvideojs.getComponent = _component2['default'].getComponent;\n\t\n\t/**\n\t * Register a component so it can referred to by name\n\t * Used when adding to other\n\t * components, either through addChild\n\t * `component.addChild('myComponent')`\n\t * or through default children options\n\t * `{ children: ['myComponent'] }`.\n\t * ```js\n\t *   // Get a component to subclass\n\t *   var VjsButton = videojs.getComponent('Button');\n\t *   // Subclass the component (see 'extend' doc for more info)\n\t *   var MySpecialButton = videojs.extend(VjsButton, {});\n\t *   // Register the new component\n\t *   VjsButton.registerComponent('MySepcialButton', MySepcialButton);\n\t *   // (optionally) add the new component as a default player child\n\t *   myPlayer.addChild('MySepcialButton');\n\t * ```\n\t * > NOTE: You could also just initialize the component before adding.\n\t * `component.addChild(new MyComponent());`\n\t *\n\t * @param {string} name\n\t *        The class name of the component\n\t *\n\t * @param {Component} comp\n\t *        The component class\n\t *\n\t * @return {Component}\n\t *         The newly registered component\n\t */\n\tvideojs.registerComponent = function (name, comp) {\n\t  if (_tech2['default'].isTech(comp)) {\n\t    _log2['default'].warn('The ' + name + ' tech was registered as a component. It should instead be registered using videojs.registerTech(name, tech)');\n\t  }\n\t\n\t  _component2['default'].registerComponent.call(_component2['default'], name, comp);\n\t};\n\t\n\t/**\n\t * Get a Tech class object by name\n\t * ```js\n\t *   var Html5 = videojs.getTech('Html5');\n\t *   // Create a new instance of the component\n\t *   var html5 = new Html5(options);\n\t * ```\n\t *\n\t * @borrows Tech.getTech as videojs.getTech\n\t */\n\tvideojs.getTech = _tech2['default'].getTech;\n\t\n\t/**\n\t * Register a Tech so it can referred to by name.\n\t * This is used in the tech order for the player.\n\t *\n\t * ```js\n\t *     // get the Html5 Tech\n\t *     var Html5 = videojs.getTech('Html5');\n\t *     var MyTech = videojs.extend(Html5, {});\n\t *     // Register the new Tech\n\t *     VjsButton.registerTech('Tech', MyTech);\n\t *     var player = videojs('myplayer', {\n\t *       techOrder: ['myTech', 'html5']\n\t *     });\n\t * ```\n\t *\n\t * @borrows Tech.registerTech as videojs.registerTech\n\t */\n\tvideojs.registerTech = _tech2['default'].registerTech;\n\t\n\t/**\n\t * A suite of browser and device tests from {@link browser}.\n\t *\n\t * @type {Object}\n\t * @private\n\t */\n\tvideojs.browser = browser;\n\t\n\t/**\n\t * Whether or not the browser supports touch events. Included for backward\n\t * compatibility with 4.x, but deprecated. Use `videojs.browser.TOUCH_ENABLED`\n\t * instead going forward.\n\t *\n\t * @deprecated since version 5.0\n\t * @type {boolean}\n\t */\n\tvideojs.TOUCH_ENABLED = browser.TOUCH_ENABLED;\n\t\n\t/**\n\t * Subclass an existing class\n\t * Mimics ES6 subclassing with the `extend` keyword\n\t * ```js\n\t *     // Create a basic javascript 'class'\n\t *     function MyClass(name) {\n\t *       // Set a property at initialization\n\t *       this.myName = name;\n\t *     }\n\t *     // Create an instance method\n\t *     MyClass.prototype.sayMyName = function() {\n\t *       alert(this.myName);\n\t *     };\n\t *     // Subclass the exisitng class and change the name\n\t *     // when initializing\n\t *     var MySubClass = videojs.extend(MyClass, {\n\t *       constructor: function(name) {\n\t *         // Call the super class constructor for the subclass\n\t *         MyClass.call(this, name)\n\t *       }\n\t *     });\n\t *     // Create an instance of the new sub class\n\t *     var myInstance = new MySubClass('John');\n\t *     myInstance.sayMyName(); // -> should alert \"John\"\n\t * ```\n\t *\n\t * @borrows extend:extendFn as videojs.extend\n\t */\n\tvideojs.extend = _extend2['default'];\n\t\n\t/**\n\t * Merge two options objects recursively\n\t * Performs a deep merge like lodash.merge but **only merges plain objects**\n\t * (not arrays, elements, anything else)\n\t * Other values will be copied directly from the second object.\n\t * ```js\n\t *     var defaultOptions = {\n\t *       foo: true,\n\t *       bar: {\n\t *         a: true,\n\t *         b: [1,2,3]\n\t *       }\n\t *     };\n\t *     var newOptions = {\n\t *       foo: false,\n\t *       bar: {\n\t *         b: [4,5,6]\n\t *       }\n\t *     };\n\t *     var result = videojs.mergeOptions(defaultOptions, newOptions);\n\t *     // result.foo = false;\n\t *     // result.bar.a = true;\n\t *     // result.bar.b = [4,5,6];\n\t * ```\n\t *\n\t * @borrows merge-options:mergeOptions as videojs.mergeOptions\n\t */\n\tvideojs.mergeOptions = _mergeOptions3['default'];\n\t\n\t/**\n\t * Change the context (this) of a function\n\t *\n\t * ``` js\n\t *     videojs.bind(newContext, function() {\n\t *       this === newContext\n\t *     });\n\t * ```\n\t *\n\t * > NOTE: as of v5.0 we require an ES5 shim, so you should use the native\n\t * `function() {}.bind(newContext);` instead of this.\n\t *\n\t * @borrows fn:bind as videojs.bind\n\t */\n\tvideojs.bind = Fn.bind;\n\t\n\t/**\n\t * Create a Video.js player plugin.\n\t * Plugins are only initialized when options for the plugin are included\n\t * in the player options, or the plugin function on the player instance is\n\t * called.\n\t * **See the plugin guide in the docs for a more detailed example**\n\t * ```js\n\t *     // Make a plugin that alerts when the player plays\n\t *     videojs.plugin('myPlugin', function(myPluginOptions) {\n\t *       myPluginOptions = myPluginOptions || {};\n\t *\n\t *       var player = this;\n\t *       var alertText = myPluginOptions.text || 'Player is playing!'\n\t *\n\t *       player.on('play', function() {\n\t *         alert(alertText);\n\t *       });\n\t *     });\n\t *     // USAGE EXAMPLES\n\t *     // EXAMPLE 1: New player with plugin options, call plugin immediately\n\t *     var player1 = videojs('idOne', {\n\t *       myPlugin: {\n\t *         text: 'Custom text!'\n\t *       }\n\t *     });\n\t *     // Click play\n\t *     // --> Should alert 'Custom text!'\n\t *     // EXAMPLE 3: New player, initialize plugin later\n\t *     var player3 = videojs('idThree');\n\t *     // Click play\n\t *     // --> NO ALERT\n\t *     // Click pause\n\t *     // Initialize plugin using the plugin function on the player instance\n\t *     player3.myPlugin({\n\t *       text: 'Plugin added later!'\n\t *     });\n\t *     // Click play\n\t *     // --> Should alert 'Plugin added later!'\n\t * ```\n\t *\n\t * @borrows plugin:plugin as videojs.plugin\n\t */\n\tvideojs.plugin = _plugins2['default'];\n\t\n\t/**\n\t * Adding languages so that they're available to all players.\n\t * ```js\n\t *   videojs.addLanguage('es', { 'Hello': 'Hola' });\n\t * ```\n\t *\n\t * @param {string} code\n\t *        The language code or dictionary property\n\t *\n\t * @param {Object} data\n\t *        The data values to be translated\n\t *\n\t * @return {Object}\n\t *         The resulting language dictionary object\n\t */\n\tvideojs.addLanguage = function (code, data) {\n\t  var _mergeOptions;\n\t\n\t  code = ('' + code).toLowerCase();\n\t\n\t  videojs.options.languages = (0, _mergeOptions3['default'])(videojs.options.languages, (_mergeOptions = {}, _mergeOptions[code] = data, _mergeOptions));\n\t\n\t  return videojs.options.languages[code];\n\t};\n\t\n\t/**\n\t * Log messages\n\t *\n\t * @borrows log:log as videojs.log\n\t */\n\tvideojs.log = _log2['default'];\n\t\n\t/**\n\t * Creates an emulated TimeRange object.\n\t *\n\t * @borrows time-ranges:createTimeRanges as videojs.createTimeRange\n\t */\n\t/**\n\t * @borrows time-ranges:createTimeRanges as videojs.createTimeRanges\n\t */\n\tvideojs.createTimeRange = videojs.createTimeRanges = _timeRanges.createTimeRanges;\n\t\n\t/**\n\t * Format seconds as a time string, H:MM:SS or M:SS\n\t * Supplying a guide (in seconds) will force a number of leading zeros\n\t * to cover the length of the guide\n\t *\n\t * @borrows format-time:formatTime as videojs.formatTime\n\t */\n\tvideojs.formatTime = _formatTime2['default'];\n\t\n\t/**\n\t * Resolve and parse the elements of a URL\n\t *\n\t * @borrows url:parseUrl as videojs.parseUrl\n\t */\n\tvideojs.parseUrl = Url.parseUrl;\n\t\n\t/**\n\t * Returns whether the url passed is a cross domain request or not.\n\t *\n\t * @borrows url:isCrossOrigin as videojs.isCrossOrigin\n\t */\n\tvideojs.isCrossOrigin = Url.isCrossOrigin;\n\t\n\t/**\n\t * Event target class.\n\t *\n\t * @borrows EventTarget as videojs.EventTarget\n\t */\n\tvideojs.EventTarget = _eventTarget2['default'];\n\t\n\t/**\n\t * Add an event listener to element\n\t * It stores the handler function in a separate cache object\n\t * and adds a generic handler to the element's event,\n\t * along with a unique id (guid) to the element.\n\t *\n\t * @borrows events:on as videojs.on\n\t */\n\tvideojs.on = Events.on;\n\t\n\t/**\n\t * Trigger a listener only once for an event\n\t *\n\t * @borrows events:one as videojs.one\n\t */\n\tvideojs.one = Events.one;\n\t\n\t/**\n\t * Removes event listeners from an element\n\t *\n\t * @borrows events:off as videojs.off\n\t */\n\tvideojs.off = Events.off;\n\t\n\t/**\n\t * Trigger an event for an element\n\t *\n\t * @borrows events:trigger as videojs.trigger\n\t */\n\tvideojs.trigger = Events.trigger;\n\t\n\t/**\n\t * A cross-browser XMLHttpRequest wrapper. Here's a simple example:\n\t *\n\t * ```js\n\t *     videojs.xhr({\n\t *       body: someJSONString,\n\t *       uri: \"/foo\",\n\t *       headers: {\n\t *         \"Content-Type\": \"application/json\"\n\t *       }\n\t *     }, function (err, resp, body) {\n\t *       // check resp.statusCode\n\t *     });\n\t * ```\n\t *\n\t * @param {Object} options\n\t *        settings for the request.\n\t *\n\t * @return {XMLHttpRequest|XDomainRequest}\n\t *         The request object.\n\t *\n\t * @see https://github.com/Raynos/xhr\n\t */\n\tvideojs.xhr = _xhr2['default'];\n\t\n\t/**\n\t * TextTrack class\n\t *\n\t * @borrows TextTrack as videojs.TextTrack\n\t */\n\tvideojs.TextTrack = _textTrack2['default'];\n\t\n\t/**\n\t * export the AudioTrack class so that source handlers can create\n\t * AudioTracks and then add them to the players AudioTrackList\n\t *\n\t * @borrows AudioTrack as videojs.AudioTrack\n\t */\n\tvideojs.AudioTrack = _audioTrack2['default'];\n\t\n\t/**\n\t * export the VideoTrack class so that source handlers can create\n\t * VideoTracks and then add them to the players VideoTrackList\n\t *\n\t * @borrows VideoTrack as videojs.VideoTrack\n\t */\n\tvideojs.VideoTrack = _videoTrack2['default'];\n\t\n\t/**\n\t * Determines, via duck typing, whether or not a value is a DOM element.\n\t *\n\t * @borrows dom:isEl as videojs.isEl\n\t */\n\tvideojs.isEl = Dom.isEl;\n\t\n\t/**\n\t * Determines, via duck typing, whether or not a value is a text node.\n\t *\n\t * @borrows dom:isTextNode as videojs.isTextNode\n\t */\n\tvideojs.isTextNode = Dom.isTextNode;\n\t\n\t/**\n\t * Creates an element and applies properties.\n\t *\n\t * @borrows dom:createEl as videojs.createEl\n\t */\n\tvideojs.createEl = Dom.createEl;\n\t\n\t/**\n\t * Check if an element has a CSS class\n\t *\n\t * @borrows dom:hasElClass as videojs.hasClass\n\t */\n\tvideojs.hasClass = Dom.hasElClass;\n\t\n\t/**\n\t * Add a CSS class name to an element\n\t *\n\t * @borrows dom:addElClass as videojs.addClass\n\t */\n\tvideojs.addClass = Dom.addElClass;\n\t\n\t/**\n\t * Remove a CSS class name from an element\n\t *\n\t * @borrows dom:removeElClass as videojs.removeClass\n\t */\n\tvideojs.removeClass = Dom.removeElClass;\n\t\n\t/**\n\t * Adds or removes a CSS class name on an element depending on an optional\n\t * condition or the presence/absence of the class name.\n\t *\n\t * @borrows dom:toggleElClass as videojs.toggleClass\n\t */\n\tvideojs.toggleClass = Dom.toggleElClass;\n\t\n\t/**\n\t * Apply attributes to an HTML element.\n\t *\n\t * @borrows dom:setElAttributes as videojs.setAttribute\n\t */\n\tvideojs.setAttributes = Dom.setElAttributes;\n\t\n\t/**\n\t * Get an element's attribute values, as defined on the HTML tag\n\t * Attributes are not the same as properties. They're defined on the tag\n\t * or with setAttribute (which shouldn't be used with HTML)\n\t * This will return true or false for boolean attributes.\n\t *\n\t * @borrows dom:getElAttributes as videojs.getAttributes\n\t */\n\tvideojs.getAttributes = Dom.getElAttributes;\n\t\n\t/**\n\t * Empties the contents of an element.\n\t *\n\t * @borrows dom:emptyEl as videojs.emptyEl\n\t */\n\tvideojs.emptyEl = Dom.emptyEl;\n\t\n\t/**\n\t * Normalizes and appends content to an element.\n\t *\n\t * The content for an element can be passed in multiple types and\n\t * combinations, whose behavior is as follows:\n\t *\n\t * - String\n\t *   Normalized into a text node.\n\t *\n\t * - Element, TextNode\n\t *   Passed through.\n\t *\n\t * - Array\n\t *   A one-dimensional array of strings, elements, nodes, or functions (which\n\t *   return single strings, elements, or nodes).\n\t *\n\t * - Function\n\t *   If the sole argument, is expected to produce a string, element,\n\t *   node, or array.\n\t *\n\t * @borrows dom:appendContents as videojs.appendContet\n\t */\n\tvideojs.appendContent = Dom.appendContent;\n\t\n\t/**\n\t * Normalizes and inserts content into an element; this is identical to\n\t * `appendContent()`, except it empties the element first.\n\t *\n\t * The content for an element can be passed in multiple types and\n\t * combinations, whose behavior is as follows:\n\t *\n\t * - String\n\t *   Normalized into a text node.\n\t *\n\t * - Element, TextNode\n\t *   Passed through.\n\t *\n\t * - Array\n\t *   A one-dimensional array of strings, elements, nodes, or functions (which\n\t *   return single strings, elements, or nodes).\n\t *\n\t * - Function\n\t *   If the sole argument, is expected to produce a string, element,\n\t *   node, or array.\n\t *\n\t * @borrows dom:insertContent as videojs.insertContent\n\t */\n\tvideojs.insertContent = Dom.insertContent;\n\t\n\t/**\n\t * A safe getComputedStyle with an IE8 fallback.\n\t *\n\t * This is because in Firefox, if the player is loaded in an iframe with `display:none`,\n\t * then `getComputedStyle` returns `null`, so, we do a null-check to make sure\n\t * that the player doesn't break in these cases.\n\t * See https://bugzilla.mozilla.org/show_bug.cgi?id=548397 for more details.\n\t *\n\t * @borrows computed-style:computedStyle as videojs.computedStyle\n\t */\n\tvideojs.computedStyle = _computedStyle2['default'];\n\t\n\t/*\n\t * Custom Universal Module Definition (UMD)\n\t *\n\t * Video.js will never be a non-browser lib so we can simplify UMD a bunch and\n\t * still support requirejs and browserify. This also needs to be closure\n\t * compiler compatible, so string keys are used.\n\t */\n\tif (true) {\n\t  !(__WEBPACK_AMD_DEFINE_ARRAY__ = [], __WEBPACK_AMD_DEFINE_RESULT__ = function () {\n\t    return videojs;\n\t  }.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\t\n\t  // checking that module is an object too because of umdjs/umd#35\n\t} else if ((typeof exports === 'undefined' ? 'undefined' : _typeof(exports)) === 'object' && (typeof module === 'undefined' ? 'undefined' : _typeof(module)) === 'object') {\n\t  module.exports = videojs;\n\t}\n\t\n\texports['default'] = videojs;\n\n\n/***/ },\n/* 4 */\n/***/ function(module, exports) {\n\n\t/* WEBPACK VAR INJECTION */(function(global) {if (typeof window !== \"undefined\") {\n\t    module.exports = window;\n\t} else if (typeof global !== \"undefined\") {\n\t    module.exports = global;\n\t} else if (typeof self !== \"undefined\"){\n\t    module.exports = self;\n\t} else {\n\t    module.exports = {};\n\t}\n\t\n\t/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }())))\n\n/***/ },\n/* 5 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/* WEBPACK VAR INJECTION */(function(global) {var topLevel = typeof global !== 'undefined' ? global :\n\t    typeof window !== 'undefined' ? window : {}\n\tvar minDoc = __webpack_require__(6);\n\t\n\tif (typeof document !== 'undefined') {\n\t    module.exports = document;\n\t} else {\n\t    var doccy = topLevel['__GLOBAL_DOCUMENT_CACHE@4'];\n\t\n\t    if (!doccy) {\n\t        doccy = topLevel['__GLOBAL_DOCUMENT_CACHE@4'] = minDoc;\n\t    }\n\t\n\t    module.exports = doccy;\n\t}\n\t\n\t/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }())))\n\n/***/ },\n/* 6 */\n/***/ function(module, exports) {\n\n\t/* (ignored) */\n\n/***/ },\n/* 7 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\texports.__esModule = true;\n\texports.hasLoaded = exports.autoSetupTimeout = exports.autoSetup = undefined;\n\t\n\tvar _events = __webpack_require__(8);\n\t\n\tvar Events = _interopRequireWildcard(_events);\n\t\n\tvar _document = __webpack_require__(5);\n\t\n\tvar _document2 = _interopRequireDefault(_document);\n\t\n\tvar _window = __webpack_require__(4);\n\t\n\tvar _window2 = _interopRequireDefault(_window);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\t\n\tfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj['default'] = obj; return newObj; } }\n\t\n\tvar _windowLoaded = false; /**\n\t                            * Functions for setting up a player without user insteraction based on the data-setup\n\t                            * `attribute` of the video tag.\n\t                            *\n\t                            * @file setup.js\n\t                            * @module setup\n\t                            */\n\t\n\tvar videojs = void 0;\n\t\n\t/**\n\t * Set up any tags that have a data-setup `attribute` when the player is started.\n\t */\n\tvar autoSetup = function autoSetup() {\n\t  // One day, when we stop supporting IE8, go back to this, but in the meantime...*hack hack hack*\n\t  // var vids = Array.prototype.slice.call(document.getElementsByTagName('video'));\n\t  // var audios = Array.prototype.slice.call(document.getElementsByTagName('audio'));\n\t  // var mediaEls = vids.concat(audios);\n\t\n\t  // Because IE8 doesn't support calling slice on a node list, we need to loop\n\t  // through each list of elements to build up a new, combined list of elements.\n\t  var vids = _document2['default'].getElementsByTagName('video');\n\t  var audios = _document2['default'].getElementsByTagName('audio');\n\t  var mediaEls = [];\n\t\n\t  if (vids && vids.length > 0) {\n\t    for (var i = 0, e = vids.length; i < e; i++) {\n\t      mediaEls.push(vids[i]);\n\t    }\n\t  }\n\t\n\t  if (audios && audios.length > 0) {\n\t    for (var _i = 0, _e = audios.length; _i < _e; _i++) {\n\t      mediaEls.push(audios[_i]);\n\t    }\n\t  }\n\t\n\t  // Check if any media elements exist\n\t  if (mediaEls && mediaEls.length > 0) {\n\t\n\t    for (var _i2 = 0, _e2 = mediaEls.length; _i2 < _e2; _i2++) {\n\t      var mediaEl = mediaEls[_i2];\n\t\n\t      // Check if element exists, has getAttribute func.\n\t      // IE seems to consider typeof el.getAttribute == 'object' instead of\n\t      // 'function' like expected, at least when loading the player immediately.\n\t      if (mediaEl && mediaEl.getAttribute) {\n\t\n\t        // Make sure this player hasn't already been set up.\n\t        if (mediaEl.player === undefined) {\n\t          var options = mediaEl.getAttribute('data-setup');\n\t\n\t          // Check if data-setup attr exists.\n\t          // We only auto-setup if they've added the data-setup attr.\n\t          if (options !== null) {\n\t            // Create new video.js instance.\n\t            videojs(mediaEl);\n\t          }\n\t        }\n\t\n\t        // If getAttribute isn't defined, we need to wait for the DOM.\n\t      } else {\n\t        autoSetupTimeout(1);\n\t        break;\n\t      }\n\t    }\n\t\n\t    // No videos were found, so keep looping unless page is finished loading.\n\t  } else if (!_windowLoaded) {\n\t    autoSetupTimeout(1);\n\t  }\n\t};\n\t\n\t/**\n\t * Wait until the page is loaded before running autoSetup. This will be called in\n\t * autoSetup if `hasLoaded` returns false.\n\t */\n\tfunction autoSetupTimeout(wait, vjs) {\n\t  if (vjs) {\n\t    videojs = vjs;\n\t  }\n\t\n\t  setTimeout(autoSetup, wait);\n\t}\n\t\n\tif (_document2['default'].readyState === 'complete') {\n\t  _windowLoaded = true;\n\t} else {\n\t  /**\n\t   * Listen for the load event on window, and set _windowLoaded to true.\n\t   *\n\t   * @listens load\n\t   */\n\t  Events.one(_window2['default'], 'load', function () {\n\t    _windowLoaded = true;\n\t  });\n\t}\n\t\n\t/**\n\t * check if the document has been loaded\n\t */\n\tvar hasLoaded = function hasLoaded() {\n\t  return _windowLoaded;\n\t};\n\t\n\texports.autoSetup = autoSetup;\n\texports.autoSetupTimeout = autoSetupTimeout;\n\texports.hasLoaded = hasLoaded;\n\n\n/***/ },\n/* 8 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\texports.__esModule = true;\n\texports.fixEvent = fixEvent;\n\texports.on = on;\n\texports.off = off;\n\texports.trigger = trigger;\n\texports.one = one;\n\t\n\tvar _dom = __webpack_require__(9);\n\t\n\tvar Dom = _interopRequireWildcard(_dom);\n\t\n\tvar _guid = __webpack_require__(10);\n\t\n\tvar Guid = _interopRequireWildcard(_guid);\n\t\n\tvar _log = __webpack_require__(11);\n\t\n\tvar _log2 = _interopRequireDefault(_log);\n\t\n\tvar _window = __webpack_require__(4);\n\t\n\tvar _window2 = _interopRequireDefault(_window);\n\t\n\tvar _document = __webpack_require__(5);\n\t\n\tvar _document2 = _interopRequireDefault(_document);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\t\n\tfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj['default'] = obj; return newObj; } }\n\t\n\t/**\n\t * Clean up the listener cache and dispatchers\n\t *\n\t * @param {Element|Object} elem\n\t *        Element to clean up\n\t *\n\t * @param {string} type\n\t *        Type of event to clean up\n\t */\n\tfunction _cleanUpEvents(elem, type) {\n\t  var data = Dom.getElData(elem);\n\t\n\t  // Remove the events of a particular type if there are none left\n\t  if (data.handlers[type].length === 0) {\n\t    delete data.handlers[type];\n\t    // data.handlers[type] = null;\n\t    // Setting to null was causing an error with data.handlers\n\t\n\t    // Remove the meta-handler from the element\n\t    if (elem.removeEventListener) {\n\t      elem.removeEventListener(type, data.dispatcher, false);\n\t    } else if (elem.detachEvent) {\n\t      elem.detachEvent('on' + type, data.dispatcher);\n\t    }\n\t  }\n\t\n\t  // Remove the events object if there are no types left\n\t  if (Object.getOwnPropertyNames(data.handlers).length <= 0) {\n\t    delete data.handlers;\n\t    delete data.dispatcher;\n\t    delete data.disabled;\n\t  }\n\t\n\t  // Finally remove the element data if there is no data left\n\t  if (Object.getOwnPropertyNames(data).length === 0) {\n\t    Dom.removeElData(elem);\n\t  }\n\t}\n\t\n\t/**\n\t * Loops through an array of event types and calls the requested method for each type.\n\t *\n\t * @param {Function} fn\n\t *        The event method we want to use.\n\t *\n\t * @param {Element|Object} elem\n\t *        Element or object to bind listeners to\n\t *\n\t * @param {string} type\n\t *        Type of event to bind to.\n\t *\n\t * @param {EventTarget~EventListener} callback\n\t *        Event listener.\n\t */\n\t/**\n\t * @file events.js\n\t * @module events\n\t *\n\t * Event System (John Resig - Secrets of a JS Ninja http://jsninja.com/)\n\t * (Original book version wasn't completely usable, so fixed some things and made Closure Compiler compatible)\n\t * This should work very similarly to jQuery's events, however it's based off the book version which isn't as\n\t * robust as jquery's, so there's probably some differences.\n\t */\n\t\n\tfunction _handleMultipleEvents(fn, elem, types, callback) {\n\t  types.forEach(function (type) {\n\t    // Call the event method for each one of the types\n\t    fn(elem, type, callback);\n\t  });\n\t}\n\t\n\t/**\n\t * Fix a native event to have standard property values\n\t *\n\t * @param {Object} event\n\t *        Event object to fix.\n\t *\n\t * @return {Object}\n\t *         Fixed event object.\n\t */\n\tfunction fixEvent(event) {\n\t\n\t  function returnTrue() {\n\t    return true;\n\t  }\n\t\n\t  function returnFalse() {\n\t    return false;\n\t  }\n\t\n\t  // Test if fixing up is needed\n\t  // Used to check if !event.stopPropagation instead of isPropagationStopped\n\t  // But native events return true for stopPropagation, but don't have\n\t  // other expected methods like isPropagationStopped. Seems to be a problem\n\t  // with the Javascript Ninja code. So we're just overriding all events now.\n\t  if (!event || !event.isPropagationStopped) {\n\t    (function () {\n\t      var old = event || _window2['default'].event;\n\t\n\t      event = {};\n\t      // Clone the old object so that we can modify the values event = {};\n\t      // IE8 Doesn't like when you mess with native event properties\n\t      // Firefox returns false for event.hasOwnProperty('type') and other props\n\t      //  which makes copying more difficult.\n\t      // TODO: Probably best to create a whitelist of event props\n\t      for (var key in old) {\n\t        // Safari 6.0.3 warns you if you try to copy deprecated layerX/Y\n\t        // Chrome warns you if you try to copy deprecated keyboardEvent.keyLocation\n\t        // and webkitMovementX/Y\n\t        if (key !== 'layerX' && key !== 'layerY' && key !== 'keyLocation' && key !== 'webkitMovementX' && key !== 'webkitMovementY') {\n\t          // Chrome 32+ warns if you try to copy deprecated returnValue, but\n\t          // we still want to if preventDefault isn't supported (IE8).\n\t          if (!(key === 'returnValue' && old.preventDefault)) {\n\t            event[key] = old[key];\n\t          }\n\t        }\n\t      }\n\t\n\t      // The event occurred on this element\n\t      if (!event.target) {\n\t        event.target = event.srcElement || _document2['default'];\n\t      }\n\t\n\t      // Handle which other element the event is related to\n\t      if (!event.relatedTarget) {\n\t        event.relatedTarget = event.fromElement === event.target ? event.toElement : event.fromElement;\n\t      }\n\t\n\t      // Stop the default browser action\n\t      event.preventDefault = function () {\n\t        if (old.preventDefault) {\n\t          old.preventDefault();\n\t        }\n\t        event.returnValue = false;\n\t        old.returnValue = false;\n\t        event.defaultPrevented = true;\n\t      };\n\t\n\t      event.defaultPrevented = false;\n\t\n\t      // Stop the event from bubbling\n\t      event.stopPropagation = function () {\n\t        if (old.stopPropagation) {\n\t          old.stopPropagation();\n\t        }\n\t        event.cancelBubble = true;\n\t        old.cancelBubble = true;\n\t        event.isPropagationStopped = returnTrue;\n\t      };\n\t\n\t      event.isPropagationStopped = returnFalse;\n\t\n\t      // Stop the event from bubbling and executing other handlers\n\t      event.stopImmediatePropagation = function () {\n\t        if (old.stopImmediatePropagation) {\n\t          old.stopImmediatePropagation();\n\t        }\n\t        event.isImmediatePropagationStopped = returnTrue;\n\t        event.stopPropagation();\n\t      };\n\t\n\t      event.isImmediatePropagationStopped = returnFalse;\n\t\n\t      // Handle mouse position\n\t      if (event.clientX !== null && event.clientX !== undefined) {\n\t        var doc = _document2['default'].documentElement;\n\t        var body = _document2['default'].body;\n\t\n\t        event.pageX = event.clientX + (doc && doc.scrollLeft || body && body.scrollLeft || 0) - (doc && doc.clientLeft || body && body.clientLeft || 0);\n\t        event.pageY = event.clientY + (doc && doc.scrollTop || body && body.scrollTop || 0) - (doc && doc.clientTop || body && body.clientTop || 0);\n\t      }\n\t\n\t      // Handle key presses\n\t      event.which = event.charCode || event.keyCode;\n\t\n\t      // Fix button for mouse clicks:\n\t      // 0 == left; 1 == middle; 2 == right\n\t      if (event.button !== null && event.button !== undefined) {\n\t\n\t        // The following is disabled because it does not pass videojs-standard\n\t        // and... yikes.\n\t        /* eslint-disable */\n\t        event.button = event.button & 1 ? 0 : event.button & 4 ? 1 : event.button & 2 ? 2 : 0;\n\t        /* eslint-enable */\n\t      }\n\t    })();\n\t  }\n\t\n\t  // Returns fixed-up instance\n\t  return event;\n\t}\n\t\n\t/**\n\t * Add an event listener to element\n\t * It stores the handler function in a separate cache object\n\t * and adds a generic handler to the element's event,\n\t * along with a unique id (guid) to the element.\n\t *\n\t * @param {Element|Object} elem\n\t *        Element or object to bind listeners to\n\t *\n\t * @param {string|string[]} type\n\t *        Type of event to bind to.\n\t *\n\t * @param {EventTarget~EventListener} fn\n\t *        Event listener.\n\t */\n\tfunction on(elem, type, fn) {\n\t  if (Array.isArray(type)) {\n\t    return _handleMultipleEvents(on, elem, type, fn);\n\t  }\n\t\n\t  var data = Dom.getElData(elem);\n\t\n\t  // We need a place to store all our handler data\n\t  if (!data.handlers) {\n\t    data.handlers = {};\n\t  }\n\t\n\t  if (!data.handlers[type]) {\n\t    data.handlers[type] = [];\n\t  }\n\t\n\t  if (!fn.guid) {\n\t    fn.guid = Guid.newGUID();\n\t  }\n\t\n\t  data.handlers[type].push(fn);\n\t\n\t  if (!data.dispatcher) {\n\t    data.disabled = false;\n\t\n\t    data.dispatcher = function (event, hash) {\n\t\n\t      if (data.disabled) {\n\t        return;\n\t      }\n\t\n\t      event = fixEvent(event);\n\t\n\t      var handlers = data.handlers[event.type];\n\t\n\t      if (handlers) {\n\t        // Copy handlers so if handlers are added/removed during the process it doesn't throw everything off.\n\t        var handlersCopy = handlers.slice(0);\n\t\n\t        for (var m = 0, n = handlersCopy.length; m < n; m++) {\n\t          if (event.isImmediatePropagationStopped()) {\n\t            break;\n\t          } else {\n\t            try {\n\t              handlersCopy[m].call(elem, event, hash);\n\t            } catch (e) {\n\t              _log2['default'].error(e);\n\t            }\n\t          }\n\t        }\n\t      }\n\t    };\n\t  }\n\t\n\t  if (data.handlers[type].length === 1) {\n\t    if (elem.addEventListener) {\n\t      elem.addEventListener(type, data.dispatcher, false);\n\t    } else if (elem.attachEvent) {\n\t      elem.attachEvent('on' + type, data.dispatcher);\n\t    }\n\t  }\n\t}\n\t\n\t/**\n\t * Removes event listeners from an element\n\t *\n\t * @param {Element|Object} elem\n\t *        Object to remove listeners from.\n\t *\n\t * @param {string|string[]} [type]\n\t *        Type of listener to remove. Don't include to remove all events from element.\n\t *\n\t * @param {EventTarget~EventListener} [fn]\n\t *        Specific listener to remove. Don't include to remove listeners for an event\n\t *        type.\n\t */\n\tfunction off(elem, type, fn) {\n\t  // Don't want to add a cache object through getElData if not needed\n\t  if (!Dom.hasElData(elem)) {\n\t    return;\n\t  }\n\t\n\t  var data = Dom.getElData(elem);\n\t\n\t  // If no events exist, nothing to unbind\n\t  if (!data.handlers) {\n\t    return;\n\t  }\n\t\n\t  if (Array.isArray(type)) {\n\t    return _handleMultipleEvents(off, elem, type, fn);\n\t  }\n\t\n\t  // Utility function\n\t  var removeType = function removeType(t) {\n\t    data.handlers[t] = [];\n\t    _cleanUpEvents(elem, t);\n\t  };\n\t\n\t  // Are we removing all bound events?\n\t  if (!type) {\n\t    for (var t in data.handlers) {\n\t      removeType(t);\n\t    }\n\t    return;\n\t  }\n\t\n\t  var handlers = data.handlers[type];\n\t\n\t  // If no handlers exist, nothing to unbind\n\t  if (!handlers) {\n\t    return;\n\t  }\n\t\n\t  // If no listener was provided, remove all listeners for type\n\t  if (!fn) {\n\t    removeType(type);\n\t    return;\n\t  }\n\t\n\t  // We're only removing a single handler\n\t  if (fn.guid) {\n\t    for (var n = 0; n < handlers.length; n++) {\n\t      if (handlers[n].guid === fn.guid) {\n\t        handlers.splice(n--, 1);\n\t      }\n\t    }\n\t  }\n\t\n\t  _cleanUpEvents(elem, type);\n\t}\n\t\n\t/**\n\t * Trigger an event for an element\n\t *\n\t * @param {Element|Object} elem\n\t *        Element to trigger an event on\n\t *\n\t * @param {EventTarget~Event|string} event\n\t *        A string (the type) or an event object with a type attribute\n\t *\n\t * @param {Object} [hash]\n\t *        data hash to pass along with the event\n\t *\n\t * @return {boolean|undefined}\n\t *         - Returns the opposite of `defaultPrevented` if default was prevented\n\t *         - Otherwise returns undefined\n\t */\n\tfunction trigger(elem, event, hash) {\n\t  // Fetches element data and a reference to the parent (for bubbling).\n\t  // Don't want to add a data object to cache for every parent,\n\t  // so checking hasElData first.\n\t  var elemData = Dom.hasElData(elem) ? Dom.getElData(elem) : {};\n\t  var parent = elem.parentNode || elem.ownerDocument;\n\t  // type = event.type || event,\n\t  // handler;\n\t\n\t  // If an event name was passed as a string, creates an event out of it\n\t  if (typeof event === 'string') {\n\t    event = { type: event, target: elem };\n\t  }\n\t  // Normalizes the event properties.\n\t  event = fixEvent(event);\n\t\n\t  // If the passed element has a dispatcher, executes the established handlers.\n\t  if (elemData.dispatcher) {\n\t    elemData.dispatcher.call(elem, event, hash);\n\t  }\n\t\n\t  // Unless explicitly stopped or the event does not bubble (e.g. media events)\n\t  // recursively calls this function to bubble the event up the DOM.\n\t  if (parent && !event.isPropagationStopped() && event.bubbles === true) {\n\t    trigger.call(null, parent, event, hash);\n\t\n\t    // If at the top of the DOM, triggers the default action unless disabled.\n\t  } else if (!parent && !event.defaultPrevented) {\n\t    var targetData = Dom.getElData(event.target);\n\t\n\t    // Checks if the target has a default action for this event.\n\t    if (event.target[event.type]) {\n\t      // Temporarily disables event dispatching on the target as we have already executed the handler.\n\t      targetData.disabled = true;\n\t      // Executes the default action.\n\t      if (typeof event.target[event.type] === 'function') {\n\t        event.target[event.type]();\n\t      }\n\t      // Re-enables event dispatching.\n\t      targetData.disabled = false;\n\t    }\n\t  }\n\t\n\t  // Inform the triggerer if the default was prevented by returning false\n\t  return !event.defaultPrevented;\n\t}\n\t\n\t/**\n\t * Trigger a listener only once for an event\n\t *\n\t * @param {Element|Object} elem\n\t *        Element or object to bind to.\n\t *\n\t * @param {string|string[]} type\n\t *        Name/type of event\n\t *\n\t * @param {Event~EventListener} fn\n\t *        Event Listener function\n\t */\n\tfunction one(elem, type, fn) {\n\t  if (Array.isArray(type)) {\n\t    return _handleMultipleEvents(one, elem, type, fn);\n\t  }\n\t  var func = function func() {\n\t    off(elem, type, func);\n\t    fn.apply(this, arguments);\n\t  };\n\t\n\t  // copy the guid to the new function so it can removed using the original function's ID\n\t  func.guid = fn.guid = fn.guid || Guid.newGUID();\n\t  on(elem, type, func);\n\t}\n\n\n/***/ },\n/* 9 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\texports.__esModule = true;\n\texports.$$ = exports.$ = undefined;\n\t\n\tvar _templateObject = _taggedTemplateLiteralLoose(['Setting attributes in the second argument of createEl()\\n                has been deprecated. Use the third argument instead.\\n                createEl(type, properties, attributes). Attempting to set ', ' to ', '.'], ['Setting attributes in the second argument of createEl()\\n                has been deprecated. Use the third argument instead.\\n                createEl(type, properties, attributes). Attempting to set ', ' to ', '.']);\n\t\n\texports.isEl = isEl;\n\texports.getEl = getEl;\n\texports.createEl = createEl;\n\texports.textContent = textContent;\n\texports.insertElFirst = insertElFirst;\n\texports.getElData = getElData;\n\texports.hasElData = hasElData;\n\texports.removeElData = removeElData;\n\texports.hasElClass = hasElClass;\n\texports.addElClass = addElClass;\n\texports.removeElClass = removeElClass;\n\texports.toggleElClass = toggleElClass;\n\texports.setElAttributes = setElAttributes;\n\texports.getElAttributes = getElAttributes;\n\texports.getAttribute = getAttribute;\n\texports.setAttribute = setAttribute;\n\texports.removeAttribute = removeAttribute;\n\texports.blockTextSelection = blockTextSelection;\n\texports.unblockTextSelection = unblockTextSelection;\n\texports.findElPosition = findElPosition;\n\texports.getPointerPosition = getPointerPosition;\n\texports.isTextNode = isTextNode;\n\texports.emptyEl = emptyEl;\n\texports.normalizeContent = normalizeContent;\n\texports.appendContent = appendContent;\n\texports.insertContent = insertContent;\n\t\n\tvar _document = __webpack_require__(5);\n\t\n\tvar _document2 = _interopRequireDefault(_document);\n\t\n\tvar _window = __webpack_require__(4);\n\t\n\tvar _window2 = _interopRequireDefault(_window);\n\t\n\tvar _guid = __webpack_require__(10);\n\t\n\tvar Guid = _interopRequireWildcard(_guid);\n\t\n\tvar _log = __webpack_require__(11);\n\t\n\tvar _log2 = _interopRequireDefault(_log);\n\t\n\tvar _tsml = __webpack_require__(14);\n\t\n\tvar _tsml2 = _interopRequireDefault(_tsml);\n\t\n\tvar _obj = __webpack_require__(13);\n\t\n\tfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj['default'] = obj; return newObj; } }\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\t\n\tfunction _taggedTemplateLiteralLoose(strings, raw) { strings.raw = raw; return strings; } /**\n\t                                                                                           * @file dom.js\n\t                                                                                           * @module dom\n\t                                                                                           */\n\t\n\t\n\t/**\n\t * Detect if a value is a string with any non-whitespace characters.\n\t *\n\t * @param {string} str\n\t *        The string to check\n\t *\n\t * @return {boolean}\n\t *         - True if the string is non-blank\n\t *         - False otherwise\n\t *\n\t */\n\tfunction isNonBlankString(str) {\n\t  return typeof str === 'string' && /\\S/.test(str);\n\t}\n\t\n\t/**\n\t * Throws an error if the passed string has whitespace. This is used by\n\t * class methods to be relatively consistent with the classList API.\n\t *\n\t * @param {string} str\n\t *         The string to check for whitespace.\n\t *\n\t * @throws {Error}\n\t *         Throws an error if there is whitespace in the string.\n\t *\n\t */\n\tfunction throwIfWhitespace(str) {\n\t  if (/\\s/.test(str)) {\n\t    throw new Error('class has illegal whitespace characters');\n\t  }\n\t}\n\t\n\t/**\n\t * Produce a regular expression for matching a className within an elements className.\n\t *\n\t * @param {string} className\n\t *         The className to generate the RegExp for.\n\t *\n\t * @return {RegExp}\n\t *         The RegExp that will check for a specific `className` in an elements\n\t *         className.\n\t */\n\tfunction classRegExp(className) {\n\t  return new RegExp('(^|\\\\s)' + className + '($|\\\\s)');\n\t}\n\t\n\t/**\n\t * Determines, via duck typing, whether or not a value is a DOM element.\n\t *\n\t * @param {Mixed} value\n\t *        The thing to check\n\t *\n\t * @return {boolean}\n\t *         - True if it is a DOM element\n\t *         - False otherwise\n\t */\n\tfunction isEl(value) {\n\t  return (0, _obj.isObject)(value) && value.nodeType === 1;\n\t}\n\t\n\t/**\n\t * Creates functions to query the DOM using a given method.\n\t *\n\t * @param {string} method\n\t *         The method to create the query with.\n\t *\n\t * @return {Function}\n\t *         The query method\n\t */\n\tfunction createQuerier(method) {\n\t  return function (selector, context) {\n\t    if (!isNonBlankString(selector)) {\n\t      return _document2['default'][method](null);\n\t    }\n\t    if (isNonBlankString(context)) {\n\t      context = _document2['default'].querySelector(context);\n\t    }\n\t\n\t    var ctx = isEl(context) ? context : _document2['default'];\n\t\n\t    return ctx[method] && ctx[method](selector);\n\t  };\n\t}\n\t\n\t/**\n\t * Shorthand for document.getElementById()\n\t * Also allows for CSS (jQuery) ID syntax. But nothing other than IDs.\n\t *\n\t * @param {string} id\n\t *         The id of the element to get\n\t *\n\t * @return {Element|null}\n\t *         Element with supplied ID or null if there wasn't one.\n\t */\n\tfunction getEl(id) {\n\t  if (id.indexOf('#') === 0) {\n\t    id = id.slice(1);\n\t  }\n\t\n\t  return _document2['default'].getElementById(id);\n\t}\n\t\n\t/**\n\t * Creates an element and applies properties.\n\t *\n\t * @param {string} [tagName='div']\n\t *         Name of tag to be created.\n\t *\n\t * @param {Object} [properties={}]\n\t *         Element properties to be applied.\n\t *\n\t * @param {Object} [attributes={}]\n\t *         Element attributes to be applied.\n\t *\n\t * @param {String|Element|TextNode|Array|Function} [content]\n\t *         Contents for the element (see: {@link dom:normalizeContent})\n\t *\n\t * @return {Element}\n\t *         The element that was created.\n\t */\n\tfunction createEl() {\n\t  var tagName = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'div';\n\t  var properties = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\t  var attributes = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n\t  var content = arguments[3];\n\t\n\t  var el = _document2['default'].createElement(tagName);\n\t\n\t  Object.getOwnPropertyNames(properties).forEach(function (propName) {\n\t    var val = properties[propName];\n\t\n\t    // See #2176\n\t    // We originally were accepting both properties and attributes in the\n\t    // same object, but that doesn't work so well.\n\t    if (propName.indexOf('aria-') !== -1 || propName === 'role' || propName === 'type') {\n\t      _log2['default'].warn((0, _tsml2['default'])(_templateObject, propName, val));\n\t      el.setAttribute(propName, val);\n\t\n\t      // Handle textContent since it's not supported everywhere and we have a\n\t      // method for it.\n\t    } else if (propName === 'textContent') {\n\t      textContent(el, val);\n\t    } else {\n\t      el[propName] = val;\n\t    }\n\t  });\n\t\n\t  Object.getOwnPropertyNames(attributes).forEach(function (attrName) {\n\t    el.setAttribute(attrName, attributes[attrName]);\n\t  });\n\t\n\t  if (content) {\n\t    appendContent(el, content);\n\t  }\n\t\n\t  return el;\n\t}\n\t\n\t/**\n\t * Injects text into an element, replacing any existing contents entirely.\n\t *\n\t * @param {Element} el\n\t *        The element to add text content into\n\t *\n\t * @param {string} text\n\t *        The text content to add.\n\t *\n\t * @return {Element}\n\t *         The element with added text content.\n\t */\n\tfunction textContent(el, text) {\n\t  if (typeof el.textContent === 'undefined') {\n\t    el.innerText = text;\n\t  } else {\n\t    el.textContent = text;\n\t  }\n\t  return el;\n\t}\n\t\n\t/**\n\t * Insert an element as the first child node of another\n\t *\n\t * @param {Element} child\n\t *        Element to insert\n\t *\n\t * @param {Element} parent\n\t *        Element to insert child into\n\t *\n\t */\n\tfunction insertElFirst(child, parent) {\n\t  if (parent.firstChild) {\n\t    parent.insertBefore(child, parent.firstChild);\n\t  } else {\n\t    parent.appendChild(child);\n\t  }\n\t}\n\t\n\t/**\n\t * Element Data Store. Allows for binding data to an element without putting it directly on the element.\n\t * Ex. Event listeners are stored here.\n\t * (also from jsninja.com, slightly modified and updated for closure compiler)\n\t *\n\t * @type {Object}\n\t * @private\n\t */\n\tvar elData = {};\n\t\n\t/*\n\t * Unique attribute name to store an element's guid in\n\t *\n\t * @type {string}\n\t * @constant\n\t * @private\n\t */\n\tvar elIdAttr = 'vdata' + new Date().getTime();\n\t\n\t/**\n\t * Returns the cache object where data for an element is stored\n\t *\n\t * @param {Element} el\n\t *        Element to store data for.\n\t *\n\t * @return {Object}\n\t *         The cache object for that el that was passed in.\n\t */\n\tfunction getElData(el) {\n\t  var id = el[elIdAttr];\n\t\n\t  if (!id) {\n\t    id = el[elIdAttr] = Guid.newGUID();\n\t  }\n\t\n\t  if (!elData[id]) {\n\t    elData[id] = {};\n\t  }\n\t\n\t  return elData[id];\n\t}\n\t\n\t/**\n\t * Returns whether or not an element has cached data\n\t *\n\t * @param {Element} el\n\t *        Check if this element has cached data.\n\t *\n\t * @return {boolean}\n\t *         - True if the DOM element has cached data.\n\t *         - False otherwise.\n\t */\n\tfunction hasElData(el) {\n\t  var id = el[elIdAttr];\n\t\n\t  if (!id) {\n\t    return false;\n\t  }\n\t\n\t  return !!Object.getOwnPropertyNames(elData[id]).length;\n\t}\n\t\n\t/**\n\t * Delete data for the element from the cache and the guid attr from getElementById\n\t *\n\t * @param {Element} el\n\t *        Remove cached data for this element.\n\t */\n\tfunction removeElData(el) {\n\t  var id = el[elIdAttr];\n\t\n\t  if (!id) {\n\t    return;\n\t  }\n\t\n\t  // Remove all stored data\n\t  delete elData[id];\n\t\n\t  // Remove the elIdAttr property from the DOM node\n\t  try {\n\t    delete el[elIdAttr];\n\t  } catch (e) {\n\t    if (el.removeAttribute) {\n\t      el.removeAttribute(elIdAttr);\n\t    } else {\n\t      // IE doesn't appear to support removeAttribute on the document element\n\t      el[elIdAttr] = null;\n\t    }\n\t  }\n\t}\n\t\n\t/**\n\t * Check if an element has a CSS class\n\t *\n\t * @param {Element} element\n\t *        Element to check\n\t *\n\t * @param {string} classToCheck\n\t *        Class name to check for\n\t *\n\t * @return {boolean}\n\t *         - True if the element had the class\n\t *         - False otherwise.\n\t *\n\t * @throws {Error}\n\t *         Throws an error if `classToCheck` has white space.\n\t */\n\tfunction hasElClass(element, classToCheck) {\n\t  throwIfWhitespace(classToCheck);\n\t  if (element.classList) {\n\t    return element.classList.contains(classToCheck);\n\t  }\n\t  return classRegExp(classToCheck).test(element.className);\n\t}\n\t\n\t/**\n\t * Add a CSS class name to an element\n\t *\n\t * @param {Element} element\n\t *        Element to add class name to.\n\t *\n\t * @param {string} classToAdd\n\t *        Class name to add.\n\t *\n\t * @return {Element}\n\t *         The dom element with the added class name.\n\t */\n\tfunction addElClass(element, classToAdd) {\n\t  if (element.classList) {\n\t    element.classList.add(classToAdd);\n\t\n\t    // Don't need to `throwIfWhitespace` here because `hasElClass` will do it\n\t    // in the case of classList not being supported.\n\t  } else if (!hasElClass(element, classToAdd)) {\n\t    element.className = (element.className + ' ' + classToAdd).trim();\n\t  }\n\t\n\t  return element;\n\t}\n\t\n\t/**\n\t * Remove a CSS class name from an element\n\t *\n\t * @param {Element} element\n\t *        Element to remove a class name from.\n\t *\n\t * @param {string} classToRemove\n\t *        Class name to remove\n\t *\n\t * @return {Element}\n\t *         The dom element with class name removed.\n\t */\n\tfunction removeElClass(element, classToRemove) {\n\t  if (element.classList) {\n\t    element.classList.remove(classToRemove);\n\t  } else {\n\t    throwIfWhitespace(classToRemove);\n\t    element.className = element.className.split(/\\s+/).filter(function (c) {\n\t      return c !== classToRemove;\n\t    }).join(' ');\n\t  }\n\t\n\t  return element;\n\t}\n\t\n\t/**\n\t * The callback definition for toggleElClass.\n\t *\n\t * @callback Dom~PredicateCallback\n\t * @param {Element} element\n\t *        The DOM element of the Component.\n\t *\n\t * @param {string} classToToggle\n\t *        The `className` that wants to be toggled\n\t *\n\t * @return {boolean|undefined}\n\t *         - If true the `classToToggle` will get added to `element`.\n\t *         - If false the `classToToggle` will get removed from `element`.\n\t *         - If undefined this callback will be ignored\n\t */\n\t\n\t/**\n\t * Adds or removes a CSS class name on an element depending on an optional\n\t * condition or the presence/absence of the class name.\n\t *\n\t * @param {Element} element\n\t *        The element to toggle a class name on.\n\t *\n\t * @param {string} classToToggle\n\t *        The class that should be toggled\n\t *\n\t * @param {boolean|PredicateCallback} [predicate]\n\t *        See the return value for {@link Dom~PredicateCallback}\n\t *\n\t * @return {Element}\n\t *         The element with a class that has been toggled.\n\t */\n\tfunction toggleElClass(element, classToToggle, predicate) {\n\t\n\t  // This CANNOT use `classList` internally because IE does not support the\n\t  // second parameter to the `classList.toggle()` method! Which is fine because\n\t  // `classList` will be used by the add/remove functions.\n\t  var has = hasElClass(element, classToToggle);\n\t\n\t  if (typeof predicate === 'function') {\n\t    predicate = predicate(element, classToToggle);\n\t  }\n\t\n\t  if (typeof predicate !== 'boolean') {\n\t    predicate = !has;\n\t  }\n\t\n\t  // If the necessary class operation matches the current state of the\n\t  // element, no action is required.\n\t  if (predicate === has) {\n\t    return;\n\t  }\n\t\n\t  if (predicate) {\n\t    addElClass(element, classToToggle);\n\t  } else {\n\t    removeElClass(element, classToToggle);\n\t  }\n\t\n\t  return element;\n\t}\n\t\n\t/**\n\t * Apply attributes to an HTML element.\n\t *\n\t * @param {Element} el\n\t *        Element to add attributes to.\n\t *\n\t * @param {Object} [attributes]\n\t *        Attributes to be applied.\n\t */\n\tfunction setElAttributes(el, attributes) {\n\t  Object.getOwnPropertyNames(attributes).forEach(function (attrName) {\n\t    var attrValue = attributes[attrName];\n\t\n\t    if (attrValue === null || typeof attrValue === 'undefined' || attrValue === false) {\n\t      el.removeAttribute(attrName);\n\t    } else {\n\t      el.setAttribute(attrName, attrValue === true ? '' : attrValue);\n\t    }\n\t  });\n\t}\n\t\n\t/**\n\t * Get an element's attribute values, as defined on the HTML tag\n\t * Attributes are not the same as properties. They're defined on the tag\n\t * or with setAttribute (which shouldn't be used with HTML)\n\t * This will return true or false for boolean attributes.\n\t *\n\t * @param {Element} tag\n\t *        Element from which to get tag attributes.\n\t *\n\t * @return {Object}\n\t *         All attributes of the element.\n\t */\n\tfunction getElAttributes(tag) {\n\t  var obj = {};\n\t\n\t  // known boolean attributes\n\t  // we can check for matching boolean properties, but older browsers\n\t  // won't know about HTML5 boolean attributes that we still read from\n\t  var knownBooleans = ',' + 'autoplay,controls,loop,muted,default' + ',';\n\t\n\t  if (tag && tag.attributes && tag.attributes.length > 0) {\n\t    var attrs = tag.attributes;\n\t\n\t    for (var i = attrs.length - 1; i >= 0; i--) {\n\t      var attrName = attrs[i].name;\n\t      var attrVal = attrs[i].value;\n\t\n\t      // check for known booleans\n\t      // the matching element property will return a value for typeof\n\t      if (typeof tag[attrName] === 'boolean' || knownBooleans.indexOf(',' + attrName + ',') !== -1) {\n\t        // the value of an included boolean attribute is typically an empty\n\t        // string ('') which would equal false if we just check for a false value.\n\t        // we also don't want support bad code like autoplay='false'\n\t        attrVal = attrVal !== null ? true : false;\n\t      }\n\t\n\t      obj[attrName] = attrVal;\n\t    }\n\t  }\n\t\n\t  return obj;\n\t}\n\t\n\t/**\n\t * Get the value of an element's attribute\n\t *\n\t * @param {Element} el\n\t *        A DOM element\n\t *\n\t * @param {string} attribute\n\t *        Attribute to get the value of\n\t *\n\t * @return {string}\n\t *         value of the attribute\n\t */\n\tfunction getAttribute(el, attribute) {\n\t  return el.getAttribute(attribute);\n\t}\n\t\n\t/**\n\t * Set the value of an element's attribute\n\t *\n\t * @param {Element} el\n\t *        A DOM element\n\t *\n\t * @param {string} attribute\n\t *        Attribute to set\n\t *\n\t * @param {string} value\n\t *        Value to set the attribute to\n\t */\n\tfunction setAttribute(el, attribute, value) {\n\t  el.setAttribute(attribute, value);\n\t}\n\t\n\t/**\n\t * Remove an element's attribute\n\t *\n\t * @param {Element} el\n\t *        A DOM element\n\t *\n\t * @param {string} attribute\n\t *        Attribute to remove\n\t */\n\tfunction removeAttribute(el, attribute) {\n\t  el.removeAttribute(attribute);\n\t}\n\t\n\t/**\n\t * Attempt to block the ability to select text while dragging controls\n\t */\n\tfunction blockTextSelection() {\n\t  _document2['default'].body.focus();\n\t  _document2['default'].onselectstart = function () {\n\t    return false;\n\t  };\n\t}\n\t\n\t/**\n\t * Turn off text selection blocking\n\t */\n\tfunction unblockTextSelection() {\n\t  _document2['default'].onselectstart = function () {\n\t    return true;\n\t  };\n\t}\n\t\n\t/**\n\t * The postion of a DOM element on the page.\n\t *\n\t * @typedef {Object} Dom~Position\n\t *\n\t * @property {number} left\n\t *           Pixels to the left\n\t *\n\t * @property {number} top\n\t *           Pixels on top\n\t */\n\t\n\t/**\n\t * Offset Left.\n\t * getBoundingClientRect technique from\n\t * John Resig\n\t *\n\t * @see http://ejohn.org/blog/getboundingclientrect-is-awesome/\n\t *\n\t * @param {Element} el\n\t *        Element from which to get offset\n\t *\n\t * @return {Dom~Position}\n\t *         The position of the element that was passed in.\n\t */\n\tfunction findElPosition(el) {\n\t  var box = void 0;\n\t\n\t  if (el.getBoundingClientRect && el.parentNode) {\n\t    box = el.getBoundingClientRect();\n\t  }\n\t\n\t  if (!box) {\n\t    return {\n\t      left: 0,\n\t      top: 0\n\t    };\n\t  }\n\t\n\t  var docEl = _document2['default'].documentElement;\n\t  var body = _document2['default'].body;\n\t\n\t  var clientLeft = docEl.clientLeft || body.clientLeft || 0;\n\t  var scrollLeft = _window2['default'].pageXOffset || body.scrollLeft;\n\t  var left = box.left + scrollLeft - clientLeft;\n\t\n\t  var clientTop = docEl.clientTop || body.clientTop || 0;\n\t  var scrollTop = _window2['default'].pageYOffset || body.scrollTop;\n\t  var top = box.top + scrollTop - clientTop;\n\t\n\t  // Android sometimes returns slightly off decimal values, so need to round\n\t  return {\n\t    left: Math.round(left),\n\t    top: Math.round(top)\n\t  };\n\t}\n\t\n\t/**\n\t * x and y coordinates for a dom element or mouse pointer\n\t *\n\t * @typedef {Object} Dom~Coordinates\n\t *\n\t * @property {number} x\n\t *           x coordinate in pixels\n\t *\n\t * @property {number} y\n\t *           y coordinate in pixels\n\t */\n\t\n\t/**\n\t * Get pointer position in element\n\t * Returns an object with x and y coordinates.\n\t * The base on the coordinates are the bottom left of the element.\n\t *\n\t * @param {Element} el\n\t *        Element on which to get the pointer position on\n\t *\n\t * @param {EventTarget~Event} event\n\t *        Event object\n\t *\n\t * @return {Dom~Coordinates}\n\t *         A Coordinates object corresponding to the mouse position.\n\t *\n\t */\n\tfunction getPointerPosition(el, event) {\n\t  var position = {};\n\t  var box = findElPosition(el);\n\t  var boxW = el.offsetWidth;\n\t  var boxH = el.offsetHeight;\n\t\n\t  var boxY = box.top;\n\t  var boxX = box.left;\n\t  var pageY = event.pageY;\n\t  var pageX = event.pageX;\n\t\n\t  if (event.changedTouches) {\n\t    pageX = event.changedTouches[0].pageX;\n\t    pageY = event.changedTouches[0].pageY;\n\t  }\n\t\n\t  position.y = Math.max(0, Math.min(1, (boxY - pageY + boxH) / boxH));\n\t  position.x = Math.max(0, Math.min(1, (pageX - boxX) / boxW));\n\t\n\t  return position;\n\t}\n\t\n\t/**\n\t * Determines, via duck typing, whether or not a value is a text node.\n\t *\n\t * @param {Mixed} value\n\t *        Check if this value is a text node.\n\t *\n\t * @return {boolean}\n\t *         - True if it is a text node\n\t *         - False otherwise\n\t */\n\tfunction isTextNode(value) {\n\t  return (0, _obj.isObject)(value) && value.nodeType === 3;\n\t}\n\t\n\t/**\n\t * Empties the contents of an element.\n\t *\n\t * @param {Element} el\n\t *        The element to empty children from\n\t *\n\t * @return {Element}\n\t *         The element with no children\n\t */\n\tfunction emptyEl(el) {\n\t  while (el.firstChild) {\n\t    el.removeChild(el.firstChild);\n\t  }\n\t  return el;\n\t}\n\t\n\t/**\n\t * Normalizes content for eventual insertion into the DOM.\n\t *\n\t * This allows a wide range of content definition methods, but protects\n\t * from falling into the trap of simply writing to `innerHTML`, which is\n\t * an XSS concern.\n\t *\n\t * The content for an element can be passed in multiple types and\n\t * combinations, whose behavior is as follows:\n\t *\n\t * @param {String|Element|TextNode|Array|Function} content\n\t *        - String: Normalized into a text node.\n\t *        - Element/TextNode: Passed through.\n\t *        - Array: A one-dimensional array of strings, elements, nodes, or functions\n\t *          (which return single strings, elements, or nodes).\n\t *        - Function: If the sole argument, is expected to produce a string, element,\n\t *          node, or array as defined above.\n\t *\n\t * @return {Array}\n\t *         All of the content that was passed in normalized.\n\t */\n\tfunction normalizeContent(content) {\n\t\n\t  // First, invoke content if it is a function. If it produces an array,\n\t  // that needs to happen before normalization.\n\t  if (typeof content === 'function') {\n\t    content = content();\n\t  }\n\t\n\t  // Next up, normalize to an array, so one or many items can be normalized,\n\t  // filtered, and returned.\n\t  return (Array.isArray(content) ? content : [content]).map(function (value) {\n\t\n\t    // First, invoke value if it is a function to produce a new value,\n\t    // which will be subsequently normalized to a Node of some kind.\n\t    if (typeof value === 'function') {\n\t      value = value();\n\t    }\n\t\n\t    if (isEl(value) || isTextNode(value)) {\n\t      return value;\n\t    }\n\t\n\t    if (typeof value === 'string' && /\\S/.test(value)) {\n\t      return _document2['default'].createTextNode(value);\n\t    }\n\t  }).filter(function (value) {\n\t    return value;\n\t  });\n\t}\n\t\n\t/**\n\t * Normalizes and appends content to an element.\n\t *\n\t * @param {Element} el\n\t *        Element to append normalized content to.\n\t *\n\t *\n\t * @param {String|Element|TextNode|Array|Function} content\n\t *        See the `content` argument of {@link dom:normalizeContent}\n\t *\n\t * @return {Element}\n\t *         The element with appended normalized content.\n\t */\n\tfunction appendContent(el, content) {\n\t  normalizeContent(content).forEach(function (node) {\n\t    return el.appendChild(node);\n\t  });\n\t  return el;\n\t}\n\t\n\t/**\n\t * Normalizes and inserts content into an element; this is identical to\n\t * `appendContent()`, except it empties the element first.\n\t *\n\t * @param {Element} el\n\t *        Element to insert normalized content into.\n\t *\n\t * @param {String|Element|TextNode|Array|Function} content\n\t *        See the `content` argument of {@link dom:normalizeContent}\n\t *\n\t * @return {Element}\n\t *         The element with inserted normalized content.\n\t *\n\t */\n\tfunction insertContent(el, content) {\n\t  return appendContent(emptyEl(el), content);\n\t}\n\t\n\t/**\n\t * Finds a single DOM element matching `selector` within the optional\n\t * `context` of another DOM element (defaulting to `document`).\n\t *\n\t * @param {string} selector\n\t *        A valid CSS selector, which will be passed to `querySelector`.\n\t *\n\t * @param {Element|String} [context=document]\n\t *        A DOM element within which to query. Can also be a selector\n\t *        string in which case the first matching element will be used\n\t *        as context. If missing (or no element matches selector), falls\n\t *        back to `document`.\n\t *\n\t * @return {Element|null}\n\t *         The element that was found or null.\n\t */\n\tvar $ = exports.$ = createQuerier('querySelector');\n\t\n\t/**\n\t * Finds a all DOM elements matching `selector` within the optional\n\t * `context` of another DOM element (defaulting to `document`).\n\t *\n\t * @param {string} selector\n\t *           A valid CSS selector, which will be passed to `querySelectorAll`.\n\t *\n\t * @param {Element|String} [context=document]\n\t *           A DOM element within which to query. Can also be a selector\n\t *           string in which case the first matching element will be used\n\t *           as context. If missing (or no element matches selector), falls\n\t *           back to `document`.\n\t *\n\t * @return {NodeList}\n\t *         A element list of elements that were found. Will be empty if none were found.\n\t *\n\t */\n\tvar $$ = exports.$$ = createQuerier('querySelectorAll');\n\n\n/***/ },\n/* 10 */\n/***/ function(module, exports) {\n\n\t\"use strict\";\n\t\n\texports.__esModule = true;\n\texports.newGUID = newGUID;\n\t/**\n\t * @file guid.js\n\t * @module guid\n\t */\n\t\n\t/**\n\t * Unique ID for an element or function\n\t * @type {Number}\n\t */\n\tvar _guid = 1;\n\t\n\t/**\n\t * Get a unique auto-incrementing ID by number that has not been returned before.\n\t *\n\t * @return {number}\n\t *         A new unique ID.\n\t */\n\tfunction newGUID() {\n\t  return _guid++;\n\t}\n\n\n/***/ },\n/* 11 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\texports.__esModule = true;\n\texports.logByType = undefined;\n\t\n\tvar _window = __webpack_require__(4);\n\t\n\tvar _window2 = _interopRequireDefault(_window);\n\t\n\tvar _browser = __webpack_require__(12);\n\t\n\tvar _obj = __webpack_require__(13);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\t\n\tvar log = void 0;\n\t\n\t/**\n\t * Log messages to the console and history based on the type of message\n\t *\n\t * @param  {string} type\n\t *         The name of the console method to use.\n\t *\n\t * @param  {Array} args\n\t *         The arguments to be passed to the matching console method.\n\t *\n\t * @param  {boolean} [stringify]\n\t *         By default, only old IEs should get console argument stringification,\n\t *         but this is exposed as a parameter to facilitate testing.\n\t */\n\t/**\n\t * @file log.js\n\t * @module log\n\t */\n\tvar logByType = exports.logByType = function logByType(type, args) {\n\t  var stringify = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : !!_browser.IE_VERSION && _browser.IE_VERSION < 11;\n\t\n\t\n\t  if (type !== 'log') {\n\t\n\t    // add the type to the front of the message when it's not \"log\"\n\t    args.unshift(type.toUpperCase() + ':');\n\t  }\n\t\n\t  // add to history\n\t  log.history.push(args);\n\t\n\t  // add console prefix after adding to history\n\t  args.unshift('VIDEOJS:');\n\t\n\t  // If there's no console then don't try to output messages, but they will\n\t  // still be stored in `log.history`.\n\t  //\n\t  // Was setting these once outside of this function, but containing them\n\t  // in the function makes it easier to test cases where console doesn't exist\n\t  // when the module is executed.\n\t  var fn = _window2['default'].console && _window2['default'].console[type];\n\t\n\t  // Bail out if there's no console.\n\t  if (!fn) {\n\t    return;\n\t  }\n\t\n\t  // IEs previous to 11 log objects uselessly as \"[object Object]\"; so, JSONify\n\t  // objects and arrays for those less-capable browsers.\n\t  if (stringify) {\n\t    args = args.map(function (a) {\n\t      if ((0, _obj.isObject)(a) || Array.isArray(a)) {\n\t        try {\n\t          return JSON.stringify(a);\n\t        } catch (x) {\n\t          return String(a);\n\t        }\n\t      }\n\t\n\t      // Cast to string before joining, so we get null and undefined explicitly\n\t      // included in output (as we would in a modern console).\n\t      return String(a);\n\t    }).join(' ');\n\t  }\n\t\n\t  // Old IE versions do not allow .apply() for console methods (they are\n\t  // reported as objects rather than functions).\n\t  if (!fn.apply) {\n\t    fn(args);\n\t  } else {\n\t    fn[Array.isArray(args) ? 'apply' : 'call'](_window2['default'].console, args);\n\t  }\n\t};\n\t\n\t/**\n\t * Log plain debug messages\n\t *\n\t * @param {Mixed[]} args\n\t *        One or more messages or objects that should be logged.\n\t */\n\tlog = function log() {\n\t  for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n\t    args[_key] = arguments[_key];\n\t  }\n\t\n\t  logByType('log', args);\n\t};\n\t\n\t/**\n\t * Keep a history of log messages\n\t *\n\t * @type {Array}\n\t */\n\tlog.history = [];\n\t\n\t/**\n\t * Log error messages\n\t *\n\t * @param {Mixed[]} args\n\t *        One or more messages or objects that should be logged as an error\n\t */\n\tlog.error = function () {\n\t  for (var _len2 = arguments.length, args = Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n\t    args[_key2] = arguments[_key2];\n\t  }\n\t\n\t  return logByType('error', args);\n\t};\n\t\n\t/**\n\t * Log warning messages\n\t *\n\t * @param {Mixed[]} args\n\t *        One or more messages or objects that should be logged as a warning.\n\t */\n\tlog.warn = function () {\n\t  for (var _len3 = arguments.length, args = Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n\t    args[_key3] = arguments[_key3];\n\t  }\n\t\n\t  return logByType('warn', args);\n\t};\n\t\n\texports['default'] = log;\n\n\n/***/ },\n/* 12 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\texports.__esModule = true;\n\texports.BACKGROUND_SIZE_SUPPORTED = exports.TOUCH_ENABLED = exports.IS_ANY_SAFARI = exports.IS_SAFARI = exports.IE_VERSION = exports.IS_IE8 = exports.IS_CHROME = exports.IS_EDGE = exports.IS_FIREFOX = exports.IS_NATIVE_ANDROID = exports.IS_OLD_ANDROID = exports.ANDROID_VERSION = exports.IS_ANDROID = exports.IOS_VERSION = exports.IS_IOS = exports.IS_IPOD = exports.IS_IPHONE = exports.IS_IPAD = undefined;\n\t\n\tvar _document = __webpack_require__(5);\n\t\n\tvar _document2 = _interopRequireDefault(_document);\n\t\n\tvar _window = __webpack_require__(4);\n\t\n\tvar _window2 = _interopRequireDefault(_window);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\t\n\t/**\n\t * @file browser.js\n\t * @module browser\n\t */\n\tvar USER_AGENT = _window2['default'].navigator && _window2['default'].navigator.userAgent || '';\n\tvar webkitVersionMap = /AppleWebKit\\/([\\d.]+)/i.exec(USER_AGENT);\n\tvar appleWebkitVersion = webkitVersionMap ? parseFloat(webkitVersionMap.pop()) : null;\n\t\n\t/*\n\t * Device is an iPhone\n\t *\n\t * @type {Boolean}\n\t * @constant\n\t * @private\n\t */\n\tvar IS_IPAD = exports.IS_IPAD = /iPad/i.test(USER_AGENT);\n\t\n\t// The Facebook app's UIWebView identifies as both an iPhone and iPad, so\n\t// to identify iPhones, we need to exclude iPads.\n\t// http://artsy.github.io/blog/2012/10/18/the-perils-of-ios-user-agent-sniffing/\n\tvar IS_IPHONE = exports.IS_IPHONE = /iPhone/i.test(USER_AGENT) && !IS_IPAD;\n\tvar IS_IPOD = exports.IS_IPOD = /iPod/i.test(USER_AGENT);\n\tvar IS_IOS = exports.IS_IOS = IS_IPHONE || IS_IPAD || IS_IPOD;\n\t\n\tvar IOS_VERSION = exports.IOS_VERSION = function () {\n\t  var match = USER_AGENT.match(/OS (\\d+)_/i);\n\t\n\t  if (match && match[1]) {\n\t    return match[1];\n\t  }\n\t  return null;\n\t}();\n\t\n\tvar IS_ANDROID = exports.IS_ANDROID = /Android/i.test(USER_AGENT);\n\tvar ANDROID_VERSION = exports.ANDROID_VERSION = function () {\n\t  // This matches Android Major.Minor.Patch versions\n\t  // ANDROID_VERSION is Major.Minor as a Number, if Minor isn't available, then only Major is returned\n\t  var match = USER_AGENT.match(/Android (\\d+)(?:\\.(\\d+))?(?:\\.(\\d+))*/i);\n\t\n\t  if (!match) {\n\t    return null;\n\t  }\n\t\n\t  var major = match[1] && parseFloat(match[1]);\n\t  var minor = match[2] && parseFloat(match[2]);\n\t\n\t  if (major && minor) {\n\t    return parseFloat(match[1] + '.' + match[2]);\n\t  } else if (major) {\n\t    return major;\n\t  }\n\t  return null;\n\t}();\n\t\n\t// Old Android is defined as Version older than 2.3, and requiring a webkit version of the android browser\n\tvar IS_OLD_ANDROID = exports.IS_OLD_ANDROID = IS_ANDROID && /webkit/i.test(USER_AGENT) && ANDROID_VERSION < 2.3;\n\tvar IS_NATIVE_ANDROID = exports.IS_NATIVE_ANDROID = IS_ANDROID && ANDROID_VERSION < 5 && appleWebkitVersion < 537;\n\t\n\tvar IS_FIREFOX = exports.IS_FIREFOX = /Firefox/i.test(USER_AGENT);\n\tvar IS_EDGE = exports.IS_EDGE = /Edge/i.test(USER_AGENT);\n\tvar IS_CHROME = exports.IS_CHROME = !IS_EDGE && /Chrome/i.test(USER_AGENT);\n\tvar IS_IE8 = exports.IS_IE8 = /MSIE\\s8\\.0/.test(USER_AGENT);\n\tvar IE_VERSION = exports.IE_VERSION = function (result) {\n\t  return result && parseFloat(result[1]);\n\t}(/MSIE\\s(\\d+)\\.\\d/.exec(USER_AGENT));\n\t\n\tvar IS_SAFARI = exports.IS_SAFARI = /Safari/i.test(USER_AGENT) && !IS_CHROME && !IS_ANDROID && !IS_EDGE;\n\tvar IS_ANY_SAFARI = exports.IS_ANY_SAFARI = IS_SAFARI || IS_IOS;\n\t\n\tvar TOUCH_ENABLED = exports.TOUCH_ENABLED = !!('ontouchstart' in _window2['default'] || _window2['default'].DocumentTouch && _document2['default'] instanceof _window2['default'].DocumentTouch);\n\tvar BACKGROUND_SIZE_SUPPORTED = exports.BACKGROUND_SIZE_SUPPORTED = 'backgroundSize' in _document2['default'].createElement('video').style;\n\n\n/***/ },\n/* 13 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\texports.__esModule = true;\n\t\n\tvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\t\n\texports.each = each;\n\texports.reduce = reduce;\n\texports.assign = assign;\n\texports.isObject = isObject;\n\texports.isPlain = isPlain;\n\t/**\n\t * @file obj.js\n\t * @module obj\n\t */\n\t\n\t/**\n\t * @callback obj:EachCallback\n\t *\n\t * @param {Mixed} value\n\t *        The current key for the object that is being iterated over.\n\t *\n\t * @param {string} key\n\t *        The current key-value for object that is being iterated over\n\t */\n\t\n\t/**\n\t * @callback obj:ReduceCallback\n\t *\n\t * @param {Mixed} accum\n\t *        The value that is accumulating over the reduce loop.\n\t *\n\t * @param {Mixed} value\n\t *        The current key for the object that is being iterated over.\n\t *\n\t * @param {string} key\n\t *        The current key-value for object that is being iterated over\n\t *\n\t * @return {Mixed}\n\t *         The new accumulated value.\n\t */\n\tvar toString = Object.prototype.toString;\n\t\n\t/**\n\t * Array-like iteration for objects.\n\t *\n\t * @param {Object} object\n\t *        The object to iterate over\n\t *\n\t * @param {obj:EachCallback} fn\n\t *        The callback function which is called for each key in the object.\n\t */\n\tfunction each(object, fn) {\n\t  Object.keys(object).forEach(function (key) {\n\t    return fn(object[key], key);\n\t  });\n\t}\n\t\n\t/**\n\t * Array-like reduce for objects.\n\t *\n\t * @param {Object} object\n\t *        The Object that you want to reduce.\n\t *\n\t * @param {Function} fn\n\t *         A callback function which is called for each key in the object. It\n\t *         receives the accumulated value and the per-iteration value and key\n\t *         as arguments.\n\t *\n\t * @param {Mixed} [initial = 0]\n\t *        Starting value\n\t *\n\t * @return {Mixed}\n\t *         The final accumulated value.\n\t */\n\tfunction reduce(object, fn) {\n\t  var initial = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;\n\t\n\t  return Object.keys(object).reduce(function (accum, key) {\n\t    return fn(accum, object[key], key);\n\t  }, initial);\n\t}\n\t\n\t/**\n\t * Object.assign-style object shallow merge/extend.\n\t *\n\t * @param  {Object} target\n\t * @param  {Object} ...sources\n\t * @return {Object}\n\t */\n\tfunction assign(target) {\n\t  for (var _len = arguments.length, sources = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n\t    sources[_key - 1] = arguments[_key];\n\t  }\n\t\n\t  if (Object.assign) {\n\t    return Object.assign.apply(Object, [target].concat(sources));\n\t  }\n\t\n\t  sources.forEach(function (source) {\n\t    if (!source) {\n\t      return;\n\t    }\n\t\n\t    each(source, function (value, key) {\n\t      target[key] = value;\n\t    });\n\t  });\n\t\n\t  return target;\n\t}\n\t\n\t/**\n\t * Returns whether a value is an object of any kind - including DOM nodes,\n\t * arrays, regular expressions, etc. Not functions, though.\n\t *\n\t * This avoids the gotcha where using `typeof` on a `null` value\n\t * results in `'object'`.\n\t *\n\t * @param  {Object} value\n\t * @return {Boolean}\n\t */\n\tfunction isObject(value) {\n\t  return !!value && (typeof value === 'undefined' ? 'undefined' : _typeof(value)) === 'object';\n\t}\n\t\n\t/**\n\t * Returns whether an object appears to be a \"plain\" object - that is, a\n\t * direct instance of `Object`.\n\t *\n\t * @param  {Object} value\n\t * @return {Boolean}\n\t */\n\tfunction isPlain(value) {\n\t  return isObject(value) && toString.call(value) === '[object Object]' && value.constructor === Object;\n\t}\n\n\n/***/ },\n/* 14 */\n/***/ function(module, exports) {\n\n\tfunction clean (s) {\n\t  return s.replace(/\\n\\r?\\s*/g, '')\n\t}\n\t\n\t\n\tmodule.exports = function tsml (sa) {\n\t  var s = ''\n\t    , i = 0\n\t\n\t  for (; i < arguments.length; i++)\n\t    s += clean(sa[i]) + (arguments[i + 1] || '')\n\t\n\t  return s\n\t}\n\n/***/ },\n/* 15 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\texports.__esModule = true;\n\texports.setTextContent = exports.createStyleElement = undefined;\n\t\n\tvar _document = __webpack_require__(5);\n\t\n\tvar _document2 = _interopRequireDefault(_document);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\t\n\t/**\n\t * Create a DOM syle element given a className for it.\n\t *\n\t * @param {string} className\n\t *        The className to add to the created style element.\n\t *\n\t * @return {Element}\n\t *         The element that was created.\n\t */\n\tvar createStyleElement = exports.createStyleElement = function createStyleElement(className) {\n\t  var style = _document2['default'].createElement('style');\n\t\n\t  style.className = className;\n\t\n\t  return style;\n\t};\n\t\n\t/**\n\t * Add text to a DOM element.\n\t *\n\t * @param {Element} el\n\t *        The Element to add text content to.\n\t *\n\t * @param {string} content\n\t *        The text to add to the element.\n\t */\n\t/**\n\t * @file stylesheet.js\n\t * @module stylesheet\n\t */\n\tvar setTextContent = exports.setTextContent = function setTextContent(el, content) {\n\t  if (el.styleSheet) {\n\t    el.styleSheet.cssText = content;\n\t  } else {\n\t    el.textContent = content;\n\t  }\n\t};\n\n\n/***/ },\n/* 16 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\texports.__esModule = true;\n\t\n\tvar _window = __webpack_require__(4);\n\t\n\tvar _window2 = _interopRequireDefault(_window);\n\t\n\tvar _dom = __webpack_require__(9);\n\t\n\tvar Dom = _interopRequireWildcard(_dom);\n\t\n\tvar _fn = __webpack_require__(17);\n\t\n\tvar Fn = _interopRequireWildcard(_fn);\n\t\n\tvar _guid = __webpack_require__(10);\n\t\n\tvar Guid = _interopRequireWildcard(_guid);\n\t\n\tvar _events = __webpack_require__(8);\n\t\n\tvar Events = _interopRequireWildcard(_events);\n\t\n\tvar _log = __webpack_require__(11);\n\t\n\tvar _log2 = _interopRequireDefault(_log);\n\t\n\tvar _toTitleCase = __webpack_require__(18);\n\t\n\tvar _toTitleCase2 = _interopRequireDefault(_toTitleCase);\n\t\n\tvar _mergeOptions = __webpack_require__(19);\n\t\n\tvar _mergeOptions2 = _interopRequireDefault(_mergeOptions);\n\t\n\tfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj['default'] = obj; return newObj; } }\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } } /**\n\t                                                                                                                                                           * Player Component - Base class for all UI objects\n\t                                                                                                                                                           *\n\t                                                                                                                                                           * @file component.js\n\t                                                                                                                                                           */\n\t\n\t\n\t/**\n\t * Base class for all UI Components.\n\t * Components are UI objects which represent both a javascript object and an element\n\t * in the DOM. They can be children of other components, and can have\n\t * children themselves.\n\t *\n\t * Creating a button component.\n\t * ``` js\n\t *   // adding a button to the player\n\t *   var player = videojs('some-video-id');\n\t *   var Component = videojs.getComponent('Component');\n\t *   var button = new Component(player);\n\t *\n\t *   console.log(button.el());\n\t * ```\n\t *\n\t * Above code will log this html.\n\t * ```html\n\t *   <div class=\"video-js\">\n\t *     <div class=\"vjs-button\">Button</div>\n\t *   </div>\n\t * ```\n\t *\n\t * Adding a button to the player\n\t * ``` js\n\t *   // adding a button to the player\n\t *   var player = videojs('some-video-id');\n\t *   var button = player.addChild('button');\n\t *\n\t *   console.log(button.el());\n\t *   // will have the same html result as the previous example\n\t * ```\n\t *\n\t * Components can also use methods from {@link EventTarget}\n\t */\n\tvar Component = function () {\n\t\n\t  /**\n\t   * A callback that is called when a component is ready. Does not have any\n\t   * paramters and any callback value will be ignored.\n\t   *\n\t   * @callback Component~ReadyCallback\n\t   * @this Component\n\t   */\n\t\n\t  /**\n\t   * Creates an instance of this class.\n\t   *\n\t   * @param {Player} player\n\t   *        The `Player` that this class should be attached to.\n\t   *\n\t   * @param {Object} [options]\n\t   *         The key/value store of player options.\n\t   *\n\t   * @param {Component~ReadyCallback} [ready]\n\t   *        Function that gets called when the `Component` is ready.\n\t   */\n\t  function Component(player, options, ready) {\n\t    _classCallCheck(this, Component);\n\t\n\t    // The component might be the player itself and we can't pass `this` to super\n\t    if (!player && this.play) {\n\t      this.player_ = player = this; // eslint-disable-line\n\t    } else {\n\t      this.player_ = player;\n\t    }\n\t\n\t    // Make a copy of prototype.options_ to protect against overriding defaults\n\t    this.options_ = (0, _mergeOptions2['default'])({}, this.options_);\n\t\n\t    // Updated options with supplied options\n\t    options = this.options_ = (0, _mergeOptions2['default'])(this.options_, options);\n\t\n\t    // Get ID from options or options element if one is supplied\n\t    this.id_ = options.id || options.el && options.el.id;\n\t\n\t    // If there was no ID from the options, generate one\n\t    if (!this.id_) {\n\t      // Don't require the player ID function in the case of mock players\n\t      var id = player && player.id && player.id() || 'no_player';\n\t\n\t      this.id_ = id + '_component_' + Guid.newGUID();\n\t    }\n\t\n\t    this.name_ = options.name || null;\n\t\n\t    // Create element if one wasn't provided in options\n\t    if (options.el) {\n\t      this.el_ = options.el;\n\t    } else if (options.createEl !== false) {\n\t      this.el_ = this.createEl();\n\t    }\n\t\n\t    this.children_ = [];\n\t    this.childIndex_ = {};\n\t    this.childNameIndex_ = {};\n\t\n\t    // Add any child components in options\n\t    if (options.initChildren !== false) {\n\t      this.initChildren();\n\t    }\n\t\n\t    this.ready(ready);\n\t    // Don't want to trigger ready here or it will before init is actually\n\t    // finished for all children that run this constructor\n\t\n\t    if (options.reportTouchActivity !== false) {\n\t      this.enableTouchActivity();\n\t    }\n\t  }\n\t\n\t  /**\n\t   * Dispose of the `Component` and all child components.\n\t   *\n\t   * @fires Component#dispose\n\t   */\n\t\n\t\n\t  Component.prototype.dispose = function dispose() {\n\t\n\t    /**\n\t     * Triggered when a `Component` is disposed.\n\t     *\n\t     * @event Component#dispose\n\t     * @type {EventTarget~Event}\n\t     *\n\t     * @property {boolean} [bubbles=false]\n\t     *           set to false so that the close event does not\n\t     *           bubble up\n\t     */\n\t    this.trigger({ type: 'dispose', bubbles: false });\n\t\n\t    // Dispose all children.\n\t    if (this.children_) {\n\t      for (var i = this.children_.length - 1; i >= 0; i--) {\n\t        if (this.children_[i].dispose) {\n\t          this.children_[i].dispose();\n\t        }\n\t      }\n\t    }\n\t\n\t    // Delete child references\n\t    this.children_ = null;\n\t    this.childIndex_ = null;\n\t    this.childNameIndex_ = null;\n\t\n\t    // Remove all event listeners.\n\t    this.off();\n\t\n\t    // Remove element from DOM\n\t    if (this.el_.parentNode) {\n\t      this.el_.parentNode.removeChild(this.el_);\n\t    }\n\t\n\t    Dom.removeElData(this.el_);\n\t    this.el_ = null;\n\t  };\n\t\n\t  /**\n\t   * Return the {@link Player} that the `Component` has attached to.\n\t   *\n\t   * @return {Player}\n\t   *         The player that this `Component` has attached to.\n\t   */\n\t\n\t\n\t  Component.prototype.player = function player() {\n\t    return this.player_;\n\t  };\n\t\n\t  /**\n\t   * Deep merge of options objects with new options.\n\t   * > Note: When both `obj` and `options` contain properties whose values are objects.\n\t   *         The two properties get merged using {@link module:mergeOptions}\n\t   *\n\t   * Example\n\t   * ```js\n\t   *   var player = videojs('some-vid-id');\n\t   *   var Component = videojs.getComponent('Component');\n\t   *   var component = new Component(player, {\n\t   *     optionSet: {\n\t   *       childOne: {foo: 'bar', asdf: 'fdsa'},\n\t   *       childTwo: {},\n\t   *       childThree: {}\n\t   *     }\n\t   *   });\n\t   *\n\t   *   const newOptions = {\n\t   *     optionSet: {\n\t   *       childOne: {foo: 'baz', abc: '123'}\n\t   *       childTwo: null,\n\t   *       childFour: {}\n\t   *     }\n\t   *   };\n\t   *\n\t   *   console.log(component.options(newOptions));\n\t   * ```\n\t   *\n\t   * Result\n\t   * ```js\n\t   *   {\n\t   *     optionSet: {\n\t   *       childOne: {foo: 'baz', asdf: 'fdsa', abc: '123' },\n\t   *       childTwo: null,\n\t   *       childThree: {},\n\t   *       childFour: {}\n\t   *     }\n\t   *   }\n\t   * ```\n\t   *\n\t   * @param {Object} obj\n\t   *        The object that contains new options.\n\t   *\n\t   * @return {Object}\n\t   *         A new object of `this.options_` and `obj` merged together.\n\t   *\n\t   * @deprecated since version 5\n\t   */\n\t\n\t\n\t  Component.prototype.options = function options(obj) {\n\t    _log2['default'].warn('this.options() has been deprecated and will be moved to the constructor in 6.0');\n\t\n\t    if (!obj) {\n\t      return this.options_;\n\t    }\n\t\n\t    this.options_ = (0, _mergeOptions2['default'])(this.options_, obj);\n\t    return this.options_;\n\t  };\n\t\n\t  /**\n\t   * Get the `Component`s DOM element\n\t   *\n\t   * @return {Element}\n\t   *         The DOM element for this `Component`.\n\t   */\n\t\n\t\n\t  Component.prototype.el = function el() {\n\t    return this.el_;\n\t  };\n\t\n\t  /**\n\t   * Create the `Component`s DOM element.\n\t   *\n\t   * @param {string} [tagName]\n\t   *        Element's DOM node type. e.g. 'div'\n\t   *\n\t   * @param {Object} [properties]\n\t   *        An object of properties that should be set.\n\t   *\n\t   * @param {Object} [attributes]\n\t   *        An object of attributes that should be set.\n\t   *\n\t   * @return {Element}\n\t   *         The element that gets created.\n\t   */\n\t\n\t\n\t  Component.prototype.createEl = function createEl(tagName, properties, attributes) {\n\t    return Dom.createEl(tagName, properties, attributes);\n\t  };\n\t\n\t  /**\n\t   * Localize a string given the string in english.\n\t   *\n\t   * @param {string} string\n\t   *        The string to localize.\n\t   *\n\t   * @return {string}\n\t   *         The localized string or if no localization exists the english string.\n\t   */\n\t\n\t\n\t  Component.prototype.localize = function localize(string) {\n\t    var code = this.player_.language && this.player_.language();\n\t    var languages = this.player_.languages && this.player_.languages();\n\t\n\t    if (!code || !languages) {\n\t      return string;\n\t    }\n\t\n\t    var language = languages[code];\n\t\n\t    if (language && language[string]) {\n\t      return language[string];\n\t    }\n\t\n\t    var primaryCode = code.split('-')[0];\n\t    var primaryLang = languages[primaryCode];\n\t\n\t    if (primaryLang && primaryLang[string]) {\n\t      return primaryLang[string];\n\t    }\n\t\n\t    return string;\n\t  };\n\t\n\t  /**\n\t   * Return the `Component`s DOM element. This is where children get inserted.\n\t   * This will usually be the the same as the element returned in {@link Component#el}.\n\t   *\n\t   * @return {Element}\n\t   *         The content element for this `Component`.\n\t   */\n\t\n\t\n\t  Component.prototype.contentEl = function contentEl() {\n\t    return this.contentEl_ || this.el_;\n\t  };\n\t\n\t  /**\n\t   * Get this `Component`s ID\n\t   *\n\t   * @return {string}\n\t   *         The id of this `Component`\n\t   */\n\t\n\t\n\t  Component.prototype.id = function id() {\n\t    return this.id_;\n\t  };\n\t\n\t  /**\n\t   * Get the `Component`s name. The name gets used to reference the `Component`\n\t   * and is set during registration.\n\t   *\n\t   * @return {string}\n\t   *         The name of this `Component`.\n\t   */\n\t\n\t\n\t  Component.prototype.name = function name() {\n\t    return this.name_;\n\t  };\n\t\n\t  /**\n\t   * Get an array of all child components\n\t   *\n\t   * @return {Array}\n\t   *         The children\n\t   */\n\t\n\t\n\t  Component.prototype.children = function children() {\n\t    return this.children_;\n\t  };\n\t\n\t  /**\n\t   * Returns the child `Component` with the given `id`.\n\t   *\n\t   * @param {string} id\n\t   *        The id of the child `Component` to get.\n\t   *\n\t   * @return {Component|undefined}\n\t   *         The child `Component` with the given `id` or undefined.\n\t   */\n\t\n\t\n\t  Component.prototype.getChildById = function getChildById(id) {\n\t    return this.childIndex_[id];\n\t  };\n\t\n\t  /**\n\t   * Returns the child `Component` with the given `name`.\n\t   *\n\t   * @param {string} name\n\t   *        The name of the child `Component` to get.\n\t   *\n\t   * @return {Component|undefined}\n\t   *         The child `Component` with the given `name` or undefined.\n\t   */\n\t\n\t\n\t  Component.prototype.getChild = function getChild(name) {\n\t    if (!name) {\n\t      return;\n\t    }\n\t\n\t    name = (0, _toTitleCase2['default'])(name);\n\t\n\t    return this.childNameIndex_[name];\n\t  };\n\t\n\t  /**\n\t   * Add a child `Component` inside the current `Component`.\n\t   *\n\t   * Example:\n\t   * ```js\n\t   *   var player = videojs('some-vid-id');\n\t   *   var Component = videojs.getComponent('Component');\n\t   *   var myComponent = new Component(player);\n\t   *\n\t   *   console.log(myComponent.el());\n\t   *   // -> <div class='my-component'></div>\n\t   *   console.log(myComponent.children());\n\t   *   // [empty array]\n\t   *\n\t   *   var myButton = myComponent.addChild('MyButton');\n\t   *\n\t   *   console.log(myComponent.el());\n\t   *   // -> <div class='my-component'><div class=\"my-button\">myButton<div></div>\n\t   *   console.log(myComponent.children());\n\t   *   // -> myButton === myComponent.children()[0];\n\t   * ```\n\t   *\n\t   * Pass in options for child constructors and options for children of the child.\n\t   * ```js\n\t   *   var player = videojs('some-vid-id');\n\t   *   var Component = videojs.getComponent('Component');\n\t   *   var myComponent = new Component(player);\n\t   *   var myButton = myComponent.addChild('MyButton', {\n\t   *     text: 'Press Me',\n\t   *     buttonChildExample: {\n\t   *       buttonChildOption: true\n\t   *     }\n\t   *   });\n\t   * ```\n\t   *\n\t   * @param {string|Component} child\n\t   *        The name or instance of a child to add.\n\t   *\n\t   * @param {Object} [options={}]\n\t   *        The key/value store of options that will get passed to children of\n\t   *        the child.\n\t   *\n\t   * @param {number} [index=this.children_.length]\n\t   *        The index to attempt to add a child into.\n\t   *\n\t   * @return {Component}\n\t   *         The `Component` that gets added as a child. When using a string the\n\t   *         `Component` will get created by this process.\n\t   */\n\t\n\t\n\t  Component.prototype.addChild = function addChild(child) {\n\t    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\t    var index = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : this.children_.length;\n\t\n\t    var component = void 0;\n\t    var componentName = void 0;\n\t\n\t    // If child is a string, create component with options\n\t    if (typeof child === 'string') {\n\t      componentName = (0, _toTitleCase2['default'])(child);\n\t\n\t      // Options can also be specified as a boolean,\n\t      // so convert to an empty object if false.\n\t      if (!options) {\n\t        options = {};\n\t      }\n\t\n\t      // Same as above, but true is deprecated so show a warning.\n\t      if (options === true) {\n\t        _log2['default'].warn('Initializing a child component with `true` is deprecated.' + 'Children should be defined in an array when possible, ' + 'but if necessary use an object instead of `true`.');\n\t        options = {};\n\t      }\n\t\n\t      var componentClassName = options.componentClass || componentName;\n\t\n\t      // Set name through options\n\t      options.name = componentName;\n\t\n\t      // Create a new object & element for this controls set\n\t      // If there's no .player_, this is a player\n\t      var ComponentClass = Component.getComponent(componentClassName);\n\t\n\t      if (!ComponentClass) {\n\t        throw new Error('Component ' + componentClassName + ' does not exist');\n\t      }\n\t\n\t      // data stored directly on the videojs object may be\n\t      // misidentified as a component to retain\n\t      // backwards-compatibility with 4.x. check to make sure the\n\t      // component class can be instantiated.\n\t      if (typeof ComponentClass !== 'function') {\n\t        return null;\n\t      }\n\t\n\t      component = new ComponentClass(this.player_ || this, options);\n\t\n\t      // child is a component instance\n\t    } else {\n\t      component = child;\n\t    }\n\t\n\t    this.children_.splice(index, 0, component);\n\t\n\t    if (typeof component.id === 'function') {\n\t      this.childIndex_[component.id()] = component;\n\t    }\n\t\n\t    // If a name wasn't used to create the component, check if we can use the\n\t    // name function of the component\n\t    componentName = componentName || component.name && component.name();\n\t\n\t    if (componentName) {\n\t      this.childNameIndex_[componentName] = component;\n\t    }\n\t\n\t    // Add the UI object's element to the container div (box)\n\t    // Having an element is not required\n\t    if (typeof component.el === 'function' && component.el()) {\n\t      var childNodes = this.contentEl().children;\n\t      var refNode = childNodes[index] || null;\n\t\n\t      this.contentEl().insertBefore(component.el(), refNode);\n\t    }\n\t\n\t    // Return so it can stored on parent object if desired.\n\t    return component;\n\t  };\n\t\n\t  /**\n\t   * Remove a child `Component` from this `Component`s list of children. Also removes\n\t   * the child `Component`s element from this `Component`s element.\n\t   *\n\t   * @param {Component} component\n\t   *        The child `Component` to remove.\n\t   */\n\t\n\t\n\t  Component.prototype.removeChild = function removeChild(component) {\n\t    if (typeof component === 'string') {\n\t      component = this.getChild(component);\n\t    }\n\t\n\t    if (!component || !this.children_) {\n\t      return;\n\t    }\n\t\n\t    var childFound = false;\n\t\n\t    for (var i = this.children_.length - 1; i >= 0; i--) {\n\t      if (this.children_[i] === component) {\n\t        childFound = true;\n\t        this.children_.splice(i, 1);\n\t        break;\n\t      }\n\t    }\n\t\n\t    if (!childFound) {\n\t      return;\n\t    }\n\t\n\t    this.childIndex_[component.id()] = null;\n\t    this.childNameIndex_[component.name()] = null;\n\t\n\t    var compEl = component.el();\n\t\n\t    if (compEl && compEl.parentNode === this.contentEl()) {\n\t      this.contentEl().removeChild(component.el());\n\t    }\n\t  };\n\t\n\t  /**\n\t   * Add and initialize default child `Component`s based upon options.\n\t   *\n\t   * Example.\n\t   * ```js\n\t   *   var MyComponent = videojs.extend(videojs.getComponent('Component'));\n\t   *   // when an instance of MyComponent is created, all children in options\n\t   *   // will be added to the instance by their name strings and options\n\t   *   MyComponent.prototype.options_ = {\n\t   *     children: [\n\t   *       'myChildComponent'\n\t   *     ],\n\t   *     myChildComponent: {\n\t   *       myChildOption: true\n\t   *     }\n\t   *   };\n\t   *\n\t   *   // Or when creating the component\n\t   *   var player = videojs('some-player-id');\n\t   *   var myComp = new MyComponent(player, {\n\t   *     children: [\n\t   *       'myChildComponent'\n\t   *     ],\n\t   *     myChildComponent: {\n\t   *       myChildOption: true\n\t   *     }\n\t   *   });\n\t   * ```\n\t   *\n\t   * The children option can also be an array of child options objects\n\t   * (that also include a 'name' key). This will get used if you have two child\n\t   * components of the same type that need different options.\n\t   * ```js\n\t   *   // MyComponent is from the above example\n\t   *   var myComp = new MyComponent(player, {\n\t   *     children: ['button', {\n\t   *       name: 'button',\n\t   *       someOtherOption: true\n\t   *     }, {\n\t   *       name: 'button',\n\t   *       someOtherOption: false\n\t   *     }]\n\t   *   });\n\t   * ```\n\t   */\n\t\n\t\n\t  Component.prototype.initChildren = function initChildren() {\n\t    var _this = this;\n\t\n\t    var children = this.options_.children;\n\t\n\t    if (children) {\n\t      (function () {\n\t        // `this` is `parent`\n\t        var parentOptions = _this.options_;\n\t\n\t        var handleAdd = function handleAdd(child) {\n\t          var name = child.name;\n\t          var opts = child.opts;\n\t\n\t          // Allow options for children to be set at the parent options\n\t          // e.g. videojs(id, { controlBar: false });\n\t          // instead of videojs(id, { children: { controlBar: false });\n\t          if (parentOptions[name] !== undefined) {\n\t            opts = parentOptions[name];\n\t          }\n\t\n\t          // Allow for disabling default components\n\t          // e.g. options['children']['posterImage'] = false\n\t          if (opts === false) {\n\t            return;\n\t          }\n\t\n\t          // Allow options to be passed as a simple boolean if no configuration\n\t          // is necessary.\n\t          if (opts === true) {\n\t            opts = {};\n\t          }\n\t\n\t          // We also want to pass the original player options\n\t          // to each component as well so they don't need to\n\t          // reach back into the player for options later.\n\t          opts.playerOptions = _this.options_.playerOptions;\n\t\n\t          // Create and add the child component.\n\t          // Add a direct reference to the child by name on the parent instance.\n\t          // If two of the same component are used, different names should be supplied\n\t          // for each\n\t          var newChild = _this.addChild(name, opts);\n\t\n\t          if (newChild) {\n\t            _this[name] = newChild;\n\t          }\n\t        };\n\t\n\t        // Allow for an array of children details to passed in the options\n\t        var workingChildren = void 0;\n\t        var Tech = Component.getComponent('Tech');\n\t\n\t        if (Array.isArray(children)) {\n\t          workingChildren = children;\n\t        } else {\n\t          workingChildren = Object.keys(children);\n\t        }\n\t\n\t        workingChildren\n\t        // children that are in this.options_ but also in workingChildren  would\n\t        // give us extra children we do not want. So, we want to filter them out.\n\t        .concat(Object.keys(_this.options_).filter(function (child) {\n\t          return !workingChildren.some(function (wchild) {\n\t            if (typeof wchild === 'string') {\n\t              return child === wchild;\n\t            }\n\t            return child === wchild.name;\n\t          });\n\t        })).map(function (child) {\n\t          var name = void 0;\n\t          var opts = void 0;\n\t\n\t          if (typeof child === 'string') {\n\t            name = child;\n\t            opts = children[name] || _this.options_[name] || {};\n\t          } else {\n\t            name = child.name;\n\t            opts = child;\n\t          }\n\t\n\t          return { name: name, opts: opts };\n\t        }).filter(function (child) {\n\t          // we have to make sure that child.name isn't in the techOrder since\n\t          // techs are registerd as Components but can't aren't compatible\n\t          // See https://github.com/videojs/video.js/issues/2772\n\t          var c = Component.getComponent(child.opts.componentClass || (0, _toTitleCase2['default'])(child.name));\n\t\n\t          return c && !Tech.isTech(c);\n\t        }).forEach(handleAdd);\n\t      })();\n\t    }\n\t  };\n\t\n\t  /**\n\t   * Builds the default DOM class name. Should be overriden by sub-components.\n\t   *\n\t   * @return {string}\n\t   *         The DOM class name for this object.\n\t   *\n\t   * @abstract\n\t   */\n\t\n\t\n\t  Component.prototype.buildCSSClass = function buildCSSClass() {\n\t    // Child classes can include a function that does:\n\t    // return 'CLASS NAME' + this._super();\n\t    return '';\n\t  };\n\t\n\t  /**\n\t   * Add an `event listener` to this `Component`s element.\n\t   *\n\t   * ```js\n\t   *   var player = videojs('some-player-id');\n\t   *   var Component = videojs.getComponent('Component');\n\t   *   var myComponent = new Component(player);\n\t   *   var myFunc = function() {\n\t   *     var myComponent = this;\n\t   *     console.log('myFunc called');\n\t   *   };\n\t   *\n\t   *   myComponent.on('eventType', myFunc);\n\t   *   myComponent.trigger('eventType');\n\t   *   // logs 'myFunc called'\n\t   * ```\n\t   *\n\t   * The context of `myFunc` will be `myComponent` unless it is bound. You can add\n\t   * a listener to another element or component.\n\t   * ```js\n\t   *   var otherComponent = new Component(player);\n\t   *\n\t   *   // myComponent/myFunc is from the above example\n\t   *   myComponent.on(otherComponent.el(), 'eventName', myFunc);\n\t   *   myComponent.on(otherComponent, 'eventName', myFunc);\n\t   *\n\t   *   otherComponent.trigger('eventName');\n\t   *   // logs 'myFunc called' twice\n\t   * ```\n\t   *\n\t   * The benefit of using this over the following:\n\t   * - `VjsEvents.on(otherElement, 'eventName', myFunc)`\n\t   * - `otherComponent.on('eventName', myFunc)`\n\t   * Is that the listeners will get cleaned up when either component gets disposed.\n\t   * It will also bind `myComponent` as the context of `myFunc`.\n\t   * > NOTE: If you remove the element from the DOM that has used `on` you need to\n\t   *             clean up references using:\n\t   *\n\t   *             `myComponent.trigger(el, 'dispose')`\n\t   *\n\t   *             This will also allow the browser to garbage collect it. In special\n\t   *             cases such as with `window` and `document`, which are both permanent,\n\t   *             this is not necessary.\n\t   *\n\t   * @param {string|Component|string[]} [first]\n\t   *        The event name, and array of event names, or another `Component`.\n\t   *\n\t   * @param {EventTarget~EventListener|string|string[]} [second]\n\t   *        The listener function, an event name, or an Array of events names.\n\t   *\n\t   * @param {EventTarget~EventListener} [third]\n\t   *        The event handler if `first` is a `Component` and `second` is an event name\n\t   *        or an Array of event names.\n\t   *\n\t   * @return {Component}\n\t   *         Returns itself; method can be chained.\n\t   *\n\t   * @listens Component#dispose\n\t   */\n\t\n\t\n\t  Component.prototype.on = function on(first, second, third) {\n\t    var _this2 = this;\n\t\n\t    if (typeof first === 'string' || Array.isArray(first)) {\n\t      Events.on(this.el_, first, Fn.bind(this, second));\n\t\n\t      // Targeting another component or element\n\t    } else {\n\t      (function () {\n\t        var target = first;\n\t        var type = second;\n\t        var fn = Fn.bind(_this2, third);\n\t\n\t        // When this component is disposed, remove the listener from the other component\n\t        var removeOnDispose = function removeOnDispose() {\n\t          return _this2.off(target, type, fn);\n\t        };\n\t\n\t        // Use the same function ID so we can remove it later it using the ID\n\t        // of the original listener\n\t        removeOnDispose.guid = fn.guid;\n\t        _this2.on('dispose', removeOnDispose);\n\t\n\t        // If the other component is disposed first we need to clean the reference\n\t        // to the other component in this component's removeOnDispose listener\n\t        // Otherwise we create a memory leak.\n\t        var cleanRemover = function cleanRemover() {\n\t          return _this2.off('dispose', removeOnDispose);\n\t        };\n\t\n\t        // Add the same function ID so we can easily remove it later\n\t        cleanRemover.guid = fn.guid;\n\t\n\t        // Check if this is a DOM node\n\t        if (first.nodeName) {\n\t          // Add the listener to the other element\n\t          Events.on(target, type, fn);\n\t          Events.on(target, 'dispose', cleanRemover);\n\t\n\t          // Should be a component\n\t          // Not using `instanceof Component` because it makes mock players difficult\n\t        } else if (typeof first.on === 'function') {\n\t          // Add the listener to the other component\n\t          target.on(type, fn);\n\t          target.on('dispose', cleanRemover);\n\t        }\n\t      })();\n\t    }\n\t\n\t    return this;\n\t  };\n\t\n\t  /**\n\t   * Remove an event listener from this `Component`s element.\n\t   * ```js\n\t   *   var player = videojs('some-player-id');\n\t   *   var Component = videojs.getComponent('Component');\n\t   *   var myComponent = new Component(player);\n\t   *   var myFunc = function() {\n\t   *     var myComponent = this;\n\t   *     console.log('myFunc called');\n\t   *   };\n\t   *   myComponent.on('eventType', myFunc);\n\t   *   myComponent.trigger('eventType');\n\t   *   // logs 'myFunc called'\n\t   *\n\t   *   myComponent.off('eventType', myFunc);\n\t   *   myComponent.trigger('eventType');\n\t   *   // does nothing\n\t   * ```\n\t   *\n\t   * If myFunc gets excluded, ALL listeners for the event type will get removed. If\n\t   * eventType gets excluded, ALL listeners will get removed from the component.\n\t   * You can use `off` to remove listeners that get added to other elements or\n\t   * components using:\n\t   *\n\t   *  `myComponent.on(otherComponent...`\n\t   *\n\t   * In this case both the event type and listener function are **REQUIRED**.\n\t   *\n\t   * ```js\n\t   *   var otherComponent = new Component(player);\n\t   *\n\t   *   // myComponent/myFunc is from the above example\n\t   *   myComponent.on(otherComponent.el(), 'eventName', myFunc);\n\t   *   myComponent.on(otherComponent, 'eventName', myFunc);\n\t   *\n\t   *   otherComponent.trigger('eventName');\n\t   *   // logs 'myFunc called' twice\n\t   *   myComponent.off(ootherComponent.el(), 'eventName', myFunc);\n\t   *   myComponent.off(otherComponent, 'eventName', myFunc);\n\t   *   otherComponent.trigger('eventName');\n\t   *   // does nothing\n\t   * ```\n\t   *\n\t   * @param {string|Component|string[]} [first]\n\t   *        The event name, and array of event names, or another `Component`.\n\t   *\n\t   * @param {EventTarget~EventListener|string|string[]} [second]\n\t   *        The listener function, an event name, or an Array of events names.\n\t   *\n\t   * @param {EventTarget~EventListener} [third]\n\t   *        The event handler if `first` is a `Component` and `second` is an event name\n\t   *        or an Array of event names.\n\t   *\n\t   * @return {Component}\n\t   *         Returns itself; method can be chained.\n\t   */\n\t\n\t\n\t  Component.prototype.off = function off(first, second, third) {\n\t    if (!first || typeof first === 'string' || Array.isArray(first)) {\n\t      Events.off(this.el_, first, second);\n\t    } else {\n\t      var target = first;\n\t      var type = second;\n\t      // Ensure there's at least a guid, even if the function hasn't been used\n\t      var fn = Fn.bind(this, third);\n\t\n\t      // Remove the dispose listener on this component,\n\t      // which was given the same guid as the event listener\n\t      this.off('dispose', fn);\n\t\n\t      if (first.nodeName) {\n\t        // Remove the listener\n\t        Events.off(target, type, fn);\n\t        // Remove the listener for cleaning the dispose listener\n\t        Events.off(target, 'dispose', fn);\n\t      } else {\n\t        target.off(type, fn);\n\t        target.off('dispose', fn);\n\t      }\n\t    }\n\t\n\t    return this;\n\t  };\n\t\n\t  /**\n\t   * Add an event listener that gets triggered only once and then gets removed.\n\t   * ```js\n\t   *   var player = videojs('some-player-id');\n\t   *   var Component = videojs.getComponent('Component');\n\t   *   var myComponent = new Component(player);\n\t   *   var myFunc = function() {\n\t   *     var myComponent = this;\n\t   *     console.log('myFunc called');\n\t   *   };\n\t   *   myComponent.one('eventName', myFunc);\n\t   *   myComponent.trigger('eventName');\n\t   *   // logs 'myFunc called'\n\t   *\n\t   *   myComponent.trigger('eventName');\n\t   *   // does nothing\n\t   *\n\t   * ```\n\t   *\n\t   * You can also add a listener to another element or component that will get\n\t   * triggered only once.\n\t   * ```js\n\t   *   var otherComponent = new Component(player);\n\t   *\n\t   *   // myComponent/myFunc is from the above example\n\t   *   myComponent.one(otherComponent.el(), 'eventName', myFunc);\n\t   *   myComponent.one(otherComponent, 'eventName', myFunc);\n\t   *\n\t   *   otherComponent.trigger('eventName');\n\t   *   // logs 'myFunc called' twice\n\t   *\n\t   *   otherComponent.trigger('eventName');\n\t   *   // does nothing\n\t   * ```\n\t   *\n\t   * @param {string|Component|string[]} [first]\n\t   *        The event name, and array of event names, or another `Component`.\n\t   *\n\t   * @param {EventTarget~EventListener|string|string[]} [second]\n\t   *        The listener function, an event name, or an Array of events names.\n\t   *\n\t   * @param {EventTarget~EventListener} [third]\n\t   *        The event handler if `first` is a `Component` and `second` is an event name\n\t   *        or an Array of event names.\n\t   *\n\t   * @return {Component}\n\t   *         Returns itself; method can be chained.\n\t   */\n\t\n\t\n\t  Component.prototype.one = function one(first, second, third) {\n\t    var _this3 = this,\n\t        _arguments = arguments;\n\t\n\t    if (typeof first === 'string' || Array.isArray(first)) {\n\t      Events.one(this.el_, first, Fn.bind(this, second));\n\t    } else {\n\t      (function () {\n\t        var target = first;\n\t        var type = second;\n\t        var fn = Fn.bind(_this3, third);\n\t\n\t        var newFunc = function newFunc() {\n\t          _this3.off(target, type, newFunc);\n\t          fn.apply(null, _arguments);\n\t        };\n\t\n\t        // Keep the same function ID so we can remove it later\n\t        newFunc.guid = fn.guid;\n\t\n\t        _this3.on(target, type, newFunc);\n\t      })();\n\t    }\n\t\n\t    return this;\n\t  };\n\t\n\t  /**\n\t   * Trigger an event on an element.\n\t   *\n\t   * ```js\n\t   *   var player = videojs('some-player-id');\n\t   *   var Component = videojs.getComponent('Component');\n\t   *   var myComponent = new Component(player);\n\t   *   var myFunc = function(data) {\n\t   *     var myComponent = this;\n\t   *     console.log('myFunc called');\n\t   *     console.log(data);\n\t   *   };\n\t   *   myComponent.one('eventName', myFunc);\n\t   *   myComponent.trigger('eventName');\n\t   *   // logs 'myFunc called' and 'undefined'\n\t   *\n\t   *   myComponent.trigger({'type':'eventName'});\n\t   *   // logs 'myFunc called' and 'undefined'\n\t   *\n\t   *   myComponent.trigger('eventName', {data: 'some data'});\n\t   *   // logs 'myFunc called' and \"{data: 'some data'}\"\n\t   *\n\t   *   myComponent.trigger({'type':'eventName'}, {data: 'some data'});\n\t   *   // logs 'myFunc called' and \"{data: 'some data'}\"\n\t   * ```\n\t   *\n\t   * @param {EventTarget~Event|Object|string} event\n\t   *        The event name, and Event, or an event-like object with a type attribute\n\t   *        set to the event name.\n\t   *\n\t   * @param {Object} [hash]\n\t   *        Data hash to pass along with the event\n\t   *\n\t   * @return {Component}\n\t   *         Returns itself; method can be chained.\n\t   */\n\t\n\t\n\t  Component.prototype.trigger = function trigger(event, hash) {\n\t    Events.trigger(this.el_, event, hash);\n\t    return this;\n\t  };\n\t\n\t  /**\n\t   * Bind a listener to the component's ready state. If the ready event has already\n\t   * happened it will trigger the function immediately.\n\t   *\n\t   * @param  {Component~ReadyCallback} fn\n\t   *         A function to call when ready is triggered.\n\t   *\n\t   * @param  {boolean} [sync=false]\n\t   *         Execute the listener synchronously if `Component` is ready.\n\t   *\n\t   * @return {Component}\n\t   *         Returns itself; method can be chained.\n\t   */\n\t\n\t\n\t  Component.prototype.ready = function ready(fn) {\n\t    var sync = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n\t\n\t    if (fn) {\n\t      if (this.isReady_) {\n\t        if (sync) {\n\t          fn.call(this);\n\t        } else {\n\t          // Call the function asynchronously by default for consistency\n\t          this.setTimeout(fn, 1);\n\t        }\n\t      } else {\n\t        this.readyQueue_ = this.readyQueue_ || [];\n\t        this.readyQueue_.push(fn);\n\t      }\n\t    }\n\t    return this;\n\t  };\n\t\n\t  /**\n\t   * Trigger all the ready listeners for this `Component`.\n\t   *\n\t   * @fires Component#ready\n\t   */\n\t\n\t\n\t  Component.prototype.triggerReady = function triggerReady() {\n\t    this.isReady_ = true;\n\t\n\t    // Ensure ready is triggerd asynchronously\n\t    this.setTimeout(function () {\n\t      var readyQueue = this.readyQueue_;\n\t\n\t      // Reset Ready Queue\n\t      this.readyQueue_ = [];\n\t\n\t      if (readyQueue && readyQueue.length > 0) {\n\t        readyQueue.forEach(function (fn) {\n\t          fn.call(this);\n\t        }, this);\n\t      }\n\t\n\t      // Allow for using event listeners also\n\t      /**\n\t       * Triggered when a `Component` is ready.\n\t       *\n\t       * @event Component#ready\n\t       * @type {EventTarget~Event}\n\t       */\n\t      this.trigger('ready');\n\t    }, 1);\n\t  };\n\t\n\t  /**\n\t   * Find a single DOM element matching a `selector`. This can be within the `Component`s\n\t   * `contentEl()` or another custom context.\n\t   *\n\t   * @param {string} selector\n\t   *        A valid CSS selector, which will be passed to `querySelector`.\n\t   *\n\t   * @param {Element|string} [context=this.contentEl()]\n\t   *        A DOM element within which to query. Can also be a selector string in\n\t   *        which case the first matching element will get used as context. If\n\t   *        missing `this.contentEl()` gets used. If  `this.contentEl()` returns\n\t   *        nothing it falls back to `document`.\n\t   *\n\t   * @return {Element|null}\n\t   *         the dom element that was found, or null\n\t   *\n\t   * @see [Information on CSS Selectors](https://developer.mozilla.org/en-US/docs/Web/Guide/CSS/Getting_Started/Selectors)\n\t   */\n\t\n\t\n\t  Component.prototype.$ = function $(selector, context) {\n\t    return Dom.$(selector, context || this.contentEl());\n\t  };\n\t\n\t  /**\n\t   * Finds all DOM element matching a `selector`. This can be within the `Component`s\n\t   * `contentEl()` or another custom context.\n\t   *\n\t   * @param {string} selector\n\t   *        A valid CSS selector, which will be passed to `querySelectorAll`.\n\t   *\n\t   * @param {Element|string} [context=this.contentEl()]\n\t   *        A DOM element within which to query. Can also be a selector string in\n\t   *        which case the first matching element will get used as context. If\n\t   *        missing `this.contentEl()` gets used. If  `this.contentEl()` returns\n\t   *        nothing it falls back to `document`.\n\t   *\n\t   * @return {NodeList}\n\t   *         a list of dom elements that were found\n\t   *\n\t   * @see [Information on CSS Selectors](https://developer.mozilla.org/en-US/docs/Web/Guide/CSS/Getting_Started/Selectors)\n\t   */\n\t\n\t\n\t  Component.prototype.$$ = function $$(selector, context) {\n\t    return Dom.$$(selector, context || this.contentEl());\n\t  };\n\t\n\t  /**\n\t   * Check if a component's element has a CSS class name.\n\t   *\n\t   * @param {string} classToCheck\n\t   *        CSS class name to check.\n\t   *\n\t   * @return {boolean}\n\t   *         - True if the `Component` has the class.\n\t   *         - False if the `Component` does not have the class`\n\t   */\n\t\n\t\n\t  Component.prototype.hasClass = function hasClass(classToCheck) {\n\t    return Dom.hasElClass(this.el_, classToCheck);\n\t  };\n\t\n\t  /**\n\t   * Add a CSS class name to the `Component`s element.\n\t   *\n\t   * @param {string} classToAdd\n\t   *        CSS class name to add\n\t   *\n\t   * @return {Component}\n\t   *         Returns itself; method can be chained.\n\t   */\n\t\n\t\n\t  Component.prototype.addClass = function addClass(classToAdd) {\n\t    Dom.addElClass(this.el_, classToAdd);\n\t    return this;\n\t  };\n\t\n\t  /**\n\t   * Remove a CSS class name from the `Component`s element.\n\t   *\n\t   * @param {string} classToRemove\n\t   *        CSS class name to remove\n\t   *\n\t   * @return {Component}\n\t   *         Returns itself; method can be chained.\n\t   */\n\t\n\t\n\t  Component.prototype.removeClass = function removeClass(classToRemove) {\n\t    Dom.removeElClass(this.el_, classToRemove);\n\t    return this;\n\t  };\n\t\n\t  /**\n\t   * Add or remove a CSS class name from the component's element.\n\t   * - `classToToggle` gets added when {@link Component#hasClass} would return false.\n\t   * - `classToToggle` gets removed when {@link Component#hasClass} would return true.\n\t   *\n\t   * @param  {string} classToToggle\n\t   *         The class to add or remove based on (@link Component#hasClass}\n\t   *\n\t   * @param  {boolean|Dom~predicate} [predicate]\n\t   *         An {@link Dom~predicate} function or a boolean\n\t   *\n\t   * @return {Component}\n\t   *         Returns itself; method can be chained.\n\t   */\n\t\n\t\n\t  Component.prototype.toggleClass = function toggleClass(classToToggle, predicate) {\n\t    Dom.toggleElClass(this.el_, classToToggle, predicate);\n\t    return this;\n\t  };\n\t\n\t  /**\n\t   * Show the `Component`s element if it is hidden by removing the\n\t   * 'vjs-hidden' class name from it.\n\t   *\n\t   * @return {Component}\n\t   *         Returns itself; method can be chained.\n\t   */\n\t\n\t\n\t  Component.prototype.show = function show() {\n\t    this.removeClass('vjs-hidden');\n\t    return this;\n\t  };\n\t\n\t  /**\n\t   * Hide the `Component`s element if it is currently showing by adding the\n\t   * 'vjs-hidden` class name to it.\n\t   *\n\t   * @return {Component}\n\t   *         Returns itself; method can be chained.\n\t   */\n\t\n\t\n\t  Component.prototype.hide = function hide() {\n\t    this.addClass('vjs-hidden');\n\t    return this;\n\t  };\n\t\n\t  /**\n\t   * Lock a `Component`s element in its visible state by adding the 'vjs-lock-showing'\n\t   * class name to it. Used during fadeIn/fadeOut.\n\t   *\n\t   * @return {Component}\n\t   *         Returns itself; method can be chained.\n\t   *\n\t   * @private\n\t   */\n\t\n\t\n\t  Component.prototype.lockShowing = function lockShowing() {\n\t    this.addClass('vjs-lock-showing');\n\t    return this;\n\t  };\n\t\n\t  /**\n\t   * Unlock a `Component`s element from its visible state by removing the 'vjs-lock-showing'\n\t   * class name from it. Used during fadeIn/fadeOut.\n\t   *\n\t   * @return {Component}\n\t   *         Returns itself; method can be chained.\n\t   *\n\t   * @private\n\t   */\n\t\n\t\n\t  Component.prototype.unlockShowing = function unlockShowing() {\n\t    this.removeClass('vjs-lock-showing');\n\t    return this;\n\t  };\n\t\n\t  /**\n\t   * Get the value of an attribute on the `Component`s element.\n\t   *\n\t   * @param {string} attribute\n\t   *        Name of the attribute to get the value from.\n\t   *\n\t   * @return {string|null}\n\t   *         - The value of the attribute that was asked for.\n\t   *         - Can be an empty string on some browsers if the attribute does not exist\n\t   *           or has no value\n\t   *         - Most browsers will return null if the attibute does not exist or has\n\t   *           no value.\n\t   *\n\t   * @see [DOM API]{@link https://developer.mozilla.org/en-US/docs/Web/API/Element/getAttribute}\n\t   */\n\t\n\t\n\t  Component.prototype.getAttribute = function getAttribute(attribute) {\n\t    return Dom.getAttribute(this.el_, attribute);\n\t  };\n\t\n\t  /**\n\t   * Set the value of an attribute on the `Component`'s element\n\t   *\n\t   * @param {string} attribute\n\t   *        Name of the attribute to set.\n\t   *\n\t   * @param {string} value\n\t   *        Value to set the attribute to.\n\t   *\n\t   * @return {Component}\n\t   *         Returns itself; method can be chained.\n\t   *\n\t   * @see [DOM API]{@link https://developer.mozilla.org/en-US/docs/Web/API/Element/setAttribute}\n\t   */\n\t\n\t\n\t  Component.prototype.setAttribute = function setAttribute(attribute, value) {\n\t    Dom.setAttribute(this.el_, attribute, value);\n\t    return this;\n\t  };\n\t\n\t  /**\n\t   * Remove an attribute from the `Component`s element.\n\t   *\n\t   * @param {string} attribute\n\t   *        Name of the attribute to remove.\n\t   *\n\t   * @return {Component}\n\t   *         Returns itself; method can be chained.\n\t   *\n\t   * @see [DOM API]{@link https://developer.mozilla.org/en-US/docs/Web/API/Element/removeAttribute}\n\t   */\n\t\n\t\n\t  Component.prototype.removeAttribute = function removeAttribute(attribute) {\n\t    Dom.removeAttribute(this.el_, attribute);\n\t    return this;\n\t  };\n\t\n\t  /**\n\t   * Get or set the width of the component based upon the CSS styles.\n\t   * See {@link Component#dimension} for more detailed information.\n\t   *\n\t   * @param {number|string} [num]\n\t   *        The width that you want to set postfixed with '%', 'px' or nothing.\n\t   *\n\t   * @param {boolean} [skipListeners]\n\t   *        Skip the resize event trigger\n\t   *\n\t   * @return {Component|number|string}\n\t   *         - The width when getting, zero if there is no width. Can be a string\n\t   *           postpixed with '%' or 'px'.\n\t   *         - Returns itself when setting; method can be chained.\n\t   */\n\t\n\t\n\t  Component.prototype.width = function width(num, skipListeners) {\n\t    return this.dimension('width', num, skipListeners);\n\t  };\n\t\n\t  /**\n\t   * Get or set the height of the component based upon the CSS styles.\n\t   * See {@link Component#dimension} for more detailed information.\n\t   *\n\t   * @param {number|string} [num]\n\t   *        The height that you want to set postfixed with '%', 'px' or nothing.\n\t   *\n\t   * @param {boolean} [skipListeners]\n\t   *        Skip the resize event trigger\n\t   *\n\t   * @return {Component|number|string}\n\t   *         - The width when getting, zero if there is no width. Can be a string\n\t   *           postpixed with '%' or 'px'.\n\t   *         - Returns itself when setting; method can be chained.\n\t   */\n\t\n\t\n\t  Component.prototype.height = function height(num, skipListeners) {\n\t    return this.dimension('height', num, skipListeners);\n\t  };\n\t\n\t  /**\n\t   * Set both the width and height of the `Component` element at the same time.\n\t   *\n\t   * @param  {number|string} width\n\t   *         Width to set the `Component`s element to.\n\t   *\n\t   * @param  {number|string} height\n\t   *         Height to set the `Component`s element to.\n\t   *\n\t   * @return {Component}\n\t   *         Returns itself; method can be chained.\n\t   */\n\t\n\t\n\t  Component.prototype.dimensions = function dimensions(width, height) {\n\t    // Skip resize listeners on width for optimization\n\t    return this.width(width, true).height(height);\n\t  };\n\t\n\t  /**\n\t   * Get or set width or height of the `Component` element. This is the shared code\n\t   * for the {@link Component#width} and {@link Component#height}.\n\t   *\n\t   * Things to know:\n\t   * - If the width or height in an number this will return the number postfixed with 'px'.\n\t   * - If the width/height is a percent this will return the percent postfixed with '%'\n\t   * - Hidden elements have a width of 0 with `window.getComputedStyle`. This function\n\t   *   defaults to the `Component`s `style.width` and falls back to `window.getComputedStyle`.\n\t   *   See [this]{@link http://www.foliotek.com/devblog/getting-the-width-of-a-hidden-element-with-jquery-using-width/}\n\t   *   for more information\n\t   * - If you want the computed style of the component, use {@link Component#currentWidth}\n\t   *   and {@link {Component#currentHeight}\n\t   *\n\t   * @fires Component#resize\n\t   *\n\t   * @param {string} widthOrHeight\n\t   8        'width' or 'height'\n\t   *\n\t   * @param  {number|string} [num]\n\t   8         New dimension\n\t   *\n\t   * @param  {boolean} [skipListeners]\n\t   *         Skip resize event trigger\n\t   *\n\t   * @return {Component}\n\t   *         - the dimension when getting or 0 if unset\n\t   *         - Returns itself when setting; method can be chained.\n\t   */\n\t\n\t\n\t  Component.prototype.dimension = function dimension(widthOrHeight, num, skipListeners) {\n\t    if (num !== undefined) {\n\t      // Set to zero if null or literally NaN (NaN !== NaN)\n\t      if (num === null || num !== num) {\n\t        num = 0;\n\t      }\n\t\n\t      // Check if using css width/height (% or px) and adjust\n\t      if (('' + num).indexOf('%') !== -1 || ('' + num).indexOf('px') !== -1) {\n\t        this.el_.style[widthOrHeight] = num;\n\t      } else if (num === 'auto') {\n\t        this.el_.style[widthOrHeight] = '';\n\t      } else {\n\t        this.el_.style[widthOrHeight] = num + 'px';\n\t      }\n\t\n\t      // skipListeners allows us to avoid triggering the resize event when setting both width and height\n\t      if (!skipListeners) {\n\t        /**\n\t         * Triggered when a component is resized.\n\t         *\n\t         * @event Component#resize\n\t         * @type {EventTarget~Event}\n\t         */\n\t        this.trigger('resize');\n\t      }\n\t\n\t      // Return component\n\t      return this;\n\t    }\n\t\n\t    // Not setting a value, so getting it\n\t    // Make sure element exists\n\t    if (!this.el_) {\n\t      return 0;\n\t    }\n\t\n\t    // Get dimension value from style\n\t    var val = this.el_.style[widthOrHeight];\n\t    var pxIndex = val.indexOf('px');\n\t\n\t    if (pxIndex !== -1) {\n\t      // Return the pixel value with no 'px'\n\t      return parseInt(val.slice(0, pxIndex), 10);\n\t    }\n\t\n\t    // No px so using % or no style was set, so falling back to offsetWidth/height\n\t    // If component has display:none, offset will return 0\n\t    // TODO: handle display:none and no dimension style using px\n\t    return parseInt(this.el_['offset' + (0, _toTitleCase2['default'])(widthOrHeight)], 10);\n\t  };\n\t\n\t  /**\n\t   * Get the width or the height of the `Component` elements computed style. Uses\n\t   * `window.getComputedStyle`.\n\t   *\n\t   * @param {string} widthOrHeight\n\t   *        A string containing 'width' or 'height'. Whichever one you want to get.\n\t   *\n\t   * @return {number}\n\t   *         The dimension that gets asked for or 0 if nothing was set\n\t   *         for that dimension.\n\t   */\n\t\n\t\n\t  Component.prototype.currentDimension = function currentDimension(widthOrHeight) {\n\t    var computedWidthOrHeight = 0;\n\t\n\t    if (widthOrHeight !== 'width' && widthOrHeight !== 'height') {\n\t      throw new Error('currentDimension only accepts width or height value');\n\t    }\n\t\n\t    if (typeof _window2['default'].getComputedStyle === 'function') {\n\t      var computedStyle = _window2['default'].getComputedStyle(this.el_);\n\t\n\t      computedWidthOrHeight = computedStyle.getPropertyValue(widthOrHeight) || computedStyle[widthOrHeight];\n\t    }\n\t\n\t    // remove 'px' from variable and parse as integer\n\t    computedWidthOrHeight = parseFloat(computedWidthOrHeight);\n\t\n\t    // if the computed value is still 0, it's possible that the browser is lying\n\t    // and we want to check the offset values.\n\t    // This code also runs on IE8 and wherever getComputedStyle doesn't exist.\n\t    if (computedWidthOrHeight === 0) {\n\t      var rule = 'offset' + (0, _toTitleCase2['default'])(widthOrHeight);\n\t\n\t      computedWidthOrHeight = this.el_[rule];\n\t    }\n\t\n\t    return computedWidthOrHeight;\n\t  };\n\t\n\t  /**\n\t   * An object that contains width and height values of the `Component`s\n\t   * computed style. Uses `window.getComputedStyle`.\n\t   *\n\t   * @typedef {Object} Component~DimensionObject\n\t   *\n\t   * @property {number} width\n\t   *           The width of the `Component`s computed style.\n\t   *\n\t   * @property {number} height\n\t   *           The height of the `Component`s computed style.\n\t   */\n\t\n\t  /**\n\t   * Get an object that contains width and height values of the `Component`s\n\t   * computed style.\n\t   *\n\t   * @return {Component~DimensionObject}\n\t   *         The dimensions of the components element\n\t   */\n\t\n\t\n\t  Component.prototype.currentDimensions = function currentDimensions() {\n\t    return {\n\t      width: this.currentDimension('width'),\n\t      height: this.currentDimension('height')\n\t    };\n\t  };\n\t\n\t  /**\n\t   * Get the width of the `Component`s computed style. Uses `window.getComputedStyle`.\n\t   *\n\t   * @return {number} width\n\t   *           The width of the `Component`s computed style.\n\t   */\n\t\n\t\n\t  Component.prototype.currentWidth = function currentWidth() {\n\t    return this.currentDimension('width');\n\t  };\n\t\n\t  /**\n\t   * Get the height of the `Component`s computed style. Uses `window.getComputedStyle`.\n\t   *\n\t   * @return {number} height\n\t   *           The height of the `Component`s computed style.\n\t   */\n\t\n\t\n\t  Component.prototype.currentHeight = function currentHeight() {\n\t    return this.currentDimension('height');\n\t  };\n\t\n\t  /**\n\t   * Emit a 'tap' events when touch event support gets detected. This gets used to\n\t   * support toggling the controls through a tap on the video. They get enabled\n\t   * because every sub-component would have extra overhead otherwise.\n\t   *\n\t   * @private\n\t   * @fires Component#tap\n\t   * @listens Component#touchstart\n\t   * @listens Component#touchmove\n\t   * @listens Component#touchleave\n\t   * @listens Component#touchcancel\n\t   * @listens Component#touchend\n\t    */\n\t\n\t\n\t  Component.prototype.emitTapEvents = function emitTapEvents() {\n\t    // Track the start time so we can determine how long the touch lasted\n\t    var touchStart = 0;\n\t    var firstTouch = null;\n\t\n\t    // Maximum movement allowed during a touch event to still be considered a tap\n\t    // Other popular libs use anywhere from 2 (hammer.js) to 15,\n\t    // so 10 seems like a nice, round number.\n\t    var tapMovementThreshold = 10;\n\t\n\t    // The maximum length a touch can be while still being considered a tap\n\t    var touchTimeThreshold = 200;\n\t\n\t    var couldBeTap = void 0;\n\t\n\t    this.on('touchstart', function (event) {\n\t      // If more than one finger, don't consider treating this as a click\n\t      if (event.touches.length === 1) {\n\t        // Copy pageX/pageY from the object\n\t        firstTouch = {\n\t          pageX: event.touches[0].pageX,\n\t          pageY: event.touches[0].pageY\n\t        };\n\t        // Record start time so we can detect a tap vs. \"touch and hold\"\n\t        touchStart = new Date().getTime();\n\t        // Reset couldBeTap tracking\n\t        couldBeTap = true;\n\t      }\n\t    });\n\t\n\t    this.on('touchmove', function (event) {\n\t      // If more than one finger, don't consider treating this as a click\n\t      if (event.touches.length > 1) {\n\t        couldBeTap = false;\n\t      } else if (firstTouch) {\n\t        // Some devices will throw touchmoves for all but the slightest of taps.\n\t        // So, if we moved only a small distance, this could still be a tap\n\t        var xdiff = event.touches[0].pageX - firstTouch.pageX;\n\t        var ydiff = event.touches[0].pageY - firstTouch.pageY;\n\t        var touchDistance = Math.sqrt(xdiff * xdiff + ydiff * ydiff);\n\t\n\t        if (touchDistance > tapMovementThreshold) {\n\t          couldBeTap = false;\n\t        }\n\t      }\n\t    });\n\t\n\t    var noTap = function noTap() {\n\t      couldBeTap = false;\n\t    };\n\t\n\t    // TODO: Listen to the original target. http://youtu.be/DujfpXOKUp8?t=13m8s\n\t    this.on('touchleave', noTap);\n\t    this.on('touchcancel', noTap);\n\t\n\t    // When the touch ends, measure how long it took and trigger the appropriate\n\t    // event\n\t    this.on('touchend', function (event) {\n\t      firstTouch = null;\n\t      // Proceed only if the touchmove/leave/cancel event didn't happen\n\t      if (couldBeTap === true) {\n\t        // Measure how long the touch lasted\n\t        var touchTime = new Date().getTime() - touchStart;\n\t\n\t        // Make sure the touch was less than the threshold to be considered a tap\n\t        if (touchTime < touchTimeThreshold) {\n\t          // Don't let browser turn this into a click\n\t          event.preventDefault();\n\t          /**\n\t           * Triggered when a `Component` is tapped.\n\t           *\n\t           * @event Component#tap\n\t           * @type {EventTarget~Event}\n\t           */\n\t          this.trigger('tap');\n\t          // It may be good to copy the touchend event object and change the\n\t          // type to tap, if the other event properties aren't exact after\n\t          // Events.fixEvent runs (e.g. event.target)\n\t        }\n\t      }\n\t    });\n\t  };\n\t\n\t  /**\n\t   * This function reports user activity whenever touch events happen. This can get\n\t   * turned off by any sub-components that wants touch events to act another way.\n\t   *\n\t   * Report user touch activity when touch events occur. User activity gets used to\n\t   * determine when controls should show/hide. It is simple when it comes to mouse\n\t   * events, because any mouse event should show the controls. So we capture mouse\n\t   * events that bubble up to the player and report activity when that happens.\n\t   * With touch events it isn't as easy as `touchstart` and `touchend` toggle player\n\t   * controls. So touch events can't help us at the player level either.\n\t   *\n\t   * User activity gets checked asynchronously. So what could happen is a tap event\n\t   * on the video turns the controls off. Then the `touchend` event bubbles up to\n\t   * the player. Which, if it reported user activity, would turn the controls right\n\t   * back on. We also don't want to completely block touch events from bubbling up.\n\t   * Furthermore a `touchmove` event and anything other than a tap, should not turn\n\t   * controls back on.\n\t   *\n\t   * @listens Component#touchstart\n\t   * @listens Component#touchmove\n\t   * @listens Component#touchend\n\t   * @listens Component#touchcancel\n\t   */\n\t\n\t\n\t  Component.prototype.enableTouchActivity = function enableTouchActivity() {\n\t    // Don't continue if the root player doesn't support reporting user activity\n\t    if (!this.player() || !this.player().reportUserActivity) {\n\t      return;\n\t    }\n\t\n\t    // listener for reporting that the user is active\n\t    var report = Fn.bind(this.player(), this.player().reportUserActivity);\n\t\n\t    var touchHolding = void 0;\n\t\n\t    this.on('touchstart', function () {\n\t      report();\n\t      // For as long as the they are touching the device or have their mouse down,\n\t      // we consider them active even if they're not moving their finger or mouse.\n\t      // So we want to continue to update that they are active\n\t      this.clearInterval(touchHolding);\n\t      // report at the same interval as activityCheck\n\t      touchHolding = this.setInterval(report, 250);\n\t    });\n\t\n\t    var touchEnd = function touchEnd(event) {\n\t      report();\n\t      // stop the interval that maintains activity if the touch is holding\n\t      this.clearInterval(touchHolding);\n\t    };\n\t\n\t    this.on('touchmove', report);\n\t    this.on('touchend', touchEnd);\n\t    this.on('touchcancel', touchEnd);\n\t  };\n\t\n\t  /**\n\t   * A callback that has no parameters and is bound into `Component`s context.\n\t   *\n\t   * @callback Component~GenericCallback\n\t   * @this Component\n\t   */\n\t\n\t  /**\n\t   * Creates a function that runs after an `x` millisecond timeout. This function is a\n\t   * wrapper around `window.setTimeout`. There are a few reasons to use this one\n\t   * instead though:\n\t   * 1. It gets cleared via  {@link Component#clearTimeout} when\n\t   *    {@link Component#dispose} gets called.\n\t   * 2. The function callback will gets turned into a {@link Component~GenericCallback}\n\t   *\n\t   * > Note: You can use `window.clearTimeout` on the id returned by this function. This\n\t   *         will cause its dispose listener not to get cleaned up! Please use\n\t   *         {@link Component#clearTimeout} or {@link Component#dispose}.\n\t   *\n\t   * @param {Component~GenericCallback} fn\n\t   *        The function that will be run after `timeout`.\n\t   *\n\t   * @param {number} timeout\n\t   *        Timeout in milliseconds to delay before executing the specified function.\n\t   *\n\t   * @return {number}\n\t   *         Returns a timeout ID that gets used to identify the timeout. It can also\n\t   *         get used in {@link Component#clearTimeout} to clear the timeout that\n\t   *         was set.\n\t   *\n\t   * @listens Component#dispose\n\t   * @see [Similar to]{@link https://developer.mozilla.org/en-US/docs/Web/API/WindowTimers/setTimeout}\n\t   */\n\t\n\t\n\t  Component.prototype.setTimeout = function setTimeout(fn, timeout) {\n\t    fn = Fn.bind(this, fn);\n\t\n\t    var timeoutId = _window2['default'].setTimeout(fn, timeout);\n\t    var disposeFn = function disposeFn() {\n\t      this.clearTimeout(timeoutId);\n\t    };\n\t\n\t    disposeFn.guid = 'vjs-timeout-' + timeoutId;\n\t\n\t    this.on('dispose', disposeFn);\n\t\n\t    return timeoutId;\n\t  };\n\t\n\t  /**\n\t   * Clears a timeout that gets created via `window.setTimeout` or\n\t   * {@link Component#setTimeout}. If you set a timeout via {@link Component#setTimeout}\n\t   * use this function instead of `window.clearTimout`. If you don't your dispose\n\t   * listener will not get cleaned up until {@link Component#dispose}!\n\t   *\n\t   * @param {number} timeoutId\n\t   *        The id of the timeout to clear. The return value of\n\t   *        {@link Component#setTimeout} or `window.setTimeout`.\n\t   *\n\t   * @return {number}\n\t   *         Returns the timeout id that was cleared.\n\t   *\n\t   * @see [Similar to]{@link https://developer.mozilla.org/en-US/docs/Web/API/WindowTimers/clearTimeout}\n\t   */\n\t\n\t\n\t  Component.prototype.clearTimeout = function clearTimeout(timeoutId) {\n\t    _window2['default'].clearTimeout(timeoutId);\n\t\n\t    var disposeFn = function disposeFn() {};\n\t\n\t    disposeFn.guid = 'vjs-timeout-' + timeoutId;\n\t\n\t    this.off('dispose', disposeFn);\n\t\n\t    return timeoutId;\n\t  };\n\t\n\t  /**\n\t   * Creates a function that gets run every `x` milliseconds. This function is a wrapper\n\t   * around `window.setInterval`. There are a few reasons to use this one instead though.\n\t   * 1. It gets cleared via  {@link Component#clearInterval} when\n\t   *    {@link Component#dispose} gets called.\n\t   * 2. The function callback will be a {@link Component~GenericCallback}\n\t   *\n\t   * @param {Component~GenericCallback} fn\n\t   *        The function to run every `x` seconds.\n\t   *\n\t   * @param {number} interval\n\t   *        Execute the specified function every `x` milliseconds.\n\t   *\n\t   * @return {number}\n\t   *         Returns an id that can be used to identify the interval. It can also be be used in\n\t   *         {@link Component#clearInterval} to clear the interval.\n\t   *\n\t   * @listens Component#dispose\n\t   * @see [Similar to]{@link https://developer.mozilla.org/en-US/docs/Web/API/WindowTimers/setInterval}\n\t   */\n\t\n\t\n\t  Component.prototype.setInterval = function setInterval(fn, interval) {\n\t    fn = Fn.bind(this, fn);\n\t\n\t    var intervalId = _window2['default'].setInterval(fn, interval);\n\t\n\t    var disposeFn = function disposeFn() {\n\t      this.clearInterval(intervalId);\n\t    };\n\t\n\t    disposeFn.guid = 'vjs-interval-' + intervalId;\n\t\n\t    this.on('dispose', disposeFn);\n\t\n\t    return intervalId;\n\t  };\n\t\n\t  /**\n\t   * Clears an interval that gets created via `window.setInterval` or\n\t   * {@link Component#setInterval}. If you set an inteval via {@link Component#setInterval}\n\t   * use this function instead of `window.clearInterval`. If you don't your dispose\n\t   * listener will not get cleaned up until {@link Component#dispose}!\n\t   *\n\t   * @param {number} intervalId\n\t   *        The id of the interval to clear. The return value of\n\t   *        {@link Component#setInterval} or `window.setInterval`.\n\t   *\n\t   * @return {number}\n\t   *         Returns the interval id that was cleared.\n\t   *\n\t   * @see [Similar to]{@link https://developer.mozilla.org/en-US/docs/Web/API/WindowTimers/clearInterval}\n\t   */\n\t\n\t\n\t  Component.prototype.clearInterval = function clearInterval(intervalId) {\n\t    _window2['default'].clearInterval(intervalId);\n\t\n\t    var disposeFn = function disposeFn() {};\n\t\n\t    disposeFn.guid = 'vjs-interval-' + intervalId;\n\t\n\t    this.off('dispose', disposeFn);\n\t\n\t    return intervalId;\n\t  };\n\t\n\t  /**\n\t   * Register a `Component` with `videojs` given the name and the component.\n\t   *\n\t   * > NOTE: {@link Tech}s should not be registered as a `Component`. {@link Tech}s\n\t   *         should be registered using {@link Tech.registerTech} or\n\t   *         {@link videojs:videojs.registerTech}.\n\t   *\n\t   * > NOTE: This function can also be seen on videojs as\n\t   *         {@link videojs:videojs.registerComponent}.\n\t   *\n\t   * @param {string} name\n\t   *        The name of the `Component` to register.\n\t   *\n\t   * @param {Component} comp\n\t   *        The `Component` class to register.\n\t   *\n\t   * @return {Component}\n\t   *         The `Component` that was registered.\n\t   */\n\t\n\t\n\t  Component.registerComponent = function registerComponent(name, comp) {\n\t    if (!name) {\n\t      return;\n\t    }\n\t\n\t    name = (0, _toTitleCase2['default'])(name);\n\t\n\t    if (!Component.components_) {\n\t      Component.components_ = {};\n\t    }\n\t\n\t    if (name === 'Player' && Component.components_[name]) {\n\t      (function () {\n\t        var Player = Component.components_[name];\n\t\n\t        // If we have players that were disposed, then their name will still be\n\t        // in Players.players. So, we must loop through and verify that the value\n\t        // for each item is not null. This allows registration of the Player component\n\t        // after all players have been disposed or before any were created.\n\t        if (Player.players && Object.keys(Player.players).length > 0 && Object.keys(Player.players).map(function (playerName) {\n\t          return Player.players[playerName];\n\t        }).every(Boolean)) {\n\t          throw new Error('Can not register Player component after player has been created');\n\t        }\n\t      })();\n\t    }\n\t\n\t    Component.components_[name] = comp;\n\t\n\t    return comp;\n\t  };\n\t\n\t  /**\n\t   * Get a `Component` based on the name it was registered with.\n\t   *\n\t   * @param {string} name\n\t   *        The Name of the component to get.\n\t   *\n\t   * @return {Component}\n\t   *         The `Component` that got registered under the given name.\n\t   *\n\t   * @deprecated In `videojs` 6 this will not return `Component`s that were not\n\t   *             registered using {@link Component.registerComponent}. Currently we\n\t   *             check the global `videojs` object for a `Component` name and\n\t   *             return that if it exists.\n\t   */\n\t\n\t\n\t  Component.getComponent = function getComponent(name) {\n\t    if (!name) {\n\t      return;\n\t    }\n\t\n\t    name = (0, _toTitleCase2['default'])(name);\n\t\n\t    if (Component.components_ && Component.components_[name]) {\n\t      return Component.components_[name];\n\t    }\n\t\n\t    if (_window2['default'] && _window2['default'].videojs && _window2['default'].videojs[name]) {\n\t      _log2['default'].warn('The ' + name + ' component was added to the videojs object when it should be registered using videojs.registerComponent(name, component)');\n\t\n\t      return _window2['default'].videojs[name];\n\t    }\n\t  };\n\t\n\t  /**\n\t   * Sets up the constructor using the supplied init method or uses the init of the\n\t   * parent object.\n\t   *\n\t   * @param {Object} [props={}]\n\t   *        An object of properties.\n\t   *\n\t   * @return {Object}\n\t   *         the extended object.\n\t   *\n\t   * @deprecated since version 5\n\t   */\n\t\n\t\n\t  Component.extend = function extend(props) {\n\t    props = props || {};\n\t\n\t    _log2['default'].warn('Component.extend({}) has been deprecated, ' + ' use videojs.extend(Component, {}) instead');\n\t\n\t    // Set up the constructor using the supplied init method\n\t    // or using the init of the parent object\n\t    // Make sure to check the unobfuscated version for external libs\n\t    var init = props.init || props.init || this.prototype.init || this.prototype.init || function () {};\n\t    // In Resig's simple class inheritance (previously used) the constructor\n\t    //  is a function that calls `this.init.apply(arguments)`\n\t    // However that would prevent us from using `ParentObject.call(this);`\n\t    //  in a Child constructor because the `this` in `this.init`\n\t    //  would still refer to the Child and cause an infinite loop.\n\t    // We would instead have to do\n\t    //    `ParentObject.prototype.init.apply(this, arguments);`\n\t    //  Bleh. We're not creating a _super() function, so it's good to keep\n\t    //  the parent constructor reference simple.\n\t    var subObj = function subObj() {\n\t      init.apply(this, arguments);\n\t    };\n\t\n\t    // Inherit from this object's prototype\n\t    subObj.prototype = Object.create(this.prototype);\n\t    // Reset the constructor property for subObj otherwise\n\t    // instances of subObj would have the constructor of the parent Object\n\t    subObj.prototype.constructor = subObj;\n\t\n\t    // Make the class extendable\n\t    subObj.extend = Component.extend;\n\t\n\t    // Extend subObj's prototype with functions and other properties from props\n\t    for (var name in props) {\n\t      if (props.hasOwnProperty(name)) {\n\t        subObj.prototype[name] = props[name];\n\t      }\n\t    }\n\t\n\t    return subObj;\n\t  };\n\t\n\t  return Component;\n\t}();\n\t\n\tComponent.registerComponent('Component', Component);\n\texports['default'] = Component;\n\n\n/***/ },\n/* 17 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\texports.__esModule = true;\n\texports.throttle = exports.bind = undefined;\n\t\n\tvar _guid = __webpack_require__(10);\n\t\n\t/**\n\t * Bind (a.k.a proxy or Context). A simple method for changing the context of a function\n\t * It also stores a unique id on the function so it can be easily removed from events.\n\t *\n\t * @param {Mixed} context\n\t *        The object to bind as scope.\n\t *\n\t * @param {Function} fn\n\t *        The function to be bound to a scope.\n\t *\n\t * @param {number} [uid]\n\t *        An optional unique ID for the function to be set\n\t *\n\t * @return {Function}\n\t *         The new function that will be bound into the context given\n\t */\n\tvar bind = exports.bind = function bind(context, fn, uid) {\n\t  // Make sure the function has a unique ID\n\t  if (!fn.guid) {\n\t    fn.guid = (0, _guid.newGUID)();\n\t  }\n\t\n\t  // Create the new function that changes the context\n\t  var bound = function bound() {\n\t    return fn.apply(context, arguments);\n\t  };\n\t\n\t  // Allow for the ability to individualize this function\n\t  // Needed in the case where multiple objects might share the same prototype\n\t  // IF both items add an event listener with the same function, then you try to remove just one\n\t  // it will remove both because they both have the same guid.\n\t  // when using this, you need to use the bind method when you remove the listener as well.\n\t  // currently used in text tracks\n\t  bound.guid = uid ? uid + '_' + fn.guid : fn.guid;\n\t\n\t  return bound;\n\t};\n\t\n\t/**\n\t * Wraps the given function, `fn`, with a new function that only invokes `fn`\n\t * at most once per every `wait` milliseconds.\n\t *\n\t * @param  {Function} fn\n\t *         The function to be throttled.\n\t *\n\t * @param  {Number}   wait\n\t *         The number of milliseconds by which to throttle.\n\t *\n\t * @return {Function}\n\t */\n\t/**\n\t * @file fn.js\n\t * @module fn\n\t */\n\tvar throttle = exports.throttle = function throttle(fn, wait) {\n\t  var last = Date.now();\n\t\n\t  var throttled = function throttled() {\n\t    var now = Date.now();\n\t\n\t    if (now - last >= wait) {\n\t      fn.apply(undefined, arguments);\n\t      last = now;\n\t    }\n\t  };\n\t\n\t  return throttled;\n\t};\n\n\n/***/ },\n/* 18 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\texports.__esModule = true;\n\t/**\n\t * @file to-title-case.js\n\t * @module to-title-case\n\t */\n\t\n\t/**\n\t * Uppercase the first letter of a string.\n\t *\n\t * @param {string} string\n\t *        String to be uppercased\n\t *\n\t * @return {string}\n\t *         The string with an uppercased first letter\n\t */\n\tfunction toTitleCase(string) {\n\t  if (typeof string !== 'string') {\n\t    return string;\n\t  }\n\t\n\t  return string.charAt(0).toUpperCase() + string.slice(1);\n\t}\n\t\n\texports['default'] = toTitleCase;\n\n\n/***/ },\n/* 19 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\texports.__esModule = true;\n\texports['default'] = mergeOptions;\n\t\n\tvar _obj = __webpack_require__(13);\n\t\n\t/**\n\t * Deep-merge one or more options objects, recursively merging **only** plain\n\t * object properties.\n\t *\n\t * @param   {Object[]} sources\n\t *          One or more objects to merge into a new object.\n\t *\n\t * @returns {Object}\n\t *          A new object that is the merged result of all sources.\n\t */\n\tfunction mergeOptions() {\n\t  var result = {};\n\t\n\t  for (var _len = arguments.length, sources = Array(_len), _key = 0; _key < _len; _key++) {\n\t    sources[_key] = arguments[_key];\n\t  }\n\t\n\t  sources.forEach(function (source) {\n\t    if (!source) {\n\t      return;\n\t    }\n\t\n\t    (0, _obj.each)(source, function (value, key) {\n\t      if (!(0, _obj.isPlain)(value)) {\n\t        result[key] = value;\n\t        return;\n\t      }\n\t\n\t      if (!(0, _obj.isPlain)(result[key])) {\n\t        result[key] = {};\n\t      }\n\t\n\t      result[key] = mergeOptions(result[key], value);\n\t    });\n\t  });\n\t\n\t  return result;\n\t} /**\n\t   * @file merge-options.js\n\t   * @module merge-options\n\t   */\n\n\n/***/ },\n/* 20 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\texports.__esModule = true;\n\t\n\tvar _events = __webpack_require__(8);\n\t\n\tvar Events = _interopRequireWildcard(_events);\n\t\n\tfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj['default'] = obj; return newObj; } }\n\t\n\t/**\n\t * `EventTarget` is a class that can have the same API as the DOM `EventTarget`. It\n\t * adds shorthand functions that wrap around lengthy functions. For example:\n\t * the `on` function is a wrapper around `addEventListener`.\n\t *\n\t * @see [EventTarget Spec]{@link https://www.w3.org/TR/DOM-Level-2-Events/events.html#Events-EventTarget}\n\t * @class EventTarget\n\t */\n\tvar EventTarget = function EventTarget() {};\n\t\n\t/**\n\t * A Custom DOM event.\n\t *\n\t * @typedef {Object} EventTarget~Event\n\t * @see [Properties]{@link https://developer.mozilla.org/en-US/docs/Web/API/CustomEvent}\n\t */\n\t\n\t/**\n\t * All event listeners should follow the following format.\n\t *\n\t * @callback EventTarget~EventListener\n\t * @this {EventTarget}\n\t *\n\t * @param {EventTarget~Event} event\n\t *        the event that triggered this function\n\t *\n\t * @param {Object} [hash]\n\t *        hash of data sent during the event\n\t */\n\t\n\t/**\n\t * An object containing event names as keys and booleans as values.\n\t *\n\t * > NOTE: If an event name is set to a true value here {@link EventTarget#trigger}\n\t *         will have extra functionality. See that function for more information.\n\t *\n\t * @property EventTarget.prototype.allowedEvents_\n\t * @private\n\t */\n\t/**\n\t * @file src/js/event-target.js\n\t */\n\tEventTarget.prototype.allowedEvents_ = {};\n\t\n\t/**\n\t * Adds an `event listener` to an instance of an `EventTarget`. An `event listener` is a\n\t * function that will get called when an event with a certain name gets triggered.\n\t *\n\t * ```js\n\t *   var foo = new EventTarget();\n\t *   var handleBar = function() {\n\t *     console.log('bar was triggered');\n\t *   };\n\t *\n\t *   foo.on('bar', handleBar);\n\t *\n\t *   // This causes any `event listeners` for the `bar` event to get called\n\t *   // see {@link EventTarget#trigger} for more information\n\t *   foo.trigger('bar');\n\t *   // logs 'bar was triggered'\n\t * ```\n\t *\n\t * @param {string|string[]} type\n\t *        An event name or an array of event names.\n\t *\n\t * @param {EventTarget~EventListener} fn\n\t *        The function to call with `EventTarget`s\n\t */\n\tEventTarget.prototype.on = function (type, fn) {\n\t  // Remove the addEventListener alias before calling Events.on\n\t  // so we don't get into an infinite type loop\n\t  var ael = this.addEventListener;\n\t\n\t  this.addEventListener = function () {};\n\t  Events.on(this, type, fn);\n\t  this.addEventListener = ael;\n\t};\n\t\n\t/**\n\t * An alias of {@link EventTarget#on}. Allows `EventTarget` to mimic\n\t * the standard DOM API.\n\t *\n\t * @function\n\t * @see {@link EventTarget#on}\n\t */\n\tEventTarget.prototype.addEventListener = EventTarget.prototype.on;\n\t\n\t/**\n\t * Removes an `event listener` for a specific event from an instance of `EventTarget`.\n\t * This makes it so that the `event listener` will no longer get called when the\n\t * named event happens.\n\t *\n\t * ```js\n\t *   var foo = new EventTarget();\n\t *   var handleBar = function() {\n\t *     console.log('bar was triggered');\n\t *   };\n\t *\n\t *   // adds an `event listener` for the `bar` event\n\t *   // see {@link EventTarget#on} for more info\n\t *   foo.on('bar', handleBar);\n\t *\n\t *   // runs all `event listeners` for the `bar` event\n\t *   // see {@link EventTarget#trigger} for more info\n\t *   foo.trigger('bar');\n\t *   // logs 'bar was triggered'\n\t *\n\t *   foo.off('bar', handleBar);\n\t *   foo.trigger('bar');\n\t *   // does nothing\n\t * ```\n\t *\n\t * @param {string|string[]} type\n\t *        An event name or an array of event names.\n\t *\n\t * @param {EventTarget~EventListener} fn\n\t *        The function to remove.\n\t */\n\tEventTarget.prototype.off = function (type, fn) {\n\t  Events.off(this, type, fn);\n\t};\n\t\n\t/**\n\t * An alias of {@link EventTarget#off}. Allows `EventTarget` to mimic\n\t * the standard DOM API.\n\t *\n\t * @function\n\t * @see {@link EventTarget#off}\n\t */\n\tEventTarget.prototype.removeEventListener = EventTarget.prototype.off;\n\t\n\t/**\n\t * This function will add an `event listener` that gets triggered only once. After the\n\t * first trigger it will get removed. This is like adding an `event listener`\n\t * with {@link EventTarget#on} that calls {@link EventTarget#off} on itself.\n\t *\n\t * Using {@link EventTarget#on} and {@link EventTarget#off} to mimic {@link EventTarget#one}\n\t * ```js\n\t *   var foo = new EventTarget();\n\t *   var handleBar = function() {\n\t *     console.log('bar was triggered');\n\t *     // after the first trigger remove this handler\n\t *     foo.off('bar', handleBar);\n\t *   };\n\t *\n\t *   foo.on('bar', handleBar);\n\t *   foo.trigger('bar');\n\t *   // logs 'bar was triggered'\n\t *\n\t *   foo.trigger('bar');\n\t *   // does nothing\n\t * ```\n\t *\n\t * Using {@link EventTarget#one}\n\t * ```js\n\t *   var foo = new EventTarget();\n\t *   var handleBar = function() {\n\t *     console.log('bar was triggered');\n\t *   };\n\t *\n\t *   // removed after the first trigger\n\t *   foo.one('bar', handleBar);\n\t *   foo.trigger('bar');\n\t *   // logs 'bar was triggered'\n\t *\n\t *   foo.trigger('bar');\n\t *   // does nothing\n\t * ```\n\t *\n\t * @param {string|string[]} type\n\t *        An event name or an array of event names.\n\t *\n\t * @param {EventTarget~EventListener} fn\n\t *        The function to be called once for each event name.\n\t */\n\tEventTarget.prototype.one = function (type, fn) {\n\t  // Remove the addEventListener alialing Events.on\n\t  // so we don't get into an infinite type loop\n\t  var ael = this.addEventListener;\n\t\n\t  this.addEventListener = function () {};\n\t  Events.one(this, type, fn);\n\t  this.addEventListener = ael;\n\t};\n\t\n\t/**\n\t * This function causes an event to happen. This will then cause any `event listeners`\n\t * that are waiting for that event, to get called. If there are no `event listeners`\n\t * for an event then nothing will happen.\n\t *\n\t * If the name of the `Event` that is being triggered is in `EventTarget.allowedEvents_`.\n\t * Trigger will also call the `on` + `uppercaseEventName` function.\n\t *\n\t * Example:\n\t * 'click' is in `EventTarget.allowedEvents_`, so, trigger will attempt to call\n\t * `onClick` if it exists.\n\t *\n\t * ```js\n\t *   var foo = new EventTarget();\n\t *   var handleBar = function() {\n\t *     console.log('bar was triggered');\n\t *   };\n\t *\n\t *   foo.on('bar', handleBar);\n\t *   foo.trigger('bar');\n\t *   // logs 'bar was triggered'\n\t *\n\t *   foo.trigger('bar');\n\t *   // logs 'bar was triggered'\n\t *\n\t *   foo.trigger('foo');\n\t *   // does nothing\n\t * ```\n\t *\n\t * @param {string|EventTarget~Event|Object} event\n\t *        The name of the event, an `Event`, or an object with a key of type set to\n\t *        an event name.\n\t */\n\tEventTarget.prototype.trigger = function (event) {\n\t  var type = event.type || event;\n\t\n\t  if (typeof event === 'string') {\n\t    event = { type: type };\n\t  }\n\t  event = Events.fixEvent(event);\n\t\n\t  if (this.allowedEvents_[type] && this['on' + type]) {\n\t    this['on' + type](event);\n\t  }\n\t\n\t  Events.trigger(this, event);\n\t};\n\t\n\t/**\n\t * An alias of {@link EventTarget#trigger}. Allows `EventTarget` to mimic\n\t * the standard DOM API.\n\t *\n\t * @function\n\t * @see {@link EventTarget#trigger}\n\t */\n\tEventTarget.prototype.dispatchEvent = EventTarget.prototype.trigger;\n\t\n\texports['default'] = EventTarget;\n\n\n/***/ },\n/* 21 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';exports.__esModule=true;var _component=__webpack_require__(16);var _component2=_interopRequireDefault(_component);var _document=__webpack_require__(5);var _document2=_interopRequireDefault(_document);var _window=__webpack_require__(4);var _window2=_interopRequireDefault(_window);var _events=__webpack_require__(8);var Events=_interopRequireWildcard(_events);var _dom=__webpack_require__(9);var Dom=_interopRequireWildcard(_dom);var _fn=__webpack_require__(17);var Fn=_interopRequireWildcard(_fn);var _guid=__webpack_require__(10);var Guid=_interopRequireWildcard(_guid);var _browser=__webpack_require__(12);var browser=_interopRequireWildcard(_browser);var _log=__webpack_require__(11);var _log2=_interopRequireDefault(_log);var _toTitleCase=__webpack_require__(18);var _toTitleCase2=_interopRequireDefault(_toTitleCase);var _timeRanges=__webpack_require__(22);var _buffer=__webpack_require__(23);var _stylesheet=__webpack_require__(15);var stylesheet=_interopRequireWildcard(_stylesheet);var _fullscreenApi=__webpack_require__(24);var _fullscreenApi2=_interopRequireDefault(_fullscreenApi);var _mediaError=__webpack_require__(25);var _mediaError2=_interopRequireDefault(_mediaError);var _tuple=__webpack_require__(26);var _tuple2=_interopRequireDefault(_tuple);var _obj=__webpack_require__(13);var _mergeOptions=__webpack_require__(19);var _mergeOptions2=_interopRequireDefault(_mergeOptions);var _textTrackListConverter=__webpack_require__(27);var _textTrackListConverter2=_interopRequireDefault(_textTrackListConverter);var _modalDialog=__webpack_require__(28);var _modalDialog2=_interopRequireDefault(_modalDialog);var _tech=__webpack_require__(29);var _tech2=_interopRequireDefault(_tech);var _audioTrackList=__webpack_require__(47);var _audioTrackList2=_interopRequireDefault(_audioTrackList);var _videoTrackList=__webpack_require__(46);var _videoTrackList2=_interopRequireDefault(_videoTrackList);__webpack_require__(48);__webpack_require__(49);__webpack_require__(51);__webpack_require__(53);__webpack_require__(54);__webpack_require__(55);__webpack_require__(57);__webpack_require__(58);__webpack_require__(101);__webpack_require__(102);__webpack_require__(103);function _interopRequireWildcard(obj){if(obj&&obj.__esModule){return obj;}else{var newObj={};if(obj!=null){for(var key in obj){if(Object.prototype.hasOwnProperty.call(obj,key))newObj[key]=obj[key];}}newObj['default']=obj;return newObj;}}function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{'default':obj};}function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError(\"Cannot call a class as a function\");}}function _possibleConstructorReturn(self,call){if(!self){throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");}return call&&(typeof call===\"object\"||typeof call===\"function\")?call:self;}function _inherits(subClass,superClass){if(typeof superClass!==\"function\"&&superClass!==null){throw new TypeError(\"Super expression must either be null or a function, not \"+typeof superClass);}subClass.prototype=Object.create(superClass&&superClass.prototype,{constructor:{value:subClass,enumerable:false,writable:true,configurable:true}});if(superClass)Object.setPrototypeOf?Object.setPrototypeOf(subClass,superClass):subClass.__proto__=superClass;}/**\n\t * @file player.js\n\t */// Subclasses Component\n\t// The following imports are used only to ensure that the corresponding modules\n\t// are always included in the video.js package. Importing the modules will\n\t// execute them and they will register themselves with video.js.\n\t// Import Html5 tech, at least for disposing the original video tag.\n\t// The following tech events are simply re-triggered\n\t// on the player when they happen\n\tvar TECH_EVENTS_RETRIGGER=[/**\n\t   * Fired while the user agent is downloading media data.\n\t   *\n\t   * @event Player#progress\n\t   * @type {EventTarget~Event}\n\t   *//**\n\t   * Retrigger the `progress` event that was triggered by the {@link Tech}.\n\t   *\n\t   * @private\n\t   * @method Player.prototype.handleTechProgress_\n\t   * @fires Player#progress\n\t   * @listens Tech#progress\n\t   */'progress',/**\n\t   * Fires when the loading of an audio/video is aborted.\n\t   *\n\t   * @event Player#abort\n\t   * @type {EventTarget~Event}\n\t   *//**\n\t   * Retrigger the `abort` event that was triggered by the {@link Tech}.\n\t   *\n\t   * @private\n\t   * @method Player.prototype.handleTechAbort_\n\t   * @fires Player#abort\n\t   * @listens Tech#abort\n\t   */'abort',/**\n\t   * Fires when the browser is intentionally not getting media data.\n\t   *\n\t   * @event Player#suspend\n\t   * @type {EventTarget~Event}\n\t   *//**\n\t   * Retrigger the `suspend` event that was triggered by the {@link Tech}.\n\t   *\n\t   * @private\n\t   * @method Player.prototype.handleTechSuspend_\n\t   * @fires Player#suspend\n\t   * @listens Tech#suspend\n\t   */'suspend',/**\n\t   * Fires when the current playlist is empty.\n\t   *\n\t   * @event Player#emptied\n\t   * @type {EventTarget~Event}\n\t   *//**\n\t   * Retrigger the `emptied` event that was triggered by the {@link Tech}.\n\t   *\n\t   * @private\n\t   * @method Player.prototype.handleTechEmptied_\n\t   * @fires Player#emptied\n\t   * @listens Tech#emptied\n\t   */'emptied',/**\n\t   * Fires when the browser is trying to get media data, but data is not available.\n\t   *\n\t   * @event Player#stalled\n\t   * @type {EventTarget~Event}\n\t   *//**\n\t   * Retrigger the `stalled` event that was triggered by the {@link Tech}.\n\t   *\n\t   * @private\n\t   * @method Player.prototype.handleTechStalled_\n\t   * @fires Player#stalled\n\t   * @listens Tech#stalled\n\t   */'stalled',/**\n\t   * Fires when the browser has loaded meta data for the audio/video.\n\t   *\n\t   * @event Player#loadedmetadata\n\t   * @type {EventTarget~Event}\n\t   *//**\n\t   * Retrigger the `stalled` event that was triggered by the {@link Tech}.\n\t   *\n\t   * @private\n\t   * @method Player.prototype.handleTechLoadedmetadata_\n\t   * @fires Player#loadedmetadata\n\t   * @listens Tech#loadedmetadata\n\t   */'loadedmetadata',/**\n\t   * Fires when the browser has loaded the current frame of the audio/video.\n\t   *\n\t   * @event player#loadeddata\n\t   * @type {event}\n\t   *//**\n\t   * Retrigger the `loadeddata` event that was triggered by the {@link Tech}.\n\t   *\n\t   * @private\n\t   * @method Player.prototype.handleTechLoaddeddata_\n\t   * @fires Player#loadeddata\n\t   * @listens Tech#loadeddata\n\t   */'loadeddata',/**\n\t   * Fires when the current playback position has changed.\n\t   *\n\t   * @event player#timeupdate\n\t   * @type {event}\n\t   *//**\n\t   * Retrigger the `timeupdate` event that was triggered by the {@link Tech}.\n\t   *\n\t   * @private\n\t   * @method Player.prototype.handleTechTimeUpdate_\n\t   * @fires Player#timeupdate\n\t   * @listens Tech#timeupdate\n\t   */'timeupdate',/**\n\t   * Fires when the playing speed of the audio/video is changed\n\t   *\n\t   * @event player#ratechange\n\t   * @type {event}\n\t   *//**\n\t   * Retrigger the `ratechange` event that was triggered by the {@link Tech}.\n\t   *\n\t   * @private\n\t   * @method Player.prototype.handleTechRatechange_\n\t   * @fires Player#ratechange\n\t   * @listens Tech#ratechange\n\t   */'ratechange',/**\n\t   * Fires when the volume has been changed\n\t   *\n\t   * @event player#volumechange\n\t   * @type {event}\n\t   *//**\n\t   * Retrigger the `volumechange` event that was triggered by the {@link Tech}.\n\t   *\n\t   * @private\n\t   * @method Player.prototype.handleTechVolumechange_\n\t   * @fires Player#volumechange\n\t   * @listens Tech#volumechange\n\t   */'volumechange',/**\n\t   * Fires when the text track has been changed\n\t   *\n\t   * @event player#texttrackchange\n\t   * @type {event}\n\t   *//**\n\t   * Retrigger the `texttrackchange` event that was triggered by the {@link Tech}.\n\t   *\n\t   * @private\n\t   * @method Player.prototype.handleTechTexttrackchange_\n\t   * @fires Player#texttrackchange\n\t   * @listens Tech#texttrackchange\n\t   */'texttrackchange'];/**\n\t * An instance of the `Player` class is created when any of the Video.js setup methods\n\t * are used to initialize a video.\n\t * ```js\n\t *   var myPlayer = videojs('example_video_1');\n\t * ```\n\t *\n\t * In the following example, the `data-setup` attribute tells the Video.js library to\n\t * create a player instance when the library is ready.\n\t * ```html\n\t *   <video id=\"example_video_1\" data-setup='{}' controls>\n\t *     <source src=\"my-source.mp4\" type=\"video/mp4\">\n\t *   </video>\n\t * ```\n\t *\n\t * After an instance has been created it can be accessed globally in two ways:\n\t * 1. By calling `videojs('example_video_1');`\n\t * 2. By using it directly via  `videojs.players.example_video_1;`\n\t *\n\t * @extends Component\n\t */var Player=function(_Component){_inherits(Player,_Component);/**\n\t   * Create an instance of this class.\n\t   *\n\t   * @param {Element} tag\n\t   *        The original video DOM element used for configuring options.\n\t   *\n\t   * @param {Object} [options]\n\t   *        Object of option names and values.\n\t   *\n\t   * @param {Component~ReadyCallback} [ready]\n\t   *        Ready callback function.\n\t   */function Player(tag,options,ready){_classCallCheck(this,Player);// Make sure tag ID exists\n\ttag.id=tag.id||'vjs_video_'+Guid.newGUID();// Set Options\n\t// The options argument overrides options set in the video tag\n\t// which overrides globally set options.\n\t// This latter part coincides with the load order\n\t// (tag must exist before Player)\n\toptions=(0,_obj.assign)(Player.getTagSettings(tag),options);// Delay the initialization of children because we need to set up\n\t// player properties first, and can't use `this` before `super()`\n\toptions.initChildren=false;// Same with creating the element\n\toptions.createEl=false;// we don't want the player to report touch activity on itself\n\t// see enableTouchActivity in Component\n\toptions.reportTouchActivity=false;// If language is not set, get the closest lang attribute\n\tif(!options.language){if(typeof tag.closest==='function'){var closest=tag.closest('[lang]');if(closest){options.language=closest.getAttribute('lang');}}else{var element=tag;while(element&&element.nodeType===1){if(Dom.getElAttributes(element).hasOwnProperty('lang')){options.language=element.getAttribute('lang');break;}element=element.parentNode;}}}// Run base component initializing with new options\n\t// if the global option object was accidentally blown away by\n\t// someone, bail early with an informative error\n\tvar _this=_possibleConstructorReturn(this,_Component.call(this,null,options,ready));if(!_this.options_||!_this.options_.techOrder||!_this.options_.techOrder.length){throw new Error('No techOrder specified. Did you overwrite '+'videojs.options instead of just changing the '+'properties you want to override?');}// Store the original tag used to set options\n\t_this.tag=tag;// Store the tag attributes used to restore html5 element\n\t_this.tagAttributes=tag&&Dom.getElAttributes(tag);// Update current language\n\t_this.language(_this.options_.language);// Update Supported Languages\n\tif(options.languages){(function(){// Normalise player option languages to lowercase\n\tvar languagesToLower={};Object.getOwnPropertyNames(options.languages).forEach(function(name){languagesToLower[name.toLowerCase()]=options.languages[name];});_this.languages_=languagesToLower;})();}else{_this.languages_=Player.prototype.options_.languages;}// Cache for video property values.\n\t_this.cache_={};// Set poster\n\t_this.poster_=options.poster||'';// Set controls\n\t_this.controls_=!!options.controls;// Original tag settings stored in options\n\t// now remove immediately so native controls don't flash.\n\t// May be turned back on by HTML5 tech if nativeControlsForTouch is true\n\ttag.controls=false;/*\n\t     * Store the internal state of scrubbing\n\t     *\n\t     * @private\n\t     * @return {Boolean} True if the user is scrubbing\n\t     */_this.scrubbing_=false;_this.el_=_this.createEl();// We also want to pass the original player options to each component and plugin\n\t// as well so they don't need to reach back into the player for options later.\n\t// We also need to do another copy of this.options_ so we don't end up with\n\t// an infinite loop.\n\tvar playerOptionsCopy=(0,_mergeOptions2['default'])(_this.options_);// Load plugins\n\tif(options.plugins){(function(){var plugins=options.plugins;Object.getOwnPropertyNames(plugins).forEach(function(name){if(typeof this[name]==='function'){this[name](plugins[name]);}else{_log2['default'].error('Unable to find plugin:',name);}},_this);})();}_this.options_.playerOptions=playerOptionsCopy;_this.initChildren();// Set isAudio based on whether or not an audio tag was used\n\t_this.isAudio(tag.nodeName.toLowerCase()==='audio');// Update controls className. Can't do this when the controls are initially\n\t// set because the element doesn't exist yet.\n\tif(_this.controls()){_this.addClass('vjs-controls-enabled');}else{_this.addClass('vjs-controls-disabled');}// Set ARIA label and region role depending on player type\n\t_this.el_.setAttribute('role','region');if(_this.isAudio()){_this.el_.setAttribute('aria-label','audio player');}else{_this.el_.setAttribute('aria-label','video player');}if(_this.isAudio()){_this.addClass('vjs-audio');}if(_this.flexNotSupported_()){_this.addClass('vjs-no-flex');}// TODO: Make this smarter. Toggle user state between touching/mousing\n\t// using events, since devices can have both touch and mouse events.\n\t// if (browser.TOUCH_ENABLED) {\n\t//   this.addClass('vjs-touch-enabled');\n\t// }\n\t// iOS Safari has broken hover handling\n\tif(!browser.IS_IOS){_this.addClass('vjs-workinghover');}// Make player easily findable by ID\n\tPlayer.players[_this.id_]=_this;// When the player is first initialized, trigger activity so components\n\t// like the control bar show themselves if needed\n\t_this.userActive(true);_this.reportUserActivity();_this.listenForUserActivity_();_this.on('fullscreenchange',_this.handleFullscreenChange_);_this.on('stageclick',_this.handleStageClick_);return _this;}/**\n\t   * Destroys the video player and does any necessary cleanup.\n\t   *\n\t   * ```js\n\t   *   var myPlayer = videojs('some-player-id');\n\t   *\n\t   *   myPlayer.src(\"http://www.example.com/path/to/video.mp4\");\n\t   *   myPlayer.ready(function() {\n\t   *     myPlayer.dispose();\n\t   *   });\n\t   * ```\n\t   * This is especially helpful if you are dynamically adding and removing videos\n\t   * to/from the DOM.\n\t   *\n\t   * @fires Player#dispose\n\t   */Player.prototype.dispose=function dispose(){/**\n\t     * Called when the player is being disposed of.\n\t     *\n\t     * @event Player#dispose\n\t     * @type {EventTarget~Event}\n\t     */this.trigger('dispose');// prevent dispose from being called twice\n\tthis.off('dispose');if(this.styleEl_&&this.styleEl_.parentNode){this.styleEl_.parentNode.removeChild(this.styleEl_);}// Kill reference to this player\n\tPlayer.players[this.id_]=null;if(this.tag&&this.tag.player){this.tag.player=null;}if(this.el_&&this.el_.player){this.el_.player=null;}if(this.tech_){this.tech_.dispose();}_Component.prototype.dispose.call(this);};/**\n\t   * Create the `Player`'s DOM element.\n\t   *\n\t   * @return {Element}\n\t   *         The DOM element that gets created.\n\t   */Player.prototype.createEl=function createEl(){var el=this.el_=_Component.prototype.createEl.call(this,'div');var tag=this.tag;// Remove width/height attrs from tag so CSS can make it 100% width/height\n\ttag.removeAttribute('width');tag.removeAttribute('height');// Copy over all the attributes from the tag, including ID and class\n\t// ID will now reference player box, not the video tag\n\tvar attrs=Dom.getElAttributes(tag);Object.getOwnPropertyNames(attrs).forEach(function(attr){// workaround so we don't totally break IE7\n\t// http://stackoverflow.com/questions/3653444/css-styles-not-applied-on-dynamic-elements-in-internet-explorer-7\n\tif(attr==='class'){el.className=attrs[attr];}else{el.setAttribute(attr,attrs[attr]);}});// Update tag id/class for use as HTML5 playback tech\n\t// Might think we should do this after embedding in container so .vjs-tech class\n\t// doesn't flash 100% width/height, but class only applies with .video-js parent\n\ttag.playerId=tag.id;tag.id+='_html5_api';tag.className='vjs-tech';// Make player findable on elements\n\ttag.player=el.player=this;// Default state of video is paused\n\tthis.addClass('vjs-paused');// Add a style element in the player that we'll use to set the width/height\n\t// of the player in a way that's still overrideable by CSS, just like the\n\t// video element\n\tif(_window2['default'].VIDEOJS_NO_DYNAMIC_STYLE!==true){this.styleEl_=stylesheet.createStyleElement('vjs-styles-dimensions');var defaultsStyleEl=Dom.$('.vjs-styles-defaults');var head=Dom.$('head');head.insertBefore(this.styleEl_,defaultsStyleEl?defaultsStyleEl.nextSibling:head.firstChild);}// Pass in the width/height/aspectRatio options which will update the style el\n\tthis.width(this.options_.width);this.height(this.options_.height);this.fluid(this.options_.fluid);this.aspectRatio(this.options_.aspectRatio);// Hide any links within the video/audio tag, because IE doesn't hide them completely.\n\tvar links=tag.getElementsByTagName('a');for(var i=0;i<links.length;i++){var linkEl=links.item(i);Dom.addElClass(linkEl,'vjs-hidden');linkEl.setAttribute('hidden','hidden');}// insertElFirst seems to cause the networkState to flicker from 3 to 2, so\n\t// keep track of the original for later so we can know if the source originally failed\n\ttag.initNetworkState_=tag.networkState;// Wrap video tag in div (el/box) container\n\tif(tag.parentNode){tag.parentNode.insertBefore(el,tag);}// insert the tag as the first child of the player element\n\t// then manually add it to the children array so that this.addChild\n\t// will work properly for other components\n\t//\n\t// Breaks iPhone, fixed in HTML5 setup.\n\tDom.insertElFirst(tag,el);this.children_.unshift(tag);this.el_=el;return el;};/**\n\t   * A getter/setter for the `Player`'s width.\n\t   *\n\t   * @param {number} [value]\n\t   *        The value to set the `Player's width to.\n\t   *\n\t   * @return {number}\n\t   *         The current width of the `Player`.\n\t   */Player.prototype.width=function width(value){return this.dimension('width',value);};/**\n\t   * A getter/setter for the `Player`'s height.\n\t   *\n\t   * @param {number} [value]\n\t   *        The value to set the `Player's heigth to.\n\t   *\n\t   * @return {number}\n\t   *         The current heigth of the `Player`.\n\t   */Player.prototype.height=function height(value){return this.dimension('height',value);};/**\n\t   * A getter/setter for the `Player`'s width & height.\n\t   *\n\t   * @param {string} dimension\n\t   *        This string can be:\n\t   *        - 'width'\n\t   *        - 'height'\n\t   *\n\t   * @param {number} [value]\n\t   *        Value for dimension specified in the first argument.\n\t   *\n\t   * @return {Player|number}\n\t   *         - Returns itself when setting; method can be chained.\n\t   *         - The dimension arguments value when getting (width/height).\n\t   */Player.prototype.dimension=function dimension(_dimension,value){var privDimension=_dimension+'_';if(value===undefined){return this[privDimension]||0;}if(value===''){// If an empty string is given, reset the dimension to be automatic\n\tthis[privDimension]=undefined;}else{var parsedVal=parseFloat(value);if(isNaN(parsedVal)){_log2['default'].error('Improper value \"'+value+'\" supplied for for '+_dimension);return this;}this[privDimension]=parsedVal;}this.updateStyleEl_();return this;};/**\n\t   * A getter/setter/toggler for the vjs-fluid `className` on the `Player`.\n\t   *\n\t   * @param {boolean} [bool]\n\t   *        - A value of true adds the class.\n\t   *        - A value of false removes the class.\n\t   *        - No value will toggle the fluid class.\n\t   *\n\t   * @return {boolean|undefined}\n\t   *         - The value of fluid when getting.\n\t   *         - `undefined` when setting.\n\t   */Player.prototype.fluid=function fluid(bool){if(bool===undefined){return!!this.fluid_;}this.fluid_=!!bool;if(bool){this.addClass('vjs-fluid');}else{this.removeClass('vjs-fluid');}this.updateStyleEl_();};/**\n\t   * Get/Set the aspect ratio\n\t   *\n\t   * @param {string} [ratio]\n\t   *        Aspect ratio for player\n\t   *\n\t   * @return {string|undefined}\n\t   *         returns the current aspect ratio when getting\n\t   *//**\n\t   * A getter/setter for the `Player`'s aspect ratio.\n\t   *\n\t   * @param {string} [ratio]\n\t   *        The value to set the `Player's aspect ratio to.\n\t   *\n\t   * @return {string|undefined}\n\t   *         - The current aspect ratio of the `Player` when getting.\n\t   *         - undefined when setting\n\t   */Player.prototype.aspectRatio=function aspectRatio(ratio){if(ratio===undefined){return this.aspectRatio_;}// Check for width:height format\n\tif(!/^\\d+\\:\\d+$/.test(ratio)){throw new Error('Improper value supplied for aspect ratio. The format should be width:height, for example 16:9.');}this.aspectRatio_=ratio;// We're assuming if you set an aspect ratio you want fluid mode,\n\t// because in fixed mode you could calculate width and height yourself.\n\tthis.fluid(true);this.updateStyleEl_();};/**\n\t   * Update styles of the `Player` element (height, width and aspect ratio).\n\t   *\n\t   * @private\n\t   * @listens Tech#loadedmetadata\n\t   */Player.prototype.updateStyleEl_=function updateStyleEl_(){if(_window2['default'].VIDEOJS_NO_DYNAMIC_STYLE===true){var _width=typeof this.width_==='number'?this.width_:this.options_.width;var _height=typeof this.height_==='number'?this.height_:this.options_.height;var techEl=this.tech_&&this.tech_.el();if(techEl){if(_width>=0){techEl.width=_width;}if(_height>=0){techEl.height=_height;}}return;}var width=void 0;var height=void 0;var aspectRatio=void 0;var idClass=void 0;// The aspect ratio is either used directly or to calculate width and height.\n\tif(this.aspectRatio_!==undefined&&this.aspectRatio_!=='auto'){// Use any aspectRatio that's been specifically set\n\taspectRatio=this.aspectRatio_;}else if(this.videoWidth()>0){// Otherwise try to get the aspect ratio from the video metadata\n\taspectRatio=this.videoWidth()+':'+this.videoHeight();}else{// Or use a default. The video element's is 2:1, but 16:9 is more common.\n\taspectRatio='16:9';}// Get the ratio as a decimal we can use to calculate dimensions\n\tvar ratioParts=aspectRatio.split(':');var ratioMultiplier=ratioParts[1]/ratioParts[0];if(this.width_!==undefined){// Use any width that's been specifically set\n\twidth=this.width_;}else if(this.height_!==undefined){// Or calulate the width from the aspect ratio if a height has been set\n\twidth=this.height_/ratioMultiplier;}else{// Or use the video's metadata, or use the video el's default of 300\n\twidth=this.videoWidth()||300;}if(this.height_!==undefined){// Use any height that's been specifically set\n\theight=this.height_;}else{// Otherwise calculate the height from the ratio and the width\n\theight=width*ratioMultiplier;}// Ensure the CSS class is valid by starting with an alpha character\n\tif(/^[^a-zA-Z]/.test(this.id())){idClass='dimensions-'+this.id();}else{idClass=this.id()+'-dimensions';}// Ensure the right class is still on the player for the style element\n\tthis.addClass(idClass);stylesheet.setTextContent(this.styleEl_,'\\n      .'+idClass+' {\\n        width: '+width+'px;\\n        height: '+height+'px;\\n      }\\n\\n      .'+idClass+'.vjs-fluid {\\n        padding-top: '+ratioMultiplier*100+'%;\\n      }\\n    ');};/**\n\t   * Load/Create an instance of playback {@link Tech} including element\n\t   * and API methods. Then append the `Tech` element in `Player` as a child.\n\t   *\n\t   * @param {string} techName\n\t   *        name of the playback technology\n\t   *\n\t   * @param {string} source\n\t   *        video source\n\t   *\n\t   * @private\n\t   */Player.prototype.loadTech_=function loadTech_(techName,source){var _this2=this;// Pause and remove current playback technology\n\tif(this.tech_){this.unloadTech_();}// get rid of the HTML5 video tag as soon as we are using another tech\n\tif(techName!=='Html5'&&this.tag){_tech2['default'].getTech('Html5').disposeMediaElement(this.tag);this.tag.player=null;this.tag=null;}this.techName_=techName;// Turn off API access because we're loading a new tech that might load asynchronously\n\tthis.isReady_=false;// Grab tech-specific options from player options and add source and parent element to use.\n\tvar techOptions=(0,_obj.assign)({source:source,'nativeControlsForTouch':this.options_.nativeControlsForTouch,'playerId':this.id(),'techId':this.id()+'_'+techName+'_api','videoTracks':this.videoTracks_,'textTracks':this.textTracks_,'audioTracks':this.audioTracks_,'autoplay':this.options_.autoplay,'preload':this.options_.preload,'loop':this.options_.loop,'muted':this.options_.muted,'poster':this.poster(),'language':this.language(),'vtt.js':this.options_['vtt.js']},this.options_[techName.toLowerCase()]);if(this.tag){techOptions.tag=this.tag;}if(source){this.currentType_=source.type;if(source.src===this.cache_.src&&this.cache_.currentTime>0){techOptions.startTime=this.cache_.currentTime;}this.cache_.sources=null;this.cache_.source=source;this.cache_.src=source.src;}// Initialize tech instance\n\tvar TechComponent=_tech2['default'].getTech(techName);// Support old behavior of techs being registered as components.\n\t// Remove once that deprecated behavior is removed.\n\tif(!TechComponent){TechComponent=_component2['default'].getComponent(techName);}this.tech_=new TechComponent(techOptions);// player.triggerReady is always async, so don't need this to be async\n\tthis.tech_.ready(Fn.bind(this,this.handleTechReady_),true);_textTrackListConverter2['default'].jsonToTextTracks(this.textTracksJson_||[],this.tech_);// Listen to all HTML5-defined events and trigger them on the player\n\tTECH_EVENTS_RETRIGGER.forEach(function(event){_this2.on(_this2.tech_,event,_this2['handleTech'+(0,_toTitleCase2['default'])(event)+'_']);});this.on(this.tech_,'loadstart',this.handleTechLoadStart_);this.on(this.tech_,'waiting',this.handleTechWaiting_);this.on(this.tech_,'canplay',this.handleTechCanPlay_);this.on(this.tech_,'canplaythrough',this.handleTechCanPlayThrough_);this.on(this.tech_,'playing',this.handleTechPlaying_);this.on(this.tech_,'ended',this.handleTechEnded_);this.on(this.tech_,'seeking',this.handleTechSeeking_);this.on(this.tech_,'seeked',this.handleTechSeeked_);this.on(this.tech_,'play',this.handleTechPlay_);this.on(this.tech_,'firstplay',this.handleTechFirstPlay_);this.on(this.tech_,'pause',this.handleTechPause_);this.on(this.tech_,'durationchange',this.handleTechDurationChange_);this.on(this.tech_,'fullscreenchange',this.handleTechFullscreenChange_);this.on(this.tech_,'error',this.handleTechError_);this.on(this.tech_,'loadedmetadata',this.updateStyleEl_);this.on(this.tech_,'posterchange',this.handleTechPosterChange_);this.on(this.tech_,'textdata',this.handleTechTextData_);this.usingNativeControls(this.techGet_('controls'));if(this.controls()&&!this.usingNativeControls()){this.addTechControlsListeners_();}// Add the tech element in the DOM if it was not already there\n\t// Make sure to not insert the original video element if using Html5\n\tif(this.tech_.el().parentNode!==this.el()&&(techName!=='Html5'||!this.tag)){Dom.insertElFirst(this.tech_.el(),this.el());}// Get rid of the original video tag reference after the first tech is loaded\n\tif(this.tag){this.tag.player=null;this.tag=null;}};/**\n\t   * Unload and dispose of the current playback {@link Tech}.\n\t   *\n\t   * @private\n\t   */Player.prototype.unloadTech_=function unloadTech_(){// Save the current text tracks so that we can reuse the same text tracks with the next tech\n\tthis.videoTracks_=this.videoTracks();this.textTracks_=this.textTracks();this.audioTracks_=this.audioTracks();this.textTracksJson_=_textTrackListConverter2['default'].textTracksToJson(this.tech_);this.isReady_=false;this.tech_.dispose();this.tech_=false;};/**\n\t   * Return a reference to the current {@link Tech}, but only if given an object with the\n\t   * `IWillNotUseThisInPlugins` property having a true value. This is try and prevent misuse\n\t   * of techs by plugins.\n\t   *\n\t   * ```js\n\t   *   var myPlayer = videojs('some-player-id');\n\t   *\n\t   *   myPlayer.src(\"http://www.example.com/path/to/video.mp4\");\n\t   *   myPlayer.ready(function() {\n\t   *      // function call throws an error if we\n\t   *       // dont add {IWillNotUseThisInPlugins: true}\n\t   *      var tech = myPlayer.tech({IWillNotUseThisInPlugins: true});\n\t   *   });\n\t   * ```\n\t   *\n\t   * @param {Object} safety\n\t   *        An object that must contain `{IWillNotUseThisInPlugins: true}`\n\t   *\n\t   * @param {boolean} safety.IWillNotUseThisInPlugins\n\t   *        Must be set to true or else this function will throw an error.\n\t   *\n\t   * @return {Tech}\n\t   *         The Tech\n\t   */Player.prototype.tech=function tech(safety){if(safety&&safety.IWillNotUseThisInPlugins){return this.tech_;}var errorText='\\n      Please make sure that you are not using this inside of a plugin.\\n      To disable this alert and error, please pass in an object with\\n      `IWillNotUseThisInPlugins` to the `tech` method. See\\n      https://github.com/videojs/video.js/issues/2617 for more info.\\n    ';_window2['default'].alert(errorText);throw new Error(errorText);};/**\n\t   * Set up click and touch listeners for the playback element\n\t   *\n\t   * - On desktops: a click on the video itself will toggle playback\n\t   * - On mobile devices: a click on the video toggles controls\n\t   *   which is done by toggling the user state between active and\n\t   *   inactive\n\t   * - A tap can signal that a user has become active or has become inactive\n\t   *   e.g. a quick tap on an iPhone movie should reveal the controls. Another\n\t   *   quick tap should hide them again (signaling the user is in an inactive\n\t   *   viewing state)\n\t   * - In addition to this, we still want the user to be considered inactive after\n\t   *   a few seconds of inactivity.\n\t   *\n\t   * > Note: the only part of iOS interaction we can't mimic with this setup\n\t   * is a touch and hold on the video element counting as activity in order to\n\t   * keep the controls showing, but that shouldn't be an issue. A touch and hold\n\t   * on any controls will still keep the user active\n\t   *\n\t   * @private\n\t   */Player.prototype.addTechControlsListeners_=function addTechControlsListeners_(){// Make sure to remove all the previous listeners in case we are called multiple times.\n\tthis.removeTechControlsListeners_();// Some browsers (Chrome & IE) don't trigger a click on a flash swf, but do\n\t// trigger mousedown/up.\n\t// http://stackoverflow.com/questions/1444562/javascript-onclick-event-over-flash-object\n\t// Any touch events are set to block the mousedown event from happening\n\tthis.on(this.tech_,'mousedown',this.handleTechClick_);// If the controls were hidden we don't want that to change without a tap event\n\t// so we'll check if the controls were already showing before reporting user\n\t// activity\n\tthis.on(this.tech_,'touchstart',this.handleTechTouchStart_);this.on(this.tech_,'touchmove',this.handleTechTouchMove_);this.on(this.tech_,'touchend',this.handleTechTouchEnd_);// The tap listener needs to come after the touchend listener because the tap\n\t// listener cancels out any reportedUserActivity when setting userActive(false)\n\tthis.on(this.tech_,'tap',this.handleTechTap_);};/**\n\t   * Remove the listeners used for click and tap controls. This is needed for\n\t   * toggling to controls disabled, where a tap/touch should do nothing.\n\t   *\n\t   * @private\n\t   */Player.prototype.removeTechControlsListeners_=function removeTechControlsListeners_(){// We don't want to just use `this.off()` because there might be other needed\n\t// listeners added by techs that extend this.\n\tthis.off(this.tech_,'tap',this.handleTechTap_);this.off(this.tech_,'touchstart',this.handleTechTouchStart_);this.off(this.tech_,'touchmove',this.handleTechTouchMove_);this.off(this.tech_,'touchend',this.handleTechTouchEnd_);this.off(this.tech_,'mousedown',this.handleTechClick_);};/**\n\t   * Player waits for the tech to be ready\n\t   *\n\t   * @private\n\t   */Player.prototype.handleTechReady_=function handleTechReady_(){this.triggerReady();// Keep the same volume as before\n\tif(this.cache_.volume){this.techCall_('setVolume',this.cache_.volume);}// Look if the tech found a higher resolution poster while loading\n\tthis.handleTechPosterChange_();// Update the duration if available\n\tthis.handleTechDurationChange_();// Chrome and Safari both have issues with autoplay.\n\t// In Safari (5.1.1), when we move the video element into the container div, autoplay doesn't work.\n\t// In Chrome (15), if you have autoplay + a poster + no controls, the video gets hidden (but audio plays)\n\t// This fixes both issues. Need to wait for API, so it updates displays correctly\n\tif((this.src()||this.currentSrc())&&this.tag&&this.options_.autoplay&&this.paused()){try{// Chrome Fix. Fixed in Chrome v16.\n\tdelete this.tag.poster;}catch(e){(0,_log2['default'])('deleting tag.poster throws in some browsers',e);}this.play();}};/**\n\t   * Retrigger the `loadstart` event that was triggered by the {@link Tech}. This\n\t   * function will also trigger {@link Player#firstplay} if it is the first loadstart\n\t   * for a video.\n\t   *\n\t   * @fires Player#loadstart\n\t   * @fires Player#firstplay\n\t   * @listens Tech#loadstart\n\t   * @private\n\t   */Player.prototype.handleTechLoadStart_=function handleTechLoadStart_(){// TODO: Update to use `emptied` event instead. See #1277.\n\tthis.removeClass('vjs-ended');// reset the error state\n\tthis.error(null);// If it's already playing we want to trigger a firstplay event now.\n\t// The firstplay event relies on both the play and loadstart events\n\t// which can happen in any order for a new source\n\tif(!this.paused()){/**\n\t       * Fired when the user agent begins looking for media data\n\t       *\n\t       * @event Player#loadstart\n\t       * @type {EventTarget~Event}\n\t       */this.trigger('loadstart');this.trigger('firstplay');}else{// reset the hasStarted state\n\tthis.hasStarted(false);this.trigger('loadstart');}};/**\n\t   * Add/remove the vjs-has-started class\n\t   *\n\t   * @fires Player#firstplay\n\t   *\n\t   * @param {boolean} hasStarted\n\t   *        - true: adds the class\n\t   *        - false: remove the class\n\t   *\n\t   * @return {boolean}\n\t   *         the boolean value of hasStarted\n\t   */Player.prototype.hasStarted=function hasStarted(_hasStarted){if(_hasStarted!==undefined){// only update if this is a new value\n\tif(this.hasStarted_!==_hasStarted){this.hasStarted_=_hasStarted;if(_hasStarted){this.addClass('vjs-has-started');// trigger the firstplay event if this newly has played\n\tthis.trigger('firstplay');}else{this.removeClass('vjs-has-started');}}return this;}return!!this.hasStarted_;};/**\n\t   * Fired whenever the media begins or resumes playback\n\t   *\n\t   * @see [Spec]{@link https://html.spec.whatwg.org/multipage/embedded-content.html#dom-media-play}\n\t   * @fires Player#play\n\t   * @listens Tech#play\n\t   * @private\n\t   */Player.prototype.handleTechPlay_=function handleTechPlay_(){this.removeClass('vjs-ended');this.removeClass('vjs-paused');this.addClass('vjs-playing');// hide the poster when the user hits play\n\tthis.hasStarted(true);/**\n\t     * Triggered whenever an {@link Tech#play} event happens. Indicates that\n\t     * playback has started or resumed.\n\t     *\n\t     * @event Player#play\n\t     * @type {EventTarget~Event}\n\t     */this.trigger('play');};/**\n\t   * Retrigger the `waiting` event that was triggered by the {@link Tech}.\n\t   *\n\t   * @fires Player#waiting\n\t   * @listens Tech#waiting\n\t   * @private\n\t   */Player.prototype.handleTechWaiting_=function handleTechWaiting_(){var _this3=this;this.addClass('vjs-waiting');/**\n\t     * A readyState change on the DOM element has caused playback to stop.\n\t     *\n\t     * @event Player#waiting\n\t     * @type {EventTarget~Event}\n\t     */this.trigger('waiting');this.one('timeupdate',function(){return _this3.removeClass('vjs-waiting');});};/**\n\t   * Retrigger the `canplay` event that was triggered by the {@link Tech}.\n\t   * > Note: This is not consistent between browsers. See #1351\n\t   *\n\t   * @fires Player#canplay\n\t   * @listens Tech#canplay\n\t   * @private\n\t   */Player.prototype.handleTechCanPlay_=function handleTechCanPlay_(){this.removeClass('vjs-waiting');/**\n\t     * The media has a readyState of HAVE_FUTURE_DATA or greater.\n\t     *\n\t     * @event Player#canplay\n\t     * @type {EventTarget~Event}\n\t     */this.trigger('canplay');};/**\n\t   * Retrigger the `canplaythrough` event that was triggered by the {@link Tech}.\n\t   *\n\t   * @fires Player#canplaythrough\n\t   * @listens Tech#canplaythrough\n\t   * @private\n\t   */Player.prototype.handleTechCanPlayThrough_=function handleTechCanPlayThrough_(){this.removeClass('vjs-waiting');/**\n\t     * The media has a readyState of HAVE_ENOUGH_DATA or greater. This means that the\n\t     * entire media file can be played without buffering.\n\t     *\n\t     * @event Player#canplaythrough\n\t     * @type {EventTarget~Event}\n\t     */this.trigger('canplaythrough');};/**\n\t   * Retrigger the `playing` event that was triggered by the {@link Tech}.\n\t   *\n\t   * @fires Player#playing\n\t   * @listens Tech#playing\n\t   * @private\n\t   */Player.prototype.handleTechPlaying_=function handleTechPlaying_(){this.removeClass('vjs-waiting');/**\n\t     * The media is no longer blocked from playback, and has started playing.\n\t     *\n\t     * @event Player#playing\n\t     * @type {EventTarget~Event}\n\t     */this.trigger('playing');};/**\n\t   * Retrigger the `seeking` event that was triggered by the {@link Tech}.\n\t   *\n\t   * @fires Player#seeking\n\t   * @listens Tech#seeking\n\t   * @private\n\t   */Player.prototype.handleTechSeeking_=function handleTechSeeking_(){this.addClass('vjs-seeking');/**\n\t     * Fired whenever the player is jumping to a new time\n\t     *\n\t     * @event Player#seeking\n\t     * @type {EventTarget~Event}\n\t     */this.trigger('seeking');};/**\n\t   * Retrigger the `seeked` event that was triggered by the {@link Tech}.\n\t   *\n\t   * @fires Player#seeked\n\t   * @listens Tech#seeked\n\t   * @private\n\t   */Player.prototype.handleTechSeeked_=function handleTechSeeked_(){this.removeClass('vjs-seeking');/**\n\t     * Fired when the player has finished jumping to a new time\n\t     *\n\t     * @event Player#seeked\n\t     * @type {EventTarget~Event}\n\t     */this.trigger('seeked');};/**\n\t   * Retrigger the `firstplay` event that was triggered by the {@link Tech}.\n\t   *\n\t   * @fires Player#firstplay\n\t   * @listens Tech#firstplay\n\t   * @private\n\t   */Player.prototype.handleTechFirstPlay_=function handleTechFirstPlay_(){// If the first starttime attribute is specified\n\t// then we will start at the given offset in seconds\n\tif(this.options_.starttime){this.currentTime(this.options_.starttime);}this.addClass('vjs-has-started');/**\n\t     * Fired the first time a video is played. Not part of the HLS spec, and this is\n\t     * probably not the best implementation yet, so use sparingly. If you don't have a\n\t     * reason to prevent playback, use `myPlayer.one('play');` instead.\n\t     *\n\t     * @event Player#firstplay\n\t     * @type {EventTarget~Event}\n\t     */this.trigger('firstplay');};/**\n\t   * Retrigger the `pause` event that was triggered by the {@link Tech}.\n\t   *\n\t   * @fires Player#pause\n\t   * @listens Tech#pause\n\t   * @private\n\t   */Player.prototype.handleTechPause_=function handleTechPause_(){this.removeClass('vjs-playing');this.addClass('vjs-paused');/**\n\t     * Fired whenever the media has been paused\n\t     *\n\t     * @event Player#pause\n\t     * @type {EventTarget~Event}\n\t     */this.trigger('pause');};/**\n\t   * Retrigger the `ended` event that was triggered by the {@link Tech}.\n\t   *\n\t   * @fires Player#ended\n\t   * @listens Tech#ended\n\t   * @private\n\t   */Player.prototype.handleTechEnded_=function handleTechEnded_(){this.addClass('vjs-ended');if(this.options_.loop){this.currentTime(0);this.play();}else if(!this.paused()){this.pause();}/**\n\t     * Fired when the end of the media resource is reached (currentTime == duration)\n\t     *\n\t     * @event Player#ended\n\t     * @type {EventTarget~Event}\n\t     */this.trigger('ended');};/**\n\t   * Fired when the duration of the media resource is first known or changed\n\t   *\n\t   * @listens Tech#durationchange\n\t   * @private\n\t   */Player.prototype.handleTechDurationChange_=function handleTechDurationChange_(){this.duration(this.techGet_('duration'));};/**\n\t   * Handle a click on the media element to play/pause\n\t   *\n\t   * @param {EventTarget~Event} event\n\t   *        the event that caused this function to trigger\n\t   *\n\t   * @listens Tech#mousedown\n\t   * @private\n\t   */Player.prototype.handleTechClick_=function handleTechClick_(event){// We're using mousedown to detect clicks thanks to Flash, but mousedown\n\t// will also be triggered with right-clicks, so we need to prevent that\n\tif(event.button!==0){return;}// When controls are disabled a click should not toggle playback because\n\t// the click is considered a control\n\tif(this.controls()){if(this.paused()){this.play();}else{this.pause();}}};/**\n\t   * Handle a tap on the media element. It will toggle the user\n\t   * activity state, which hides and shows the controls.\n\t   *\n\t   * @listens Tech#tap\n\t   * @private\n\t   */Player.prototype.handleTechTap_=function handleTechTap_(){this.userActive(!this.userActive());};/**\n\t   * Handle touch to start\n\t   *\n\t   * @listens Tech#touchstart\n\t   * @private\n\t   */Player.prototype.handleTechTouchStart_=function handleTechTouchStart_(){this.userWasActive=this.userActive();};/**\n\t   * Handle touch to move\n\t   *\n\t   * @listens Tech#touchmove\n\t   * @private\n\t   */Player.prototype.handleTechTouchMove_=function handleTechTouchMove_(){if(this.userWasActive){this.reportUserActivity();}};/**\n\t   * Handle touch to end\n\t   *\n\t   * @param {EventTarget~Event} event\n\t   *        the touchend event that triggered\n\t   *        this function\n\t   *\n\t   * @listens Tech#touchend\n\t   * @private\n\t   */Player.prototype.handleTechTouchEnd_=function handleTechTouchEnd_(event){// Stop the mouse events from also happening\n\tevent.preventDefault();};/**\n\t   * Fired when the player switches in or out of fullscreen mode\n\t   *\n\t   * @private\n\t   * @listens Player#fullscreenchange\n\t   */Player.prototype.handleFullscreenChange_=function handleFullscreenChange_(){if(this.isFullscreen()){this.addClass('vjs-fullscreen');}else{this.removeClass('vjs-fullscreen');}};/**\n\t   * native click events on the SWF aren't triggered on IE11, Win8.1RT\n\t   * use stageclick events triggered from inside the SWF instead\n\t   *\n\t   * @private\n\t   * @listens stageclick\n\t   */Player.prototype.handleStageClick_=function handleStageClick_(){this.reportUserActivity();};/**\n\t   * Handle Tech Fullscreen Change\n\t   *\n\t   * @param {EventTarget~Event} event\n\t   *        the fullscreenchange event that triggered this function\n\t   *\n\t   * @param {Object} data\n\t   *        the data that was sent with the event\n\t   *\n\t   * @private\n\t   * @listens Tech#fullscreenchange\n\t   * @fires Player#fullscreenchange\n\t   */Player.prototype.handleTechFullscreenChange_=function handleTechFullscreenChange_(event,data){if(data){this.isFullscreen(data.isFullscreen);}/**\n\t     * Fired when going in and out of fullscreen.\n\t     *\n\t     * @event Player#fullscreenchange\n\t     * @type {EventTarget~Event}\n\t     */this.trigger('fullscreenchange');};/**\n\t   * Fires when an error occurred during the loading of an audio/video.\n\t   *\n\t   * @private\n\t   * @listens Tech#error\n\t   */Player.prototype.handleTechError_=function handleTechError_(){var error=this.tech_.error();this.error(error);};/**\n\t   * Retrigger the `textdata` event that was triggered by the {@link Tech}.\n\t   *\n\t   * @fires Player#textdata\n\t   * @listens Tech#textdata\n\t   * @private\n\t   */Player.prototype.handleTechTextData_=function handleTechTextData_(){var data=null;if(arguments.length>1){data=arguments[1];}/**\n\t     * Fires when we get a textdata event from tech\n\t     *\n\t     * @event Player#textdata\n\t     * @type {EventTarget~Event}\n\t     */this.trigger('textdata',data);};/**\n\t   * Get object for cached values.\n\t   *\n\t   * @return {Object}\n\t   *         get the current object cache\n\t   */Player.prototype.getCache=function getCache(){return this.cache_;};/**\n\t   * Pass values to the playback tech\n\t   *\n\t   * @param {string} [method]\n\t   *        the method to call\n\t   *\n\t   * @param {Object} arg\n\t   *        the argument to pass\n\t   *\n\t   * @private\n\t   */Player.prototype.techCall_=function techCall_(method,arg){// If it's not ready yet, call method when it is\n\tif(this.tech_&&!this.tech_.isReady_){this.tech_.ready(function(){this[method](arg);},true);// Otherwise call method now\n\t}else{try{if(this.tech_){this.tech_[method](arg);}}catch(e){(0,_log2['default'])(e);throw e;}}};/**\n\t   * Get calls can't wait for the tech, and sometimes don't need to.\n\t   *\n\t   * @param {string} method\n\t   *        Tech method\n\t   *\n\t   * @return {Function|undefined}\n\t   *         the method or undefined\n\t   *\n\t   * @private\n\t   */Player.prototype.techGet_=function techGet_(method){if(this.tech_&&this.tech_.isReady_){// Flash likes to die and reload when you hide or reposition it.\n\t// In these cases the object methods go away and we get errors.\n\t// When that happens we'll catch the errors and inform tech that it's not ready any more.\n\ttry{return this.tech_[method]();}catch(e){// When building additional tech libs, an expected method may not be defined yet\n\tif(this.tech_[method]===undefined){(0,_log2['default'])('Video.js: '+method+' method not defined for '+this.techName_+' playback technology.',e);// When a method isn't available on the object it throws a TypeError\n\t}else if(e.name==='TypeError'){(0,_log2['default'])('Video.js: '+method+' unavailable on '+this.techName_+' playback technology element.',e);this.tech_.isReady_=false;}else{(0,_log2['default'])(e);}throw e;}}return;};/**\n\t   * start media playback\n\t   * ```js\n\t   *   var myPlayer = videojs('some-player-id');\n\t   *\n\t   *   myPlayer.src(\"http://www.example.com/path/to/video.mp4\");\n\t   *   myPlayer.ready(function() {\n\t   *     myPlayer.play();\n\t   *   });\n\t   * ```\n\t   *\n\t   * @return {Player}\n\t   *         A reference to the player object this function was called on\n\t   */Player.prototype.play=function play(){// Only calls the tech's play if we already have a src loaded\n\tif(this.src()||this.currentSrc()){this.techCall_('play');}else{this.tech_.one('loadstart',function(){this.play();});}return this;};/**\n\t   * Pause the video playback\n\t   *\n\t   * ```js\n\t   *   var myPlayer = videojs('some-player-id');\n\t   *\n\t   *   myPlayer.src(\"http://www.example.com/path/to/video.mp4\");\n\t   *   myPlayer.ready(function() {\n\t   *     myPlayer.play();\n\t   *     myPlayer.pause();\n\t   *   });\n\t   * ```\n\t   *\n\t   * @return {Player}\n\t   *         A reference to the player object this function was called on\n\t   */Player.prototype.pause=function pause(){this.techCall_('pause');return this;};/**\n\t   * Check if the player is paused or has yet to play\n\t   *\n\t   * ```js\n\t   *   var myPlayer = videojs('some-player-id');\n\t   *\n\t   *   myPlayer.src(\"http://www.example.com/path/to/video.mp4\");\n\t   *\n\t   *   myPlayer.ready(function() {\n\t   *     // true\n\t   *     console.log(myPlayer.paused());\n\t   *     // false\n\t   *     console.log(!myPlayer.paused());\n\t   *\n\t   *     myPlayer.play();\n\t   *     // false\n\t   *     console.log(myPlayer.paused());\n\t   *     // true\n\t   *     console.log(!myPlayer.paused());\n\t   *\n\t   *     myPlayer.pause();\n\t   *     // true\n\t   *     console.log(myPlayer.paused());\n\t   *     // false\n\t   *     console.log(!myPlayer.paused());\n\t   *   });\n\t   *\n\t   * ```\n\t   *\n\t   * @return {boolean}\n\t   *         - false: if the media is currently playing\n\t   *         - true: if media is not currently playing\n\t   */Player.prototype.paused=function paused(){// The initial state of paused should be true (in Safari it's actually false)\n\treturn this.techGet_('paused')===false?false:true;};/**\n\t   * Returns whether or not the user is \"scrubbing\". Scrubbing is\n\t   * when the user has clicked the progress bar handle and is\n\t   * dragging it along the progress bar.\n\t   *\n\t   * @param {boolean} [isScrubbing]\n\t   *        wether the user is or is not scrubbing\n\t   *\n\t   * @return {boolean|Player}\n\t   *         A instance of the player that called this function when setting,\n\t   *         and the value of scrubbing when getting\n\t   */Player.prototype.scrubbing=function scrubbing(isScrubbing){if(isScrubbing!==undefined){this.scrubbing_=!!isScrubbing;if(isScrubbing){this.addClass('vjs-scrubbing');}else{this.removeClass('vjs-scrubbing');}return this;}return this.scrubbing_;};/**\n\t   * Get or set the current time (in seconds)\n\t   *\n\t   * ```js\n\t   *   var myPlayer = videojs('some-player-id');\n\t   *\n\t   *   myPlayer.src(\"http://www.example.com/path/to/video.mp4\");\n\t   *   myPlayer.ready(function() {\n\t   *     // set current time to 2 minutes into the video\n\t   *     myPlayer.currentTime(120);\n\t   *\n\t   *     // get the current time, should be 120 seconds\n\t   *     var whereYouAt = myPlayer.currentTime();\n\t   *   });\n\t   * ```\n\t   *\n\t   * @param {number|string} [seconds]\n\t   *        The time to seek to in seconds\n\t   *\n\t   * @return {Player|number}\n\t   *         - the current time in seconds when getting\n\t   *         - a reference to the current player object when\n\t   *           getting\n\t   */Player.prototype.currentTime=function currentTime(seconds){if(seconds!==undefined){this.techCall_('setCurrentTime',seconds);return this;}// cache last currentTime and return. default to 0 seconds\n\t//\n\t// Caching the currentTime is meant to prevent a massive amount of reads on the tech's\n\t// currentTime when scrubbing, but may not provide much performance benefit afterall.\n\t// Should be tested. Also something has to read the actual current time or the cache will\n\t// never get updated.\n\tthis.cache_.currentTime=this.techGet_('currentTime')||0;return this.cache_.currentTime;};/**\n\t   * Normally gets the length in time of the video in seconds;\n\t   * in all but the rarest use cases an argument will NOT be passed to the method\n\t   *\n\t   * ```js\n\t   *   var myPlayer = videojs('some-player-id');\n\t   *\n\t   *   myPlayer.src(\"http://www.example.com/path/to/video.mp4\");\n\t   *   myPlayer.ready(function() {\n\t   *     var lengthOfVideo = myPlayer.duration();\n\t   *   });\n\t   * ```\n\t   * > **NOTE**: The video must have started loading before the duration can be\n\t   * known, and in the case of Flash, may not be known until the video starts\n\t   * playing.\n\t   *\n\t   * @fires Player#durationchange\n\t   *\n\t   * @param {number} [seconds]\n\t   *        The duration of the video to set in seconds\n\t   *\n\t   * @return {number|Player}\n\t   *         - The duration of the video in seconds when getting\n\t   *         - A reference to the player that called this function\n\t   *           when setting\n\t   */Player.prototype.duration=function duration(seconds){if(seconds===undefined){return this.cache_.duration||0;}seconds=parseFloat(seconds)||0;// Standardize on Inifity for signaling video is live\n\tif(seconds<0){seconds=Infinity;}if(seconds!==this.cache_.duration){// Cache the last set value for optimized scrubbing (esp. Flash)\n\tthis.cache_.duration=seconds;if(seconds===Infinity){this.addClass('vjs-live');}else{this.removeClass('vjs-live');}/**\n\t       * @event Player#durationchange\n\t       * @type {EventTarget~Event}\n\t       */this.trigger('durationchange');}return this;};/**\n\t   * Calculates how much time is left in the video. Not part\n\t   * of the native video API.\n\t   *\n\t   * ```js\n\t   *   var myPlayer = videojs('some-player-id');\n\t   *   myPlayer.src(\"http://www.example.com/path/to/video.mp4\");\n\t   *   myPlayer.ready(function() {\n\t   *      myPlayer.currentTime(10);\n\t   *\n\t   *      // should be 10 seconds less than duration\n\t   *      console.log(myPlayer.remainingTime());\n\t   *   });\n\t   * ```\n\t   *\n\t   * @return {number}\n\t   *         The time remaining in seconds\n\t   */Player.prototype.remainingTime=function remainingTime(){return this.duration()-this.currentTime();};//\n\t// Kind of like an array of portions of the video that have been downloaded.\n\t/**\n\t   * Get a TimeRange object with an array of the times of the video\n\t   * that have been downloaded. If you just want the percent of the\n\t   * video that's been downloaded, use bufferedPercent.\n\t   *\n\t   * ```js\n\t   *   var myPlayer = videojs('some-player-id');\n\t   *\n\t   *   myPlayer.src(\"http://www.example.com/path/to/video.mp4\");\n\t   *   myPlayer.ready(function() {\n\t   *     var bufferedTimeRange = myPlayer.buffered();\n\t   *\n\t   *     // number of different ranges of time have been buffered.\n\t   *     // Usually 1\n\t   *     var numberOfRanges = bufferedTimeRange.length,\n\t   *\n\t   *     // Time in seconds when the first range starts.\n\t   *     // Usually 0\n\t   *     var firstRangeStart = bufferedTimeRange.start(0),\n\t   *\n\t   *     // Time in seconds when the first range ends\n\t   *     var firstRangeEnd = bufferedTimeRange.end(0),\n\t   *\n\t   *     // Length in seconds of the first time range\n\t   *     var firstRangeLength = firstRangeEnd - firstRangeStart;\n\t   *   });\n\t   * ```\n\t   *\n\t   * @see [Buffered Spec]{@link http://dev.w3.org/html5/spec/video.html#dom-media-buffered}\n\t   *\n\t   * @return {TimeRange}\n\t   *         A mock TimeRange object (following HTML spec)\n\t   */Player.prototype.buffered=function buffered(){var buffered=this.techGet_('buffered');if(!buffered||!buffered.length){buffered=(0,_timeRanges.createTimeRange)(0,0);}return buffered;};/**\n\t   * Get the percent (as a decimal) of the video that's been downloaded.\n\t   * This method is not a part of the native HTML video API.\n\t   *\n\t   * ```js\n\t   *   var myPlayer = videojs('some-player-id');\n\t   *\n\t   *   myPlayer.src(\"http://www.example.com/path/to/video.mp4\");\n\t   *   myPlayer.ready(function() {\n\t   *     // example 0.11 aka 11%\n\t   *     var howMuchIsDownloaded = myPlayer.bufferedPercent();\n\t   *   });\n\t   * ```\n\t   *\n\t   * @return {number}\n\t   *         A decimal between 0 and 1 representing the percent\n\t   *         that is bufferred 0 being 0% and 1 being 100%\n\t   */Player.prototype.bufferedPercent=function bufferedPercent(){return(0,_buffer.bufferedPercent)(this.buffered(),this.duration());};/**\n\t   * Get the ending time of the last buffered time range\n\t   * This is used in the progress bar to encapsulate all time ranges.\n\t   *\n\t   * @return {number}\n\t   *         The end of the last buffered time range\n\t   */Player.prototype.bufferedEnd=function bufferedEnd(){var buffered=this.buffered();var duration=this.duration();var end=buffered.end(buffered.length-1);if(end>duration){end=duration;}return end;};/**\n\t   * Get or set the current volume of the media\n\t   *\n\t   * ```js\n\t   *   var myPlayer = videojs('some-player-id');\n\t   *\n\t   *   myPlayer.src(\"http://www.example.com/path/to/video.mp4\");\n\t   *   myPlayer.ready(function() {\n\t   *     // get\n\t   *     var howLoudIsIt = myPlayer.volume();\n\t   *     // set\n\t   *     myPlayer.volume(0.5); // Set volume to half\n\t   *   });\n\t   * ```\n\t   *\n\t   * @param  {number} [percentAsDecimal]\n\t   *         The new volume as a decimal percent:\n\t   *         - 0 is muted/0%/off\n\t   *         - 1.0 is 100%/full\n\t   *         - 0.5 is half volume or 50%\n\t   *\n\t   * @return {Player|number}\n\t   *         a reference to the calling player when setting and the\n\t   *         current volume as a percent when getting\n\t   */Player.prototype.volume=function volume(percentAsDecimal){var vol=void 0;if(percentAsDecimal!==undefined){// Force value to between 0 and 1\n\tvol=Math.max(0,Math.min(1,parseFloat(percentAsDecimal)));this.cache_.volume=vol;this.techCall_('setVolume',vol);return this;}// Default to 1 when returning current volume.\n\tvol=parseFloat(this.techGet_('volume'));return isNaN(vol)?1:vol;};/**\n\t   * Get the current muted state, or turn mute on or off\n\t   * ```js\n\t   *   var myPlayer = videojs('some-player-id');\n\t   *\n\t   *   myPlayer.src(\"http://www.example.com/path/to/video.mp4\");\n\t   *   myPlayer.ready(function() {\n\t   *     // get, should be false\n\t   *     console.log(myPlayer.muted());\n\t   *     // set to true\n\t   *     myPlayer.muted(true);\n\t   *     // get should be true\n\t   *     console.log(myPlayer.muted());\n\t   *   });\n\t   * ```\n\t   *\n\t   * @param {boolean} [muted]\n\t   *        - true to mute\n\t   *        - false to unmute\n\t   *\n\t   * @return {boolean|Player}\n\t   *         - true if mute is on and getting\n\t   *         - false if mute is off and getting\n\t   *         - A reference to the current player when setting\n\t   */Player.prototype.muted=function muted(_muted){if(_muted!==undefined){this.techCall_('setMuted',_muted);return this;}return this.techGet_('muted')||false;};/**\n\t   * Check if current tech can support native fullscreen\n\t   * (e.g. with built in controls like iOS, so not our flash swf)\n\t   *\n\t   * @return {boolean}\n\t   *         if native fullscreen is supported\n\t   */Player.prototype.supportsFullScreen=function supportsFullScreen(){return this.techGet_('supportsFullScreen')||false;};/**\n\t   * Check if the player is in fullscreen mode or tell the player that it\n\t   * is or is not in fullscreen mode.\n\t   *\n\t   * ```js\n\t   *   var myPlayer = videojs('some-player-id');\n\t   *\n\t   *   myPlayer.src(\"http://www.example.com/path/to/video.mp4\");\n\t   *   myPlayer.ready(function() {\n\t   *     // get, should be false\n\t   *     console.log(myPlayer.isFullscreen());\n\t   *\n\t   *     // set, tell the player it's in fullscreen\n\t   *     myPlayer.isFullscreen(true);\n\t   *\n\t   *     // get, should be true\n\t   *     console.log(myPlayer.isFullscreen());\n\t   *   });\n\t   * ```\n\t   * > NOTE: As of the latest HTML5 spec, isFullscreen is no longer an official\n\t   * property and instead document.fullscreenElement is used. But isFullscreen is\n\t   * still a valuable property for internal player workings.\n\t   *\n\t   * @param  {boolean} [isFS]\n\t   *         Set the players current fullscreen state\n\t   *\n\t   * @return {boolean|Player}\n\t   *         - true if fullscreen is on and getting\n\t   *         - false if fullscreen is off and getting\n\t   *         - A reference to the current player when setting\n\t   */Player.prototype.isFullscreen=function isFullscreen(isFS){if(isFS!==undefined){this.isFullscreen_=!!isFS;return this;}return!!this.isFullscreen_;};/**\n\t   * Increase the size of the video to full screen\n\t   * ```js\n\t   *   var myPlayer = videojs('some-player-id');\n\t   *\n\t   *   myPlayer.src(\"http://www.example.com/path/to/video.mp4\");\n\t   *   myPlayer.ready(function() {\n\t   *     myPlayer.requestFullscreen();\n\t   *   });\n\t   * ```\n\t   * In some browsers, full screen is not supported natively, so it enters\n\t   * \"full window mode\", where the video fills the browser window.\n\t   * In browsers and devices that support native full screen, sometimes the\n\t   * browser's default controls will be shown, and not the Video.js custom skin.\n\t   * This includes most mobile devices (iOS, Android) and older versions of\n\t   * Safari.\n\t   *\n\t   * @fires Player#fullscreenchange\n\t   * @return {Player}\n\t   *         A reference to the current player\n\t   */Player.prototype.requestFullscreen=function requestFullscreen(){var fsApi=_fullscreenApi2['default'];this.isFullscreen(true);if(fsApi.requestFullscreen){// the browser supports going fullscreen at the element level so we can\n\t// take the controls fullscreen as well as the video\n\t// Trigger fullscreenchange event after change\n\t// We have to specifically add this each time, and remove\n\t// when canceling fullscreen. Otherwise if there's multiple\n\t// players on a page, they would all be reacting to the same fullscreen\n\t// events\n\tEvents.on(_document2['default'],fsApi.fullscreenchange,Fn.bind(this,function documentFullscreenChange(e){this.isFullscreen(_document2['default'][fsApi.fullscreenElement]);// If cancelling fullscreen, remove event listener.\n\tif(this.isFullscreen()===false){Events.off(_document2['default'],fsApi.fullscreenchange,documentFullscreenChange);}/**\n\t         * @event Player#fullscreenchange\n\t         * @type {EventTarget~Event}\n\t         */this.trigger('fullscreenchange');}));this.el_[fsApi.requestFullscreen]();}else if(this.tech_.supportsFullScreen()){// we can't take the video.js controls fullscreen but we can go fullscreen\n\t// with native controls\n\tthis.techCall_('enterFullScreen');}else{// fullscreen isn't supported so we'll just stretch the video element to\n\t// fill the viewport\n\tthis.enterFullWindow();/**\n\t       * @event Player#fullscreenchange\n\t       * @type {EventTarget~Event}\n\t       */this.trigger('fullscreenchange');}return this;};/**\n\t   * Return the video to its normal size after having been in full screen mode\n\t   *\n\t   * ```js\n\t   *   var myPlayer = videojs('some-player-id');\n\t   *\n\t   *   myPlayer.src(\"http://www.example.com/path/to/video.mp4\");\n\t   *   myPlayer.ready(function() {\n\t   *     myPlayer.requestFullscreen();\n\t   *     myPlayer.exitFullscreen();\n\t   *   });\n\t   * ```\n\t   *\n\t   * @fires Player#fullscreenchange\n\t   *\n\t   * @return {Player}\n\t   *         A reference to the current player\n\t   */Player.prototype.exitFullscreen=function exitFullscreen(){var fsApi=_fullscreenApi2['default'];this.isFullscreen(false);// Check for browser element fullscreen support\n\tif(fsApi.requestFullscreen){_document2['default'][fsApi.exitFullscreen]();}else if(this.tech_.supportsFullScreen()){this.techCall_('exitFullScreen');}else{this.exitFullWindow();/**\n\t       * @event Player#fullscreenchange\n\t       * @type {EventTarget~Event}\n\t       */this.trigger('fullscreenchange');}return this;};/**\n\t   * When fullscreen isn't supported we can stretch the\n\t   * video container to as wide as the browser will let us.\n\t   *\n\t   * @fires Player#enterFullWindow\n\t   */Player.prototype.enterFullWindow=function enterFullWindow(){this.isFullWindow=true;// Storing original doc overflow value to return to when fullscreen is off\n\tthis.docOrigOverflow=_document2['default'].documentElement.style.overflow;// Add listener for esc key to exit fullscreen\n\tEvents.on(_document2['default'],'keydown',Fn.bind(this,this.fullWindowOnEscKey));// Hide any scroll bars\n\t_document2['default'].documentElement.style.overflow='hidden';// Apply fullscreen styles\n\tDom.addElClass(_document2['default'].body,'vjs-full-window');/**\n\t     * @event Player#enterFullWindow\n\t     * @type {EventTarget~Event}\n\t     */this.trigger('enterFullWindow');};/**\n\t   * Check for call to either exit full window or\n\t   * full screen on ESC key\n\t   *\n\t   * @param {string} event\n\t   *        Event to check for key press\n\t   */Player.prototype.fullWindowOnEscKey=function fullWindowOnEscKey(event){if(event.keyCode===27){if(this.isFullscreen()===true){this.exitFullscreen();}else{this.exitFullWindow();}}};/**\n\t   * Exit full window\n\t   *\n\t   * @fires Player#exitFullWindow\n\t   */Player.prototype.exitFullWindow=function exitFullWindow(){this.isFullWindow=false;Events.off(_document2['default'],'keydown',this.fullWindowOnEscKey);// Unhide scroll bars.\n\t_document2['default'].documentElement.style.overflow=this.docOrigOverflow;// Remove fullscreen styles\n\tDom.removeElClass(_document2['default'].body,'vjs-full-window');// Resize the box, controller, and poster to original sizes\n\t// this.positionAll();\n\t/**\n\t     * @event Player#exitFullWindow\n\t     * @type {EventTarget~Event}\n\t     */this.trigger('exitFullWindow');};/**\n\t   * Check whether the player can play a given mimetype\n\t   *\n\t   * @see https://www.w3.org/TR/2011/WD-html5-20110113/video.html#dom-navigator-canplaytype\n\t   *\n\t   * @param {string} type\n\t   *        The mimetype to check\n\t   *\n\t   * @return {string}\n\t   *         'probably', 'maybe', or '' (empty string)\n\t   */Player.prototype.canPlayType=function canPlayType(type){var can=void 0;// Loop through each playback technology in the options order\n\tfor(var i=0,j=this.options_.techOrder;i<j.length;i++){var techName=(0,_toTitleCase2['default'])(j[i]);var tech=_tech2['default'].getTech(techName);// Support old behavior of techs being registered as components.\n\t// Remove once that deprecated behavior is removed.\n\tif(!tech){tech=_component2['default'].getComponent(techName);}// Check if the current tech is defined before continuing\n\tif(!tech){_log2['default'].error('The \"'+techName+'\" tech is undefined. Skipped browser support check for that tech.');continue;}// Check if the browser supports this technology\n\tif(tech.isSupported()){can=tech.canPlayType(type);if(can){return can;}}}return'';};/**\n\t   * Select source based on tech-order or source-order\n\t   * Uses source-order selection if `options.sourceOrder` is truthy. Otherwise,\n\t   * defaults to tech-order selection\n\t   *\n\t   * @param {Array} sources\n\t   *        The sources for a media asset\n\t   *\n\t   * @return {Object|boolean}\n\t   *         Object of source and tech order or false\n\t   */Player.prototype.selectSource=function selectSource(sources){var _this4=this;// Get only the techs specified in `techOrder` that exist and are supported by the\n\t// current platform\n\tvar techs=this.options_.techOrder.map(_toTitleCase2['default']).map(function(techName){// `Component.getComponent(...)` is for support of old behavior of techs\n\t// being registered as components.\n\t// Remove once that deprecated behavior is removed.\n\treturn[techName,_tech2['default'].getTech(techName)||_component2['default'].getComponent(techName)];}).filter(function(_ref){var techName=_ref[0],tech=_ref[1];// Check if the current tech is defined before continuing\n\tif(tech){// Check if the browser supports this technology\n\treturn tech.isSupported();}_log2['default'].error('The \"'+techName+'\" tech is undefined. Skipped browser support check for that tech.');return false;});// Iterate over each `innerArray` element once per `outerArray` element and execute\n\t// `tester` with both. If `tester` returns a non-falsy value, exit early and return\n\t// that value.\n\tvar findFirstPassingTechSourcePair=function findFirstPassingTechSourcePair(outerArray,innerArray,tester){var found=void 0;outerArray.some(function(outerChoice){return innerArray.some(function(innerChoice){found=tester(outerChoice,innerChoice);if(found){return true;}});});return found;};var foundSourceAndTech=void 0;var flip=function flip(fn){return function(a,b){return fn(b,a);};};var finder=function finder(_ref2,source){var techName=_ref2[0],tech=_ref2[1];if(tech.canPlaySource(source,_this4.options_[techName.toLowerCase()])){return{source:source,tech:techName};}};// Depending on the truthiness of `options.sourceOrder`, we swap the order of techs and sources\n\t// to select from them based on their priority.\n\tif(this.options_.sourceOrder){// Source-first ordering\n\tfoundSourceAndTech=findFirstPassingTechSourcePair(sources,techs,flip(finder));}else{// Tech-first ordering\n\tfoundSourceAndTech=findFirstPassingTechSourcePair(techs,sources,finder);}return foundSourceAndTech||false;};/**\n\t   * The source function updates the video source\n\t   * There are three types of variables you can pass as the argument.\n\t   * **URL string**: A URL to the the video file. Use this method if you are sure\n\t   * the current playback technology (HTML5/Flash) can support the source you\n\t   * provide. Currently only MP4 files can be used in both HTML5 and Flash.\n\t   *\n\t   * ```js\n\t   *   var myPlayer = videojs('some-player-id');\n\t   *\n\t   *   myPlayer.src(\"http://www.example.com/path/to/video.mp4\");\n\t   * ```\n\t   *\n\t   * **Source Object (or element):* * A javascript object containing information\n\t   * about the source file. Use this method if you want the player to determine if\n\t   * it can support the file using the type information.\n\t   *\n\t   * ```js\n\t   *   var myPlayer = videojs('some-player-id');\n\t   *\n\t   *   myPlayer.src({type: \"video/mp4\", src: \"http://www.example.com/path/to/video.mp4\"});\n\t   * ```\n\t   *\n\t   * **Array of Source Objects:* * To provide multiple versions of the source so\n\t   * that it can be played using HTML5 across browsers you can use an array of\n\t   * source objects. Video.js will detect which version is supported and load that\n\t   * file.\n\t   *\n\t   * ```js\n\t   *   var myPlayer = videojs('some-player-id');\n\t   *\n\t   *   myPlayer.src([\n\t   *     {type: \"video/mp4\", src: \"http://www.example.com/path/to/video.mp4\"},\n\t   *     {type: \"video/webm\", src: \"http://www.example.com/path/to/video.webm\"},\n\t   *     {type: \"video/ogg\", src: \"http://www.example.com/path/to/video.ogv\"}\n\t   *   ]);\n\t   * ```\n\t   *\n\t   * @param {Tech~SourceObject|Tech~SourceObject[]} [source]\n\t   *        One SourceObject or an array of SourceObjects\n\t   *\n\t   * @return {string|Player}\n\t   *         - The current video source when getting\n\t   *         - The player when setting\n\t   */Player.prototype.src=function src(source){if(source===undefined){return this.techGet_('src');}var currentTech=_tech2['default'].getTech(this.techName_);// Support old behavior of techs being registered as components.\n\t// Remove once that deprecated behavior is removed.\n\tif(!currentTech){currentTech=_component2['default'].getComponent(this.techName_);}// case: Array of source objects to choose from and pick the best to play\n\tif(Array.isArray(source)){this.sourceList_(source);// case: URL String (http://myvideo...)\n\t}else if(typeof source==='string'){// create a source object from the string\n\tthis.src({src:source});// case: Source object { src: '', type: '' ... }\n\t}else if(source instanceof Object){// check if the source has a type and the loaded tech cannot play the source\n\t// if there's no type we'll just try the current tech\n\tif(source.type&&!currentTech.canPlaySource(source,this.options_[this.techName_.toLowerCase()])){// create a source list with the current source and send through\n\t// the tech loop to check for a compatible technology\n\tthis.sourceList_([source]);}else{this.cache_.sources=null;this.cache_.source=source;this.cache_.src=source.src;this.currentType_=source.type||'';// wait until the tech is ready to set the source\n\tthis.ready(function(){// The setSource tech method was added with source handlers\n\t// so older techs won't support it\n\t// We need to check the direct prototype for the case where subclasses\n\t// of the tech do not support source handlers\n\tif(currentTech.prototype.hasOwnProperty('setSource')){this.techCall_('setSource',source);}else{this.techCall_('src',source.src);}if(this.options_.preload==='auto'){this.load();}if(this.options_.autoplay){this.play();}// Set the source synchronously if possible (#2326)\n\t},true);}}return this;};/**\n\t   * Handle an array of source objects\n\t   *\n\t   * @param  {Tech~SourceObject[]} sources\n\t   *         Array of source objects\n\t   *\n\t   * @private\n\t   */Player.prototype.sourceList_=function sourceList_(sources){var sourceTech=this.selectSource(sources);if(sourceTech){if(sourceTech.tech===this.techName_){// if this technology is already loaded, set the source\n\tthis.src(sourceTech.source);}else{// load this technology with the chosen source\n\tthis.loadTech_(sourceTech.tech,sourceTech.source);}this.cache_.sources=sources;}else{// We need to wrap this in a timeout to give folks a chance to add error event handlers\n\tthis.setTimeout(function(){this.error({code:4,message:this.localize(this.options_.notSupportedMessage)});},0);// we could not find an appropriate tech, but let's still notify the delegate that this is it\n\t// this needs a better comment about why this is needed\n\tthis.triggerReady();}};/**\n\t   * Begin loading the src data.\n\t   *\n\t   * @return {Player}\n\t   *         A reference to the player\n\t   */Player.prototype.load=function load(){this.techCall_('load');return this;};/**\n\t   * Reset the player. Loads the first tech in the techOrder,\n\t   * and calls `reset` on the tech`.\n\t   *\n\t   * @return {Player}\n\t   *         A reference to the player\n\t   */Player.prototype.reset=function reset(){this.loadTech_((0,_toTitleCase2['default'])(this.options_.techOrder[0]),null);this.techCall_('reset');return this;};/**\n\t   * Returns all of the current source objects.\n\t   *\n\t   * @return {Tech~SourceObject[]}\n\t   *         The current source objects\n\t   */Player.prototype.currentSources=function currentSources(){var source=this.currentSource();var sources=[];// assume `{}` or `{ src }`\n\tif(Object.keys(source).length!==0){sources.push(source);}return this.cache_.sources||sources;};/**\n\t   * Returns the current source object.\n\t   *\n\t   * @return {Tech~SourceObject}\n\t   *         The current source object\n\t   */Player.prototype.currentSource=function currentSource(){var source={};var src=this.currentSrc();if(src){source.src=src;}return this.cache_.source||source;};/**\n\t   * Returns the fully qualified URL of the current source value e.g. http://mysite.com/video.mp4\n\t   * Can be used in conjuction with `currentType` to assist in rebuilding the current source object.\n\t   *\n\t   * @return {string}\n\t   *         The current source\n\t   */Player.prototype.currentSrc=function currentSrc(){return this.techGet_('currentSrc')||this.cache_.src||'';};/**\n\t   * Get the current source type e.g. video/mp4\n\t   * This can allow you rebuild the current source object so that you could load the same\n\t   * source and tech later\n\t   *\n\t   * @return {string}\n\t   *         The source MIME type\n\t   */Player.prototype.currentType=function currentType(){return this.currentType_||'';};/**\n\t   * Get or set the preload attribute\n\t   *\n\t   * @param {boolean} [value]\n\t   *        - true means that we should preload\n\t   *        - false maens that we should not preload\n\t   *\n\t   * @return {string|Player}\n\t   *         - the preload attribute value when getting\n\t   *         - the player when setting\n\t   */Player.prototype.preload=function preload(value){if(value!==undefined){this.techCall_('setPreload',value);this.options_.preload=value;return this;}return this.techGet_('preload');};/**\n\t   * Get or set the autoplay attribute.\n\t   *\n\t   * @param {boolean} [value]\n\t   *        - true means that we should autoplay\n\t   *        - false maens that we should not autoplay\n\t   *\n\t   * @return {string|Player}\n\t   *         - the current value of autoplay\n\t   *         - the player when setting\n\t   */Player.prototype.autoplay=function autoplay(value){if(value!==undefined){this.techCall_('setAutoplay',value);this.options_.autoplay=value;return this;}return this.techGet_('autoplay',value);};/**\n\t   * Get or set the loop attribute on the video element.\n\t   *\n\t   * @param {boolean} [value]\n\t   *        - true means that we should loop the video\n\t   *        - false means that we should not loop the video\n\t   *\n\t   * @return {string|Player}\n\t   *         - the current value of loop when getting\n\t   *         - the player when setting\n\t   */Player.prototype.loop=function loop(value){if(value!==undefined){this.techCall_('setLoop',value);this.options_.loop=value;return this;}return this.techGet_('loop');};/**\n\t   * Get or set the poster image source url\n\t   *\n\t   * EXAMPLE\n\t   * ```js\n\t   *   var myPlayer = videojs('example_video_1');\n\t   *\n\t   *   // set\n\t   *   myPlayer.poster('http://example.com/myImage.jpg');\n\t   *\n\t   *   // get\n\t   *   console.log(myPlayer.poster());\n\t   *   // 'http://example.com/myImage.jpg'\n\t   * ```\n\t   *\n\t   * @fires Player#posterchange\n\t   *\n\t   * @param {string} [src]\n\t   *        Poster image source URL\n\t   *\n\t   * @return {string|Player}\n\t   *         - the current value of poster when getting\n\t   *         - the player when setting\n\t   */Player.prototype.poster=function poster(src){if(src===undefined){return this.poster_;}// The correct way to remove a poster is to set as an empty string\n\t// other falsey values will throw errors\n\tif(!src){src='';}// update the internal poster variable\n\tthis.poster_=src;// update the tech's poster\n\tthis.techCall_('setPoster',src);// alert components that the poster has been set\n\t/**\n\t     * This event fires when the poster image is changed on the player.\n\t     *\n\t     * @event Player#posterchange\n\t     * @type {EventTarget~Event}\n\t     */this.trigger('posterchange');return this;};/**\n\t   * Some techs (e.g. YouTube) can provide a poster source in an\n\t   * asynchronous way. We want the poster component to use this\n\t   * poster source so that it covers up the tech's controls.\n\t   * (YouTube's play button). However we only want to use this\n\t   * soruce if the player user hasn't set a poster through\n\t   * the normal APIs.\n\t   *\n\t   * @fires Player#posterchange\n\t   * @listens Tech#posterchange\n\t   * @private\n\t   */Player.prototype.handleTechPosterChange_=function handleTechPosterChange_(){if(!this.poster_&&this.tech_&&this.tech_.poster){this.poster_=this.tech_.poster()||'';// Let components know the poster has changed\n\tthis.trigger('posterchange');}};/**\n\t   * Get or set whether or not the controls are showing.\n\t   *\n\t   * @fires Player#controlsenabled\n\t   *\n\t   * @param {boolean} [bool]\n\t   *        - true to turn controls on\n\t   *        - false to turn controls off\n\t   *\n\t   * @return {boolean|Player}\n\t   *         - the current value of controls when getting\n\t   *         - the player when setting\n\t   */Player.prototype.controls=function controls(bool){if(bool!==undefined){bool=!!bool;// Don't trigger a change event unless it actually changed\n\tif(this.controls_!==bool){this.controls_=bool;if(this.usingNativeControls()){this.techCall_('setControls',bool);}if(bool){this.removeClass('vjs-controls-disabled');this.addClass('vjs-controls-enabled');/**\n\t           * @event Player#controlsenabled\n\t           * @type {EventTarget~Event}\n\t           */this.trigger('controlsenabled');if(!this.usingNativeControls()){this.addTechControlsListeners_();}}else{this.removeClass('vjs-controls-enabled');this.addClass('vjs-controls-disabled');/**\n\t           * @event Player#controlsdisabled\n\t           * @type {EventTarget~Event}\n\t           */this.trigger('controlsdisabled');if(!this.usingNativeControls()){this.removeTechControlsListeners_();}}}return this;}return!!this.controls_;};/**\n\t   * Toggle native controls on/off. Native controls are the controls built into\n\t   * devices (e.g. default iPhone controls), Flash, or other techs\n\t   * (e.g. Vimeo Controls)\n\t   * **This should only be set by the current tech, because only the tech knows\n\t   * if it can support native controls**\n\t   *\n\t   * @fires Player#usingnativecontrols\n\t   * @fires Player#usingcustomcontrols\n\t   *\n\t   * @param {boolean} [bool]\n\t   *        - true to turn native controls on\n\t   *        - false to turn native controls off\n\t   *\n\t   * @return {boolean|Player}\n\t   *         - the current value of native controls when getting\n\t   *         - the player when setting\n\t   */Player.prototype.usingNativeControls=function usingNativeControls(bool){if(bool!==undefined){bool=!!bool;// Don't trigger a change event unless it actually changed\n\tif(this.usingNativeControls_!==bool){this.usingNativeControls_=bool;if(bool){this.addClass('vjs-using-native-controls');/**\n\t           * player is using the native device controls\n\t           *\n\t           * @event Player#usingnativecontrols\n\t           * @type {EventTarget~Event}\n\t           */this.trigger('usingnativecontrols');}else{this.removeClass('vjs-using-native-controls');/**\n\t           * player is using the custom HTML controls\n\t           *\n\t           * @event Player#usingcustomcontrols\n\t           * @type {EventTarget~Event}\n\t           */this.trigger('usingcustomcontrols');}}return this;}return!!this.usingNativeControls_;};/**\n\t   * Set or get the current MediaError\n\t   *\n\t   * @fires Player#error\n\t   *\n\t   * @param  {MediaError|string|number} [err]\n\t   *         A MediaError or a string/number to be turned\n\t   *         into a MediaError\n\t   *\n\t   * @return {MediaError|null|Player}\n\t   *         - The current MediaError when getting (or null)\n\t   *         - The player when setting\n\t   */Player.prototype.error=function error(err){if(err===undefined){return this.error_||null;}// restoring to default\n\tif(err===null){this.error_=err;this.removeClass('vjs-error');if(this.errorDisplay){this.errorDisplay.close();}return this;}this.error_=new _mediaError2['default'](err);// add the vjs-error classname to the player\n\tthis.addClass('vjs-error');// log the name of the error type and any message\n\t// ie8 just logs \"[object object]\" if you just log the error object\n\t_log2['default'].error('(CODE:'+this.error_.code+' '+_mediaError2['default'].errorTypes[this.error_.code]+')',this.error_.message,this.error_);/**\n\t     * @event Player#error\n\t     * @type {EventTarget~Event}\n\t     */this.trigger('error');return this;};/**\n\t   * Report user activity\n\t   *\n\t   * @param {Object} event\n\t   *        Event object\n\t   */Player.prototype.reportUserActivity=function reportUserActivity(event){this.userActivity_=true;};/**\n\t   * Get/set if user is active\n\t   *\n\t   * @fires Player#useractive\n\t   * @fires Player#userinactive\n\t   *\n\t   * @param {boolean} [bool]\n\t   *        - true if the user is active\n\t   *        - false if the user is inactive\n\t   * @return {boolean|Player}\n\t   *         - the current value of userActive when getting\n\t   *         - the player when setting\n\t   */Player.prototype.userActive=function userActive(bool){if(bool!==undefined){bool=!!bool;if(bool!==this.userActive_){this.userActive_=bool;if(bool){// If the user was inactive and is now active we want to reset the\n\t// inactivity timer\n\tthis.userActivity_=true;this.removeClass('vjs-user-inactive');this.addClass('vjs-user-active');/**\n\t           * @event Player#useractive\n\t           * @type {EventTarget~Event}\n\t           */this.trigger('useractive');}else{// We're switching the state to inactive manually, so erase any other\n\t// activity\n\tthis.userActivity_=false;// Chrome/Safari/IE have bugs where when you change the cursor it can\n\t// trigger a mousemove event. This causes an issue when you're hiding\n\t// the cursor when the user is inactive, and a mousemove signals user\n\t// activity. Making it impossible to go into inactive mode. Specifically\n\t// this happens in fullscreen when we really need to hide the cursor.\n\t//\n\t// When this gets resolved in ALL browsers it can be removed\n\t// https://code.google.com/p/chromium/issues/detail?id=103041\n\tif(this.tech_){this.tech_.one('mousemove',function(e){e.stopPropagation();e.preventDefault();});}this.removeClass('vjs-user-active');this.addClass('vjs-user-inactive');/**\n\t           * @event Player#userinactive\n\t           * @type {EventTarget~Event}\n\t           */this.trigger('userinactive');}}return this;}return this.userActive_;};/**\n\t   * Listen for user activity based on timeout value\n\t   *\n\t   * @private\n\t   */Player.prototype.listenForUserActivity_=function listenForUserActivity_(){var mouseInProgress=void 0;var lastMoveX=void 0;var lastMoveY=void 0;var handleActivity=Fn.bind(this,this.reportUserActivity);var handleMouseMove=function handleMouseMove(e){// #1068 - Prevent mousemove spamming\n\t// Chrome Bug: https://code.google.com/p/chromium/issues/detail?id=366970\n\tif(e.screenX!==lastMoveX||e.screenY!==lastMoveY){lastMoveX=e.screenX;lastMoveY=e.screenY;handleActivity();}};var handleMouseDown=function handleMouseDown(){handleActivity();// For as long as the they are touching the device or have their mouse down,\n\t// we consider them active even if they're not moving their finger or mouse.\n\t// So we want to continue to update that they are active\n\tthis.clearInterval(mouseInProgress);// Setting userActivity=true now and setting the interval to the same time\n\t// as the activityCheck interval (250) should ensure we never miss the\n\t// next activityCheck\n\tmouseInProgress=this.setInterval(handleActivity,250);};var handleMouseUp=function handleMouseUp(event){handleActivity();// Stop the interval that maintains activity if the mouse/touch is down\n\tthis.clearInterval(mouseInProgress);};// Any mouse movement will be considered user activity\n\tthis.on('mousedown',handleMouseDown);this.on('mousemove',handleMouseMove);this.on('mouseup',handleMouseUp);// Listen for keyboard navigation\n\t// Shouldn't need to use inProgress interval because of key repeat\n\tthis.on('keydown',handleActivity);this.on('keyup',handleActivity);// Run an interval every 250 milliseconds instead of stuffing everything into\n\t// the mousemove/touchmove function itself, to prevent performance degradation.\n\t// `this.reportUserActivity` simply sets this.userActivity_ to true, which\n\t// then gets picked up by this loop\n\t// http://ejohn.org/blog/learning-from-twitter/\n\tvar inactivityTimeout=void 0;this.setInterval(function(){// Check to see if mouse/touch activity has happened\n\tif(this.userActivity_){// Reset the activity tracker\n\tthis.userActivity_=false;// If the user state was inactive, set the state to active\n\tthis.userActive(true);// Clear any existing inactivity timeout to start the timer over\n\tthis.clearTimeout(inactivityTimeout);var timeout=this.options_.inactivityTimeout;if(timeout>0){// In <timeout> milliseconds, if no more activity has occurred the\n\t// user will be considered inactive\n\tinactivityTimeout=this.setTimeout(function(){// Protect against the case where the inactivityTimeout can trigger just\n\t// before the next user activity is picked up by the activity check loop\n\t// causing a flicker\n\tif(!this.userActivity_){this.userActive(false);}},timeout);}}},250);};/**\n\t   * Gets or sets the current playback rate. A playback rate of\n\t   * 1.0 represents normal speed and 0.5 would indicate half-speed\n\t   * playback, for instance.\n\t   *\n\t   * @see https://html.spec.whatwg.org/multipage/embedded-content.html#dom-media-playbackrate\n\t   *\n\t   * @param {number} [rate]\n\t   *       New playback rate to set.\n\t   *\n\t   * @return {number|Player}\n\t   *         - The current playback rate when getting or 1.0\n\t   *         - the player when setting\n\t   */Player.prototype.playbackRate=function playbackRate(rate){if(rate!==undefined){this.techCall_('setPlaybackRate',rate);return this;}if(this.tech_&&this.tech_.featuresPlaybackRate){return this.techGet_('playbackRate');}return 1.0;};/**\n\t   * Gets or sets the audio flag\n\t   *\n\t   * @param {boolean} bool\n\t   *        - true signals that this is an audio player\n\t   *        - false signals that this is not an audio player\n\t   *\n\t   * @return {Player|boolean}\n\t   *         - the current value of isAudio when getting\n\t   *         - the player if setting\n\t   */Player.prototype.isAudio=function isAudio(bool){if(bool!==undefined){this.isAudio_=!!bool;return this;}return!!this.isAudio_;};/**\n\t   * Get the {@link VideoTrackList}\n\t   *\n\t   * @see https://html.spec.whatwg.org/multipage/embedded-content.html#videotracklist\n\t   *\n\t   * @return {VideoTrackList}\n\t   *         the current video track list\n\t   */Player.prototype.videoTracks=function videoTracks(){// if we have not yet loadTech_, we create videoTracks_\n\t// these will be passed to the tech during loading\n\tif(!this.tech_){this.videoTracks_=this.videoTracks_||new _videoTrackList2['default']();return this.videoTracks_;}return this.tech_.videoTracks();};/**\n\t   * Get the {@link AudioTrackList}\n\t   *\n\t   * @see https://html.spec.whatwg.org/multipage/embedded-content.html#audiotracklist\n\t   *\n\t   * @return {AudioTrackList}\n\t   *         the current audio track list\n\t   */Player.prototype.audioTracks=function audioTracks(){// if we have not yet loadTech_, we create videoTracks_\n\t// these will be passed to the tech during loading\n\tif(!this.tech_){this.audioTracks_=this.audioTracks_||new _audioTrackList2['default']();return this.audioTracks_;}return this.tech_.audioTracks();};/**\n\t   * Get the {@link TextTrackList}\n\t   *\n\t   * Text tracks are tracks of timed text events.\n\t   * - Captions: text displayed over the video\n\t   *             for the hearing impaired\n\t   * - Subtitles: text displayed over the video for\n\t   *              those who don't understand language in the video\n\t   * - Chapters: text displayed in a menu allowing the user to jump\n\t   *             to particular points (chapters) in the video\n\t   * - Descriptions: (not yet implemented) audio descriptions that are read back to\n\t   *                 the user by a screen reading device\n\t   *\n\t   * @see http://www.w3.org/html/wg/drafts/html/master/embedded-content-0.html#dom-media-texttracks\n\t   *\n\t   * @return {TextTrackList|undefined}\n\t   *         The current TextTrackList or undefined if\n\t   *         or undefined if we don't have a tech\n\t   */Player.prototype.textTracks=function textTracks(){// cannot use techGet_ directly because it checks to see whether the tech is ready.\n\t// Flash is unlikely to be ready in time but textTracks should still work.\n\tif(this.tech_){return this.tech_.textTracks();}};/**\n\t   * Get the \"remote\" {@link TextTrackList}. Remote Text Tracks\n\t   * are tracks that were added to the HTML video element and can\n\t   * be removed, whereas normal texttracks cannot be removed.\n\t   *\n\t   *\n\t   * @return {TextTrackList|undefined}\n\t   *         The current remote text track list or undefined\n\t   *         if we don't have a tech\n\t   */Player.prototype.remoteTextTracks=function remoteTextTracks(){if(this.tech_){return this.tech_.remoteTextTracks();}};/**\n\t   * Get the \"remote\" {@link HTMLTrackElementList}.\n\t   * This gives the user all of the DOM elements that match up\n\t   * with the remote {@link TextTrackList}.\n\t   *\n\t   * @return {HTMLTrackElementList}\n\t   *         The current remote text track list elements\n\t   *         or undefined if we don't have a tech\n\t   */Player.prototype.remoteTextTrackEls=function remoteTextTrackEls(){if(this.tech_){return this.tech_.remoteTextTrackEls();}};/**\n\t   * A helper method for adding a {@link TextTrack} to our\n\t   * {@link TextTrackList}.\n\t   *\n\t   * In addition to the W3C settings we allow adding additional info through options.\n\t   *\n\t   * @see http://www.w3.org/html/wg/drafts/html/master/embedded-content-0.html#dom-media-addtexttrack\n\t   *\n\t   * @param {string} [kind]\n\t   *        the kind of TextTrack you are adding\n\t   *\n\t   * @param {string} [label]\n\t   *        the label to give the TextTrack label\n\t   *\n\t   * @param {string} [language]\n\t   *        the language to set on the TextTrack\n\t   *\n\t   * @return {TextTrack|undefined}\n\t   *         the TextTrack that was added or undefined\n\t   *         if there is no tech\n\t   */Player.prototype.addTextTrack=function addTextTrack(kind,label,language){if(this.tech_){return this.tech_.addTextTrack(kind,label,language);}};/**\n\t   * Create a remote {@link TextTrack} and an {@link HTMLTrackElement}. It will\n\t   * automatically removed from the video element whenever the source changes, unless\n\t   * manualCleanup is set to false.\n\t   *\n\t   * @param {Object} options\n\t   *        Options to pass to {@link HTMLTrackElement} during creation. See\n\t   *        {@link HTMLTrackElement} for object properties that you should use.\n\t   *\n\t   * @param {boolean} [manualCleanup=true] if set to false, the TextTrack will be\n\t   *\n\t   * @return {HTMLTrackElement}\n\t   *         the HTMLTrackElement that was created and added\n\t   *         to the HTMLTrackElementList and the remote\n\t   *         TextTrackList\n\t   *\n\t   * @deprecated The default value of the \"manualCleanup\" parameter will default\n\t   *             to \"false\" in upcoming versions of Video.js\n\t   */Player.prototype.addRemoteTextTrack=function addRemoteTextTrack(options,manualCleanup){if(this.tech_){return this.tech_.addRemoteTextTrack(options,manualCleanup);}};/**\n\t   * Remove a remote {@link TextTrack} from the respective\n\t   * {@link TextTrackList} and {@link HTMLTrackElementList}.\n\t   *\n\t   * @param {Object} track\n\t   *        Remote {@link TextTrack} to remove\n\t   *\n\t   * @return {undefined}\n\t   *         does not return anything\n\t   */Player.prototype.removeRemoteTextTrack=function removeRemoteTextTrack(){var _ref3=arguments.length>0&&arguments[0]!==undefined?arguments[0]:{},_ref3$track=_ref3.track,track=_ref3$track===undefined?arguments[0]:_ref3$track;// destructure the input into an object with a track argument, defaulting to arguments[0]\n\t// default the whole argument to an empty object if nothing was passed in\n\tif(this.tech_){return this.tech_.removeRemoteTextTrack(track);}};/**\n\t   * Get video width\n\t   *\n\t   * @return {number}\n\t   *         current video width\n\t   */Player.prototype.videoWidth=function videoWidth(){return this.tech_&&this.tech_.videoWidth&&this.tech_.videoWidth()||0;};/**\n\t   * Get video height\n\t   *\n\t   * @return {number}\n\t   *         current video height\n\t   */Player.prototype.videoHeight=function videoHeight(){return this.tech_&&this.tech_.videoHeight&&this.tech_.videoHeight()||0;};// Methods to add support for\n\t// initialTime: function() { return this.techCall_('initialTime'); },\n\t// startOffsetTime: function() { return this.techCall_('startOffsetTime'); },\n\t// played: function() { return this.techCall_('played'); },\n\t// defaultPlaybackRate: function() { return this.techCall_('defaultPlaybackRate'); },\n\t// defaultMuted: function() { return this.techCall_('defaultMuted'); }\n\t/**\n\t   * The player's language code\n\t   * NOTE: The language should be set in the player options if you want the\n\t   * the controls to be built with a specific language. Changing the lanugage\n\t   * later will not update controls text.\n\t   *\n\t   * @param {string} [code]\n\t   *        the language code to set the player to\n\t   *\n\t   * @return {string|Player}\n\t   *         - The current language code when getting\n\t   *         - A reference to the player when setting\n\t   */Player.prototype.language=function language(code){if(code===undefined){return this.language_;}this.language_=String(code).toLowerCase();return this;};/**\n\t   * Get the player's language dictionary\n\t   * Merge every time, because a newly added plugin might call videojs.addLanguage() at any time\n\t   * Languages specified directly in the player options have precedence\n\t   *\n\t   * @return {Array}\n\t   *         An array of of supported languages\n\t   */Player.prototype.languages=function languages(){return(0,_mergeOptions2['default'])(Player.prototype.options_.languages,this.languages_);};/**\n\t   * returns a JavaScript object reperesenting the current track\n\t   * information. **DOES not return it as JSON**\n\t   *\n\t   * @return {Object}\n\t   *         Object representing the current of track info\n\t   */Player.prototype.toJSON=function toJSON(){var options=(0,_mergeOptions2['default'])(this.options_);var tracks=options.tracks;options.tracks=[];for(var i=0;i<tracks.length;i++){var track=tracks[i];// deep merge tracks and null out player so no circular references\n\ttrack=(0,_mergeOptions2['default'])(track);track.player=undefined;options.tracks[i]=track;}return options;};/**\n\t   * Creates a simple modal dialog (an instance of the {@link ModalDialog}\n\t   * component) that immediately overlays the player with arbitrary\n\t   * content and removes itself when closed.\n\t   *\n\t   * @param {string|Function|Element|Array|null} content\n\t   *        Same as {@link ModalDialog#content}'s param of the same name.\n\t   *        The most straight-forward usage is to provide a string or DOM\n\t   *        element.\n\t   *\n\t   * @param {Object} [options]\n\t   *        Extra options which will be passed on to the {@link ModalDialog}.\n\t   *\n\t   * @return {ModalDialog}\n\t   *         the {@link ModalDialog} that was created\n\t   */Player.prototype.createModal=function createModal(content,options){var _this5=this;options=options||{};options.content=content||'';var modal=new _modalDialog2['default'](this,options);this.addChild(modal);modal.on('dispose',function(){_this5.removeChild(modal);});return modal.open();};/**\n\t   * Gets tag settings\n\t   *\n\t   * @param {Element} tag\n\t   *        The player tag\n\t   *\n\t   * @return {Object}\n\t   *         An object containing all of the settings\n\t   *         for a player tag\n\t   */Player.getTagSettings=function getTagSettings(tag){var baseOptions={sources:[],tracks:[]};var tagOptions=Dom.getElAttributes(tag);var dataSetup=tagOptions['data-setup'];if(Dom.hasElClass(tag,'vjs-fluid')){tagOptions.fluid=true;}// Check if data-setup attr exists.\n\tif(dataSetup!==null){// Parse options JSON\n\t// If empty string, make it a parsable json object.\n\tvar _safeParseTuple=(0,_tuple2['default'])(dataSetup||'{}'),err=_safeParseTuple[0],data=_safeParseTuple[1];if(err){_log2['default'].error(err);}(0,_obj.assign)(tagOptions,data);}(0,_obj.assign)(baseOptions,tagOptions);// Get tag children settings\n\tif(tag.hasChildNodes()){var children=tag.childNodes;for(var i=0,j=children.length;i<j;i++){var child=children[i];// Change case needed: http://ejohn.org/blog/nodename-case-sensitivity/\n\tvar childName=child.nodeName.toLowerCase();if(childName==='source'){baseOptions.sources.push(Dom.getElAttributes(child));}else if(childName==='track'){baseOptions.tracks.push(Dom.getElAttributes(child));}}}return baseOptions;};/**\n\t   * Determine wether or not flexbox is supported\n\t   *\n\t   * @return {boolean}\n\t   *         - true if flexbox is supported\n\t   *         - false if flexbox is not supported\n\t   */Player.prototype.flexNotSupported_=function flexNotSupported_(){var elem=_document2['default'].createElement('i');// Note: We don't actually use flexBasis (or flexOrder), but it's one of the more\n\t// common flex features that we can rely on when checking for flex support.\n\treturn!('flexBasis'in elem.style||'webkitFlexBasis'in elem.style||'mozFlexBasis'in elem.style||'msFlexBasis'in elem.style||// IE10-specific (2012 flex spec)\n\t'msFlexOrder'in elem.style);};return Player;}(_component2['default']);/**\n\t * Global player list\n\t *\n\t * @type {Object}\n\t */Player.players={};var navigator=_window2['default'].navigator;/*\n\t * Player instance options, surfaced using options\n\t * options = Player.prototype.options_\n\t * Make changes in options, not here.\n\t *\n\t * @type {Object}\n\t * @private\n\t */Player.prototype.options_={// Default order of fallback technology\n\ttechOrder:['html5','flash'],// techOrder: ['flash','html5'],\n\thtml5:{},flash:{},// defaultVolume: 0.85,\n\tdefaultVolume:0.00,// default inactivity timeout\n\tinactivityTimeout:2000,// default playback rates\n\tplaybackRates:[],// Add playback rate selection by adding rates\n\t// 'playbackRates': [0.5, 1, 1.5, 2],\n\t// Included control sets\n\tchildren:['mediaLoader','posterImage','textTrackDisplay','loadingSpinner','bigPlayButton','controlBar','errorDisplay','textTrackSettings'],language:navigator&&(navigator.languages&&navigator.languages[0]||navigator.userLanguage||navigator.language)||'en',// locales and their language translations\n\tlanguages:{},// Default message to show when a video cannot be played.\n\tnotSupportedMessage:'No compatible source was found for this media.'};[/**\n\t   * Returns whether or not the player is in the \"ended\" state.\n\t   *\n\t   * @return {Boolean} True if the player is in the ended state, false if not.\n\t   * @method Player.prototype.ended\n\t   */'ended',/**\n\t   * Returns whether or not the player is in the \"seeking\" state.\n\t   *\n\t   * @return {Boolean} True if the player is in the seeking state, false if not.\n\t   * @method Player.prototype.seeking\n\t   */'seeking',/**\n\t   * Returns the TimeRanges of the media that are currently available\n\t   * for seeking to.\n\t   *\n\t   * @return {TimeRanges} the seekable intervals of the media timeline\n\t   * @method Player.prototype.seekable\n\t   */'seekable',/**\n\t   * Returns the current state of network activity for the element, from\n\t   * the codes in the list below.\n\t   * - NETWORK_EMPTY (numeric value 0)\n\t   *   The element has not yet been initialised. All attributes are in\n\t   *   their initial states.\n\t   * - NETWORK_IDLE (numeric value 1)\n\t   *   The element's resource selection algorithm is active and has\n\t   *   selected a resource, but it is not actually using the network at\n\t   *   this time.\n\t   * - NETWORK_LOADING (numeric value 2)\n\t   *   The user agent is actively trying to download data.\n\t   * - NETWORK_NO_SOURCE (numeric value 3)\n\t   *   The element's resource selection algorithm is active, but it has\n\t   *   not yet found a resource to use.\n\t   *\n\t   * @see https://html.spec.whatwg.org/multipage/embedded-content.html#network-states\n\t   * @return {number} the current network activity state\n\t   * @method Player.prototype.networkState\n\t   */'networkState',/**\n\t   * Returns a value that expresses the current state of the element\n\t   * with respect to rendering the current playback position, from the\n\t   * codes in the list below.\n\t   * - HAVE_NOTHING (numeric value 0)\n\t   *   No information regarding the media resource is available.\n\t   * - HAVE_METADATA (numeric value 1)\n\t   *   Enough of the resource has been obtained that the duration of the\n\t   *   resource is available.\n\t   * - HAVE_CURRENT_DATA (numeric value 2)\n\t   *   Data for the immediate current playback position is available.\n\t   * - HAVE_FUTURE_DATA (numeric value 3)\n\t   *   Data for the immediate current playback position is available, as\n\t   *   well as enough data for the user agent to advance the current\n\t   *   playback position in the direction of playback.\n\t   * - HAVE_ENOUGH_DATA (numeric value 4)\n\t   *   The user agent estimates that enough data is available for\n\t   *   playback to proceed uninterrupted.\n\t   *\n\t   * @see https://html.spec.whatwg.org/multipage/embedded-content.html#dom-media-readystate\n\t   * @return {number} the current playback rendering state\n\t   * @method Player.prototype.readyState\n\t   */'readyState'].forEach(function(fn){Player.prototype[fn]=function(){return this.techGet_(fn);};});TECH_EVENTS_RETRIGGER.forEach(function(event){Player.prototype['handleTech'+(0,_toTitleCase2['default'])(event)+'_']=function(){return this.trigger(event);};});/**\n\t * Fired when the player has initial duration and dimension information\n\t *\n\t * @event Player#loadedmetadata\n\t * @type {EventTarget~Event}\n\t *//**\n\t * Fired when the player has downloaded data at the current playback position\n\t *\n\t * @event Player#loadeddata\n\t * @type {EventTarget~Event}\n\t *//**\n\t * Fired when the current playback position has changed *\n\t * During playback this is fired every 15-250 milliseconds, depending on the\n\t * playback technology in use.\n\t *\n\t * @event Player#timeupdate\n\t * @type {EventTarget~Event}\n\t *//**\n\t * Fired when the volume changes\n\t *\n\t * @event Player#volumechange\n\t * @type {EventTarget~Event}\n\t */_component2['default'].registerComponent('Player',Player);exports['default']=Player;\n\n\n/***/ },\n/* 22 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\texports.__esModule = true;\n\texports.createTimeRange = undefined;\n\texports.createTimeRanges = createTimeRanges;\n\t\n\tvar _log = __webpack_require__(11);\n\t\n\tvar _log2 = _interopRequireDefault(_log);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\t\n\t/**\n\t * Returns the time for the specified index at the start or end\n\t * of a TimeRange object.\n\t *\n\t * @function time-ranges:indexFunction\n\t *\n\t * @param {number} [index=0]\n\t *        The range number to return the time for.\n\t *\n\t * @return {number}\n\t *         The time that offset at the specified index.\n\t *\n\t * @depricated index must be set to a value, in the future this will throw an error.\n\t */\n\t\n\t/**\n\t * An object that contains ranges of time for various reasons.\n\t *\n\t * @typedef {Object} TimeRange\n\t *\n\t * @property {number} length\n\t *           The number of time ranges represented by this Object\n\t *\n\t * @property {time-ranges:indexFunction} start\n\t *           Returns the time offset at which a specified time range begins.\n\t *\n\t * @property {time-ranges:indexFunction} end\n\t *           Returns the time offset at which a specified time range begins.\n\t *\n\t * @see https://developer.mozilla.org/en-US/docs/Web/API/TimeRanges\n\t */\n\t\n\t/**\n\t * Check if any of the time ranges are over the maximum index.\n\t *\n\t * @param {string} fnName\n\t *        The function name to use for logging\n\t *\n\t * @param {number} index\n\t *        The index to check\n\t *\n\t * @param {number} maxIndex\n\t *        The maximum possible index\n\t *\n\t * @throws {Error} if the timeRanges provided are over the maxIndex\n\t */\n\tfunction rangeCheck(fnName, index, maxIndex) {\n\t  if (index < 0 || index > maxIndex) {\n\t    throw new Error('Failed to execute \\'' + fnName + '\\' on \\'TimeRanges\\': The index provided (' + index + ') is greater than or equal to the maximum bound (' + maxIndex + ').');\n\t  }\n\t}\n\t\n\t/**\n\t * Check if any of the time ranges are over the maximum index.\n\t *\n\t * @param {string} fnName\n\t *        The function name to use for logging\n\t *\n\t * @param {string} valueIndex\n\t *        The proprety that should be used to get the time. should be 'start' or 'end'\n\t *\n\t * @param {Array} ranges\n\t *        An array of time ranges\n\t *\n\t * @param {Array} [rangeIndex=0]\n\t *        The index to start the search at\n\t *\n\t * @return {number}\n\t *         The time that offset at the specified index.\n\t *\n\t *\n\t * @depricated rangeIndex must be set to a value, in the future this will throw an error.\n\t * @throws {Error} if rangeIndex is more than the length of ranges\n\t */\n\t/**\n\t * @file time-ranges.js\n\t * @module time-ranges\n\t */\n\tfunction getRange(fnName, valueIndex, ranges, rangeIndex) {\n\t  if (rangeIndex === undefined) {\n\t    _log2['default'].warn('DEPRECATED: Function \\'' + fnName + '\\' on \\'TimeRanges\\' called without an index argument.');\n\t    rangeIndex = 0;\n\t  }\n\t  rangeCheck(fnName, rangeIndex, ranges.length - 1);\n\t  return ranges[rangeIndex][valueIndex];\n\t}\n\t\n\t/**\n\t * Create a time range object givent ranges of time.\n\t *\n\t * @param {Array} [ranges]\n\t *        An array of time ranges.\n\t */\n\tfunction createTimeRangesObj(ranges) {\n\t  if (ranges === undefined || ranges.length === 0) {\n\t    return {\n\t      length: 0,\n\t      start: function start() {\n\t        throw new Error('This TimeRanges object is empty');\n\t      },\n\t      end: function end() {\n\t        throw new Error('This TimeRanges object is empty');\n\t      }\n\t    };\n\t  }\n\t  return {\n\t    length: ranges.length,\n\t    start: getRange.bind(null, 'start', 0, ranges),\n\t    end: getRange.bind(null, 'end', 1, ranges)\n\t  };\n\t}\n\t\n\t/**\n\t * Should create a fake `TimeRange` object which mimics an HTML5 time range instance.\n\t *\n\t * @param {number|Array} start\n\t *        The start of a single range or an array of ranges\n\t *\n\t * @param {number} end\n\t *        The end of a single range.\n\t *\n\t * @private\n\t */\n\tfunction createTimeRanges(start, end) {\n\t  if (Array.isArray(start)) {\n\t    return createTimeRangesObj(start);\n\t  } else if (start === undefined || end === undefined) {\n\t    return createTimeRangesObj();\n\t  }\n\t  return createTimeRangesObj([[start, end]]);\n\t}\n\t\n\texports.createTimeRange = createTimeRanges;\n\n\n/***/ },\n/* 23 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\texports.__esModule = true;\n\texports.bufferedPercent = bufferedPercent;\n\t\n\tvar _timeRanges = __webpack_require__(22);\n\t\n\t/**\n\t * Compute the percentage of the media that has been buffered.\n\t *\n\t * @param {TimeRange} buffered\n\t *        The current `TimeRange` object representing buffered time ranges\n\t *\n\t * @param {number} duration\n\t *        Total duration of the media\n\t *\n\t * @return {number}\n\t *         Percent buffered of the total duration in decimal form.\n\t */\n\tfunction bufferedPercent(buffered, duration) {\n\t  var bufferedDuration = 0;\n\t  var start = void 0;\n\t  var end = void 0;\n\t\n\t  if (!duration) {\n\t    return 0;\n\t  }\n\t\n\t  if (!buffered || !buffered.length) {\n\t    buffered = (0, _timeRanges.createTimeRange)(0, 0);\n\t  }\n\t\n\t  for (var i = 0; i < buffered.length; i++) {\n\t    start = buffered.start(i);\n\t    end = buffered.end(i);\n\t\n\t    // buffered end can be bigger than duration by a very small fraction\n\t    if (end > duration) {\n\t      end = duration;\n\t    }\n\t\n\t    bufferedDuration += end - start;\n\t  }\n\t\n\t  return bufferedDuration / duration;\n\t} /**\n\t   * @file buffer.js\n\t   * @module buffer\n\t   */\n\n\n/***/ },\n/* 24 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\texports.__esModule = true;\n\t\n\tvar _document = __webpack_require__(5);\n\t\n\tvar _document2 = _interopRequireDefault(_document);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\t\n\t/**\n\t * Store the browser-specific methods for the fullscreen API.\n\t *\n\t * @type {Object}\n\t * @see [Specification]{@link https://fullscreen.spec.whatwg.org}\n\t * @see [Map Approach From Screenfull.js]{@link https://github.com/sindresorhus/screenfull.js}\n\t */\n\tvar FullscreenApi = {};\n\t\n\t// browser API methods\n\t/**\n\t * @file fullscreen-api.js\n\t * @module fullscreen-api\n\t * @private\n\t */\n\tvar apiMap = [['requestFullscreen', 'exitFullscreen', 'fullscreenElement', 'fullscreenEnabled', 'fullscreenchange', 'fullscreenerror'],\n\t// WebKit\n\t['webkitRequestFullscreen', 'webkitExitFullscreen', 'webkitFullscreenElement', 'webkitFullscreenEnabled', 'webkitfullscreenchange', 'webkitfullscreenerror'],\n\t// Old WebKit (Safari 5.1)\n\t['webkitRequestFullScreen', 'webkitCancelFullScreen', 'webkitCurrentFullScreenElement', 'webkitCancelFullScreen', 'webkitfullscreenchange', 'webkitfullscreenerror'],\n\t// Mozilla\n\t['mozRequestFullScreen', 'mozCancelFullScreen', 'mozFullScreenElement', 'mozFullScreenEnabled', 'mozfullscreenchange', 'mozfullscreenerror'],\n\t// Microsoft\n\t['msRequestFullscreen', 'msExitFullscreen', 'msFullscreenElement', 'msFullscreenEnabled', 'MSFullscreenChange', 'MSFullscreenError']];\n\t\n\tvar specApi = apiMap[0];\n\tvar browserApi = void 0;\n\t\n\t// determine the supported set of functions\n\tfor (var i = 0; i < apiMap.length; i++) {\n\t  // check for exitFullscreen function\n\t  if (apiMap[i][1] in _document2['default']) {\n\t    browserApi = apiMap[i];\n\t    break;\n\t  }\n\t}\n\t\n\t// map the browser API names to the spec API names\n\tif (browserApi) {\n\t  for (var _i = 0; _i < browserApi.length; _i++) {\n\t    FullscreenApi[specApi[_i]] = browserApi[_i];\n\t  }\n\t}\n\t\n\texports['default'] = FullscreenApi;\n\n\n/***/ },\n/* 25 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\texports.__esModule = true;\n\t\n\tvar _obj = __webpack_require__(13);\n\t\n\t/**\n\t * A Custom `MediaError` class which mimics the standard HTML5 `MediaError` class.\n\t *\n\t * @param {number|string|Object|MediaError} value\n\t *        This can be of multiple types:\n\t *        - number: should be a standard error code\n\t *        - string: an error message (the code will be 0)\n\t *        - Object: arbitrary properties\n\t *        - `MediaError` (native): used to populate a video.js `MediaError` object\n\t *        - `MediaError` (video.js): will return itself if it's already a\n\t *          video.js `MediaError` object.\n\t *\n\t * @see [MediaError Spec]{@link https://dev.w3.org/html5/spec-author-view/video.html#mediaerror}\n\t * @see [Encrypted MediaError Spec]{@link https://www.w3.org/TR/2013/WD-encrypted-media-20130510/#error-codes}\n\t *\n\t * @class MediaError\n\t */\n\tfunction MediaError(value) {\n\t\n\t  // Allow redundant calls to this constructor to avoid having `instanceof`\n\t  // checks peppered around the code.\n\t  if (value instanceof MediaError) {\n\t    return value;\n\t  }\n\t\n\t  if (typeof value === 'number') {\n\t    this.code = value;\n\t  } else if (typeof value === 'string') {\n\t    // default code is zero, so this is a custom error\n\t    this.message = value;\n\t  } else if ((0, _obj.isObject)(value)) {\n\t\n\t    // We assign the `code` property manually because native `MediaError` objects\n\t    // do not expose it as an own/enumerable property of the object.\n\t    if (typeof value.code === 'number') {\n\t      this.code = value.code;\n\t    }\n\t\n\t    (0, _obj.assign)(this, value);\n\t  }\n\t\n\t  if (!this.message) {\n\t    this.message = MediaError.defaultMessages[this.code] || '';\n\t  }\n\t}\n\t\n\t/**\n\t * The error code that refers two one of the defined `MediaError` types\n\t *\n\t * @type {Number}\n\t */\n\t/**\n\t * @file media-error.js\n\t */\n\tMediaError.prototype.code = 0;\n\t\n\t/**\n\t * An optional message that to show with the error. Message is not part of the HTML5\n\t * video spec but allows for more informative custom errors.\n\t *\n\t * @type {String}\n\t */\n\tMediaError.prototype.message = '';\n\t\n\t/**\n\t * An optional status code that can be set by plugins to allow even more detail about\n\t * the error. For example a plugin might provide a specific HTTP status code and an\n\t * error message for that code. Then when the plugin gets that error this class will\n\t * know how to display an error message for it. This allows a custom message to show\n\t * up on the `Player` error overlay.\n\t *\n\t * @type {Array}\n\t */\n\tMediaError.prototype.status = null;\n\t\n\t/**\n\t * Errors indexed by the W3C standard. The order **CANNOT CHANGE**! See the\n\t * specification listed under {@link MediaError} for more information.\n\t *\n\t * @enum {array}\n\t * @readonly\n\t * @property {string} 0 - MEDIA_ERR_CUSTOM\n\t * @property {string} 1 - MEDIA_ERR_CUSTOM\n\t * @property {string} 2 - MEDIA_ERR_ABORTED\n\t * @property {string} 3 - MEDIA_ERR_NETWORK\n\t * @property {string} 4 - MEDIA_ERR_SRC_NOT_SUPPORTED\n\t * @property {string} 5 - MEDIA_ERR_ENCRYPTED\n\t */\n\tMediaError.errorTypes = ['MEDIA_ERR_CUSTOM', 'MEDIA_ERR_ABORTED', 'MEDIA_ERR_NETWORK', 'MEDIA_ERR_DECODE', 'MEDIA_ERR_SRC_NOT_SUPPORTED', 'MEDIA_ERR_ENCRYPTED'];\n\t\n\t/**\n\t * The default `MediaError` messages based on the {@link MediaError.errorTypes}.\n\t *\n\t * @type {Array}\n\t * @constant\n\t */\n\tMediaError.defaultMessages = {\n\t  1: 'You aborted the media playback',\n\t  2: 'A network error caused the media download to fail part-way.',\n\t  3: 'The media playback was aborted due to a corruption problem or because the media used features your browser did not support.',\n\t  4: 'The media could not be loaded, either because the server or network failed or because the format is not supported.',\n\t  5: 'The media is encrypted and we do not have the keys to decrypt it.'\n\t};\n\t\n\t// Add types as properties on MediaError\n\t// e.g. MediaError.MEDIA_ERR_SRC_NOT_SUPPORTED = 4;\n\tfor (var errNum = 0; errNum < MediaError.errorTypes.length; errNum++) {\n\t  MediaError[MediaError.errorTypes[errNum]] = errNum;\n\t  // values should be accessible on both the class and instance\n\t  MediaError.prototype[MediaError.errorTypes[errNum]] = errNum;\n\t}\n\t\n\t// jsdocs for instance/static members added above\n\t// instance methods use `#` and static methods use `.`\n\t/**\n\t * W3C error code for any custom error.\n\t *\n\t * @member MediaError#MEDIA_ERR_CUSTOM\n\t * @constant {number}\n\t * @default 0\n\t */\n\t/**\n\t * W3C error code for any custom error.\n\t *\n\t * @member MediaError.MEDIA_ERR_CUSTOM\n\t * @constant {number}\n\t * @default 0\n\t */\n\t\n\t/**\n\t * W3C error code for media error aborted.\n\t *\n\t * @member MediaError#MEDIA_ERR_ABORTED\n\t * @constant {number}\n\t * @default 1\n\t */\n\t/**\n\t * W3C error code for media error aborted.\n\t *\n\t * @member MediaError.MEDIA_ERR_ABORTED\n\t * @constant {number}\n\t * @default 1\n\t */\n\t\n\t/**\n\t * W3C error code for any network error.\n\t *\n\t * @member MediaError#MEDIA_ERR_NETWORK\n\t * @constant {number}\n\t * @default 2\n\t */\n\t/**\n\t * W3C error code for any network error.\n\t *\n\t * @member MediaError.MEDIA_ERR_NETWORK\n\t * @constant {number}\n\t * @default 2\n\t */\n\t\n\t/**\n\t * W3C error code for any decoding error.\n\t *\n\t * @member MediaError#MEDIA_ERR_DECODE\n\t * @constant {number}\n\t * @default 3\n\t */\n\t/**\n\t * W3C error code for any decoding error.\n\t *\n\t * @member MediaError.MEDIA_ERR_DECODE\n\t * @constant {number}\n\t * @default 3\n\t */\n\t\n\t/**\n\t * W3C error code for any time that a source is not supported.\n\t *\n\t * @member MediaError#MEDIA_ERR_SRC_NOT_SUPPORTED\n\t * @constant {number}\n\t * @default 4\n\t */\n\t/**\n\t * W3C error code for any time that a source is not supported.\n\t *\n\t * @member MediaError.MEDIA_ERR_SRC_NOT_SUPPORTED\n\t * @constant {number}\n\t * @default 4\n\t */\n\t\n\t/**\n\t * W3C error code for any time that a source is encrypted.\n\t *\n\t * @member MediaError#MEDIA_ERR_ENCRYPTED\n\t * @constant {number}\n\t * @default 5\n\t */\n\t/**\n\t * W3C error code for any time that a source is encrypted.\n\t *\n\t * @member MediaError.MEDIA_ERR_ENCRYPTED\n\t * @constant {number}\n\t * @default 5\n\t */\n\t\n\texports['default'] = MediaError;\n\n\n/***/ },\n/* 26 */\n/***/ function(module, exports) {\n\n\tmodule.exports = SafeParseTuple\n\t\n\tfunction SafeParseTuple(obj, reviver) {\n\t    var json\n\t    var error = null\n\t\n\t    try {\n\t        json = JSON.parse(obj, reviver)\n\t    } catch (err) {\n\t        error = err\n\t    }\n\t\n\t    return [error, json]\n\t}\n\n\n/***/ },\n/* 27 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\texports.__esModule = true;\n\t/**\n\t * Utilities for capturing text track state and re-creating tracks\n\t * based on a capture.\n\t *\n\t * @file text-track-list-converter.js\n\t * @module text-track-list-converter\n\t */\n\t\n\t/**\n\t * Examine a single {@link TextTrack} and return a JSON-compatible javascript object that\n\t * represents the {@link TextTrack}'s state.\n\t *\n\t * @param {TextTrack} track\n\t *        The text track to query.\n\t *\n\t * @return {Object}\n\t *         A serializable javascript representation of the TextTrack.\n\t * @private\n\t */\n\tvar trackToJson_ = function trackToJson_(track) {\n\t  var ret = ['kind', 'label', 'language', 'id', 'inBandMetadataTrackDispatchType', 'mode', 'src'].reduce(function (acc, prop, i) {\n\t\n\t    if (track[prop]) {\n\t      acc[prop] = track[prop];\n\t    }\n\t\n\t    return acc;\n\t  }, {\n\t    cues: track.cues && Array.prototype.map.call(track.cues, function (cue) {\n\t      return {\n\t        startTime: cue.startTime,\n\t        endTime: cue.endTime,\n\t        text: cue.text,\n\t        id: cue.id\n\t      };\n\t    })\n\t  });\n\t\n\t  return ret;\n\t};\n\t\n\t/**\n\t * Examine a {@link Tech} and return a JSON-compatible javascript array that represents the\n\t * state of all {@link TextTrack}s currently configured. The return array is compatible with\n\t * {@link text-track-list-converter:jsonToTextTracks}.\n\t *\n\t * @param {Tech} tech\n\t *        The tech object to query\n\t *\n\t * @return {Array}\n\t *         A serializable javascript representation of the {@link Tech}s\n\t *         {@link TextTrackList}.\n\t */\n\tvar textTracksToJson = function textTracksToJson(tech) {\n\t\n\t  var trackEls = tech.$$('track');\n\t\n\t  var trackObjs = Array.prototype.map.call(trackEls, function (t) {\n\t    return t.track;\n\t  });\n\t  var tracks = Array.prototype.map.call(trackEls, function (trackEl) {\n\t    var json = trackToJson_(trackEl.track);\n\t\n\t    if (trackEl.src) {\n\t      json.src = trackEl.src;\n\t    }\n\t    return json;\n\t  });\n\t\n\t  return tracks.concat(Array.prototype.filter.call(tech.textTracks(), function (track) {\n\t    return trackObjs.indexOf(track) === -1;\n\t  }).map(trackToJson_));\n\t};\n\t\n\t/**\n\t * Create a set of remote {@link TextTrack}s on a {@link Tech} based on an array of javascript\n\t * object {@link TextTrack} representations.\n\t *\n\t * @param {Array} json\n\t *        An array of `TextTrack` representation objects, like those that would be\n\t *        produced by `textTracksToJson`.\n\t *\n\t * @param {Tech} tech\n\t *        The `Tech` to create the `TextTrack`s on.\n\t */\n\tvar jsonToTextTracks = function jsonToTextTracks(json, tech) {\n\t  json.forEach(function (track) {\n\t    var addedTrack = tech.addRemoteTextTrack(track).track;\n\t\n\t    if (!track.src && track.cues) {\n\t      track.cues.forEach(function (cue) {\n\t        return addedTrack.addCue(cue);\n\t      });\n\t    }\n\t  });\n\t\n\t  return tech.textTracks();\n\t};\n\t\n\texports['default'] = { textTracksToJson: textTracksToJson, jsonToTextTracks: jsonToTextTracks, trackToJson_: trackToJson_ };\n\n\n/***/ },\n/* 28 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\texports.__esModule = true;\n\t\n\tvar _dom = __webpack_require__(9);\n\t\n\tvar Dom = _interopRequireWildcard(_dom);\n\t\n\tvar _fn = __webpack_require__(17);\n\t\n\tvar Fn = _interopRequireWildcard(_fn);\n\t\n\tvar _component = __webpack_require__(16);\n\t\n\tvar _component2 = _interopRequireDefault(_component);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\t\n\tfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj['default'] = obj; return newObj; } }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /**\n\t                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * @file modal-dialog.js\n\t                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                */\n\t\n\t\n\tvar MODAL_CLASS_NAME = 'vjs-modal-dialog';\n\tvar ESC = 27;\n\t\n\t/**\n\t * The `ModalDialog` displays over the video and its controls, which blocks\n\t * interaction with the player until it is closed.\n\t *\n\t * Modal dialogs include a \"Close\" button and will close when that button\n\t * is activated - or when ESC is pressed anywhere.\n\t *\n\t * @extends Component\n\t */\n\t\n\tvar ModalDialog = function (_Component) {\n\t  _inherits(ModalDialog, _Component);\n\t\n\t  /**\n\t   * Create an instance of this class.\n\t   *\n\t   * @param {Player} player\n\t   *        The `Player` that this class should be attached to.\n\t   *\n\t   * @param {Object} [options]\n\t   *        The key/value store of player options.\n\t   *\n\t   * @param {Mixed} [options.content=undefined]\n\t   *        Provide customized content for this modal.\n\t   *\n\t   * @param {string} [options.description]\n\t   *        A text description for the modal, primarily for accessibility.\n\t   *\n\t   * @param {boolean} [options.fillAlways=false]\n\t   *        Normally, modals are automatically filled only the first time\n\t   *        they open. This tells the modal to refresh its content\n\t   *        every time it opens.\n\t   *\n\t   * @param {string} [options.label]\n\t   *        A text label for the modal, primarily for accessibility.\n\t   *\n\t   * @param {boolean} [options.temporary=true]\n\t   *        If `true`, the modal can only be opened once; it will be\n\t   *        disposed as soon as it's closed.\n\t   *\n\t   * @param {boolean} [options.uncloseable=false]\n\t   *        If `true`, the user will not be able to close the modal\n\t   *        through the UI in the normal ways. Programmatic closing is\n\t   *        still possible.\n\t   */\n\t  function ModalDialog(player, options) {\n\t    _classCallCheck(this, ModalDialog);\n\t\n\t    var _this = _possibleConstructorReturn(this, _Component.call(this, player, options));\n\t\n\t    _this.opened_ = _this.hasBeenOpened_ = _this.hasBeenFilled_ = false;\n\t\n\t    _this.closeable(!_this.options_.uncloseable);\n\t    _this.content(_this.options_.content);\n\t\n\t    // Make sure the contentEl is defined AFTER any children are initialized\n\t    // because we only want the contents of the modal in the contentEl\n\t    // (not the UI elements like the close button).\n\t    _this.contentEl_ = Dom.createEl('div', {\n\t      className: MODAL_CLASS_NAME + '-content'\n\t    }, {\n\t      role: 'document'\n\t    });\n\t\n\t    _this.descEl_ = Dom.createEl('p', {\n\t      className: MODAL_CLASS_NAME + '-description vjs-offscreen',\n\t      id: _this.el().getAttribute('aria-describedby')\n\t    });\n\t\n\t    Dom.textContent(_this.descEl_, _this.description());\n\t    _this.el_.appendChild(_this.descEl_);\n\t    _this.el_.appendChild(_this.contentEl_);\n\t    return _this;\n\t  }\n\t\n\t  /**\n\t   * Create the `ModalDialog`'s DOM element\n\t   *\n\t   * @return {Element}\n\t   *         The DOM element that gets created.\n\t   */\n\t\n\t\n\t  ModalDialog.prototype.createEl = function createEl() {\n\t    return _Component.prototype.createEl.call(this, 'div', {\n\t      className: this.buildCSSClass(),\n\t      tabIndex: -1\n\t    }, {\n\t      'aria-describedby': this.id() + '_description',\n\t      'aria-hidden': 'true',\n\t      'aria-label': this.label(),\n\t      'role': 'dialog'\n\t    });\n\t  };\n\t\n\t  /**\n\t   * Builds the default DOM `className`.\n\t   *\n\t   * @return {string}\n\t   *         The DOM `className` for this object.\n\t   */\n\t\n\t\n\t  ModalDialog.prototype.buildCSSClass = function buildCSSClass() {\n\t    return MODAL_CLASS_NAME + ' vjs-hidden ' + _Component.prototype.buildCSSClass.call(this);\n\t  };\n\t\n\t  /**\n\t   * Handles `keydown` events on the document, looking for ESC, which closes\n\t   * the modal.\n\t   *\n\t   * @param {EventTarget~Event} e\n\t   *        The keypress that triggered this event.\n\t   *\n\t   * @listens keydown\n\t   */\n\t\n\t\n\t  ModalDialog.prototype.handleKeyPress = function handleKeyPress(e) {\n\t    if (e.which === ESC && this.closeable()) {\n\t      this.close();\n\t    }\n\t  };\n\t\n\t  /**\n\t   * Returns the label string for this modal. Primarily used for accessibility.\n\t   *\n\t   * @return {string}\n\t   *         the localized or raw label of this modal.\n\t   */\n\t\n\t\n\t  ModalDialog.prototype.label = function label() {\n\t    return this.options_.label || this.localize('Modal Window');\n\t  };\n\t\n\t  /**\n\t   * Returns the description string for this modal. Primarily used for\n\t   * accessibility.\n\t   *\n\t   * @return {string}\n\t   *         The localized or raw description of this modal.\n\t   */\n\t\n\t\n\t  ModalDialog.prototype.description = function description() {\n\t    var desc = this.options_.description || this.localize('This is a modal window.');\n\t\n\t    // Append a universal closeability message if the modal is closeable.\n\t    if (this.closeable()) {\n\t      desc += ' ' + this.localize('This modal can be closed by pressing the Escape key or activating the close button.');\n\t    }\n\t\n\t    return desc;\n\t  };\n\t\n\t  /**\n\t   * Opens the modal.\n\t   *\n\t   * @fires ModalDialog#beforemodalopen\n\t   * @fires ModalDialog#modalopen\n\t   *\n\t   * @return {ModalDialog}\n\t   *         Returns itself; method can be chained.\n\t   */\n\t\n\t\n\t  ModalDialog.prototype.open = function open() {\n\t    if (!this.opened_) {\n\t      var player = this.player();\n\t\n\t      /**\n\t       * Fired just before a `ModalDialog` is opened.\n\t       *\n\t       * @event ModalDialog#beforemodalopen\n\t       * @type {EventTarget~Event}\n\t       */\n\t      this.trigger('beforemodalopen');\n\t      this.opened_ = true;\n\t\n\t      // Fill content if the modal has never opened before and\n\t      // never been filled.\n\t      if (this.options_.fillAlways || !this.hasBeenOpened_ && !this.hasBeenFilled_) {\n\t        this.fill();\n\t      }\n\t\n\t      // If the player was playing, pause it and take note of its previously\n\t      // playing state.\n\t      this.wasPlaying_ = !player.paused();\n\t\n\t      if (this.wasPlaying_) {\n\t        player.pause();\n\t      }\n\t\n\t      if (this.closeable()) {\n\t        this.on(this.el_.ownerDocument, 'keydown', Fn.bind(this, this.handleKeyPress));\n\t      }\n\t\n\t      player.controls(false);\n\t      this.show();\n\t      this.el().setAttribute('aria-hidden', 'false');\n\t\n\t      /**\n\t       * Fired just after a `ModalDialog` is opened.\n\t       *\n\t       * @event ModalDialog#modalopen\n\t       * @type {EventTarget~Event}\n\t       */\n\t      this.trigger('modalopen');\n\t      this.hasBeenOpened_ = true;\n\t    }\n\t    return this;\n\t  };\n\t\n\t  /**\n\t   * If the `ModalDialog` is currently open or closed.\n\t   *\n\t   * @param  {boolean} [value]\n\t   *         If given, it will open (`true`) or close (`false`) the modal.\n\t   *\n\t   * @return {boolean}\n\t   *         the current open state of the modaldialog\n\t   */\n\t\n\t\n\t  ModalDialog.prototype.opened = function opened(value) {\n\t    if (typeof value === 'boolean') {\n\t      this[value ? 'open' : 'close']();\n\t    }\n\t    return this.opened_;\n\t  };\n\t\n\t  /**\n\t   * Closes the modal, does nothing if the `ModalDialog` is\n\t   * not open.\n\t   *\n\t   * @fires ModalDialog#beforemodalclose\n\t   * @fires ModalDialog#modalclose\n\t   *\n\t   * @return {ModalDialog}\n\t   *         Returns itself; method can be chained.\n\t   */\n\t\n\t\n\t  ModalDialog.prototype.close = function close() {\n\t    if (this.opened_) {\n\t      var player = this.player();\n\t\n\t      /**\n\t       * Fired just before a `ModalDialog` is closed.\n\t       *\n\t       * @event ModalDialog#beforemodalclose\n\t       * @type {EventTarget~Event}\n\t       */\n\t      this.trigger('beforemodalclose');\n\t      this.opened_ = false;\n\t\n\t      if (this.wasPlaying_) {\n\t        player.play();\n\t      }\n\t\n\t      if (this.closeable()) {\n\t        this.off(this.el_.ownerDocument, 'keydown', Fn.bind(this, this.handleKeyPress));\n\t      }\n\t\n\t      player.controls(true);\n\t      this.hide();\n\t      this.el().setAttribute('aria-hidden', 'true');\n\t\n\t      /**\n\t       * Fired just after a `ModalDialog` is closed.\n\t       *\n\t       * @event ModalDialog#modalclose\n\t       * @type {EventTarget~Event}\n\t       */\n\t      this.trigger('modalclose');\n\t\n\t      if (this.options_.temporary) {\n\t        this.dispose();\n\t      }\n\t    }\n\t    return this;\n\t  };\n\t\n\t  /**\n\t   * Check to see if the `ModalDialog` is closeable via the UI.\n\t   *\n\t   * @param  {boolean} [value]\n\t   *         If given as a boolean, it will set the `closeable` option.\n\t   *\n\t   * @return {boolean}\n\t   *         Returns the final value of the closable option.\n\t   */\n\t\n\t\n\t  ModalDialog.prototype.closeable = function closeable(value) {\n\t    if (typeof value === 'boolean') {\n\t      var closeable = this.closeable_ = !!value;\n\t      var close = this.getChild('closeButton');\n\t\n\t      // If this is being made closeable and has no close button, add one.\n\t      if (closeable && !close) {\n\t\n\t        // The close button should be a child of the modal - not its\n\t        // content element, so temporarily change the content element.\n\t        var temp = this.contentEl_;\n\t\n\t        this.contentEl_ = this.el_;\n\t        close = this.addChild('closeButton', { controlText: 'Close Modal Dialog' });\n\t        this.contentEl_ = temp;\n\t        this.on(close, 'close', this.close);\n\t      }\n\t\n\t      // If this is being made uncloseable and has a close button, remove it.\n\t      if (!closeable && close) {\n\t        this.off(close, 'close', this.close);\n\t        this.removeChild(close);\n\t        close.dispose();\n\t      }\n\t    }\n\t    return this.closeable_;\n\t  };\n\t\n\t  /**\n\t   * Fill the modal's content element with the modal's \"content\" option.\n\t   * The content element will be emptied before this change takes place.\n\t   *\n\t   * @return {ModalDialog}\n\t   *         Returns itself; method can be chained.\n\t   */\n\t\n\t\n\t  ModalDialog.prototype.fill = function fill() {\n\t    return this.fillWith(this.content());\n\t  };\n\t\n\t  /**\n\t   * Fill the modal's content element with arbitrary content.\n\t   * The content element will be emptied before this change takes place.\n\t   *\n\t   * @fires ModalDialog#beforemodalfill\n\t   * @fires ModalDialog#modalfill\n\t   *\n\t   * @param  {Mixed} [content]\n\t   *         The same rules apply to this as apply to the `content` option.\n\t   *\n\t   * @return {ModalDialog}\n\t   *         Returns itself; method can be chained.\n\t   */\n\t\n\t\n\t  ModalDialog.prototype.fillWith = function fillWith(content) {\n\t    var contentEl = this.contentEl();\n\t    var parentEl = contentEl.parentNode;\n\t    var nextSiblingEl = contentEl.nextSibling;\n\t\n\t    /**\n\t     * Fired just before a `ModalDialog` is filled with content.\n\t     *\n\t     * @event ModalDialog#beforemodalfill\n\t     * @type {EventTarget~Event}\n\t     */\n\t    this.trigger('beforemodalfill');\n\t    this.hasBeenFilled_ = true;\n\t\n\t    // Detach the content element from the DOM before performing\n\t    // manipulation to avoid modifying the live DOM multiple times.\n\t    parentEl.removeChild(contentEl);\n\t    this.empty();\n\t    Dom.insertContent(contentEl, content);\n\t    /**\n\t     * Fired just after a `ModalDialog` is filled with content.\n\t     *\n\t     * @event ModalDialog#modalfill\n\t     * @type {EventTarget~Event}\n\t     */\n\t    this.trigger('modalfill');\n\t\n\t    // Re-inject the re-filled content element.\n\t    if (nextSiblingEl) {\n\t      parentEl.insertBefore(contentEl, nextSiblingEl);\n\t    } else {\n\t      parentEl.appendChild(contentEl);\n\t    }\n\t\n\t    return this;\n\t  };\n\t\n\t  /**\n\t   * Empties the content element. This happens anytime the modal is filled.\n\t   *\n\t   * @fires ModalDialog#beforemodalempty\n\t   * @fires ModalDialog#modalempty\n\t   *\n\t   * @return {ModalDialog}\n\t   *         Returns itself; method can be chained.\n\t   */\n\t\n\t\n\t  ModalDialog.prototype.empty = function empty() {\n\t    /**\n\t     * Fired just before a `ModalDialog` is emptied.\n\t     *\n\t     * @event ModalDialog#beforemodalempty\n\t     * @type {EventTarget~Event}\n\t     */\n\t    this.trigger('beforemodalempty');\n\t    Dom.emptyEl(this.contentEl());\n\t\n\t    /**\n\t     * Fired just after a `ModalDialog` is emptied.\n\t     *\n\t     * @event ModalDialog#modalempty\n\t     * @type {EventTarget~Event}\n\t     */\n\t    this.trigger('modalempty');\n\t    return this;\n\t  };\n\t\n\t  /**\n\t   * Gets or sets the modal content, which gets normalized before being\n\t   * rendered into the DOM.\n\t   *\n\t   * This does not update the DOM or fill the modal, but it is called during\n\t   * that process.\n\t   *\n\t   * @param  {Mixed} [value]\n\t   *         If defined, sets the internal content value to be used on the\n\t   *         next call(s) to `fill`. This value is normalized before being\n\t   *         inserted. To \"clear\" the internal content value, pass `null`.\n\t   *\n\t   * @return {Mixed}\n\t   *         The current content of the modal dialog\n\t   */\n\t\n\t\n\t  ModalDialog.prototype.content = function content(value) {\n\t    if (typeof value !== 'undefined') {\n\t      this.content_ = value;\n\t    }\n\t    return this.content_;\n\t  };\n\t\n\t  return ModalDialog;\n\t}(_component2['default']);\n\t\n\t/**\n\t * Default options for `ModalDialog` default options.\n\t *\n\t * @type {Object}\n\t * @private\n\t */\n\t\n\t\n\tModalDialog.prototype.options_ = {\n\t  temporary: true\n\t};\n\t\n\t_component2['default'].registerComponent('ModalDialog', ModalDialog);\n\texports['default'] = ModalDialog;\n\n\n/***/ },\n/* 29 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\texports.__esModule = true;\n\t\n\tvar _component = __webpack_require__(16);\n\t\n\tvar _component2 = _interopRequireDefault(_component);\n\t\n\tvar _htmlTrackElement = __webpack_require__(30);\n\t\n\tvar _htmlTrackElement2 = _interopRequireDefault(_htmlTrackElement);\n\t\n\tvar _htmlTrackElementList = __webpack_require__(43);\n\t\n\tvar _htmlTrackElementList2 = _interopRequireDefault(_htmlTrackElementList);\n\t\n\tvar _mergeOptions = __webpack_require__(19);\n\t\n\tvar _mergeOptions2 = _interopRequireDefault(_mergeOptions);\n\t\n\tvar _textTrack = __webpack_require__(31);\n\t\n\tvar _textTrack2 = _interopRequireDefault(_textTrack);\n\t\n\tvar _textTrackList = __webpack_require__(44);\n\t\n\tvar _textTrackList2 = _interopRequireDefault(_textTrackList);\n\t\n\tvar _videoTrackList = __webpack_require__(46);\n\t\n\tvar _videoTrackList2 = _interopRequireDefault(_videoTrackList);\n\t\n\tvar _audioTrackList = __webpack_require__(47);\n\t\n\tvar _audioTrackList2 = _interopRequireDefault(_audioTrackList);\n\t\n\tvar _fn = __webpack_require__(17);\n\t\n\tvar Fn = _interopRequireWildcard(_fn);\n\t\n\tvar _log = __webpack_require__(11);\n\t\n\tvar _log2 = _interopRequireDefault(_log);\n\t\n\tvar _timeRanges = __webpack_require__(22);\n\t\n\tvar _buffer = __webpack_require__(23);\n\t\n\tvar _mediaError = __webpack_require__(25);\n\t\n\tvar _mediaError2 = _interopRequireDefault(_mediaError);\n\t\n\tvar _window = __webpack_require__(4);\n\t\n\tvar _window2 = _interopRequireDefault(_window);\n\t\n\tvar _document = __webpack_require__(5);\n\t\n\tvar _document2 = _interopRequireDefault(_document);\n\t\n\tfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj['default'] = obj; return newObj; } }\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /**\n\t                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * @file tech.js\n\t                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                */\n\t\n\t/**\n\t * An Object containing a structure like: `{src: 'url', type: 'mimetype'}` or string\n\t * that just contains the src url alone.\n\t *\n\t * ``` js\n\t *   var SourceObject = {\n\t *     src: 'http://example.com/some-video.mp4',\n\t *     type: 'video/mp4'\n\t *   };\n\t *   var SourceString = 'http://example.com/some-video.mp4';\n\t * ```\n\t *\n\t * @typedef {Object|string} Tech~SourceObject\n\t *\n\t * @property {string} src\n\t *           The url to the source\n\t *\n\t * @property {string} type\n\t *           The mime type of the source\n\t */\n\t\n\t/**\n\t * A function used by {@link Tech} to create a new {@link TextTrack}.\n\t *\n\t * @param {Tech} self\n\t *        An instance of the Tech class.\n\t *\n\t * @param {string} kind\n\t *        `TextTrack` kind (subtitles, captions, descriptions, chapters, or metadata)\n\t *\n\t * @param {string} [label]\n\t *        Label to identify the text track\n\t *\n\t * @param {string} [language]\n\t *        Two letter language abbreviation\n\t *\n\t * @param {Object} [options={}]\n\t *        An object with additional text track options\n\t *\n\t * @return {TextTrack}\n\t *          The text track that was created.\n\t */\n\tfunction createTrackHelper(self, kind, label, language) {\n\t  var options = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : {};\n\t\n\t  var tracks = self.textTracks();\n\t\n\t  options.kind = kind;\n\t\n\t  if (label) {\n\t    options.label = label;\n\t  }\n\t  if (language) {\n\t    options.language = language;\n\t  }\n\t  options.tech = self;\n\t\n\t  var track = new _textTrack2['default'](options);\n\t\n\t  tracks.addTrack_(track);\n\t\n\t  return track;\n\t}\n\t\n\t/**\n\t * This is the base class for media playback technology controllers, such as\n\t * {@link Flash} and {@link HTML5}\n\t *\n\t * @extends Component\n\t */\n\t\n\tvar Tech = function (_Component) {\n\t  _inherits(Tech, _Component);\n\t\n\t  /**\n\t   * Create an instance of this Tech.\n\t   *\n\t   * @param {Object} [options]\n\t   *        The key/value store of player options.\n\t   *\n\t   * @param {Component~ReadyCallback} ready\n\t   *        Callback function to call when the `HTML5` Tech is ready.\n\t   */\n\t  function Tech() {\n\t    var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\t    var ready = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : function () {};\n\t\n\t    _classCallCheck(this, Tech);\n\t\n\t    // we don't want the tech to report user activity automatically.\n\t    // This is done manually in addControlsListeners\n\t    options.reportTouchActivity = false;\n\t\n\t    // keep track of whether the current source has played at all to\n\t    // implement a very limited played()\n\t    var _this = _possibleConstructorReturn(this, _Component.call(this, null, options, ready));\n\t\n\t    _this.hasStarted_ = false;\n\t    _this.on('playing', function () {\n\t      this.hasStarted_ = true;\n\t    });\n\t    _this.on('loadstart', function () {\n\t      this.hasStarted_ = false;\n\t    });\n\t\n\t    _this.textTracks_ = options.textTracks;\n\t    _this.videoTracks_ = options.videoTracks;\n\t    _this.audioTracks_ = options.audioTracks;\n\t\n\t    // Manually track progress in cases where the browser/flash player doesn't report it.\n\t    if (!_this.featuresProgressEvents) {\n\t      _this.manualProgressOn();\n\t    }\n\t\n\t    // Manually track timeupdates in cases where the browser/flash player doesn't report it.\n\t    if (!_this.featuresTimeupdateEvents) {\n\t      _this.manualTimeUpdatesOn();\n\t    }\n\t\n\t    ['Text', 'Audio', 'Video'].forEach(function (track) {\n\t      if (options['native' + track + 'Tracks'] === false) {\n\t        _this['featuresNative' + track + 'Tracks'] = false;\n\t      }\n\t    });\n\t\n\t    if (options.nativeCaptions === false) {\n\t      _this.featuresNativeTextTracks = false;\n\t    }\n\t\n\t    if (!_this.featuresNativeTextTracks) {\n\t      _this.emulateTextTracks();\n\t    }\n\t\n\t    _this.autoRemoteTextTracks_ = new _textTrackList2['default']();\n\t\n\t    _this.initTextTrackListeners();\n\t    _this.initTrackListeners();\n\t\n\t    // Turn on component tap events\n\t    _this.emitTapEvents();\n\t    return _this;\n\t  }\n\t\n\t  /* Fallbacks for unsupported event types\n\t  ================================================================================ */\n\t\n\t  /**\n\t   * Polyfill the `progress` event for browsers that don't support it natively.\n\t   *\n\t   * @see {@link Tech#trackProgress}\n\t   */\n\t\n\t\n\t  Tech.prototype.manualProgressOn = function manualProgressOn() {\n\t    this.on('durationchange', this.onDurationChange);\n\t\n\t    this.manualProgress = true;\n\t\n\t    // Trigger progress watching when a source begins loading\n\t    this.one('ready', this.trackProgress);\n\t  };\n\t\n\t  /**\n\t   * Turn off the polyfill for `progress` events that was created in\n\t   * {@link Tech#manualProgressOn}\n\t   */\n\t\n\t\n\t  Tech.prototype.manualProgressOff = function manualProgressOff() {\n\t    this.manualProgress = false;\n\t    this.stopTrackingProgress();\n\t\n\t    this.off('durationchange', this.onDurationChange);\n\t  };\n\t\n\t  /**\n\t   * This is used to trigger a `progress` event when the buffered percent changes. It\n\t   * sets an interval function that will be called every 500 milliseconds to check if the\n\t   * buffer end percent has changed.\n\t   *\n\t   * > This function is called by {@link Tech#manualProgressOn}\n\t   *\n\t   * @param {EventTarget~Event} event\n\t   *        The `ready` event that caused this to run.\n\t   *\n\t   * @listens Tech#ready\n\t   * @fires Tech#progress\n\t   */\n\t\n\t\n\t  Tech.prototype.trackProgress = function trackProgress(event) {\n\t    this.stopTrackingProgress();\n\t    this.progressInterval = this.setInterval(Fn.bind(this, function () {\n\t      // Don't trigger unless buffered amount is greater than last time\n\t\n\t      var numBufferedPercent = this.bufferedPercent();\n\t\n\t      if (this.bufferedPercent_ !== numBufferedPercent) {\n\t        /**\n\t         * See {@link Player#progress}\n\t         *\n\t         * @event Tech#progress\n\t         * @type {EventTarget~Event}\n\t         */\n\t        this.trigger('progress');\n\t      }\n\t\n\t      this.bufferedPercent_ = numBufferedPercent;\n\t\n\t      if (numBufferedPercent === 1) {\n\t        this.stopTrackingProgress();\n\t      }\n\t    }), 500);\n\t  };\n\t\n\t  /**\n\t   * Update our internal duration on a `durationchange` event by calling\n\t   * {@link Tech#duration}.\n\t   *\n\t   * @param {EventTarget~Event} event\n\t   *        The `durationchange` event that caused this to run.\n\t   *\n\t   * @listens Tech#durationchange\n\t   */\n\t\n\t\n\t  Tech.prototype.onDurationChange = function onDurationChange(event) {\n\t    this.duration_ = this.duration();\n\t  };\n\t\n\t  /**\n\t   * Get and create a `TimeRange` object for buffering.\n\t   *\n\t   * @return {TimeRange}\n\t   *         The time range object that was created.\n\t   */\n\t\n\t\n\t  Tech.prototype.buffered = function buffered() {\n\t    return (0, _timeRanges.createTimeRange)(0, 0);\n\t  };\n\t\n\t  /**\n\t   * Get the percentage of the current video that is currently buffered.\n\t   *\n\t   * @return {number}\n\t   *         A number from 0 to 1 that represents the decimal percentage of the\n\t   *         video that is buffered.\n\t   *\n\t   */\n\t\n\t\n\t  Tech.prototype.bufferedPercent = function bufferedPercent() {\n\t    return (0, _buffer.bufferedPercent)(this.buffered(), this.duration_);\n\t  };\n\t\n\t  /**\n\t   * Turn off the polyfill for `progress` events that was created in\n\t   * {@link Tech#manualProgressOn}\n\t   * Stop manually tracking progress events by clearing the interval that was set in\n\t   * {@link Tech#trackProgress}.\n\t   */\n\t\n\t\n\t  Tech.prototype.stopTrackingProgress = function stopTrackingProgress() {\n\t    this.clearInterval(this.progressInterval);\n\t  };\n\t\n\t  /**\n\t   * Polyfill the `timeupdate` event for browsers that don't support it.\n\t   *\n\t   * @see {@link Tech#trackCurrentTime}\n\t   */\n\t\n\t\n\t  Tech.prototype.manualTimeUpdatesOn = function manualTimeUpdatesOn() {\n\t    this.manualTimeUpdates = true;\n\t\n\t    this.on('play', this.trackCurrentTime);\n\t    this.on('pause', this.stopTrackingCurrentTime);\n\t  };\n\t\n\t  /**\n\t   * Turn off the polyfill for `timeupdate` events that was created in\n\t   * {@link Tech#manualTimeUpdatesOn}\n\t   */\n\t\n\t\n\t  Tech.prototype.manualTimeUpdatesOff = function manualTimeUpdatesOff() {\n\t    this.manualTimeUpdates = false;\n\t    this.stopTrackingCurrentTime();\n\t    this.off('play', this.trackCurrentTime);\n\t    this.off('pause', this.stopTrackingCurrentTime);\n\t  };\n\t\n\t  /**\n\t   * Sets up an interval function to track current time and trigger `timeupdate` every\n\t   * 250 milliseconds.\n\t   *\n\t   * @listens Tech#play\n\t   * @triggers Tech#timeupdate\n\t   */\n\t\n\t\n\t  Tech.prototype.trackCurrentTime = function trackCurrentTime() {\n\t    if (this.currentTimeInterval) {\n\t      this.stopTrackingCurrentTime();\n\t    }\n\t    this.currentTimeInterval = this.setInterval(function () {\n\t      /**\n\t       * Triggered at an interval of 250ms to indicated that time is passing in the video.\n\t       *\n\t       * @event Tech#timeupdate\n\t       * @type {EventTarget~Event}\n\t       */\n\t      this.trigger({ type: 'timeupdate', target: this, manuallyTriggered: true });\n\t\n\t      // 42 = 24 fps // 250 is what Webkit uses // FF uses 15\n\t    }, 250);\n\t  };\n\t\n\t  /**\n\t   * Stop the interval function created in {@link Tech#trackCurrentTime} so that the\n\t   * `timeupdate` event is no longer triggered.\n\t   *\n\t   * @listens {Tech#pause}\n\t   */\n\t\n\t\n\t  Tech.prototype.stopTrackingCurrentTime = function stopTrackingCurrentTime() {\n\t    this.clearInterval(this.currentTimeInterval);\n\t\n\t    // #1002 - if the video ends right before the next timeupdate would happen,\n\t    // the progress bar won't make it all the way to the end\n\t    this.trigger({ type: 'timeupdate', target: this, manuallyTriggered: true });\n\t  };\n\t\n\t  /**\n\t   * Turn off all event polyfills, clear the `Tech`s {@link AudioTrackList},\n\t   * {@link VideoTrackList}, and {@link TextTrackList}, and dispose of this Tech.\n\t   *\n\t   * @fires Component#dispose\n\t   */\n\t\n\t\n\t  Tech.prototype.dispose = function dispose() {\n\t\n\t    // clear out all tracks because we can't reuse them between techs\n\t    this.clearTracks(['audio', 'video', 'text']);\n\t\n\t    // Turn off any manual progress or timeupdate tracking\n\t    if (this.manualProgress) {\n\t      this.manualProgressOff();\n\t    }\n\t\n\t    if (this.manualTimeUpdates) {\n\t      this.manualTimeUpdatesOff();\n\t    }\n\t\n\t    _Component.prototype.dispose.call(this);\n\t  };\n\t\n\t  /**\n\t   * Clear out a single `TrackList` or an array of `TrackLists` given their names.\n\t   *\n\t   * > Note: Techs without source handlers should call this between sources for `video`\n\t   *         & `audio` tracks. You don't want to use them between tracks!\n\t   *\n\t   * @param {string[]|string} types\n\t   *        TrackList names to clear, valid names are `video`, `audio`, and\n\t   *        `text`.\n\t   */\n\t\n\t\n\t  Tech.prototype.clearTracks = function clearTracks(types) {\n\t    var _this2 = this;\n\t\n\t    types = [].concat(types);\n\t    // clear out all tracks because we can't reuse them between techs\n\t    types.forEach(function (type) {\n\t      var list = _this2[type + 'Tracks']() || [];\n\t      var i = list.length;\n\t\n\t      while (i--) {\n\t        var track = list[i];\n\t\n\t        if (type === 'text') {\n\t          _this2.removeRemoteTextTrack(track);\n\t        }\n\t        list.removeTrack_(track);\n\t      }\n\t    });\n\t  };\n\t\n\t  /**\n\t   * Remove any TextTracks added via addRemoteTextTrack that are\n\t   * flagged for automatic garbage collection\n\t   */\n\t\n\t\n\t  Tech.prototype.cleanupAutoTextTracks = function cleanupAutoTextTracks() {\n\t    var list = this.autoRemoteTextTracks_ || [];\n\t    var i = list.length;\n\t\n\t    while (i--) {\n\t      var track = list[i];\n\t\n\t      this.removeRemoteTextTrack(track);\n\t    }\n\t  };\n\t\n\t  /**\n\t   * Reset the tech, which will removes all sources and reset the internal readyState.\n\t   *\n\t   * @abstract\n\t   */\n\t\n\t\n\t  Tech.prototype.reset = function reset() {};\n\t\n\t  /**\n\t   * Get or set an error on the Tech.\n\t   *\n\t   * @param {MediaError} [err]\n\t   *        Error to set on the Tech\n\t   *\n\t   * @return {MediaError|null}\n\t   *         The current error object on the tech, or null if there isn't one.\n\t   */\n\t\n\t\n\t  Tech.prototype.error = function error(err) {\n\t    if (err !== undefined) {\n\t      this.error_ = new _mediaError2['default'](err);\n\t      this.trigger('error');\n\t    }\n\t    return this.error_;\n\t  };\n\t\n\t  /**\n\t   * Returns the `TimeRange`s that have been played through for the current source.\n\t   *\n\t   * > NOTE: This implementation is incomplete. It does not track the played `TimeRange`.\n\t   *         It only checks wether the source has played at all or not.\n\t   *\n\t   * @return {TimeRange}\n\t   *         - A single time range if this video has played\n\t   *         - An empty set of ranges if not.\n\t   */\n\t\n\t\n\t  Tech.prototype.played = function played() {\n\t    if (this.hasStarted_) {\n\t      return (0, _timeRanges.createTimeRange)(0, 0);\n\t    }\n\t    return (0, _timeRanges.createTimeRange)();\n\t  };\n\t\n\t  /**\n\t   * Causes a manual time update to occur if {@link Tech#manualTimeUpdatesOn} was\n\t   * previously called.\n\t   *\n\t   * @fires Tech#timeupdate\n\t   */\n\t\n\t\n\t  Tech.prototype.setCurrentTime = function setCurrentTime() {\n\t    // improve the accuracy of manual timeupdates\n\t    if (this.manualTimeUpdates) {\n\t      /**\n\t       * A manual `timeupdate` event.\n\t       *\n\t       * @event Tech#timeupdate\n\t       * @type {EventTarget~Event}\n\t       */\n\t      this.trigger({ type: 'timeupdate', target: this, manuallyTriggered: true });\n\t    }\n\t  };\n\t\n\t  /**\n\t   * Turn on listeners for {@link TextTrackList} events. This adds\n\t   * {@link EventTarget~EventListeners} for `texttrackchange`, `addtrack` and\n\t   * `removetrack`.\n\t   *\n\t   * @fires Tech#texttrackchange\n\t   */\n\t\n\t\n\t  Tech.prototype.initTextTrackListeners = function initTextTrackListeners() {\n\t    var textTrackListChanges = Fn.bind(this, function () {\n\t      /**\n\t       * Triggered when tracks are added or removed on the Tech {@link TextTrackList}\n\t       *\n\t       * @event Tech#texttrackchange\n\t       * @type {EventTarget~Event}\n\t       */\n\t      this.trigger('texttrackchange');\n\t    });\n\t\n\t    var tracks = this.textTracks();\n\t\n\t    if (!tracks) {\n\t      return;\n\t    }\n\t\n\t    tracks.addEventListener('removetrack', textTrackListChanges);\n\t    tracks.addEventListener('addtrack', textTrackListChanges);\n\t\n\t    this.on('dispose', Fn.bind(this, function () {\n\t      tracks.removeEventListener('removetrack', textTrackListChanges);\n\t      tracks.removeEventListener('addtrack', textTrackListChanges);\n\t    }));\n\t  };\n\t\n\t  /**\n\t   * Turn on listeners for {@link VideoTrackList} and {@link {AudioTrackList} events.\n\t   * This adds {@link EventTarget~EventListeners} for `addtrack`, and  `removetrack`.\n\t   *\n\t   * @fires Tech#audiotrackchange\n\t   * @fires Tech#videotrackchange\n\t   */\n\t\n\t\n\t  Tech.prototype.initTrackListeners = function initTrackListeners() {\n\t    var _this3 = this;\n\t\n\t    var trackTypes = ['video', 'audio'];\n\t\n\t    trackTypes.forEach(function (type) {\n\t      /**\n\t       * Triggered when tracks are added or removed on the Tech {@link AudioTrackList}\n\t       *\n\t       * @event Tech#audiotrackchange\n\t       * @type {EventTarget~Event}\n\t       */\n\t\n\t      /**\n\t       * Triggered when tracks are added or removed on the Tech {@link VideoTrackList}\n\t       *\n\t       * @event Tech#videotrackchange\n\t       * @type {EventTarget~Event}\n\t       */\n\t      var trackListChanges = function trackListChanges() {\n\t        _this3.trigger(type + 'trackchange');\n\t      };\n\t\n\t      var tracks = _this3[type + 'Tracks']();\n\t\n\t      tracks.addEventListener('removetrack', trackListChanges);\n\t      tracks.addEventListener('addtrack', trackListChanges);\n\t\n\t      _this3.on('dispose', function () {\n\t        tracks.removeEventListener('removetrack', trackListChanges);\n\t        tracks.removeEventListener('addtrack', trackListChanges);\n\t      });\n\t    });\n\t  };\n\t\n\t  /**\n\t   * Emulate TextTracks using vtt.js if necessary\n\t   *\n\t   * @fires Tech#vttjsloaded\n\t   * @fires Tech#vttjserror\n\t   * @fires Tech#texttrackchange\n\t   */\n\t\n\t\n\t  Tech.prototype.addWebVttScript_ = function addWebVttScript_() {\n\t    var _this4 = this;\n\t\n\t    if (!_window2['default'].WebVTT && this.el().parentNode !== null && this.el().parentNode !== undefined) {\n\t      (function () {\n\t        var script = _document2['default'].createElement('script');\n\t\n\t        script.src = _this4.options_['vtt.js'] || '../node_modules/videojs-vtt.js/dist/vtt.js';\n\t        script.onload = function () {\n\t          /**\n\t           * Fired when vtt.js is loaded.\n\t           *\n\t           * @event Tech#vttjsloaded\n\t           * @type {EventTarget~Event}\n\t           */\n\t          _this4.trigger('vttjsloaded');\n\t        };\n\t        script.onerror = function () {\n\t          /**\n\t           * Fired when vtt.js was not loaded due to an error\n\t           *\n\t           * @event Tech#vttjsloaded\n\t           * @type {EventTarget~Event}\n\t           */\n\t          _this4.trigger('vttjserror');\n\t        };\n\t        _this4.on('dispose', function () {\n\t          script.onload = null;\n\t          script.onerror = null;\n\t        });\n\t        // but have not loaded yet and we set it to true before the inject so that\n\t        // we don't overwrite the injected window.WebVTT if it loads right away\n\t        _window2['default'].WebVTT = true;\n\t        _this4.el().parentNode.appendChild(script);\n\t      })();\n\t    }\n\t  };\n\t\n\t  /**\n\t   * Emulate texttracks\n\t   *\n\t   * @method emulateTextTracks\n\t   */\n\t\n\t\n\t  Tech.prototype.emulateTextTracks = function emulateTextTracks() {\n\t    var _this5 = this;\n\t\n\t    var tracks = this.textTracks();\n\t\n\t    if (!tracks) {\n\t      return;\n\t    }\n\t\n\t    this.remoteTextTracks().on('addtrack', function (e) {\n\t      _this5.textTracks().addTrack_(e.track);\n\t    });\n\t\n\t    this.remoteTextTracks().on('removetrack', function (e) {\n\t      _this5.textTracks().removeTrack_(e.track);\n\t    });\n\t\n\t    // Initially, Tech.el_ is a child of a dummy-div wait until the Component system\n\t    // signals that the Tech is ready at which point Tech.el_ is part of the DOM\n\t    // before inserting the WebVTT script\n\t    this.on('ready', this.addWebVttScript_);\n\t\n\t    var updateDisplay = function updateDisplay() {\n\t      return _this5.trigger('texttrackchange');\n\t    };\n\t    var textTracksChanges = function textTracksChanges() {\n\t      updateDisplay();\n\t\n\t      for (var i = 0; i < tracks.length; i++) {\n\t        var track = tracks[i];\n\t\n\t        track.removeEventListener('cuechange', updateDisplay);\n\t        if (track.mode === 'showing') {\n\t          track.addEventListener('cuechange', updateDisplay);\n\t        }\n\t      }\n\t    };\n\t\n\t    textTracksChanges();\n\t    tracks.addEventListener('change', textTracksChanges);\n\t\n\t    this.on('dispose', function () {\n\t      tracks.removeEventListener('change', textTracksChanges);\n\t    });\n\t  };\n\t\n\t  /**\n\t   * Get the `Tech`s {@link VideoTrackList}.\n\t   *\n\t   * @return {VideoTrackList}\n\t   *          The video track list that the Tech is currently using.\n\t   */\n\t\n\t\n\t  Tech.prototype.videoTracks = function videoTracks() {\n\t    this.videoTracks_ = this.videoTracks_ || new _videoTrackList2['default']();\n\t    return this.videoTracks_;\n\t  };\n\t\n\t  /**\n\t   * Get the `Tech`s {@link AudioTrackList}.\n\t   *\n\t   * @return {AudioTrackList}\n\t   *          The audio track list that the Tech is currently using.\n\t   */\n\t\n\t\n\t  Tech.prototype.audioTracks = function audioTracks() {\n\t    this.audioTracks_ = this.audioTracks_ || new _audioTrackList2['default']();\n\t    return this.audioTracks_;\n\t  };\n\t\n\t  /**\n\t   * Get the `Tech`s {@link TextTrackList}.\n\t   *\n\t   * @return {TextTrackList}\n\t   *          The text track list that the Tech is currently using.\n\t   */\n\t\n\t\n\t  Tech.prototype.textTracks = function textTracks() {\n\t    this.textTracks_ = this.textTracks_ || new _textTrackList2['default']();\n\t    return this.textTracks_;\n\t  };\n\t\n\t  /**\n\t   * Get the `Tech`s remote {@link TextTrackList}, which is created from elements\n\t   * that were added to the DOM.\n\t   *\n\t   * @return {TextTrackList}\n\t   *          The remote text track list that the Tech is currently using.\n\t   */\n\t\n\t\n\t  Tech.prototype.remoteTextTracks = function remoteTextTracks() {\n\t    this.remoteTextTracks_ = this.remoteTextTracks_ || new _textTrackList2['default']();\n\t    return this.remoteTextTracks_;\n\t  };\n\t\n\t  /**\n\t   * Get The `Tech`s  {HTMLTrackElementList}, which are the elements in the DOM that are\n\t   * being used as TextTracks.\n\t   *\n\t   * @return {HTMLTrackElementList}\n\t   *          The current HTML track elements that exist for the tech.\n\t   */\n\t\n\t\n\t  Tech.prototype.remoteTextTrackEls = function remoteTextTrackEls() {\n\t    this.remoteTextTrackEls_ = this.remoteTextTrackEls_ || new _htmlTrackElementList2['default']();\n\t    return this.remoteTextTrackEls_;\n\t  };\n\t\n\t  /**\n\t   * Create and returns a remote {@link TextTrack} object.\n\t   *\n\t   * @param {string} kind\n\t   *        `TextTrack` kind (subtitles, captions, descriptions, chapters, or metadata)\n\t   *\n\t   * @param {string} [label]\n\t   *        Label to identify the text track\n\t   *\n\t   * @param {string} [language]\n\t   *        Two letter language abbreviation\n\t   *\n\t   * @return {TextTrack}\n\t   *         The TextTrack that gets created.\n\t   */\n\t\n\t\n\t  Tech.prototype.addTextTrack = function addTextTrack(kind, label, language) {\n\t    if (!kind) {\n\t      throw new Error('TextTrack kind is required but was not provided');\n\t    }\n\t\n\t    return createTrackHelper(this, kind, label, language);\n\t  };\n\t\n\t  /**\n\t   * Create an emulated TextTrack for use by addRemoteTextTrack\n\t   *\n\t   * This is intended to be overridden by classes that inherit from\n\t   * Tech in order to create native or custom TextTracks.\n\t   *\n\t   * @param {Object} options\n\t   *        The object should contain the options to initialize the TextTrack with.\n\t   *\n\t   * @param {string} [options.kind]\n\t   *        `TextTrack` kind (subtitles, captions, descriptions, chapters, or metadata).\n\t   *\n\t   * @param {string} [options.label].\n\t   *        Label to identify the text track\n\t   *\n\t   * @param {string} [options.language]\n\t   *        Two letter language abbreviation.\n\t   *\n\t   * @return {HTMLTrackElement}\n\t   *         The track element that gets created.\n\t   */\n\t\n\t\n\t  Tech.prototype.createRemoteTextTrack = function createRemoteTextTrack(options) {\n\t    var track = (0, _mergeOptions2['default'])(options, {\n\t      tech: this\n\t    });\n\t\n\t    return new _htmlTrackElement2['default'](track);\n\t  };\n\t\n\t  /**\n\t   * Creates a remote text track object and returns an html track element.\n\t   *\n\t   * > Note: This can be an emulated {@link HTMLTrackElement} or a native one.\n\t   *\n\t   * @param {Object} options\n\t   *        See {@link Tech#createRemoteTextTrack} for more detailed properties.\n\t   *\n\t   * @param {boolean} [manualCleanup=true]\n\t   *        - When false: the TextTrack will be automatically removed from the video\n\t   *          element whenever the source changes\n\t   *        - When True: The TextTrack will have to be cleaned up manually\n\t   *\n\t   * @return {HTMLTrackElement}\n\t   *         An Html Track Element.\n\t   *\n\t   * @deprecated The default functionality for this function will be equivalent\n\t   *             to \"manualCleanup=false\" in the future. The manualCleanup parameter will\n\t   *             also be removed.\n\t   */\n\t\n\t\n\t  Tech.prototype.addRemoteTextTrack = function addRemoteTextTrack() {\n\t    var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\t    var manualCleanup = arguments[1];\n\t\n\t    var htmlTrackElement = this.createRemoteTextTrack(options);\n\t\n\t    if (manualCleanup !== true && manualCleanup !== false) {\n\t      // deprecation warning\n\t      _log2['default'].warn('Calling addRemoteTextTrack without explicitly setting the \"manualCleanup\" parameter to `true` is deprecated and default to `false` in future version of video.js');\n\t      manualCleanup = true;\n\t    }\n\t\n\t    // store HTMLTrackElement and TextTrack to remote list\n\t    this.remoteTextTrackEls().addTrackElement_(htmlTrackElement);\n\t    this.remoteTextTracks().addTrack_(htmlTrackElement.track);\n\t\n\t    if (manualCleanup !== true) {\n\t      // create the TextTrackList if it doesn't exist\n\t      this.autoRemoteTextTracks_.addTrack_(htmlTrackElement.track);\n\t    }\n\t\n\t    return htmlTrackElement;\n\t  };\n\t\n\t  /**\n\t   * Remove a remote text track from the remote `TextTrackList`.\n\t   *\n\t   * @param {TextTrack} track\n\t   *        `TextTrack` to remove from the `TextTrackList`\n\t   */\n\t\n\t\n\t  Tech.prototype.removeRemoteTextTrack = function removeRemoteTextTrack(track) {\n\t    var trackElement = this.remoteTextTrackEls().getTrackElementByTrack_(track);\n\t\n\t    // remove HTMLTrackElement and TextTrack from remote list\n\t    this.remoteTextTrackEls().removeTrackElement_(trackElement);\n\t    this.remoteTextTracks().removeTrack_(track);\n\t    this.autoRemoteTextTracks_.removeTrack_(track);\n\t  };\n\t\n\t  /**\n\t   * A method to set a poster from a `Tech`.\n\t   *\n\t   * @abstract\n\t   */\n\t\n\t\n\t  Tech.prototype.setPoster = function setPoster() {};\n\t\n\t  /*\n\t   * Check if the tech can support the given mime-type.\n\t   *\n\t   * The base tech does not support any type, but source handlers might\n\t   * overwrite this.\n\t   *\n\t   * @param  {string} type\n\t   *         The mimetype to check for support\n\t   *\n\t   * @return {string}\n\t   *         'probably', 'maybe', or empty string\n\t   *\n\t   * @see [Spec]{@link https://developer.mozilla.org/en-US/docs/Web/API/HTMLMediaElement/canPlayType}\n\t   *\n\t   * @abstract\n\t   */\n\t\n\t\n\t  Tech.prototype.canPlayType = function canPlayType() {\n\t    return '';\n\t  };\n\t\n\t  /*\n\t   * Return whether the argument is a Tech or not.\n\t   * Can be passed either a Class like `Html5` or a instance like `player.tech_`\n\t   *\n\t   * @param {Object} component\n\t   *        The item to check\n\t   *\n\t   * @return {boolean}\n\t   *         Whether it is a tech or not\n\t   *         - True if it is a tech\n\t   *         - False if it is not\n\t   */\n\t\n\t\n\t  Tech.isTech = function isTech(component) {\n\t    return component.prototype instanceof Tech || component instanceof Tech || component === Tech;\n\t  };\n\t\n\t  /**\n\t   * Registers a `Tech` into a shared list for videojs.\n\t   *\n\t   * @param {string} name\n\t   *        Name of the `Tech` to register.\n\t   *\n\t   * @param {Object} tech\n\t   *        The `Tech` class to register.\n\t   */\n\t\n\t\n\t  Tech.registerTech = function registerTech(name, tech) {\n\t    if (!Tech.techs_) {\n\t      Tech.techs_ = {};\n\t    }\n\t\n\t    if (!Tech.isTech(tech)) {\n\t      throw new Error('Tech ' + name + ' must be a Tech');\n\t    }\n\t\n\t    Tech.techs_[name] = tech;\n\t    return tech;\n\t  };\n\t\n\t  /**\n\t   * Get a `Tech` from the shared list by name.\n\t   *\n\t   * @param {string} name\n\t   *        Name of the component to get\n\t   *\n\t   * @return {Tech|undefined}\n\t   *         The `Tech` or undefined if there was no tech with the name requsted.\n\t   */\n\t\n\t\n\t  Tech.getTech = function getTech(name) {\n\t    if (Tech.techs_ && Tech.techs_[name]) {\n\t      return Tech.techs_[name];\n\t    }\n\t\n\t    if (_window2['default'] && _window2['default'].videojs && _window2['default'].videojs[name]) {\n\t      _log2['default'].warn('The ' + name + ' tech was added to the videojs object when it should be registered using videojs.registerTech(name, tech)');\n\t      return _window2['default'].videojs[name];\n\t    }\n\t  };\n\t\n\t  return Tech;\n\t}(_component2['default']);\n\t\n\t/**\n\t * List of associated text tracks.\n\t *\n\t * @type {TextTrackList}\n\t * @private\n\t */\n\t\n\t\n\tTech.prototype.textTracks_; // eslint-disable-line\n\t\n\t/**\n\t * List of associated audio tracks.\n\t *\n\t * @type {AudioTrackList}\n\t * @private\n\t */\n\tTech.prototype.audioTracks_; // eslint-disable-line\n\t\n\t/**\n\t * List of associated video tracks.\n\t *\n\t * @type {VideoTrackList}\n\t * @private\n\t */\n\tTech.prototype.videoTracks_; // eslint-disable-line\n\t\n\t/**\n\t * Boolean indicating wether the `Tech` supports volume control.\n\t *\n\t * @type {boolean}\n\t * @default\n\t */\n\tTech.prototype.featuresVolumeControl = true;\n\t\n\t/**\n\t * Boolean indicating wether the `Tech` support fullscreen resize control.\n\t * Resizing plugins using request fullscreen reloads the plugin\n\t *\n\t * @type {boolean}\n\t * @default\n\t */\n\tTech.prototype.featuresFullscreenResize = false;\n\t\n\t/**\n\t * Boolean indicating wether the `Tech` supports changing the speed at which the video\n\t * plays. Examples:\n\t *   - Set player to play 2x (twice) as fast\n\t *   - Set player to play 0.5x (half) as fast\n\t *\n\t * @type {boolean}\n\t * @default\n\t */\n\tTech.prototype.featuresPlaybackRate = false;\n\t\n\t/**\n\t * Boolean indicating wether the `Tech` supports the `progress` event. This is currently\n\t * not triggered by video-js-swf. This will be used to determine if\n\t * {@link Tech#manualProgressOn} should be called.\n\t *\n\t * @type {boolean}\n\t * @default\n\t */\n\tTech.prototype.featuresProgressEvents = false;\n\t\n\t/**\n\t * Boolean indicating wether the `Tech` supports the `timeupdate` event. This is currently\n\t * not triggered by video-js-swf. This will be used to determine if\n\t * {@link Tech#manualTimeUpdates} should be called.\n\t *\n\t * @type {boolean}\n\t * @default\n\t */\n\tTech.prototype.featuresTimeupdateEvents = false;\n\t\n\t/**\n\t * Boolean indicating wether the `Tech` supports the native `TextTrack`s.\n\t * This will help us integrate with native `TextTrack`s if the browser supports them.\n\t *\n\t * @type {boolean}\n\t * @default\n\t */\n\tTech.prototype.featuresNativeTextTracks = false;\n\t\n\t/**\n\t * A functional mixin for techs that want to use the Source Handler pattern.\n\t * Source handlers are scripts for handling specific formats.\n\t * The source handler pattern is used for adaptive formats (HLS, DASH) that\n\t * manually load video data and feed it into a Source Buffer (Media Source Extensions)\n\t *\n\t * ```js\n\t *   Tech.withSourceHandlers.call(MyTech);\n\t * ```\n\t *\n\t * @param {Tech} _Tech\n\t *        The tech to add source handler functions to.\n\t *\n\t * @mixes Tech~SourceHandlerAdditions\n\t */\n\tTech.withSourceHandlers = function (_Tech) {\n\t\n\t  /**\n\t   * Register a source handler\n\t   *\n\t   * @param {Function} handler\n\t   *        The source handler class\n\t   *\n\t   * @param {number} [index]\n\t   *        Register it at the following index\n\t   */\n\t  _Tech.registerSourceHandler = function (handler, index) {\n\t    var handlers = _Tech.sourceHandlers;\n\t\n\t    if (!handlers) {\n\t      handlers = _Tech.sourceHandlers = [];\n\t    }\n\t\n\t    if (index === undefined) {\n\t      // add to the end of the list\n\t      index = handlers.length;\n\t    }\n\t\n\t    handlers.splice(index, 0, handler);\n\t  };\n\t\n\t  /**\n\t   * Check if the tech can support the given type. Also checks the\n\t   * Techs sourceHandlers.\n\t   *\n\t   * @param {string} type\n\t   *         The mimetype to check.\n\t   *\n\t   * @return {string}\n\t   *         'probably', 'maybe', or '' (empty string)\n\t   */\n\t  _Tech.canPlayType = function (type) {\n\t    var handlers = _Tech.sourceHandlers || [];\n\t    var can = void 0;\n\t\n\t    for (var i = 0; i < handlers.length; i++) {\n\t      can = handlers[i].canPlayType(type);\n\t\n\t      if (can) {\n\t        return can;\n\t      }\n\t    }\n\t\n\t    return '';\n\t  };\n\t\n\t  /**\n\t   * Returns the first source handler that supports the source.\n\t   *\n\t   * TODO: Answer question: should 'probably' be prioritized over 'maybe'\n\t   *\n\t   * @param {Tech~SourceObject} source\n\t   *        The source object\n\t   *\n\t   * @param {Object} options\n\t   *        The options passed to the tech\n\t   *\n\t   * @return {SourceHandler|null}\n\t   *          The first source handler that supports the source or null if\n\t   *          no SourceHandler supports the source\n\t   */\n\t  _Tech.selectSourceHandler = function (source, options) {\n\t    var handlers = _Tech.sourceHandlers || [];\n\t    var can = void 0;\n\t\n\t    for (var i = 0; i < handlers.length; i++) {\n\t      can = handlers[i].canHandleSource(source, options);\n\t\n\t      if (can) {\n\t        return handlers[i];\n\t      }\n\t    }\n\t\n\t    return null;\n\t  };\n\t\n\t  /**\n\t   * Check if the tech can support the given source.\n\t   *\n\t   * @param {Tech~SourceObject} srcObj\n\t   *        The source object\n\t   *\n\t   * @param {Object} options\n\t   *        The options passed to the tech\n\t   *\n\t   * @return {string}\n\t   *         'probably', 'maybe', or '' (empty string)\n\t   */\n\t  _Tech.canPlaySource = function (srcObj, options) {\n\t    var sh = _Tech.selectSourceHandler(srcObj, options);\n\t\n\t    if (sh) {\n\t      return sh.canHandleSource(srcObj, options);\n\t    }\n\t\n\t    return '';\n\t  };\n\t\n\t  /**\n\t   * When using a source handler, prefer its implementation of\n\t   * any function normally provided by the tech.\n\t   */\n\t  var deferrable = ['seekable', 'duration'];\n\t\n\t  /**\n\t   * A wrapper around {@link Tech#seekable} that will call a `SourceHandler`s seekable\n\t   * function if it exists, with a fallback to the Techs seekable function.\n\t   *\n\t   * @method _Tech.seekable\n\t   */\n\t\n\t  /**\n\t   * A wrapper around {@link Tech#duration} that will call a `SourceHandler`s duration\n\t   * function if it exists, otherwise it will fallback to the techs duration function.\n\t   *\n\t   * @method _Tech.duration\n\t   */\n\t\n\t  deferrable.forEach(function (fnName) {\n\t    var originalFn = this[fnName];\n\t\n\t    if (typeof originalFn !== 'function') {\n\t      return;\n\t    }\n\t\n\t    this[fnName] = function () {\n\t      if (this.sourceHandler_ && this.sourceHandler_[fnName]) {\n\t        return this.sourceHandler_[fnName].apply(this.sourceHandler_, arguments);\n\t      }\n\t      return originalFn.apply(this, arguments);\n\t    };\n\t  }, _Tech.prototype);\n\t\n\t  /**\n\t   * Create a function for setting the source using a source object\n\t   * and source handlers.\n\t   * Should never be called unless a source handler was found.\n\t   *\n\t   * @param {Tech~SourceObject} source\n\t   *        A source object with src and type keys\n\t   *\n\t   * @return {Tech}\n\t   *         Returns itself; this method is chainable\n\t   */\n\t  _Tech.prototype.setSource = function (source) {\n\t    var sh = _Tech.selectSourceHandler(source, this.options_);\n\t\n\t    if (!sh) {\n\t      // Fall back to a native source hander when unsupported sources are\n\t      // deliberately set\n\t      if (_Tech.nativeSourceHandler) {\n\t        sh = _Tech.nativeSourceHandler;\n\t      } else {\n\t        _log2['default'].error('No source hander found for the current source.');\n\t      }\n\t    }\n\t\n\t    // Dispose any existing source handler\n\t    this.disposeSourceHandler();\n\t    this.off('dispose', this.disposeSourceHandler);\n\t\n\t    if (sh !== _Tech.nativeSourceHandler) {\n\t      this.currentSource_ = source;\n\t\n\t      // Catch if someone replaced the src without calling setSource.\n\t      // If they do, set currentSource_ to null and dispose our source handler.\n\t      this.off(this.el_, 'loadstart', _Tech.prototype.firstLoadStartListener_);\n\t      this.off(this.el_, 'loadstart', _Tech.prototype.successiveLoadStartListener_);\n\t      this.one(this.el_, 'loadstart', _Tech.prototype.firstLoadStartListener_);\n\t    }\n\t\n\t    this.sourceHandler_ = sh.handleSource(source, this, this.options_);\n\t    this.on('dispose', this.disposeSourceHandler);\n\t\n\t    return this;\n\t  };\n\t\n\t  /**\n\t   * Called once for the first loadstart of a video.\n\t   *\n\t   * @listens Tech#loadstart\n\t   */\n\t  _Tech.prototype.firstLoadStartListener_ = function () {\n\t    this.one(this.el_, 'loadstart', _Tech.prototype.successiveLoadStartListener_);\n\t  };\n\t\n\t  // On successive loadstarts when setSource has not been called again\n\t  /**\n\t   * Called after the first loadstart for a video occurs.\n\t   *\n\t   * @listens Tech#loadstart\n\t   */\n\t  _Tech.prototype.successiveLoadStartListener_ = function () {\n\t    this.disposeSourceHandler();\n\t    this.one(this.el_, 'loadstart', _Tech.prototype.successiveLoadStartListener_);\n\t  };\n\t\n\t  /**\n\t   * Clean up any existing SourceHandlers and listeners when the Tech is disposed.\n\t   *\n\t   * @listens Tech#dispose\n\t   */\n\t  _Tech.prototype.disposeSourceHandler = function () {\n\t    // if we have a source and get another one\n\t    // then we are loading something new\n\t    // than clear all of our current tracks\n\t    if (this.currentSource_) {\n\t      this.clearTracks(['audio', 'video']);\n\t      this.currentSource_ = null;\n\t    }\n\t\n\t    // always clean up auto-text tracks\n\t    this.cleanupAutoTextTracks();\n\t\n\t    if (this.sourceHandler_) {\n\t      this.off(this.el_, 'loadstart', _Tech.prototype.firstLoadStartListener_);\n\t      this.off(this.el_, 'loadstart', _Tech.prototype.successiveLoadStartListener_);\n\t\n\t      if (this.sourceHandler_.dispose) {\n\t        this.sourceHandler_.dispose();\n\t      }\n\t\n\t      this.sourceHandler_ = null;\n\t    }\n\t  };\n\t};\n\t\n\t_component2['default'].registerComponent('Tech', Tech);\n\t// Old name for Tech\n\t// @deprecated\n\t_component2['default'].registerComponent('MediaTechController', Tech);\n\tTech.registerTech('Tech', Tech);\n\texports['default'] = Tech;\n\n\n/***/ },\n/* 30 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\texports.__esModule = true;\n\t\n\tvar _browser = __webpack_require__(12);\n\t\n\tvar browser = _interopRequireWildcard(_browser);\n\t\n\tvar _document = __webpack_require__(5);\n\t\n\tvar _document2 = _interopRequireDefault(_document);\n\t\n\tvar _eventTarget = __webpack_require__(20);\n\t\n\tvar _eventTarget2 = _interopRequireDefault(_eventTarget);\n\t\n\tvar _textTrack = __webpack_require__(31);\n\t\n\tvar _textTrack2 = _interopRequireDefault(_textTrack);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\t\n\tfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj['default'] = obj; return newObj; } }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /**\n\t                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * @file html-track-element.js\n\t                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                */\n\t\n\t/**\n\t * @typedef {HTMLTrackElement~ReadyState}\n\t * @enum {number}\n\t */\n\tvar NONE = 0;\n\tvar LOADING = 1;\n\tvar LOADED = 2;\n\tvar ERROR = 3;\n\t\n\t/**\n\t * A single track represented in the DOM.\n\t *\n\t * @see [Spec]{@link https://html.spec.whatwg.org/multipage/embedded-content.html#htmltrackelement}\n\t * @extends EventTarget\n\t */\n\t\n\tvar HTMLTrackElement = function (_EventTarget) {\n\t  _inherits(HTMLTrackElement, _EventTarget);\n\t\n\t  /**\n\t   * Create an instance of this class.\n\t   *\n\t   * @param {Object} options={}\n\t   *        Object of option names and values\n\t   *\n\t   * @param {Tech} options.tech\n\t   *        A reference to the tech that owns this HTMLTrackElement.\n\t   *\n\t   * @param {TextTrack~Kind} [options.kind='subtitles']\n\t   *        A valid text track kind.\n\t   *\n\t   * @param {TextTrack~Mode} [options.mode='disabled']\n\t   *        A valid text track mode.\n\t   *\n\t   * @param {string} [options.id='vjs_track_' + Guid.newGUID()]\n\t   *        A unique id for this TextTrack.\n\t   *\n\t   * @param {string} [options.label='']\n\t   *        The menu label for this track.\n\t   *\n\t   * @param {string} [options.language='']\n\t   *        A valid two character language code.\n\t   *\n\t   * @param {string} [options.srclang='']\n\t   *        A valid two character language code. An alternative, but deprioritized\n\t   *        vesion of `options.language`\n\t   *\n\t   * @param {string} [options.src]\n\t   *        A url to TextTrack cues.\n\t   *\n\t   * @param {boolean} [options.default]\n\t   *        If this track should default to on or off.\n\t   */\n\t  function HTMLTrackElement() {\n\t    var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\t\n\t    _classCallCheck(this, HTMLTrackElement);\n\t\n\t    var _this = _possibleConstructorReturn(this, _EventTarget.call(this));\n\t\n\t    var readyState = void 0;\n\t    var trackElement = _this; // eslint-disable-line\n\t\n\t    if (browser.IS_IE8) {\n\t      trackElement = _document2['default'].createElement('custom');\n\t\n\t      for (var prop in HTMLTrackElement.prototype) {\n\t        if (prop !== 'constructor') {\n\t          trackElement[prop] = HTMLTrackElement.prototype[prop];\n\t        }\n\t      }\n\t    }\n\t\n\t    var track = new _textTrack2['default'](options);\n\t\n\t    trackElement.kind = track.kind;\n\t    trackElement.src = track.src;\n\t    trackElement.srclang = track.language;\n\t    trackElement.label = track.label;\n\t    trackElement['default'] = track['default'];\n\t\n\t    /**\n\t     * @member {HTMLTrackElement~ReadyState} readyState\n\t     *         The current ready state of the track element.\n\t     */\n\t    Object.defineProperty(trackElement, 'readyState', {\n\t      get: function get() {\n\t        return readyState;\n\t      }\n\t    });\n\t\n\t    /**\n\t     * @member {TextTrack} track\n\t     *         The underlying TextTrack object.\n\t     */\n\t    Object.defineProperty(trackElement, 'track', {\n\t      get: function get() {\n\t        return track;\n\t      }\n\t    });\n\t\n\t    readyState = NONE;\n\t\n\t    /**\n\t     * @listens TextTrack#loadeddata\n\t     * @fires HTMLTrackElement#load\n\t     */\n\t    track.addEventListener('loadeddata', function () {\n\t      readyState = LOADED;\n\t\n\t      trackElement.trigger({\n\t        type: 'load',\n\t        target: trackElement\n\t      });\n\t    });\n\t\n\t    if (browser.IS_IE8) {\n\t      var _ret;\n\t\n\t      return _ret = trackElement, _possibleConstructorReturn(_this, _ret);\n\t    }\n\t    return _this;\n\t  }\n\t\n\t  return HTMLTrackElement;\n\t}(_eventTarget2['default']);\n\t\n\tHTMLTrackElement.prototype.allowedEvents_ = {\n\t  load: 'load'\n\t};\n\t\n\tHTMLTrackElement.NONE = NONE;\n\tHTMLTrackElement.LOADING = LOADING;\n\tHTMLTrackElement.LOADED = LOADED;\n\tHTMLTrackElement.ERROR = ERROR;\n\t\n\texports['default'] = HTMLTrackElement;\n\n\n/***/ },\n/* 31 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\texports.__esModule = true;\n\t\n\tvar _textTrackCueList = __webpack_require__(32);\n\t\n\tvar _textTrackCueList2 = _interopRequireDefault(_textTrackCueList);\n\t\n\tvar _fn = __webpack_require__(17);\n\t\n\tvar Fn = _interopRequireWildcard(_fn);\n\t\n\tvar _trackEnums = __webpack_require__(33);\n\t\n\tvar _log = __webpack_require__(11);\n\t\n\tvar _log2 = _interopRequireDefault(_log);\n\t\n\tvar _window = __webpack_require__(4);\n\t\n\tvar _window2 = _interopRequireDefault(_window);\n\t\n\tvar _track = __webpack_require__(34);\n\t\n\tvar _track2 = _interopRequireDefault(_track);\n\t\n\tvar _url = __webpack_require__(35);\n\t\n\tvar _xhr = __webpack_require__(36);\n\t\n\tvar _xhr2 = _interopRequireDefault(_xhr);\n\t\n\tvar _mergeOptions = __webpack_require__(19);\n\t\n\tvar _mergeOptions2 = _interopRequireDefault(_mergeOptions);\n\t\n\tvar _browser = __webpack_require__(12);\n\t\n\tvar browser = _interopRequireWildcard(_browser);\n\t\n\tfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj['default'] = obj; return newObj; } }\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /**\n\t                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * @file text-track.js\n\t                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                */\n\t\n\t\n\t/**\n\t * Takes a webvtt file contents and parses it into cues\n\t *\n\t * @param {string} srcContent\n\t *        webVTT file contents\n\t *\n\t * @param {TextTrack} track\n\t *        TextTrack to add cues to. Cues come from the srcContent.\n\t *\n\t * @private\n\t */\n\tvar parseCues = function parseCues(srcContent, track) {\n\t  var parser = new _window2['default'].WebVTT.Parser(_window2['default'], _window2['default'].vttjs, _window2['default'].WebVTT.StringDecoder());\n\t  var errors = [];\n\t\n\t  parser.oncue = function (cue) {\n\t    track.addCue(cue);\n\t  };\n\t\n\t  parser.onparsingerror = function (error) {\n\t    errors.push(error);\n\t  };\n\t\n\t  parser.onflush = function () {\n\t    track.trigger({\n\t      type: 'loadeddata',\n\t      target: track\n\t    });\n\t  };\n\t\n\t  parser.parse(srcContent);\n\t  if (errors.length > 0) {\n\t    if (_window2['default'].console && _window2['default'].console.groupCollapsed) {\n\t      _window2['default'].console.groupCollapsed('Text Track parsing errors for ' + track.src);\n\t    }\n\t    errors.forEach(function (error) {\n\t      return _log2['default'].error(error);\n\t    });\n\t    if (_window2['default'].console && _window2['default'].console.groupEnd) {\n\t      _window2['default'].console.groupEnd();\n\t    }\n\t  }\n\t\n\t  parser.flush();\n\t};\n\t\n\t/**\n\t * Load a `TextTrack` from a specifed url.\n\t *\n\t * @param {string} src\n\t *        Url to load track from.\n\t *\n\t * @param {TextTrack} track\n\t *        Track to add cues to. Comes from the content at the end of `url`.\n\t *\n\t * @private\n\t */\n\tvar loadTrack = function loadTrack(src, track) {\n\t  var opts = {\n\t    uri: src\n\t  };\n\t  var crossOrigin = (0, _url.isCrossOrigin)(src);\n\t\n\t  if (crossOrigin) {\n\t    opts.cors = crossOrigin;\n\t  }\n\t\n\t  (0, _xhr2['default'])(opts, Fn.bind(this, function (err, response, responseBody) {\n\t    if (err) {\n\t      return _log2['default'].error(err, response);\n\t    }\n\t\n\t    track.loaded_ = true;\n\t\n\t    // Make sure that vttjs has loaded, otherwise, wait till it finished loading\n\t    // NOTE: this is only used for the alt/video.novtt.js build\n\t    if (typeof _window2['default'].WebVTT !== 'function') {\n\t      if (track.tech_) {\n\t        (function () {\n\t          var loadHandler = function loadHandler() {\n\t            return parseCues(responseBody, track);\n\t          };\n\t\n\t          track.tech_.on('vttjsloaded', loadHandler);\n\t          track.tech_.on('vttjserror', function () {\n\t            _log2['default'].error('vttjs failed to load, stopping trying to process ' + track.src);\n\t            track.tech_.off('vttjsloaded', loadHandler);\n\t          });\n\t        })();\n\t      }\n\t    } else {\n\t      parseCues(responseBody, track);\n\t    }\n\t  }));\n\t};\n\t\n\t/**\n\t * A representation of a single `TextTrack`.\n\t *\n\t * @see [Spec]{@link https://html.spec.whatwg.org/multipage/embedded-content.html#texttrack}\n\t * @extends Track\n\t */\n\t\n\tvar TextTrack = function (_Track) {\n\t  _inherits(TextTrack, _Track);\n\t\n\t  /**\n\t   * Create an instance of this class.\n\t   *\n\t   * @param {Object} options={}\n\t   *        Object of option names and values\n\t   *\n\t   * @param {Tech} options.tech\n\t   *        A reference to the tech that owns this TextTrack.\n\t   *\n\t   * @param {TextTrack~Kind} [options.kind='subtitles']\n\t   *        A valid text track kind.\n\t   *\n\t   * @param {TextTrack~Mode} [options.mode='disabled']\n\t   *        A valid text track mode.\n\t   *\n\t   * @param {string} [options.id='vjs_track_' + Guid.newGUID()]\n\t   *        A unique id for this TextTrack.\n\t   *\n\t   * @param {string} [options.label='']\n\t   *        The menu label for this track.\n\t   *\n\t   * @param {string} [options.language='']\n\t   *        A valid two character language code.\n\t   *\n\t   * @param {string} [options.srclang='']\n\t   *        A valid two character language code. An alternative, but deprioritized\n\t   *        vesion of `options.language`\n\t   *\n\t   * @param {string} [options.src]\n\t   *        A url to TextTrack cues.\n\t   *\n\t   * @param {boolean} [options.default]\n\t   *        If this track should default to on or off.\n\t   */\n\t  function TextTrack() {\n\t    var _this, _ret2;\n\t\n\t    var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\t\n\t    _classCallCheck(this, TextTrack);\n\t\n\t    if (!options.tech) {\n\t      throw new Error('A tech was not provided.');\n\t    }\n\t\n\t    var settings = (0, _mergeOptions2['default'])(options, {\n\t      kind: _trackEnums.TextTrackKind[options.kind] || 'subtitles',\n\t      language: options.language || options.srclang || ''\n\t    });\n\t    var mode = _trackEnums.TextTrackMode[settings.mode] || 'disabled';\n\t    var default_ = settings['default'];\n\t\n\t    if (settings.kind === 'metadata' || settings.kind === 'chapters') {\n\t      mode = 'hidden';\n\t    }\n\t    // on IE8 this will be a document element\n\t    // for every other browser this will be a normal object\n\t    var tt = (_this = _possibleConstructorReturn(this, _Track.call(this, settings)), _this);\n\t\n\t    tt.tech_ = settings.tech;\n\t\n\t    if (browser.IS_IE8) {\n\t      for (var prop in TextTrack.prototype) {\n\t        if (prop !== 'constructor') {\n\t          tt[prop] = TextTrack.prototype[prop];\n\t        }\n\t      }\n\t    }\n\t\n\t    tt.cues_ = [];\n\t    tt.activeCues_ = [];\n\t\n\t    var cues = new _textTrackCueList2['default'](tt.cues_);\n\t    var activeCues = new _textTrackCueList2['default'](tt.activeCues_);\n\t    var changed = false;\n\t    var timeupdateHandler = Fn.bind(tt, function () {\n\t\n\t      // Accessing this.activeCues for the side-effects of updating itself\n\t      // due to it's nature as a getter function. Do not remove or cues will\n\t      // stop updating!\n\t      /* eslint-disable no-unused-expressions */\n\t      this.activeCues;\n\t      /* eslint-enable no-unused-expressions */\n\t      if (changed) {\n\t        this.trigger('cuechange');\n\t        changed = false;\n\t      }\n\t    });\n\t\n\t    if (mode !== 'disabled') {\n\t      tt.tech_.on('timeupdate', timeupdateHandler);\n\t    }\n\t\n\t    /**\n\t     * @member {boolean} default\n\t     *         If this track was set to be on or off by default. Cannot be changed after\n\t     *         creation.\n\t     *\n\t     * @readonly\n\t     */\n\t    Object.defineProperty(tt, 'default', {\n\t      get: function get() {\n\t        return default_;\n\t      },\n\t      set: function set() {}\n\t    });\n\t\n\t    /**\n\t     * @member {string} mode\n\t     *         Set the mode of this TextTrack to a valid {@link TextTrack~Mode}. Will\n\t     *         not be set if setting to an invalid mode.\n\t     *\n\t     * @fires TextTrack#modechange\n\t     */\n\t    Object.defineProperty(tt, 'mode', {\n\t      get: function get() {\n\t        return mode;\n\t      },\n\t      set: function set(newMode) {\n\t        if (!_trackEnums.TextTrackMode[newMode]) {\n\t          return;\n\t        }\n\t        mode = newMode;\n\t        if (mode === 'showing') {\n\t          this.tech_.on('timeupdate', timeupdateHandler);\n\t        }\n\t        /**\n\t         * An event that fires when mode changes on this track. This allows\n\t         * the TextTrackList that holds this track to act accordingly.\n\t         *\n\t         * > Note: This is not part of the spec!\n\t         *\n\t         * @event TextTrack#modechange\n\t         * @type {EventTarget~Event}\n\t         */\n\t        this.trigger('modechange');\n\t      }\n\t    });\n\t\n\t    /**\n\t     * @member {TextTrackCueList} cues\n\t     *         The text track cue list for this TextTrack.\n\t     */\n\t    Object.defineProperty(tt, 'cues', {\n\t      get: function get() {\n\t        if (!this.loaded_) {\n\t          return null;\n\t        }\n\t\n\t        return cues;\n\t      },\n\t      set: function set() {}\n\t    });\n\t\n\t    /**\n\t     * @member {TextTrackCueList} activeCues\n\t     *         The list text track cues that are currently active for this TextTrack.\n\t     */\n\t    Object.defineProperty(tt, 'activeCues', {\n\t      get: function get() {\n\t        if (!this.loaded_) {\n\t          return null;\n\t        }\n\t\n\t        // nothing to do\n\t        if (this.cues.length === 0) {\n\t          return activeCues;\n\t        }\n\t\n\t        var ct = this.tech_.currentTime();\n\t        var active = [];\n\t\n\t        for (var i = 0, l = this.cues.length; i < l; i++) {\n\t          var cue = this.cues[i];\n\t\n\t          if (cue.startTime <= ct && cue.endTime >= ct) {\n\t            active.push(cue);\n\t          } else if (cue.startTime === cue.endTime && cue.startTime <= ct && cue.startTime + 0.5 >= ct) {\n\t            active.push(cue);\n\t          }\n\t        }\n\t\n\t        changed = false;\n\t\n\t        if (active.length !== this.activeCues_.length) {\n\t          changed = true;\n\t        } else {\n\t          for (var _i = 0; _i < active.length; _i++) {\n\t            if (this.activeCues_.indexOf(active[_i]) === -1) {\n\t              changed = true;\n\t            }\n\t          }\n\t        }\n\t\n\t        this.activeCues_ = active;\n\t        activeCues.setCues_(this.activeCues_);\n\t\n\t        return activeCues;\n\t      },\n\t      set: function set() {}\n\t    });\n\t\n\t    if (settings.src) {\n\t      tt.src = settings.src;\n\t      loadTrack(settings.src, tt);\n\t    } else {\n\t      tt.loaded_ = true;\n\t    }\n\t\n\t    return _ret2 = tt, _possibleConstructorReturn(_this, _ret2);\n\t  }\n\t\n\t  /**\n\t   * Add a cue to the internal list of cues.\n\t   *\n\t   * @param {TextTrack~Cue} cue\n\t   *        The cue to add to our internal list\n\t   */\n\t\n\t\n\t  TextTrack.prototype.addCue = function addCue(cue) {\n\t    var tracks = this.tech_.textTracks();\n\t\n\t    if (tracks) {\n\t      for (var i = 0; i < tracks.length; i++) {\n\t        if (tracks[i] !== this) {\n\t          tracks[i].removeCue(cue);\n\t        }\n\t      }\n\t    }\n\t\n\t    this.cues_.push(cue);\n\t    this.cues.setCues_(this.cues_);\n\t  };\n\t\n\t  /**\n\t   * Remove a cue from our internal list\n\t   *\n\t   * @param {TextTrack~Cue} removeCue\n\t   *        The cue to remove from our internal list\n\t   */\n\t\n\t\n\t  TextTrack.prototype.removeCue = function removeCue(_removeCue) {\n\t    var removed = false;\n\t\n\t    for (var i = 0, l = this.cues_.length; i < l; i++) {\n\t      var cue = this.cues_[i];\n\t\n\t      if (cue === _removeCue) {\n\t        this.cues_.splice(i, 1);\n\t        removed = true;\n\t      }\n\t    }\n\t\n\t    if (removed) {\n\t      this.cues.setCues_(this.cues_);\n\t    }\n\t  };\n\t\n\t  return TextTrack;\n\t}(_track2['default']);\n\t\n\t/**\n\t * cuechange - One or more cues in the track have become active or stopped being active.\n\t */\n\t\n\t\n\tTextTrack.prototype.allowedEvents_ = {\n\t  cuechange: 'cuechange'\n\t};\n\t\n\texports['default'] = TextTrack;\n\n\n/***/ },\n/* 32 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\texports.__esModule = true;\n\t\n\tvar _browser = __webpack_require__(12);\n\t\n\tvar browser = _interopRequireWildcard(_browser);\n\t\n\tvar _document = __webpack_require__(5);\n\t\n\tvar _document2 = _interopRequireDefault(_document);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\t\n\tfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj['default'] = obj; return newObj; } }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } } /**\n\t                                                                                                                                                           * @file text-track-cue-list.js\n\t                                                                                                                                                           */\n\t\n\t\n\t/**\n\t * @typedef {Object} TextTrackCue\n\t *\n\t * @property {string} id\n\t *           The unique id for this text track cue\n\t *\n\t * @property {number} startTime\n\t *           The start time for this text track cue\n\t *\n\t * @property {number} endTime\n\t *           The end time for this text track cue\n\t *\n\t * @property {boolean} pauseOnExit\n\t *           Pause when the end time is reached if true.\n\t *\n\t * @see [Spec]{@link https://html.spec.whatwg.org/multipage/embedded-content.html#texttrackcue}\n\t */\n\t\n\t/**\n\t * A List of TextTrackCues.\n\t *\n\t * @see [Spec]{@link https://html.spec.whatwg.org/multipage/embedded-content.html#texttrackcuelist}\n\t */\n\tvar TextTrackCueList = function () {\n\t\n\t  /**\n\t   * Create an instance of this class..\n\t   *\n\t   * @param {Array} cues\n\t   *        A list of cues to be initialized with\n\t   */\n\t  function TextTrackCueList(cues) {\n\t    _classCallCheck(this, TextTrackCueList);\n\t\n\t    var list = this; // eslint-disable-line\n\t\n\t    if (browser.IS_IE8) {\n\t      list = _document2['default'].createElement('custom');\n\t\n\t      for (var prop in TextTrackCueList.prototype) {\n\t        if (prop !== 'constructor') {\n\t          list[prop] = TextTrackCueList.prototype[prop];\n\t        }\n\t      }\n\t    }\n\t\n\t    TextTrackCueList.prototype.setCues_.call(list, cues);\n\t\n\t    /**\n\t     * @member {number} length\n\t     *         The current number of `TextTrackCue`s in the TextTrackCueList.\n\t     */\n\t    Object.defineProperty(list, 'length', {\n\t      get: function get() {\n\t        return this.length_;\n\t      }\n\t    });\n\t\n\t    if (browser.IS_IE8) {\n\t      return list;\n\t    }\n\t  }\n\t\n\t  /**\n\t   * A setter for cues in this list. Creates getters\n\t   * an an index for the cues.\n\t   *\n\t   * @param {Array} cues\n\t   *        An array of cues to set\n\t   *\n\t   * @private\n\t   */\n\t\n\t\n\t  TextTrackCueList.prototype.setCues_ = function setCues_(cues) {\n\t    var oldLength = this.length || 0;\n\t    var i = 0;\n\t    var l = cues.length;\n\t\n\t    this.cues_ = cues;\n\t    this.length_ = cues.length;\n\t\n\t    var defineProp = function defineProp(index) {\n\t      if (!('' + index in this)) {\n\t        Object.defineProperty(this, '' + index, {\n\t          get: function get() {\n\t            return this.cues_[index];\n\t          }\n\t        });\n\t      }\n\t    };\n\t\n\t    if (oldLength < l) {\n\t      i = oldLength;\n\t\n\t      for (; i < l; i++) {\n\t        defineProp.call(this, i);\n\t      }\n\t    }\n\t  };\n\t\n\t  /**\n\t   * Get a `TextTrackCue` that is currently in the `TextTrackCueList` by id.\n\t   *\n\t   * @param {string} id\n\t   *        The id of the cue that should be searched for.\n\t   *\n\t   * @return {TextTrackCue|null}\n\t   *         A single cue or null if none was found.\n\t   */\n\t\n\t\n\t  TextTrackCueList.prototype.getCueById = function getCueById(id) {\n\t    var result = null;\n\t\n\t    for (var i = 0, l = this.length; i < l; i++) {\n\t      var cue = this[i];\n\t\n\t      if (cue.id === id) {\n\t        result = cue;\n\t        break;\n\t      }\n\t    }\n\t\n\t    return result;\n\t  };\n\t\n\t  return TextTrackCueList;\n\t}();\n\t\n\texports['default'] = TextTrackCueList;\n\n\n/***/ },\n/* 33 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\texports.__esModule = true;\n\t/**\n\t * @file track-kinds.js\n\t */\n\t\n\t/**\n\t * All possible `VideoTrackKind`s\n\t *\n\t * @see https://html.spec.whatwg.org/multipage/embedded-content.html#dom-videotrack-kind\n\t * @typedef VideoTrack~Kind\n\t * @enum\n\t */\n\tvar VideoTrackKind = exports.VideoTrackKind = {\n\t  alternative: 'alternative',\n\t  captions: 'captions',\n\t  main: 'main',\n\t  sign: 'sign',\n\t  subtitles: 'subtitles',\n\t  commentary: 'commentary'\n\t};\n\t\n\t/**\n\t * All possible `AudioTrackKind`s\n\t *\n\t * @see https://html.spec.whatwg.org/multipage/embedded-content.html#dom-audiotrack-kind\n\t * @typedef AudioTrack~Kind\n\t * @enum\n\t */\n\tvar AudioTrackKind = exports.AudioTrackKind = {\n\t  'alternative': 'alternative',\n\t  'descriptions': 'descriptions',\n\t  'main': 'main',\n\t  'main-desc': 'main-desc',\n\t  'translation': 'translation',\n\t  'commentary': 'commentary'\n\t};\n\t\n\t/**\n\t * All possible `TextTrackKind`s\n\t *\n\t * @see https://html.spec.whatwg.org/multipage/embedded-content.html#dom-texttrack-kind\n\t * @typedef TextTrack~Kind\n\t * @enum\n\t */\n\tvar TextTrackKind = exports.TextTrackKind = {\n\t  subtitles: 'subtitles',\n\t  captions: 'captions',\n\t  descriptions: 'descriptions',\n\t  chapters: 'chapters',\n\t  metadata: 'metadata'\n\t};\n\t\n\t/**\n\t * All possible `TextTrackMode`s\n\t *\n\t * @see https://html.spec.whatwg.org/multipage/embedded-content.html#texttrackmode\n\t * @typedef TextTrack~Mode\n\t * @enum\n\t */\n\tvar TextTrackMode = exports.TextTrackMode = {\n\t  disabled: 'disabled',\n\t  hidden: 'hidden',\n\t  showing: 'showing'\n\t};\n\n\n/***/ },\n/* 34 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\texports.__esModule = true;\n\t\n\tvar _browser = __webpack_require__(12);\n\t\n\tvar browser = _interopRequireWildcard(_browser);\n\t\n\tvar _document = __webpack_require__(5);\n\t\n\tvar _document2 = _interopRequireDefault(_document);\n\t\n\tvar _guid = __webpack_require__(10);\n\t\n\tvar Guid = _interopRequireWildcard(_guid);\n\t\n\tvar _eventTarget = __webpack_require__(20);\n\t\n\tvar _eventTarget2 = _interopRequireDefault(_eventTarget);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\t\n\tfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj['default'] = obj; return newObj; } }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /**\n\t                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * @file track.js\n\t                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                */\n\t\n\t\n\t/**\n\t * A Track class that contains all of the common functionality for {@link AudioTrack},\n\t * {@link VideoTrack}, and {@link TextTrack}.\n\t *\n\t * > Note: This class should not be used directly\n\t *\n\t * @see {@link https://html.spec.whatwg.org/multipage/embedded-content.html}\n\t * @extends EventTarget\n\t * @abstract\n\t */\n\tvar Track = function (_EventTarget) {\n\t  _inherits(Track, _EventTarget);\n\t\n\t  /**\n\t   * Create an instance of this class.\n\t   *\n\t   * @param {Object} [options={}]\n\t   *        Object of option names and values\n\t   *\n\t   * @param {string} [options.kind='']\n\t   *        A valid kind for the track type you are creating.\n\t   *\n\t   * @param {string} [options.id='vjs_track_' + Guid.newGUID()]\n\t   *        A unique id for this AudioTrack.\n\t   *\n\t   * @param {string} [options.label='']\n\t   *        The menu label for this track.\n\t   *\n\t   * @param {string} [options.language='']\n\t   *        A valid two character language code.\n\t   *\n\t   * @abstract\n\t   */\n\t  function Track() {\n\t    var _ret;\n\t\n\t    var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\t\n\t    _classCallCheck(this, Track);\n\t\n\t    var _this = _possibleConstructorReturn(this, _EventTarget.call(this));\n\t\n\t    var track = _this; // eslint-disable-line\n\t\n\t    if (browser.IS_IE8) {\n\t      track = _document2['default'].createElement('custom');\n\t      for (var prop in Track.prototype) {\n\t        if (prop !== 'constructor') {\n\t          track[prop] = Track.prototype[prop];\n\t        }\n\t      }\n\t    }\n\t\n\t    var trackProps = {\n\t      id: options.id || 'vjs_track_' + Guid.newGUID(),\n\t      kind: options.kind || '',\n\t      label: options.label || '',\n\t      language: options.language || ''\n\t    };\n\t\n\t    /**\n\t     * @member {string} id\n\t     *         The id of this track. Cannot be changed after creation.\n\t     *\n\t     * @readonly\n\t     */\n\t\n\t    /**\n\t     * @member {string} kind\n\t     *         The kind of track that this is. Cannot be changed after creation.\n\t     *\n\t     * @readonly\n\t     */\n\t\n\t    /**\n\t     * @member {string} label\n\t     *         The label of this track. Cannot be changed after creation.\n\t     *\n\t     * @readonly\n\t     */\n\t\n\t    /**\n\t     * @member {string} language\n\t     *         The two letter language code for this track. Cannot be changed after\n\t     *         creation.\n\t     *\n\t     * @readonly\n\t     */\n\t\n\t    var _loop = function _loop(key) {\n\t      Object.defineProperty(track, key, {\n\t        get: function get() {\n\t          return trackProps[key];\n\t        },\n\t        set: function set() {}\n\t      });\n\t    };\n\t\n\t    for (var key in trackProps) {\n\t      _loop(key);\n\t    }\n\t\n\t    return _ret = track, _possibleConstructorReturn(_this, _ret);\n\t  }\n\t\n\t  return Track;\n\t}(_eventTarget2['default']);\n\t\n\texports['default'] = Track;\n\n\n/***/ },\n/* 35 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\texports.__esModule = true;\n\texports.isCrossOrigin = exports.getFileExtension = exports.getAbsoluteURL = exports.parseUrl = undefined;\n\t\n\tvar _document = __webpack_require__(5);\n\t\n\tvar _document2 = _interopRequireDefault(_document);\n\t\n\tvar _window = __webpack_require__(4);\n\t\n\tvar _window2 = _interopRequireDefault(_window);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\t\n\t/**\n\t * @typedef {Object} url:URLObject\n\t *\n\t * @property {string} protocol\n\t *           The protocol of the url that was parsed.\n\t *\n\t * @property {string} hostname\n\t *           The hostname of the url that was parsed.\n\t *\n\t * @property {string} port\n\t *           The port of the url that was parsed.\n\t *\n\t * @property {string} pathname\n\t *           The pathname of the url that was parsed.\n\t *\n\t * @property {string} search\n\t *           The search query of the url that was parsed.\n\t *\n\t * @property {string} hash\n\t *           The hash of the url that was parsed.\n\t *\n\t * @property {string} host\n\t *           The host of the url that was parsed.\n\t */\n\t\n\t/**\n\t * Resolve and parse the elements of a URL.\n\t *\n\t * @param  {String} url\n\t *         The url to parse\n\t *\n\t * @return {url:URLObject}\n\t *         An object of url details\n\t */\n\t/**\n\t * @file url.js\n\t * @module url\n\t */\n\tvar parseUrl = exports.parseUrl = function parseUrl(url) {\n\t  var props = ['protocol', 'hostname', 'port', 'pathname', 'search', 'hash', 'host'];\n\t\n\t  // add the url to an anchor and let the browser parse the URL\n\t  var a = _document2['default'].createElement('a');\n\t\n\t  a.href = url;\n\t\n\t  // IE8 (and 9?) Fix\n\t  // ie8 doesn't parse the URL correctly until the anchor is actually\n\t  // added to the body, and an innerHTML is needed to trigger the parsing\n\t  var addToBody = a.host === '' && a.protocol !== 'file:';\n\t  var div = void 0;\n\t\n\t  if (addToBody) {\n\t    div = _document2['default'].createElement('div');\n\t    div.innerHTML = '<a href=\"' + url + '\"></a>';\n\t    a = div.firstChild;\n\t    // prevent the div from affecting layout\n\t    div.setAttribute('style', 'display:none; position:absolute;');\n\t    _document2['default'].body.appendChild(div);\n\t  }\n\t\n\t  // Copy the specific URL properties to a new object\n\t  // This is also needed for IE8 because the anchor loses its\n\t  // properties when it's removed from the dom\n\t  var details = {};\n\t\n\t  for (var i = 0; i < props.length; i++) {\n\t    details[props[i]] = a[props[i]];\n\t  }\n\t\n\t  // IE9 adds the port to the host property unlike everyone else. If\n\t  // a port identifier is added for standard ports, strip it.\n\t  if (details.protocol === 'http:') {\n\t    details.host = details.host.replace(/:80$/, '');\n\t  }\n\t\n\t  if (details.protocol === 'https:') {\n\t    details.host = details.host.replace(/:443$/, '');\n\t  }\n\t\n\t  if (addToBody) {\n\t    _document2['default'].body.removeChild(div);\n\t  }\n\t\n\t  return details;\n\t};\n\t\n\t/**\n\t * Get absolute version of relative URL. Used to tell flash correct URL.\n\t *\n\t *\n\t * @param  {string} url\n\t *         URL to make absolute\n\t *\n\t * @return {string}\n\t *         Absolute URL\n\t *\n\t * @see http://stackoverflow.com/questions/470832/getting-an-absolute-url-from-a-relative-one-ie6-issue\n\t */\n\tvar getAbsoluteURL = exports.getAbsoluteURL = function getAbsoluteURL(url) {\n\t  // Check if absolute URL\n\t  if (!url.match(/^https?:\\/\\//)) {\n\t    // Convert to absolute URL. Flash hosted off-site needs an absolute URL.\n\t    var div = _document2['default'].createElement('div');\n\t\n\t    div.innerHTML = '<a href=\"' + url + '\">x</a>';\n\t    url = div.firstChild.href;\n\t  }\n\t\n\t  return url;\n\t};\n\t\n\t/**\n\t * Returns the extension of the passed file name. It will return an empty string\n\t * if passed an invalid path.\n\t *\n\t * @param {string} path\n\t *        The fileName path like '/path/to/file.mp4'\n\t *\n\t * @returns {string}\n\t *          The extension in lower case or an empty string if no\n\t *          extension could be found.\n\t */\n\tvar getFileExtension = exports.getFileExtension = function getFileExtension(path) {\n\t  if (typeof path === 'string') {\n\t    var splitPathRe = /^(\\/?)([\\s\\S]*?)((?:\\.{1,2}|[^\\/]+?)(\\.([^\\.\\/\\?]+)))(?:[\\/]*|[\\?].*)$/i;\n\t    var pathParts = splitPathRe.exec(path);\n\t\n\t    if (pathParts) {\n\t      return pathParts.pop().toLowerCase();\n\t    }\n\t  }\n\t\n\t  return '';\n\t};\n\t\n\t/**\n\t * Returns whether the url passed is a cross domain request or not.\n\t *\n\t * @param {string} url\n\t *        The url to check.\n\t *\n\t * @return {boolean}\n\t *         Whether it is a cross domain request or not.\n\t */\n\tvar isCrossOrigin = exports.isCrossOrigin = function isCrossOrigin(url) {\n\t  var winLoc = _window2['default'].location;\n\t  var urlInfo = parseUrl(url);\n\t\n\t  // IE8 protocol relative urls will return ':' for protocol\n\t  var srcProtocol = urlInfo.protocol === ':' ? winLoc.protocol : urlInfo.protocol;\n\t\n\t  // Check if url is for another domain/origin\n\t  // IE8 doesn't know location.origin, so we won't rely on it here\n\t  var crossOrigin = srcProtocol + urlInfo.host !== winLoc.protocol + winLoc.host;\n\t\n\t  return crossOrigin;\n\t};\n\n\n/***/ },\n/* 36 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\tvar window = __webpack_require__(4)\n\tvar once = __webpack_require__(37)\n\tvar isFunction = __webpack_require__(38)\n\tvar parseHeaders = __webpack_require__(39)\n\tvar xtend = __webpack_require__(42)\n\t\n\tmodule.exports = createXHR\n\tcreateXHR.XMLHttpRequest = window.XMLHttpRequest || noop\n\tcreateXHR.XDomainRequest = \"withCredentials\" in (new createXHR.XMLHttpRequest()) ? createXHR.XMLHttpRequest : window.XDomainRequest\n\t\n\tforEachArray([\"get\", \"put\", \"post\", \"patch\", \"head\", \"delete\"], function(method) {\n\t    createXHR[method === \"delete\" ? \"del\" : method] = function(uri, options, callback) {\n\t        options = initParams(uri, options, callback)\n\t        options.method = method.toUpperCase()\n\t        return _createXHR(options)\n\t    }\n\t})\n\t\n\tfunction forEachArray(array, iterator) {\n\t    for (var i = 0; i < array.length; i++) {\n\t        iterator(array[i])\n\t    }\n\t}\n\t\n\tfunction isEmpty(obj){\n\t    for(var i in obj){\n\t        if(obj.hasOwnProperty(i)) return false\n\t    }\n\t    return true\n\t}\n\t\n\tfunction initParams(uri, options, callback) {\n\t    var params = uri\n\t\n\t    if (isFunction(options)) {\n\t        callback = options\n\t        if (typeof uri === \"string\") {\n\t            params = {uri:uri}\n\t        }\n\t    } else {\n\t        params = xtend(options, {uri: uri})\n\t    }\n\t\n\t    params.callback = callback\n\t    return params\n\t}\n\t\n\tfunction createXHR(uri, options, callback) {\n\t    options = initParams(uri, options, callback)\n\t    return _createXHR(options)\n\t}\n\t\n\tfunction _createXHR(options) {\n\t    var callback = options.callback\n\t    if(typeof callback === \"undefined\"){\n\t        throw new Error(\"callback argument missing\")\n\t    }\n\t    callback = once(callback)\n\t\n\t    function readystatechange() {\n\t        if (xhr.readyState === 4) {\n\t            loadFunc()\n\t        }\n\t    }\n\t\n\t    function getBody() {\n\t        // Chrome with requestType=blob throws errors arround when even testing access to responseText\n\t        var body = undefined\n\t\n\t        if (xhr.response) {\n\t            body = xhr.response\n\t        } else if (xhr.responseType === \"text\" || !xhr.responseType) {\n\t            body = xhr.responseText || xhr.responseXML\n\t        }\n\t\n\t        if (isJson) {\n\t            try {\n\t                body = JSON.parse(body)\n\t            } catch (e) {}\n\t        }\n\t\n\t        return body\n\t    }\n\t\n\t    var failureResponse = {\n\t                body: undefined,\n\t                headers: {},\n\t                statusCode: 0,\n\t                method: method,\n\t                url: uri,\n\t                rawRequest: xhr\n\t            }\n\t\n\t    function errorFunc(evt) {\n\t        clearTimeout(timeoutTimer)\n\t        if(!(evt instanceof Error)){\n\t            evt = new Error(\"\" + (evt || \"Unknown XMLHttpRequest Error\") )\n\t        }\n\t        evt.statusCode = 0\n\t        callback(evt, failureResponse)\n\t    }\n\t\n\t    // will load the data & process the response in a special response object\n\t    function loadFunc() {\n\t        if (aborted) return\n\t        var status\n\t        clearTimeout(timeoutTimer)\n\t        if(options.useXDR && xhr.status===undefined) {\n\t            //IE8 CORS GET successful response doesn't have a status field, but body is fine\n\t            status = 200\n\t        } else {\n\t            status = (xhr.status === 1223 ? 204 : xhr.status)\n\t        }\n\t        var response = failureResponse\n\t        var err = null\n\t\n\t        if (status !== 0){\n\t            response = {\n\t                body: getBody(),\n\t                statusCode: status,\n\t                method: method,\n\t                headers: {},\n\t                url: uri,\n\t                rawRequest: xhr\n\t            }\n\t            if(xhr.getAllResponseHeaders){ //remember xhr can in fact be XDR for CORS in IE\n\t                response.headers = parseHeaders(xhr.getAllResponseHeaders())\n\t            }\n\t        } else {\n\t            err = new Error(\"Internal XMLHttpRequest Error\")\n\t        }\n\t        callback(err, response, response.body)\n\t\n\t    }\n\t\n\t    var xhr = options.xhr || null\n\t\n\t    if (!xhr) {\n\t        if (options.cors || options.useXDR) {\n\t            xhr = new createXHR.XDomainRequest()\n\t        }else{\n\t            xhr = new createXHR.XMLHttpRequest()\n\t        }\n\t    }\n\t\n\t    var key\n\t    var aborted\n\t    var uri = xhr.url = options.uri || options.url\n\t    var method = xhr.method = options.method || \"GET\"\n\t    var body = options.body || options.data || null\n\t    var headers = xhr.headers = options.headers || {}\n\t    var sync = !!options.sync\n\t    var isJson = false\n\t    var timeoutTimer\n\t\n\t    if (\"json\" in options) {\n\t        isJson = true\n\t        headers[\"accept\"] || headers[\"Accept\"] || (headers[\"Accept\"] = \"application/json\") //Don't override existing accept header declared by user\n\t        if (method !== \"GET\" && method !== \"HEAD\") {\n\t            headers[\"content-type\"] || headers[\"Content-Type\"] || (headers[\"Content-Type\"] = \"application/json\") //Don't override existing accept header declared by user\n\t            body = JSON.stringify(options.json)\n\t        }\n\t    }\n\t\n\t    xhr.onreadystatechange = readystatechange\n\t    xhr.onload = loadFunc\n\t    xhr.onerror = errorFunc\n\t    // IE9 must have onprogress be set to a unique function.\n\t    xhr.onprogress = function () {\n\t        // IE must die\n\t    }\n\t    xhr.ontimeout = errorFunc\n\t    xhr.open(method, uri, !sync, options.username, options.password)\n\t    //has to be after open\n\t    if(!sync) {\n\t        xhr.withCredentials = !!options.withCredentials\n\t    }\n\t    // Cannot set timeout with sync request\n\t    // not setting timeout on the xhr object, because of old webkits etc. not handling that correctly\n\t    // both npm's request and jquery 1.x use this kind of timeout, so this is being consistent\n\t    if (!sync && options.timeout > 0 ) {\n\t        timeoutTimer = setTimeout(function(){\n\t            aborted=true//IE9 may still call readystatechange\n\t            xhr.abort(\"timeout\")\n\t            var e = new Error(\"XMLHttpRequest timeout\")\n\t            e.code = \"ETIMEDOUT\"\n\t            errorFunc(e)\n\t        }, options.timeout )\n\t    }\n\t\n\t    if (xhr.setRequestHeader) {\n\t        for(key in headers){\n\t            if(headers.hasOwnProperty(key)){\n\t                xhr.setRequestHeader(key, headers[key])\n\t            }\n\t        }\n\t    } else if (options.headers && !isEmpty(options.headers)) {\n\t        throw new Error(\"Headers cannot be set on an XDomainRequest object\")\n\t    }\n\t\n\t    if (\"responseType\" in options) {\n\t        xhr.responseType = options.responseType\n\t    }\n\t\n\t    if (\"beforeSend\" in options &&\n\t        typeof options.beforeSend === \"function\"\n\t    ) {\n\t        options.beforeSend(xhr)\n\t    }\n\t\n\t    xhr.send(body)\n\t\n\t    return xhr\n\t\n\t\n\t}\n\t\n\tfunction noop() {}\n\n\n/***/ },\n/* 37 */\n/***/ function(module, exports) {\n\n\tmodule.exports = once\n\t\n\tonce.proto = once(function () {\n\t  Object.defineProperty(Function.prototype, 'once', {\n\t    value: function () {\n\t      return once(this)\n\t    },\n\t    configurable: true\n\t  })\n\t})\n\t\n\tfunction once (fn) {\n\t  var called = false\n\t  return function () {\n\t    if (called) return\n\t    called = true\n\t    return fn.apply(this, arguments)\n\t  }\n\t}\n\n\n/***/ },\n/* 38 */\n/***/ function(module, exports) {\n\n\tmodule.exports = isFunction\n\t\n\tvar toString = Object.prototype.toString\n\t\n\tfunction isFunction (fn) {\n\t  var string = toString.call(fn)\n\t  return string === '[object Function]' ||\n\t    (typeof fn === 'function' && string !== '[object RegExp]') ||\n\t    (typeof window !== 'undefined' &&\n\t     // IE8 and below\n\t     (fn === window.setTimeout ||\n\t      fn === window.alert ||\n\t      fn === window.confirm ||\n\t      fn === window.prompt))\n\t};\n\n\n/***/ },\n/* 39 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar trim = __webpack_require__(40)\n\t  , forEach = __webpack_require__(41)\n\t  , isArray = function(arg) {\n\t      return Object.prototype.toString.call(arg) === '[object Array]';\n\t    }\n\t\n\tmodule.exports = function (headers) {\n\t  if (!headers)\n\t    return {}\n\t\n\t  var result = {}\n\t\n\t  forEach(\n\t      trim(headers).split('\\n')\n\t    , function (row) {\n\t        var index = row.indexOf(':')\n\t          , key = trim(row.slice(0, index)).toLowerCase()\n\t          , value = trim(row.slice(index + 1))\n\t\n\t        if (typeof(result[key]) === 'undefined') {\n\t          result[key] = value\n\t        } else if (isArray(result[key])) {\n\t          result[key].push(value)\n\t        } else {\n\t          result[key] = [ result[key], value ]\n\t        }\n\t      }\n\t  )\n\t\n\t  return result\n\t}\n\n/***/ },\n/* 40 */\n/***/ function(module, exports) {\n\n\t\n\texports = module.exports = trim;\n\t\n\tfunction trim(str){\n\t  return str.replace(/^\\s*|\\s*$/g, '');\n\t}\n\t\n\texports.left = function(str){\n\t  return str.replace(/^\\s*/, '');\n\t};\n\t\n\texports.right = function(str){\n\t  return str.replace(/\\s*$/, '');\n\t};\n\n\n/***/ },\n/* 41 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar isFunction = __webpack_require__(38)\n\t\n\tmodule.exports = forEach\n\t\n\tvar toString = Object.prototype.toString\n\tvar hasOwnProperty = Object.prototype.hasOwnProperty\n\t\n\tfunction forEach(list, iterator, context) {\n\t    if (!isFunction(iterator)) {\n\t        throw new TypeError('iterator must be a function')\n\t    }\n\t\n\t    if (arguments.length < 3) {\n\t        context = this\n\t    }\n\t    \n\t    if (toString.call(list) === '[object Array]')\n\t        forEachArray(list, iterator, context)\n\t    else if (typeof list === 'string')\n\t        forEachString(list, iterator, context)\n\t    else\n\t        forEachObject(list, iterator, context)\n\t}\n\t\n\tfunction forEachArray(array, iterator, context) {\n\t    for (var i = 0, len = array.length; i < len; i++) {\n\t        if (hasOwnProperty.call(array, i)) {\n\t            iterator.call(context, array[i], i, array)\n\t        }\n\t    }\n\t}\n\t\n\tfunction forEachString(string, iterator, context) {\n\t    for (var i = 0, len = string.length; i < len; i++) {\n\t        // no such thing as a sparse string.\n\t        iterator.call(context, string.charAt(i), i, string)\n\t    }\n\t}\n\t\n\tfunction forEachObject(object, iterator, context) {\n\t    for (var k in object) {\n\t        if (hasOwnProperty.call(object, k)) {\n\t            iterator.call(context, object[k], k, object)\n\t        }\n\t    }\n\t}\n\n\n/***/ },\n/* 42 */\n/***/ function(module, exports) {\n\n\tmodule.exports = extend\n\t\n\tvar hasOwnProperty = Object.prototype.hasOwnProperty;\n\t\n\tfunction extend() {\n\t    var target = {}\n\t\n\t    for (var i = 0; i < arguments.length; i++) {\n\t        var source = arguments[i]\n\t\n\t        for (var key in source) {\n\t            if (hasOwnProperty.call(source, key)) {\n\t                target[key] = source[key]\n\t            }\n\t        }\n\t    }\n\t\n\t    return target\n\t}\n\n\n/***/ },\n/* 43 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\texports.__esModule = true;\n\t\n\tvar _browser = __webpack_require__(12);\n\t\n\tvar browser = _interopRequireWildcard(_browser);\n\t\n\tvar _document = __webpack_require__(5);\n\t\n\tvar _document2 = _interopRequireDefault(_document);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\t\n\tfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj['default'] = obj; return newObj; } }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } } /**\n\t                                                                                                                                                           * @file html-track-element-list.js\n\t                                                                                                                                                           */\n\t\n\t/**\n\t * The current list of {@link HtmlTrackElement}s.\n\t */\n\tvar HtmlTrackElementList = function () {\n\t\n\t  /**\n\t   * Create an instance of this class.\n\t   *\n\t   * @param {HtmlTrackElement[]} [tracks=[]]\n\t   *        A list of `HtmlTrackElement` to instantiate the list with.\n\t   */\n\t  function HtmlTrackElementList() {\n\t    var trackElements = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n\t\n\t    _classCallCheck(this, HtmlTrackElementList);\n\t\n\t    var list = this; // eslint-disable-line\n\t\n\t    if (browser.IS_IE8) {\n\t      list = _document2['default'].createElement('custom');\n\t\n\t      for (var prop in HtmlTrackElementList.prototype) {\n\t        if (prop !== 'constructor') {\n\t          list[prop] = HtmlTrackElementList.prototype[prop];\n\t        }\n\t      }\n\t    }\n\t\n\t    list.trackElements_ = [];\n\t\n\t    /**\n\t     * @member {number} length\n\t     *         The current number of `Track`s in the this Trackist.\n\t     */\n\t    Object.defineProperty(list, 'length', {\n\t      get: function get() {\n\t        return this.trackElements_.length;\n\t      }\n\t    });\n\t\n\t    for (var i = 0, length = trackElements.length; i < length; i++) {\n\t      list.addTrackElement_(trackElements[i]);\n\t    }\n\t\n\t    if (browser.IS_IE8) {\n\t      return list;\n\t    }\n\t  }\n\t\n\t  /**\n\t   * Add an {@link HtmlTrackElement} to the `HtmlTrackElementList`\n\t   *\n\t   * @param {HtmlTrackElement} trackElement\n\t   *        The track element to add to the list.\n\t   *\n\t   * @private\n\t   */\n\t\n\t\n\t  HtmlTrackElementList.prototype.addTrackElement_ = function addTrackElement_(trackElement) {\n\t    var index = this.trackElements_.length;\n\t\n\t    if (!('' + index in this)) {\n\t      Object.defineProperty(this, index, {\n\t        get: function get() {\n\t          return this.trackElements_[index];\n\t        }\n\t      });\n\t    }\n\t\n\t    // Do not add duplicate elements\n\t    if (this.trackElements_.indexOf(trackElement) === -1) {\n\t      this.trackElements_.push(trackElement);\n\t    }\n\t  };\n\t\n\t  /**\n\t   * Get an {@link HtmlTrackElement} from the `HtmlTrackElementList` given an\n\t   * {@link TextTrack}.\n\t   *\n\t   * @param {TextTrack} track\n\t   *        The track associated with a track element.\n\t   *\n\t   * @return {HtmlTrackElement|undefined}\n\t   *         The track element that was found or undefined.\n\t   *\n\t   * @private\n\t   */\n\t\n\t\n\t  HtmlTrackElementList.prototype.getTrackElementByTrack_ = function getTrackElementByTrack_(track) {\n\t    var trackElement_ = void 0;\n\t\n\t    for (var i = 0, length = this.trackElements_.length; i < length; i++) {\n\t      if (track === this.trackElements_[i].track) {\n\t        trackElement_ = this.trackElements_[i];\n\t\n\t        break;\n\t      }\n\t    }\n\t\n\t    return trackElement_;\n\t  };\n\t\n\t  /**\n\t   * Remove a {@link HtmlTrackElement} from the `HtmlTrackElementList`\n\t   *\n\t   * @param {HtmlTrackElement} trackElement\n\t   *        The track element to remove from the list.\n\t   *\n\t   * @private\n\t   */\n\t\n\t\n\t  HtmlTrackElementList.prototype.removeTrackElement_ = function removeTrackElement_(trackElement) {\n\t    for (var i = 0, length = this.trackElements_.length; i < length; i++) {\n\t      if (trackElement === this.trackElements_[i]) {\n\t        this.trackElements_.splice(i, 1);\n\t\n\t        break;\n\t      }\n\t    }\n\t  };\n\t\n\t  return HtmlTrackElementList;\n\t}();\n\t\n\texports['default'] = HtmlTrackElementList;\n\n\n/***/ },\n/* 44 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\texports.__esModule = true;\n\t\n\tvar _trackList = __webpack_require__(45);\n\t\n\tvar _trackList2 = _interopRequireDefault(_trackList);\n\t\n\tvar _fn = __webpack_require__(17);\n\t\n\tvar Fn = _interopRequireWildcard(_fn);\n\t\n\tvar _browser = __webpack_require__(12);\n\t\n\tvar browser = _interopRequireWildcard(_browser);\n\t\n\tvar _document = __webpack_require__(5);\n\t\n\tvar _document2 = _interopRequireDefault(_document);\n\t\n\tfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj['default'] = obj; return newObj; } }\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /**\n\t                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * @file text-track-list.js\n\t                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                */\n\t\n\t\n\t/**\n\t * The current list of {@link TextTrack} for a media file.\n\t *\n\t * @see [Spec]{@link https://html.spec.whatwg.org/multipage/embedded-content.html#texttracklist}\n\t * @extends TrackList\n\t */\n\tvar TextTrackList = function (_TrackList) {\n\t  _inherits(TextTrackList, _TrackList);\n\t\n\t  /**\n\t   * Create an instance of this class.\n\t   *\n\t   * @param {TextTrack[]} [tracks=[]]\n\t   *        A list of `TextTrack` to instantiate the list with.\n\t   */\n\t  function TextTrackList() {\n\t    var _this, _ret;\n\t\n\t    var tracks = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n\t\n\t    _classCallCheck(this, TextTrackList);\n\t\n\t    var list = void 0;\n\t\n\t    // IE8 forces us to implement inheritance ourselves\n\t    // as it does not support Object.defineProperty properly\n\t    if (browser.IS_IE8) {\n\t      list = _document2['default'].createElement('custom');\n\t      for (var prop in _trackList2['default'].prototype) {\n\t        if (prop !== 'constructor') {\n\t          list[prop] = _trackList2['default'].prototype[prop];\n\t        }\n\t      }\n\t      for (var _prop in TextTrackList.prototype) {\n\t        if (_prop !== 'constructor') {\n\t          list[_prop] = TextTrackList.prototype[_prop];\n\t        }\n\t      }\n\t    }\n\t\n\t    list = (_this = _possibleConstructorReturn(this, _TrackList.call(this, tracks, list)), _this);\n\t    return _ret = list, _possibleConstructorReturn(_this, _ret);\n\t  }\n\t\n\t  /**\n\t   * Add a {@link TextTrack} to the `TextTrackList`\n\t   *\n\t   * @param {TextTrack} track\n\t   *        The text track to add to the list.\n\t   *\n\t   * @fires TrackList#addtrack\n\t   * @private\n\t   */\n\t\n\t\n\t  TextTrackList.prototype.addTrack_ = function addTrack_(track) {\n\t    _TrackList.prototype.addTrack_.call(this, track);\n\t\n\t    /**\n\t     * @listens TextTrack#modechange\n\t     * @fires TrackList#change\n\t     */\n\t    track.addEventListener('modechange', Fn.bind(this, function () {\n\t      this.trigger('change');\n\t    }));\n\t  };\n\t\n\t  return TextTrackList;\n\t}(_trackList2['default']);\n\t\n\texports['default'] = TextTrackList;\n\n\n/***/ },\n/* 45 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\texports.__esModule = true;\n\t\n\tvar _eventTarget = __webpack_require__(20);\n\t\n\tvar _eventTarget2 = _interopRequireDefault(_eventTarget);\n\t\n\tvar _browser = __webpack_require__(12);\n\t\n\tvar browser = _interopRequireWildcard(_browser);\n\t\n\tvar _document = __webpack_require__(5);\n\t\n\tvar _document2 = _interopRequireDefault(_document);\n\t\n\tfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj['default'] = obj; return newObj; } }\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /**\n\t                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * @file track-list.js\n\t                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                */\n\t\n\t\n\t/**\n\t * Common functionaliy between {@link TextTrackList}, {@link AudioTrackList}, and\n\t * {@link VideoTrackList}\n\t *\n\t * @extends EventTarget\n\t */\n\tvar TrackList = function (_EventTarget) {\n\t  _inherits(TrackList, _EventTarget);\n\t\n\t  /**\n\t   * Create an instance of this class\n\t   *\n\t   * @param {Track[]} tracks\n\t   *        A list of tracks to initialize the list with.\n\t   *\n\t   * @param {Object} [list]\n\t   *        The child object with inheritance done manually for ie8.\n\t   *\n\t   * @abstract\n\t   */\n\t  function TrackList() {\n\t    var tracks = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n\t\n\t    var _ret;\n\t\n\t    var list = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n\t\n\t    _classCallCheck(this, TrackList);\n\t\n\t    var _this = _possibleConstructorReturn(this, _EventTarget.call(this));\n\t\n\t    if (!list) {\n\t      list = _this; // eslint-disable-line\n\t      if (browser.IS_IE8) {\n\t        list = _document2['default'].createElement('custom');\n\t        for (var prop in TrackList.prototype) {\n\t          if (prop !== 'constructor') {\n\t            list[prop] = TrackList.prototype[prop];\n\t          }\n\t        }\n\t      }\n\t    }\n\t\n\t    list.tracks_ = [];\n\t\n\t    /**\n\t     * @member {number} length\n\t     *         The current number of `Track`s in the this Trackist.\n\t     */\n\t    Object.defineProperty(list, 'length', {\n\t      get: function get() {\n\t        return this.tracks_.length;\n\t      }\n\t    });\n\t\n\t    for (var i = 0; i < tracks.length; i++) {\n\t      list.addTrack_(tracks[i]);\n\t    }\n\t\n\t    // must return the object, as for ie8 it will not be this\n\t    // but a reference to a document object\n\t    return _ret = list, _possibleConstructorReturn(_this, _ret);\n\t  }\n\t\n\t  /**\n\t   * Add a {@link Track} to the `TrackList`\n\t   *\n\t   * @param {Track} track\n\t   *        The audio, video, or text track to add to the list.\n\t   *\n\t   * @fires TrackList#addtrack\n\t   * @private\n\t   */\n\t\n\t\n\t  TrackList.prototype.addTrack_ = function addTrack_(track) {\n\t    var index = this.tracks_.length;\n\t\n\t    if (!('' + index in this)) {\n\t      Object.defineProperty(this, index, {\n\t        get: function get() {\n\t          return this.tracks_[index];\n\t        }\n\t      });\n\t    }\n\t\n\t    // Do not add duplicate tracks\n\t    if (this.tracks_.indexOf(track) === -1) {\n\t      this.tracks_.push(track);\n\t      /**\n\t       * Triggered when a track is added to a track list.\n\t       *\n\t       * @event TrackList#addtrack\n\t       * @type {EventTarget~Event}\n\t       * @property {Track} track\n\t       *           A reference to track that was added.\n\t       */\n\t      this.trigger({\n\t        track: track,\n\t        type: 'addtrack'\n\t      });\n\t    }\n\t  };\n\t\n\t  /**\n\t   * Remove a {@link Track} from the `TrackList`\n\t   *\n\t   * @param {Track} track\n\t   *        The audio, video, or text track to remove from the list.\n\t   *\n\t   * @fires TrackList#removetrack\n\t   * @private\n\t   */\n\t\n\t\n\t  TrackList.prototype.removeTrack_ = function removeTrack_(rtrack) {\n\t    var track = void 0;\n\t\n\t    for (var i = 0, l = this.length; i < l; i++) {\n\t      if (this[i] === rtrack) {\n\t        track = this[i];\n\t        if (track.off) {\n\t          track.off();\n\t        }\n\t\n\t        this.tracks_.splice(i, 1);\n\t\n\t        break;\n\t      }\n\t    }\n\t\n\t    if (!track) {\n\t      return;\n\t    }\n\t\n\t    /**\n\t     * Triggered when a track is removed from track list.\n\t     *\n\t     * @event TrackList#removetrack\n\t     * @type {EventTarget~Event}\n\t     * @property {Track} track\n\t     *           A reference to track that was removed.\n\t     */\n\t    this.trigger({\n\t      track: track,\n\t      type: 'removetrack'\n\t    });\n\t  };\n\t\n\t  /**\n\t   * Get a Track from the TrackList by a tracks id\n\t   *\n\t   * @param {String} id - the id of the track to get\n\t   * @method getTrackById\n\t   * @return {Track}\n\t   * @private\n\t   */\n\t\n\t\n\t  TrackList.prototype.getTrackById = function getTrackById(id) {\n\t    var result = null;\n\t\n\t    for (var i = 0, l = this.length; i < l; i++) {\n\t      var track = this[i];\n\t\n\t      if (track.id === id) {\n\t        result = track;\n\t        break;\n\t      }\n\t    }\n\t\n\t    return result;\n\t  };\n\t\n\t  return TrackList;\n\t}(_eventTarget2['default']);\n\t\n\t/**\n\t * Triggered when a different track is selected/enabled.\n\t *\n\t * @event TrackList#change\n\t * @type {EventTarget~Event}\n\t */\n\t\n\t/**\n\t * Events that can be called with on + eventName. See {@link EventHandler}.\n\t *\n\t * @property\n\t * @private\n\t */\n\t\n\t\n\tTrackList.prototype.allowedEvents_ = {\n\t  change: 'change',\n\t  addtrack: 'addtrack',\n\t  removetrack: 'removetrack'\n\t};\n\t\n\t// emulate attribute EventHandler support to allow for feature detection\n\tfor (var event in TrackList.prototype.allowedEvents_) {\n\t  TrackList.prototype['on' + event] = null;\n\t}\n\t\n\texports['default'] = TrackList;\n\n\n/***/ },\n/* 46 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\texports.__esModule = true;\n\t\n\tvar _trackList = __webpack_require__(45);\n\t\n\tvar _trackList2 = _interopRequireDefault(_trackList);\n\t\n\tvar _browser = __webpack_require__(12);\n\t\n\tvar browser = _interopRequireWildcard(_browser);\n\t\n\tvar _document = __webpack_require__(5);\n\t\n\tvar _document2 = _interopRequireDefault(_document);\n\t\n\tfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj['default'] = obj; return newObj; } }\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /**\n\t                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * @file video-track-list.js\n\t                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                */\n\t\n\t\n\t/**\n\t * Un-select all other {@link VideoTrack}s that are selected.\n\t *\n\t * @param {VideoTrackList} list\n\t *        list to work on\n\t *\n\t * @param {VideoTrack} track\n\t *        The track to skip\n\t *\n\t * @private\n\t */\n\tvar disableOthers = function disableOthers(list, track) {\n\t  for (var i = 0; i < list.length; i++) {\n\t    if (track.id === list[i].id) {\n\t      continue;\n\t    }\n\t    // another video track is enabled, disable it\n\t    list[i].selected = false;\n\t  }\n\t};\n\t\n\t/**\n\t * The current list of {@link VideoTrack} for a video.\n\t *\n\t * @see [Spec]{@link https://html.spec.whatwg.org/multipage/embedded-content.html#videotracklist}\n\t * @extends TrackList\n\t */\n\t\n\tvar VideoTrackList = function (_TrackList) {\n\t  _inherits(VideoTrackList, _TrackList);\n\t\n\t  /**\n\t   * Create an instance of this class.\n\t   *\n\t   * @param {VideoTrack[]} [tracks=[]]\n\t   *        A list of `VideoTrack` to instantiate the list with.\n\t   */\n\t  function VideoTrackList() {\n\t    var _this, _ret;\n\t\n\t    var tracks = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n\t\n\t    _classCallCheck(this, VideoTrackList);\n\t\n\t    var list = void 0;\n\t\n\t    // make sure only 1 track is enabled\n\t    // sorted from last index to first index\n\t    for (var i = tracks.length - 1; i >= 0; i--) {\n\t      if (tracks[i].selected) {\n\t        disableOthers(tracks, tracks[i]);\n\t        break;\n\t      }\n\t    }\n\t\n\t    // IE8 forces us to implement inheritance ourselves\n\t    // as it does not support Object.defineProperty properly\n\t    if (browser.IS_IE8) {\n\t      list = _document2['default'].createElement('custom');\n\t      for (var prop in _trackList2['default'].prototype) {\n\t        if (prop !== 'constructor') {\n\t          list[prop] = _trackList2['default'].prototype[prop];\n\t        }\n\t      }\n\t      for (var _prop in VideoTrackList.prototype) {\n\t        if (_prop !== 'constructor') {\n\t          list[_prop] = VideoTrackList.prototype[_prop];\n\t        }\n\t      }\n\t    }\n\t\n\t    list = (_this = _possibleConstructorReturn(this, _TrackList.call(this, tracks, list)), _this);\n\t    list.changing_ = false;\n\t\n\t    /**\n\t     * @member {number} VideoTrackList#selectedIndex\n\t     *         The current index of the selected {@link VideoTrack`}.\n\t     */\n\t    Object.defineProperty(list, 'selectedIndex', {\n\t      get: function get() {\n\t        for (var _i = 0; _i < this.length; _i++) {\n\t          if (this[_i].selected) {\n\t            return _i;\n\t          }\n\t        }\n\t        return -1;\n\t      },\n\t      set: function set() {}\n\t    });\n\t\n\t    return _ret = list, _possibleConstructorReturn(_this, _ret);\n\t  }\n\t\n\t  /**\n\t   * Add a {@link VideoTrack} to the `VideoTrackList`.\n\t   *\n\t   * @param {VideoTrack} track\n\t   *        The VideoTrack to add to the list\n\t   *\n\t   * @fires TrackList#addtrack\n\t   * @private\n\t   */\n\t\n\t\n\t  VideoTrackList.prototype.addTrack_ = function addTrack_(track) {\n\t    var _this2 = this;\n\t\n\t    if (track.selected) {\n\t      disableOthers(this, track);\n\t    }\n\t\n\t    _TrackList.prototype.addTrack_.call(this, track);\n\t    // native tracks don't have this\n\t    if (!track.addEventListener) {\n\t      return;\n\t    }\n\t\n\t    /**\n\t     * @listens VideoTrack#selectedchange\n\t     * @fires TrackList#change\n\t     */\n\t    track.addEventListener('selectedchange', function () {\n\t      if (_this2.changing_) {\n\t        return;\n\t      }\n\t      _this2.changing_ = true;\n\t      disableOthers(_this2, track);\n\t      _this2.changing_ = false;\n\t      _this2.trigger('change');\n\t    });\n\t  };\n\t\n\t  /**\n\t   * Add a {@link VideoTrack} to the `VideoTrackList`.\n\t   *\n\t   * @param {VideoTrack} track\n\t   *        The VideoTrack to add to the list\n\t   *\n\t   * @fires TrackList#addtrack\n\t   */\n\t\n\t\n\t  VideoTrackList.prototype.addTrack = function addTrack(track) {\n\t    this.addTrack_(track);\n\t  };\n\t\n\t  /**\n\t   * Remove a {@link VideoTrack} to the `VideoTrackList`.\n\t   *\n\t   * @param {VideoTrack} track\n\t   *        The VideoTrack to remove from the list.\n\t   *\n\t   * @fires TrackList#removetrack\n\t   */\n\t\n\t\n\t  VideoTrackList.prototype.removeTrack = function removeTrack(track) {\n\t    _TrackList.prototype.removeTrack_.call(this, track);\n\t  };\n\t\n\t  return VideoTrackList;\n\t}(_trackList2['default']);\n\t\n\texports['default'] = VideoTrackList;\n\n\n/***/ },\n/* 47 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\texports.__esModule = true;\n\t\n\tvar _trackList = __webpack_require__(45);\n\t\n\tvar _trackList2 = _interopRequireDefault(_trackList);\n\t\n\tvar _browser = __webpack_require__(12);\n\t\n\tvar browser = _interopRequireWildcard(_browser);\n\t\n\tvar _document = __webpack_require__(5);\n\t\n\tvar _document2 = _interopRequireDefault(_document);\n\t\n\tfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj['default'] = obj; return newObj; } }\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /**\n\t                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * @file audio-track-list.js\n\t                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                */\n\t\n\t\n\t/**\n\t * Anywhere we call this function we diverge from the spec\n\t * as we only support one enabled audiotrack at a time\n\t *\n\t * @param {AudioTrackList} list\n\t *        list to work on\n\t *\n\t * @param {AudioTrack} track\n\t *        The track to skip\n\t *\n\t * @private\n\t */\n\tvar disableOthers = function disableOthers(list, track) {\n\t  for (var i = 0; i < list.length; i++) {\n\t    if (track.id === list[i].id) {\n\t      continue;\n\t    }\n\t    // another audio track is enabled, disable it\n\t    list[i].enabled = false;\n\t  }\n\t};\n\t\n\t/**\n\t * The current list of {@link AudioTrack} for a media file.\n\t *\n\t * @see [Spec]{@link https://html.spec.whatwg.org/multipage/embedded-content.html#audiotracklist}\n\t * @extends TrackList\n\t */\n\t\n\tvar AudioTrackList = function (_TrackList) {\n\t  _inherits(AudioTrackList, _TrackList);\n\t\n\t  /**\n\t   * Create an instance of this class.\n\t   *\n\t   * @param {AudioTrack[]} [tracks=[]]\n\t   *        A list of `AudioTrack` to instantiate the list with.\n\t   */\n\t  function AudioTrackList() {\n\t    var _this, _ret;\n\t\n\t    var tracks = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n\t\n\t    _classCallCheck(this, AudioTrackList);\n\t\n\t    var list = void 0;\n\t\n\t    // make sure only 1 track is enabled\n\t    // sorted from last index to first index\n\t    for (var i = tracks.length - 1; i >= 0; i--) {\n\t      if (tracks[i].enabled) {\n\t        disableOthers(tracks, tracks[i]);\n\t        break;\n\t      }\n\t    }\n\t\n\t    // IE8 forces us to implement inheritance ourselves\n\t    // as it does not support Object.defineProperty properly\n\t    if (browser.IS_IE8) {\n\t      list = _document2['default'].createElement('custom');\n\t      for (var prop in _trackList2['default'].prototype) {\n\t        if (prop !== 'constructor') {\n\t          list[prop] = _trackList2['default'].prototype[prop];\n\t        }\n\t      }\n\t      for (var _prop in AudioTrackList.prototype) {\n\t        if (_prop !== 'constructor') {\n\t          list[_prop] = AudioTrackList.prototype[_prop];\n\t        }\n\t      }\n\t    }\n\t\n\t    list = (_this = _possibleConstructorReturn(this, _TrackList.call(this, tracks, list)), _this);\n\t    list.changing_ = false;\n\t\n\t    return _ret = list, _possibleConstructorReturn(_this, _ret);\n\t  }\n\t\n\t  /**\n\t   * Add an {@link AudioTrack} to the `AudioTrackList`.\n\t   *\n\t   * @param {AudioTrack} track\n\t   *        The AudioTrack to add to the list\n\t   *\n\t   * @fires Track#addtrack\n\t   * @private\n\t   */\n\t\n\t\n\t  AudioTrackList.prototype.addTrack_ = function addTrack_(track) {\n\t    var _this2 = this;\n\t\n\t    if (track.enabled) {\n\t      disableOthers(this, track);\n\t    }\n\t\n\t    _TrackList.prototype.addTrack_.call(this, track);\n\t    // native tracks don't have this\n\t    if (!track.addEventListener) {\n\t      return;\n\t    }\n\t\n\t    /**\n\t     * @listens AudioTrack#enabledchange\n\t     * @fires TrackList#change\n\t     */\n\t    track.addEventListener('enabledchange', function () {\n\t      // when we are disabling other tracks (since we don't support\n\t      // more than one track at a time) we will set changing_\n\t      // to true so that we don't trigger additional change events\n\t      if (_this2.changing_) {\n\t        return;\n\t      }\n\t      _this2.changing_ = true;\n\t      disableOthers(_this2, track);\n\t      _this2.changing_ = false;\n\t      _this2.trigger('change');\n\t    });\n\t  };\n\t\n\t  /**\n\t   * Add an {@link AudioTrack} to the `AudioTrackList`.\n\t   *\n\t   * @param {AudioTrack} track\n\t   *        The AudioTrack to add to the list\n\t   *\n\t   * @fires Track#addtrack\n\t   */\n\t\n\t\n\t  AudioTrackList.prototype.addTrack = function addTrack(track) {\n\t    this.addTrack_(track);\n\t  };\n\t\n\t  /**\n\t   * Remove an {@link AudioTrack} from the `AudioTrackList`.\n\t   *\n\t   * @param {AudioTrack} track\n\t   *        The AudioTrack to remove from the list\n\t   *\n\t   * @fires Track#removetrack\n\t   */\n\t\n\t\n\t  AudioTrackList.prototype.removeTrack = function removeTrack(track) {\n\t    _TrackList.prototype.removeTrack_.call(this, track);\n\t  };\n\t\n\t  return AudioTrackList;\n\t}(_trackList2['default']);\n\t\n\texports['default'] = AudioTrackList;\n\n\n/***/ },\n/* 48 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\texports.__esModule = true;\n\t\n\tvar _component = __webpack_require__(16);\n\t\n\tvar _component2 = _interopRequireDefault(_component);\n\t\n\tvar _tech = __webpack_require__(29);\n\t\n\tvar _tech2 = _interopRequireDefault(_tech);\n\t\n\tvar _toTitleCase = __webpack_require__(18);\n\t\n\tvar _toTitleCase2 = _interopRequireDefault(_toTitleCase);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /**\n\t                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * @file loader.js\n\t                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                */\n\t\n\t\n\t/**\n\t * The `MediaLoader` is the `Component` that decides which playback technology to load\n\t * when a player is initialized.\n\t *\n\t * @extends Component\n\t */\n\tvar MediaLoader = function (_Component) {\n\t  _inherits(MediaLoader, _Component);\n\t\n\t  /**\n\t   * Create an instance of this class.\n\t   *\n\t   * @param {Player} player\n\t   *        The `Player` that this class should attach to.\n\t   *\n\t   * @param {Object} [options]\n\t   *        The key/value stroe of player options.\n\t   *\n\t   * @param {Component~ReadyCallback} [ready]\n\t   *        The function that is run when this component is ready.\n\t   */\n\t  function MediaLoader(player, options, ready) {\n\t    _classCallCheck(this, MediaLoader);\n\t\n\t    // If there are no sources when the player is initialized,\n\t    // load the first supported playback technology.\n\t\n\t    var _this = _possibleConstructorReturn(this, _Component.call(this, player, options, ready));\n\t\n\t    if (!options.playerOptions.sources || options.playerOptions.sources.length === 0) {\n\t      for (var i = 0, j = options.playerOptions.techOrder; i < j.length; i++) {\n\t        var techName = (0, _toTitleCase2['default'])(j[i]);\n\t        var tech = _tech2['default'].getTech(techName);\n\t\n\t        // Support old behavior of techs being registered as components.\n\t        // Remove once that deprecated behavior is removed.\n\t        if (!techName) {\n\t          tech = _component2['default'].getComponent(techName);\n\t        }\n\t\n\t        // Check if the browser supports this technology\n\t        if (tech && tech.isSupported()) {\n\t          player.loadTech_(techName);\n\t          break;\n\t        }\n\t      }\n\t    } else {\n\t      // Loop through playback technologies (HTML5, Flash) and check for support.\n\t      // Then load the best source.\n\t      // A few assumptions here:\n\t      //   All playback technologies respect preload false.\n\t      player.src(options.playerOptions.sources);\n\t    }\n\t    return _this;\n\t  }\n\t\n\t  return MediaLoader;\n\t}(_component2['default']);\n\t\n\t_component2['default'].registerComponent('MediaLoader', MediaLoader);\n\texports['default'] = MediaLoader;\n\n\n/***/ },\n/* 49 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\texports.__esModule = true;\n\t\n\tvar _tech = __webpack_require__(29);\n\t\n\tvar _tech2 = _interopRequireDefault(_tech);\n\t\n\tvar _dom = __webpack_require__(9);\n\t\n\tvar Dom = _interopRequireWildcard(_dom);\n\t\n\tvar _url = __webpack_require__(35);\n\t\n\tvar Url = _interopRequireWildcard(_url);\n\t\n\tvar _timeRanges = __webpack_require__(22);\n\t\n\tvar _flashRtmp = __webpack_require__(50);\n\t\n\tvar _flashRtmp2 = _interopRequireDefault(_flashRtmp);\n\t\n\tvar _component = __webpack_require__(16);\n\t\n\tvar _component2 = _interopRequireDefault(_component);\n\t\n\tvar _window = __webpack_require__(4);\n\t\n\tvar _window2 = _interopRequireDefault(_window);\n\t\n\tvar _obj = __webpack_require__(13);\n\t\n\tfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj['default'] = obj; return newObj; } }\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /**\n\t                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * @file flash.js\n\t                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * VideoJS-SWF - Custom Flash Player with HTML5-ish API\n\t                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * https://github.com/zencoder/video-js-swf\n\t                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * Not using setupTriggers. Using global onEvent func to distribute events\n\t                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                */\n\t\n\tvar navigator = _window2['default'].navigator;\n\t\n\t/**\n\t * Flash Media Controller - Wrapper for Flash Media API\n\t *\n\t * @mixes FlashRtmpDecorator\n\t * @mixes Tech~SouceHandlerAdditions\n\t * @extends Tech\n\t */\n\t\n\tvar Flash = function (_Tech) {\n\t  _inherits(Flash, _Tech);\n\t\n\t  /**\n\t   * Create an instance of this Tech.\n\t   *\n\t   * @param {Object} [options]\n\t   *        The key/value store of player options.\n\t   *\n\t   * @param {Component~ReadyCallback} ready\n\t   *        Callback function to call when the `Flash` Tech is ready.\n\t   */\n\t  function Flash(options, ready) {\n\t    _classCallCheck(this, Flash);\n\t\n\t    // Set the source when ready\n\t    var _this = _possibleConstructorReturn(this, _Tech.call(this, options, ready));\n\t\n\t    if (options.source) {\n\t      _this.ready(function () {\n\t        this.setSource(options.source);\n\t      }, true);\n\t    }\n\t\n\t    // Having issues with Flash reloading on certain page actions (hide/resize/fullscreen) in certain browsers\n\t    // This allows resetting the playhead when we catch the reload\n\t    if (options.startTime) {\n\t      _this.ready(function () {\n\t        this.load();\n\t        this.play();\n\t        this.currentTime(options.startTime);\n\t      }, true);\n\t    }\n\t\n\t    // Add global window functions that the swf expects\n\t    // A 4.x workflow we weren't able to solve for in 5.0\n\t    // because of the need to hard code these functions\n\t    // into the swf for security reasons\n\t    _window2['default'].videojs = _window2['default'].videojs || {};\n\t    _window2['default'].videojs.Flash = _window2['default'].videojs.Flash || {};\n\t    _window2['default'].videojs.Flash.onReady = Flash.onReady;\n\t    _window2['default'].videojs.Flash.onEvent = Flash.onEvent;\n\t    _window2['default'].videojs.Flash.onError = Flash.onError;\n\t\n\t    _this.on('seeked', function () {\n\t      this.lastSeekTarget_ = undefined;\n\t    });\n\t\n\t    return _this;\n\t  }\n\t\n\t  /**\n\t   * Create the `Flash` Tech's DOM element.\n\t   *\n\t   * @return {Element}\n\t   *         The element that gets created.\n\t   */\n\t\n\t\n\t  Flash.prototype.createEl = function createEl() {\n\t    var options = this.options_;\n\t\n\t    // If video.js is hosted locally you should also set the location\n\t    // for the hosted swf, which should be relative to the page (not video.js)\n\t    // Otherwise this adds a CDN url.\n\t    // The CDN also auto-adds a swf URL for that specific version.\n\t    if (!options.swf) {\n\t      var ver = '5.1.0';\n\t\n\t      options.swf = '//vjs.zencdn.net/swf/' + ver + '/video-js.swf';\n\t    }\n\t\n\t    // Generate ID for swf object\n\t    var objId = options.techId;\n\t\n\t    // Merge default flashvars with ones passed in to init\n\t    var flashVars = (0, _obj.assign)({\n\t\n\t      // SWF Callback Functions\n\t      readyFunction: 'videojs.Flash.onReady',\n\t      eventProxyFunction: 'videojs.Flash.onEvent',\n\t      errorEventProxyFunction: 'videojs.Flash.onError',\n\t\n\t      // Player Settings\n\t      autoplay: options.autoplay,\n\t      preload: options.preload,\n\t      loop: options.loop,\n\t      muted: options.muted\n\t\n\t    }, options.flashVars);\n\t\n\t    // Merge default parames with ones passed in\n\t    var params = (0, _obj.assign)({\n\t      // Opaque is needed to overlay controls, but can affect playback performance\n\t      wmode: 'opaque',\n\t      // Using bgcolor prevents a white flash when the object is loading\n\t      bgcolor: '#000000'\n\t    }, options.params);\n\t\n\t    // Merge default attributes with ones passed in\n\t    var attributes = (0, _obj.assign)({\n\t      // Both ID and Name needed or swf to identify itself\n\t      id: objId,\n\t      name: objId,\n\t      'class': 'vjs-tech'\n\t    }, options.attributes);\n\t\n\t    this.el_ = Flash.embed(options.swf, flashVars, params, attributes);\n\t    this.el_.tech = this;\n\t\n\t    return this.el_;\n\t  };\n\t\n\t  /**\n\t   * Called by {@link Player#play} to play using the `Flash` `Tech`.\n\t   */\n\t\n\t\n\t  Flash.prototype.play = function play() {\n\t    if (this.ended()) {\n\t      this.setCurrentTime(0);\n\t    }\n\t    this.el_.vjs_play();\n\t  };\n\t\n\t  /**\n\t   * Called by {@link Player#pause} to pause using the `Flash` `Tech`.\n\t   */\n\t\n\t\n\t  Flash.prototype.pause = function pause() {\n\t    this.el_.vjs_pause();\n\t  };\n\t\n\t  /**\n\t   * A getter/setter for the `Flash` Tech's source object.\n\t   * > Note: Please use {@link Flash#setSource}\n\t   *\n\t   * @param {Tech~SourceObject} [src]\n\t   *        The source object you want to set on the `Flash` techs.\n\t   *\n\t   * @return {Tech~SourceObject|undefined}\n\t   *         - The current source object when a source is not passed in.\n\t   *         - undefined when setting\n\t   *\n\t   * @deprecated Since version 5.\n\t   */\n\t\n\t\n\t  Flash.prototype.src = function src(_src) {\n\t    if (_src === undefined) {\n\t      return this.currentSrc();\n\t    }\n\t\n\t    // Setting src through `src` not `setSrc` will be deprecated\n\t    return this.setSrc(_src);\n\t  };\n\t\n\t  /**\n\t   * A getter/setter for the `Flash` Tech's source object.\n\t   *\n\t   * @param {Tech~SourceObject} [src]\n\t   *        The source object you want to set on the `Flash` techs.\n\t   *\n\t   * @return {Tech~SourceObject|undefined}\n\t   *         - The current source object when a source is not passed in.\n\t   *         - undefined when setting\n\t   */\n\t\n\t\n\t  Flash.prototype.setSrc = function setSrc(src) {\n\t    var _this2 = this;\n\t\n\t    // Make sure source URL is absolute.\n\t    src = Url.getAbsoluteURL(src);\n\t    this.el_.vjs_src(src);\n\t\n\t    // Currently the SWF doesn't autoplay if you load a source later.\n\t    // e.g. Load player w/ no source, wait 2s, set src.\n\t    if (this.autoplay()) {\n\t      this.setTimeout(function () {\n\t        return _this2.play();\n\t      }, 0);\n\t    }\n\t  };\n\t\n\t  /**\n\t   * Indicates whether the media is currently seeking to a new position or not.\n\t   *\n\t   * @return {boolean}\n\t   *         - True if seeking to a new position\n\t   *         - False otherwise\n\t   */\n\t\n\t\n\t  Flash.prototype.seeking = function seeking() {\n\t    return this.lastSeekTarget_ !== undefined;\n\t  };\n\t\n\t  /**\n\t   * Returns the current time in seconds that the media is at in playback.\n\t   *\n\t   * @param {number} time\n\t   *        Current playtime of the media in seconds.\n\t   */\n\t\n\t\n\t  Flash.prototype.setCurrentTime = function setCurrentTime(time) {\n\t    var seekable = this.seekable();\n\t\n\t    if (seekable.length) {\n\t      // clamp to the current seekable range\n\t      time = time > seekable.start(0) ? time : seekable.start(0);\n\t      time = time < seekable.end(seekable.length - 1) ? time : seekable.end(seekable.length - 1);\n\t\n\t      this.lastSeekTarget_ = time;\n\t      this.trigger('seeking');\n\t      this.el_.vjs_setProperty('currentTime', time);\n\t      _Tech.prototype.setCurrentTime.call(this);\n\t    }\n\t  };\n\t\n\t  /**\n\t   * Get the current playback time in seconds\n\t   *\n\t   * @return {number}\n\t   *         The current time of playback in seconds.\n\t   */\n\t\n\t\n\t  Flash.prototype.currentTime = function currentTime() {\n\t    // when seeking make the reported time keep up with the requested time\n\t    // by reading the time we're seeking to\n\t    if (this.seeking()) {\n\t      return this.lastSeekTarget_ || 0;\n\t    }\n\t    return this.el_.vjs_getProperty('currentTime');\n\t  };\n\t\n\t  /**\n\t   * Get the current source\n\t   *\n\t   * @method currentSrc\n\t   * @return {Tech~SourceObject}\n\t   *         The current source\n\t   */\n\t\n\t\n\t  Flash.prototype.currentSrc = function currentSrc() {\n\t    if (this.currentSource_) {\n\t      return this.currentSource_.src;\n\t    }\n\t    return this.el_.vjs_getProperty('currentSrc');\n\t  };\n\t\n\t  /**\n\t   * Get the total duration of the current media.\n\t   *\n\t   * @return {number}\n\t   8          The total duration of the current media.\n\t   */\n\t\n\t\n\t  Flash.prototype.duration = function duration() {\n\t    if (this.readyState() === 0) {\n\t      return NaN;\n\t    }\n\t    var duration = this.el_.vjs_getProperty('duration');\n\t\n\t    return duration >= 0 ? duration : Infinity;\n\t  };\n\t\n\t  /**\n\t   * Load media into Tech.\n\t   */\n\t\n\t\n\t  Flash.prototype.load = function load() {\n\t    this.el_.vjs_load();\n\t  };\n\t\n\t  /**\n\t   * Get the poster image that was set on the tech.\n\t   */\n\t\n\t\n\t  Flash.prototype.poster = function poster() {\n\t    this.el_.vjs_getProperty('poster');\n\t  };\n\t\n\t  /**\n\t   * Poster images are not handled by the Flash tech so make this is a no-op.\n\t   */\n\t\n\t\n\t  Flash.prototype.setPoster = function setPoster() {};\n\t\n\t  /**\n\t   * Determine the time ranges that can be seeked to in the media.\n\t   *\n\t   * @return {TimeRange}\n\t   *         Returns the time ranges that can be seeked to.\n\t   */\n\t\n\t\n\t  Flash.prototype.seekable = function seekable() {\n\t    var duration = this.duration();\n\t\n\t    if (duration === 0) {\n\t      return (0, _timeRanges.createTimeRange)();\n\t    }\n\t    return (0, _timeRanges.createTimeRange)(0, duration);\n\t  };\n\t\n\t  /**\n\t   * Get and create a `TimeRange` object for buffering.\n\t   *\n\t   * @return {TimeRange}\n\t   *         The time range object that was created.\n\t   */\n\t\n\t\n\t  Flash.prototype.buffered = function buffered() {\n\t    var ranges = this.el_.vjs_getProperty('buffered');\n\t\n\t    if (ranges.length === 0) {\n\t      return (0, _timeRanges.createTimeRange)();\n\t    }\n\t    return (0, _timeRanges.createTimeRange)(ranges[0][0], ranges[0][1]);\n\t  };\n\t\n\t  /**\n\t   * Get fullscreen support -\n\t   *\n\t   * Flash does not allow fullscreen through javascript\n\t   * so this always returns false.\n\t   *\n\t   * @return {boolean}\n\t   *         The Flash tech does not support fullscreen, so it will always return false.\n\t   */\n\t\n\t\n\t  Flash.prototype.supportsFullScreen = function supportsFullScreen() {\n\t    // Flash does not allow fullscreen through javascript\n\t    return false;\n\t  };\n\t\n\t  /**\n\t   * Flash does not allow fullscreen through javascript\n\t   * so this always returns false.\n\t   *\n\t   * @return {boolean}\n\t   *         The Flash tech does not support fullscreen, so it will always return false.\n\t   */\n\t\n\t\n\t  Flash.prototype.enterFullScreen = function enterFullScreen() {\n\t    return false;\n\t  };\n\t\n\t  return Flash;\n\t}(_tech2['default']);\n\t\n\t// Create setters and getters for attributes\n\t\n\t\n\tvar _api = Flash.prototype;\n\tvar _readWrite = 'rtmpConnection,rtmpStream,preload,defaultPlaybackRate,playbackRate,autoplay,loop,mediaGroup,controller,controls,volume,muted,defaultMuted'.split(',');\n\tvar _readOnly = 'networkState,readyState,initialTime,startOffsetTime,paused,ended,videoWidth,videoHeight'.split(',');\n\t\n\tfunction _createSetter(attr) {\n\t  var attrUpper = attr.charAt(0).toUpperCase() + attr.slice(1);\n\t\n\t  _api['set' + attrUpper] = function (val) {\n\t    return this.el_.vjs_setProperty(attr, val);\n\t  };\n\t}\n\t\n\tfunction _createGetter(attr) {\n\t  _api[attr] = function () {\n\t    return this.el_.vjs_getProperty(attr);\n\t  };\n\t}\n\t\n\t// Create getter and setters for all read/write attributes\n\tfor (var i = 0; i < _readWrite.length; i++) {\n\t  _createGetter(_readWrite[i]);\n\t  _createSetter(_readWrite[i]);\n\t}\n\t\n\t// Create getters for read-only attributes\n\tfor (var _i = 0; _i < _readOnly.length; _i++) {\n\t  _createGetter(_readOnly[_i]);\n\t}\n\t\n\t/** ------------------------------ Getters ------------------------------ **/\n\t/**\n\t * Get the value of `rtmpConnection` from the swf.\n\t *\n\t * @method Flash.prototype.rtmpConnection\n\t * @return {string}\n\t *         The current value of `rtmpConnection` on the swf.\n\t */\n\t\n\t/**\n\t * Get the value of `rtmpStream` from the swf.\n\t *\n\t * @method Flash.prototype.rtmpStream\n\t * @return {string}\n\t *         The current value of `rtmpStream` on the swf.\n\t */\n\t\n\t/**\n\t * Get the value of `preload` from the swf. `preload` indicates\n\t * what should download before the media is interacted with. It can have the following\n\t * values:\n\t * - none: nothing should be downloaded\n\t * - metadata: poster and the first few frames of the media may be downloaded to get\n\t *   media dimensions and other metadata\n\t * - auto: allow the media and metadata for the media to be downloaded before\n\t *    interaction\n\t *\n\t * @method Flash.prototype.preload\n\t * @return {string}\n\t *         The value of `preload` from the swf. Will be 'none', 'metadata',\n\t *         or 'auto'.\n\t */\n\t\n\t/**\n\t * Get the value of `defaultPlaybackRate` from the swf.\n\t *\n\t * @method Flash.prototype.defaultPlaybackRate\n\t * @return {number}\n\t *         The current value of `defaultPlaybackRate` on the swf.\n\t */\n\t\n\t/**\n\t * Get the value of `playbackRate` from the swf. `playbackRate` indicates\n\t * the rate at which the media is currently playing back. Examples:\n\t *   - if playbackRate is set to 2, media will play twice as fast.\n\t *   - if playbackRate is set to 0.5, media will play half as fast.\n\t *\n\t * @method Flash.prototype.playbackRate\n\t * @return {number}\n\t *         The value of `playbackRate` from the swf. A number indicating\n\t *         the current playback speed of the media, where 1 is normal speed.\n\t */\n\t\n\t/**\n\t * Get the value of `autoplay` from the swf. `autoplay` indicates\n\t * that the media should start to play as soon as the page is ready.\n\t *\n\t * @method Flash.prototype.autoplay\n\t * @return {boolean}\n\t *         - The value of `autoplay` from the swf.\n\t *         - True indicates that the media ashould start as soon as the page loads.\n\t *         - False indicates that the media should not start as soon as the page loads.\n\t */\n\t\n\t/**\n\t * Get the value of `loop` from the swf. `loop` indicates\n\t * that the media should return to the start of the media and continue playing once\n\t * it reaches the end.\n\t *\n\t * @method Flash.prototype.loop\n\t * @return {boolean}\n\t *         - The value of `loop` from the swf.\n\t *         - True indicates that playback should seek back to start once\n\t *           the end of a media is reached.\n\t *         - False indicates that playback should not loop back to the start when the\n\t *           end of the media is reached.\n\t */\n\t\n\t/**\n\t * Get the value of `mediaGroup` from the swf.\n\t *\n\t * @method Flash.prototype.mediaGroup\n\t * @return {string}\n\t *         The current value of `mediaGroup` on the swf.\n\t */\n\t\n\t/**\n\t * Get the value of `controller` from the swf.\n\t *\n\t * @method Flash.prototype.controller\n\t * @return {string}\n\t *         The current value of `controller` on the swf.\n\t */\n\t\n\t/**\n\t * Get the value of `controls` from the swf. `controls` indicates\n\t * whether the native flash controls should be shown or hidden.\n\t *\n\t * @method Html5.prototype.controls\n\t * @return {boolean}\n\t *         - The value of `controls` from the swf.\n\t *         - True indicates that native controls should be showing.\n\t *         - False indicates that native controls should be hidden.\n\t */\n\t\n\t/**\n\t * Get the value of the `volume` from the swf. `volume` indicates the current\n\t * audio level as a percentage in decimal form. This means that 1 is 100%, 0.5 is 50%, and\n\t * so on.\n\t *\n\t * @method Flash.prototype.volume\n\t * @return {number}\n\t *         The volume percent as a decimal. Value will be between 0-1.\n\t */\n\t\n\t/**\n\t * Get the value of the `muted` from the swf. `muted` indicates the current\n\t * audio level should be silent.\n\t *\n\t * @method Flash.prototype.muted\n\t * @return {boolean}\n\t *         - True if the audio should be set to silent\n\t *         - False otherwise\n\t */\n\t\n\t/**\n\t * Get the value of `defaultMuted` from the swf. `defaultMuted` indicates\n\t * whether the media should start muted or not. Only changes the default state of the\n\t * media. `muted` and `defaultMuted` can have different values. `muted` indicates the\n\t * current state.\n\t *\n\t * @method Flash.prototype.defaultMuted\n\t * @return {boolean}\n\t *         - The value of `defaultMuted` from the swf.\n\t *         - True indicates that the media should start muted.\n\t *         - False indicates that the media should not start muted.\n\t */\n\t\n\t/**\n\t * Get the value of `networkState` from the swf. `networkState` indicates\n\t * the current network state. It returns an enumeration from the following list:\n\t * - 0: NETWORK_EMPTY\n\t * - 1: NEWORK_IDLE\n\t * - 2: NETWORK_LOADING\n\t * - 3: NETWORK_NO_SOURCE\n\t *\n\t * @method Flash.prototype.networkState\n\t * @return {number}\n\t *         The value of `networkState` from the swf. This will be a number\n\t *         from the list in the description.\n\t */\n\t\n\t/**\n\t * Get the value of `readyState` from the swf. `readyState` indicates\n\t * the current state of the media element. It returns an enumeration from the\n\t * following list:\n\t * - 0: HAVE_NOTHING\n\t * - 1: HAVE_METADATA\n\t * - 2: HAVE_CURRENT_DATA\n\t * - 3: HAVE_FUTURE_DATA\n\t * - 4: HAVE_ENOUGH_DATA\n\t *\n\t * @method Flash.prototype.readyState\n\t * @return {number}\n\t *         The value of `readyState` from the swf. This will be a number\n\t *         from the list in the description.\n\t */\n\t\n\t/**\n\t * Get the value of `readyState` from the swf. `readyState` indicates\n\t * the current state of the media element. It returns an enumeration from the\n\t * following list:\n\t * - 0: HAVE_NOTHING\n\t * - 1: HAVE_METADATA\n\t * - 2: HAVE_CURRENT_DATA\n\t * - 3: HAVE_FUTURE_DATA\n\t * - 4: HAVE_ENOUGH_DATA\n\t *\n\t * @method Flash.prototype.readyState\n\t * @return {number}\n\t *         The value of `readyState` from the swf. This will be a number\n\t *         from the list in the description.\n\t */\n\t\n\t/**\n\t * Get the value of `initialTime` from the swf.\n\t *\n\t * @method Flash.prototype.initialTime\n\t * @return {number}\n\t *         The `initialTime` proprety on the swf.\n\t */\n\t\n\t/**\n\t * Get the value of `startOffsetTime` from the swf.\n\t *\n\t * @method Flash.prototype.startOffsetTime\n\t * @return {number}\n\t *         The `startOffsetTime` proprety on the swf.\n\t */\n\t\n\t/**\n\t * Get the value of `paused` from the swf. `paused` indicates whether the swf\n\t * is current paused or not.\n\t *\n\t * @method Flash.prototype.paused\n\t * @return {boolean}\n\t *         The value of `paused` from the swf.\n\t */\n\t\n\t/**\n\t * Get the value of `ended` from the swf. `ended` indicates whether\n\t * the media has reached the end or not.\n\t *\n\t * @method Flash.prototype.ended\n\t * @return {boolean}\n\t *         - True indicates that the media has ended.\n\t *         - False indicates that the media has not ended.\n\t *\n\t * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-ended}\n\t */\n\t\n\t/**\n\t * Get the value of `videoWidth` from the swf. `videoWidth` indicates\n\t * the current width of the media in css pixels.\n\t *\n\t * @method Flash.prototype.videoWidth\n\t * @return {number}\n\t *         The value of `videoWidth` from the swf. This will be a number\n\t *         in css pixels.\n\t */\n\t\n\t/**\n\t * Get the value of `videoHeight` from the swf. `videoHeigth` indicates\n\t * the current height of the media in css pixels.\n\t *\n\t * @method Flassh.prototype.videoHeight\n\t * @return {number}\n\t *         The value of `videoHeight` from the swf. This will be a number\n\t *         in css pixels.\n\t */\n\t/** ------------------------------ Setters ------------------------------ **/\n\t\n\t/**\n\t * Set the value of `rtmpConnection` on the swf.\n\t *\n\t * @method Flash.prototype.setRtmpConnection\n\t * @param {string} rtmpConnection\n\t *        New value to set the `rtmpConnection` property to.\n\t */\n\t\n\t/**\n\t * Set the value of `rtmpStream` on the swf.\n\t *\n\t * @method Flash.prototype.setRtmpStream\n\t * @param {string} rtmpStream\n\t *        New value to set the `rtmpStream` property to.\n\t */\n\t\n\t/**\n\t * Set the value of `preload` on the swf. `preload` indicates\n\t * what should download before the media is interacted with. It can have the following\n\t * values:\n\t * - none: nothing should be downloaded\n\t * - metadata: poster and the first few frames of the media may be downloaded to get\n\t *   media dimensions and other metadata\n\t * - auto: allow the media and metadata for the media to be downloaded before\n\t *    interaction\n\t *\n\t * @method Flash.prototype.setPreload\n\t * @param {string} preload\n\t *        The value of `preload` to set on the swf. Should be 'none', 'metadata',\n\t *        or 'auto'.\n\t */\n\t\n\t/**\n\t * Set the value of `defaultPlaybackRate` on the swf.\n\t *\n\t * @method Flash.prototype.setDefaultPlaybackRate\n\t * @param {number} defaultPlaybackRate\n\t *        New value to set the `defaultPlaybackRate` property to.\n\t */\n\t\n\t/**\n\t * Set the value of `playbackRate` on the swf. `playbackRate` indicates\n\t * the rate at which the media is currently playing back. Examples:\n\t *   - if playbackRate is set to 2, media will play twice as fast.\n\t *   - if playbackRate is set to 0.5, media will play half as fast.\n\t *\n\t * @method Flash.prototype.setPlaybackRate\n\t * @param {number} playbackRate\n\t *        New value of `playbackRate` on the swf. A number indicating\n\t *        the current playback speed of the media, where 1 is normal speed.\n\t */\n\t\n\t/**\n\t * Set the value of `autoplay` on the swf. `autoplay` indicates\n\t * that the media should start to play as soon as the page is ready.\n\t *\n\t * @method Flash.prototype.setAutoplay\n\t * @param {boolean} autoplay\n\t *        - The value of `autoplay` from the swf.\n\t *        - True indicates that the media ashould start as soon as the page loads.\n\t *        - False indicates that the media should not start as soon as the page loads.\n\t */\n\t\n\t/**\n\t * Set the value of `loop` on the swf. `loop` indicates\n\t * that the media should return to the start of the media and continue playing once\n\t * it reaches the end.\n\t *\n\t * @method Flash.prototype.setLoop\n\t * @param {boolean} loop\n\t *        - True indicates that playback should seek back to start once\n\t *          the end of a media is reached.\n\t *        - False indicates that playback should not loop back to the start when the\n\t *          end of the media is reached.\n\t */\n\t\n\t/**\n\t * Set the value of `mediaGroup` on the swf.\n\t *\n\t * @method Flash.prototype.setMediaGroup\n\t * @param {string} mediaGroup\n\t *        New value of `mediaGroup` to set on the swf.\n\t */\n\t\n\t/**\n\t * Set the value of `controller` on the swf.\n\t *\n\t * @method Flash.prototype.setController\n\t * @param {string} controller\n\t *        New value the current value of `controller` on the swf.\n\t */\n\t\n\t/**\n\t * Get the value of `controls` from the swf. `controls` indicates\n\t * whether the native flash controls should be shown or hidden.\n\t *\n\t * @method Flash.prototype.controls\n\t * @return {boolean}\n\t *         - The value of `controls` from the swf.\n\t *         - True indicates that native controls should be showing.\n\t *         - False indicates that native controls should be hidden.\n\t */\n\t\n\t/**\n\t * Set the value of the `volume` on the swf. `volume` indicates the current\n\t * audio level as a percentage in decimal form. This means that 1 is 100%, 0.5 is 50%, and\n\t * so on.\n\t *\n\t * @method Flash.prototype.setVolume\n\t * @param {number} percentAsDecimal\n\t *         The volume percent as a decimal. Value will be between 0-1.\n\t */\n\t\n\t/**\n\t * Set the value of the `muted` on the swf. `muted` indicates that the current\n\t * audio level should be silent.\n\t *\n\t * @method Flash.prototype.setMuted\n\t * @param {boolean} muted\n\t *         - True if the audio should be set to silent\n\t *         - False otherwise\n\t */\n\t\n\t/**\n\t * Set the value of `defaultMuted` on the swf. `defaultMuted` indicates\n\t * whether the media should start muted or not. Only changes the default state of the\n\t * media. `muted` and `defaultMuted` can have different values. `muted` indicates the\n\t * current state.\n\t *\n\t * @method Flash.prototype.setDefaultMuted\n\t * @param {boolean} defaultMuted\n\t *         - True indicates that the media should start muted.\n\t *         - False indicates that the media should not start muted.\n\t */\n\t\n\t/* Flash Support Testing -------------------------------------------------------- */\n\t\n\t/**\n\t * Check if the Flash tech is currently supported.\n\t *\n\t * @return {boolean}\n\t *          - True if the flash tech is supported.\n\t *          - False otherwise.\n\t */\n\tFlash.isSupported = function () {\n\t  return Flash.version()[0] >= 10;\n\t  // return swfobject.hasFlashPlayerVersion('10');\n\t};\n\t\n\t// Add Source Handler pattern functions to this tech\n\t_tech2['default'].withSourceHandlers(Flash);\n\t\n\t/*\n\t * Native source handler for flash,  simply passes the source to the swf element.\n\t *\n\t * @property {Tech~SourceObject} source\n\t *           The source object\n\t *\n\t * @property {Flash} tech\n\t *           The instance of the Flash tech\n\t */\n\tFlash.nativeSourceHandler = {};\n\t\n\t/**\n\t * Check if the Flash can play the given mime type.\n\t *\n\t * @param {string} type\n\t *        The mimetype to check\n\t *\n\t * @return {string}\n\t *         'maybe', or '' (empty string)\n\t */\n\tFlash.nativeSourceHandler.canPlayType = function (type) {\n\t  if (type in Flash.formats) {\n\t    return 'maybe';\n\t  }\n\t\n\t  return '';\n\t};\n\t\n\t/**\n\t * Check if the media element can handle a source natively.\n\t *\n\t * @param {Tech~SourceObject} source\n\t *         The source object\n\t *\n\t * @param {Object} [options]\n\t *         Options to be passed to the tech.\n\t *\n\t * @return {string}\n\t *         'maybe', or '' (empty string).\n\t */\n\tFlash.nativeSourceHandler.canHandleSource = function (source, options) {\n\t  var type = void 0;\n\t\n\t  function guessMimeType(src) {\n\t    var ext = Url.getFileExtension(src);\n\t\n\t    if (ext) {\n\t      return 'video/' + ext;\n\t    }\n\t    return '';\n\t  }\n\t\n\t  if (!source.type) {\n\t    type = guessMimeType(source.src);\n\t  } else {\n\t    // Strip code information from the type because we don't get that specific\n\t    type = source.type.replace(/;.*/, '').toLowerCase();\n\t  }\n\t\n\t  return Flash.nativeSourceHandler.canPlayType(type);\n\t};\n\t\n\t/**\n\t * Pass the source to the swf.\n\t *\n\t * @param {Tech~SourceObject} source\n\t *        The source object\n\t *\n\t * @param {Flash} tech\n\t *        The instance of the Flash tech\n\t *\n\t * @param {Object} [options]\n\t *        The options to pass to the source\n\t */\n\tFlash.nativeSourceHandler.handleSource = function (source, tech, options) {\n\t  tech.setSrc(source.src);\n\t};\n\t\n\t/**\n\t * noop for native source handler dispose, as cleanup will happen automatically.\n\t */\n\tFlash.nativeSourceHandler.dispose = function () {};\n\t\n\t// Register the native source handler\n\tFlash.registerSourceHandler(Flash.nativeSourceHandler);\n\t\n\t/**\n\t * Flash supported mime types.\n\t *\n\t * @constant {Object}\n\t */\n\tFlash.formats = {\n\t  'video/flv': 'FLV',\n\t  'video/x-flv': 'FLV',\n\t  'video/mp4': 'MP4',\n\t  'video/m4v': 'MP4'\n\t};\n\t\n\t/**\n\t * Called when the the swf is \"ready\", and makes sure that the swf is really\n\t * ready using {@link Flash#checkReady}\n\t */\n\tFlash.onReady = function (currSwf) {\n\t  var el = Dom.getEl(currSwf);\n\t  var tech = el && el.tech;\n\t\n\t  // if there is no el then the tech has been disposed\n\t  // and the tech element was removed from the player div\n\t  if (tech && tech.el()) {\n\t    // check that the flash object is really ready\n\t    Flash.checkReady(tech);\n\t  }\n\t};\n\t\n\t/**\n\t * The SWF isn't always ready when it says it is. Sometimes the API functions still\n\t * need to be added to the object. If it's not ready, we set a timeout to check again\n\t * shortly.\n\t *\n\t * @param {Flash} tech\n\t *        The instance of the flash tech to check.\n\t */\n\tFlash.checkReady = function (tech) {\n\t  // stop worrying if the tech has been disposed\n\t  if (!tech.el()) {\n\t    return;\n\t  }\n\t\n\t  // check if API property exists\n\t  if (tech.el().vjs_getProperty) {\n\t    // tell tech it's ready\n\t    tech.triggerReady();\n\t  } else {\n\t    // wait longer\n\t    this.setTimeout(function () {\n\t      Flash.checkReady(tech);\n\t    }, 50);\n\t  }\n\t};\n\t\n\t/**\n\t * Trigger events from the swf on the Flash Tech.\n\t *\n\t * @param {number} swfID\n\t *        The id of the swf that had the event\n\t *\n\t * @param {string} eventName\n\t *        The name of the event to trigger\n\t */\n\tFlash.onEvent = function (swfID, eventName) {\n\t  var tech = Dom.getEl(swfID).tech;\n\t  var args = Array.prototype.slice.call(arguments, 2);\n\t\n\t  // dispatch Flash events asynchronously for two reasons:\n\t  // - Flash swallows any exceptions generated by javascript it\n\t  //   invokes\n\t  // - Flash is suspended until the javascript returns which may cause\n\t  //   playback performance issues\n\t  tech.setTimeout(function () {\n\t    tech.trigger(eventName, args);\n\t  }, 1);\n\t};\n\t\n\t/**\n\t * Log errors from the swf on the Flash tech.\n\t *\n\t * @param {number} swfID\n\t *        The id of the swf that had an error.\n\t *\n\t * @param {string} The error string\n\t *        The error to set on the Flash Tech.\n\t *\n\t * @return {MediaError|undefined}\n\t *          - Returns a MediaError when err is 'srcnotfound'\n\t *          - Returns undefined otherwise.\n\t */\n\tFlash.onError = function (swfID, err) {\n\t  var tech = Dom.getEl(swfID).tech;\n\t\n\t  // trigger MEDIA_ERR_SRC_NOT_SUPPORTED\n\t  if (err === 'srcnotfound') {\n\t    return tech.error(4);\n\t  }\n\t\n\t  // trigger a custom error\n\t  tech.error('FLASH: ' + err);\n\t};\n\t\n\t/**\n\t * Get the current version of Flash that is in use on the page.\n\t *\n\t * @return {Array}\n\t *          an array of versions that are available.\n\t */\n\tFlash.version = function () {\n\t  var version = '0,0,0';\n\t\n\t  // IE\n\t  try {\n\t    version = new _window2['default'].ActiveXObject('ShockwaveFlash.ShockwaveFlash').GetVariable('$version').replace(/\\D+/g, ',').match(/^,?(.+),?$/)[1];\n\t\n\t    // other browsers\n\t  } catch (e) {\n\t    try {\n\t      if (navigator.mimeTypes['application/x-shockwave-flash'].enabledPlugin) {\n\t        version = (navigator.plugins['Shockwave Flash 2.0'] || navigator.plugins['Shockwave Flash']).description.replace(/\\D+/g, ',').match(/^,?(.+),?$/)[1];\n\t      }\n\t    } catch (err) {\n\t      // satisfy linter\n\t    }\n\t  }\n\t  return version.split(',');\n\t};\n\t\n\t/**\n\t * Only use for non-iframe embeds.\n\t *\n\t * @param {Object} swf\n\t *        The videojs-swf object.\n\t *\n\t * @param {Object} flashVars\n\t *        Names and values to use as flash option variables.\n\t *\n\t * @param {Object} params\n\t *        Style parameters to set on the object.\n\t *\n\t * @param {Object} attributes\n\t *        Attributes to set on the element.\n\t *\n\t * @return {Element}\n\t *          The embeded Flash DOM element.\n\t */\n\tFlash.embed = function (swf, flashVars, params, attributes) {\n\t  var code = Flash.getEmbedCode(swf, flashVars, params, attributes);\n\t\n\t  // Get element by embedding code and retrieving created element\n\t  var obj = Dom.createEl('div', { innerHTML: code }).childNodes[0];\n\t\n\t  return obj;\n\t};\n\t\n\t/**\n\t * Only use for non-iframe embeds.\n\t *\n\t * @param {Object} swf\n\t *        The videojs-swf object.\n\t *\n\t * @param {Object} flashVars\n\t *        Names and values to use as flash option variables.\n\t *\n\t * @param {Object} params\n\t *        Style parameters to set on the object.\n\t *\n\t * @param {Object} attributes\n\t *        Attributes to set on the element.\n\t *\n\t * @return {Element}\n\t *          The embeded Flash DOM element.\n\t */\n\tFlash.getEmbedCode = function (swf, flashVars, params, attributes) {\n\t  var objTag = '<object type=\"application/x-shockwave-flash\" ';\n\t  var flashVarsString = '';\n\t  var paramsString = '';\n\t  var attrsString = '';\n\t\n\t  // Convert flash vars to string\n\t  if (flashVars) {\n\t    Object.getOwnPropertyNames(flashVars).forEach(function (key) {\n\t      flashVarsString += key + '=' + flashVars[key] + '&amp;';\n\t    });\n\t  }\n\t\n\t  // Add swf, flashVars, and other default params\n\t  params = (0, _obj.assign)({\n\t    movie: swf,\n\t    flashvars: flashVarsString,\n\t    // Required to talk to swf\n\t    allowScriptAccess: 'always',\n\t    // All should be default, but having security issues.\n\t    allowNetworking: 'all'\n\t  }, params);\n\t\n\t  // Create param tags string\n\t  Object.getOwnPropertyNames(params).forEach(function (key) {\n\t    paramsString += '<param name=\"' + key + '\" value=\"' + params[key] + '\" />';\n\t  });\n\t\n\t  attributes = (0, _obj.assign)({\n\t    // Add swf to attributes (need both for IE and Others to work)\n\t    data: swf,\n\t\n\t    // Default to 100% width/height\n\t    width: '100%',\n\t    height: '100%'\n\t\n\t  }, attributes);\n\t\n\t  // Create Attributes string\n\t  Object.getOwnPropertyNames(attributes).forEach(function (key) {\n\t    attrsString += key + '=\"' + attributes[key] + '\" ';\n\t  });\n\t\n\t  return '' + objTag + attrsString + '>' + paramsString + '</object>';\n\t};\n\t\n\t// Run Flash through the RTMP decorator\n\t(0, _flashRtmp2['default'])(Flash);\n\t\n\t_component2['default'].registerComponent('Flash', Flash);\n\t_tech2['default'].registerTech('Flash', Flash);\n\texports['default'] = Flash;\n\n\n/***/ },\n/* 50 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\texports.__esModule = true;\n\t/**\n\t * @file flash-rtmp.js\n\t * @module flash-rtmp\n\t */\n\t\n\t/**\n\t * Add RTMP properties to the {@link Flash} Tech.\n\t *\n\t * @param {Flash} Flash\n\t *        The flash tech class.\n\t *\n\t * @mixin FlashRtmpDecorator\n\t */\n\tfunction FlashRtmpDecorator(Flash) {\n\t  Flash.streamingFormats = {\n\t    'rtmp/mp4': 'MP4',\n\t    'rtmp/flv': 'FLV'\n\t  };\n\t\n\t  /**\n\t   * Join connection and stream with an ampersand.\n\t   *\n\t   * @param {string} connection\n\t   *        The connection string.\n\t   *\n\t   * @param {string} stream\n\t   *        The stream string.\n\t   */\n\t  Flash.streamFromParts = function (connection, stream) {\n\t    return connection + '&' + stream;\n\t  };\n\t\n\t  /**\n\t   * The flash parts object that contains connection and stream info.\n\t   *\n\t   * @typedef {Object} Flash~PartsObject\n\t   *\n\t   * @property {string} connection\n\t   *           The connection string of a source, defaults to an empty string.\n\t   *\n\t   * @property {string} stream\n\t   *           The stream string of the source, defaults to an empty string.\n\t   */\n\t\n\t  /**\n\t   * Convert a source url into a stream and connection parts.\n\t   *\n\t   * @param {string} src\n\t   *        the source url\n\t   *\n\t   * @return {Flash~PartsObject}\n\t   *         The parts object that contains a connection and a stream\n\t   */\n\t  Flash.streamToParts = function (src) {\n\t    var parts = {\n\t      connection: '',\n\t      stream: ''\n\t    };\n\t\n\t    if (!src) {\n\t      return parts;\n\t    }\n\t\n\t    // Look for the normal URL separator we expect, '&'.\n\t    // If found, we split the URL into two pieces around the\n\t    // first '&'.\n\t    var connEnd = src.search(/&(?!\\w+=)/);\n\t    var streamBegin = void 0;\n\t\n\t    if (connEnd !== -1) {\n\t      streamBegin = connEnd + 1;\n\t    } else {\n\t      // If there's not a '&', we use the last '/' as the delimiter.\n\t      connEnd = streamBegin = src.lastIndexOf('/') + 1;\n\t      if (connEnd === 0) {\n\t        // really, there's not a '/'?\n\t        connEnd = streamBegin = src.length;\n\t      }\n\t    }\n\t\n\t    parts.connection = src.substring(0, connEnd);\n\t    parts.stream = src.substring(streamBegin, src.length);\n\t\n\t    return parts;\n\t  };\n\t\n\t  /**\n\t   * Check if the source type is a streaming type.\n\t   *\n\t   * @param {string} srcType\n\t   *        The mime type to check.\n\t   *\n\t   * @return {boolean}\n\t   *          - True if the source type is a streaming type.\n\t   *          - False if the source type is not a streaming type.\n\t   */\n\t  Flash.isStreamingType = function (srcType) {\n\t    return srcType in Flash.streamingFormats;\n\t  };\n\t\n\t  // RTMP has four variations, any string starting\n\t  // with one of these protocols should be valid\n\t\n\t  /**\n\t   * Regular expression used to check if the source is an rtmp source.\n\t   *\n\t   * @property\n\t   * @type {RegExp}\n\t   */\n\t  Flash.RTMP_RE = /^rtmp[set]?:\\/\\//i;\n\t\n\t  /**\n\t   * Check if the source itself is a streaming type.\n\t   *\n\t   * @param {string} src\n\t   *        The url to the source.\n\t   *\n\t   * @return {boolean}\n\t   *          - True if the source url indicates that the source is streaming.\n\t   *          - False if the shource url indicates that the source url is not streaming.\n\t   */\n\t  Flash.isStreamingSrc = function (src) {\n\t    return Flash.RTMP_RE.test(src);\n\t  };\n\t\n\t  /**\n\t   * A source handler for RTMP urls\n\t   * @type {Object}\n\t   */\n\t  Flash.rtmpSourceHandler = {};\n\t\n\t  /**\n\t   * Check if Flash can play the given mime type.\n\t   *\n\t   * @param {string} type\n\t   *        The mime type to check\n\t   *\n\t   * @return {string}\n\t   *         'maybe', or '' (empty string)\n\t   */\n\t  Flash.rtmpSourceHandler.canPlayType = function (type) {\n\t    if (Flash.isStreamingType(type)) {\n\t      return 'maybe';\n\t    }\n\t\n\t    return '';\n\t  };\n\t\n\t  /**\n\t   * Check if Flash can handle the source natively\n\t   *\n\t   * @param {Object} source\n\t   *        The source object\n\t   *\n\t   * @param {Object} [options]\n\t   *        The options passed to the tech\n\t   *\n\t   * @return {string}\n\t   *         'maybe', or '' (empty string)\n\t   */\n\t  Flash.rtmpSourceHandler.canHandleSource = function (source, options) {\n\t    var can = Flash.rtmpSourceHandler.canPlayType(source.type);\n\t\n\t    if (can) {\n\t      return can;\n\t    }\n\t\n\t    if (Flash.isStreamingSrc(source.src)) {\n\t      return 'maybe';\n\t    }\n\t\n\t    return '';\n\t  };\n\t\n\t  /**\n\t   * Pass the source to the flash object.\n\t   *\n\t   * @param {Object} source\n\t   *        The source object\n\t   *\n\t   * @param {Flash} tech\n\t   *        The instance of the Flash tech\n\t   *\n\t   * @param {Object} [options]\n\t   *        The options to pass to the source\n\t   */\n\t  Flash.rtmpSourceHandler.handleSource = function (source, tech, options) {\n\t    var srcParts = Flash.streamToParts(source.src);\n\t\n\t    tech.setRtmpConnection(srcParts.connection);\n\t    tech.setRtmpStream(srcParts.stream);\n\t  };\n\t\n\t  // Register the native source handler\n\t  Flash.registerSourceHandler(Flash.rtmpSourceHandler);\n\t\n\t  return Flash;\n\t}\n\t\n\texports['default'] = FlashRtmpDecorator;\n\n\n/***/ },\n/* 51 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\texports.__esModule = true;\n\t\n\tvar _clickableComponent = __webpack_require__(52);\n\t\n\tvar _clickableComponent2 = _interopRequireDefault(_clickableComponent);\n\t\n\tvar _component = __webpack_require__(16);\n\t\n\tvar _component2 = _interopRequireDefault(_component);\n\t\n\tvar _fn = __webpack_require__(17);\n\t\n\tvar Fn = _interopRequireWildcard(_fn);\n\t\n\tvar _dom = __webpack_require__(9);\n\t\n\tvar Dom = _interopRequireWildcard(_dom);\n\t\n\tvar _browser = __webpack_require__(12);\n\t\n\tvar browser = _interopRequireWildcard(_browser);\n\t\n\tfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj['default'] = obj; return newObj; } }\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /**\n\t                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * @file poster-image.js\n\t                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                */\n\t\n\t\n\t/**\n\t * A `ClickableComponent` that handles showing the poster image for the player.\n\t *\n\t * @extends ClickableComponent\n\t */\n\tvar PosterImage = function (_ClickableComponent) {\n\t  _inherits(PosterImage, _ClickableComponent);\n\t\n\t  /**\n\t   * Create an instance of this class.\n\t   *\n\t   * @param {Player} player\n\t   *        The `Player` that this class should attach to.\n\t   *\n\t   * @param {Object} [options]\n\t   *        The key/value store of player options.\n\t   */\n\t  function PosterImage(player, options) {\n\t    _classCallCheck(this, PosterImage);\n\t\n\t    var _this = _possibleConstructorReturn(this, _ClickableComponent.call(this, player, options));\n\t\n\t    _this.update();\n\t    player.on('posterchange', Fn.bind(_this, _this.update));\n\t    return _this;\n\t  }\n\t\n\t  /**\n\t   * Clean up and dispose of the `PosterImage`.\n\t   */\n\t\n\t\n\t  PosterImage.prototype.dispose = function dispose() {\n\t    this.player().off('posterchange', this.update);\n\t    _ClickableComponent.prototype.dispose.call(this);\n\t  };\n\t\n\t  /**\n\t   * Create the `PosterImage`s DOM element.\n\t   *\n\t   * @return {Element}\n\t   *         The element that gets created.\n\t   */\n\t\n\t\n\t  PosterImage.prototype.createEl = function createEl() {\n\t    var el = Dom.createEl('div', {\n\t      className: 'vjs-poster',\n\t\n\t      // Don't want poster to be tabbable.\n\t      tabIndex: -1\n\t    });\n\t\n\t    // To ensure the poster image resizes while maintaining its original aspect\n\t    // ratio, use a div with `background-size` when available. For browsers that\n\t    // do not support `background-size` (e.g. IE8), fall back on using a regular\n\t    // img element.\n\t    if (!browser.BACKGROUND_SIZE_SUPPORTED) {\n\t      this.fallbackImg_ = Dom.createEl('img');\n\t      el.appendChild(this.fallbackImg_);\n\t    }\n\t\n\t    return el;\n\t  };\n\t\n\t  /**\n\t   * An {@link EventTarget~EventListener} for {@link Player#posterchange} events.\n\t   *\n\t   * @listens Player#posterchange\n\t   *\n\t   * @param {EventTarget~Event} [event]\n\t   *        The `Player#posterchange` event that triggered this function.\n\t   */\n\t\n\t\n\t  PosterImage.prototype.update = function update(event) {\n\t    var url = this.player().poster();\n\t\n\t    this.setSrc(url);\n\t\n\t    // If there's no poster source we should display:none on this component\n\t    // so it's not still clickable or right-clickable\n\t    if (url) {\n\t      this.show();\n\t    } else {\n\t      this.hide();\n\t    }\n\t  };\n\t\n\t  /**\n\t   * Set the source of the `PosterImage` depending on the display method.\n\t   *\n\t   * @param {String} url\n\t   *        The URL to the source for the `PosterImage`.\n\t   */\n\t\n\t\n\t  PosterImage.prototype.setSrc = function setSrc(url) {\n\t    if (this.fallbackImg_) {\n\t      this.fallbackImg_.src = url;\n\t    } else {\n\t      var backgroundImage = '';\n\t\n\t      // Any falsey values should stay as an empty string, otherwise\n\t      // this will throw an extra error\n\t      if (url) {\n\t        backgroundImage = 'url(\"' + url + '\")';\n\t      }\n\t\n\t      this.el_.style.backgroundImage = backgroundImage;\n\t    }\n\t  };\n\t\n\t  /**\n\t   * An {@link EventTarget~EventListener} for clicks on the `PosterImage`. See\n\t   * {@link ClickableComponent#handleClick} for instances where this will be triggered.\n\t   *\n\t   * @listens tap\n\t   * @listens click\n\t   * @listens keydown\n\t   *\n\t   * @param {EventTarget~Event} event\n\t   +        The `click`, `tap` or `keydown` event that caused this function to be called.\n\t   */\n\t\n\t\n\t  PosterImage.prototype.handleClick = function handleClick(event) {\n\t    // We don't want a click to trigger playback when controls are disabled\n\t    // but CSS should be hiding the poster to prevent that from happening\n\t    if (this.player_.paused()) {\n\t      this.player_.play();\n\t    } else {\n\t      this.player_.pause();\n\t    }\n\t  };\n\t\n\t  return PosterImage;\n\t}(_clickableComponent2['default']);\n\t\n\t_component2['default'].registerComponent('PosterImage', PosterImage);\n\texports['default'] = PosterImage;\n\n\n/***/ },\n/* 52 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\texports.__esModule = true;\n\t\n\tvar _component = __webpack_require__(16);\n\t\n\tvar _component2 = _interopRequireDefault(_component);\n\t\n\tvar _dom = __webpack_require__(9);\n\t\n\tvar Dom = _interopRequireWildcard(_dom);\n\t\n\tvar _events = __webpack_require__(8);\n\t\n\tvar Events = _interopRequireWildcard(_events);\n\t\n\tvar _fn = __webpack_require__(17);\n\t\n\tvar Fn = _interopRequireWildcard(_fn);\n\t\n\tvar _log = __webpack_require__(11);\n\t\n\tvar _log2 = _interopRequireDefault(_log);\n\t\n\tvar _document = __webpack_require__(5);\n\t\n\tvar _document2 = _interopRequireDefault(_document);\n\t\n\tvar _obj = __webpack_require__(13);\n\t\n\tfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj['default'] = obj; return newObj; } }\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /**\n\t                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * @file button.js\n\t                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                */\n\t\n\t\n\t/**\n\t * Clickable Component which is clickable or keyboard actionable,\n\t * but is not a native HTML button.\n\t *\n\t * @extends Component\n\t */\n\tvar ClickableComponent = function (_Component) {\n\t  _inherits(ClickableComponent, _Component);\n\t\n\t  /**\n\t   * Creates an instance of this class.\n\t   *\n\t   * @param  {Player} player\n\t   *         The `Player` that this class should be attached to.\n\t   *\n\t   * @param  {Object} [options]\n\t   *         The key/value store of player options.\n\t   */\n\t  function ClickableComponent(player, options) {\n\t    _classCallCheck(this, ClickableComponent);\n\t\n\t    var _this = _possibleConstructorReturn(this, _Component.call(this, player, options));\n\t\n\t    _this.emitTapEvents();\n\t\n\t    _this.enable();\n\t    return _this;\n\t  }\n\t\n\t  /**\n\t   * Create the `Component`s DOM element.\n\t   *\n\t   * @param {string} [tag=div]\n\t   *        The element's node type.\n\t   *\n\t   * @param {Object} [props={}]\n\t   *        An object of properties that should be set on the element.\n\t   *\n\t   * @param {Object} [attributes={}]\n\t   *        An object of attributes that should be set on the element.\n\t   *\n\t   * @return {Element}\n\t   *         The element that gets created.\n\t   */\n\t\n\t\n\t  ClickableComponent.prototype.createEl = function createEl() {\n\t    var tag = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'div';\n\t    var props = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\t    var attributes = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n\t\n\t    props = (0, _obj.assign)({\n\t      className: this.buildCSSClass(),\n\t      tabIndex: 0\n\t    }, props);\n\t\n\t    if (tag === 'button') {\n\t      _log2['default'].error('Creating a ClickableComponent with an HTML element of ' + tag + ' is not supported; use a Button instead.');\n\t    }\n\t\n\t    // Add ARIA attributes for clickable element which is not a native HTML button\n\t    attributes = (0, _obj.assign)({\n\t      'role': 'button',\n\t\n\t      // let the screen reader user know that the text of the element may change\n\t      'aria-live': 'polite'\n\t    }, attributes);\n\t\n\t    this.tabIndex_ = props.tabIndex;\n\t\n\t    var el = _Component.prototype.createEl.call(this, tag, props, attributes);\n\t\n\t    this.createControlTextEl(el);\n\t\n\t    return el;\n\t  };\n\t\n\t  /**\n\t   * Create a control text element on this `Component`\n\t   *\n\t   * @param {Element} [el]\n\t   *        Parent element for the control text.\n\t   *\n\t   * @return {Element}\n\t   *         The control text element that gets created.\n\t   */\n\t\n\t\n\t  ClickableComponent.prototype.createControlTextEl = function createControlTextEl(el) {\n\t    this.controlTextEl_ = Dom.createEl('span', {\n\t      className: 'vjs-control-text'\n\t    });\n\t\n\t    if (el) {\n\t      el.appendChild(this.controlTextEl_);\n\t    }\n\t\n\t    this.controlText(this.controlText_, el);\n\t\n\t    return this.controlTextEl_;\n\t  };\n\t\n\t  /**\n\t   * Get or set the localize text to use for the controls on the `Component`.\n\t   *\n\t   * @param {string} [text]\n\t   *        Control text for element.\n\t   *\n\t   * @param {Element} [el=this.el()]\n\t   *        Element to set the title on.\n\t   *\n\t   * @return {string|ClickableComponent}\n\t   *         - The control text when getting\n\t   *         - Returns itself when setting; method can be chained.\n\t   */\n\t\n\t\n\t  ClickableComponent.prototype.controlText = function controlText(text) {\n\t    var el = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.el();\n\t\n\t    if (!text) {\n\t      return this.controlText_ || 'Need Text';\n\t    }\n\t\n\t    var localizedText = this.localize(text);\n\t\n\t    this.controlText_ = text;\n\t    this.controlTextEl_.innerHTML = localizedText;\n\t    el.setAttribute('title', localizedText);\n\t\n\t    return this;\n\t  };\n\t\n\t  /**\n\t   * Builds the default DOM `className`.\n\t   *\n\t   * @return {string}\n\t   *         The DOM `className` for this object.\n\t   */\n\t\n\t\n\t  ClickableComponent.prototype.buildCSSClass = function buildCSSClass() {\n\t    return 'vjs-control vjs-button ' + _Component.prototype.buildCSSClass.call(this);\n\t  };\n\t\n\t  /**\n\t   * Enable this `Component`s element.\n\t   *\n\t   * @return {ClickableComponent}\n\t   *         Returns itself; method can be chained.\n\t   */\n\t\n\t\n\t  ClickableComponent.prototype.enable = function enable() {\n\t    this.removeClass('vjs-disabled');\n\t    this.el_.setAttribute('aria-disabled', 'false');\n\t    if (typeof this.tabIndex_ !== 'undefined') {\n\t      this.el_.setAttribute('tabIndex', this.tabIndex_);\n\t    }\n\t    this.on('tap', this.handleClick);\n\t    this.on('click', this.handleClick);\n\t    this.on('focus', this.handleFocus);\n\t    this.on('blur', this.handleBlur);\n\t    return this;\n\t  };\n\t\n\t  /**\n\t   * Disable this `Component`s element.\n\t   *\n\t   * @return {ClickableComponent}\n\t   *         Returns itself; method can be chained.\n\t   */\n\t\n\t\n\t  ClickableComponent.prototype.disable = function disable() {\n\t    this.addClass('vjs-disabled');\n\t    this.el_.setAttribute('aria-disabled', 'true');\n\t    if (typeof this.tabIndex_ !== 'undefined') {\n\t      this.el_.removeAttribute('tabIndex');\n\t    }\n\t    this.off('tap', this.handleClick);\n\t    this.off('click', this.handleClick);\n\t    this.off('focus', this.handleFocus);\n\t    this.off('blur', this.handleBlur);\n\t    return this;\n\t  };\n\t\n\t  /**\n\t   * This gets called when a `ClickableComponent` gets:\n\t   * - Clicked (via the `click` event, listening starts in the constructor)\n\t   * - Tapped (via the `tap` event, listening starts in the constructor)\n\t   * - The following things happen in order:\n\t   *   1. {@link ClickableComponent#handleFocus} is called via a `focus` event on the\n\t   *      `ClickableComponent`.\n\t   *   2. {@link ClickableComponent#handleFocus} adds a listener for `keydown` on using\n\t   *      {@link ClickableComponent#handleKeyPress}.\n\t   *   3. `ClickableComponent` has not had a `blur` event (`blur` means that focus was lost). The user presses\n\t   *      the space or enter key.\n\t   *   4. {@link ClickableComponent#handleKeyPress} calls this function with the `keydown`\n\t   *      event as a parameter.\n\t   *\n\t   * @param {EventTarget~Event} event\n\t   *        The `keydown`, `tap`, or `click` event that caused this function to be\n\t   *        called.\n\t   *\n\t   * @listens tap\n\t   * @listens click\n\t   * @abstract\n\t   */\n\t\n\t\n\t  ClickableComponent.prototype.handleClick = function handleClick(event) {};\n\t\n\t  /**\n\t   * This gets called when a `ClickableComponent` gains focus via a `focus` event.\n\t   * Turns on listening for `keydown` events. When they happen it\n\t   * calls `this.handleKeyPress`.\n\t   *\n\t   * @param {EventTarget~Event} event\n\t   *        The `focus` event that caused this function to be called.\n\t   *\n\t   * @listens focus\n\t   */\n\t\n\t\n\t  ClickableComponent.prototype.handleFocus = function handleFocus(event) {\n\t    Events.on(_document2['default'], 'keydown', Fn.bind(this, this.handleKeyPress));\n\t  };\n\t\n\t  /**\n\t   * Called when this ClickableComponent has focus and a key gets pressed down. By\n\t   * default it will call `this.handleClick` when the key is space or enter.\n\t   *\n\t   * @param {EventTarget~Event} event\n\t   *        The `keydown` event that caused this function to be called.\n\t   *\n\t   * @listens keydown\n\t   */\n\t\n\t\n\t  ClickableComponent.prototype.handleKeyPress = function handleKeyPress(event) {\n\t\n\t    // Support Space (32) or Enter (13) key operation to fire a click event\n\t    if (event.which === 32 || event.which === 13) {\n\t      event.preventDefault();\n\t      this.handleClick(event);\n\t    } else if (_Component.prototype.handleKeyPress) {\n\t\n\t      // Pass keypress handling up for unsupported keys\n\t      _Component.prototype.handleKeyPress.call(this, event);\n\t    }\n\t  };\n\t\n\t  /**\n\t   * Called when a `ClickableComponent` loses focus. Turns off the listener for\n\t   * `keydown` events. Which Stops `this.handleKeyPress` from getting called.\n\t   *\n\t   * @param {EventTarget~Event} event\n\t   *        The `blur` event that caused this function to be called.\n\t   *\n\t   * @listens blur\n\t   */\n\t\n\t\n\t  ClickableComponent.prototype.handleBlur = function handleBlur(event) {\n\t    Events.off(_document2['default'], 'keydown', Fn.bind(this, this.handleKeyPress));\n\t  };\n\t\n\t  return ClickableComponent;\n\t}(_component2['default']);\n\t\n\t_component2['default'].registerComponent('ClickableComponent', ClickableComponent);\n\texports['default'] = ClickableComponent;\n\n\n/***/ },\n/* 53 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\texports.__esModule = true;\n\t\n\tvar _component = __webpack_require__(16);\n\t\n\tvar _component2 = _interopRequireDefault(_component);\n\t\n\tvar _fn = __webpack_require__(17);\n\t\n\tvar Fn = _interopRequireWildcard(_fn);\n\t\n\tvar _window = __webpack_require__(4);\n\t\n\tvar _window2 = _interopRequireDefault(_window);\n\t\n\tfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj['default'] = obj; return newObj; } }\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /**\n\t                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * @file text-track-display.js\n\t                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                */\n\t\n\t\n\tvar darkGray = '#222';\n\tvar lightGray = '#ccc';\n\tvar fontMap = {\n\t  monospace: 'monospace',\n\t  sansSerif: 'sans-serif',\n\t  serif: 'serif',\n\t  monospaceSansSerif: '\"Andale Mono\", \"Lucida Console\", monospace',\n\t  monospaceSerif: '\"Courier New\", monospace',\n\t  proportionalSansSerif: 'sans-serif',\n\t  proportionalSerif: 'serif',\n\t  casual: '\"Comic Sans MS\", Impact, fantasy',\n\t  script: '\"Monotype Corsiva\", cursive',\n\t  smallcaps: '\"Andale Mono\", \"Lucida Console\", monospace, sans-serif'\n\t};\n\t\n\t/**\n\t * Construct an rgba color from a given hex color code.\n\t *\n\t * @param {number} color\n\t *        Hex number for color, like #f0e.\n\t *\n\t * @param {number} opacity\n\t *        Value for opacity, 0.0 - 1.0.\n\t *\n\t * @return {string}\n\t *         The rgba color that was created, like 'rgba(255, 0, 0, 0.3)'.\n\t *\n\t * @private\n\t */\n\tfunction constructColor(color, opacity) {\n\t  return 'rgba(' +\n\t  // color looks like \"#f0e\"\n\t  parseInt(color[1] + color[1], 16) + ',' + parseInt(color[2] + color[2], 16) + ',' + parseInt(color[3] + color[3], 16) + ',' + opacity + ')';\n\t}\n\t\n\t/**\n\t * Try to update the style of a DOM element. Some style changes will throw an error,\n\t * particularly in IE8. Those should be noops.\n\t *\n\t * @param {Element} el\n\t *        The DOM element to be styled.\n\t *\n\t * @param {string} style\n\t *        The CSS property on the element that should be styled.\n\t *\n\t * @param {string} rule\n\t *        The style rule that should be applied to the property.\n\t */\n\tfunction tryUpdateStyle(el, style, rule) {\n\t  try {\n\t    el.style[style] = rule;\n\t  } catch (e) {\n\t\n\t    // Satisfies linter.\n\t    return;\n\t  }\n\t}\n\t\n\t/**\n\t * The component for displaying text track cues.\n\t *\n\t * @extends Component\n\t */\n\t\n\tvar TextTrackDisplay = function (_Component) {\n\t  _inherits(TextTrackDisplay, _Component);\n\t\n\t  /**\n\t   * Creates an instance of this class.\n\t   *\n\t   * @param {Player} player\n\t   *        The `Player` that this class should be attached to.\n\t   *\n\t   * @param {Object} [options]\n\t   *        The key/value store of player options.\n\t   *\n\t   * @param {Component~ReadyCallback} [ready]\n\t   *        The function to call when `TextTrackDisplay` is ready.\n\t   */\n\t  function TextTrackDisplay(player, options, ready) {\n\t    _classCallCheck(this, TextTrackDisplay);\n\t\n\t    var _this = _possibleConstructorReturn(this, _Component.call(this, player, options, ready));\n\t\n\t    player.on('loadstart', Fn.bind(_this, _this.toggleDisplay));\n\t    player.on('texttrackchange', Fn.bind(_this, _this.updateDisplay));\n\t\n\t    // This used to be called during player init, but was causing an error\n\t    // if a track should show by default and the display hadn't loaded yet.\n\t    // Should probably be moved to an external track loader when we support\n\t    // tracks that don't need a display.\n\t    player.ready(Fn.bind(_this, function () {\n\t      if (player.tech_ && player.tech_.featuresNativeTextTracks) {\n\t        this.hide();\n\t        return;\n\t      }\n\t\n\t      player.on('fullscreenchange', Fn.bind(this, this.updateDisplay));\n\t\n\t      var tracks = this.options_.playerOptions.tracks || [];\n\t\n\t      for (var i = 0; i < tracks.length; i++) {\n\t        this.player_.addRemoteTextTrack(tracks[i]);\n\t      }\n\t\n\t      var modes = { captions: 1, subtitles: 1 };\n\t      var trackList = this.player_.textTracks();\n\t      var firstDesc = void 0;\n\t      var firstCaptions = void 0;\n\t\n\t      if (trackList) {\n\t        for (var _i = 0; _i < trackList.length; _i++) {\n\t          var track = trackList[_i];\n\t\n\t          if (track['default']) {\n\t            if (track.kind === 'descriptions' && !firstDesc) {\n\t              firstDesc = track;\n\t            } else if (track.kind in modes && !firstCaptions) {\n\t              firstCaptions = track;\n\t            }\n\t          }\n\t        }\n\t\n\t        // We want to show the first default track but captions and subtitles\n\t        // take precedence over descriptions.\n\t        // So, display the first default captions or subtitles track\n\t        // and otherwise the first default descriptions track.\n\t        if (firstCaptions) {\n\t          firstCaptions.mode = 'showing';\n\t        } else if (firstDesc) {\n\t          firstDesc.mode = 'showing';\n\t        }\n\t      }\n\t    }));\n\t    return _this;\n\t  }\n\t\n\t  /**\n\t   * Turn display of {@link TextTrack}'s from the current state into the other state.\n\t   * There are only two states:\n\t   * - 'shown'\n\t   * - 'hidden'\n\t   *\n\t   * @listens Player#loadstart\n\t   */\n\t\n\t\n\t  TextTrackDisplay.prototype.toggleDisplay = function toggleDisplay() {\n\t    if (this.player_.tech_ && this.player_.tech_.featuresNativeTextTracks) {\n\t      this.hide();\n\t    } else {\n\t      this.show();\n\t    }\n\t  };\n\t\n\t  /**\n\t   * Create the {@link Component}'s DOM element.\n\t   *\n\t   * @return {Element}\n\t   *         The element that was created.\n\t   */\n\t\n\t\n\t  TextTrackDisplay.prototype.createEl = function createEl() {\n\t    return _Component.prototype.createEl.call(this, 'div', {\n\t      className: 'vjs-text-track-display'\n\t    }, {\n\t      'aria-live': 'off',\n\t      'aria-atomic': 'true'\n\t    });\n\t  };\n\t\n\t  /**\n\t   * Clear all displayed {@link TextTrack}s.\n\t   */\n\t\n\t\n\t  TextTrackDisplay.prototype.clearDisplay = function clearDisplay() {\n\t    if (typeof _window2['default'].WebVTT === 'function') {\n\t      _window2['default'].WebVTT.processCues(_window2['default'], [], this.el_);\n\t    }\n\t  };\n\t\n\t  /**\n\t   * Update the displayed TextTrack when a either a {@link Player#texttrackchange} or\n\t   * a {@link Player#fullscreenchange} is fired.\n\t   *\n\t   * @listens Player#texttrackchange\n\t   * @listens Player#fullscreenchange\n\t   */\n\t\n\t\n\t  TextTrackDisplay.prototype.updateDisplay = function updateDisplay() {\n\t    var tracks = this.player_.textTracks();\n\t\n\t    this.clearDisplay();\n\t\n\t    if (!tracks) {\n\t      return;\n\t    }\n\t\n\t    // Track display prioritization model: if multiple tracks are 'showing',\n\t    //  display the first 'subtitles' or 'captions' track which is 'showing',\n\t    //  otherwise display the first 'descriptions' track which is 'showing'\n\t\n\t    var descriptionsTrack = null;\n\t    var captionsSubtitlesTrack = null;\n\t\n\t    var i = tracks.length;\n\t\n\t    while (i--) {\n\t      var track = tracks[i];\n\t\n\t      if (track.mode === 'showing') {\n\t        if (track.kind === 'descriptions') {\n\t          descriptionsTrack = track;\n\t        } else {\n\t          captionsSubtitlesTrack = track;\n\t        }\n\t      }\n\t    }\n\t\n\t    if (captionsSubtitlesTrack) {\n\t      if (this.getAttribute('aria-live') !== 'off') {\n\t        this.setAttribute('aria-live', 'off');\n\t      }\n\t      this.updateForTrack(captionsSubtitlesTrack);\n\t    } else if (descriptionsTrack) {\n\t      if (this.getAttribute('aria-live') !== 'assertive') {\n\t        this.setAttribute('aria-live', 'assertive');\n\t      }\n\t      this.updateForTrack(descriptionsTrack);\n\t    }\n\t  };\n\t\n\t  /**\n\t   * Add an {@link Texttrack} to to the {@link Tech}s {@link TextTrackList}.\n\t   *\n\t   * @param {TextTrack} track\n\t   *        Text track object to be added to the list.\n\t   */\n\t\n\t\n\t  TextTrackDisplay.prototype.updateForTrack = function updateForTrack(track) {\n\t    if (typeof _window2['default'].WebVTT !== 'function' || !track.activeCues) {\n\t      return;\n\t    }\n\t\n\t    var overrides = this.player_.textTrackSettings.getValues();\n\t    var cues = [];\n\t\n\t    for (var _i2 = 0; _i2 < track.activeCues.length; _i2++) {\n\t      cues.push(track.activeCues[_i2]);\n\t    }\n\t\n\t    _window2['default'].WebVTT.processCues(_window2['default'], cues, this.el_);\n\t\n\t    var i = cues.length;\n\t\n\t    while (i--) {\n\t      var cue = cues[i];\n\t\n\t      if (!cue) {\n\t        continue;\n\t      }\n\t\n\t      var cueDiv = cue.displayState;\n\t\n\t      if (overrides.color) {\n\t        cueDiv.firstChild.style.color = overrides.color;\n\t      }\n\t      if (overrides.textOpacity) {\n\t        tryUpdateStyle(cueDiv.firstChild, 'color', constructColor(overrides.color || '#fff', overrides.textOpacity));\n\t      }\n\t      if (overrides.backgroundColor) {\n\t        cueDiv.firstChild.style.backgroundColor = overrides.backgroundColor;\n\t      }\n\t      if (overrides.backgroundOpacity) {\n\t        tryUpdateStyle(cueDiv.firstChild, 'backgroundColor', constructColor(overrides.backgroundColor || '#000', overrides.backgroundOpacity));\n\t      }\n\t      if (overrides.windowColor) {\n\t        if (overrides.windowOpacity) {\n\t          tryUpdateStyle(cueDiv, 'backgroundColor', constructColor(overrides.windowColor, overrides.windowOpacity));\n\t        } else {\n\t          cueDiv.style.backgroundColor = overrides.windowColor;\n\t        }\n\t      }\n\t      if (overrides.edgeStyle) {\n\t        if (overrides.edgeStyle === 'dropshadow') {\n\t          cueDiv.firstChild.style.textShadow = '2px 2px 3px ' + darkGray + ', 2px 2px 4px ' + darkGray + ', 2px 2px 5px ' + darkGray;\n\t        } else if (overrides.edgeStyle === 'raised') {\n\t          cueDiv.firstChild.style.textShadow = '1px 1px ' + darkGray + ', 2px 2px ' + darkGray + ', 3px 3px ' + darkGray;\n\t        } else if (overrides.edgeStyle === 'depressed') {\n\t          cueDiv.firstChild.style.textShadow = '1px 1px ' + lightGray + ', 0 1px ' + lightGray + ', -1px -1px ' + darkGray + ', 0 -1px ' + darkGray;\n\t        } else if (overrides.edgeStyle === 'uniform') {\n\t          cueDiv.firstChild.style.textShadow = '0 0 4px ' + darkGray + ', 0 0 4px ' + darkGray + ', 0 0 4px ' + darkGray + ', 0 0 4px ' + darkGray;\n\t        }\n\t      }\n\t      if (overrides.fontPercent && overrides.fontPercent !== 1) {\n\t        var fontSize = _window2['default'].parseFloat(cueDiv.style.fontSize);\n\t\n\t        cueDiv.style.fontSize = fontSize * overrides.fontPercent + 'px';\n\t        cueDiv.style.height = 'auto';\n\t        cueDiv.style.top = 'auto';\n\t        cueDiv.style.bottom = '2px';\n\t      }\n\t      if (overrides.fontFamily && overrides.fontFamily !== 'default') {\n\t        if (overrides.fontFamily === 'small-caps') {\n\t          cueDiv.firstChild.style.fontVariant = 'small-caps';\n\t        } else {\n\t          cueDiv.firstChild.style.fontFamily = fontMap[overrides.fontFamily];\n\t        }\n\t      }\n\t    }\n\t  };\n\t\n\t  return TextTrackDisplay;\n\t}(_component2['default']);\n\t\n\t_component2['default'].registerComponent('TextTrackDisplay', TextTrackDisplay);\n\texports['default'] = TextTrackDisplay;\n\n\n/***/ },\n/* 54 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\texports.__esModule = true;\n\t\n\tvar _component = __webpack_require__(16);\n\t\n\tvar _component2 = _interopRequireDefault(_component);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /**\n\t                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * @file loading-spinner.js\n\t                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                */\n\t\n\t\n\t/**\n\t * A loading spinner for use during waiting/loading events.\n\t *\n\t * @extends Component\n\t */\n\tvar LoadingSpinner = function (_Component) {\n\t  _inherits(LoadingSpinner, _Component);\n\t\n\t  function LoadingSpinner() {\n\t    _classCallCheck(this, LoadingSpinner);\n\t\n\t    return _possibleConstructorReturn(this, _Component.apply(this, arguments));\n\t  }\n\t\n\t  /**\n\t   * Create the `LoadingSpinner`s DOM element.\n\t   *\n\t   * @return {Element}\n\t   *         The dom element that gets created.\n\t   */\n\t  LoadingSpinner.prototype.createEl = function createEl() {\n\t    return _Component.prototype.createEl.call(this, 'div', {\n\t      className: 'vjs-loading-spinner',\n\t      dir: 'ltr'\n\t    });\n\t  };\n\t\n\t  return LoadingSpinner;\n\t}(_component2['default']);\n\t\n\t_component2['default'].registerComponent('LoadingSpinner', LoadingSpinner);\n\texports['default'] = LoadingSpinner;\n\n\n/***/ },\n/* 55 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\texports.__esModule = true;\n\t\n\tvar _button = __webpack_require__(56);\n\t\n\tvar _button2 = _interopRequireDefault(_button);\n\t\n\tvar _component = __webpack_require__(16);\n\t\n\tvar _component2 = _interopRequireDefault(_component);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /**\n\t                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * @file big-play-button.js\n\t                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                */\n\t\n\t\n\t/**\n\t * The initial play button that shows before the video has played. The hiding of the\n\t * `BigPlayButton` get done via CSS and `Player` states.\n\t *\n\t * @extends Button\n\t */\n\tvar BigPlayButton = function (_Button) {\n\t  _inherits(BigPlayButton, _Button);\n\t\n\t  function BigPlayButton() {\n\t    _classCallCheck(this, BigPlayButton);\n\t\n\t    return _possibleConstructorReturn(this, _Button.apply(this, arguments));\n\t  }\n\t\n\t  /**\n\t   * Builds the default DOM `className`.\n\t   *\n\t   * @return {string}\n\t   *         The DOM `className` for this object. Always returns 'vjs-big-play-button'.\n\t   */\n\t  BigPlayButton.prototype.buildCSSClass = function buildCSSClass() {\n\t    return 'vjs-big-play-button';\n\t  };\n\t\n\t  /**\n\t   * This gets called when a `BigPlayButton` \"clicked\". See {@link ClickableComponent}\n\t   * for more detailed information on what a click can be.\n\t   *\n\t   * @param {EventTarget~Event} event\n\t   *        The `keydown`, `tap`, or `click` event that caused this function to be\n\t   *        called.\n\t   *\n\t   * @listens tap\n\t   * @listens click\n\t   */\n\t\n\t\n\t  BigPlayButton.prototype.handleClick = function handleClick(event) {\n\t    this.player_.play();\n\t  };\n\t\n\t  return BigPlayButton;\n\t}(_button2['default']);\n\t\n\t/**\n\t * The text that should display over the `BigPlayButton`s controls. Added to for localization.\n\t *\n\t * @type {string}\n\t * @private\n\t */\n\t\n\t\n\tBigPlayButton.prototype.controlText_ = 'Play Video';\n\t\n\t_component2['default'].registerComponent('BigPlayButton', BigPlayButton);\n\texports['default'] = BigPlayButton;\n\n\n/***/ },\n/* 56 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\texports.__esModule = true;\n\t\n\tvar _clickableComponent = __webpack_require__(52);\n\t\n\tvar _clickableComponent2 = _interopRequireDefault(_clickableComponent);\n\t\n\tvar _component = __webpack_require__(16);\n\t\n\tvar _component2 = _interopRequireDefault(_component);\n\t\n\tvar _log = __webpack_require__(11);\n\t\n\tvar _log2 = _interopRequireDefault(_log);\n\t\n\tvar _obj = __webpack_require__(13);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /**\n\t                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * @file button.js\n\t                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                */\n\t\n\t\n\t/**\n\t * Base class for all buttons.\n\t *\n\t * @extends ClickableComponent\n\t */\n\tvar Button = function (_ClickableComponent) {\n\t  _inherits(Button, _ClickableComponent);\n\t\n\t  function Button() {\n\t    _classCallCheck(this, Button);\n\t\n\t    return _possibleConstructorReturn(this, _ClickableComponent.apply(this, arguments));\n\t  }\n\t\n\t  /**\n\t   * Create the `Button`s DOM element.\n\t   *\n\t   * @param {string} [tag=button]\n\t   *        Element's node type. e.g. 'button'\n\t   *\n\t   * @param {Object} [props={}]\n\t   *        An object of properties that should be set on the element.\n\t   *\n\t   * @param {Object} [attributes={}]\n\t   *        An object of attributes that should be set on the element.\n\t   *\n\t   * @return {Element}\n\t   *         The element that gets created.\n\t   */\n\t  Button.prototype.createEl = function createEl() {\n\t    var tag = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'button';\n\t    var props = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\t    var attributes = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n\t\n\t    props = (0, _obj.assign)({\n\t      className: this.buildCSSClass()\n\t    }, props);\n\t\n\t    if (tag !== 'button') {\n\t      _log2['default'].warn('Creating a Button with an HTML element of ' + tag + ' is deprecated; use ClickableComponent instead.');\n\t\n\t      // Add properties for clickable element which is not a native HTML button\n\t      props = (0, _obj.assign)({\n\t        tabIndex: 0\n\t      }, props);\n\t\n\t      // Add ARIA attributes for clickable element which is not a native HTML button\n\t      attributes = (0, _obj.assign)({\n\t        role: 'button'\n\t      }, attributes);\n\t    }\n\t\n\t    // Add attributes for button element\n\t    attributes = (0, _obj.assign)({\n\t\n\t      // Necessary since the default button type is \"submit\"\n\t      'type': 'button',\n\t\n\t      // let the screen reader user know that the text of the button may change\n\t      'aria-live': 'polite'\n\t    }, attributes);\n\t\n\t    var el = _component2['default'].prototype.createEl.call(this, tag, props, attributes);\n\t\n\t    this.createControlTextEl(el);\n\t\n\t    return el;\n\t  };\n\t\n\t  /**\n\t   * Add a child `Component` inside of this `Button`.\n\t   *\n\t   * @param {string|Component} child\n\t   *        The name or instance of a child to add.\n\t   *\n\t   * @param {Object} [options={}]\n\t   *        The key/value store of options that will get passed to children of\n\t   *        the child.\n\t   *\n\t   * @return {Component}\n\t   *         The `Component` that gets added as a child. When using a string the\n\t   *         `Component` will get created by this process.\n\t   *\n\t   * @deprecated since version 5\n\t   */\n\t\n\t\n\t  Button.prototype.addChild = function addChild(child) {\n\t    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\t\n\t    var className = this.constructor.name;\n\t\n\t    _log2['default'].warn('Adding an actionable (user controllable) child to a Button (' + className + ') is not supported; use a ClickableComponent instead.');\n\t\n\t    // Avoid the error message generated by ClickableComponent's addChild method\n\t    return _component2['default'].prototype.addChild.call(this, child, options);\n\t  };\n\t\n\t  /**\n\t   * Enable the `Button` element so that it can be activated or clicked. Use this with\n\t   * {@link Button#disable}.\n\t   *\n\t   * @return {Component}\n\t   *         Returns itself; method is chainable.\n\t   */\n\t\n\t\n\t  Button.prototype.enable = function enable() {\n\t    _ClickableComponent.prototype.enable.call(this);\n\t    this.el_.removeAttribute('disabled');\n\t  };\n\t\n\t  /**\n\t   * Enable the `Button` element so that it cannot be activated or clicked. Use this with\n\t   * {@link Button#enable}.\n\t   *\n\t   * @return {Component}\n\t   *         Returns itself; method is chainable.\n\t   */\n\t\n\t\n\t  Button.prototype.disable = function disable() {\n\t    _ClickableComponent.prototype.disable.call(this);\n\t    this.el_.setAttribute('disabled', 'disabled');\n\t  };\n\t\n\t  /**\n\t   * This gets called when a `Button` has focus and `keydown` is triggered via a key\n\t   * press.\n\t   *\n\t   * @param {EventTarget~Event} event\n\t   *        The event that caused this function to get called.\n\t   *\n\t   * @listens keydown\n\t   */\n\t\n\t\n\t  Button.prototype.handleKeyPress = function handleKeyPress(event) {\n\t\n\t    // Ignore Space (32) or Enter (13) key operation, which is handled by the browser for a button.\n\t    if (event.which === 32 || event.which === 13) {\n\t      return;\n\t    }\n\t\n\t    // Pass keypress handling up for unsupported keys\n\t    _ClickableComponent.prototype.handleKeyPress.call(this, event);\n\t  };\n\t\n\t  return Button;\n\t}(_clickableComponent2['default']);\n\t\n\t_component2['default'].registerComponent('Button', Button);\n\texports['default'] = Button;\n\n\n/***/ },\n/* 57 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\texports.__esModule = true;\n\t\n\tvar _button = __webpack_require__(56);\n\t\n\tvar _button2 = _interopRequireDefault(_button);\n\t\n\tvar _component = __webpack_require__(16);\n\t\n\tvar _component2 = _interopRequireDefault(_component);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /**\n\t                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * @file close-button.js\n\t                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                */\n\t\n\t\n\t/**\n\t * The `CloseButton` is a `{@link Button}` that fires a `close` event when\n\t * it gets clicked.\n\t *\n\t * @extends Button\n\t */\n\tvar CloseButton = function (_Button) {\n\t  _inherits(CloseButton, _Button);\n\t\n\t  /**\n\t   * Creates an instance of the this class.\n\t   *\n\t   * @param  {Player} player\n\t   *         The `Player` that this class should be attached to.\n\t   *\n\t   * @param  {Object} [options]\n\t   *         The key/value store of player options.\n\t   */\n\t  function CloseButton(player, options) {\n\t    _classCallCheck(this, CloseButton);\n\t\n\t    var _this = _possibleConstructorReturn(this, _Button.call(this, player, options));\n\t\n\t    _this.controlText(options && options.controlText || _this.localize('Close'));\n\t    return _this;\n\t  }\n\t\n\t  /**\n\t   * Builds the default DOM `className`.\n\t   *\n\t   * @return {string}\n\t   *         The DOM `className` for this object.\n\t   */\n\t\n\t\n\t  CloseButton.prototype.buildCSSClass = function buildCSSClass() {\n\t    return 'vjs-close-button ' + _Button.prototype.buildCSSClass.call(this);\n\t  };\n\t\n\t  /**\n\t   * This gets called when a `CloseButton` gets clicked. See\n\t   * {@link ClickableComponent#handleClick} for more information on when this will be\n\t   * triggered\n\t   *\n\t   * @param {EventTarget~Event} event\n\t   *        The `keydown`, `tap`, or `click` event that caused this function to be\n\t   *        called.\n\t   *\n\t   * @listens tap\n\t   * @listens click\n\t   * @fires CloseButton#close\n\t   */\n\t\n\t\n\t  CloseButton.prototype.handleClick = function handleClick(event) {\n\t\n\t    /**\n\t     * Triggered when the a `CloseButton` is clicked.\n\t     *\n\t     * @event CloseButton#close\n\t     * @type {EventTarget~Event}\n\t     *\n\t     * @property {boolean} [bubbles=false]\n\t     *           set to false so that the close event does not\n\t     *           bubble up to parents if there is no listener\n\t     */\n\t    this.trigger({ type: 'close', bubbles: false });\n\t  };\n\t\n\t  return CloseButton;\n\t}(_button2['default']);\n\t\n\t_component2['default'].registerComponent('CloseButton', CloseButton);\n\texports['default'] = CloseButton;\n\n\n/***/ },\n/* 58 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\texports.__esModule = true;\n\t\n\tvar _component = __webpack_require__(16);\n\t\n\tvar _component2 = _interopRequireDefault(_component);\n\t\n\t__webpack_require__(59);\n\t\n\t__webpack_require__(60);\n\t\n\t__webpack_require__(62);\n\t\n\t__webpack_require__(63);\n\t\n\t__webpack_require__(64);\n\t\n\t__webpack_require__(65);\n\t\n\t__webpack_require__(66);\n\t\n\t__webpack_require__(74);\n\t\n\t__webpack_require__(75);\n\t\n\t__webpack_require__(78);\n\t\n\t__webpack_require__(81);\n\t\n\t__webpack_require__(82);\n\t\n\t__webpack_require__(91);\n\t\n\t__webpack_require__(92);\n\t\n\t__webpack_require__(93);\n\t\n\t__webpack_require__(95);\n\t\n\t__webpack_require__(97);\n\t\n\t__webpack_require__(99);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /**\n\t                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * @file control-bar.js\n\t                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                */\n\t\n\t\n\t// Required children\n\t\n\t\n\t/**\n\t * Container of main controls.\n\t *\n\t * @extends Component\n\t */\n\tvar ControlBar = function (_Component) {\n\t  _inherits(ControlBar, _Component);\n\t\n\t  function ControlBar() {\n\t    _classCallCheck(this, ControlBar);\n\t\n\t    return _possibleConstructorReturn(this, _Component.apply(this, arguments));\n\t  }\n\t\n\t  /**\n\t   * Create the `Component`'s DOM element\n\t   *\n\t   * @return {Element}\n\t   *         The element that was created.\n\t   */\n\t  ControlBar.prototype.createEl = function createEl() {\n\t    return _Component.prototype.createEl.call(this, 'div', {\n\t      className: 'vjs-control-bar',\n\t      dir: 'ltr'\n\t    }, {\n\t      // The control bar is a group, so it can contain menuitems\n\t      role: 'group'\n\t    });\n\t  };\n\t\n\t  return ControlBar;\n\t}(_component2['default']);\n\t\n\t/**\n\t * Default options for `ControlBar`\n\t *\n\t * @type {Object}\n\t * @private\n\t */\n\t\n\t\n\tControlBar.prototype.options_ = {\n\t  children: ['playToggle', 'volumeMenuButton', 'currentTimeDisplay', 'timeDivider', 'durationDisplay', 'progressControl', 'liveDisplay', 'remainingTimeDisplay', 'customControlSpacer', 'playbackRateMenuButton', 'chaptersButton', 'descriptionsButton', 'subtitlesButton', 'captionsButton', 'audioTrackButton', 'fullscreenToggle']\n\t};\n\t\n\t_component2['default'].registerComponent('ControlBar', ControlBar);\n\texports['default'] = ControlBar;\n\n\n/***/ },\n/* 59 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\texports.__esModule = true;\n\t\n\tvar _button = __webpack_require__(56);\n\t\n\tvar _button2 = _interopRequireDefault(_button);\n\t\n\tvar _component = __webpack_require__(16);\n\t\n\tvar _component2 = _interopRequireDefault(_component);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /**\n\t                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * @file play-toggle.js\n\t                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                */\n\t\n\t\n\t/**\n\t * Button to toggle between play and pause.\n\t *\n\t * @extends Button\n\t */\n\tvar PlayToggle = function (_Button) {\n\t  _inherits(PlayToggle, _Button);\n\t\n\t  /**\n\t   * Creates an instance of this class.\n\t   *\n\t   * @param {Player} player\n\t   *        The `Player` that this class should be attached to.\n\t   *\n\t   * @param {Object} [options]\n\t   *        The key/value store of player options.\n\t   */\n\t  function PlayToggle(player, options) {\n\t    _classCallCheck(this, PlayToggle);\n\t\n\t    var _this = _possibleConstructorReturn(this, _Button.call(this, player, options));\n\t\n\t    _this.on(player, 'play', _this.handlePlay);\n\t    _this.on(player, 'pause', _this.handlePause);\n\t    return _this;\n\t  }\n\t\n\t  /**\n\t   * Builds the default DOM `className`.\n\t   *\n\t   * @return {string}\n\t   *         The DOM `className` for this object.\n\t   */\n\t\n\t\n\t  PlayToggle.prototype.buildCSSClass = function buildCSSClass() {\n\t    return 'vjs-play-control ' + _Button.prototype.buildCSSClass.call(this);\n\t  };\n\t\n\t  /**\n\t   * This gets called when an `PlayToggle` is \"clicked\". See\n\t   * {@link ClickableComponent} for more detailed information on what a click can be.\n\t   *\n\t   * @param {EventTarget~Event} [event]\n\t   *        The `keydown`, `tap`, or `click` event that caused this function to be\n\t   *        called.\n\t   *\n\t   * @listens tap\n\t   * @listens click\n\t   */\n\t\n\t\n\t  PlayToggle.prototype.handleClick = function handleClick(event) {\n\t    if (this.player_.paused()) {\n\t      this.player_.play();\n\t    } else {\n\t      this.player_.pause();\n\t    }\n\t  };\n\t\n\t  /**\n\t   * Add the vjs-playing class to the element so it can change appearance.\n\t   *\n\t   * @param {EventTarget~Event} [event]\n\t   *        The event that caused this function to run.\n\t   *\n\t   * @listens Player#play\n\t   */\n\t\n\t\n\t  PlayToggle.prototype.handlePlay = function handlePlay(event) {\n\t    this.removeClass('vjs-paused');\n\t    this.addClass('vjs-playing');\n\t    // change the button text to \"Pause\"\n\t    this.controlText('Pause');\n\t  };\n\t\n\t  /**\n\t   * Add the vjs-paused class to the element so it can change appearance.\n\t   *\n\t   * @param {EventTarget~Event} [event]\n\t   *        The event that caused this function to run.\n\t   *\n\t   * @listens Player#pause\n\t   */\n\t\n\t\n\t  PlayToggle.prototype.handlePause = function handlePause(event) {\n\t    this.removeClass('vjs-playing');\n\t    this.addClass('vjs-paused');\n\t    // change the button text to \"Play\"\n\t    this.controlText('Play');\n\t  };\n\t\n\t  return PlayToggle;\n\t}(_button2['default']);\n\t\n\t/**\n\t * The text that should display over the `PlayToggle`s controls. Added for localization.\n\t *\n\t * @type {string}\n\t * @private\n\t */\n\t\n\t\n\tPlayToggle.prototype.controlText_ = 'Play';\n\t\n\t_component2['default'].registerComponent('PlayToggle', PlayToggle);\n\texports['default'] = PlayToggle;\n\n\n/***/ },\n/* 60 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\texports.__esModule = true;\n\t\n\tvar _component = __webpack_require__(16);\n\t\n\tvar _component2 = _interopRequireDefault(_component);\n\t\n\tvar _dom = __webpack_require__(9);\n\t\n\tvar Dom = _interopRequireWildcard(_dom);\n\t\n\tvar _formatTime = __webpack_require__(61);\n\t\n\tvar _formatTime2 = _interopRequireDefault(_formatTime);\n\t\n\tfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj['default'] = obj; return newObj; } }\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /**\n\t                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * @file current-time-display.js\n\t                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                */\n\t\n\t\n\t/**\n\t * Displays the current time\n\t *\n\t * @extends Component\n\t */\n\tvar CurrentTimeDisplay = function (_Component) {\n\t  _inherits(CurrentTimeDisplay, _Component);\n\t\n\t  /**\n\t   * Creates an instance of this class.\n\t   *\n\t   * @param {Player} player\n\t   *        The `Player` that this class should be attached to.\n\t   *\n\t   * @param {Object} [options]\n\t   *        The key/value store of player options.\n\t   */\n\t  function CurrentTimeDisplay(player, options) {\n\t    _classCallCheck(this, CurrentTimeDisplay);\n\t\n\t    var _this = _possibleConstructorReturn(this, _Component.call(this, player, options));\n\t\n\t    _this.on(player, 'timeupdate', _this.updateContent);\n\t    return _this;\n\t  }\n\t\n\t  /**\n\t   * Create the `Component`'s DOM element\n\t   *\n\t   * @return {Element}\n\t   *         The element that was created.\n\t   */\n\t\n\t\n\t  CurrentTimeDisplay.prototype.createEl = function createEl() {\n\t    var el = _Component.prototype.createEl.call(this, 'div', {\n\t      className: 'vjs-current-time vjs-time-control vjs-control'\n\t    });\n\t\n\t    this.contentEl_ = Dom.createEl('div', {\n\t      className: 'vjs-current-time-display',\n\t      // label the current time for screen reader users\n\t      innerHTML: '<span class=\"vjs-control-text\">Current Time </span>' + '0:00'\n\t    }, {\n\t      // tell screen readers not to automatically read the time as it changes\n\t      'aria-live': 'off'\n\t    });\n\t\n\t    el.appendChild(this.contentEl_);\n\t    return el;\n\t  };\n\t\n\t  /**\n\t   * Update current time display\n\t   *\n\t   * @param {EventTarget~Event} [event]\n\t   *        The `timeupdate` event that caused this function to run.\n\t   *\n\t   * @listens Player#timeupdate\n\t   */\n\t\n\t\n\t  CurrentTimeDisplay.prototype.updateContent = function updateContent(event) {\n\t    // Allows for smooth scrubbing, when player can't keep up.\n\t    var time = this.player_.scrubbing() ? this.player_.getCache().currentTime : this.player_.currentTime();\n\t    var localizedText = this.localize('Current Time');\n\t    var formattedTime = (0, _formatTime2['default'])(time, this.player_.duration());\n\t\n\t    if (formattedTime !== this.formattedTime_) {\n\t      this.formattedTime_ = formattedTime;\n\t      this.contentEl_.innerHTML = '<span class=\"vjs-control-text\">' + localizedText + '</span> ' + formattedTime;\n\t    }\n\t  };\n\t\n\t  return CurrentTimeDisplay;\n\t}(_component2['default']);\n\t\n\t_component2['default'].registerComponent('CurrentTimeDisplay', CurrentTimeDisplay);\n\texports['default'] = CurrentTimeDisplay;\n\n\n/***/ },\n/* 61 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\texports.__esModule = true;\n\t/**\n\t * @file format-time.js\n\t * @module Format-time\n\t */\n\t\n\t/**\n\t * Format seconds as a time string, H:MM:SS or M:SS. Supplying a guide (in seconds)\n\t * will force a number of leading zeros to cover the length of the guide.\n\t *\n\t * @param {number} seconds\n\t *        Number of seconds to be turned into a string\n\t *\n\t * @param {number} guide\n\t *        Number (in seconds) to model the string after\n\t *\n\t * @return {string}\n\t *         Time formatted as H:MM:SS or M:SS\n\t */\n\tfunction formatTime(seconds) {\n\t  var guide = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : seconds;\n\t\n\t  seconds = seconds < 0 ? 0 : seconds;\n\t  var s = Math.floor(seconds % 60);\n\t  var m = Math.floor(seconds / 60 % 60);\n\t  var h = Math.floor(seconds / 3600);\n\t  var gm = Math.floor(guide / 60 % 60);\n\t  var gh = Math.floor(guide / 3600);\n\t\n\t  // handle invalid times\n\t  if (isNaN(seconds) || seconds === Infinity) {\n\t    // '-' is false for all relational operators (e.g. <, >=) so this setting\n\t    // will add the minimum number of fields specified by the guide\n\t    h = m = s = '-';\n\t  }\n\t\n\t  // Check if we need to show hours\n\t  h = h > 0 || gh > 0 ? h + ':' : '';\n\t\n\t  // If hours are showing, we may need to add a leading zero.\n\t  // Always show at least one digit of minutes.\n\t  m = ((h || gm >= 10) && m < 10 ? '0' + m : m) + ':';\n\t\n\t  // Check if leading zero is need for seconds\n\t  s = s < 10 ? '0' + s : s;\n\t\n\t  return h + m + s;\n\t}\n\t\n\texports['default'] = formatTime;\n\n\n/***/ },\n/* 62 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\texports.__esModule = true;\n\t\n\tvar _component = __webpack_require__(16);\n\t\n\tvar _component2 = _interopRequireDefault(_component);\n\t\n\tvar _dom = __webpack_require__(9);\n\t\n\tvar Dom = _interopRequireWildcard(_dom);\n\t\n\tvar _formatTime = __webpack_require__(61);\n\t\n\tvar _formatTime2 = _interopRequireDefault(_formatTime);\n\t\n\tfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj['default'] = obj; return newObj; } }\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /**\n\t                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * @file duration-display.js\n\t                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                */\n\t\n\t\n\t/**\n\t * Displays the duration\n\t *\n\t * @extends Component\n\t */\n\tvar DurationDisplay = function (_Component) {\n\t  _inherits(DurationDisplay, _Component);\n\t\n\t  /**\n\t   * Creates an instance of this class.\n\t   *\n\t   * @param {Player} player\n\t   *        The `Player` that this class should be attached to.\n\t   *\n\t   * @param {Object} [options]\n\t   *        The key/value store of player options.\n\t   */\n\t  function DurationDisplay(player, options) {\n\t    _classCallCheck(this, DurationDisplay);\n\t\n\t    var _this = _possibleConstructorReturn(this, _Component.call(this, player, options));\n\t\n\t    _this.on(player, 'durationchange', _this.updateContent);\n\t\n\t    // Also listen for timeupdate and loadedmetadata because removing those\n\t    // listeners could have broken dependent applications/libraries. These\n\t    // can likely be removed for 6.0.\n\t    _this.on(player, 'timeupdate', _this.updateContent);\n\t    _this.on(player, 'loadedmetadata', _this.updateContent);\n\t    return _this;\n\t  }\n\t\n\t  /**\n\t   * Create the `Component`'s DOM element\n\t   *\n\t   * @return {Element}\n\t   *         The element that was created.\n\t   */\n\t\n\t\n\t  DurationDisplay.prototype.createEl = function createEl() {\n\t    var el = _Component.prototype.createEl.call(this, 'div', {\n\t      className: 'vjs-duration vjs-time-control vjs-control'\n\t    });\n\t\n\t    this.contentEl_ = Dom.createEl('div', {\n\t      className: 'vjs-duration-display',\n\t      // label the duration time for screen reader users\n\t      innerHTML: '<span class=\"vjs-control-text\">' + this.localize('Duration Time') + '</span> 0:00'\n\t    }, {\n\t      // tell screen readers not to automatically read the time as it changes\n\t      'aria-live': 'off'\n\t    });\n\t\n\t    el.appendChild(this.contentEl_);\n\t    return el;\n\t  };\n\t\n\t  /**\n\t   * Update duration time display.\n\t   *\n\t   * @param {EventTarget~Event} [event]\n\t   *        The `durationchange`, `timeupdate`, or `loadedmetadata` event that caused\n\t   *        this function to be called.\n\t   *\n\t   * @listens Player#durationchange\n\t   * @listens Player#timeupdate\n\t   * @listens Player#loadedmetadata\n\t   */\n\t\n\t\n\t  DurationDisplay.prototype.updateContent = function updateContent(event) {\n\t    var duration = this.player_.duration();\n\t\n\t    if (duration && this.duration_ !== duration) {\n\t      this.duration_ = duration;\n\t      var localizedText = this.localize('Duration Time');\n\t      var formattedTime = (0, _formatTime2['default'])(duration);\n\t\n\t      // label the duration time for screen reader users\n\t      this.contentEl_.innerHTML = '<span class=\"vjs-control-text\">' + localizedText + '</span> ' + formattedTime;\n\t    }\n\t  };\n\t\n\t  return DurationDisplay;\n\t}(_component2['default']);\n\t\n\t_component2['default'].registerComponent('DurationDisplay', DurationDisplay);\n\texports['default'] = DurationDisplay;\n\n\n/***/ },\n/* 63 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\texports.__esModule = true;\n\t\n\tvar _component = __webpack_require__(16);\n\t\n\tvar _component2 = _interopRequireDefault(_component);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /**\n\t                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * @file time-divider.js\n\t                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                */\n\t\n\t\n\t/**\n\t * The separator between the current time and duration.\n\t * Can be hidden if it's not needed in the design.\n\t *\n\t * @extends Component\n\t */\n\tvar TimeDivider = function (_Component) {\n\t  _inherits(TimeDivider, _Component);\n\t\n\t  function TimeDivider() {\n\t    _classCallCheck(this, TimeDivider);\n\t\n\t    return _possibleConstructorReturn(this, _Component.apply(this, arguments));\n\t  }\n\t\n\t  /**\n\t   * Create the component's DOM element\n\t   *\n\t   * @return {Element}\n\t   *         The element that was created.\n\t   */\n\t  TimeDivider.prototype.createEl = function createEl() {\n\t    return _Component.prototype.createEl.call(this, 'div', {\n\t      className: 'vjs-time-control vjs-time-divider',\n\t      innerHTML: '<div><span>/</span></div>'\n\t    });\n\t  };\n\t\n\t  return TimeDivider;\n\t}(_component2['default']);\n\t\n\t_component2['default'].registerComponent('TimeDivider', TimeDivider);\n\texports['default'] = TimeDivider;\n\n\n/***/ },\n/* 64 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\texports.__esModule = true;\n\t\n\tvar _component = __webpack_require__(16);\n\t\n\tvar _component2 = _interopRequireDefault(_component);\n\t\n\tvar _dom = __webpack_require__(9);\n\t\n\tvar Dom = _interopRequireWildcard(_dom);\n\t\n\tvar _formatTime = __webpack_require__(61);\n\t\n\tvar _formatTime2 = _interopRequireDefault(_formatTime);\n\t\n\tfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj['default'] = obj; return newObj; } }\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /**\n\t                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * @file remaining-time-display.js\n\t                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                */\n\t\n\t\n\t/**\n\t * Displays the time left in the video\n\t *\n\t * @extends Component\n\t */\n\tvar RemainingTimeDisplay = function (_Component) {\n\t  _inherits(RemainingTimeDisplay, _Component);\n\t\n\t  /**\n\t   * Creates an instance of this class.\n\t   *\n\t   * @param {Player} player\n\t   *        The `Player` that this class should be attached to.\n\t   *\n\t   * @param {Object} [options]\n\t   *        The key/value store of player options.\n\t   */\n\t  function RemainingTimeDisplay(player, options) {\n\t    _classCallCheck(this, RemainingTimeDisplay);\n\t\n\t    var _this = _possibleConstructorReturn(this, _Component.call(this, player, options));\n\t\n\t    _this.on(player, 'timeupdate', _this.updateContent);\n\t    _this.on(player, 'durationchange', _this.updateContent);\n\t    return _this;\n\t  }\n\t\n\t  /**\n\t   * Create the `Component`'s DOM element\n\t   *\n\t   * @return {Element}\n\t   *         The element that was created.\n\t   */\n\t\n\t\n\t  RemainingTimeDisplay.prototype.createEl = function createEl() {\n\t    var el = _Component.prototype.createEl.call(this, 'div', {\n\t      className: 'vjs-remaining-time vjs-time-control vjs-control'\n\t    });\n\t\n\t    this.contentEl_ = Dom.createEl('div', {\n\t      className: 'vjs-remaining-time-display',\n\t      // label the remaining time for screen reader users\n\t      innerHTML: '<span class=\"vjs-control-text\">' + this.localize('Remaining Time') + '</span> -0:00'\n\t    }, {\n\t      // tell screen readers not to automatically read the time as it changes\n\t      'aria-live': 'off'\n\t    });\n\t\n\t    el.appendChild(this.contentEl_);\n\t    return el;\n\t  };\n\t\n\t  /**\n\t   * Update remaining time display.\n\t   *\n\t   * @param {EventTarget~Event} [event]\n\t   *        The `timeupdate` or `durationchange` event that caused this to run.\n\t   *\n\t   * @listens Player#timeupdate\n\t   * @listens Player#durationchange\n\t   */\n\t\n\t\n\t  RemainingTimeDisplay.prototype.updateContent = function updateContent(event) {\n\t    if (this.player_.duration()) {\n\t      var localizedText = this.localize('Remaining Time');\n\t      var formattedTime = (0, _formatTime2['default'])(this.player_.remainingTime());\n\t\n\t      if (formattedTime !== this.formattedTime_) {\n\t        this.formattedTime_ = formattedTime;\n\t        this.contentEl_.innerHTML = '<span class=\"vjs-control-text\">' + localizedText + '</span> -' + formattedTime;\n\t      }\n\t    }\n\t\n\t    // Allows for smooth scrubbing, when player can't keep up.\n\t    // var time = (this.player_.scrubbing()) ? this.player_.getCache().currentTime : this.player_.currentTime();\n\t    // this.contentEl_.innerHTML = vjs.formatTime(time, this.player_.duration());\n\t  };\n\t\n\t  return RemainingTimeDisplay;\n\t}(_component2['default']);\n\t\n\t_component2['default'].registerComponent('RemainingTimeDisplay', RemainingTimeDisplay);\n\texports['default'] = RemainingTimeDisplay;\n\n\n/***/ },\n/* 65 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\texports.__esModule = true;\n\t\n\tvar _component = __webpack_require__(16);\n\t\n\tvar _component2 = _interopRequireDefault(_component);\n\t\n\tvar _dom = __webpack_require__(9);\n\t\n\tvar Dom = _interopRequireWildcard(_dom);\n\t\n\tfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj['default'] = obj; return newObj; } }\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /**\n\t                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * @file live-display.js\n\t                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                */\n\t\n\t\n\t// TODO - Future make it click to snap to live\n\t\n\t/**\n\t * Displays the live indicator when duration is Infinity.\n\t *\n\t * @extends Component\n\t */\n\tvar LiveDisplay = function (_Component) {\n\t  _inherits(LiveDisplay, _Component);\n\t\n\t  /**\n\t   * Creates an instance of this class.\n\t   *\n\t   * @param {Player} player\n\t   *        The `Player` that this class should be attached to.\n\t   *\n\t   * @param {Object} [options]\n\t   *        The key/value store of player options.\n\t   */\n\t  function LiveDisplay(player, options) {\n\t    _classCallCheck(this, LiveDisplay);\n\t\n\t    var _this = _possibleConstructorReturn(this, _Component.call(this, player, options));\n\t\n\t    _this.updateShowing();\n\t    _this.on(_this.player(), 'durationchange', _this.updateShowing);\n\t    return _this;\n\t  }\n\t\n\t  /**\n\t   * Create the `Component`'s DOM element\n\t   *\n\t   * @return {Element}\n\t   *         The element that was created.\n\t   */\n\t\n\t\n\t  LiveDisplay.prototype.createEl = function createEl() {\n\t    var el = _Component.prototype.createEl.call(this, 'div', {\n\t      className: 'vjs-live-control vjs-control'\n\t    });\n\t\n\t    this.contentEl_ = Dom.createEl('div', {\n\t      className: 'vjs-live-display',\n\t      innerHTML: '<span class=\"vjs-control-text\">' + this.localize('Stream Type') + '</span>' + this.localize('LIVE')\n\t    }, {\n\t      'aria-live': 'off'\n\t    });\n\t\n\t    el.appendChild(this.contentEl_);\n\t    return el;\n\t  };\n\t\n\t  /**\n\t   * Check the duration to see if the LiveDisplay should be showing or not. Then show/hide\n\t   * it accordingly\n\t   *\n\t   * @param {EventTarget~Event} [event]\n\t   *        The {@link Player#durationchange} event that caused this function to run.\n\t   *\n\t   * @listens Player#durationchange\n\t   */\n\t\n\t\n\t  LiveDisplay.prototype.updateShowing = function updateShowing(event) {\n\t    if (this.player().duration() === Infinity) {\n\t      this.show();\n\t    } else {\n\t      this.hide();\n\t    }\n\t  };\n\t\n\t  return LiveDisplay;\n\t}(_component2['default']);\n\t\n\t_component2['default'].registerComponent('LiveDisplay', LiveDisplay);\n\texports['default'] = LiveDisplay;\n\n\n/***/ },\n/* 66 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\texports.__esModule = true;\n\t\n\tvar _component = __webpack_require__(16);\n\t\n\tvar _component2 = _interopRequireDefault(_component);\n\t\n\t__webpack_require__(67);\n\t\n\t__webpack_require__(73);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /**\n\t                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * @file progress-control.js\n\t                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                */\n\t\n\t\n\t/**\n\t * The Progress Control component contains the seek bar, load progress,\n\t * and play progress.\n\t *\n\t * @extends Component\n\t */\n\tvar ProgressControl = function (_Component) {\n\t  _inherits(ProgressControl, _Component);\n\t\n\t  function ProgressControl() {\n\t    _classCallCheck(this, ProgressControl);\n\t\n\t    return _possibleConstructorReturn(this, _Component.apply(this, arguments));\n\t  }\n\t\n\t  /**\n\t   * Create the `Component`'s DOM element\n\t   *\n\t   * @return {Element}\n\t   *         The element that was created.\n\t   */\n\t  ProgressControl.prototype.createEl = function createEl() {\n\t    return _Component.prototype.createEl.call(this, 'div', {\n\t      className: 'vjs-progress-control vjs-control'\n\t    });\n\t  };\n\t\n\t  return ProgressControl;\n\t}(_component2['default']);\n\t\n\t/**\n\t * Default options for `ProgressControl`\n\t *\n\t * @type {Object}\n\t * @private\n\t */\n\t\n\t\n\tProgressControl.prototype.options_ = {\n\t  children: ['seekBar']\n\t};\n\t\n\t_component2['default'].registerComponent('ProgressControl', ProgressControl);\n\texports['default'] = ProgressControl;\n\n\n/***/ },\n/* 67 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\texports.__esModule = true;\n\t\n\tvar _slider = __webpack_require__(68);\n\t\n\tvar _slider2 = _interopRequireDefault(_slider);\n\t\n\tvar _component = __webpack_require__(16);\n\t\n\tvar _component2 = _interopRequireDefault(_component);\n\t\n\tvar _fn = __webpack_require__(17);\n\t\n\tvar Fn = _interopRequireWildcard(_fn);\n\t\n\tvar _formatTime = __webpack_require__(61);\n\t\n\tvar _formatTime2 = _interopRequireDefault(_formatTime);\n\t\n\tvar _computedStyle = __webpack_require__(69);\n\t\n\tvar _computedStyle2 = _interopRequireDefault(_computedStyle);\n\t\n\t__webpack_require__(70);\n\t\n\t__webpack_require__(71);\n\t\n\t__webpack_require__(72);\n\t\n\tfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj['default'] = obj; return newObj; } }\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /**\n\t                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * @file seek-bar.js\n\t                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                */\n\t\n\t\n\t/**\n\t * Seek Bar and holder for the progress bars\n\t *\n\t * @extends Slider\n\t */\n\tvar SeekBar = function (_Slider) {\n\t  _inherits(SeekBar, _Slider);\n\t\n\t  /**\n\t   * Creates an instance of this class.\n\t   *\n\t   * @param {Player} player\n\t   *        The `Player` that this class should be attached to.\n\t   *\n\t   * @param {Object} [options]\n\t   *        The key/value store of player options.\n\t   */\n\t  function SeekBar(player, options) {\n\t    _classCallCheck(this, SeekBar);\n\t\n\t    var _this = _possibleConstructorReturn(this, _Slider.call(this, player, options));\n\t\n\t    _this.on(player, 'timeupdate', _this.updateProgress);\n\t    _this.on(player, 'ended', _this.updateProgress);\n\t    player.ready(Fn.bind(_this, _this.updateProgress));\n\t\n\t    if (options.playerOptions && options.playerOptions.controlBar && options.playerOptions.controlBar.progressControl && options.playerOptions.controlBar.progressControl.keepTooltipsInside) {\n\t      _this.keepTooltipsInside = options.playerOptions.controlBar.progressControl.keepTooltipsInside;\n\t    }\n\t\n\t    if (_this.keepTooltipsInside) {\n\t      _this.tooltipProgressBar = _this.addChild('TooltipProgressBar');\n\t    }\n\t    return _this;\n\t  }\n\t\n\t  /**\n\t   * Create the `Component`'s DOM element\n\t   *\n\t   * @return {Element}\n\t   *         The element that was created.\n\t   */\n\t\n\t\n\t  SeekBar.prototype.createEl = function createEl() {\n\t    return _Slider.prototype.createEl.call(this, 'div', {\n\t      className: 'vjs-progress-holder'\n\t    }, {\n\t      'aria-label': 'progress bar'\n\t    });\n\t  };\n\t\n\t  /**\n\t   * Update the seek bars tooltip and width.\n\t   *\n\t   * @param {EventTarget~Event} [event]\n\t   *        The `timeupdate` or `ended` event that caused this to run.\n\t   *\n\t   * @listens Player#timeupdate\n\t   * @listens Player#ended\n\t   */\n\t\n\t\n\t  SeekBar.prototype.updateProgress = function updateProgress(event) {\n\t    this.updateAriaAttributes(this.el_);\n\t\n\t    if (this.keepTooltipsInside) {\n\t      this.updateAriaAttributes(this.tooltipProgressBar.el_);\n\t      this.tooltipProgressBar.el_.style.width = this.bar.el_.style.width;\n\t\n\t      var playerWidth = parseFloat((0, _computedStyle2['default'])(this.player().el(), 'width'));\n\t      var tooltipWidth = parseFloat((0, _computedStyle2['default'])(this.tooltipProgressBar.tooltip, 'width'));\n\t      var tooltipStyle = this.tooltipProgressBar.el().style;\n\t\n\t      tooltipStyle.maxWidth = Math.floor(playerWidth - tooltipWidth / 2) + 'px';\n\t      tooltipStyle.minWidth = Math.ceil(tooltipWidth / 2) + 'px';\n\t      tooltipStyle.right = '-' + tooltipWidth / 2 + 'px';\n\t    }\n\t  };\n\t\n\t  /**\n\t   * Update ARIA accessibility attributes\n\t   *\n\t   * @param {Element} el\n\t   *        The element to update with aria accessibility attributes.\n\t   */\n\t\n\t\n\t  SeekBar.prototype.updateAriaAttributes = function updateAriaAttributes(el) {\n\t    // Allows for smooth scrubbing, when player can't keep up.\n\t    var time = this.player_.scrubbing() ? this.player_.getCache().currentTime : this.player_.currentTime();\n\t\n\t    // machine readable value of progress bar (percentage complete)\n\t    el.setAttribute('aria-valuenow', (this.getPercent() * 100).toFixed(2));\n\t    // human readable value of progress bar (time complete)\n\t    el.setAttribute('aria-valuetext', (0, _formatTime2['default'])(time, this.player_.duration()));\n\t  };\n\t\n\t  /**\n\t   * Get percentage of video played\n\t   *\n\t    * @return {Number} Percentage played\n\t   */\n\t\n\t\n\t  SeekBar.prototype.getPercent = function getPercent() {\n\t    var percent = this.player_.currentTime() / this.player_.duration();\n\t\n\t    return percent >= 1 ? 1 : percent;\n\t  };\n\t\n\t  /**\n\t   * Handle mouse down on seek bar\n\t   *\n\t   * @param {EventTarget~Event} event\n\t   *        The `mousedown` event that caused this to run.\n\t   *\n\t   * @listens mousedown\n\t   */\n\t\n\t\n\t  SeekBar.prototype.handleMouseDown = function handleMouseDown(event) {\n\t    _Slider.prototype.handleMouseDown.call(this, event);\n\t\n\t    this.player_.scrubbing(true);\n\t\n\t    this.videoWasPlaying = !this.player_.paused();\n\t    this.player_.pause();\n\t  };\n\t\n\t  /**\n\t   * Handle mouse move on seek bar\n\t   *\n\t   * @param {EventTarget~Event} event\n\t   *        The `mousemove` event that caused this to run.\n\t   *\n\t   * @listens mousemove\n\t   */\n\t\n\t\n\t  SeekBar.prototype.handleMouseMove = function handleMouseMove(event) {\n\t    var newTime = this.calculateDistance(event) * this.player_.duration();\n\t\n\t    // Don't let video end while scrubbing.\n\t    if (newTime === this.player_.duration()) {\n\t      newTime = newTime - 0.1;\n\t    }\n\t\n\t    // Set new time (tell player to seek to new time)\n\t    this.player_.currentTime(newTime);\n\t  };\n\t\n\t  /**\n\t   * Handle mouse up on seek bar\n\t   *\n\t   * @param {EventTarget~Event} event\n\t   *        The `mouseup` event that caused this to run.\n\t   *\n\t   * @listens mouseup\n\t   */\n\t\n\t\n\t  SeekBar.prototype.handleMouseUp = function handleMouseUp(event) {\n\t    _Slider.prototype.handleMouseUp.call(this, event);\n\t\n\t    this.player_.scrubbing(false);\n\t    if (this.videoWasPlaying) {\n\t      this.player_.play();\n\t    }\n\t  };\n\t\n\t  /**\n\t   * Move more quickly fast forward for keyboard-only users\n\t   */\n\t\n\t\n\t  SeekBar.prototype.stepForward = function stepForward() {\n\t    // more quickly fast forward for keyboard-only users\n\t    this.player_.currentTime(this.player_.currentTime() + 5);\n\t  };\n\t\n\t  /**\n\t   * Move more quickly rewind for keyboard-only users\n\t   */\n\t\n\t\n\t  SeekBar.prototype.stepBack = function stepBack() {\n\t    // more quickly rewind for keyboard-only users\n\t    this.player_.currentTime(this.player_.currentTime() - 5);\n\t  };\n\t\n\t  return SeekBar;\n\t}(_slider2['default']);\n\t\n\t/**\n\t * Default options for the `SeekBar`\n\t *\n\t * @type {Object}\n\t * @private\n\t */\n\t\n\t\n\tSeekBar.prototype.options_ = {\n\t  children: ['loadProgressBar', 'mouseTimeDisplay', 'playProgressBar'],\n\t  barName: 'playProgressBar'\n\t};\n\t\n\t/**\n\t * Call the update event for this Slider when this event happens on the player.\n\t *\n\t * @type {string}\n\t */\n\tSeekBar.prototype.playerEvent = 'timeupdate';\n\t\n\t_component2['default'].registerComponent('SeekBar', SeekBar);\n\texports['default'] = SeekBar;\n\n\n/***/ },\n/* 68 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\texports.__esModule = true;\n\t\n\tvar _component = __webpack_require__(16);\n\t\n\tvar _component2 = _interopRequireDefault(_component);\n\t\n\tvar _dom = __webpack_require__(9);\n\t\n\tvar Dom = _interopRequireWildcard(_dom);\n\t\n\tvar _obj = __webpack_require__(13);\n\t\n\tfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj['default'] = obj; return newObj; } }\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /**\n\t                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * @file slider.js\n\t                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                */\n\t\n\t\n\t/**\n\t * The base functionality for a slider. Can be vertical or horizontal.\n\t * For instance the volume bar or the seek bar on a video is a slider.\n\t *\n\t * @extends Component\n\t */\n\tvar Slider = function (_Component) {\n\t  _inherits(Slider, _Component);\n\t\n\t  /**\n\t   * Create an instance of this class\n\t   *\n\t   * @param {Player} player\n\t   *        The `Player` that this class should be attached to.\n\t   *\n\t   * @param {Object} [options]\n\t   *        The key/value store of player options.\n\t   */\n\t  function Slider(player, options) {\n\t    _classCallCheck(this, Slider);\n\t\n\t    // Set property names to bar to match with the child Slider class is looking for\n\t    var _this = _possibleConstructorReturn(this, _Component.call(this, player, options));\n\t\n\t    _this.bar = _this.getChild(_this.options_.barName);\n\t\n\t    // Set a horizontal or vertical class on the slider depending on the slider type\n\t    _this.vertical(!!_this.options_.vertical);\n\t\n\t    _this.on('mousedown', _this.handleMouseDown);\n\t    _this.on('touchstart', _this.handleMouseDown);\n\t    _this.on('focus', _this.handleFocus);\n\t    _this.on('blur', _this.handleBlur);\n\t    _this.on('click', _this.handleClick);\n\t\n\t    _this.on(player, 'controlsvisible', _this.update);\n\t    _this.on(player, _this.playerEvent, _this.update);\n\t    return _this;\n\t  }\n\t\n\t  /**\n\t   * Create the `Button`s DOM element.\n\t   *\n\t   * @param {string} type\n\t   *        Type of element to create.\n\t   *\n\t   * @param {Object} [props={}]\n\t   *        List of properties in Object form.\n\t   *\n\t   * @param {Object} [attributes={}]\n\t   *        list of attributes in Object form.\n\t   *\n\t   * @return {Element}\n\t   *         The element that gets created.\n\t   */\n\t\n\t\n\t  Slider.prototype.createEl = function createEl(type) {\n\t    var props = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\t    var attributes = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n\t\n\t    // Add the slider element class to all sub classes\n\t    props.className = props.className + ' vjs-slider';\n\t    props = (0, _obj.assign)({\n\t      tabIndex: 0\n\t    }, props);\n\t\n\t    attributes = (0, _obj.assign)({\n\t      'role': 'slider',\n\t      'aria-valuenow': 0,\n\t      'aria-valuemin': 0,\n\t      'aria-valuemax': 100,\n\t      'tabIndex': 0\n\t    }, attributes);\n\t\n\t    return _Component.prototype.createEl.call(this, type, props, attributes);\n\t  };\n\t\n\t  /**\n\t   * Handle `mousedown` or `touchstart` events on the `Slider`.\n\t   *\n\t   * @param {EventTarget~Event} event\n\t   *        `mousedown` or `touchstart` event that triggered this function\n\t   *\n\t   * @listens mousedown\n\t   * @listens touchstart\n\t   * @fires Slider#slideractive\n\t   */\n\t\n\t\n\t  Slider.prototype.handleMouseDown = function handleMouseDown(event) {\n\t    var doc = this.bar.el_.ownerDocument;\n\t\n\t    event.preventDefault();\n\t    Dom.blockTextSelection();\n\t\n\t    this.addClass('vjs-sliding');\n\t    /**\n\t     * Triggered when the slider is in an active state\n\t     *\n\t     * @event Slider#slideractive\n\t     * @type {EventTarget~Event}\n\t     */\n\t    this.trigger('slideractive');\n\t\n\t    this.on(doc, 'mousemove', this.handleMouseMove);\n\t    this.on(doc, 'mouseup', this.handleMouseUp);\n\t    this.on(doc, 'touchmove', this.handleMouseMove);\n\t    this.on(doc, 'touchend', this.handleMouseUp);\n\t\n\t    this.handleMouseMove(event);\n\t  };\n\t\n\t  /**\n\t   * Handle the `mousemove`, `touchmove`, and `mousedown` events on this `Slider`.\n\t   * The `mousemove` and `touchmove` events will only only trigger this function during\n\t   * `mousedown` and `touchstart`. This is due to {@link Slider#handleMouseDown} and\n\t   * {@link Slider#handleMouseUp}.\n\t   *\n\t   * @param {EventTarget~Event} event\n\t   *        `mousedown`, `mousemove`, `touchstart`, or `touchmove` event that triggered\n\t   *        this function\n\t   *\n\t   * @listens mousemove\n\t   * @listens touchmove\n\t   */\n\t\n\t\n\t  Slider.prototype.handleMouseMove = function handleMouseMove(event) {};\n\t\n\t  /**\n\t   * Handle `mouseup` or `touchend` events on the `Slider`.\n\t   *\n\t   * @param {EventTarget~Event} event\n\t   *        `mouseup` or `touchend` event that triggered this function.\n\t   *\n\t   * @listens touchend\n\t   * @listens mouseup\n\t   * @fires Slider#sliderinactive\n\t   */\n\t\n\t\n\t  Slider.prototype.handleMouseUp = function handleMouseUp() {\n\t    var doc = this.bar.el_.ownerDocument;\n\t\n\t    Dom.unblockTextSelection();\n\t\n\t    this.removeClass('vjs-sliding');\n\t    /**\n\t     * Triggered when the slider is no longer in an active state.\n\t     *\n\t     * @event Slider#sliderinactive\n\t     * @type {EventTarget~Event}\n\t     */\n\t    this.trigger('sliderinactive');\n\t\n\t    this.off(doc, 'mousemove', this.handleMouseMove);\n\t    this.off(doc, 'mouseup', this.handleMouseUp);\n\t    this.off(doc, 'touchmove', this.handleMouseMove);\n\t    this.off(doc, 'touchend', this.handleMouseUp);\n\t\n\t    this.update();\n\t  };\n\t\n\t  /**\n\t   * Update the progress bar of the `Slider`.\n\t   */\n\t\n\t\n\t  Slider.prototype.update = function update() {\n\t    // In VolumeBar init we have a setTimeout for update that pops and update to the end of the\n\t    // execution stack. The player is destroyed before then update will cause an error\n\t    if (!this.el_) {\n\t      return;\n\t    }\n\t\n\t    // If scrubbing, we could use a cached value to make the handle keep up with the user's mouse.\n\t    // On HTML5 browsers scrubbing is really smooth, but some flash players are slow, so we might want to utilize this later.\n\t    // var progress =  (this.player_.scrubbing()) ? this.player_.getCache().currentTime / this.player_.duration() : this.player_.currentTime() / this.player_.duration();\n\t    var progress = this.getPercent();\n\t    var bar = this.bar;\n\t\n\t    // If there's no bar...\n\t    if (!bar) {\n\t      return;\n\t    }\n\t\n\t    // Protect against no duration and other division issues\n\t    if (typeof progress !== 'number' || progress !== progress || progress < 0 || progress === Infinity) {\n\t      progress = 0;\n\t    }\n\t\n\t    // Convert to a percentage for setting\n\t    var percentage = (progress * 100).toFixed(2) + '%';\n\t\n\t    // Set the new bar width or height\n\t    if (this.vertical()) {\n\t      bar.el().style.height = percentage;\n\t    } else {\n\t      bar.el().style.width = percentage;\n\t    }\n\t  };\n\t\n\t  /**\n\t   * Calculate distance for slider\n\t   *\n\t   * @param {EventTarget~Event} event\n\t   *        The event that caused this function to run.\n\t   *\n\t   * @return {number}\n\t   *         The current position of the Slider.\n\t   *         - postition.x for vertical `Slider`s\n\t   *         - postition.y for horizontal `Slider`s\n\t   */\n\t\n\t\n\t  Slider.prototype.calculateDistance = function calculateDistance(event) {\n\t    var position = Dom.getPointerPosition(this.el_, event);\n\t\n\t    if (this.vertical()) {\n\t      return position.y;\n\t    }\n\t    return position.x;\n\t  };\n\t\n\t  /**\n\t   * Handle a `focus` event on this `Slider`.\n\t   *\n\t   * @param {EventTarget~Event} event\n\t   *        The `focus` event that caused this function to run.\n\t   *\n\t   * @listens focus\n\t   */\n\t\n\t\n\t  Slider.prototype.handleFocus = function handleFocus() {\n\t    this.on(this.bar.el_.ownerDocument, 'keydown', this.handleKeyPress);\n\t  };\n\t\n\t  /**\n\t   * Handle a `keydown` event on the `Slider`. Watches for left, rigth, up, and down\n\t   * arrow keys. This function will only be called when the slider has focus. See\n\t   * {@link Slider#handleFocus} and {@link Slider#handleBlur}.\n\t   *\n\t   * @param {EventTarget~Event} event\n\t   *        the `keydown` event that caused this function to run.\n\t   *\n\t   * @listens keydown\n\t   */\n\t\n\t\n\t  Slider.prototype.handleKeyPress = function handleKeyPress(event) {\n\t    // Left and Down Arrows\n\t    if (event.which === 37 || event.which === 40) {\n\t      event.preventDefault();\n\t      this.stepBack();\n\t\n\t      // Up and Right Arrows\n\t    } else if (event.which === 38 || event.which === 39) {\n\t      event.preventDefault();\n\t      this.stepForward();\n\t    }\n\t  };\n\t\n\t  /**\n\t   * Handle a `blur` event on this `Slider`.\n\t   *\n\t   * @param {EventTarget~Event} event\n\t   *        The `blur` event that caused this function to run.\n\t   *\n\t   * @listens blur\n\t   */\n\t\n\t  Slider.prototype.handleBlur = function handleBlur() {\n\t    this.off(this.bar.el_.ownerDocument, 'keydown', this.handleKeyPress);\n\t  };\n\t\n\t  /**\n\t   * Listener for click events on slider, used to prevent clicks\n\t   *   from bubbling up to parent elements like button menus.\n\t   *\n\t   * @param {Object} event\n\t   *        Event that caused this object to run\n\t   */\n\t\n\t\n\t  Slider.prototype.handleClick = function handleClick(event) {\n\t    event.stopImmediatePropagation();\n\t    event.preventDefault();\n\t  };\n\t\n\t  /**\n\t   * Get/set if slider is horizontal for vertical\n\t   *\n\t   * @param {boolean} [bool]\n\t   *        - true if slider is vertical,\n\t   *        - false is horizontal\n\t   *\n\t   * @return {boolean|Slider}\n\t   *         - true if slider is vertical, and getting\n\t   *         - false is horizontal, and getting\n\t   *         - a reference to this object when setting\n\t   */\n\t\n\t\n\t  Slider.prototype.vertical = function vertical(bool) {\n\t    if (bool === undefined) {\n\t      return this.vertical_ || false;\n\t    }\n\t\n\t    this.vertical_ = !!bool;\n\t\n\t    if (this.vertical_) {\n\t      this.addClass('vjs-slider-vertical');\n\t    } else {\n\t      this.addClass('vjs-slider-horizontal');\n\t    }\n\t\n\t    return this;\n\t  };\n\t\n\t  return Slider;\n\t}(_component2['default']);\n\t\n\t_component2['default'].registerComponent('Slider', Slider);\n\texports['default'] = Slider;\n\n\n/***/ },\n/* 69 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\texports.__esModule = true;\n\texports['default'] = computedStyle;\n\t\n\tvar _window = __webpack_require__(4);\n\t\n\tvar _window2 = _interopRequireDefault(_window);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\t\n\t/**\n\t * A safe getComputedStyle with an IE8 fallback.\n\t *\n\t * This is needed because in Firefox, if the player is loaded in an iframe with\n\t * `display:none`, then `getComputedStyle` returns `null`, so, we do a null-check to\n\t * make sure  that the player doesn't break in these cases.\n\t *\n\t * @param {Element} el\n\t *        The element you want the computed style of\n\t *\n\t * @param {string} prop\n\t *        The property name you want\n\t *\n\t * @see https://bugzilla.mozilla.org/show_bug.cgi?id=548397\n\t */\n\tfunction computedStyle(el, prop) {\n\t  if (!el || !prop) {\n\t    return '';\n\t  }\n\t\n\t  if (typeof _window2['default'].getComputedStyle === 'function') {\n\t    var cs = _window2['default'].getComputedStyle(el);\n\t\n\t    return cs ? cs[prop] : '';\n\t  }\n\t\n\t  return el.currentStyle[prop] || '';\n\t} /**\n\t   * @file computed-style.js\n\t   * @module computed-style\n\t   */\n\n\n/***/ },\n/* 70 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\texports.__esModule = true;\n\t\n\tvar _component = __webpack_require__(16);\n\t\n\tvar _component2 = _interopRequireDefault(_component);\n\t\n\tvar _dom = __webpack_require__(9);\n\t\n\tvar Dom = _interopRequireWildcard(_dom);\n\t\n\tfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj['default'] = obj; return newObj; } }\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /**\n\t                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * @file load-progress-bar.js\n\t                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                */\n\t\n\t\n\t/**\n\t * Shows loading progress\n\t *\n\t * @extends Component\n\t */\n\tvar LoadProgressBar = function (_Component) {\n\t  _inherits(LoadProgressBar, _Component);\n\t\n\t  /**\n\t   * Creates an instance of this class.\n\t   *\n\t   * @param {Player} player\n\t   *        The `Player` that this class should be attached to.\n\t   *\n\t   * @param {Object} [options]\n\t   *        The key/value store of player options.\n\t   */\n\t  function LoadProgressBar(player, options) {\n\t    _classCallCheck(this, LoadProgressBar);\n\t\n\t    var _this = _possibleConstructorReturn(this, _Component.call(this, player, options));\n\t\n\t    _this.partEls_ = [];\n\t    _this.on(player, 'progress', _this.update);\n\t    return _this;\n\t  }\n\t\n\t  /**\n\t   * Create the `Component`'s DOM element\n\t   *\n\t   * @return {Element}\n\t   *         The element that was created.\n\t   */\n\t\n\t\n\t  LoadProgressBar.prototype.createEl = function createEl() {\n\t    return _Component.prototype.createEl.call(this, 'div', {\n\t      className: 'vjs-load-progress',\n\t      innerHTML: '<span class=\"vjs-control-text\"><span>' + this.localize('Loaded') + '</span>: 0%</span>'\n\t    });\n\t  };\n\t\n\t  /**\n\t   * Update progress bar\n\t   *\n\t   * @param {EventTarget~Event} [event]\n\t   *        The `progress` event that caused this function to run.\n\t   *\n\t   * @listens Player#progress\n\t   */\n\t\n\t\n\t  LoadProgressBar.prototype.update = function update(event) {\n\t    var buffered = this.player_.buffered();\n\t    var duration = this.player_.duration();\n\t    var bufferedEnd = this.player_.bufferedEnd();\n\t    var children = this.partEls_;\n\t\n\t    // get the percent width of a time compared to the total end\n\t    var percentify = function percentify(time, end) {\n\t      // no NaN\n\t      var percent = time / end || 0;\n\t\n\t      return (percent >= 1 ? 1 : percent) * 100 + '%';\n\t    };\n\t\n\t    // update the width of the progress bar\n\t    this.el_.style.width = percentify(bufferedEnd, duration);\n\t\n\t    // add child elements to represent the individual buffered time ranges\n\t    for (var i = 0; i < buffered.length; i++) {\n\t      var start = buffered.start(i);\n\t      var end = buffered.end(i);\n\t      var part = children[i];\n\t\n\t      if (!part) {\n\t        part = this.el_.appendChild(Dom.createEl());\n\t        children[i] = part;\n\t      }\n\t\n\t      // set the percent based on the width of the progress bar (bufferedEnd)\n\t      part.style.left = percentify(start, bufferedEnd);\n\t      part.style.width = percentify(end - start, bufferedEnd);\n\t    }\n\t\n\t    // remove unused buffered range elements\n\t    for (var _i = children.length; _i > buffered.length; _i--) {\n\t      this.el_.removeChild(children[_i - 1]);\n\t    }\n\t    children.length = buffered.length;\n\t  };\n\t\n\t  return LoadProgressBar;\n\t}(_component2['default']);\n\t\n\t_component2['default'].registerComponent('LoadProgressBar', LoadProgressBar);\n\texports['default'] = LoadProgressBar;\n\n\n/***/ },\n/* 71 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\texports.__esModule = true;\n\t\n\tvar _component = __webpack_require__(16);\n\t\n\tvar _component2 = _interopRequireDefault(_component);\n\t\n\tvar _fn = __webpack_require__(17);\n\t\n\tvar Fn = _interopRequireWildcard(_fn);\n\t\n\tvar _formatTime = __webpack_require__(61);\n\t\n\tvar _formatTime2 = _interopRequireDefault(_formatTime);\n\t\n\tfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj['default'] = obj; return newObj; } }\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /**\n\t                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * @file play-progress-bar.js\n\t                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                */\n\t\n\t\n\t/**\n\t * Shows play progress\n\t *\n\t * @extends Component\n\t */\n\tvar PlayProgressBar = function (_Component) {\n\t  _inherits(PlayProgressBar, _Component);\n\t\n\t  /**\n\t   * Creates an instance of this class.\n\t   *\n\t   * @param {Player} player\n\t   *        The `Player` that this class should be attached to.\n\t   *\n\t   * @param {Object} [options]\n\t   *        The key/value store of player options.\n\t   */\n\t  function PlayProgressBar(player, options) {\n\t    _classCallCheck(this, PlayProgressBar);\n\t\n\t    var _this = _possibleConstructorReturn(this, _Component.call(this, player, options));\n\t\n\t    _this.updateDataAttr();\n\t    _this.on(player, 'timeupdate', _this.updateDataAttr);\n\t    player.ready(Fn.bind(_this, _this.updateDataAttr));\n\t\n\t    if (options.playerOptions && options.playerOptions.controlBar && options.playerOptions.controlBar.progressControl && options.playerOptions.controlBar.progressControl.keepTooltipsInside) {\n\t      _this.keepTooltipsInside = options.playerOptions.controlBar.progressControl.keepTooltipsInside;\n\t    }\n\t\n\t    if (_this.keepTooltipsInside) {\n\t      _this.addClass('vjs-keep-tooltips-inside');\n\t    }\n\t    return _this;\n\t  }\n\t\n\t  /**\n\t   * Create the `Component`'s DOM element\n\t   *\n\t   * @return {Element}\n\t   *         The element that was created.\n\t   */\n\t\n\t\n\t  PlayProgressBar.prototype.createEl = function createEl() {\n\t    return _Component.prototype.createEl.call(this, 'div', {\n\t      className: 'vjs-play-progress vjs-slider-bar',\n\t      innerHTML: '<span class=\"vjs-control-text\"><span>' + this.localize('Progress') + '</span>: 0%</span>'\n\t    });\n\t  };\n\t\n\t  /**\n\t   * Update the data-current-time attribute on the `PlayProgressBar`.\n\t   *\n\t   * @param {EventTarget~Event} [event]\n\t   *        The `timeupdate` event that caused this to run.\n\t   *\n\t   * @listens Player#timeupdate\n\t   */\n\t\n\t\n\t  PlayProgressBar.prototype.updateDataAttr = function updateDataAttr(event) {\n\t    var time = this.player_.scrubbing() ? this.player_.getCache().currentTime : this.player_.currentTime();\n\t\n\t    this.el_.setAttribute('data-current-time', (0, _formatTime2['default'])(time, this.player_.duration()));\n\t  };\n\t\n\t  return PlayProgressBar;\n\t}(_component2['default']);\n\t\n\t_component2['default'].registerComponent('PlayProgressBar', PlayProgressBar);\n\texports['default'] = PlayProgressBar;\n\n\n/***/ },\n/* 72 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\texports.__esModule = true;\n\t\n\tvar _component = __webpack_require__(16);\n\t\n\tvar _component2 = _interopRequireDefault(_component);\n\t\n\tvar _fn = __webpack_require__(17);\n\t\n\tvar Fn = _interopRequireWildcard(_fn);\n\t\n\tvar _formatTime = __webpack_require__(61);\n\t\n\tvar _formatTime2 = _interopRequireDefault(_formatTime);\n\t\n\tfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj['default'] = obj; return newObj; } }\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /**\n\t                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * @file play-progress-bar.js\n\t                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                */\n\t\n\t\n\t/**\n\t * Shows play progress\n\t *\n\t * @extends Component\n\t */\n\tvar TooltipProgressBar = function (_Component) {\n\t  _inherits(TooltipProgressBar, _Component);\n\t\n\t  /**\n\t   * Creates an instance of this class.\n\t   *\n\t   * @param {Player} player\n\t   *        The `Player` that this class should be attached to.\n\t   *\n\t   * @param {Object} [options]\n\t   *        The key/value store of player options.\n\t   */\n\t  function TooltipProgressBar(player, options) {\n\t    _classCallCheck(this, TooltipProgressBar);\n\t\n\t    var _this = _possibleConstructorReturn(this, _Component.call(this, player, options));\n\t\n\t    _this.updateDataAttr();\n\t    _this.on(player, 'timeupdate', _this.updateDataAttr);\n\t    player.ready(Fn.bind(_this, _this.updateDataAttr));\n\t    return _this;\n\t  }\n\t\n\t  /**\n\t   * Create the `Component`'s DOM element\n\t   *\n\t   * @return {Element}\n\t   *         The element that was created.\n\t   */\n\t\n\t\n\t  TooltipProgressBar.prototype.createEl = function createEl() {\n\t    var el = _Component.prototype.createEl.call(this, 'div', {\n\t      className: 'vjs-tooltip-progress-bar vjs-slider-bar',\n\t      innerHTML: '<div class=\"vjs-time-tooltip\"></div>\\n        <span class=\"vjs-control-text\"><span>' + this.localize('Progress') + '</span>: 0%</span>'\n\t    });\n\t\n\t    this.tooltip = el.querySelector('.vjs-time-tooltip');\n\t\n\t    return el;\n\t  };\n\t\n\t  /**\n\t   * Updatet the data-current-time attribute for TooltipProgressBar\n\t   *\n\t   * @param {EventTarget~Event} [event]\n\t   *        The `timeupdate` event that caused this function to run.\n\t   *\n\t   * @listens Player#timeupdate\n\t   */\n\t\n\t\n\t  TooltipProgressBar.prototype.updateDataAttr = function updateDataAttr(event) {\n\t    var time = this.player_.scrubbing() ? this.player_.getCache().currentTime : this.player_.currentTime();\n\t    var formattedTime = (0, _formatTime2['default'])(time, this.player_.duration());\n\t\n\t    this.el_.setAttribute('data-current-time', formattedTime);\n\t    this.tooltip.innerHTML = formattedTime;\n\t  };\n\t\n\t  return TooltipProgressBar;\n\t}(_component2['default']);\n\t\n\t_component2['default'].registerComponent('TooltipProgressBar', TooltipProgressBar);\n\texports['default'] = TooltipProgressBar;\n\n\n/***/ },\n/* 73 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\texports.__esModule = true;\n\t\n\tvar _component = __webpack_require__(16);\n\t\n\tvar _component2 = _interopRequireDefault(_component);\n\t\n\tvar _dom = __webpack_require__(9);\n\t\n\tvar Dom = _interopRequireWildcard(_dom);\n\t\n\tvar _fn = __webpack_require__(17);\n\t\n\tvar Fn = _interopRequireWildcard(_fn);\n\t\n\tvar _formatTime = __webpack_require__(61);\n\t\n\tvar _formatTime2 = _interopRequireDefault(_formatTime);\n\t\n\tvar _computedStyle = __webpack_require__(69);\n\t\n\tvar _computedStyle2 = _interopRequireDefault(_computedStyle);\n\t\n\tfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj['default'] = obj; return newObj; } }\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /**\n\t                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * @file mouse-time-display.js\n\t                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                */\n\t\n\t\n\t/**\n\t * The Mouse Time Display component shows the time you will seek to\n\t * when hovering over the progress bar\n\t *\n\t * @extends Component\n\t */\n\tvar MouseTimeDisplay = function (_Component) {\n\t  _inherits(MouseTimeDisplay, _Component);\n\t\n\t  /**\n\t   * Creates an instance of this class.\n\t   *\n\t   * @param {Player} player\n\t   *        The `Player` that this class should be attached to.\n\t   *\n\t   * @param {Object} [options]\n\t   *        The key/value store of player options.\n\t   */\n\t  function MouseTimeDisplay(player, options) {\n\t    _classCallCheck(this, MouseTimeDisplay);\n\t\n\t    var _this = _possibleConstructorReturn(this, _Component.call(this, player, options));\n\t\n\t    if (options.playerOptions && options.playerOptions.controlBar && options.playerOptions.controlBar.progressControl && options.playerOptions.controlBar.progressControl.keepTooltipsInside) {\n\t      _this.keepTooltipsInside = options.playerOptions.controlBar.progressControl.keepTooltipsInside;\n\t    }\n\t\n\t    if (_this.keepTooltipsInside) {\n\t      _this.tooltip = Dom.createEl('div', { className: 'vjs-time-tooltip' });\n\t      _this.el().appendChild(_this.tooltip);\n\t      _this.addClass('vjs-keep-tooltips-inside');\n\t    }\n\t\n\t    _this.update(0, 0);\n\t\n\t    player.on('ready', function () {\n\t      _this.on(player.controlBar.progressControl.el(), 'mousemove', Fn.throttle(Fn.bind(_this, _this.handleMouseMove), 25));\n\t    });\n\t    return _this;\n\t  }\n\t\n\t  /**\n\t   * Create the `Component`'s DOM element\n\t   *\n\t   * @return {Element}\n\t   *         The element that was created.\n\t   */\n\t\n\t\n\t  MouseTimeDisplay.prototype.createEl = function createEl() {\n\t    return _Component.prototype.createEl.call(this, 'div', {\n\t      className: 'vjs-mouse-display'\n\t    });\n\t  };\n\t\n\t  /**\n\t   * Handle the mouse move event on the `MouseTimeDisplay`.\n\t   *\n\t   * @param {EventTarget~Event} event\n\t   *        The `mousemove` event that caused this to event to run.\n\t   *\n\t   * @listen mousemove\n\t   */\n\t\n\t\n\t  MouseTimeDisplay.prototype.handleMouseMove = function handleMouseMove(event) {\n\t    var duration = this.player_.duration();\n\t    var newTime = this.calculateDistance(event) * duration;\n\t    var position = event.pageX - Dom.findElPosition(this.el().parentNode).left;\n\t\n\t    this.update(newTime, position);\n\t  };\n\t\n\t  /**\n\t   * Update the time and posistion of the `MouseTimeDisplay`.\n\t   *\n\t   * @param {number} newTime\n\t   *        Time to change the `MouseTimeDisplay` to.\n\t   *\n\t   * @param {nubmer} position\n\t   *        Postion from the left of the in pixels.\n\t   */\n\t\n\t\n\t  MouseTimeDisplay.prototype.update = function update(newTime, position) {\n\t    var time = (0, _formatTime2['default'])(newTime, this.player_.duration());\n\t\n\t    this.el().style.left = position + 'px';\n\t    this.el().setAttribute('data-current-time', time);\n\t\n\t    if (this.keepTooltipsInside) {\n\t      var clampedPosition = this.clampPosition_(position);\n\t      var difference = position - clampedPosition + 1;\n\t      var tooltipWidth = parseFloat((0, _computedStyle2['default'])(this.tooltip, 'width'));\n\t      var tooltipWidthHalf = tooltipWidth / 2;\n\t\n\t      this.tooltip.innerHTML = time;\n\t      this.tooltip.style.right = '-' + (tooltipWidthHalf - difference) + 'px';\n\t    }\n\t  };\n\t\n\t  /**\n\t   * Get the mouse pointers x coordinate in pixels.\n\t   *\n\t   * @param {EventTarget~Event} [event]\n\t   *        The `mousemove` event that was passed to this function by\n\t   *        {@link MouseTimeDisplay#handleMouseMove}\n\t   *\n\t   * @return {number}\n\t   *         THe x position in pixels of the mouse pointer.\n\t   */\n\t\n\t\n\t  MouseTimeDisplay.prototype.calculateDistance = function calculateDistance(event) {\n\t    return Dom.getPointerPosition(this.el().parentNode, event).x;\n\t  };\n\t\n\t  /**\n\t   * This takes in a horizontal position for the bar and returns a clamped position.\n\t   * Clamped position means that it will keep the position greater than half the width\n\t   * of the tooltip and smaller than the player width minus half the width o the tooltip.\n\t   * It will only clamp the position if `keepTooltipsInside` option is set.\n\t   *\n\t   * @param {number} position\n\t   *        The position the bar wants to be\n\t   *\n\t   * @return {number}\n\t   *         The (potentially) new clamped position.\n\t   *\n\t   * @private\n\t   */\n\t\n\t\n\t  MouseTimeDisplay.prototype.clampPosition_ = function clampPosition_(position) {\n\t    if (!this.keepTooltipsInside) {\n\t      return position;\n\t    }\n\t\n\t    var playerWidth = parseFloat((0, _computedStyle2['default'])(this.player().el(), 'width'));\n\t    var tooltipWidth = parseFloat((0, _computedStyle2['default'])(this.tooltip, 'width'));\n\t    var tooltipWidthHalf = tooltipWidth / 2;\n\t    var actualPosition = position;\n\t\n\t    if (position < tooltipWidthHalf) {\n\t      actualPosition = Math.ceil(tooltipWidthHalf);\n\t    } else if (position > playerWidth - tooltipWidthHalf) {\n\t      actualPosition = Math.floor(playerWidth - tooltipWidthHalf);\n\t    }\n\t\n\t    return actualPosition;\n\t  };\n\t\n\t  return MouseTimeDisplay;\n\t}(_component2['default']);\n\t\n\t_component2['default'].registerComponent('MouseTimeDisplay', MouseTimeDisplay);\n\texports['default'] = MouseTimeDisplay;\n\n\n/***/ },\n/* 74 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\texports.__esModule = true;\n\t\n\tvar _button = __webpack_require__(56);\n\t\n\tvar _button2 = _interopRequireDefault(_button);\n\t\n\tvar _component = __webpack_require__(16);\n\t\n\tvar _component2 = _interopRequireDefault(_component);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /**\n\t                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * @file fullscreen-toggle.js\n\t                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                */\n\t\n\t\n\t/**\n\t * Toggle fullscreen video\n\t *\n\t * @extends Button\n\t */\n\tvar FullscreenToggle = function (_Button) {\n\t  _inherits(FullscreenToggle, _Button);\n\t\n\t  /**\n\t   * Creates an instance of this class.\n\t   *\n\t   * @param {Player} player\n\t   *        The `Player` that this class should be attached to.\n\t   *\n\t   * @param {Object} [options]\n\t   *        The key/value store of player options.\n\t   */\n\t  function FullscreenToggle(player, options) {\n\t    _classCallCheck(this, FullscreenToggle);\n\t\n\t    var _this = _possibleConstructorReturn(this, _Button.call(this, player, options));\n\t\n\t    _this.on(player, 'fullscreenchange', _this.handleFullscreenChange);\n\t    return _this;\n\t  }\n\t\n\t  /**\n\t   * Builds the default DOM `className`.\n\t   *\n\t   * @return {string}\n\t   *         The DOM `className` for this object.\n\t   */\n\t\n\t\n\t  FullscreenToggle.prototype.buildCSSClass = function buildCSSClass() {\n\t    return 'vjs-fullscreen-control ' + _Button.prototype.buildCSSClass.call(this);\n\t  };\n\t\n\t  /**\n\t   * Handles fullscreenchange on the player and change control text accordingly.\n\t   *\n\t   * @param {EventTarget~Event} [event]\n\t   *        The {@link Player#fullscreenchange} event that caused this function to be\n\t   *        called.\n\t   *\n\t   * @listens Player#fullscreenchange\n\t   */\n\t\n\t\n\t  FullscreenToggle.prototype.handleFullscreenChange = function handleFullscreenChange(event) {\n\t    if (this.player_.isFullscreen()) {\n\t      this.controlText('Non-Fullscreen');\n\t    } else {\n\t      this.controlText('Fullscreen');\n\t    }\n\t  };\n\t\n\t  /**\n\t   * This gets called when an `FullscreenToggle` is \"clicked\". See\n\t   * {@link ClickableComponent} for more detailed information on what a click can be.\n\t   *\n\t   * @param {EventTarget~Event} [event]\n\t   *        The `keydown`, `tap`, or `click` event that caused this function to be\n\t   *        called.\n\t   *\n\t   * @listens tap\n\t   * @listens click\n\t   */\n\t\n\t\n\t  FullscreenToggle.prototype.handleClick = function handleClick(event) {\n\t    if (!this.player_.isFullscreen()) {\n\t      this.player_.requestFullscreen();\n\t    } else {\n\t      this.player_.exitFullscreen();\n\t    }\n\t  };\n\t\n\t  return FullscreenToggle;\n\t}(_button2['default']);\n\t\n\t/**\n\t * The text that should display over the `FullscreenToggle`s controls. Added for localization.\n\t *\n\t * @type {string}\n\t * @private\n\t */\n\t\n\t\n\tFullscreenToggle.prototype.controlText_ = 'Fullscreen';\n\t\n\t_component2['default'].registerComponent('FullscreenToggle', FullscreenToggle);\n\texports['default'] = FullscreenToggle;\n\n\n/***/ },\n/* 75 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\texports.__esModule = true;\n\t\n\tvar _component = __webpack_require__(16);\n\t\n\tvar _component2 = _interopRequireDefault(_component);\n\t\n\t__webpack_require__(76);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /**\n\t                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * @file volume-control.js\n\t                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                */\n\t\n\t\n\t// Required children\n\t\n\t\n\t/**\n\t * The component for controlling the volume level\n\t *\n\t * @extends Component\n\t */\n\tvar VolumeControl = function (_Component) {\n\t  _inherits(VolumeControl, _Component);\n\t\n\t  /**\n\t   * Creates an instance of this class.\n\t   *\n\t   * @param {Player} player\n\t   *        The `Player` that this class should be attached to.\n\t   *\n\t   * @param {Object} [options={}]\n\t   *        The key/value store of player options.\n\t   */\n\t  function VolumeControl(player, options) {\n\t    _classCallCheck(this, VolumeControl);\n\t\n\t    // hide volume controls when they're not supported by the current tech\n\t    var _this = _possibleConstructorReturn(this, _Component.call(this, player, options));\n\t\n\t    if (player.tech_ && player.tech_.featuresVolumeControl === false) {\n\t      _this.addClass('vjs-hidden');\n\t    }\n\t    _this.on(player, 'loadstart', function () {\n\t      if (player.tech_.featuresVolumeControl === false) {\n\t        this.addClass('vjs-hidden');\n\t      } else {\n\t        this.removeClass('vjs-hidden');\n\t      }\n\t    });\n\t    return _this;\n\t  }\n\t\n\t  /**\n\t   * Create the `Component`'s DOM element\n\t   *\n\t   * @return {Element}\n\t   *         The element that was created.\n\t   */\n\t\n\t\n\t  VolumeControl.prototype.createEl = function createEl() {\n\t    return _Component.prototype.createEl.call(this, 'div', {\n\t      className: 'vjs-volume-control vjs-control'\n\t    });\n\t  };\n\t\n\t  return VolumeControl;\n\t}(_component2['default']);\n\t\n\t/**\n\t * Default options for the `VolumeControl`\n\t *\n\t * @type {Object}\n\t * @private\n\t */\n\t\n\t\n\tVolumeControl.prototype.options_ = {\n\t  children: ['volumeBar']\n\t};\n\t\n\t_component2['default'].registerComponent('VolumeControl', VolumeControl);\n\texports['default'] = VolumeControl;\n\n\n/***/ },\n/* 76 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\texports.__esModule = true;\n\t\n\tvar _slider = __webpack_require__(68);\n\t\n\tvar _slider2 = _interopRequireDefault(_slider);\n\t\n\tvar _component = __webpack_require__(16);\n\t\n\tvar _component2 = _interopRequireDefault(_component);\n\t\n\tvar _fn = __webpack_require__(17);\n\t\n\tvar Fn = _interopRequireWildcard(_fn);\n\t\n\t__webpack_require__(77);\n\t\n\tfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj['default'] = obj; return newObj; } }\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /**\n\t                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * @file volume-bar.js\n\t                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                */\n\t\n\t\n\t// Required children\n\t\n\t\n\t/**\n\t * The bar that contains the volume level and can be clicked on to adjust the level\n\t *\n\t * @extends Slider\n\t */\n\tvar VolumeBar = function (_Slider) {\n\t  _inherits(VolumeBar, _Slider);\n\t\n\t  /**\n\t   * Creates an instance of this class.\n\t   *\n\t   * @param {Player} player\n\t   *        The `Player` that this class should be attached to.\n\t   *\n\t   * @param {Object} [options]\n\t   *        The key/value store of player options.\n\t   */\n\t  function VolumeBar(player, options) {\n\t    _classCallCheck(this, VolumeBar);\n\t\n\t    var _this = _possibleConstructorReturn(this, _Slider.call(this, player, options));\n\t\n\t    _this.on(player, 'volumechange', _this.updateARIAAttributes);\n\t    player.ready(Fn.bind(_this, _this.updateARIAAttributes));\n\t    return _this;\n\t  }\n\t\n\t  /**\n\t   * Create the `Component`'s DOM element\n\t   *\n\t   * @return {Element}\n\t   *         The element that was created.\n\t   */\n\t\n\t\n\t  VolumeBar.prototype.createEl = function createEl() {\n\t    return _Slider.prototype.createEl.call(this, 'div', {\n\t      className: 'vjs-volume-bar vjs-slider-bar'\n\t    }, {\n\t      'aria-label': 'volume level'\n\t    });\n\t  };\n\t\n\t  /**\n\t   * Handle movement events on the {@link VolumeMenuButton}.\n\t   *\n\t   * @param {EventTarget~Event} event\n\t   *        The event that caused this function to run.\n\t   *\n\t   * @listens mousemove\n\t   */\n\t\n\t\n\t  VolumeBar.prototype.handleMouseMove = function handleMouseMove(event) {\n\t    this.checkMuted();\n\t    this.player_.volume(this.calculateDistance(event));\n\t  };\n\t\n\t  /**\n\t   * If the player is muted unmute it.\n\t   */\n\t\n\t\n\t  VolumeBar.prototype.checkMuted = function checkMuted() {\n\t    if (this.player_.muted()) {\n\t      this.player_.muted(false);\n\t    }\n\t  };\n\t\n\t  /**\n\t   * Get percent of volume level\n\t   *\n\t   * @return {number}\n\t   *         Volume level percent as a decimal number.\n\t   */\n\t\n\t\n\t  VolumeBar.prototype.getPercent = function getPercent() {\n\t    if (this.player_.muted()) {\n\t      return 0;\n\t    }\n\t    return this.player_.volume();\n\t  };\n\t\n\t  /**\n\t   * Increase volume level for keyboard users\n\t   */\n\t\n\t\n\t  VolumeBar.prototype.stepForward = function stepForward() {\n\t    this.checkMuted();\n\t    this.player_.volume(this.player_.volume() + 0.1);\n\t  };\n\t\n\t  /**\n\t   * Decrease volume level for keyboard users\n\t   */\n\t\n\t\n\t  VolumeBar.prototype.stepBack = function stepBack() {\n\t    this.checkMuted();\n\t    this.player_.volume(this.player_.volume() - 0.1);\n\t  };\n\t\n\t  /**\n\t   * Update ARIA accessibility attributes\n\t   *\n\t   * @param {EventTarget~Event} [event]\n\t   *        The `volumechange` event that caused this function to run.\n\t   *\n\t   * @listens Player#volumechange\n\t   */\n\t\n\t\n\t  VolumeBar.prototype.updateARIAAttributes = function updateARIAAttributes(event) {\n\t    // Current value of volume bar as a percentage\n\t    var volume = (this.player_.volume() * 100).toFixed(2);\n\t\n\t    this.el_.setAttribute('aria-valuenow', volume);\n\t    this.el_.setAttribute('aria-valuetext', volume + '%');\n\t  };\n\t\n\t  return VolumeBar;\n\t}(_slider2['default']);\n\t\n\t/**\n\t * Default options for the `VolumeBar`\n\t *\n\t * @type {Object}\n\t * @private\n\t */\n\t\n\t\n\tVolumeBar.prototype.options_ = {\n\t  children: ['volumeLevel'],\n\t  barName: 'volumeLevel'\n\t};\n\t\n\t/**\n\t * Call the update event for this Slider when this event happens on the player.\n\t *\n\t * @type {string}\n\t */\n\tVolumeBar.prototype.playerEvent = 'volumechange';\n\t\n\t_component2['default'].registerComponent('VolumeBar', VolumeBar);\n\texports['default'] = VolumeBar;\n\n\n/***/ },\n/* 77 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\texports.__esModule = true;\n\t\n\tvar _component = __webpack_require__(16);\n\t\n\tvar _component2 = _interopRequireDefault(_component);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /**\n\t                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * @file volume-level.js\n\t                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                */\n\t\n\t\n\t/**\n\t * Shows volume level\n\t *\n\t * @extends Component\n\t */\n\tvar VolumeLevel = function (_Component) {\n\t  _inherits(VolumeLevel, _Component);\n\t\n\t  function VolumeLevel() {\n\t    _classCallCheck(this, VolumeLevel);\n\t\n\t    return _possibleConstructorReturn(this, _Component.apply(this, arguments));\n\t  }\n\t\n\t  /**\n\t   * Create the `Component`'s DOM element\n\t   *\n\t   * @return {Element}\n\t   *         The element that was created.\n\t   */\n\t  VolumeLevel.prototype.createEl = function createEl() {\n\t    return _Component.prototype.createEl.call(this, 'div', {\n\t      className: 'vjs-volume-level',\n\t      innerHTML: '<span class=\"vjs-control-text\"></span>'\n\t    });\n\t  };\n\t\n\t  return VolumeLevel;\n\t}(_component2['default']);\n\t\n\t_component2['default'].registerComponent('VolumeLevel', VolumeLevel);\n\texports['default'] = VolumeLevel;\n\n\n/***/ },\n/* 78 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\texports.__esModule = true;\n\t\n\tvar _fn = __webpack_require__(17);\n\t\n\tvar Fn = _interopRequireWildcard(_fn);\n\t\n\tvar _component = __webpack_require__(16);\n\t\n\tvar _component2 = _interopRequireDefault(_component);\n\t\n\tvar _popup = __webpack_require__(79);\n\t\n\tvar _popup2 = _interopRequireDefault(_popup);\n\t\n\tvar _popupButton = __webpack_require__(80);\n\t\n\tvar _popupButton2 = _interopRequireDefault(_popupButton);\n\t\n\tvar _muteToggle = __webpack_require__(81);\n\t\n\tvar _muteToggle2 = _interopRequireDefault(_muteToggle);\n\t\n\tvar _volumeBar = __webpack_require__(76);\n\t\n\tvar _volumeBar2 = _interopRequireDefault(_volumeBar);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\t\n\tfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj['default'] = obj; return newObj; } }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /**\n\t                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * @file volume-menu-button.js\n\t                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                */\n\t\n\t\n\t/**\n\t * Button for volume popup\n\t *\n\t * @extends PopupButton\n\t */\n\tvar VolumeMenuButton = function (_PopupButton) {\n\t  _inherits(VolumeMenuButton, _PopupButton);\n\t\n\t  /**\n\t   * Creates an instance of this class.\n\t   *\n\t   * @param {Player} player\n\t   *        The `Player` that this class should be attached to.\n\t   *\n\t   * @param {Object} [options={}]\n\t   *        The key/value store of player options.\n\t   */\n\t  function VolumeMenuButton(player) {\n\t    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\t\n\t    _classCallCheck(this, VolumeMenuButton);\n\t\n\t    // Default to inline\n\t    if (options.inline === undefined) {\n\t      options.inline = true;\n\t    }\n\t\n\t    // If the vertical option isn't passed at all, default to true.\n\t    if (options.vertical === undefined) {\n\t      // If an inline volumeMenuButton is used, we should default to using\n\t      // a horizontal slider for obvious reasons.\n\t      if (options.inline) {\n\t        options.vertical = false;\n\t      } else {\n\t        options.vertical = true;\n\t      }\n\t    }\n\t\n\t    // The vertical option needs to be set on the volumeBar as well,\n\t    // since that will need to be passed along to the VolumeBar constructor\n\t    options.volumeBar = options.volumeBar || {};\n\t    options.volumeBar.vertical = !!options.vertical;\n\t\n\t    // Same listeners as MuteToggle\n\t    var _this = _possibleConstructorReturn(this, _PopupButton.call(this, player, options));\n\t\n\t    _this.on(player, 'volumechange', _this.volumeUpdate);\n\t    _this.on(player, 'loadstart', _this.volumeUpdate);\n\t\n\t    // hide mute toggle if the current tech doesn't support volume control\n\t    function updateVisibility() {\n\t      if (player.tech_ && player.tech_.featuresVolumeControl === false) {\n\t        this.addClass('vjs-hidden');\n\t      } else {\n\t        this.removeClass('vjs-hidden');\n\t      }\n\t    }\n\t\n\t    updateVisibility.call(_this);\n\t    _this.on(player, 'loadstart', updateVisibility);\n\t\n\t    _this.on(_this.volumeBar, ['slideractive', 'focus'], function () {\n\t      this.addClass('vjs-slider-active');\n\t    });\n\t\n\t    _this.on(_this.volumeBar, ['sliderinactive', 'blur'], function () {\n\t      this.removeClass('vjs-slider-active');\n\t    });\n\t\n\t    _this.on(_this.volumeBar, ['focus'], function () {\n\t      this.addClass('vjs-lock-showing');\n\t    });\n\t\n\t    _this.on(_this.volumeBar, ['blur'], function () {\n\t      this.removeClass('vjs-lock-showing');\n\t    });\n\t    return _this;\n\t  }\n\t\n\t  /**\n\t   * Builds the default DOM `className`.\n\t   *\n\t   * @return {string}\n\t   *         The DOM `className` for this object.\n\t   */\n\t\n\t\n\t  VolumeMenuButton.prototype.buildCSSClass = function buildCSSClass() {\n\t    var orientationClass = '';\n\t\n\t    if (this.options_.vertical) {\n\t      orientationClass = 'vjs-volume-menu-button-vertical';\n\t    } else {\n\t      orientationClass = 'vjs-volume-menu-button-horizontal';\n\t    }\n\t\n\t    return 'vjs-volume-menu-button ' + _PopupButton.prototype.buildCSSClass.call(this) + ' ' + orientationClass;\n\t  };\n\t\n\t  /**\n\t   * Create the VolumeMenuButton popup\n\t   */\n\t\n\t\n\t  VolumeMenuButton.prototype.createPopup = function createPopup() {\n\t    var popup = new _popup2['default'](this.player_, {\n\t      contentElType: 'div'\n\t    });\n\t\n\t    var vb = new _volumeBar2['default'](this.player_, this.options_.volumeBar);\n\t\n\t    popup.addChild(vb);\n\t\n\t    this.menuContent = popup;\n\t    this.volumeBar = vb;\n\t\n\t    this.attachVolumeBarEvents();\n\t\n\t    return popup;\n\t  };\n\t\n\t  /**\n\t   * This gets called when an `VolumeMenuButton` is \"clicked\". See\n\t   * {@link ClickableComponent} for more detailed information on what a click can be.\n\t   *\n\t   * @param {EventTarget~Event} [event]\n\t   *        The `keydown`, `tap`, or `click` event that caused this function to be\n\t   *        called.\n\t   *\n\t   * @listens tap\n\t   * @listens click\n\t   */\n\t\n\t\n\t  VolumeMenuButton.prototype.handleClick = function handleClick(event) {\n\t    _muteToggle2['default'].prototype.handleClick.call(this);\n\t    _PopupButton.prototype.handleClick.call(this);\n\t  };\n\t\n\t  /**\n\t   * Add events listeners to the created `VolumeBar`.\n\t   */\n\t\n\t\n\t  VolumeMenuButton.prototype.attachVolumeBarEvents = function attachVolumeBarEvents() {\n\t    this.menuContent.on(['mousedown', 'touchdown'], Fn.bind(this, this.handleMouseDown));\n\t  };\n\t\n\t  /**\n\t   * Handle the `mousedown` and `touchdown` events on the `VolumeBar`\n\t   *\n\t   * @param {EventTarget~Event} [event]\n\t   *        The `mousedown` or `touchdown` event that caused this to run.\n\t   *\n\t   * @listens mousedown\n\t   * @listens touchdown\n\t   */\n\t\n\t\n\t  VolumeMenuButton.prototype.handleMouseDown = function handleMouseDown(event) {\n\t    this.on(['mousemove', 'touchmove'], Fn.bind(this.volumeBar, this.volumeBar.handleMouseMove));\n\t    this.on(this.el_.ownerDocument, ['mouseup', 'touchend'], this.handleMouseUp);\n\t  };\n\t\n\t  /**\n\t   * Handle the `mouseup` and `touchend` events on the `VolumeBar`\n\t   *\n\t   * @param {EventTarget~Event} [event]\n\t   *        The `mouseup` or `touchend` event that caused this to run.\n\t   *\n\t   * @listens mouseup\n\t   * @listens touchend\n\t   */\n\t\n\t\n\t  VolumeMenuButton.prototype.handleMouseUp = function handleMouseUp(event) {\n\t    this.off(['mousemove', 'touchmove'], Fn.bind(this.volumeBar, this.volumeBar.handleMouseMove));\n\t  };\n\t\n\t  return VolumeMenuButton;\n\t}(_popupButton2['default']);\n\t\n\t/**\n\t * @borrows MuteToggle#update as VolumeMenuButton#volumeUpdate\n\t */\n\t\n\t\n\tVolumeMenuButton.prototype.volumeUpdate = _muteToggle2['default'].prototype.update;\n\t\n\t/**\n\t * The text that should display over the `VolumeMenuButton`s controls. Added for localization.\n\t *\n\t * @type {string}\n\t * @private\n\t */\n\tVolumeMenuButton.prototype.controlText_ = 'Mute';\n\t\n\t_component2['default'].registerComponent('VolumeMenuButton', VolumeMenuButton);\n\texports['default'] = VolumeMenuButton;\n\n\n/***/ },\n/* 79 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\texports.__esModule = true;\n\t\n\tvar _component = __webpack_require__(16);\n\t\n\tvar _component2 = _interopRequireDefault(_component);\n\t\n\tvar _dom = __webpack_require__(9);\n\t\n\tvar Dom = _interopRequireWildcard(_dom);\n\t\n\tvar _fn = __webpack_require__(17);\n\t\n\tvar Fn = _interopRequireWildcard(_fn);\n\t\n\tvar _events = __webpack_require__(8);\n\t\n\tvar Events = _interopRequireWildcard(_events);\n\t\n\tfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj['default'] = obj; return newObj; } }\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /**\n\t                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * @file popup.js\n\t                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                */\n\t\n\t\n\t/**\n\t * The Popup component is used to build pop up controls.\n\t *\n\t * @extends Component\n\t */\n\tvar Popup = function (_Component) {\n\t  _inherits(Popup, _Component);\n\t\n\t  function Popup() {\n\t    _classCallCheck(this, Popup);\n\t\n\t    return _possibleConstructorReturn(this, _Component.apply(this, arguments));\n\t  }\n\t\n\t  /**\n\t   * Add a popup item to the popup\n\t   *\n\t   * @param {Object|string} component\n\t   *        Component or component type to add\n\t   *\n\t   */\n\t  Popup.prototype.addItem = function addItem(component) {\n\t    this.addChild(component);\n\t    component.on('click', Fn.bind(this, function () {\n\t      this.unlockShowing();\n\t    }));\n\t  };\n\t\n\t  /**\n\t   * Create the `PopupButton`s DOM element.\n\t   *\n\t   * @return {Element}\n\t   *         The element that gets created.\n\t   */\n\t\n\t\n\t  Popup.prototype.createEl = function createEl() {\n\t    var contentElType = this.options_.contentElType || 'ul';\n\t\n\t    this.contentEl_ = Dom.createEl(contentElType, {\n\t      className: 'vjs-menu-content'\n\t    });\n\t\n\t    var el = _Component.prototype.createEl.call(this, 'div', {\n\t      append: this.contentEl_,\n\t      className: 'vjs-menu'\n\t    });\n\t\n\t    el.appendChild(this.contentEl_);\n\t\n\t    // Prevent clicks from bubbling up. Needed for Popup Buttons,\n\t    // where a click on the parent is significant\n\t    Events.on(el, 'click', function (event) {\n\t      event.preventDefault();\n\t      event.stopImmediatePropagation();\n\t    });\n\t\n\t    return el;\n\t  };\n\t\n\t  return Popup;\n\t}(_component2['default']);\n\t\n\t_component2['default'].registerComponent('Popup', Popup);\n\texports['default'] = Popup;\n\n\n/***/ },\n/* 80 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\texports.__esModule = true;\n\t\n\tvar _clickableComponent = __webpack_require__(52);\n\t\n\tvar _clickableComponent2 = _interopRequireDefault(_clickableComponent);\n\t\n\tvar _component = __webpack_require__(16);\n\t\n\tvar _component2 = _interopRequireDefault(_component);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /**\n\t                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * @file popup-button.js\n\t                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                */\n\t\n\t\n\t/**\n\t * A button class for use with {@link Popup} controls\n\t *\n\t * @extends ClickableComponent\n\t */\n\tvar PopupButton = function (_ClickableComponent) {\n\t  _inherits(PopupButton, _ClickableComponent);\n\t\n\t  /**\n\t   * Create an instance of this class.\n\t   *\n\t   * @param {Player} player\n\t   *        The `Player` that this class should be attached to.\n\t   *\n\t   * @param {Object} [options]\n\t   *        The key/value store of player options.\n\t   */\n\t  function PopupButton(player) {\n\t    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\t\n\t    _classCallCheck(this, PopupButton);\n\t\n\t    var _this = _possibleConstructorReturn(this, _ClickableComponent.call(this, player, options));\n\t\n\t    _this.update();\n\t    return _this;\n\t  }\n\t\n\t  /**\n\t   * Update the `Popup` that this button is attached to.\n\t   */\n\t\n\t\n\t  PopupButton.prototype.update = function update() {\n\t    var popup = this.createPopup();\n\t\n\t    if (this.popup) {\n\t      this.removeChild(this.popup);\n\t    }\n\t\n\t    this.popup = popup;\n\t    this.addChild(popup);\n\t\n\t    if (this.items && this.items.length === 0) {\n\t      this.hide();\n\t    } else if (this.items && this.items.length > 1) {\n\t      this.show();\n\t    }\n\t  };\n\t\n\t  /**\n\t   * Create a `Popup`. - Override with specific functionality for component\n\t   *\n\t   * @abstract\n\t   */\n\t\n\t\n\t  PopupButton.prototype.createPopup = function createPopup() {};\n\t\n\t  /**\n\t   * Create the `PopupButton`s DOM element.\n\t   *\n\t   * @return {Element}\n\t   *         The element that gets created.\n\t   */\n\t\n\t\n\t  PopupButton.prototype.createEl = function createEl() {\n\t    return _ClickableComponent.prototype.createEl.call(this, 'div', {\n\t      className: this.buildCSSClass()\n\t    });\n\t  };\n\t\n\t  /**\n\t   * Builds the default DOM `className`.\n\t   *\n\t   * @return {string}\n\t   *         The DOM `className` for this object.\n\t   */\n\t\n\t\n\t  PopupButton.prototype.buildCSSClass = function buildCSSClass() {\n\t    var menuButtonClass = 'vjs-menu-button';\n\t\n\t    // If the inline option is passed, we want to use different styles altogether.\n\t    if (this.options_.inline === true) {\n\t      menuButtonClass += '-inline';\n\t    } else {\n\t      menuButtonClass += '-popup';\n\t    }\n\t\n\t    return 'vjs-menu-button ' + menuButtonClass + ' ' + _ClickableComponent.prototype.buildCSSClass.call(this);\n\t  };\n\t\n\t  return PopupButton;\n\t}(_clickableComponent2['default']);\n\t\n\t_component2['default'].registerComponent('PopupButton', PopupButton);\n\texports['default'] = PopupButton;\n\n\n/***/ },\n/* 81 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\texports.__esModule = true;\n\t\n\tvar _button = __webpack_require__(56);\n\t\n\tvar _button2 = _interopRequireDefault(_button);\n\t\n\tvar _component = __webpack_require__(16);\n\t\n\tvar _component2 = _interopRequireDefault(_component);\n\t\n\tvar _dom = __webpack_require__(9);\n\t\n\tvar Dom = _interopRequireWildcard(_dom);\n\t\n\tfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj['default'] = obj; return newObj; } }\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /**\n\t                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * @file mute-toggle.js\n\t                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                */\n\t\n\t\n\t/**\n\t * A button component for muting the audio.\n\t *\n\t * @extends Button\n\t */\n\tvar MuteToggle = function (_Button) {\n\t  _inherits(MuteToggle, _Button);\n\t\n\t  /**\n\t   * Creates an instance of this class.\n\t   *\n\t   * @param {Player} player\n\t   *        The `Player` that this class should be attached to.\n\t   *\n\t   * @param {Object} [options]\n\t   *        The key/value store of player options.\n\t   */\n\t  function MuteToggle(player, options) {\n\t    _classCallCheck(this, MuteToggle);\n\t\n\t    var _this = _possibleConstructorReturn(this, _Button.call(this, player, options));\n\t\n\t    _this.on(player, 'volumechange', _this.update);\n\t\n\t    // hide mute toggle if the current tech doesn't support volume control\n\t    if (player.tech_ && player.tech_.featuresVolumeControl === false) {\n\t      _this.addClass('vjs-hidden');\n\t    }\n\t\n\t    _this.on(player, 'loadstart', function () {\n\t      // We need to update the button to account for a default muted state.\n\t      this.update();\n\t\n\t      if (player.tech_.featuresVolumeControl === false) {\n\t        this.addClass('vjs-hidden');\n\t      } else {\n\t        this.removeClass('vjs-hidden');\n\t      }\n\t    });\n\t    return _this;\n\t  }\n\t\n\t  /**\n\t   * Builds the default DOM `className`.\n\t   *\n\t   * @return {string}\n\t   *         The DOM `className` for this object.\n\t   */\n\t\n\t\n\t  MuteToggle.prototype.buildCSSClass = function buildCSSClass() {\n\t    return 'vjs-mute-control ' + _Button.prototype.buildCSSClass.call(this);\n\t  };\n\t\n\t  /**\n\t   * This gets called when an `MuteToggle` is \"clicked\". See\n\t   * {@link ClickableComponent} for more detailed information on what a click can be.\n\t   *\n\t   * @param {EventTarget~Event} [event]\n\t   *        The `keydown`, `tap`, or `click` event that caused this function to be\n\t   *        called.\n\t   *\n\t   * @listens tap\n\t   * @listens click\n\t   */\n\t\n\t\n\t  MuteToggle.prototype.handleClick = function handleClick(event) {\n\t    this.player_.muted(this.player_.muted() ? false : true);\n\t  };\n\t\n\t  /**\n\t   * Update the state of volume.\n\t   *\n\t   * @param {EventTarget~Event} [event]\n\t   *        The {@link Player#loadstart} event if this function was called through an\n\t   *        event.\n\t   *\n\t   * @listens Player#loadstart\n\t   */\n\t\n\t\n\t  MuteToggle.prototype.update = function update(event) {\n\t    var vol = this.player_.volume();\n\t    var level = 3;\n\t\n\t    if (vol === 0 || this.player_.muted()) {\n\t      level = 0;\n\t    } else if (vol < 0.33) {\n\t      level = 1;\n\t    } else if (vol < 0.67) {\n\t      level = 2;\n\t    }\n\t\n\t    // Don't rewrite the button text if the actual text doesn't change.\n\t    // This causes unnecessary and confusing information for screen reader users.\n\t    // This check is needed because this function gets called every time the volume level is changed.\n\t    var toMute = this.player_.muted() ? 'Unmute' : 'Mute';\n\t\n\t    if (this.controlText() !== toMute) {\n\t      this.controlText(toMute);\n\t    }\n\t\n\t    // TODO improve muted icon classes\n\t    for (var i = 0; i < 4; i++) {\n\t      Dom.removeElClass(this.el_, 'vjs-vol-' + i);\n\t    }\n\t    Dom.addElClass(this.el_, 'vjs-vol-' + level);\n\t  };\n\t\n\t  return MuteToggle;\n\t}(_button2['default']);\n\t\n\t/**\n\t * The text that should display over the `MuteToggle`s controls. Added for localization.\n\t *\n\t * @type {string}\n\t * @private\n\t */\n\t\n\t\n\tMuteToggle.prototype.controlText_ = 'Mute';\n\t\n\t_component2['default'].registerComponent('MuteToggle', MuteToggle);\n\texports['default'] = MuteToggle;\n\n\n/***/ },\n/* 82 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\texports.__esModule = true;\n\t\n\tvar _textTrackButton = __webpack_require__(83);\n\t\n\tvar _textTrackButton2 = _interopRequireDefault(_textTrackButton);\n\t\n\tvar _component = __webpack_require__(16);\n\t\n\tvar _component2 = _interopRequireDefault(_component);\n\t\n\tvar _chaptersTrackMenuItem = __webpack_require__(90);\n\t\n\tvar _chaptersTrackMenuItem2 = _interopRequireDefault(_chaptersTrackMenuItem);\n\t\n\tvar _toTitleCase = __webpack_require__(18);\n\t\n\tvar _toTitleCase2 = _interopRequireDefault(_toTitleCase);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /**\n\t                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * @file chapters-button.js\n\t                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                */\n\t\n\t\n\t/**\n\t * The button component for toggling and selecting chapters\n\t * Chapters act much differently than other text tracks\n\t * Cues are navigation vs. other tracks of alternative languages\n\t *\n\t * @extends TextTrackButton\n\t */\n\tvar ChaptersButton = function (_TextTrackButton) {\n\t  _inherits(ChaptersButton, _TextTrackButton);\n\t\n\t  /**\n\t   * Creates an instance of this class.\n\t   *\n\t   * @param {Player} player\n\t   *        The `Player` that this class should be attached to.\n\t   *\n\t   * @param {Object} [options]\n\t   *        The key/value store of player options.\n\t   *\n\t   * @param {Component~ReadyCallback} [ready]\n\t   *        The function to call when this function is ready.\n\t   */\n\t  function ChaptersButton(player, options, ready) {\n\t    _classCallCheck(this, ChaptersButton);\n\t\n\t    var _this = _possibleConstructorReturn(this, _TextTrackButton.call(this, player, options, ready));\n\t\n\t    _this.el_.setAttribute('aria-label', 'Chapters Menu');\n\t    return _this;\n\t  }\n\t\n\t  /**\n\t   * Builds the default DOM `className`.\n\t   *\n\t   * @return {string}\n\t   *         The DOM `className` for this object.\n\t   */\n\t\n\t\n\t  ChaptersButton.prototype.buildCSSClass = function buildCSSClass() {\n\t    return 'vjs-chapters-button ' + _TextTrackButton.prototype.buildCSSClass.call(this);\n\t  };\n\t\n\t  /**\n\t   * Update the menu based on the current state of its items.\n\t   *\n\t   * @param {EventTarget~Event} [event]\n\t   *        An event that triggered this function to run.\n\t   *\n\t   * @listens TextTrackList#addtrack\n\t   * @listens TextTrackList#removetrack\n\t   * @listens TextTrackList#change\n\t   */\n\t\n\t\n\t  ChaptersButton.prototype.update = function update(event) {\n\t    if (!this.track_ || event && (event.type === 'addtrack' || event.type === 'removetrack')) {\n\t      this.setTrack(this.findChaptersTrack());\n\t    }\n\t    _TextTrackButton.prototype.update.call(this);\n\t  };\n\t\n\t  /**\n\t   * Set the currently selected track for the chapters button.\n\t   *\n\t   * @param {TextTrack} track\n\t   *        The new track to select. Nothing will change if this is the currently selected\n\t   *        track.\n\t   */\n\t\n\t\n\t  ChaptersButton.prototype.setTrack = function setTrack(track) {\n\t    if (this.track_ === track) {\n\t      return;\n\t    }\n\t\n\t    if (!this.updateHandler_) {\n\t      this.updateHandler_ = this.update.bind(this);\n\t    }\n\t\n\t    // here this.track_ refers to the old track instance\n\t    if (this.track_) {\n\t      var remoteTextTrackEl = this.player_.remoteTextTrackEls().getTrackElementByTrack_(this.track_);\n\t\n\t      if (remoteTextTrackEl) {\n\t        remoteTextTrackEl.removeEventListener('load', this.updateHandler_);\n\t      }\n\t\n\t      this.track_ = null;\n\t    }\n\t\n\t    this.track_ = track;\n\t\n\t    // here this.track_ refers to the new track instance\n\t    if (this.track_) {\n\t      this.track_.mode = 'hidden';\n\t\n\t      var _remoteTextTrackEl = this.player_.remoteTextTrackEls().getTrackElementByTrack_(this.track_);\n\t\n\t      if (_remoteTextTrackEl) {\n\t        _remoteTextTrackEl.addEventListener('load', this.updateHandler_);\n\t      }\n\t    }\n\t  };\n\t\n\t  /**\n\t   * Find the track object that is currently in use by this ChaptersButton\n\t   *\n\t   * @return {TextTrack|undefined}\n\t   *         The current track or undefined if none was found.\n\t   */\n\t\n\t\n\t  ChaptersButton.prototype.findChaptersTrack = function findChaptersTrack() {\n\t    var tracks = this.player_.textTracks() || [];\n\t\n\t    for (var i = tracks.length - 1; i >= 0; i--) {\n\t      // We will always choose the last track as our chaptersTrack\n\t      var track = tracks[i];\n\t\n\t      if (track.kind === this.kind_) {\n\t        return track;\n\t      }\n\t    }\n\t  };\n\t\n\t  /**\n\t   * Get the caption for the ChaptersButton based on the track label. This will also\n\t   * use the current tracks localized kind as a fallback if a label does not exist.\n\t   *\n\t   * @return {string}\n\t   *         The tracks current label or the localized track kind.\n\t   */\n\t\n\t\n\t  ChaptersButton.prototype.getMenuCaption = function getMenuCaption() {\n\t    if (this.track_ && this.track_.label) {\n\t      return this.track_.label;\n\t    }\n\t    return this.localize((0, _toTitleCase2['default'])(this.kind_));\n\t  };\n\t\n\t  /**\n\t   * Create menu from chapter track\n\t   *\n\t   * @return {Menu}\n\t   *         New menu for the chapter buttons\n\t   */\n\t\n\t\n\t  ChaptersButton.prototype.createMenu = function createMenu() {\n\t    this.options_.title = this.getMenuCaption();\n\t    return _TextTrackButton.prototype.createMenu.call(this);\n\t  };\n\t\n\t  /**\n\t   * Create a menu item for each text track\n\t   *\n\t   * @return {TextTrackMenuItem[]}\n\t   *         Array of menu items\n\t   */\n\t\n\t\n\t  ChaptersButton.prototype.createItems = function createItems() {\n\t    var items = [];\n\t\n\t    if (!this.track_) {\n\t      return items;\n\t    }\n\t\n\t    var cues = this.track_.cues;\n\t\n\t    if (!cues) {\n\t      return items;\n\t    }\n\t\n\t    for (var i = 0, l = cues.length; i < l; i++) {\n\t      var cue = cues[i];\n\t      var mi = new _chaptersTrackMenuItem2['default'](this.player_, { track: this.track_, cue: cue });\n\t\n\t      items.push(mi);\n\t    }\n\t\n\t    return items;\n\t  };\n\t\n\t  return ChaptersButton;\n\t}(_textTrackButton2['default']);\n\t\n\t/**\n\t * `kind` of TextTrack to look for to associate it with this menu.\n\t *\n\t * @type {string}\n\t * @private\n\t */\n\t\n\t\n\tChaptersButton.prototype.kind_ = 'chapters';\n\t\n\t/**\n\t * The text that should display over the `ChaptersButton`s controls. Added for localization.\n\t *\n\t * @type {string}\n\t * @private\n\t */\n\tChaptersButton.prototype.controlText_ = 'Chapters';\n\t\n\t_component2['default'].registerComponent('ChaptersButton', ChaptersButton);\n\texports['default'] = ChaptersButton;\n\n\n/***/ },\n/* 83 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\texports.__esModule = true;\n\t\n\tvar _trackButton = __webpack_require__(84);\n\t\n\tvar _trackButton2 = _interopRequireDefault(_trackButton);\n\t\n\tvar _component = __webpack_require__(16);\n\t\n\tvar _component2 = _interopRequireDefault(_component);\n\t\n\tvar _textTrackMenuItem = __webpack_require__(87);\n\t\n\tvar _textTrackMenuItem2 = _interopRequireDefault(_textTrackMenuItem);\n\t\n\tvar _offTextTrackMenuItem = __webpack_require__(89);\n\t\n\tvar _offTextTrackMenuItem2 = _interopRequireDefault(_offTextTrackMenuItem);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /**\n\t                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * @file text-track-button.js\n\t                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                */\n\t\n\t\n\t/**\n\t * The base class for buttons that toggle specific text track types (e.g. subtitles)\n\t *\n\t * @extends MenuButton\n\t */\n\tvar TextTrackButton = function (_TrackButton) {\n\t  _inherits(TextTrackButton, _TrackButton);\n\t\n\t  /**\n\t   * Creates an instance of this class.\n\t   *\n\t   * @param {Player} player\n\t   *        The `Player` that this class should be attached to.\n\t   *\n\t   * @param {Object} [options={}]\n\t   *        The key/value store of player options.\n\t   */\n\t  function TextTrackButton(player) {\n\t    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\t\n\t    _classCallCheck(this, TextTrackButton);\n\t\n\t    options.tracks = player.textTracks();\n\t\n\t    return _possibleConstructorReturn(this, _TrackButton.call(this, player, options));\n\t  }\n\t\n\t  /**\n\t   * Create a menu item for each text track\n\t   *\n\t   * @param {TextTrackMenuItem[]} [items=[]]\n\t   *        Existing array of items to use during creation\n\t   *\n\t   * @return {TextTrackMenuItem[]}\n\t   *         Array of menu items that were created\n\t   */\n\t\n\t\n\t  TextTrackButton.prototype.createItems = function createItems() {\n\t    var items = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n\t\n\t    // Add an OFF menu item to turn all tracks off\n\t    items.push(new _offTextTrackMenuItem2['default'](this.player_, { kind: this.kind_ }));\n\t\n\t    var tracks = this.player_.textTracks();\n\t\n\t    if (!tracks) {\n\t      return items;\n\t    }\n\t\n\t    for (var i = 0; i < tracks.length; i++) {\n\t      var track = tracks[i];\n\t\n\t      // only add tracks that are of the appropriate kind and have a label\n\t      if (track.kind === this.kind_) {\n\t        items.push(new _textTrackMenuItem2['default'](this.player_, {\n\t          track: track,\n\t          // MenuItem is selectable\n\t          selectable: true\n\t        }));\n\t      }\n\t    }\n\t\n\t    return items;\n\t  };\n\t\n\t  return TextTrackButton;\n\t}(_trackButton2['default']);\n\t\n\t_component2['default'].registerComponent('TextTrackButton', TextTrackButton);\n\texports['default'] = TextTrackButton;\n\n\n/***/ },\n/* 84 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\texports.__esModule = true;\n\t\n\tvar _menuButton = __webpack_require__(85);\n\t\n\tvar _menuButton2 = _interopRequireDefault(_menuButton);\n\t\n\tvar _component = __webpack_require__(16);\n\t\n\tvar _component2 = _interopRequireDefault(_component);\n\t\n\tvar _fn = __webpack_require__(17);\n\t\n\tvar Fn = _interopRequireWildcard(_fn);\n\t\n\tfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj['default'] = obj; return newObj; } }\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /**\n\t                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * @file track-button.js\n\t                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                */\n\t\n\t\n\t/**\n\t * The base class for buttons that toggle specific  track types (e.g. subtitles).\n\t *\n\t * @extends MenuButton\n\t */\n\tvar TrackButton = function (_MenuButton) {\n\t  _inherits(TrackButton, _MenuButton);\n\t\n\t  /**\n\t   * Creates an instance of this class.\n\t   *\n\t   * @param {Player} player\n\t   *        The `Player` that this class should be attached to.\n\t   *\n\t   * @param {Object} [options]\n\t   *        The key/value store of player options.\n\t   */\n\t  function TrackButton(player, options) {\n\t    _classCallCheck(this, TrackButton);\n\t\n\t    var tracks = options.tracks;\n\t\n\t    var _this = _possibleConstructorReturn(this, _MenuButton.call(this, player, options));\n\t\n\t    if (_this.items.length <= 1) {\n\t      _this.hide();\n\t    }\n\t\n\t    if (!tracks) {\n\t      return _possibleConstructorReturn(_this);\n\t    }\n\t\n\t    var updateHandler = Fn.bind(_this, _this.update);\n\t\n\t    tracks.addEventListener('removetrack', updateHandler);\n\t    tracks.addEventListener('addtrack', updateHandler);\n\t\n\t    _this.player_.on('dispose', function () {\n\t      tracks.removeEventListener('removetrack', updateHandler);\n\t      tracks.removeEventListener('addtrack', updateHandler);\n\t    });\n\t    return _this;\n\t  }\n\t\n\t  return TrackButton;\n\t}(_menuButton2['default']);\n\t\n\t_component2['default'].registerComponent('TrackButton', TrackButton);\n\texports['default'] = TrackButton;\n\n\n/***/ },\n/* 85 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\texports.__esModule = true;\n\t\n\tvar _clickableComponent = __webpack_require__(52);\n\t\n\tvar _clickableComponent2 = _interopRequireDefault(_clickableComponent);\n\t\n\tvar _component = __webpack_require__(16);\n\t\n\tvar _component2 = _interopRequireDefault(_component);\n\t\n\tvar _menu = __webpack_require__(86);\n\t\n\tvar _menu2 = _interopRequireDefault(_menu);\n\t\n\tvar _dom = __webpack_require__(9);\n\t\n\tvar Dom = _interopRequireWildcard(_dom);\n\t\n\tvar _fn = __webpack_require__(17);\n\t\n\tvar Fn = _interopRequireWildcard(_fn);\n\t\n\tvar _toTitleCase = __webpack_require__(18);\n\t\n\tvar _toTitleCase2 = _interopRequireDefault(_toTitleCase);\n\t\n\tfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj['default'] = obj; return newObj; } }\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /**\n\t                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * @file menu-button.js\n\t                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                */\n\t\n\t\n\t/**\n\t * A `MenuButton` class for any popup {@link Menu}.\n\t *\n\t * @extends ClickableComponent\n\t */\n\tvar MenuButton = function (_ClickableComponent) {\n\t  _inherits(MenuButton, _ClickableComponent);\n\t\n\t  /**\n\t   * Creates an instance of this class.\n\t   *\n\t   * @param {Player} player\n\t   *        The `Player` that this class should be attached to.\n\t   *\n\t   * @param {Object} [options={}]\n\t   *        The key/value store of player options.\n\t   */\n\t  function MenuButton(player) {\n\t    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\t\n\t    _classCallCheck(this, MenuButton);\n\t\n\t    var _this = _possibleConstructorReturn(this, _ClickableComponent.call(this, player, options));\n\t\n\t    _this.update();\n\t\n\t    _this.enabled_ = true;\n\t\n\t    _this.el_.setAttribute('aria-haspopup', 'true');\n\t    _this.el_.setAttribute('role', 'menuitem');\n\t    _this.on('keydown', _this.handleSubmenuKeyPress);\n\t    return _this;\n\t  }\n\t\n\t  /**\n\t   * Update the menu based on the current state of its items.\n\t   */\n\t\n\t\n\t  MenuButton.prototype.update = function update() {\n\t    var menu = this.createMenu();\n\t\n\t    if (this.menu) {\n\t      this.removeChild(this.menu);\n\t    }\n\t\n\t    this.menu = menu;\n\t    this.addChild(menu);\n\t\n\t    /**\n\t     * Track the state of the menu button\n\t     *\n\t     * @type {Boolean}\n\t     * @private\n\t     */\n\t    this.buttonPressed_ = false;\n\t    this.el_.setAttribute('aria-expanded', 'false');\n\t\n\t    if (this.items && this.items.length === 0) {\n\t      this.hide();\n\t    } else if (this.items && this.items.length > 1) {\n\t      this.show();\n\t    }\n\t  };\n\t\n\t  /**\n\t   * Create the menu and add all items to it.\n\t   *\n\t   * @return {Menu}\n\t   *         The constructed menu\n\t   */\n\t\n\t\n\t  MenuButton.prototype.createMenu = function createMenu() {\n\t    var menu = new _menu2['default'](this.player_);\n\t\n\t    // Add a title list item to the top\n\t    if (this.options_.title) {\n\t      var title = Dom.createEl('li', {\n\t        className: 'vjs-menu-title',\n\t        innerHTML: (0, _toTitleCase2['default'])(this.options_.title),\n\t        tabIndex: -1\n\t      });\n\t\n\t      menu.children_.unshift(title);\n\t      Dom.insertElFirst(title, menu.contentEl());\n\t    }\n\t\n\t    this.items = this.createItems();\n\t\n\t    if (this.items) {\n\t      // Add menu items to the menu\n\t      for (var i = 0; i < this.items.length; i++) {\n\t        menu.addItem(this.items[i]);\n\t      }\n\t    }\n\t\n\t    return menu;\n\t  };\n\t\n\t  /**\n\t   * Create the list of menu items. Specific to each subclass.\n\t   *\n\t   * @abstract\n\t   */\n\t\n\t\n\t  MenuButton.prototype.createItems = function createItems() {};\n\t\n\t  /**\n\t   * Create the `MenuButtons`s DOM element.\n\t   *\n\t   * @return {Element}\n\t   *         The element that gets created.\n\t   */\n\t\n\t\n\t  MenuButton.prototype.createEl = function createEl() {\n\t    return _ClickableComponent.prototype.createEl.call(this, 'div', {\n\t      className: this.buildCSSClass()\n\t    });\n\t  };\n\t\n\t  /**\n\t   * Builds the default DOM `className`.\n\t   *\n\t   * @return {string}\n\t   *         The DOM `className` for this object.\n\t   */\n\t\n\t\n\t  MenuButton.prototype.buildCSSClass = function buildCSSClass() {\n\t    var menuButtonClass = 'vjs-menu-button';\n\t\n\t    // If the inline option is passed, we want to use different styles altogether.\n\t    if (this.options_.inline === true) {\n\t      menuButtonClass += '-inline';\n\t    } else {\n\t      menuButtonClass += '-popup';\n\t    }\n\t\n\t    return 'vjs-menu-button ' + menuButtonClass + ' ' + _ClickableComponent.prototype.buildCSSClass.call(this);\n\t  };\n\t\n\t  /**\n\t   * Handle a click on a `MenuButton`.\n\t   * See {@link ClickableComponent#handleClick} for instances where this is called.\n\t   *\n\t   * @param {EventTarget~Event} event\n\t   *        The `keydown`, `tap`, or `click` event that caused this function to be\n\t   *        called.\n\t   *\n\t   * @listens tap\n\t   * @listens click\n\t   */\n\t\n\t\n\t  MenuButton.prototype.handleClick = function handleClick(event) {\n\t    // When you click the button it adds focus, which will show the menu.\n\t    // So we'll remove focus when the mouse leaves the button. Focus is needed\n\t    // for tab navigation.\n\t\n\t    this.one(this.menu.contentEl(), 'mouseleave', Fn.bind(this, function (e) {\n\t      this.unpressButton();\n\t      this.el_.blur();\n\t    }));\n\t    if (this.buttonPressed_) {\n\t      this.unpressButton();\n\t    } else {\n\t      this.pressButton();\n\t    }\n\t  };\n\t\n\t  /**\n\t   * Handle tab, escape, down arrow, and up arrow keys for `MenuButton`. See\n\t   * {@link ClickableComponent#handleKeyPress} for instances where this is called.\n\t   *\n\t   * @param {EventTarget~Event} event\n\t   *        The `keydown` event that caused this function to be called.\n\t   *\n\t   * @listens keydown\n\t   */\n\t\n\t\n\t  MenuButton.prototype.handleKeyPress = function handleKeyPress(event) {\n\t\n\t    // Escape (27) key or Tab (9) key unpress the 'button'\n\t    if (event.which === 27 || event.which === 9) {\n\t      if (this.buttonPressed_) {\n\t        this.unpressButton();\n\t      }\n\t      // Don't preventDefault for Tab key - we still want to lose focus\n\t      if (event.which !== 9) {\n\t        event.preventDefault();\n\t      }\n\t      // Up (38) key or Down (40) key press the 'button'\n\t    } else if (event.which === 38 || event.which === 40) {\n\t      if (!this.buttonPressed_) {\n\t        this.pressButton();\n\t        event.preventDefault();\n\t      }\n\t    } else {\n\t      _ClickableComponent.prototype.handleKeyPress.call(this, event);\n\t    }\n\t  };\n\t\n\t  /**\n\t   * Handle a `keydown` event on a sub-menu. The listener for this is added in\n\t   * the constructor.\n\t   *\n\t   * @param {EventTarget~Event} event\n\t   *        Key press event\n\t   *\n\t   * @listens keydown\n\t   */\n\t\n\t\n\t  MenuButton.prototype.handleSubmenuKeyPress = function handleSubmenuKeyPress(event) {\n\t\n\t    // Escape (27) key or Tab (9) key unpress the 'button'\n\t    if (event.which === 27 || event.which === 9) {\n\t      if (this.buttonPressed_) {\n\t        this.unpressButton();\n\t      }\n\t      // Don't preventDefault for Tab key - we still want to lose focus\n\t      if (event.which !== 9) {\n\t        event.preventDefault();\n\t      }\n\t    }\n\t  };\n\t\n\t  /**\n\t   * Put the current `MenuButton` into a pressed state.\n\t   */\n\t\n\t\n\t  MenuButton.prototype.pressButton = function pressButton() {\n\t    if (this.enabled_) {\n\t      this.buttonPressed_ = true;\n\t      this.menu.lockShowing();\n\t      this.el_.setAttribute('aria-expanded', 'true');\n\t      // set the focus into the submenu\n\t      this.menu.focus();\n\t    }\n\t  };\n\t\n\t  /**\n\t   * Take the current `MenuButton` out of a pressed state.\n\t   */\n\t\n\t\n\t  MenuButton.prototype.unpressButton = function unpressButton() {\n\t    if (this.enabled_) {\n\t      this.buttonPressed_ = false;\n\t      this.menu.unlockShowing();\n\t      this.el_.setAttribute('aria-expanded', 'false');\n\t      // Set focus back to this menu button\n\t      this.el_.focus();\n\t    }\n\t  };\n\t\n\t  /**\n\t   * Disable the `MenuButton`. Don't allow it to be clicked.\n\t   *\n\t   * @return {MenuButton}\n\t   *         Returns itself; method can be chained.\n\t   */\n\t\n\t\n\t  MenuButton.prototype.disable = function disable() {\n\t    // Unpress, but don't force focus on this button\n\t    this.buttonPressed_ = false;\n\t    this.menu.unlockShowing();\n\t    this.el_.setAttribute('aria-expanded', 'false');\n\t\n\t    this.enabled_ = false;\n\t\n\t    return _ClickableComponent.prototype.disable.call(this);\n\t  };\n\t\n\t  /**\n\t   * Enable the `MenuButton`. Allow it to be clicked.\n\t   *\n\t   * @return {MenuButton}\n\t   *         Returns itself; method can be chained.\n\t   */\n\t\n\t\n\t  MenuButton.prototype.enable = function enable() {\n\t    this.enabled_ = true;\n\t\n\t    return _ClickableComponent.prototype.enable.call(this);\n\t  };\n\t\n\t  return MenuButton;\n\t}(_clickableComponent2['default']);\n\t\n\t_component2['default'].registerComponent('MenuButton', MenuButton);\n\texports['default'] = MenuButton;\n\n\n/***/ },\n/* 86 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\texports.__esModule = true;\n\t\n\tvar _component = __webpack_require__(16);\n\t\n\tvar _component2 = _interopRequireDefault(_component);\n\t\n\tvar _dom = __webpack_require__(9);\n\t\n\tvar Dom = _interopRequireWildcard(_dom);\n\t\n\tvar _fn = __webpack_require__(17);\n\t\n\tvar Fn = _interopRequireWildcard(_fn);\n\t\n\tvar _events = __webpack_require__(8);\n\t\n\tvar Events = _interopRequireWildcard(_events);\n\t\n\tfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj['default'] = obj; return newObj; } }\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /**\n\t                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * @file menu.js\n\t                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                */\n\t\n\t\n\t/**\n\t * The Menu component is used to build popup menus, including subtitle and\n\t * captions selection menus.\n\t *\n\t * @extends Component\n\t */\n\tvar Menu = function (_Component) {\n\t  _inherits(Menu, _Component);\n\t\n\t  /**\n\t   * Create an instance of this class.\n\t   *\n\t   * @param {Player} player\n\t   *        the player that this component should attach to\n\t   *\n\t   * @param {Object} [options]\n\t   *        Object of option names and values\n\t   *\n\t   */\n\t  function Menu(player, options) {\n\t    _classCallCheck(this, Menu);\n\t\n\t    var _this = _possibleConstructorReturn(this, _Component.call(this, player, options));\n\t\n\t    _this.focusedChild_ = -1;\n\t\n\t    _this.on('keydown', _this.handleKeyPress);\n\t    return _this;\n\t  }\n\t\n\t  /**\n\t   * Add a {@link MenuItem} to the menu.\n\t   *\n\t   * @param {Object|string} component\n\t   *        The name or instance of the `MenuItem` to add.\n\t   *\n\t   */\n\t\n\t\n\t  Menu.prototype.addItem = function addItem(component) {\n\t    this.addChild(component);\n\t    component.on('click', Fn.bind(this, function (event) {\n\t      this.unlockShowing();\n\t      // TODO: Need to set keyboard focus back to the menuButton\n\t    }));\n\t  };\n\t\n\t  /**\n\t   * Create the `Menu`s DOM element.\n\t   *\n\t   * @return {Element}\n\t   *         the element that was created\n\t   */\n\t\n\t\n\t  Menu.prototype.createEl = function createEl() {\n\t    var contentElType = this.options_.contentElType || 'ul';\n\t\n\t    this.contentEl_ = Dom.createEl(contentElType, {\n\t      className: 'vjs-menu-content'\n\t    });\n\t\n\t    this.contentEl_.setAttribute('role', 'menu');\n\t\n\t    var el = _Component.prototype.createEl.call(this, 'div', {\n\t      append: this.contentEl_,\n\t      className: 'vjs-menu'\n\t    });\n\t\n\t    el.setAttribute('role', 'presentation');\n\t    el.appendChild(this.contentEl_);\n\t\n\t    // Prevent clicks from bubbling up. Needed for Menu Buttons,\n\t    // where a click on the parent is significant\n\t    Events.on(el, 'click', function (event) {\n\t      event.preventDefault();\n\t      event.stopImmediatePropagation();\n\t    });\n\t\n\t    return el;\n\t  };\n\t\n\t  /**\n\t   * Handle a `keydown` event on this menu. This listener is added in the constructor.\n\t   *\n\t   * @param {EventTarget~Event} event\n\t   *        A `keydown` event that happened on the menu.\n\t   *\n\t   * @listens keydown\n\t   */\n\t\n\t\n\t  Menu.prototype.handleKeyPress = function handleKeyPress(event) {\n\t    // Left and Down Arrows\n\t    if (event.which === 37 || event.which === 40) {\n\t      event.preventDefault();\n\t      this.stepForward();\n\t\n\t      // Up and Right Arrows\n\t    } else if (event.which === 38 || event.which === 39) {\n\t      event.preventDefault();\n\t      this.stepBack();\n\t    }\n\t  };\n\t\n\t  /**\n\t   * Move to next (lower) menu item for keyboard users.\n\t   */\n\t\n\t\n\t  Menu.prototype.stepForward = function stepForward() {\n\t    var stepChild = 0;\n\t\n\t    if (this.focusedChild_ !== undefined) {\n\t      stepChild = this.focusedChild_ + 1;\n\t    }\n\t    this.focus(stepChild);\n\t  };\n\t\n\t  /**\n\t   * Move to previous (higher) menu item for keyboard users.\n\t   */\n\t\n\t\n\t  Menu.prototype.stepBack = function stepBack() {\n\t    var stepChild = 0;\n\t\n\t    if (this.focusedChild_ !== undefined) {\n\t      stepChild = this.focusedChild_ - 1;\n\t    }\n\t    this.focus(stepChild);\n\t  };\n\t\n\t  /**\n\t   * Set focus on a {@link MenuItem} in the `Menu`.\n\t   *\n\t   * @param {Object|string} [item=0]\n\t   *        Index of child item set focus on.\n\t   */\n\t\n\t\n\t  Menu.prototype.focus = function focus() {\n\t    var item = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n\t\n\t    var children = this.children().slice();\n\t    var haveTitle = children.length && children[0].className && /vjs-menu-title/.test(children[0].className);\n\t\n\t    if (haveTitle) {\n\t      children.shift();\n\t    }\n\t\n\t    if (children.length > 0) {\n\t      if (item < 0) {\n\t        item = 0;\n\t      } else if (item >= children.length) {\n\t        item = children.length - 1;\n\t      }\n\t\n\t      this.focusedChild_ = item;\n\t\n\t      children[item].el_.focus();\n\t    }\n\t  };\n\t\n\t  return Menu;\n\t}(_component2['default']);\n\t\n\t_component2['default'].registerComponent('Menu', Menu);\n\texports['default'] = Menu;\n\n\n/***/ },\n/* 87 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\texports.__esModule = true;\n\t\n\tvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\t\n\tvar _menuItem = __webpack_require__(88);\n\t\n\tvar _menuItem2 = _interopRequireDefault(_menuItem);\n\t\n\tvar _component = __webpack_require__(16);\n\t\n\tvar _component2 = _interopRequireDefault(_component);\n\t\n\tvar _fn = __webpack_require__(17);\n\t\n\tvar Fn = _interopRequireWildcard(_fn);\n\t\n\tvar _window = __webpack_require__(4);\n\t\n\tvar _window2 = _interopRequireDefault(_window);\n\t\n\tvar _document = __webpack_require__(5);\n\t\n\tvar _document2 = _interopRequireDefault(_document);\n\t\n\tfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj['default'] = obj; return newObj; } }\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /**\n\t                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * @file text-track-menu-item.js\n\t                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                */\n\t\n\t\n\t/**\n\t * The specific menu item type for selecting a language within a text track kind\n\t *\n\t * @extends MenuItem\n\t */\n\tvar TextTrackMenuItem = function (_MenuItem) {\n\t  _inherits(TextTrackMenuItem, _MenuItem);\n\t\n\t  /**\n\t   * Creates an instance of this class.\n\t   *\n\t   * @param {Player} player\n\t   *        The `Player` that this class should be attached to.\n\t   *\n\t   * @param {Object} [options]\n\t   *        The key/value store of player options.\n\t   */\n\t  function TextTrackMenuItem(player, options) {\n\t    _classCallCheck(this, TextTrackMenuItem);\n\t\n\t    var track = options.track;\n\t    var tracks = player.textTracks();\n\t\n\t    // Modify options for parent MenuItem class's init.\n\t    options.label = track.label || track.language || 'Unknown';\n\t    options.selected = track['default'] || track.mode === 'showing';\n\t\n\t    var _this = _possibleConstructorReturn(this, _MenuItem.call(this, player, options));\n\t\n\t    _this.track = track;\n\t\n\t    if (tracks) {\n\t      (function () {\n\t        var changeHandler = Fn.bind(_this, _this.handleTracksChange);\n\t\n\t        tracks.addEventListener('change', changeHandler);\n\t        _this.on('dispose', function () {\n\t          tracks.removeEventListener('change', changeHandler);\n\t        });\n\t      })();\n\t    }\n\t\n\t    // iOS7 doesn't dispatch change events to TextTrackLists when an\n\t    // associated track's mode changes. Without something like\n\t    // Object.observe() (also not present on iOS7), it's not\n\t    // possible to detect changes to the mode attribute and polyfill\n\t    // the change event. As a poor substitute, we manually dispatch\n\t    // change events whenever the controls modify the mode.\n\t    if (tracks && tracks.onchange === undefined) {\n\t      (function () {\n\t        var event = void 0;\n\t\n\t        _this.on(['tap', 'click'], function () {\n\t          if (_typeof(_window2['default'].Event) !== 'object') {\n\t            // Android 2.3 throws an Illegal Constructor error for window.Event\n\t            try {\n\t              event = new _window2['default'].Event('change');\n\t            } catch (err) {\n\t              // continue regardless of error\n\t            }\n\t          }\n\t\n\t          if (!event) {\n\t            event = _document2['default'].createEvent('Event');\n\t            event.initEvent('change', true, true);\n\t          }\n\t\n\t          tracks.dispatchEvent(event);\n\t        });\n\t      })();\n\t    }\n\t    return _this;\n\t  }\n\t\n\t  /**\n\t   * This gets called when an `TextTrackMenuItem` is \"clicked\". See\n\t   * {@link ClickableComponent} for more detailed information on what a click can be.\n\t   *\n\t   * @param {EventTarget~Event} event\n\t   *        The `keydown`, `tap`, or `click` event that caused this function to be\n\t   *        called.\n\t   *\n\t   * @listens tap\n\t   * @listens click\n\t   */\n\t\n\t\n\t  TextTrackMenuItem.prototype.handleClick = function handleClick(event) {\n\t    var kind = this.track.kind;\n\t    var tracks = this.player_.textTracks();\n\t\n\t    _MenuItem.prototype.handleClick.call(this, event);\n\t\n\t    if (!tracks) {\n\t      return;\n\t    }\n\t\n\t    for (var i = 0; i < tracks.length; i++) {\n\t      var track = tracks[i];\n\t\n\t      if (track.kind !== kind) {\n\t        continue;\n\t      }\n\t\n\t      if (track === this.track) {\n\t        track.mode = 'showing';\n\t      } else {\n\t        track.mode = 'disabled';\n\t      }\n\t    }\n\t  };\n\t\n\t  /**\n\t   * Handle text track list change\n\t   *\n\t   * @param {EventTarget~Event} event\n\t   *        The `change` event that caused this function to be called.\n\t   *\n\t   * @listens TextTrackList#change\n\t   */\n\t\n\t\n\t  TextTrackMenuItem.prototype.handleTracksChange = function handleTracksChange(event) {\n\t    this.selected(this.track.mode === 'showing');\n\t  };\n\t\n\t  return TextTrackMenuItem;\n\t}(_menuItem2['default']);\n\t\n\t_component2['default'].registerComponent('TextTrackMenuItem', TextTrackMenuItem);\n\texports['default'] = TextTrackMenuItem;\n\n\n/***/ },\n/* 88 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\texports.__esModule = true;\n\t\n\tvar _clickableComponent = __webpack_require__(52);\n\t\n\tvar _clickableComponent2 = _interopRequireDefault(_clickableComponent);\n\t\n\tvar _component = __webpack_require__(16);\n\t\n\tvar _component2 = _interopRequireDefault(_component);\n\t\n\tvar _obj = __webpack_require__(13);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /**\n\t                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * @file menu-item.js\n\t                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                */\n\t\n\t\n\t/**\n\t * The component for a menu item. `<li>`\n\t *\n\t * @extends ClickableComponent\n\t */\n\tvar MenuItem = function (_ClickableComponent) {\n\t  _inherits(MenuItem, _ClickableComponent);\n\t\n\t  /**\n\t   * Creates an instance of the this class.\n\t   *\n\t   * @param {Player} player\n\t   *        The `Player` that this class should be attached to.\n\t   *\n\t   * @param {Object} [options={}]\n\t   *        The key/value store of player options.\n\t   *\n\t   */\n\t  function MenuItem(player, options) {\n\t    _classCallCheck(this, MenuItem);\n\t\n\t    var _this = _possibleConstructorReturn(this, _ClickableComponent.call(this, player, options));\n\t\n\t    _this.selectable = options.selectable;\n\t\n\t    _this.selected(options.selected);\n\t\n\t    if (_this.selectable) {\n\t      // TODO: May need to be either menuitemcheckbox or menuitemradio,\n\t      //       and may need logical grouping of menu items.\n\t      _this.el_.setAttribute('role', 'menuitemcheckbox');\n\t    } else {\n\t      _this.el_.setAttribute('role', 'menuitem');\n\t    }\n\t    return _this;\n\t  }\n\t\n\t  /**\n\t   * Create the `MenuItem's DOM element\n\t   *\n\t   * @param {string} [type=li]\n\t   *        Element's node type, not actually used, always set to `li`.\n\t   *\n\t   * @param {Object} [props={}]\n\t   *        An object of properties that should be set on the element\n\t   *\n\t   * @param {Object} [attrs={}]\n\t   *        An object of attributes that should be set on the element\n\t   *\n\t   * @return {Element}\n\t   *         The element that gets created.\n\t   */\n\t\n\t\n\t  MenuItem.prototype.createEl = function createEl(type, props, attrs) {\n\t    return _ClickableComponent.prototype.createEl.call(this, 'li', (0, _obj.assign)({\n\t      className: 'vjs-menu-item',\n\t      innerHTML: this.localize(this.options_.label),\n\t      tabIndex: -1\n\t    }, props), attrs);\n\t  };\n\t\n\t  /**\n\t   * Any click on a `MenuItem` puts int into the selected state.\n\t   * See {@link ClickableComponent#handleClick} for instances where this is called.\n\t   *\n\t   * @param {EventTarget~Event} event\n\t   *        The `keydown`, `tap`, or `click` event that caused this function to be\n\t   *        called.\n\t   *\n\t   * @listens tap\n\t   * @listens click\n\t   */\n\t\n\t\n\t  MenuItem.prototype.handleClick = function handleClick(event) {\n\t    this.selected(true);\n\t  };\n\t\n\t  /**\n\t   * Set the state for this menu item as selected or not.\n\t   *\n\t   * @param {boolean} selected\n\t   *        if the menu item is selected or not\n\t   */\n\t\n\t\n\t  MenuItem.prototype.selected = function selected(_selected) {\n\t    if (this.selectable) {\n\t      if (_selected) {\n\t        this.addClass('vjs-selected');\n\t        this.el_.setAttribute('aria-checked', 'true');\n\t        // aria-checked isn't fully supported by browsers/screen readers,\n\t        // so indicate selected state to screen reader in the control text.\n\t        this.controlText(', selected');\n\t      } else {\n\t        this.removeClass('vjs-selected');\n\t        this.el_.setAttribute('aria-checked', 'false');\n\t        // Indicate un-selected state to screen reader\n\t        // Note that a space clears out the selected state text\n\t        this.controlText(' ');\n\t      }\n\t    }\n\t  };\n\t\n\t  return MenuItem;\n\t}(_clickableComponent2['default']);\n\t\n\t_component2['default'].registerComponent('MenuItem', MenuItem);\n\texports['default'] = MenuItem;\n\n\n/***/ },\n/* 89 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\texports.__esModule = true;\n\t\n\tvar _textTrackMenuItem = __webpack_require__(87);\n\t\n\tvar _textTrackMenuItem2 = _interopRequireDefault(_textTrackMenuItem);\n\t\n\tvar _component = __webpack_require__(16);\n\t\n\tvar _component2 = _interopRequireDefault(_component);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /**\n\t                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * @file off-text-track-menu-item.js\n\t                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                */\n\t\n\t\n\t/**\n\t * A special menu item for turning of a specific type of text track\n\t *\n\t * @extends TextTrackMenuItem\n\t */\n\tvar OffTextTrackMenuItem = function (_TextTrackMenuItem) {\n\t  _inherits(OffTextTrackMenuItem, _TextTrackMenuItem);\n\t\n\t  /**\n\t   * Creates an instance of this class.\n\t   *\n\t   * @param {Player} player\n\t   *        The `Player` that this class should be attached to.\n\t   *\n\t   * @param {Object} [options]\n\t   *        The key/value store of player options.\n\t   */\n\t  function OffTextTrackMenuItem(player, options) {\n\t    _classCallCheck(this, OffTextTrackMenuItem);\n\t\n\t    // Create pseudo track info\n\t    // Requires options['kind']\n\t    options.track = {\n\t      player: player,\n\t      kind: options.kind,\n\t      label: options.kind + ' off',\n\t      'default': false,\n\t      mode: 'disabled'\n\t    };\n\t\n\t    // MenuItem is selectable\n\t    options.selectable = true;\n\t\n\t    var _this = _possibleConstructorReturn(this, _TextTrackMenuItem.call(this, player, options));\n\t\n\t    _this.selected(true);\n\t    return _this;\n\t  }\n\t\n\t  /**\n\t   * Handle text track change\n\t   *\n\t   * @param {EventTarget~Event} event\n\t   *        The event that caused this function to run\n\t   */\n\t\n\t\n\t  OffTextTrackMenuItem.prototype.handleTracksChange = function handleTracksChange(event) {\n\t    var tracks = this.player().textTracks();\n\t    var selected = true;\n\t\n\t    for (var i = 0, l = tracks.length; i < l; i++) {\n\t      var track = tracks[i];\n\t\n\t      if (track.kind === this.track.kind && track.mode === 'showing') {\n\t        selected = false;\n\t        break;\n\t      }\n\t    }\n\t\n\t    this.selected(selected);\n\t  };\n\t\n\t  return OffTextTrackMenuItem;\n\t}(_textTrackMenuItem2['default']);\n\t\n\t_component2['default'].registerComponent('OffTextTrackMenuItem', OffTextTrackMenuItem);\n\texports['default'] = OffTextTrackMenuItem;\n\n\n/***/ },\n/* 90 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\texports.__esModule = true;\n\t\n\tvar _menuItem = __webpack_require__(88);\n\t\n\tvar _menuItem2 = _interopRequireDefault(_menuItem);\n\t\n\tvar _component = __webpack_require__(16);\n\t\n\tvar _component2 = _interopRequireDefault(_component);\n\t\n\tvar _fn = __webpack_require__(17);\n\t\n\tvar Fn = _interopRequireWildcard(_fn);\n\t\n\tfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj['default'] = obj; return newObj; } }\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /**\n\t                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * @file chapters-track-menu-item.js\n\t                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                */\n\t\n\t\n\t/**\n\t * The chapter track menu item\n\t *\n\t * @extends MenuItem\n\t */\n\tvar ChaptersTrackMenuItem = function (_MenuItem) {\n\t  _inherits(ChaptersTrackMenuItem, _MenuItem);\n\t\n\t  /**\n\t   * Creates an instance of this class.\n\t   *\n\t   * @param {Player} player\n\t   *        The `Player` that this class should be attached to.\n\t   *\n\t   * @param {Object} [options]\n\t   *        The key/value store of player options.\n\t   */\n\t  function ChaptersTrackMenuItem(player, options) {\n\t    _classCallCheck(this, ChaptersTrackMenuItem);\n\t\n\t    var track = options.track;\n\t    var cue = options.cue;\n\t    var currentTime = player.currentTime();\n\t\n\t    // Modify options for parent MenuItem class's init.\n\t    options.selectable = true;\n\t    options.label = cue.text;\n\t    options.selected = cue.startTime <= currentTime && currentTime < cue.endTime;\n\t\n\t    var _this = _possibleConstructorReturn(this, _MenuItem.call(this, player, options));\n\t\n\t    _this.track = track;\n\t    _this.cue = cue;\n\t    track.addEventListener('cuechange', Fn.bind(_this, _this.update));\n\t    return _this;\n\t  }\n\t\n\t  /**\n\t   * This gets called when an `ChaptersTrackMenuItem` is \"clicked\". See\n\t   * {@link ClickableComponent} for more detailed information on what a click can be.\n\t   *\n\t   * @param {EventTarget~Event} [event]\n\t   *        The `keydown`, `tap`, or `click` event that caused this function to be\n\t   *        called.\n\t   *\n\t   * @listens tap\n\t   * @listens click\n\t   */\n\t\n\t\n\t  ChaptersTrackMenuItem.prototype.handleClick = function handleClick(event) {\n\t    _MenuItem.prototype.handleClick.call(this);\n\t    this.player_.currentTime(this.cue.startTime);\n\t    this.update(this.cue.startTime);\n\t  };\n\t\n\t  /**\n\t   * Update chapter menu item\n\t   *\n\t   * @param {EventTarget~Event} [event]\n\t   *        The `cuechange` event that caused this function to run.\n\t   *\n\t   * @listens TextTrack#cuechange\n\t   */\n\t\n\t\n\t  ChaptersTrackMenuItem.prototype.update = function update(event) {\n\t    var cue = this.cue;\n\t    var currentTime = this.player_.currentTime();\n\t\n\t    // vjs.log(currentTime, cue.startTime);\n\t    this.selected(cue.startTime <= currentTime && currentTime < cue.endTime);\n\t  };\n\t\n\t  return ChaptersTrackMenuItem;\n\t}(_menuItem2['default']);\n\t\n\t_component2['default'].registerComponent('ChaptersTrackMenuItem', ChaptersTrackMenuItem);\n\texports['default'] = ChaptersTrackMenuItem;\n\n\n/***/ },\n/* 91 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\texports.__esModule = true;\n\t\n\tvar _textTrackButton = __webpack_require__(83);\n\t\n\tvar _textTrackButton2 = _interopRequireDefault(_textTrackButton);\n\t\n\tvar _component = __webpack_require__(16);\n\t\n\tvar _component2 = _interopRequireDefault(_component);\n\t\n\tvar _fn = __webpack_require__(17);\n\t\n\tvar Fn = _interopRequireWildcard(_fn);\n\t\n\tfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj['default'] = obj; return newObj; } }\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /**\n\t                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * @file descriptions-button.js\n\t                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                */\n\t\n\t\n\t/**\n\t * The button component for toggling and selecting descriptions\n\t *\n\t * @extends TextTrackButton\n\t */\n\tvar DescriptionsButton = function (_TextTrackButton) {\n\t  _inherits(DescriptionsButton, _TextTrackButton);\n\t\n\t  /**\n\t   * Creates an instance of this class.\n\t   *\n\t   * @param {Player} player\n\t   *        The `Player` that this class should be attached to.\n\t   *\n\t   * @param {Object} [options]\n\t   *        The key/value store of player options.\n\t   *\n\t   * @param {Component~ReadyCallback} [ready]\n\t   *        The function to call when this component is ready.\n\t   */\n\t  function DescriptionsButton(player, options, ready) {\n\t    _classCallCheck(this, DescriptionsButton);\n\t\n\t    var _this = _possibleConstructorReturn(this, _TextTrackButton.call(this, player, options, ready));\n\t\n\t    _this.el_.setAttribute('aria-label', 'Descriptions Menu');\n\t\n\t    var tracks = player.textTracks();\n\t\n\t    if (tracks) {\n\t      (function () {\n\t        var changeHandler = Fn.bind(_this, _this.handleTracksChange);\n\t\n\t        tracks.addEventListener('change', changeHandler);\n\t        _this.on('dispose', function () {\n\t          tracks.removeEventListener('change', changeHandler);\n\t        });\n\t      })();\n\t    }\n\t    return _this;\n\t  }\n\t\n\t  /**\n\t   * Handle text track change\n\t   *\n\t   * @param {EventTarget~Event} event\n\t   *        The event that caused this function to run\n\t   *\n\t   * @listens TextTrackList#change\n\t   */\n\t\n\t\n\t  DescriptionsButton.prototype.handleTracksChange = function handleTracksChange(event) {\n\t    var tracks = this.player().textTracks();\n\t    var disabled = false;\n\t\n\t    // Check whether a track of a different kind is showing\n\t    for (var i = 0, l = tracks.length; i < l; i++) {\n\t      var track = tracks[i];\n\t\n\t      if (track.kind !== this.kind_ && track.mode === 'showing') {\n\t        disabled = true;\n\t        break;\n\t      }\n\t    }\n\t\n\t    // If another track is showing, disable this menu button\n\t    if (disabled) {\n\t      this.disable();\n\t    } else {\n\t      this.enable();\n\t    }\n\t  };\n\t\n\t  /**\n\t   * Builds the default DOM `className`.\n\t   *\n\t   * @return {string}\n\t   *         The DOM `className` for this object.\n\t   */\n\t\n\t\n\t  DescriptionsButton.prototype.buildCSSClass = function buildCSSClass() {\n\t    return 'vjs-descriptions-button ' + _TextTrackButton.prototype.buildCSSClass.call(this);\n\t  };\n\t\n\t  return DescriptionsButton;\n\t}(_textTrackButton2['default']);\n\t\n\t/**\n\t * `kind` of TextTrack to look for to associate it with this menu.\n\t *\n\t * @type {string}\n\t * @private\n\t */\n\t\n\t\n\tDescriptionsButton.prototype.kind_ = 'descriptions';\n\t\n\t/**\n\t * The text that should display over the `DescriptionsButton`s controls. Added for localization.\n\t *\n\t * @type {string}\n\t * @private\n\t */\n\tDescriptionsButton.prototype.controlText_ = 'Descriptions';\n\t\n\t_component2['default'].registerComponent('DescriptionsButton', DescriptionsButton);\n\texports['default'] = DescriptionsButton;\n\n\n/***/ },\n/* 92 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\texports.__esModule = true;\n\t\n\tvar _textTrackButton = __webpack_require__(83);\n\t\n\tvar _textTrackButton2 = _interopRequireDefault(_textTrackButton);\n\t\n\tvar _component = __webpack_require__(16);\n\t\n\tvar _component2 = _interopRequireDefault(_component);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /**\n\t                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * @file subtitles-button.js\n\t                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                */\n\t\n\t\n\t/**\n\t * The button component for toggling and selecting subtitles\n\t *\n\t * @extends TextTrackButton\n\t */\n\tvar SubtitlesButton = function (_TextTrackButton) {\n\t  _inherits(SubtitlesButton, _TextTrackButton);\n\t\n\t  /**\n\t   * Creates an instance of this class.\n\t   *\n\t   * @param {Player} player\n\t   *        The `Player` that this class should be attached to.\n\t   *\n\t   * @param {Object} [options]\n\t   *        The key/value store of player options.\n\t   *\n\t   * @param {Component~ReadyCallback} [ready]\n\t   *        The function to call when this component is ready.\n\t   */\n\t  function SubtitlesButton(player, options, ready) {\n\t    _classCallCheck(this, SubtitlesButton);\n\t\n\t    var _this = _possibleConstructorReturn(this, _TextTrackButton.call(this, player, options, ready));\n\t\n\t    _this.el_.setAttribute('aria-label', 'Subtitles Menu');\n\t    return _this;\n\t  }\n\t\n\t  /**\n\t   * Builds the default DOM `className`.\n\t   *\n\t   * @return {string}\n\t   *         The DOM `className` for this object.\n\t   */\n\t\n\t\n\t  SubtitlesButton.prototype.buildCSSClass = function buildCSSClass() {\n\t    return 'vjs-subtitles-button ' + _TextTrackButton.prototype.buildCSSClass.call(this);\n\t  };\n\t\n\t  return SubtitlesButton;\n\t}(_textTrackButton2['default']);\n\t\n\t/**\n\t * `kind` of TextTrack to look for to associate it with this menu.\n\t *\n\t * @type {string}\n\t * @private\n\t */\n\t\n\t\n\tSubtitlesButton.prototype.kind_ = 'subtitles';\n\t\n\t/**\n\t * The text that should display over the `SubtitlesButton`s controls. Added for localization.\n\t *\n\t * @type {string}\n\t * @private\n\t */\n\tSubtitlesButton.prototype.controlText_ = 'Subtitles';\n\t\n\t_component2['default'].registerComponent('SubtitlesButton', SubtitlesButton);\n\texports['default'] = SubtitlesButton;\n\n\n/***/ },\n/* 93 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\texports.__esModule = true;\n\t\n\tvar _textTrackButton = __webpack_require__(83);\n\t\n\tvar _textTrackButton2 = _interopRequireDefault(_textTrackButton);\n\t\n\tvar _component = __webpack_require__(16);\n\t\n\tvar _component2 = _interopRequireDefault(_component);\n\t\n\tvar _captionSettingsMenuItem = __webpack_require__(94);\n\t\n\tvar _captionSettingsMenuItem2 = _interopRequireDefault(_captionSettingsMenuItem);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /**\n\t                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * @file captions-button.js\n\t                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                */\n\t\n\t\n\t/**\n\t * The button component for toggling and selecting captions\n\t *\n\t * @extends TextTrackButton\n\t */\n\tvar CaptionsButton = function (_TextTrackButton) {\n\t  _inherits(CaptionsButton, _TextTrackButton);\n\t\n\t  /**\n\t   * Creates an instance of this class.\n\t   *\n\t   * @param {Player} player\n\t   *        The `Player` that this class should be attached to.\n\t   *\n\t   * @param {Object} [options]\n\t   *        The key/value store of player options.\n\t   *\n\t   * @param {Component~ReadyCallback} [ready]\n\t   *        The function to call when this component is ready.\n\t   */\n\t  function CaptionsButton(player, options, ready) {\n\t    _classCallCheck(this, CaptionsButton);\n\t\n\t    var _this = _possibleConstructorReturn(this, _TextTrackButton.call(this, player, options, ready));\n\t\n\t    _this.el_.setAttribute('aria-label', 'Captions Menu');\n\t    return _this;\n\t  }\n\t\n\t  /**\n\t   * Builds the default DOM `className`.\n\t   *\n\t   * @return {string}\n\t   *         The DOM `className` for this object.\n\t   */\n\t\n\t\n\t  CaptionsButton.prototype.buildCSSClass = function buildCSSClass() {\n\t    return 'vjs-captions-button ' + _TextTrackButton.prototype.buildCSSClass.call(this);\n\t  };\n\t\n\t  /**\n\t   * Update caption menu items\n\t   *\n\t   * @param {EventTarget~Event} [event]\n\t   *        The `addtrack` or `removetrack` event that caused this function to be\n\t   *        called.\n\t   *\n\t   * @listens TextTrackList#addtrack\n\t   * @listens TextTrackList#removetrack\n\t   */\n\t\n\t\n\t  CaptionsButton.prototype.update = function update(event) {\n\t    var threshold = 2;\n\t\n\t    _TextTrackButton.prototype.update.call(this);\n\t\n\t    // if native, then threshold is 1 because no settings button\n\t    if (this.player().tech_ && this.player().tech_.featuresNativeTextTracks) {\n\t      threshold = 1;\n\t    }\n\t\n\t    if (this.items && this.items.length > threshold) {\n\t      this.show();\n\t    } else {\n\t      this.hide();\n\t    }\n\t  };\n\t\n\t  /**\n\t   * Create caption menu items\n\t   *\n\t   * @return {CaptionSettingsMenuItem[]}\n\t   *         The array of current menu items.\n\t   */\n\t\n\t\n\t  CaptionsButton.prototype.createItems = function createItems() {\n\t    var items = [];\n\t\n\t    if (!(this.player().tech_ && this.player().tech_.featuresNativeTextTracks)) {\n\t      items.push(new _captionSettingsMenuItem2['default'](this.player_, { kind: this.kind_ }));\n\t    }\n\t\n\t    return _TextTrackButton.prototype.createItems.call(this, items);\n\t  };\n\t\n\t  return CaptionsButton;\n\t}(_textTrackButton2['default']);\n\t\n\t/**\n\t * `kind` of TextTrack to look for to associate it with this menu.\n\t *\n\t * @type {string}\n\t * @private\n\t */\n\t\n\t\n\tCaptionsButton.prototype.kind_ = 'captions';\n\t\n\t/**\n\t * The text that should display over the `CaptionsButton`s controls. Added for localization.\n\t *\n\t * @type {string}\n\t * @private\n\t */\n\tCaptionsButton.prototype.controlText_ = 'Captions';\n\t\n\t_component2['default'].registerComponent('CaptionsButton', CaptionsButton);\n\texports['default'] = CaptionsButton;\n\n\n/***/ },\n/* 94 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\texports.__esModule = true;\n\t\n\tvar _textTrackMenuItem = __webpack_require__(87);\n\t\n\tvar _textTrackMenuItem2 = _interopRequireDefault(_textTrackMenuItem);\n\t\n\tvar _component = __webpack_require__(16);\n\t\n\tvar _component2 = _interopRequireDefault(_component);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /**\n\t                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * @file caption-settings-menu-item.js\n\t                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                */\n\t\n\t\n\t/**\n\t * The menu item for caption track settings menu\n\t *\n\t * @extends TextTrackMenuItem\n\t */\n\tvar CaptionSettingsMenuItem = function (_TextTrackMenuItem) {\n\t  _inherits(CaptionSettingsMenuItem, _TextTrackMenuItem);\n\t\n\t  /**\n\t   * Creates an instance of this class.\n\t   *\n\t   * @param {Player} player\n\t   *        The `Player` that this class should be attached to.\n\t   *\n\t   * @param {Object} [options]\n\t   *        The key/value store of player options.\n\t   */\n\t  function CaptionSettingsMenuItem(player, options) {\n\t    _classCallCheck(this, CaptionSettingsMenuItem);\n\t\n\t    options.track = {\n\t      player: player,\n\t      kind: options.kind,\n\t      label: options.kind + ' settings',\n\t      selectable: false,\n\t      'default': false,\n\t      mode: 'disabled'\n\t    };\n\t\n\t    // CaptionSettingsMenuItem has no concept of 'selected'\n\t    options.selectable = false;\n\t\n\t    var _this = _possibleConstructorReturn(this, _TextTrackMenuItem.call(this, player, options));\n\t\n\t    _this.addClass('vjs-texttrack-settings');\n\t    _this.controlText(', opens ' + options.kind + ' settings dialog');\n\t    return _this;\n\t  }\n\t\n\t  /**\n\t   * This gets called when an `CaptionSettingsMenuItem` is \"clicked\". See\n\t   * {@link ClickableComponent} for more detailed information on what a click can be.\n\t   *\n\t   * @param {EventTarget~Event} [event]\n\t   *        The `keydown`, `tap`, or `click` event that caused this function to be\n\t   *        called.\n\t   *\n\t   * @listens tap\n\t   * @listens click\n\t   */\n\t\n\t\n\t  CaptionSettingsMenuItem.prototype.handleClick = function handleClick(event) {\n\t    this.player().getChild('textTrackSettings').show();\n\t    this.player().getChild('textTrackSettings').el_.focus();\n\t  };\n\t\n\t  return CaptionSettingsMenuItem;\n\t}(_textTrackMenuItem2['default']);\n\t\n\t_component2['default'].registerComponent('CaptionSettingsMenuItem', CaptionSettingsMenuItem);\n\texports['default'] = CaptionSettingsMenuItem;\n\n\n/***/ },\n/* 95 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\texports.__esModule = true;\n\t\n\tvar _trackButton = __webpack_require__(84);\n\t\n\tvar _trackButton2 = _interopRequireDefault(_trackButton);\n\t\n\tvar _component = __webpack_require__(16);\n\t\n\tvar _component2 = _interopRequireDefault(_component);\n\t\n\tvar _audioTrackMenuItem = __webpack_require__(96);\n\t\n\tvar _audioTrackMenuItem2 = _interopRequireDefault(_audioTrackMenuItem);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /**\n\t                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * @file audio-track-button.js\n\t                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                */\n\t\n\t\n\t/**\n\t * The base class for buttons that toggle specific {@link AudioTrack} types.\n\t *\n\t * @extends TrackButton\n\t */\n\tvar AudioTrackButton = function (_TrackButton) {\n\t  _inherits(AudioTrackButton, _TrackButton);\n\t\n\t  /**\n\t   * Creates an instance of this class.\n\t   *\n\t   * @param {Player} player\n\t   *        The `Player` that this class should be attached to.\n\t   *\n\t   * @param {Object} [options={}]\n\t   *        The key/value store of player options.\n\t   */\n\t  function AudioTrackButton(player) {\n\t    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\t\n\t    _classCallCheck(this, AudioTrackButton);\n\t\n\t    options.tracks = player.audioTracks && player.audioTracks();\n\t\n\t    var _this = _possibleConstructorReturn(this, _TrackButton.call(this, player, options));\n\t\n\t    _this.el_.setAttribute('aria-label', 'Audio Menu');\n\t    return _this;\n\t  }\n\t\n\t  /**\n\t   * Builds the default DOM `className`.\n\t   *\n\t   * @return {string}\n\t   *         The DOM `className` for this object.\n\t   */\n\t\n\t\n\t  AudioTrackButton.prototype.buildCSSClass = function buildCSSClass() {\n\t    return 'vjs-audio-button ' + _TrackButton.prototype.buildCSSClass.call(this);\n\t  };\n\t\n\t  /**\n\t   * Create a menu item for each audio track\n\t   *\n\t   * @param {AudioTrackMenuItem[]} [items=[]]\n\t   *        An array of existing menu items to use.\n\t   *\n\t   * @return {AudioTrackMenuItem[]}\n\t   *         An array of menu items\n\t   */\n\t\n\t\n\t  AudioTrackButton.prototype.createItems = function createItems() {\n\t    var items = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n\t\n\t    var tracks = this.player_.audioTracks && this.player_.audioTracks();\n\t\n\t    if (!tracks) {\n\t      return items;\n\t    }\n\t\n\t    for (var i = 0; i < tracks.length; i++) {\n\t      var track = tracks[i];\n\t\n\t      items.push(new _audioTrackMenuItem2['default'](this.player_, {\n\t        track: track,\n\t        // MenuItem is selectable\n\t        selectable: true\n\t      }));\n\t    }\n\t\n\t    return items;\n\t  };\n\t\n\t  return AudioTrackButton;\n\t}(_trackButton2['default']);\n\t\n\t/**\n\t * The text that should display over the `AudioTrackButton`s controls. Added for localization.\n\t *\n\t * @type {string}\n\t * @private\n\t */\n\t\n\t\n\tAudioTrackButton.prototype.controlText_ = 'Audio Track';\n\t_component2['default'].registerComponent('AudioTrackButton', AudioTrackButton);\n\texports['default'] = AudioTrackButton;\n\n\n/***/ },\n/* 96 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\texports.__esModule = true;\n\t\n\tvar _menuItem = __webpack_require__(88);\n\t\n\tvar _menuItem2 = _interopRequireDefault(_menuItem);\n\t\n\tvar _component = __webpack_require__(16);\n\t\n\tvar _component2 = _interopRequireDefault(_component);\n\t\n\tvar _fn = __webpack_require__(17);\n\t\n\tvar Fn = _interopRequireWildcard(_fn);\n\t\n\tfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj['default'] = obj; return newObj; } }\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /**\n\t                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * @file audio-track-menu-item.js\n\t                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                */\n\t\n\t\n\t/**\n\t * An {@link AudioTrack} {@link MenuItem}\n\t *\n\t * @extends MenuItem\n\t */\n\tvar AudioTrackMenuItem = function (_MenuItem) {\n\t  _inherits(AudioTrackMenuItem, _MenuItem);\n\t\n\t  /**\n\t   * Creates an instance of this class.\n\t   *\n\t   * @param {Player} player\n\t   *        The `Player` that this class should be attached to.\n\t   *\n\t   * @param {Object} [options]\n\t   *        The key/value store of player options.\n\t   */\n\t  function AudioTrackMenuItem(player, options) {\n\t    _classCallCheck(this, AudioTrackMenuItem);\n\t\n\t    var track = options.track;\n\t    var tracks = player.audioTracks();\n\t\n\t    // Modify options for parent MenuItem class's init.\n\t    options.label = track.label || track.language || 'Unknown';\n\t    options.selected = track.enabled;\n\t\n\t    var _this = _possibleConstructorReturn(this, _MenuItem.call(this, player, options));\n\t\n\t    _this.track = track;\n\t\n\t    if (tracks) {\n\t      (function () {\n\t        var changeHandler = Fn.bind(_this, _this.handleTracksChange);\n\t\n\t        tracks.addEventListener('change', changeHandler);\n\t        _this.on('dispose', function () {\n\t          tracks.removeEventListener('change', changeHandler);\n\t        });\n\t      })();\n\t    }\n\t    return _this;\n\t  }\n\t\n\t  /**\n\t   * This gets called when an `AudioTrackMenuItem is \"clicked\". See {@link ClickableComponent}\n\t   * for more detailed information on what a click can be.\n\t   *\n\t   * @param {EventTarget~Event} [event]\n\t   *        The `keydown`, `tap`, or `click` event that caused this function to be\n\t   *        called.\n\t   *\n\t   * @listens tap\n\t   * @listens click\n\t   */\n\t\n\t\n\t  AudioTrackMenuItem.prototype.handleClick = function handleClick(event) {\n\t    var tracks = this.player_.audioTracks();\n\t\n\t    _MenuItem.prototype.handleClick.call(this, event);\n\t\n\t    if (!tracks) {\n\t      return;\n\t    }\n\t\n\t    for (var i = 0; i < tracks.length; i++) {\n\t      var track = tracks[i];\n\t\n\t      track.enabled = track === this.track;\n\t    }\n\t  };\n\t\n\t  /**\n\t   * Handle any {@link AudioTrack} change.\n\t   *\n\t   * @param {EventTarget~Event} [event]\n\t   *        The {@link AudioTrackList#change} event that caused this to run.\n\t   *\n\t   * @listens AudioTrackList#change\n\t   */\n\t\n\t\n\t  AudioTrackMenuItem.prototype.handleTracksChange = function handleTracksChange(event) {\n\t    this.selected(this.track.enabled);\n\t  };\n\t\n\t  return AudioTrackMenuItem;\n\t}(_menuItem2['default']);\n\t\n\t_component2['default'].registerComponent('AudioTrackMenuItem', AudioTrackMenuItem);\n\texports['default'] = AudioTrackMenuItem;\n\n\n/***/ },\n/* 97 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\texports.__esModule = true;\n\t\n\tvar _menuButton = __webpack_require__(85);\n\t\n\tvar _menuButton2 = _interopRequireDefault(_menuButton);\n\t\n\tvar _menu = __webpack_require__(86);\n\t\n\tvar _menu2 = _interopRequireDefault(_menu);\n\t\n\tvar _playbackRateMenuItem = __webpack_require__(98);\n\t\n\tvar _playbackRateMenuItem2 = _interopRequireDefault(_playbackRateMenuItem);\n\t\n\tvar _component = __webpack_require__(16);\n\t\n\tvar _component2 = _interopRequireDefault(_component);\n\t\n\tvar _dom = __webpack_require__(9);\n\t\n\tvar Dom = _interopRequireWildcard(_dom);\n\t\n\tfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj['default'] = obj; return newObj; } }\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /**\n\t                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * @file playback-rate-menu-button.js\n\t                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                */\n\t\n\t\n\t/**\n\t * The component for controlling the playback rate.\n\t *\n\t * @extends MenuButton\n\t */\n\tvar PlaybackRateMenuButton = function (_MenuButton) {\n\t  _inherits(PlaybackRateMenuButton, _MenuButton);\n\t\n\t  /**\n\t   * Creates an instance of this class.\n\t   *\n\t   * @param {Player} player\n\t   *        The `Player` that this class should be attached to.\n\t   *\n\t   * @param {Object} [options]\n\t   *        The key/value store of player options.\n\t   */\n\t  function PlaybackRateMenuButton(player, options) {\n\t    _classCallCheck(this, PlaybackRateMenuButton);\n\t\n\t    var _this = _possibleConstructorReturn(this, _MenuButton.call(this, player, options));\n\t\n\t    _this.updateVisibility();\n\t    _this.updateLabel();\n\t\n\t    _this.on(player, 'loadstart', _this.updateVisibility);\n\t    _this.on(player, 'ratechange', _this.updateLabel);\n\t    return _this;\n\t  }\n\t\n\t  /**\n\t   * Create the `Component`'s DOM element\n\t   *\n\t   * @return {Element}\n\t   *         The element that was created.\n\t   */\n\t\n\t\n\t  PlaybackRateMenuButton.prototype.createEl = function createEl() {\n\t    var el = _MenuButton.prototype.createEl.call(this);\n\t\n\t    this.labelEl_ = Dom.createEl('div', {\n\t      className: 'vjs-playback-rate-value',\n\t      innerHTML: 1.0\n\t    });\n\t\n\t    el.appendChild(this.labelEl_);\n\t\n\t    return el;\n\t  };\n\t\n\t  /**\n\t   * Builds the default DOM `className`.\n\t   *\n\t   * @return {string}\n\t   *         The DOM `className` for this object.\n\t   */\n\t\n\t\n\t  PlaybackRateMenuButton.prototype.buildCSSClass = function buildCSSClass() {\n\t    return 'vjs-playback-rate ' + _MenuButton.prototype.buildCSSClass.call(this);\n\t  };\n\t\n\t  /**\n\t   * Create the playback rate menu\n\t   *\n\t   * @return {Menu}\n\t   *         Menu object populated with {@link PlaybackRateMenuItem}s\n\t   */\n\t\n\t\n\t  PlaybackRateMenuButton.prototype.createMenu = function createMenu() {\n\t    var menu = new _menu2['default'](this.player());\n\t    var rates = this.playbackRates();\n\t\n\t    if (rates) {\n\t      for (var i = rates.length - 1; i >= 0; i--) {\n\t        menu.addChild(new _playbackRateMenuItem2['default'](this.player(), { rate: rates[i] + 'x' }));\n\t      }\n\t    }\n\t\n\t    return menu;\n\t  };\n\t\n\t  /**\n\t   * Updates ARIA accessibility attributes\n\t   */\n\t\n\t\n\t  PlaybackRateMenuButton.prototype.updateARIAAttributes = function updateARIAAttributes() {\n\t    // Current playback rate\n\t    this.el().setAttribute('aria-valuenow', this.player().playbackRate());\n\t  };\n\t\n\t  /**\n\t   * This gets called when an `PlaybackRateMenuButton` is \"clicked\". See\n\t   * {@link ClickableComponent} for more detailed information on what a click can be.\n\t   *\n\t   * @param {EventTarget~Event} [event]\n\t   *        The `keydown`, `tap`, or `click` event that caused this function to be\n\t   *        called.\n\t   *\n\t   * @listens tap\n\t   * @listens click\n\t   */\n\t\n\t\n\t  PlaybackRateMenuButton.prototype.handleClick = function handleClick(event) {\n\t    // select next rate option\n\t    var currentRate = this.player().playbackRate();\n\t    var rates = this.playbackRates();\n\t\n\t    // this will select first one if the last one currently selected\n\t    var newRate = rates[0];\n\t\n\t    for (var i = 0; i < rates.length; i++) {\n\t      if (rates[i] > currentRate) {\n\t        newRate = rates[i];\n\t        break;\n\t      }\n\t    }\n\t    this.player().playbackRate(newRate);\n\t  };\n\t\n\t  /**\n\t   * Get possible playback rates\n\t   *\n\t   * @return {Array}\n\t   *         All possible playback rates\n\t   */\n\t\n\t\n\t  PlaybackRateMenuButton.prototype.playbackRates = function playbackRates() {\n\t    return this.options_.playbackRates || this.options_.playerOptions && this.options_.playerOptions.playbackRates;\n\t  };\n\t\n\t  /**\n\t   * Get whether playback rates is supported by the tech\n\t   * and an array of playback rates exists\n\t   *\n\t   * @return {boolean}\n\t   *         Whether changing playback rate is supported\n\t   */\n\t\n\t\n\t  PlaybackRateMenuButton.prototype.playbackRateSupported = function playbackRateSupported() {\n\t    return this.player().tech_ && this.player().tech_.featuresPlaybackRate && this.playbackRates() && this.playbackRates().length > 0;\n\t  };\n\t\n\t  /**\n\t   * Hide playback rate controls when they're no playback rate options to select\n\t   *\n\t   * @param {EventTarget~Event} [event]\n\t   *        The event that caused this function to run.\n\t   *\n\t   * @listens Player#loadstart\n\t   */\n\t\n\t\n\t  PlaybackRateMenuButton.prototype.updateVisibility = function updateVisibility(event) {\n\t    if (this.playbackRateSupported()) {\n\t      this.removeClass('vjs-hidden');\n\t    } else {\n\t      this.addClass('vjs-hidden');\n\t    }\n\t  };\n\t\n\t  /**\n\t   * Update button label when rate changed\n\t   *\n\t   * @param {EventTarget~Event} [event]\n\t   *        The event that caused this function to run.\n\t   *\n\t   * @listens Player#ratechange\n\t   */\n\t\n\t\n\t  PlaybackRateMenuButton.prototype.updateLabel = function updateLabel(event) {\n\t    if (this.playbackRateSupported()) {\n\t      this.labelEl_.innerHTML = this.player().playbackRate() + 'x';\n\t    }\n\t  };\n\t\n\t  return PlaybackRateMenuButton;\n\t}(_menuButton2['default']);\n\t\n\t/**\n\t * The text that should display over the `FullscreenToggle`s controls. Added for localization.\n\t *\n\t * @type {string}\n\t * @private\n\t */\n\t\n\t\n\tPlaybackRateMenuButton.prototype.controlText_ = 'Playback Rate';\n\t\n\t_component2['default'].registerComponent('PlaybackRateMenuButton', PlaybackRateMenuButton);\n\texports['default'] = PlaybackRateMenuButton;\n\n\n/***/ },\n/* 98 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\texports.__esModule = true;\n\t\n\tvar _menuItem = __webpack_require__(88);\n\t\n\tvar _menuItem2 = _interopRequireDefault(_menuItem);\n\t\n\tvar _component = __webpack_require__(16);\n\t\n\tvar _component2 = _interopRequireDefault(_component);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /**\n\t                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * @file playback-rate-menu-item.js\n\t                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                */\n\t\n\t\n\t/**\n\t * The specific menu item type for selecting a playback rate.\n\t *\n\t * @extends MenuItem\n\t */\n\tvar PlaybackRateMenuItem = function (_MenuItem) {\n\t  _inherits(PlaybackRateMenuItem, _MenuItem);\n\t\n\t  /**\n\t   * Creates an instance of this class.\n\t   *\n\t   * @param {Player} player\n\t   *        The `Player` that this class should be attached to.\n\t   *\n\t   * @param {Object} [options]\n\t   *        The key/value store of player options.\n\t   */\n\t  function PlaybackRateMenuItem(player, options) {\n\t    _classCallCheck(this, PlaybackRateMenuItem);\n\t\n\t    var label = options.rate;\n\t    var rate = parseFloat(label, 10);\n\t\n\t    // Modify options for parent MenuItem class's init.\n\t    options.label = label;\n\t    options.selected = rate === 1;\n\t\n\t    var _this = _possibleConstructorReturn(this, _MenuItem.call(this, player, options));\n\t\n\t    _this.label = label;\n\t    _this.rate = rate;\n\t\n\t    _this.on(player, 'ratechange', _this.update);\n\t    return _this;\n\t  }\n\t\n\t  /**\n\t   * This gets called when an `PlaybackRateMenuItem` is \"clicked\". See\n\t   * {@link ClickableComponent} for more detailed information on what a click can be.\n\t   *\n\t   * @param {EventTarget~Event} [event]\n\t   *        The `keydown`, `tap`, or `click` event that caused this function to be\n\t   *        called.\n\t   *\n\t   * @listens tap\n\t   * @listens click\n\t   */\n\t\n\t\n\t  PlaybackRateMenuItem.prototype.handleClick = function handleClick(event) {\n\t    _MenuItem.prototype.handleClick.call(this);\n\t    this.player().playbackRate(this.rate);\n\t  };\n\t\n\t  /**\n\t   * Update the PlaybackRateMenuItem when the playbackrate changes.\n\t   *\n\t   * @param {EventTarget~Event} [event]\n\t   *        The `ratechange` event that caused this function to run.\n\t   *\n\t   * @listens Player#ratechange\n\t   */\n\t\n\t\n\t  PlaybackRateMenuItem.prototype.update = function update(event) {\n\t    this.selected(this.player().playbackRate() === this.rate);\n\t  };\n\t\n\t  return PlaybackRateMenuItem;\n\t}(_menuItem2['default']);\n\t\n\t/**\n\t * The text that should display over the `PlaybackRateMenuItem`s controls. Added for localization.\n\t *\n\t * @type {string}\n\t * @private\n\t */\n\t\n\t\n\tPlaybackRateMenuItem.prototype.contentElType = 'button';\n\t\n\t_component2['default'].registerComponent('PlaybackRateMenuItem', PlaybackRateMenuItem);\n\texports['default'] = PlaybackRateMenuItem;\n\n\n/***/ },\n/* 99 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\texports.__esModule = true;\n\t\n\tvar _spacer = __webpack_require__(100);\n\t\n\tvar _spacer2 = _interopRequireDefault(_spacer);\n\t\n\tvar _component = __webpack_require__(16);\n\t\n\tvar _component2 = _interopRequireDefault(_component);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /**\n\t                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * @file custom-control-spacer.js\n\t                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                */\n\t\n\t\n\t/**\n\t * Spacer specifically meant to be used as an insertion point for new plugins, etc.\n\t *\n\t * @extends Spacer\n\t */\n\tvar CustomControlSpacer = function (_Spacer) {\n\t  _inherits(CustomControlSpacer, _Spacer);\n\t\n\t  function CustomControlSpacer() {\n\t    _classCallCheck(this, CustomControlSpacer);\n\t\n\t    return _possibleConstructorReturn(this, _Spacer.apply(this, arguments));\n\t  }\n\t\n\t  /**\n\t   * Builds the default DOM `className`.\n\t   *\n\t   * @return {string}\n\t   *         The DOM `className` for this object.\n\t   */\n\t  CustomControlSpacer.prototype.buildCSSClass = function buildCSSClass() {\n\t    return 'vjs-custom-control-spacer ' + _Spacer.prototype.buildCSSClass.call(this);\n\t  };\n\t\n\t  /**\n\t   * Create the `Component`'s DOM element\n\t   *\n\t   * @return {Element}\n\t   *         The element that was created.\n\t   */\n\t\n\t\n\t  CustomControlSpacer.prototype.createEl = function createEl() {\n\t    var el = _Spacer.prototype.createEl.call(this, {\n\t      className: this.buildCSSClass()\n\t    });\n\t\n\t    // No-flex/table-cell mode requires there be some content\n\t    // in the cell to fill the remaining space of the table.\n\t    el.innerHTML = '&nbsp;';\n\t    return el;\n\t  };\n\t\n\t  return CustomControlSpacer;\n\t}(_spacer2['default']);\n\t\n\t_component2['default'].registerComponent('CustomControlSpacer', CustomControlSpacer);\n\texports['default'] = CustomControlSpacer;\n\n\n/***/ },\n/* 100 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\texports.__esModule = true;\n\t\n\tvar _component = __webpack_require__(16);\n\t\n\tvar _component2 = _interopRequireDefault(_component);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /**\n\t                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * @file spacer.js\n\t                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                */\n\t\n\t\n\t/**\n\t * Just an empty spacer element that can be used as an append point for plugins, etc.\n\t * Also can be used to create space between elements when necessary.\n\t *\n\t * @extends Component\n\t */\n\tvar Spacer = function (_Component) {\n\t  _inherits(Spacer, _Component);\n\t\n\t  function Spacer() {\n\t    _classCallCheck(this, Spacer);\n\t\n\t    return _possibleConstructorReturn(this, _Component.apply(this, arguments));\n\t  }\n\t\n\t  /**\n\t   * Builds the default DOM `className`.\n\t   *\n\t   * @return {string}\n\t   *         The DOM `className` for this object.\n\t   */\n\t  Spacer.prototype.buildCSSClass = function buildCSSClass() {\n\t    return 'vjs-spacer ' + _Component.prototype.buildCSSClass.call(this);\n\t  };\n\t\n\t  /**\n\t   * Create the `Component`'s DOM element\n\t   *\n\t   * @return {Element}\n\t   *         The element that was created.\n\t   */\n\t\n\t\n\t  Spacer.prototype.createEl = function createEl() {\n\t    return _Component.prototype.createEl.call(this, 'div', {\n\t      className: this.buildCSSClass()\n\t    });\n\t  };\n\t\n\t  return Spacer;\n\t}(_component2['default']);\n\t\n\t_component2['default'].registerComponent('Spacer', Spacer);\n\t\n\texports['default'] = Spacer;\n\n\n/***/ },\n/* 101 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\texports.__esModule = true;\n\t\n\tvar _component = __webpack_require__(16);\n\t\n\tvar _component2 = _interopRequireDefault(_component);\n\t\n\tvar _modalDialog = __webpack_require__(28);\n\t\n\tvar _modalDialog2 = _interopRequireDefault(_modalDialog);\n\t\n\tvar _mergeOptions = __webpack_require__(19);\n\t\n\tvar _mergeOptions2 = _interopRequireDefault(_mergeOptions);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /**\n\t                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * @file error-display.js\n\t                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                */\n\t\n\t\n\t/**\n\t * A display that indicates an error has occurred. This means that the video\n\t * is unplayable.\n\t *\n\t * @extends ModalDialog\n\t */\n\tvar ErrorDisplay = function (_ModalDialog) {\n\t  _inherits(ErrorDisplay, _ModalDialog);\n\t\n\t  /**\n\t   * Creates an instance of this class.\n\t   *\n\t   * @param  {Player} player\n\t   *         The `Player` that this class should be attached to.\n\t   *\n\t   * @param  {Object} [options]\n\t   *         The key/value store of player options.\n\t   */\n\t  function ErrorDisplay(player, options) {\n\t    _classCallCheck(this, ErrorDisplay);\n\t\n\t    var _this = _possibleConstructorReturn(this, _ModalDialog.call(this, player, options));\n\t\n\t    _this.on(player, 'error', _this.open);\n\t    return _this;\n\t  }\n\t\n\t  /**\n\t   * Builds the default DOM `className`.\n\t   *\n\t   * @return {string}\n\t   *         The DOM `className` for this object.\n\t   *\n\t   * @deprecated Since version 5.\n\t   */\n\t\n\t\n\t  ErrorDisplay.prototype.buildCSSClass = function buildCSSClass() {\n\t    return 'vjs-error-display ' + _ModalDialog.prototype.buildCSSClass.call(this);\n\t  };\n\t\n\t  /**\n\t   * Gets the localized error message based on the `Player`s error.\n\t   *\n\t   * @return {string}\n\t   *         The `Player`s error message localized or an empty string.\n\t   */\n\t\n\t\n\t  ErrorDisplay.prototype.content = function content() {\n\t    var error = this.player().error();\n\t\n\t    return error ? this.localize(error.message) : '';\n\t  };\n\t\n\t  return ErrorDisplay;\n\t}(_modalDialog2['default']);\n\t\n\t/**\n\t * The default options for an `ErrorDisplay`.\n\t *\n\t * @private\n\t */\n\t\n\t\n\tErrorDisplay.prototype.options_ = (0, _mergeOptions2['default'])(_modalDialog2['default'].prototype.options_, {\n\t  fillAlways: true,\n\t  temporary: false,\n\t  uncloseable: true\n\t});\n\t\n\t_component2['default'].registerComponent('ErrorDisplay', ErrorDisplay);\n\texports['default'] = ErrorDisplay;\n\n\n/***/ },\n/* 102 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\texports.__esModule = true;\n\t\n\tvar _window = __webpack_require__(4);\n\t\n\tvar _window2 = _interopRequireDefault(_window);\n\t\n\tvar _component = __webpack_require__(16);\n\t\n\tvar _component2 = _interopRequireDefault(_component);\n\t\n\tvar _dom = __webpack_require__(9);\n\t\n\tvar _fn = __webpack_require__(17);\n\t\n\tvar Fn = _interopRequireWildcard(_fn);\n\t\n\tvar _obj = __webpack_require__(13);\n\t\n\tvar Obj = _interopRequireWildcard(_obj);\n\t\n\tvar _log = __webpack_require__(11);\n\t\n\tvar _log2 = _interopRequireDefault(_log);\n\t\n\tfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj['default'] = obj; return newObj; } }\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /**\n\t                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * @file text-track-settings.js\n\t                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                */\n\t\n\t\n\tvar LOCAL_STORAGE_KEY = 'vjs-text-track-settings';\n\t\n\tvar COLOR_BLACK = ['#000', 'Black'];\n\tvar COLOR_BLUE = ['#00F', 'Blue'];\n\tvar COLOR_CYAN = ['#0FF', 'Cyan'];\n\tvar COLOR_GREEN = ['#0F0', 'Green'];\n\tvar COLOR_MAGENTA = ['#F0F', 'Magenta'];\n\tvar COLOR_RED = ['#F00', 'Red'];\n\tvar COLOR_WHITE = ['#FFF', 'White'];\n\tvar COLOR_YELLOW = ['#FF0', 'Yellow'];\n\t\n\tvar OPACITY_OPAQUE = ['1', 'Opaque'];\n\tvar OPACITY_SEMI = ['0.5', 'Semi-Transparent'];\n\tvar OPACITY_TRANS = ['0', 'Transparent'];\n\t\n\t// Configuration for the various <select> elements in the DOM of this component.\n\t//\n\t// Possible keys include:\n\t//\n\t// `default`:\n\t//   The default option index. Only needs to be provided if not zero.\n\t// `parser`:\n\t//   A function which is used to parse the value from the selected option in\n\t//   a customized way.\n\t// `selector`:\n\t//   The selector used to find the associated <select> element.\n\tvar selectConfigs = {\n\t  backgroundColor: {\n\t    selector: '.vjs-bg-color > select',\n\t    id: 'captions-background-color-%s',\n\t    label: 'Color',\n\t    options: [COLOR_BLACK, COLOR_WHITE, COLOR_RED, COLOR_GREEN, COLOR_BLUE, COLOR_YELLOW, COLOR_MAGENTA, COLOR_CYAN]\n\t  },\n\t\n\t  backgroundOpacity: {\n\t    selector: '.vjs-bg-opacity > select',\n\t    id: 'captions-background-opacity-%s',\n\t    label: 'Transparency',\n\t    options: [OPACITY_OPAQUE, OPACITY_SEMI, OPACITY_TRANS]\n\t  },\n\t\n\t  color: {\n\t    selector: '.vjs-fg-color > select',\n\t    id: 'captions-foreground-color-%s',\n\t    label: 'Color',\n\t    options: [COLOR_WHITE, COLOR_BLACK, COLOR_RED, COLOR_GREEN, COLOR_BLUE, COLOR_YELLOW, COLOR_MAGENTA, COLOR_CYAN]\n\t  },\n\t\n\t  edgeStyle: {\n\t    selector: '.vjs-edge-style > select',\n\t    id: '%s',\n\t    label: 'Text Edge Style',\n\t    options: [['none', 'None'], ['raised', 'Raised'], ['depressed', 'Depressed'], ['uniform', 'Uniform'], ['dropshadow', 'Dropshadow']]\n\t  },\n\t\n\t  fontFamily: {\n\t    selector: '.vjs-font-family > select',\n\t    id: 'captions-font-family-%s',\n\t    label: 'Font Family',\n\t    options: [['proportionalSansSerif', 'Proportional Sans-Serif'], ['monospaceSansSerif', 'Monospace Sans-Serif'], ['proportionalSerif', 'Proportional Serif'], ['monospaceSerif', 'Monospace Serif'], ['casual', 'Casual'], ['script', 'Script'], ['small-caps', 'Small Caps']]\n\t  },\n\t\n\t  fontPercent: {\n\t    selector: '.vjs-font-percent > select',\n\t    id: 'captions-font-size-%s',\n\t    label: 'Font Size',\n\t    options: [['0.50', '50%'], ['0.75', '75%'], ['1.00', '100%'], ['1.25', '125%'], ['1.50', '150%'], ['1.75', '175%'], ['2.00', '200%'], ['3.00', '300%'], ['4.00', '400%']],\n\t    'default': 2,\n\t    parser: function parser(v) {\n\t      return v === '1.00' ? null : Number(v);\n\t    }\n\t  },\n\t\n\t  textOpacity: {\n\t    selector: '.vjs-text-opacity > select',\n\t    id: 'captions-foreground-opacity-%s',\n\t    label: 'Transparency',\n\t    options: [OPACITY_OPAQUE, OPACITY_SEMI]\n\t  },\n\t\n\t  // Options for this object are defined below.\n\t  windowColor: {\n\t    selector: '.vjs-window-color > select',\n\t    id: 'captions-window-color-%s',\n\t    label: 'Color'\n\t  },\n\t\n\t  // Options for this object are defined below.\n\t  windowOpacity: {\n\t    selector: '.vjs-window-opacity > select',\n\t    id: 'captions-window-opacity-%s',\n\t    label: 'Transparency',\n\t    options: [OPACITY_TRANS, OPACITY_SEMI, OPACITY_OPAQUE]\n\t  }\n\t};\n\t\n\tselectConfigs.windowColor.options = selectConfigs.backgroundColor.options;\n\t\n\t/**\n\t * Get the actual value of an option.\n\t *\n\t * @param  {string} value\n\t *         The value to get\n\t *\n\t * @param  {Function} [parser]\n\t *         Optional function to adjust the value.\n\t *\n\t * @return {Mixed}\n\t *         - Will be `undefined` if no value exists\n\t *         - Will be `undefined` if the given value is \"none\".\n\t *         - Will be the actual value otherwise.\n\t *\n\t * @private\n\t */\n\tfunction parseOptionValue(value, parser) {\n\t  if (parser) {\n\t    value = parser(value);\n\t  }\n\t\n\t  if (value && value !== 'none') {\n\t    return value;\n\t  }\n\t}\n\t\n\t/**\n\t * Gets the value of the selected <option> element within a <select> element.\n\t *\n\t * @param  {Element} el\n\t *         the element to look in\n\t *\n\t * @param  {Function} [parser]\n\t *         Optional function to adjust the value.\n\t *\n\t * @return {Mixed}\n\t *         - Will be `undefined` if no value exists\n\t *         - Will be `undefined` if the given value is \"none\".\n\t *         - Will be the actual value otherwise.\n\t *\n\t * @private\n\t */\n\tfunction getSelectedOptionValue(el, parser) {\n\t  var value = el.options[el.options.selectedIndex].value;\n\t\n\t  return parseOptionValue(value, parser);\n\t}\n\t\n\t/**\n\t * Sets the selected <option> element within a <select> element based on a\n\t * given value.\n\t *\n\t * @param {Element} el\n\t *        The element to look in.\n\t *\n\t * @param {string} value\n\t *        the property to look on.\n\t *\n\t * @param {Function} [parser]\n\t *        Optional function to adjust the value before comparing.\n\t *\n\t * @private\n\t */\n\tfunction setSelectedOption(el, value, parser) {\n\t  if (!value) {\n\t    return;\n\t  }\n\t\n\t  for (var i = 0; i < el.options.length; i++) {\n\t    if (parseOptionValue(el.options[i].value, parser) === value) {\n\t      el.selectedIndex = i;\n\t      break;\n\t    }\n\t  }\n\t}\n\t\n\t/**\n\t * Manipulate Text Tracks settings.\n\t *\n\t * @extends Component\n\t */\n\t\n\tvar TextTrackSettings = function (_Component) {\n\t  _inherits(TextTrackSettings, _Component);\n\t\n\t  /**\n\t   * Creates an instance of this class.\n\t   *\n\t   * @param {Player} player\n\t   *         The `Player` that this class should be attached to.\n\t   *\n\t   * @param {Object} [options]\n\t   *         The key/value store of player options.\n\t   */\n\t  function TextTrackSettings(player, options) {\n\t    _classCallCheck(this, TextTrackSettings);\n\t\n\t    var _this = _possibleConstructorReturn(this, _Component.call(this, player, options));\n\t\n\t    _this.setDefaults();\n\t    _this.hide();\n\t\n\t    _this.updateDisplay = Fn.bind(_this, _this.updateDisplay);\n\t\n\t    // Grab `persistTextTrackSettings` from the player options if not passed in child options\n\t    if (options.persistTextTrackSettings === undefined) {\n\t      _this.options_.persistTextTrackSettings = _this.options_.playerOptions.persistTextTrackSettings;\n\t    }\n\t\n\t    _this.on(_this.$('.vjs-done-button'), 'click', function () {\n\t      _this.saveSettings();\n\t      _this.hide();\n\t    });\n\t\n\t    _this.on(_this.$('.vjs-default-button'), 'click', function () {\n\t      _this.setDefaults();\n\t      _this.updateDisplay();\n\t    });\n\t\n\t    Obj.each(selectConfigs, function (config) {\n\t      _this.on(_this.$(config.selector), 'change', _this.updateDisplay);\n\t    });\n\t\n\t    if (_this.options_.persistTextTrackSettings) {\n\t      _this.restoreSettings();\n\t    }\n\t    return _this;\n\t  }\n\t\n\t  /**\n\t   * Create a <select> element with configured options.\n\t   *\n\t   * @param {string} key\n\t   *        Configuration key to use during creation.\n\t   *\n\t   * @return {Element}\n\t   *         The DOM element that gets created.\n\t   * @private\n\t   */\n\t\n\t\n\t  TextTrackSettings.prototype.createElSelect_ = function createElSelect_(key) {\n\t    var _this2 = this;\n\t\n\t    var config = selectConfigs[key];\n\t    var id = config.id.replace('%s', this.id_);\n\t\n\t    return [(0, _dom.createEl)('label', {\n\t      className: 'vjs-label',\n\t      textContent: config.label\n\t    }, {\n\t      'for': id\n\t    }), (0, _dom.createEl)('select', { id: id }, undefined, config.options.map(function (o) {\n\t      return (0, _dom.createEl)('option', {\n\t        textContent: _this2.localize(o[1]),\n\t        value: o[0]\n\t      });\n\t    }))];\n\t  };\n\t\n\t  /**\n\t   * Create foreground color element for the component\n\t   *\n\t   * @return {Element}\n\t   *         The element that was created.\n\t   *\n\t   * @private\n\t   */\n\t\n\t\n\t  TextTrackSettings.prototype.createElFgColor_ = function createElFgColor_() {\n\t    var legend = (0, _dom.createEl)('legend', {\n\t      textContent: this.localize('Text')\n\t    });\n\t\n\t    var select = this.createElSelect_('color');\n\t\n\t    var opacity = (0, _dom.createEl)('span', {\n\t      className: 'vjs-text-opacity vjs-opacity'\n\t    }, undefined, this.createElSelect_('textOpacity'));\n\t\n\t    return (0, _dom.createEl)('fieldset', {\n\t      className: 'vjs-fg-color vjs-tracksetting'\n\t    }, undefined, [legend].concat(select, opacity));\n\t  };\n\t\n\t  /**\n\t   * Create background color element for the component\n\t   *\n\t   * @return {Element}\n\t   *         The element that was created\n\t   *\n\t   * @private\n\t   */\n\t\n\t\n\t  TextTrackSettings.prototype.createElBgColor_ = function createElBgColor_() {\n\t    var legend = (0, _dom.createEl)('legend', {\n\t      textContent: this.localize('Background')\n\t    });\n\t\n\t    var select = this.createElSelect_('backgroundColor');\n\t\n\t    var opacity = (0, _dom.createEl)('span', {\n\t      className: 'vjs-bg-opacity vjs-opacity'\n\t    }, undefined, this.createElSelect_('backgroundOpacity'));\n\t\n\t    return (0, _dom.createEl)('fieldset', {\n\t      className: 'vjs-bg-color vjs-tracksetting'\n\t    }, undefined, [legend].concat(select, opacity));\n\t  };\n\t\n\t  /**\n\t   * Create window color element for the component\n\t   *\n\t   * @return {Element}\n\t   *         The element that was created\n\t   *\n\t   * @private\n\t   */\n\t\n\t\n\t  TextTrackSettings.prototype.createElWinColor_ = function createElWinColor_() {\n\t    var legend = (0, _dom.createEl)('legend', {\n\t      textContent: this.localize('Window')\n\t    });\n\t\n\t    var select = this.createElSelect_('windowColor');\n\t\n\t    var opacity = (0, _dom.createEl)('span', {\n\t      className: 'vjs-window-opacity vjs-opacity'\n\t    }, undefined, this.createElSelect_('windowOpacity'));\n\t\n\t    return (0, _dom.createEl)('fieldset', {\n\t      className: 'vjs-window-color vjs-tracksetting'\n\t    }, undefined, [legend].concat(select, opacity));\n\t  };\n\t\n\t  /**\n\t   * Create color elements for the component\n\t   *\n\t   * @return {Element}\n\t   *         The element that was created\n\t   *\n\t   * @private\n\t   */\n\t\n\t\n\t  TextTrackSettings.prototype.createElColors_ = function createElColors_() {\n\t    return (0, _dom.createEl)('div', {\n\t      className: 'vjs-tracksettings-colors'\n\t    }, undefined, [this.createElFgColor_(), this.createElBgColor_(), this.createElWinColor_()]);\n\t  };\n\t\n\t  /**\n\t   * Create font elements for the component\n\t   *\n\t   * @return {Element}\n\t   *         The element that was created.\n\t   *\n\t   * @private\n\t   */\n\t\n\t\n\t  TextTrackSettings.prototype.createElFont_ = function createElFont_() {\n\t    var fontPercent = (0, _dom.createEl)('div', {\n\t      className: 'vjs-font-percent vjs-tracksetting'\n\t    }, undefined, this.createElSelect_('fontPercent'));\n\t\n\t    var edgeStyle = (0, _dom.createEl)('div', {\n\t      className: 'vjs-edge-style vjs-tracksetting'\n\t    }, undefined, this.createElSelect_('edgeStyle'));\n\t\n\t    var fontFamily = (0, _dom.createEl)('div', {\n\t      className: 'vjs-font-family vjs-tracksetting'\n\t    }, undefined, this.createElSelect_('fontFamily'));\n\t\n\t    return (0, _dom.createEl)('div', {\n\t      className: 'vjs-tracksettings-font'\n\t    }, undefined, [fontPercent, edgeStyle, fontFamily]);\n\t  };\n\t\n\t  /**\n\t   * Create controls for the component\n\t   *\n\t   * @return {Element}\n\t   *         The element that was created.\n\t   *\n\t   * @private\n\t   */\n\t\n\t\n\t  TextTrackSettings.prototype.createElControls_ = function createElControls_() {\n\t    var defaultsButton = (0, _dom.createEl)('button', {\n\t      className: 'vjs-default-button',\n\t      textContent: this.localize('Defaults')\n\t    });\n\t\n\t    var doneButton = (0, _dom.createEl)('button', {\n\t      className: 'vjs-done-button',\n\t      textContent: 'Done'\n\t    });\n\t\n\t    return (0, _dom.createEl)('div', {\n\t      className: 'vjs-tracksettings-controls'\n\t    }, undefined, [defaultsButton, doneButton]);\n\t  };\n\t\n\t  /**\n\t   * Create the component's DOM element\n\t   *\n\t   * @return {Element}\n\t   *         The element that was created.\n\t   */\n\t\n\t\n\t  TextTrackSettings.prototype.createEl = function createEl() {\n\t    var settings = (0, _dom.createEl)('div', {\n\t      className: 'vjs-tracksettings'\n\t    }, undefined, [this.createElColors_(), this.createElFont_(), this.createElControls_()]);\n\t\n\t    var heading = (0, _dom.createEl)('div', {\n\t      className: 'vjs-control-text',\n\t      id: 'TTsettingsDialogLabel-' + this.id_,\n\t      textContent: 'Caption Settings Dialog'\n\t    }, {\n\t      'aria-level': '1',\n\t      'role': 'heading'\n\t    });\n\t\n\t    var description = (0, _dom.createEl)('div', {\n\t      className: 'vjs-control-text',\n\t      id: 'TTsettingsDialogDescription-' + this.id_,\n\t      textContent: 'Beginning of dialog window. Escape will cancel and close the window.'\n\t    });\n\t\n\t    var doc = (0, _dom.createEl)('div', undefined, {\n\t      role: 'document'\n\t    }, [heading, description, settings]);\n\t\n\t    return (0, _dom.createEl)('div', {\n\t      className: 'vjs-caption-settings vjs-modal-overlay',\n\t      tabIndex: -1\n\t    }, {\n\t      'role': 'dialog',\n\t      'aria-labelledby': heading.id,\n\t      'aria-describedby': description.id\n\t    }, doc);\n\t  };\n\t\n\t  /**\n\t   * Gets an object of text track settings (or null).\n\t   *\n\t   * @return {Object}\n\t   *         An object with config values parsed from the DOM or localStorage.\n\t   */\n\t\n\t\n\t  TextTrackSettings.prototype.getValues = function getValues() {\n\t    var _this3 = this;\n\t\n\t    return Obj.reduce(selectConfigs, function (accum, config, key) {\n\t      var value = getSelectedOptionValue(_this3.$(config.selector), config.parser);\n\t\n\t      if (value !== undefined) {\n\t        accum[key] = value;\n\t      }\n\t\n\t      return accum;\n\t    }, {});\n\t  };\n\t\n\t  /**\n\t   * Sets text track settings from an object of values.\n\t   *\n\t   * @param {Object} values\n\t   *        An object with config values parsed from the DOM or localStorage.\n\t   */\n\t\n\t\n\t  TextTrackSettings.prototype.setValues = function setValues(values) {\n\t    var _this4 = this;\n\t\n\t    Obj.each(selectConfigs, function (config, key) {\n\t      setSelectedOption(_this4.$(config.selector), values[key], config.parser);\n\t    });\n\t  };\n\t\n\t  /**\n\t   * Sets all <select> elements to their default values.\n\t   */\n\t\n\t\n\t  TextTrackSettings.prototype.setDefaults = function setDefaults() {\n\t    var _this5 = this;\n\t\n\t    Obj.each(selectConfigs, function (config) {\n\t      var index = config.hasOwnProperty('default') ? config['default'] : 0;\n\t\n\t      _this5.$(config.selector).selectedIndex = index;\n\t    });\n\t  };\n\t\n\t  /**\n\t   * Restore texttrack settings from localStorage\n\t   */\n\t\n\t\n\t  TextTrackSettings.prototype.restoreSettings = function restoreSettings() {\n\t    var values = void 0;\n\t\n\t    try {\n\t      values = JSON.parse(_window2['default'].localStorage.getItem(LOCAL_STORAGE_KEY));\n\t    } catch (err) {\n\t      _log2['default'].warn(err);\n\t    }\n\t\n\t    if (values) {\n\t      this.setValues(values);\n\t    }\n\t  };\n\t\n\t  /**\n\t   * Save text track settings to localStorage\n\t   */\n\t\n\t\n\t  TextTrackSettings.prototype.saveSettings = function saveSettings() {\n\t    if (!this.options_.persistTextTrackSettings) {\n\t      return;\n\t    }\n\t\n\t    var values = this.getValues();\n\t\n\t    try {\n\t      if (Object.keys(values).length) {\n\t        _window2['default'].localStorage.setItem(LOCAL_STORAGE_KEY, JSON.stringify(values));\n\t      } else {\n\t        _window2['default'].localStorage.removeItem(LOCAL_STORAGE_KEY);\n\t      }\n\t    } catch (err) {\n\t      _log2['default'].warn(err);\n\t    }\n\t  };\n\t\n\t  /**\n\t   * Update display of text track settings\n\t   */\n\t\n\t\n\t  TextTrackSettings.prototype.updateDisplay = function updateDisplay() {\n\t    var ttDisplay = this.player_.getChild('textTrackDisplay');\n\t\n\t    if (ttDisplay) {\n\t      ttDisplay.updateDisplay();\n\t    }\n\t  };\n\t\n\t  return TextTrackSettings;\n\t}(_component2['default']);\n\t\n\t_component2['default'].registerComponent('TextTrackSettings', TextTrackSettings);\n\t\n\texports['default'] = TextTrackSettings;\n\n\n/***/ },\n/* 103 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\texports.__esModule = true;\n\t\n\tvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\t\n\tvar _templateObject = _taggedTemplateLiteralLoose(['Text Tracks are being loaded from another origin but the crossorigin attribute isn\\'t used.\\n            This may prevent text tracks from loading.'], ['Text Tracks are being loaded from another origin but the crossorigin attribute isn\\'t used.\\n            This may prevent text tracks from loading.']);\n\t\n\tvar _tech = __webpack_require__(29);\n\t\n\tvar _tech2 = _interopRequireDefault(_tech);\n\t\n\tvar _component = __webpack_require__(16);\n\t\n\tvar _component2 = _interopRequireDefault(_component);\n\t\n\tvar _dom = __webpack_require__(9);\n\t\n\tvar Dom = _interopRequireWildcard(_dom);\n\t\n\tvar _url = __webpack_require__(35);\n\t\n\tvar Url = _interopRequireWildcard(_url);\n\t\n\tvar _fn = __webpack_require__(17);\n\t\n\tvar Fn = _interopRequireWildcard(_fn);\n\t\n\tvar _log = __webpack_require__(11);\n\t\n\tvar _log2 = _interopRequireDefault(_log);\n\t\n\tvar _tsml = __webpack_require__(14);\n\t\n\tvar _tsml2 = _interopRequireDefault(_tsml);\n\t\n\tvar _browser = __webpack_require__(12);\n\t\n\tvar browser = _interopRequireWildcard(_browser);\n\t\n\tvar _document = __webpack_require__(5);\n\t\n\tvar _document2 = _interopRequireDefault(_document);\n\t\n\tvar _window = __webpack_require__(4);\n\t\n\tvar _window2 = _interopRequireDefault(_window);\n\t\n\tvar _obj = __webpack_require__(13);\n\t\n\tvar _mergeOptions = __webpack_require__(19);\n\t\n\tvar _mergeOptions2 = _interopRequireDefault(_mergeOptions);\n\t\n\tvar _toTitleCase = __webpack_require__(18);\n\t\n\tvar _toTitleCase2 = _interopRequireDefault(_toTitleCase);\n\t\n\tfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj['default'] = obj; return newObj; } }\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\t\n\tfunction _taggedTemplateLiteralLoose(strings, raw) { strings.raw = raw; return strings; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /**\n\t                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * @file html5.js\n\t                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                */\n\t\n\t\n\t/**\n\t * HTML5 Media Controller - Wrapper for HTML5 Media API\n\t *\n\t * @mixes Tech~SouceHandlerAdditions\n\t * @extends Tech\n\t */\n\tvar Html5 = function (_Tech) {\n\t  _inherits(Html5, _Tech);\n\t\n\t  /**\n\t   * Create an instance of this Tech.\n\t   *\n\t   * @param {Object} [options]\n\t   *        The key/value store of player options.\n\t   *\n\t   * @param {Component~ReadyCallback} ready\n\t   *        Callback function to call when the `HTML5` Tech is ready.\n\t   */\n\t  function Html5(options, ready) {\n\t    _classCallCheck(this, Html5);\n\t\n\t    var _this = _possibleConstructorReturn(this, _Tech.call(this, options, ready));\n\t\n\t    var source = options.source;\n\t    var crossoriginTracks = false;\n\t\n\t    // Set the source if one is provided\n\t    // 1) Check if the source is new (if not, we want to keep the original so playback isn't interrupted)\n\t    // 2) Check to see if the network state of the tag was failed at init, and if so, reset the source\n\t    // anyway so the error gets fired.\n\t    if (source && (_this.el_.currentSrc !== source.src || options.tag && options.tag.initNetworkState_ === 3)) {\n\t      _this.setSource(source);\n\t    } else {\n\t      _this.handleLateInit_(_this.el_);\n\t    }\n\t\n\t    if (_this.el_.hasChildNodes()) {\n\t\n\t      var nodes = _this.el_.childNodes;\n\t      var nodesLength = nodes.length;\n\t      var removeNodes = [];\n\t\n\t      while (nodesLength--) {\n\t        var node = nodes[nodesLength];\n\t        var nodeName = node.nodeName.toLowerCase();\n\t\n\t        if (nodeName === 'track') {\n\t          if (!_this.featuresNativeTextTracks) {\n\t            // Empty video tag tracks so the built-in player doesn't use them also.\n\t            // This may not be fast enough to stop HTML5 browsers from reading the tags\n\t            // so we'll need to turn off any default tracks if we're manually doing\n\t            // captions and subtitles. videoElement.textTracks\n\t            removeNodes.push(node);\n\t          } else {\n\t            // store HTMLTrackElement and TextTrack to remote list\n\t            _this.remoteTextTrackEls().addTrackElement_(node);\n\t            _this.remoteTextTracks().addTrack_(node.track);\n\t            if (!crossoriginTracks && !_this.el_.hasAttribute('crossorigin') && Url.isCrossOrigin(node.src)) {\n\t              crossoriginTracks = true;\n\t            }\n\t          }\n\t        }\n\t      }\n\t\n\t      for (var i = 0; i < removeNodes.length; i++) {\n\t        _this.el_.removeChild(removeNodes[i]);\n\t      }\n\t    }\n\t\n\t    // TODO: add text tracks into this list\n\t    var trackTypes = ['audio', 'video'];\n\t\n\t    // ProxyNative Video/Audio Track\n\t    trackTypes.forEach(function (type) {\n\t      var elTracks = _this.el()[type + 'Tracks'];\n\t      var techTracks = _this[type + 'Tracks']();\n\t      var capitalType = (0, _toTitleCase2['default'])(type);\n\t\n\t      if (!_this['featuresNative' + capitalType + 'Tracks'] || !elTracks || !elTracks.addEventListener) {\n\t        return;\n\t      }\n\t\n\t      _this['handle' + capitalType + 'TrackChange_'] = function (e) {\n\t        techTracks.trigger({\n\t          type: 'change',\n\t          target: techTracks,\n\t          currentTarget: techTracks,\n\t          srcElement: techTracks\n\t        });\n\t      };\n\t\n\t      _this['handle' + capitalType + 'TrackAdd_'] = function (e) {\n\t        return techTracks.addTrack(e.track);\n\t      };\n\t      _this['handle' + capitalType + 'TrackRemove_'] = function (e) {\n\t        return techTracks.removeTrack(e.track);\n\t      };\n\t\n\t      elTracks.addEventListener('change', _this['handle' + capitalType + 'TrackChange_']);\n\t      elTracks.addEventListener('addtrack', _this['handle' + capitalType + 'TrackAdd_']);\n\t      elTracks.addEventListener('removetrack', _this['handle' + capitalType + 'TrackRemove_']);\n\t      _this['removeOld' + capitalType + 'Tracks_'] = function (e) {\n\t        return _this.removeOldTracks_(techTracks, elTracks);\n\t      };\n\t\n\t      // Remove (native) tracks that are not used anymore\n\t      _this.on('loadstart', _this['removeOld' + capitalType + 'Tracks_']);\n\t    });\n\t\n\t    if (_this.featuresNativeTextTracks) {\n\t      if (crossoriginTracks) {\n\t        _log2['default'].warn((0, _tsml2['default'])(_templateObject));\n\t      }\n\t\n\t      _this.handleTextTrackChange_ = Fn.bind(_this, _this.handleTextTrackChange);\n\t      _this.handleTextTrackAdd_ = Fn.bind(_this, _this.handleTextTrackAdd);\n\t      _this.handleTextTrackRemove_ = Fn.bind(_this, _this.handleTextTrackRemove);\n\t      _this.proxyNativeTextTracks_();\n\t    }\n\t\n\t    // Determine if native controls should be used\n\t    // Our goal should be to get the custom controls on mobile solid everywhere\n\t    // so we can remove this all together. Right now this will block custom\n\t    // controls on touch enabled laptops like the Chrome Pixel\n\t    if ((browser.TOUCH_ENABLED || browser.IS_IPHONE || browser.IS_NATIVE_ANDROID) && options.nativeControlsForTouch === true) {\n\t      _this.setControls(true);\n\t    }\n\t\n\t    // on iOS, we want to proxy `webkitbeginfullscreen` and `webkitendfullscreen`\n\t    // into a `fullscreenchange` event\n\t    _this.proxyWebkitFullscreen_();\n\t\n\t    _this.triggerReady();\n\t    return _this;\n\t  }\n\t\n\t  /**\n\t   * Dispose of `HTML5` media element and remove all tracks.\n\t   */\n\t\n\t\n\t  Html5.prototype.dispose = function dispose() {\n\t    var _this2 = this;\n\t\n\t    // Un-ProxyNativeTracks\n\t    ['audio', 'video', 'text'].forEach(function (type) {\n\t      var capitalType = (0, _toTitleCase2['default'])(type);\n\t      var tl = _this2.el_[type + 'Tracks'];\n\t\n\t      if (tl && tl.removeEventListener) {\n\t        tl.removeEventListener('change', _this2['handle' + capitalType + 'TrackChange_']);\n\t        tl.removeEventListener('addtrack', _this2['handle' + capitalType + 'TrackAdd_']);\n\t        tl.removeEventListener('removetrack', _this2['handle' + capitalType + 'TrackRemove_']);\n\t      }\n\t\n\t      // Stop removing old text tracks\n\t      if (tl) {\n\t        _this2.off('loadstart', _this2['removeOld' + capitalType + 'Tracks_']);\n\t      }\n\t    });\n\t\n\t    Html5.disposeMediaElement(this.el_);\n\t    // tech will handle clearing of the emulated track list\n\t    _Tech.prototype.dispose.call(this);\n\t  };\n\t\n\t  /**\n\t   * Create the `Html5` Tech's DOM element.\n\t   *\n\t   * @return {Element}\n\t   *         The element that gets created.\n\t   */\n\t\n\t\n\t  Html5.prototype.createEl = function createEl() {\n\t    var el = this.options_.tag;\n\t\n\t    // Check if this browser supports moving the element into the box.\n\t    // On the iPhone video will break if you move the element,\n\t    // So we have to create a brand new element.\n\t    if (!el || this.movingMediaElementInDOM === false) {\n\t\n\t      // If the original tag is still there, clone and remove it.\n\t      if (el) {\n\t        var clone = el.cloneNode(true);\n\t\n\t        el.parentNode.insertBefore(clone, el);\n\t        Html5.disposeMediaElement(el);\n\t        el = clone;\n\t      } else {\n\t        el = _document2['default'].createElement('video');\n\t\n\t        // determine if native controls should be used\n\t        var tagAttributes = this.options_.tag && Dom.getElAttributes(this.options_.tag);\n\t        var attributes = (0, _mergeOptions2['default'])({}, tagAttributes);\n\t\n\t        if (!browser.TOUCH_ENABLED || this.options_.nativeControlsForTouch !== true) {\n\t          delete attributes.controls;\n\t        }\n\t\n\t        Dom.setElAttributes(el, (0, _obj.assign)(attributes, {\n\t          id: this.options_.techId,\n\t          'class': 'vjs-tech'\n\t        }));\n\t      }\n\t\n\t      el.playerId = this.options_.playerId;\n\t    }\n\t\n\t    // Update specific tag settings, in case they were overridden\n\t    var settingsAttrs = ['autoplay', 'preload', 'loop', 'muted'];\n\t\n\t    for (var i = settingsAttrs.length - 1; i >= 0; i--) {\n\t      var attr = settingsAttrs[i];\n\t      var overwriteAttrs = {};\n\t\n\t      if (typeof this.options_[attr] !== 'undefined') {\n\t        overwriteAttrs[attr] = this.options_[attr];\n\t      }\n\t      Dom.setElAttributes(el, overwriteAttrs);\n\t    }\n\t\n\t    return el;\n\t  };\n\t\n\t  /**\n\t   * This will be triggered if the loadstart event has already fired, before videojs was\n\t   * ready. Two known examples of when this can happen are:\n\t   * 1. If we're loading the playback object after it has started loading\n\t   * 2. The media is already playing the (often with autoplay on) then\n\t   *\n\t   * This function will fire another loadstart so that videojs can catchup.\n\t   *\n\t   * @fires Tech#loadstart\n\t   *\n\t   * @return {undefined}\n\t   *         returns nothing.\n\t   */\n\t\n\t\n\t  Html5.prototype.handleLateInit_ = function handleLateInit_(el) {\n\t    var _this3 = this;\n\t\n\t    if (el.networkState === 0 || el.networkState === 3) {\n\t      // The video element hasn't started loading the source yet\n\t      // or didn't find a source\n\t      return;\n\t    }\n\t\n\t    if (el.readyState === 0) {\n\t      var _ret = function () {\n\t        // NetworkState is set synchronously BUT loadstart is fired at the\n\t        // end of the current stack, usually before setInterval(fn, 0).\n\t        // So at this point we know loadstart may have already fired or is\n\t        // about to fire, and either way the player hasn't seen it yet.\n\t        // We don't want to fire loadstart prematurely here and cause a\n\t        // double loadstart so we'll wait and see if it happens between now\n\t        // and the next loop, and fire it if not.\n\t        // HOWEVER, we also want to make sure it fires before loadedmetadata\n\t        // which could also happen between now and the next loop, so we'll\n\t        // watch for that also.\n\t        var loadstartFired = false;\n\t        var setLoadstartFired = function setLoadstartFired() {\n\t          loadstartFired = true;\n\t        };\n\t\n\t        _this3.on('loadstart', setLoadstartFired);\n\t\n\t        var triggerLoadstart = function triggerLoadstart() {\n\t          // We did miss the original loadstart. Make sure the player\n\t          // sees loadstart before loadedmetadata\n\t          if (!loadstartFired) {\n\t            this.trigger('loadstart');\n\t          }\n\t        };\n\t\n\t        _this3.on('loadedmetadata', triggerLoadstart);\n\t\n\t        _this3.ready(function () {\n\t          this.off('loadstart', setLoadstartFired);\n\t          this.off('loadedmetadata', triggerLoadstart);\n\t\n\t          if (!loadstartFired) {\n\t            // We did miss the original native loadstart. Fire it now.\n\t            this.trigger('loadstart');\n\t          }\n\t        });\n\t\n\t        return {\n\t          v: void 0\n\t        };\n\t      }();\n\t\n\t      if ((typeof _ret === 'undefined' ? 'undefined' : _typeof(_ret)) === \"object\") return _ret.v;\n\t    }\n\t\n\t    // From here on we know that loadstart already fired and we missed it.\n\t    // The other readyState events aren't as much of a problem if we double\n\t    // them, so not going to go to as much trouble as loadstart to prevent\n\t    // that unless we find reason to.\n\t    var eventsToTrigger = ['loadstart'];\n\t\n\t    // loadedmetadata: newly equal to HAVE_METADATA (1) or greater\n\t    eventsToTrigger.push('loadedmetadata');\n\t\n\t    // loadeddata: newly increased to HAVE_CURRENT_DATA (2) or greater\n\t    if (el.readyState >= 2) {\n\t      eventsToTrigger.push('loadeddata');\n\t    }\n\t\n\t    // canplay: newly increased to HAVE_FUTURE_DATA (3) or greater\n\t    if (el.readyState >= 3) {\n\t      eventsToTrigger.push('canplay');\n\t    }\n\t\n\t    // canplaythrough: newly equal to HAVE_ENOUGH_DATA (4)\n\t    if (el.readyState >= 4) {\n\t      eventsToTrigger.push('canplaythrough');\n\t    }\n\t\n\t    // We still need to give the player time to add event listeners\n\t    this.ready(function () {\n\t      eventsToTrigger.forEach(function (type) {\n\t        this.trigger(type);\n\t      }, this);\n\t    });\n\t  };\n\t\n\t  /**\n\t   * Add event listeners to native text track events. This adds the native text tracks\n\t   * to our emulated {@link TextTrackList}.\n\t   */\n\t\n\t\n\t  Html5.prototype.proxyNativeTextTracks_ = function proxyNativeTextTracks_() {\n\t    var tt = this.el().textTracks;\n\t\n\t    if (tt) {\n\t      // Add tracks - if player is initialised after DOM loaded, textTracks\n\t      // will not trigger addtrack\n\t      for (var i = 0; i < tt.length; i++) {\n\t        this.textTracks().addTrack_(tt[i]);\n\t      }\n\t\n\t      if (tt.addEventListener) {\n\t        tt.addEventListener('change', this.handleTextTrackChange_);\n\t        tt.addEventListener('addtrack', this.handleTextTrackAdd_);\n\t        tt.addEventListener('removetrack', this.handleTextTrackRemove_);\n\t      }\n\t\n\t      // Remove (native) texttracks that are not used anymore\n\t      this.on('loadstart', this.removeOldTextTracks_);\n\t    }\n\t  };\n\t\n\t  /**\n\t   * Handle any {@link TextTrackList} `change` event.\n\t   *\n\t   * @param {EventTarget~Event} e\n\t   *        The `change` event that caused this to run.\n\t   *\n\t   * @listens TextTrackList#change\n\t   */\n\t\n\t\n\t  Html5.prototype.handleTextTrackChange = function handleTextTrackChange(e) {\n\t    var tt = this.textTracks();\n\t\n\t    this.textTracks().trigger({\n\t      type: 'change',\n\t      target: tt,\n\t      currentTarget: tt,\n\t      srcElement: tt\n\t    });\n\t  };\n\t\n\t  /**\n\t   * Handle any {@link TextTrackList} `addtrack` event.\n\t   *\n\t   * @param {EventTarget~Event} e\n\t   *        The `addtrack` event that caused this to run.\n\t   *\n\t   * @listens TextTrackList#addtrack\n\t   */\n\t\n\t\n\t  Html5.prototype.handleTextTrackAdd = function handleTextTrackAdd(e) {\n\t    this.textTracks().addTrack_(e.track);\n\t  };\n\t\n\t  /**\n\t   * Handle any {@link TextTrackList} `removetrack` event.\n\t   *\n\t   * @param {EventTarget~Event} e\n\t   *        The `removetrack` event that caused this to run.\n\t   *\n\t   * @listens TextTrackList#removetrack\n\t   */\n\t\n\t\n\t  Html5.prototype.handleTextTrackRemove = function handleTextTrackRemove(e) {\n\t    this.textTracks().removeTrack_(e.track);\n\t  };\n\t\n\t  /**\n\t   * This function removes any {@link AudioTrack}s, {@link VideoTrack}s, or\n\t   * {@link TextTrack}s that are not in the media elements TrackList.\n\t   *\n\t   * @param {TrackList} techTracks\n\t   *        HTML5 Tech's TrackList to search through\n\t   *\n\t   * @param {TrackList} elTracks\n\t   *        HTML5 media elements TrackList to search trough.\n\t   *\n\t   * @private\n\t   */\n\t\n\t\n\t  Html5.prototype.removeOldTracks_ = function removeOldTracks_(techTracks, elTracks) {\n\t    // This will loop over the techTracks and check if they are still used by the HTML5 media element\n\t    // If not, they will be removed from the emulated list\n\t    var removeTracks = [];\n\t\n\t    if (!elTracks) {\n\t      return;\n\t    }\n\t\n\t    for (var i = 0; i < techTracks.length; i++) {\n\t      var techTrack = techTracks[i];\n\t      var found = false;\n\t\n\t      for (var j = 0; j < elTracks.length; j++) {\n\t        if (elTracks[j] === techTrack) {\n\t          found = true;\n\t          break;\n\t        }\n\t      }\n\t\n\t      if (!found) {\n\t        removeTracks.push(techTrack);\n\t      }\n\t    }\n\t\n\t    for (var _i = 0; _i < removeTracks.length; _i++) {\n\t      var _track = removeTracks[_i];\n\t\n\t      techTracks.removeTrack_(_track);\n\t    }\n\t  };\n\t\n\t  /**\n\t   * Remove {@link TextTrack}s that dont exist in the native track list from our\n\t   * emulated {@link TextTrackList}.\n\t   *\n\t   * @listens Tech#loadstart\n\t   */\n\t\n\t\n\t  Html5.prototype.removeOldTextTracks_ = function removeOldTextTracks_(e) {\n\t    var techTracks = this.textTracks();\n\t    var elTracks = this.el().textTracks;\n\t\n\t    this.removeOldTracks_(techTracks, elTracks);\n\t  };\n\t\n\t  /**\n\t   * Called by {@link Player#play} to play using the `Html5` `Tech`.\n\t   */\n\t\n\t\n\t  Html5.prototype.play = function play() {\n\t    var playPromise = this.el_.play();\n\t\n\t    // Catch/silence error when a pause interrupts a play request\n\t    // on browsers which return a promise\n\t    if (playPromise !== undefined && typeof playPromise.then === 'function') {\n\t      playPromise.then(null, function (e) {});\n\t    }\n\t  };\n\t\n\t  /**\n\t   * Set current time for the `HTML5` tech.\n\t   *\n\t   * @param {number} seconds\n\t   *        Set the current time of the media to this.\n\t   */\n\t\n\t\n\t  Html5.prototype.setCurrentTime = function setCurrentTime(seconds) {\n\t    try {\n\t      this.el_.currentTime = seconds;\n\t    } catch (e) {\n\t      (0, _log2['default'])(e, 'Video is not ready. (Video.js)');\n\t      // this.warning(VideoJS.warnings.videoNotReady);\n\t    }\n\t  };\n\t\n\t  /**\n\t   * Get the current duration of the HTML5 media element.\n\t   *\n\t   * @return {number}\n\t   *         The duration of the media or 0 if there is no duration.\n\t   */\n\t\n\t\n\t  Html5.prototype.duration = function duration() {\n\t    var _this4 = this;\n\t\n\t    // Android Chrome will report duration as Infinity for VOD HLS until after\n\t    // playback has started, which triggers the live display erroneously.\n\t    // Return NaN if playback has not started and trigger a durationupdate once\n\t    // the duration can be reliably known.\n\t    if (this.el_.duration === Infinity && browser.IS_ANDROID && browser.IS_CHROME) {\n\t      if (this.el_.currentTime === 0) {\n\t        var _ret2 = function () {\n\t          // Wait for the first `timeupdate` with currentTime > 0 - there may be\n\t          // several with 0\n\t          var checkProgress = function checkProgress() {\n\t            if (_this4.el_.currentTime > 0) {\n\t              // Trigger durationchange for genuinely live video\n\t              if (_this4.el_.duration === Infinity) {\n\t                _this4.trigger('durationchange');\n\t              }\n\t              _this4.off('timeupdate', checkProgress);\n\t            }\n\t          };\n\t\n\t          _this4.on('timeupdate', checkProgress);\n\t          return {\n\t            v: NaN\n\t          };\n\t        }();\n\t\n\t        if ((typeof _ret2 === 'undefined' ? 'undefined' : _typeof(_ret2)) === \"object\") return _ret2.v;\n\t      }\n\t    }\n\t    return this.el_.duration || NaN;\n\t  };\n\t\n\t  /**\n\t   * Get the current width of the HTML5 media element.\n\t   *\n\t   * @return {number}\n\t   *         The width of the HTML5 media element.\n\t   */\n\t\n\t\n\t  Html5.prototype.width = function width() {\n\t    return this.el_.offsetWidth;\n\t  };\n\t\n\t  /**\n\t   * Get the current height of the HTML5 media element.\n\t   *\n\t   * @return {number}\n\t   *         The heigth of the HTML5 media element.\n\t   */\n\t\n\t\n\t  Html5.prototype.height = function height() {\n\t    return this.el_.offsetHeight;\n\t  };\n\t\n\t  /**\n\t   * Proxy iOS `webkitbeginfullscreen` and `webkitendfullscreen` into\n\t   * `fullscreenchange` event.\n\t   *\n\t   * @private\n\t   * @fires fullscreenchange\n\t   * @listens webkitendfullscreen\n\t   * @listens webkitbeginfullscreen\n\t   * @listens webkitbeginfullscreen\n\t   */\n\t\n\t\n\t  Html5.prototype.proxyWebkitFullscreen_ = function proxyWebkitFullscreen_() {\n\t    var _this5 = this;\n\t\n\t    if (!('webkitDisplayingFullscreen' in this.el_)) {\n\t      return;\n\t    }\n\t\n\t    var endFn = function endFn() {\n\t      this.trigger('fullscreenchange', { isFullscreen: false });\n\t    };\n\t\n\t    var beginFn = function beginFn() {\n\t      this.one('webkitendfullscreen', endFn);\n\t\n\t      this.trigger('fullscreenchange', { isFullscreen: true });\n\t    };\n\t\n\t    this.on('webkitbeginfullscreen', beginFn);\n\t    this.on('dispose', function () {\n\t      _this5.off('webkitbeginfullscreen', beginFn);\n\t      _this5.off('webkitendfullscreen', endFn);\n\t    });\n\t  };\n\t\n\t  /**\n\t   * Check if fullscreen is supported on the current playback device.\n\t   *\n\t   * @return {boolean}\n\t   *         - True if fullscreen is supported.\n\t   *         - False if fullscreen is not supported.\n\t   */\n\t\n\t\n\t  Html5.prototype.supportsFullScreen = function supportsFullScreen() {\n\t    if (typeof this.el_.webkitEnterFullScreen === 'function') {\n\t      var userAgent = _window2['default'].navigator && _window2['default'].navigator.userAgent || '';\n\t\n\t      // Seems to be broken in Chromium/Chrome && Safari in Leopard\n\t      if (/Android/.test(userAgent) || !/Chrome|Mac OS X 10.5/.test(userAgent)) {\n\t        return true;\n\t      }\n\t    }\n\t    return false;\n\t  };\n\t\n\t  /**\n\t   * Request that the `HTML5` Tech enter fullscreen.\n\t   */\n\t\n\t\n\t  Html5.prototype.enterFullScreen = function enterFullScreen() {\n\t    var video = this.el_;\n\t\n\t    if (video.paused && video.networkState <= video.HAVE_METADATA) {\n\t      // attempt to prime the video element for programmatic access\n\t      // this isn't necessary on the desktop but shouldn't hurt\n\t      this.el_.play();\n\t\n\t      // playing and pausing synchronously during the transition to fullscreen\n\t      // can get iOS ~6.1 devices into a play/pause loop\n\t      this.setTimeout(function () {\n\t        video.pause();\n\t        video.webkitEnterFullScreen();\n\t      }, 0);\n\t    } else {\n\t      video.webkitEnterFullScreen();\n\t    }\n\t  };\n\t\n\t  /**\n\t   * Request that the `HTML5` Tech exit fullscreen.\n\t   */\n\t\n\t\n\t  Html5.prototype.exitFullScreen = function exitFullScreen() {\n\t    this.el_.webkitExitFullScreen();\n\t  };\n\t\n\t  /**\n\t   * A getter/setter for the `Html5` Tech's source object.\n\t   * > Note: Please use {@link Html5#setSource}\n\t   *\n\t   * @param {Tech~SourceObject} [src]\n\t   *        The source object you want to set on the `HTML5` techs element.\n\t   *\n\t   * @return {Tech~SourceObject|undefined}\n\t   *         - The current source object when a source is not passed in.\n\t   *         - undefined when setting\n\t   *\n\t   * @deprecated Since version 5.\n\t   */\n\t\n\t\n\t  Html5.prototype.src = function src(_src) {\n\t    if (_src === undefined) {\n\t      return this.el_.src;\n\t    }\n\t\n\t    // Setting src through `src` instead of `setSrc` will be deprecated\n\t    this.setSrc(_src);\n\t  };\n\t\n\t  /**\n\t   * Reset the tech by removing all sources and then calling\n\t   * {@link Html5.resetMediaElement}.\n\t   */\n\t\n\t\n\t  Html5.prototype.reset = function reset() {\n\t    Html5.resetMediaElement(this.el_);\n\t  };\n\t\n\t  /**\n\t   * Get the current source on the `HTML5` Tech. Falls back to returning the source from\n\t   * the HTML5 media element.\n\t   *\n\t   * @return {Tech~SourceObject}\n\t   *         The current source object from the HTML5 tech. With a fallback to the\n\t   *         elements source.\n\t   */\n\t\n\t\n\t  Html5.prototype.currentSrc = function currentSrc() {\n\t    if (this.currentSource_) {\n\t      return this.currentSource_.src;\n\t    }\n\t    return this.el_.currentSrc;\n\t  };\n\t\n\t  /**\n\t   * Set controls attribute for the HTML5 media Element.\n\t   *\n\t   * @param {string} val\n\t   *        Value to set the controls attribute to\n\t   */\n\t\n\t\n\t  Html5.prototype.setControls = function setControls(val) {\n\t    this.el_.controls = !!val;\n\t  };\n\t\n\t  /**\n\t   * Create and returns a remote {@link TextTrack} object.\n\t   *\n\t   * @param {string} kind\n\t   *        `TextTrack` kind (subtitles, captions, descriptions, chapters, or metadata)\n\t   *\n\t   * @param {string} [label]\n\t   *        Label to identify the text track\n\t   *\n\t   * @param {string} [language]\n\t   *        Two letter language abbreviation\n\t   *\n\t   * @return {TextTrack}\n\t   *         The TextTrack that gets created.\n\t   */\n\t\n\t\n\t  Html5.prototype.addTextTrack = function addTextTrack(kind, label, language) {\n\t    if (!this.featuresNativeTextTracks) {\n\t      return _Tech.prototype.addTextTrack.call(this, kind, label, language);\n\t    }\n\t\n\t    return this.el_.addTextTrack(kind, label, language);\n\t  };\n\t\n\t  /**\n\t   * Creates either native TextTrack or an emulated TextTrack depending\n\t   * on the value of `featuresNativeTextTracks`\n\t   *\n\t   * @param {Object} options\n\t   *        The object should contain the options to intialize the TextTrack with.\n\t   *\n\t   * @param {string} [options.kind]\n\t   *        `TextTrack` kind (subtitles, captions, descriptions, chapters, or metadata).\n\t   *\n\t   * @param {string} [options.label].\n\t   *        Label to identify the text track\n\t   *\n\t   * @param {string} [options.language]\n\t   *        Two letter language abbreviation.\n\t   *\n\t   * @param {boolean} [options.default]\n\t   *        Default this track to on.\n\t   *\n\t   * @param {string} [options.id]\n\t   *        The internal id to assign this track.\n\t   *\n\t   * @param {string} [options.src]\n\t   *        A source url for the track.\n\t   *\n\t   * @return {HTMLTrackElement}\n\t   *         The track element that gets created.\n\t   */\n\t\n\t\n\t  Html5.prototype.createRemoteTextTrack = function createRemoteTextTrack(options) {\n\t    if (!this.featuresNativeTextTracks) {\n\t      return _Tech.prototype.createRemoteTextTrack.call(this, options);\n\t    }\n\t    var htmlTrackElement = _document2['default'].createElement('track');\n\t\n\t    if (options.kind) {\n\t      htmlTrackElement.kind = options.kind;\n\t    }\n\t    if (options.label) {\n\t      htmlTrackElement.label = options.label;\n\t    }\n\t    if (options.language || options.srclang) {\n\t      htmlTrackElement.srclang = options.language || options.srclang;\n\t    }\n\t    if (options['default']) {\n\t      htmlTrackElement['default'] = options['default'];\n\t    }\n\t    if (options.id) {\n\t      htmlTrackElement.id = options.id;\n\t    }\n\t    if (options.src) {\n\t      htmlTrackElement.src = options.src;\n\t    }\n\t\n\t    return htmlTrackElement;\n\t  };\n\t\n\t  /**\n\t   * Creates a remote text track object and returns an html track element.\n\t   *\n\t   * @param {Object} options The object should contain values for\n\t   * kind, language, label, and src (location of the WebVTT file)\n\t   * @param {Boolean} [manualCleanup=true] if set to false, the TextTrack will be\n\t   * automatically removed from the video element whenever the source changes\n\t   * @return {HTMLTrackElement} An Html Track Element.\n\t   * This can be an emulated {@link HTMLTrackElement} or a native one.\n\t   * @deprecated The default value of the \"manualCleanup\" parameter will default\n\t   * to \"false\" in upcoming versions of Video.js\n\t   */\n\t\n\t\n\t  Html5.prototype.addRemoteTextTrack = function addRemoteTextTrack(options, manualCleanup) {\n\t    var htmlTrackElement = _Tech.prototype.addRemoteTextTrack.call(this, options, manualCleanup);\n\t\n\t    if (this.featuresNativeTextTracks) {\n\t      this.el().appendChild(htmlTrackElement);\n\t    }\n\t\n\t    return htmlTrackElement;\n\t  };\n\t\n\t  /**\n\t   * Remove remote `TextTrack` from `TextTrackList` object\n\t   *\n\t   * @param {TextTrack} track\n\t   *        `TextTrack` object to remove\n\t   */\n\t\n\t\n\t  Html5.prototype.removeRemoteTextTrack = function removeRemoteTextTrack(track) {\n\t    _Tech.prototype.removeRemoteTextTrack.call(this, track);\n\t\n\t    if (this.featuresNativeTextTracks) {\n\t      var tracks = this.$$('track');\n\t\n\t      var i = tracks.length;\n\t\n\t      while (i--) {\n\t        if (track === tracks[i] || track === tracks[i].track) {\n\t          this.el().removeChild(tracks[i]);\n\t        }\n\t      }\n\t    }\n\t  };\n\t\n\t  return Html5;\n\t}(_tech2['default']);\n\t\n\t/* HTML5 Support Testing ---------------------------------------------------- */\n\t\n\t/**\n\t * Element for testing browser HTML5 media capabilities\n\t *\n\t * @type {Element}\n\t * @constant\n\t * @private\n\t */\n\t\n\t\n\tHtml5.TEST_VID = _document2['default'].createElement('video');\n\tvar track = _document2['default'].createElement('track');\n\t\n\ttrack.kind = 'captions';\n\ttrack.srclang = 'en';\n\ttrack.label = 'English';\n\tHtml5.TEST_VID.appendChild(track);\n\t\n\t/**\n\t * Check if HTML5 media is supported by this browser/device.\n\t *\n\t * @return {boolean}\n\t *         - True if HTML5 media is supported.\n\t *         - False if HTML5 media is not supported.\n\t */\n\tHtml5.isSupported = function () {\n\t  // IE9 with no Media Player is a LIAR! (#984)\n\t  try {\n\t    Html5.TEST_VID.volume = 0.5;\n\t  } catch (e) {\n\t    return false;\n\t  }\n\t\n\t  return !!Html5.TEST_VID.canPlayType;\n\t};\n\t\n\t/**\n\t * Check if the volume can be changed in this browser/device.\n\t * Volume cannot be changed in a lot of mobile devices.\n\t * Specifically, it can't be changed from 1 on iOS.\n\t *\n\t * @return {boolean}\n\t *         - True if volume can be controlled\n\t *         - False otherwise\n\t */\n\tHtml5.canControlVolume = function () {\n\t  // IE will error if Windows Media Player not installed #3315\n\t  try {\n\t    var volume = Html5.TEST_VID.volume;\n\t\n\t    Html5.TEST_VID.volume = volume / 2 + 0.1;\n\t    return volume !== Html5.TEST_VID.volume;\n\t  } catch (e) {\n\t    return false;\n\t  }\n\t};\n\t\n\t/**\n\t * Check if the playback rate can be changed in this browser/device.\n\t *\n\t * @return {boolean}\n\t *         - True if playback rate can be controlled\n\t *         - False otherwise\n\t */\n\tHtml5.canControlPlaybackRate = function () {\n\t  // Playback rate API is implemented in Android Chrome, but doesn't do anything\n\t  // https://github.com/videojs/video.js/issues/3180\n\t  if (browser.IS_ANDROID && browser.IS_CHROME) {\n\t    return false;\n\t  }\n\t  // IE will error if Windows Media Player not installed #3315\n\t  try {\n\t    var playbackRate = Html5.TEST_VID.playbackRate;\n\t\n\t    Html5.TEST_VID.playbackRate = playbackRate / 2 + 0.1;\n\t    return playbackRate !== Html5.TEST_VID.playbackRate;\n\t  } catch (e) {\n\t    return false;\n\t  }\n\t};\n\t\n\t/**\n\t * Check to see if native `TextTrack`s are supported by this browser/device.\n\t *\n\t * @return {boolean}\n\t *         - True if native `TextTrack`s are supported.\n\t *         - False otherwise\n\t */\n\tHtml5.supportsNativeTextTracks = function () {\n\t  return browser.IS_ANY_SAFARI;\n\t};\n\t\n\t/**\n\t * Check to see if native `VideoTrack`s are supported by this browser/device\n\t *\n\t * @return {boolean}\n\t *        - True if native `VideoTrack`s are supported.\n\t *        - False otherwise\n\t */\n\tHtml5.supportsNativeVideoTracks = function () {\n\t  var supportsVideoTracks = !!Html5.TEST_VID.videoTracks;\n\t\n\t  return supportsVideoTracks;\n\t};\n\t\n\t/**\n\t * Check to see if native `AudioTrack`s are supported by this browser/device\n\t *\n\t * @return {boolean}\n\t *        - True if native `AudioTrack`s are supported.\n\t *        - False otherwise\n\t */\n\tHtml5.supportsNativeAudioTracks = function () {\n\t  var supportsAudioTracks = !!Html5.TEST_VID.audioTracks;\n\t\n\t  return supportsAudioTracks;\n\t};\n\t\n\t/**\n\t * An array of events available on the Html5 tech.\n\t *\n\t * @private\n\t * @type {Array}\n\t */\n\tHtml5.Events = ['loadstart', 'suspend', 'abort', 'error', 'emptied', 'stalled', 'loadedmetadata', 'loadeddata', 'canplay', 'canplaythrough', 'playing', 'waiting', 'seeking', 'seeked', 'ended', 'durationchange', 'timeupdate', 'progress', 'play', 'pause', 'ratechange', 'volumechange'];\n\t\n\t/**\n\t * Boolean indicating whether the `Tech` supports volume control.\n\t *\n\t * @type {boolean}\n\t * @default {@link Html5.canControlVolume}\n\t */\n\tHtml5.prototype.featuresVolumeControl = Html5.canControlVolume();\n\t\n\t/**\n\t * Boolean indicating whether the `Tech` supports changing the speed at which the media\n\t * plays. Examples:\n\t *   - Set player to play 2x (twice) as fast\n\t *   - Set player to play 0.5x (half) as fast\n\t *\n\t * @type {boolean}\n\t * @default {@link Html5.canControlPlaybackRate}\n\t */\n\tHtml5.prototype.featuresPlaybackRate = Html5.canControlPlaybackRate();\n\t\n\t/**\n\t * Boolean indicating whether the `HTML5` tech currently supports the media element\n\t * moving in the DOM. iOS breaks if you move the media element, so this is set this to\n\t * false there. Everywhere else this should be true.\n\t *\n\t * @type {boolean}\n\t * @default\n\t */\n\tHtml5.prototype.movingMediaElementInDOM = !browser.IS_IOS;\n\t\n\t// TODO: Previous comment: No longer appears to be used. Can probably be removed.\n\t//       Is this true?\n\t/**\n\t * Boolean indicating whether the `HTML5` tech currently supports automatic media resize\n\t * when going into fullscreen.\n\t *\n\t * @type {boolean}\n\t * @default\n\t */\n\tHtml5.prototype.featuresFullscreenResize = true;\n\t\n\t/**\n\t * Boolean indicating whether the `HTML5` tech currently supports the progress event.\n\t * If this is false, manual `progress` events will be triggred instead.\n\t *\n\t * @type {boolean}\n\t * @default\n\t */\n\tHtml5.prototype.featuresProgressEvents = true;\n\t\n\t/**\n\t * Boolean indicating whether the `HTML5` tech currently supports the timeupdate event.\n\t * If this is false, manual `timeupdate` events will be triggred instead.\n\t *\n\t * @default\n\t */\n\tHtml5.prototype.featuresTimeupdateEvents = true;\n\t\n\t/**\n\t * Boolean indicating whether the `HTML5` tech currently supports native `TextTrack`s.\n\t *\n\t * @type {boolean}\n\t * @default {@link Html5.supportsNativeTextTracks}\n\t */\n\tHtml5.prototype.featuresNativeTextTracks = Html5.supportsNativeTextTracks();\n\t\n\t/**\n\t * Boolean indicating whether the `HTML5` tech currently supports native `VideoTrack`s.\n\t *\n\t * @type {boolean}\n\t * @default {@link Html5.supportsNativeVideoTracks}\n\t */\n\tHtml5.prototype.featuresNativeVideoTracks = Html5.supportsNativeVideoTracks();\n\t\n\t/**\n\t * Boolean indicating whether the `HTML5` tech currently supports native `AudioTrack`s.\n\t *\n\t * @type {boolean}\n\t * @default {@link Html5.supportsNativeAudioTracks}\n\t */\n\tHtml5.prototype.featuresNativeAudioTracks = Html5.supportsNativeAudioTracks();\n\t\n\t// HTML5 Feature detection and Device Fixes --------------------------------- //\n\tvar canPlayType = void 0;\n\tvar mpegurlRE = /^application\\/(?:x-|vnd\\.apple\\.)mpegurl/i;\n\tvar mp4RE = /^video\\/mp4/i;\n\t\n\tHtml5.patchCanPlayType = function () {\n\t  // Android 4.0 and above can play HLS to some extent but it reports being unable to do so\n\t  if (browser.ANDROID_VERSION >= 4.0 && !browser.IS_FIREFOX) {\n\t    if (!canPlayType) {\n\t      canPlayType = Html5.TEST_VID.constructor.prototype.canPlayType;\n\t    }\n\t\n\t    Html5.TEST_VID.constructor.prototype.canPlayType = function (type) {\n\t      if (type && mpegurlRE.test(type)) {\n\t        return 'maybe';\n\t      }\n\t      return canPlayType.call(this, type);\n\t    };\n\t  }\n\t\n\t  // Override Android 2.2 and less canPlayType method which is broken\n\t  if (browser.IS_OLD_ANDROID) {\n\t    if (!canPlayType) {\n\t      canPlayType = Html5.TEST_VID.constructor.prototype.canPlayType;\n\t    }\n\t\n\t    Html5.TEST_VID.constructor.prototype.canPlayType = function (type) {\n\t      if (type && mp4RE.test(type)) {\n\t        return 'maybe';\n\t      }\n\t      return canPlayType.call(this, type);\n\t    };\n\t  }\n\t};\n\t\n\tHtml5.unpatchCanPlayType = function () {\n\t  var r = Html5.TEST_VID.constructor.prototype.canPlayType;\n\t\n\t  Html5.TEST_VID.constructor.prototype.canPlayType = canPlayType;\n\t  canPlayType = null;\n\t  return r;\n\t};\n\t\n\t// by default, patch the media element\n\tHtml5.patchCanPlayType();\n\t\n\tHtml5.disposeMediaElement = function (el) {\n\t  if (!el) {\n\t    return;\n\t  }\n\t\n\t  if (el.parentNode) {\n\t    el.parentNode.removeChild(el);\n\t  }\n\t\n\t  // remove any child track or source nodes to prevent their loading\n\t  while (el.hasChildNodes()) {\n\t    el.removeChild(el.firstChild);\n\t  }\n\t\n\t  // remove any src reference. not setting `src=''` because that causes a warning\n\t  // in firefox\n\t  el.removeAttribute('src');\n\t\n\t  // force the media element to update its loading state by calling load()\n\t  // however IE on Windows 7N has a bug that throws an error so need a try/catch (#793)\n\t  if (typeof el.load === 'function') {\n\t    // wrapping in an iife so it's not deoptimized (#1060#discussion_r10324473)\n\t    (function () {\n\t      try {\n\t        el.load();\n\t      } catch (e) {\n\t        // not supported\n\t      }\n\t    })();\n\t  }\n\t};\n\t\n\tHtml5.resetMediaElement = function (el) {\n\t  if (!el) {\n\t    return;\n\t  }\n\t\n\t  var sources = el.querySelectorAll('source');\n\t  var i = sources.length;\n\t\n\t  while (i--) {\n\t    el.removeChild(sources[i]);\n\t  }\n\t\n\t  // remove any src reference.\n\t  // not setting `src=''` because that throws an error\n\t  el.removeAttribute('src');\n\t\n\t  if (typeof el.load === 'function') {\n\t    // wrapping in an iife so it's not deoptimized (#1060#discussion_r10324473)\n\t    (function () {\n\t      try {\n\t        el.load();\n\t      } catch (e) {\n\t        // satisfy linter\n\t      }\n\t    })();\n\t  }\n\t};\n\t\n\t/* Native HTML5 element property wrapping ----------------------------------- */\n\t// Wrap native properties with a getter\n\t[\n\t/**\n\t * Get the value of `paused` from the media element. `paused` indicates whether the media element\n\t * is currently paused or not.\n\t *\n\t * @method Html5.prototype.paused\n\t * @return {boolean}\n\t *         The value of `paused` from the media element.\n\t *\n\t * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-paused}\n\t */\n\t'paused',\n\t\n\t/**\n\t * Get the value of `currentTime` from the media element. `currentTime` indicates\n\t * the current second that the media is at in playback.\n\t *\n\t * @method Html5.prototype.currentTime\n\t * @return {number}\n\t *         The value of `currentTime` from the media element.\n\t *\n\t * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-currenttime}\n\t */\n\t'currentTime',\n\t\n\t/**\n\t * Get the value of `buffered` from the media element. `buffered` is a `TimeRange`\n\t * object that represents the parts of the media that are already downloaded and\n\t * available for playback.\n\t *\n\t * @method Html5.prototype.buffered\n\t * @return {TimeRange}\n\t *         The value of `buffered` from the media element.\n\t *\n\t * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-buffered}\n\t */\n\t'buffered',\n\t\n\t/**\n\t * Get the value of `volume` from the media element. `volume` indicates\n\t * the current playback volume of audio for a media. `volume` will be a value from 0\n\t * (silent) to 1 (loudest and default).\n\t *\n\t * @method Html5.prototype.volume\n\t * @return {number}\n\t *         The value of `volume` from the media element. Value will be between 0-1.\n\t *\n\t * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-a-volume}\n\t */\n\t'volume',\n\t\n\t/**\n\t * Get the value of `muted` from the media element. `muted` indicates\n\t * that the volume for the media should be set to silent. This does not actually change\n\t * the `volume` attribute.\n\t *\n\t * @method Html5.prototype.muted\n\t * @return {boolean}\n\t *         - True if the value of `volume` should be ignored and the audio set to silent.\n\t *         - False if the value of `volume` should be used.\n\t *\n\t * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-muted}\n\t */\n\t'muted',\n\t\n\t/**\n\t * Get the value of `poster` from the media element. `poster` indicates\n\t * that the url of an image file that can/will be shown when no media data is available.\n\t *\n\t * @method Html5.prototype.poster\n\t * @return {string}\n\t *         The value of `poster` from the media element. Value will be a url to an\n\t *         image.\n\t *\n\t * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#attr-video-poster}\n\t */\n\t'poster',\n\t\n\t/**\n\t * Get the value of `preload` from the media element. `preload` indicates\n\t * what should download before the media is interacted with. It can have the following\n\t * values:\n\t * - none: nothing should be downloaded\n\t * - metadata: poster and the first few frames of the media may be downloaded to get\n\t *   media dimensions and other metadata\n\t * - auto: allow the media and metadata for the media to be downloaded before\n\t *    interaction\n\t *\n\t * @method Html5.prototype.preload\n\t * @return {string}\n\t *         The value of `preload` from the media element. Will be 'none', 'metadata',\n\t *         or 'auto'.\n\t *\n\t * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#attr-media-preload}\n\t */\n\t'preload',\n\t\n\t/**\n\t * Get the value of `autoplay` from the media element. `autoplay` indicates\n\t * that the media should start to play as soon as the page is ready.\n\t *\n\t * @method Html5.prototype.autoplay\n\t * @return {boolean}\n\t *         - The value of `autoplay` from the media element.\n\t *         - True indicates that the media should start as soon as the page loads.\n\t *         - False indicates that the media should not start as soon as the page loads.\n\t *\n\t * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#attr-media-autoplay}\n\t */\n\t'autoplay',\n\t\n\t/**\n\t * Get the value of `controls` from the media element. `controls` indicates\n\t * whether the native media controls should be shown or hidden.\n\t *\n\t * @method Html5.prototype.controls\n\t * @return {boolean}\n\t *         - The value of `controls` from the media element.\n\t *         - True indicates that native controls should be showing.\n\t *         - False indicates that native controls should be hidden.\n\t *\n\t * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#attr-media-controls}\n\t */\n\t'controls',\n\t\n\t/**\n\t * Get the value of `loop` from the media element. `loop` indicates\n\t * that the media should return to the start of the media and continue playing once\n\t * it reaches the end.\n\t *\n\t * @method Html5.prototype.loop\n\t * @return {boolean}\n\t *         - The value of `loop` from the media element.\n\t *         - True indicates that playback should seek back to start once\n\t *           the end of a media is reached.\n\t *         - False indicates that playback should not loop back to the start when the\n\t *           end of the media is reached.\n\t *\n\t * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#attr-media-loop}\n\t */\n\t'loop',\n\t\n\t/**\n\t * Get the value of the `error` from the media element. `error` indicates any\n\t * MediaError that may have occured during playback. If error returns null there is no\n\t * current error.\n\t *\n\t * @method Html5.prototype.error\n\t * @return {MediaError|null}\n\t *         The value of `error` from the media element. Will be `MediaError` if there\n\t *         is a current error and null otherwise.\n\t *\n\t * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-error}\n\t */\n\t'error',\n\t\n\t/**\n\t * Get the value of `seeking` from the media element. `seeking` indicates whether the\n\t * media is currently seeking to a new position or not.\n\t *\n\t * @method Html5.prototype.seeking\n\t * @return {boolean}\n\t *         - The value of `seeking` from the media element.\n\t *         - True indicates that the media is currently seeking to a new position.\n\t *         - Flase indicates that the media is not seeking to a new position at this time.\n\t *\n\t * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-seeking}\n\t */\n\t'seeking',\n\t\n\t/**\n\t * Get the value of `seekable` from the media element. `seekable` returns a\n\t * `TimeRange` object indicating ranges of time that can currently be `seeked` to.\n\t *\n\t * @method Html5.prototype.seekable\n\t * @return {TimeRange}\n\t *         The value of `seekable` from the media element. A `TimeRange` object\n\t *         indicating the current ranges of time that can be seeked to.\n\t *\n\t * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-seekable}\n\t */\n\t'seekable',\n\t\n\t/**\n\t * Get the value of `ended` from the media element. `ended` indicates whether\n\t * the media has reached the end or not.\n\t *\n\t * @method Html5.prototype.ended\n\t * @return {boolean}\n\t *         - The value of `ended` from the media element.\n\t *         - True indicates that the media has ended.\n\t *         - False indicates that the media has not ended.\n\t *\n\t * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-ended}\n\t */\n\t'ended',\n\t\n\t/**\n\t * Get the value of `defaultMuted` from the media element. `defaultMuted` indicates\n\t * whether the media should start muted or not. Only changes the default state of the\n\t * media. `muted` and `defaultMuted` can have different values. `muted` indicates the\n\t * current state.\n\t *\n\t * @method Html5.prototype.defaultMuted\n\t * @return {boolean}\n\t *         - The value of `defaultMuted` from the media element.\n\t *         - True indicates that the media should start muted.\n\t *         - False indicates that the media should not start muted\n\t *\n\t * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-defaultmuted}\n\t */\n\t'defaultMuted',\n\t\n\t/**\n\t * Get the value of `playbackRate` from the media element. `playbackRate` indicates\n\t * the rate at which the media is currently playing back. Examples:\n\t *   - if playbackRate is set to 2, media will play twice as fast.\n\t *   - if playbackRate is set to 0.5, media will play half as fast.\n\t *\n\t * @method Html5.prototype.playbackRate\n\t * @return {number}\n\t *         The value of `playbackRate` from the media element. A number indicating\n\t *         the current playback speed of the media, where 1 is normal speed.\n\t *\n\t * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-playbackrate}\n\t */\n\t'playbackRate',\n\t\n\t/**\n\t * Get the value of `played` from the media element. `played` returns a `TimeRange`\n\t * object representing points in the media timeline that have been played.\n\t *\n\t * @method Html5.prototype.played\n\t * @return {TimeRange}\n\t *         The value of `played` from the media element. A `TimeRange` object indicating\n\t *         the ranges of time that have been played.\n\t *\n\t * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-played}\n\t */\n\t'played',\n\t\n\t/**\n\t * Get the value of `networkState` from the media element. `networkState` indicates\n\t * the current network state. It returns an enumeration from the following list:\n\t * - 0: NETWORK_EMPTY\n\t * - 1: NEWORK_IDLE\n\t * - 2: NETWORK_LOADING\n\t * - 3: NETWORK_NO_SOURCE\n\t *\n\t * @method Html5.prototype.networkState\n\t * @return {number}\n\t *         The value of `networkState` from the media element. This will be a number\n\t *         from the list in the description.\n\t *\n\t * @see [Spec] {@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-networkstate}\n\t */\n\t'networkState',\n\t\n\t/**\n\t * Get the value of `readyState` from the media element. `readyState` indicates\n\t * the current state of the media element. It returns an enumeration from the\n\t * following list:\n\t * - 0: HAVE_NOTHING\n\t * - 1: HAVE_METADATA\n\t * - 2: HAVE_CURRENT_DATA\n\t * - 3: HAVE_FUTURE_DATA\n\t * - 4: HAVE_ENOUGH_DATA\n\t *\n\t * @method Html5.prototype.readyState\n\t * @return {number}\n\t *         The value of `readyState` from the media element. This will be a number\n\t *         from the list in the description.\n\t *\n\t * @see [Spec] {@link https://www.w3.org/TR/html5/embedded-content-0.html#ready-states}\n\t */\n\t'readyState',\n\t\n\t/**\n\t * Get the value of `videoWidth` from the video element. `videoWidth` indicates\n\t * the current width of the video in css pixels.\n\t *\n\t * @method Html5.prototype.videoWidth\n\t * @return {number}\n\t *         The value of `videoWidth` from the video element. This will be a number\n\t *         in css pixels.\n\t *\n\t * @see [Spec] {@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-video-videowidth}\n\t */\n\t'videoWidth',\n\t\n\t/**\n\t * Get the value of `videoHeight` from the video element. `videoHeigth` indicates\n\t * the current height of the video in css pixels.\n\t *\n\t * @method Html5.prototype.videoHeight\n\t * @return {number}\n\t *         The value of `videoHeight` from the video element. This will be a number\n\t *         in css pixels.\n\t *\n\t * @see [Spec] {@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-video-videowidth}\n\t */\n\t'videoHeight'].forEach(function (prop) {\n\t  Html5.prototype[prop] = function () {\n\t    return this.el_[prop];\n\t  };\n\t});\n\t\n\t// Wrap native properties with a setter in this format:\n\t// set + toTitleCase(name)\n\t[\n\t/**\n\t * Set the value of `volume` on the media element. `volume` indicates the current\n\t * audio level as a percentage in decimal form. This means that 1 is 100%, 0.5 is 50%, and\n\t * so on.\n\t *\n\t * @method Html5.prototype.setVolume\n\t * @param {number} percentAsDecimal\n\t *        The volume percent as a decimal. Valid range is from 0-1.\n\t *\n\t * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-a-volume}\n\t */\n\t'volume',\n\t\n\t/**\n\t * Set the value of `muted` on the media element. `muted` indicates the current\n\t * audio level should be silent.\n\t *\n\t * @method Html5.prototype.setMuted\n\t * @param {boolean} muted\n\t *        - True if the audio should be set to silent\n\t *        - False otherwise\n\t *\n\t * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-muted}\n\t */\n\t'muted',\n\t\n\t/**\n\t * Set the value of `src` on the media element. `src` indicates the current\n\t * {@link Tech~SourceObject} for the media.\n\t *\n\t * @method Html5.prototype.setSrc\n\t * @param {Tech~SourceObject} src\n\t *        The source object to set as the current source.\n\t *\n\t * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-src}\n\t */\n\t'src',\n\t\n\t/**\n\t * Set the value of `poster` on the media element. `poster` is the url to\n\t * an image file that can/will be shown when no media data is available.\n\t *\n\t * @method Html5.prototype.setPoster\n\t * @param {string} poster\n\t *        The url to an image that should be used as the `poster` for the media\n\t *        element.\n\t *\n\t * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#attr-media-poster}\n\t */\n\t'poster',\n\t\n\t/**\n\t * Set the value of `preload` on the media element. `preload` indicates\n\t * what should download before the media is interacted with. It can have the following\n\t * values:\n\t * - none: nothing should be downloaded\n\t * - metadata: poster and the first few frames of the media may be downloaded to get\n\t *   media dimensions and other metadata\n\t * - auto: allow the media and metadata for the media to be downloaded before\n\t *    interaction\n\t *\n\t * @method Html5.prototype.setPreload\n\t * @param {string} preload\n\t *         The value of `preload` to set on the media element. Must be 'none', 'metadata',\n\t *         or 'auto'.\n\t *\n\t * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#attr-media-preload}\n\t */\n\t'preload',\n\t\n\t/**\n\t * Set the value of `autoplay` on the media element. `autoplay` indicates\n\t * that the media should start to play as soon as the page is ready.\n\t *\n\t * @method Html5.prototype.setAutoplay\n\t * @param {boolean} autoplay\n\t *         - True indicates that the media should start as soon as the page loads.\n\t *         - False indicates that the media should not start as soon as the page loads.\n\t *\n\t * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#attr-media-autoplay}\n\t */\n\t'autoplay',\n\t\n\t/**\n\t * Set the value of `loop` on the media element. `loop` indicates\n\t * that the media should return to the start of the media and continue playing once\n\t * it reaches the end.\n\t *\n\t * @method Html5.prototype.setLoop\n\t * @param {boolean} loop\n\t *         - True indicates that playback should seek back to start once\n\t *           the end of a media is reached.\n\t *         - False indicates that playback should not loop back to the start when the\n\t *           end of the media is reached.\n\t *\n\t * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#attr-media-loop}\n\t */\n\t'loop',\n\t\n\t/**\n\t * Set the value of `playbackRate` on the media element. `playbackRate` indicates\n\t * the rate at which the media should play back. Examples:\n\t *   - if playbackRate is set to 2, media will play twice as fast.\n\t *   - if playbackRate is set to 0.5, media will play half as fast.\n\t *\n\t * @method Html5.prototype.setPlaybackRate\n\t * @return {number}\n\t *         The value of `playbackRate` from the media element. A number indicating\n\t *         the current playback speed of the media, where 1 is normal speed.\n\t *\n\t * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-playbackrate}\n\t */\n\t'playbackRate'].forEach(function (prop) {\n\t  Html5.prototype['set' + (0, _toTitleCase2['default'])(prop)] = function (v) {\n\t    this.el_[prop] = v;\n\t  };\n\t});\n\t\n\t// wrap native functions with a function\n\t[\n\t/**\n\t * A wrapper around the media elements `pause` function. This will call the `HTML5`\n\t * media elements `pause` function.\n\t *\n\t * @method Html5.prototype.pause\n\t * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-pause}\n\t */\n\t'pause',\n\t\n\t/**\n\t * A wrapper around the media elements `load` function. This will call the `HTML5`s\n\t * media element `load` function.\n\t *\n\t * @method Html5.prototype.load\n\t * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-load}\n\t */\n\t'load'].forEach(function (prop) {\n\t  Html5.prototype[prop] = function () {\n\t    return this.el_[prop]();\n\t  };\n\t});\n\t\n\t_tech2['default'].withSourceHandlers(Html5);\n\t\n\t/**\n\t * Native source handler for Html5, simply passes the source to the media element.\n\t *\n\t * @proprety {Tech~SourceObject} source\n\t *        The source object\n\t *\n\t * @proprety {Html5} tech\n\t *        The instance of the HTML5 tech.\n\t */\n\tHtml5.nativeSourceHandler = {};\n\t\n\t/**\n\t * Check if the media element can play the given mime type.\n\t *\n\t * @param {string} type\n\t *        The mimetype to check\n\t *\n\t * @return {string}\n\t *         'probably', 'maybe', or '' (empty string)\n\t */\n\tHtml5.nativeSourceHandler.canPlayType = function (type) {\n\t  // IE9 on Windows 7 without MediaPlayer throws an error here\n\t  // https://github.com/videojs/video.js/issues/519\n\t  try {\n\t    return Html5.TEST_VID.canPlayType(type);\n\t  } catch (e) {\n\t    return '';\n\t  }\n\t};\n\t\n\t/**\n\t * Check if the media element can handle a source natively.\n\t *\n\t * @param {Tech~SourceObject} source\n\t *         The source object\n\t *\n\t * @param {Object} [options]\n\t *         Options to be passed to the tech.\n\t *\n\t * @return {string}\n\t *         'probably', 'maybe', or '' (empty string).\n\t */\n\tHtml5.nativeSourceHandler.canHandleSource = function (source, options) {\n\t\n\t  // If a type was provided we should rely on that\n\t  if (source.type) {\n\t    return Html5.nativeSourceHandler.canPlayType(source.type);\n\t\n\t    // If no type, fall back to checking 'video/[EXTENSION]'\n\t  } else if (source.src) {\n\t    var ext = Url.getFileExtension(source.src);\n\t\n\t    return Html5.nativeSourceHandler.canPlayType('video/' + ext);\n\t  }\n\t\n\t  return '';\n\t};\n\t\n\t/**\n\t * Pass the source to the native media element.\n\t *\n\t * @param {Tech~SourceObject} source\n\t *        The source object\n\t *\n\t * @param {Html5} tech\n\t *        The instance of the Html5 tech\n\t *\n\t * @param {Object} [options]\n\t *        The options to pass to the source\n\t */\n\tHtml5.nativeSourceHandler.handleSource = function (source, tech, options) {\n\t  tech.setSrc(source.src);\n\t};\n\t\n\t/**\n\t * A noop for the native dispose function, as cleanup is not needed.\n\t */\n\tHtml5.nativeSourceHandler.dispose = function () {};\n\t\n\t// Register the native source handler\n\tHtml5.registerSourceHandler(Html5.nativeSourceHandler);\n\t\n\t_component2['default'].registerComponent('Html5', Html5);\n\t_tech2['default'].registerTech('Html5', Html5);\n\texports['default'] = Html5;\n\n\n/***/ },\n/* 104 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\texports.__esModule = true;\n\t\n\tvar _player = __webpack_require__(21);\n\t\n\tvar _player2 = _interopRequireDefault(_player);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\t\n\t/**\n\t *\n\t */\n\t/**\n\t * The method for registering a video.js plugin. {@link videojs:videojs.registerPlugin].\n\t *\n\t * @param {string} name\n\t *        The name of the plugin that is being registered\n\t *\n\t * @param {plugins:PluginFn} init\n\t *        The function that gets run when a `Player` initializes.\n\t */\n\tvar plugin = function plugin(name, init) {\n\t  _player2['default'].prototype[name] = init;\n\t}; /**\n\t    * @file plugins.js\n\t    * @module plugins\n\t    */\n\texports['default'] = plugin;\n\n\n/***/ },\n/* 105 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\texports.__esModule = true;\n\t\n\tvar _trackEnums = __webpack_require__(33);\n\t\n\tvar _track = __webpack_require__(34);\n\t\n\tvar _track2 = _interopRequireDefault(_track);\n\t\n\tvar _mergeOptions = __webpack_require__(19);\n\t\n\tvar _mergeOptions2 = _interopRequireDefault(_mergeOptions);\n\t\n\tvar _browser = __webpack_require__(12);\n\t\n\tvar browser = _interopRequireWildcard(_browser);\n\t\n\tfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj['default'] = obj; return newObj; } }\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\t/**\n\t * A representation of a single `AudioTrack`. If it is part of an {@link AudioTrackList}\n\t * only one `AudioTrack` in the list will be enabled at a time.\n\t *\n\t * @see [Spec]{@link https://html.spec.whatwg.org/multipage/embedded-content.html#audiotrack}\n\t * @extends Track\n\t */\n\tvar AudioTrack = function (_Track) {\n\t  _inherits(AudioTrack, _Track);\n\t\n\t  /**\n\t   * Create an instance of this class.\n\t   *\n\t   * @param {Object} [options={}]\n\t   *        Object of option names and values\n\t   *\n\t   * @param {AudioTrack~Kind} [options.kind='']\n\t   *        A valid audio track kind\n\t   *\n\t   * @param {string} [options.id='vjs_track_' + Guid.newGUID()]\n\t   *        A unique id for this AudioTrack.\n\t   *\n\t   * @param {string} [options.label='']\n\t   *        The menu label for this track.\n\t   *\n\t   * @param {string} [options.language='']\n\t   *        A valid two character language code.\n\t   *\n\t   * @param {boolean} [options.enabled]\n\t   *        If this track is the one that is currently playing. If this track is part of\n\t   *        an {@link AudioTrackList}, only one {@link AudioTrack} will be enabled.\n\t   */\n\t  function AudioTrack() {\n\t    var _this, _ret;\n\t\n\t    var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\t\n\t    _classCallCheck(this, AudioTrack);\n\t\n\t    var settings = (0, _mergeOptions2['default'])(options, {\n\t      kind: _trackEnums.AudioTrackKind[options.kind] || ''\n\t    });\n\t    // on IE8 this will be a document element\n\t    // for every other browser this will be a normal object\n\t    var track = (_this = _possibleConstructorReturn(this, _Track.call(this, settings)), _this);\n\t    var enabled = false;\n\t\n\t    if (browser.IS_IE8) {\n\t      for (var prop in AudioTrack.prototype) {\n\t        if (prop !== 'constructor') {\n\t          track[prop] = AudioTrack.prototype[prop];\n\t        }\n\t      }\n\t    }\n\t    /**\n\t     * @member {boolean} enabled\n\t     *         If this `AudioTrack` is enabled or not. When setting this will\n\t     *         fire {@link AudioTrack#enabledchange} if the state of enabled is changed.\n\t     *\n\t     * @fires VideoTrack#selectedchange\n\t     */\n\t    Object.defineProperty(track, 'enabled', {\n\t      get: function get() {\n\t        return enabled;\n\t      },\n\t      set: function set(newEnabled) {\n\t        // an invalid or unchanged value\n\t        if (typeof newEnabled !== 'boolean' || newEnabled === enabled) {\n\t          return;\n\t        }\n\t        enabled = newEnabled;\n\t\n\t        /**\n\t         * An event that fires when enabled changes on this track. This allows\n\t         * the AudioTrackList that holds this track to act accordingly.\n\t         *\n\t         * > Note: This is not part of the spec! Native tracks will do\n\t         *         this internally without an event.\n\t         *\n\t         * @event AudioTrack#enabledchange\n\t         * @type {EventTarget~Event}\n\t         */\n\t        this.trigger('enabledchange');\n\t      }\n\t    });\n\t\n\t    // if the user sets this track to selected then\n\t    // set selected to that true value otherwise\n\t    // we keep it false\n\t    if (settings.enabled) {\n\t      track.enabled = settings.enabled;\n\t    }\n\t    track.loaded_ = true;\n\t\n\t    return _ret = track, _possibleConstructorReturn(_this, _ret);\n\t  }\n\t\n\t  return AudioTrack;\n\t}(_track2['default']);\n\t\n\texports['default'] = AudioTrack;\n\n\n/***/ },\n/* 106 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\texports.__esModule = true;\n\t\n\tvar _trackEnums = __webpack_require__(33);\n\t\n\tvar _track = __webpack_require__(34);\n\t\n\tvar _track2 = _interopRequireDefault(_track);\n\t\n\tvar _mergeOptions = __webpack_require__(19);\n\t\n\tvar _mergeOptions2 = _interopRequireDefault(_mergeOptions);\n\t\n\tvar _browser = __webpack_require__(12);\n\t\n\tvar browser = _interopRequireWildcard(_browser);\n\t\n\tfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj['default'] = obj; return newObj; } }\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\t/**\n\t * A representation of a single `VideoTrack`.\n\t *\n\t * @see [Spec]{@link https://html.spec.whatwg.org/multipage/embedded-content.html#videotrack}\n\t * @extends Track\n\t */\n\tvar VideoTrack = function (_Track) {\n\t  _inherits(VideoTrack, _Track);\n\t\n\t  /**\n\t   * Create an instance of this class.\n\t   *\n\t   * @param {Object} [options={}]\n\t   *        Object of option names and values\n\t   *\n\t   * @param {string} [options.kind='']\n\t   *        A valid {@link VideoTrack~Kind}\n\t   *\n\t   * @param {string} [options.id='vjs_track_' + Guid.newGUID()]\n\t   *        A unique id for this AudioTrack.\n\t   *\n\t   * @param {string} [options.label='']\n\t   *        The menu label for this track.\n\t   *\n\t   * @param {string} [options.language='']\n\t   *        A valid two character language code.\n\t   *\n\t   * @param {boolean} [options.selected]\n\t   *        If this track is the one that is currently playing.\n\t   */\n\t  function VideoTrack() {\n\t    var _this, _ret;\n\t\n\t    var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\t\n\t    _classCallCheck(this, VideoTrack);\n\t\n\t    var settings = (0, _mergeOptions2['default'])(options, {\n\t      kind: _trackEnums.VideoTrackKind[options.kind] || ''\n\t    });\n\t\n\t    // on IE8 this will be a document element\n\t    // for every other browser this will be a normal object\n\t    var track = (_this = _possibleConstructorReturn(this, _Track.call(this, settings)), _this);\n\t    var selected = false;\n\t\n\t    if (browser.IS_IE8) {\n\t      for (var prop in VideoTrack.prototype) {\n\t        if (prop !== 'constructor') {\n\t          track[prop] = VideoTrack.prototype[prop];\n\t        }\n\t      }\n\t    }\n\t\n\t    /**\n\t     * @member {boolean} selected\n\t     *         If this `VideoTrack` is selected or not. When setting this will\n\t     *         fire {@link VideoTrack#selectedchange} if the state of selected changed.\n\t     *\n\t     * @fires VideoTrack#selectedchange\n\t     */\n\t    Object.defineProperty(track, 'selected', {\n\t      get: function get() {\n\t        return selected;\n\t      },\n\t      set: function set(newSelected) {\n\t        // an invalid or unchanged value\n\t        if (typeof newSelected !== 'boolean' || newSelected === selected) {\n\t          return;\n\t        }\n\t        selected = newSelected;\n\t\n\t        /**\n\t         * An event that fires when selected changes on this track. This allows\n\t         * the VideoTrackList that holds this track to act accordingly.\n\t         *\n\t         * > Note: This is not part of the spec! Native tracks will do\n\t         *         this internally without an event.\n\t         *\n\t         * @event VideoTrack#selectedchange\n\t         * @type {EventTarget~Event}\n\t         */\n\t        this.trigger('selectedchange');\n\t      }\n\t    });\n\t\n\t    // if the user sets this track to selected then\n\t    // set selected to that true value otherwise\n\t    // we keep it false\n\t    if (settings.selected) {\n\t      track.selected = settings.selected;\n\t    }\n\t\n\t    return _ret = track, _possibleConstructorReturn(_this, _ret);\n\t  }\n\t\n\t  return VideoTrack;\n\t}(_track2['default']);\n\t\n\texports['default'] = VideoTrack;\n\n\n/***/ },\n/* 107 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\texports.__esModule = true;\n\t\n\tvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\t\n\tvar _log = __webpack_require__(11);\n\t\n\tvar _log2 = _interopRequireDefault(_log);\n\t\n\tvar _obj = __webpack_require__(13);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\t\n\t/*\n\t * @file extend.js\n\t *\n\t * A combination of node inherits and babel's inherits (after transpile).\n\t * Both work the same but node adds `super_` to the subClass\n\t * and Bable adds the superClass as __proto__. Both seem useful.\n\t */\n\tvar _inherits = function _inherits(subClass, superClass) {\n\t  if (typeof superClass !== 'function' && superClass !== null) {\n\t    throw new TypeError('Super expression must either be null or a function, not ' + (typeof superClass === 'undefined' ? 'undefined' : _typeof(superClass)));\n\t  }\n\t\n\t  subClass.prototype = Object.create(superClass && superClass.prototype, {\n\t    constructor: {\n\t      value: subClass,\n\t      enumerable: false,\n\t      writable: true,\n\t      configurable: true\n\t    }\n\t  });\n\t\n\t  if (superClass) {\n\t    // node\n\t    subClass.super_ = superClass;\n\t  }\n\t};\n\t\n\t/*\n\t * Function for subclassing using the same inheritance that\n\t * videojs uses internally\n\t * ```js\n\t * var Button = videojs.getComponent('Button');\n\t * ```\n\t * ```js\n\t * var MyButton = videojs.extend(Button, {\n\t *   constructor: function(player, options) {\n\t *     Button.call(this, player, options);\n\t *   },\n\t *   onClick: function() {\n\t *     // doSomething\n\t *   }\n\t * });\n\t * ```\n\t */\n\tvar extendFn = function extendFn(superClass) {\n\t  var subClassMethods = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\t\n\t  var subClass = function subClass() {\n\t    superClass.apply(this, arguments);\n\t  };\n\t\n\t  var methods = {};\n\t\n\t  if ((0, _obj.isObject)(subClassMethods)) {\n\t    if (typeof subClassMethods.init === 'function') {\n\t      _log2['default'].warn('Constructor logic via init() is deprecated; please use constructor() instead.');\n\t      subClassMethods.constructor = subClassMethods.init;\n\t    }\n\t    if (subClassMethods.constructor !== Object.prototype.constructor) {\n\t      subClass = subClassMethods.constructor;\n\t    }\n\t    methods = subClassMethods;\n\t  } else if (typeof subClassMethods === 'function') {\n\t    subClass = subClassMethods;\n\t  }\n\t\n\t  _inherits(subClass, superClass);\n\t\n\t  // Extend subObj's prototype with functions and other properties from props\n\t  for (var name in methods) {\n\t    if (methods.hasOwnProperty(name)) {\n\t      subClass.prototype[name] = methods[name];\n\t    }\n\t  }\n\t\n\t  return subClass;\n\t};\n\t\n\texports['default'] = extendFn;\n\n\n/***/ },\n/* 108 */\n/***/ function(module, exports) {\n\n\t/**\n\t * Basic Ad support plugin for video.js.\n\t *\n\t * Common code to support ad integrations.\n\t */\n\t(function(window, videojs, undefined) {\n\t'use strict';\n\t\n\tvar\n\t\n\t  VIDEO_EVENTS = videojs.getComponent('Html5').Events,\n\t\n\t  /**\n\t   * If ads are not playing, pauses the player at the next available\n\t   * opportunity. Has no effect if ads have started. This function is necessary\n\t   * because pausing a video element while processing a `play` event on iOS can\n\t   * cause the video element to continuously toggle between playing and paused\n\t   * states.\n\t   *\n\t   * @param {object} player The video player\n\t   */\n\t  cancelContentPlay = function(player) {\n\t    if (player.ads.cancelPlayTimeout) {\n\t      // another cancellation is already in flight, so do nothing\n\t      return;\n\t    }\n\t    player.ads.cancelPlayTimeout = window.setTimeout(function() {\n\t      // deregister the cancel timeout so subsequent cancels are scheduled\n\t      player.ads.cancelPlayTimeout = null;\n\t\n\t      // pause playback so ads can be handled.\n\t      if (!player.paused()) {\n\t        player.pause();\n\t      }\n\t\n\t      // add a contentplayback handler to resume playback when ads finish.\n\t      player.one('contentplayback', function() {\n\t        if (player.paused()) {\n\t          player.play();\n\t        }\n\t      });\n\t    }, 1);\n\t  },\n\t\n\t  /**\n\t   * Returns an object that captures the portions of player state relevant to\n\t   * video playback. The result of this function can be passed to\n\t   * restorePlayerSnapshot with a player to return the player to the state it\n\t   * was in when this function was invoked.\n\t   * @param {object} player The videojs player object\n\t   */\n\t  getPlayerSnapshot = function(player) {\n\t    var\n\t      tech = player.$('.vjs-tech'),\n\t      tracks = player.remoteTextTracks ? player.remoteTextTracks() : [],\n\t      track,\n\t      i,\n\t      suppressedTracks = [],\n\t      snapshot = {\n\t        ended: player.ended(),\n\t        currentSrc: player.currentSrc(),\n\t        src: player.src(),\n\t        currentTime: player.currentTime(),\n\t        type: player.currentType()\n\t      };\n\t\n\t    if (tech) {\n\t      snapshot.nativePoster = tech.poster;\n\t      snapshot.style = tech.getAttribute('style');\n\t    }\n\t\n\t    i = tracks.length;\n\t    while (i--) {\n\t      track = tracks[i];\n\t      suppressedTracks.push({\n\t        track: track,\n\t        mode: track.mode\n\t      });\n\t      track.mode = 'disabled';\n\t    }\n\t    snapshot.suppressedTracks = suppressedTracks;\n\t\n\t    return snapshot;\n\t  },\n\t\n\t  /**\n\t   * Attempts to modify the specified player so that its state is equivalent to\n\t   * the state of the snapshot.\n\t   * @param {object} snapshot - the player state to apply\n\t   */\n\t  restorePlayerSnapshot = function(player, snapshot) {\n\t    var\n\t      // the playback tech\n\t      tech = player.$('.vjs-tech'),\n\t\n\t      // the number of remaining attempts to restore the snapshot\n\t      attempts = 20,\n\t\n\t      suppressedTracks = snapshot.suppressedTracks,\n\t      trackSnapshot,\n\t      restoreTracks =  function() {\n\t        var i = suppressedTracks.length;\n\t        while (i--) {\n\t          trackSnapshot = suppressedTracks[i];\n\t          trackSnapshot.track.mode = trackSnapshot.mode;\n\t        }\n\t      },\n\t\n\t      // finish restoring the playback state\n\t      resume = function() {\n\t        var\n\t          ended = false,\n\t          updateEnded = function() {\n\t            ended = true;\n\t          };\n\t        player.currentTime(snapshot.currentTime);\n\t\n\t        // Resume playback if this wasn't a postroll\n\t        if (!snapshot.ended) {\n\t          player.play();\n\t        } else {\n\t          // On iOS 8.1, the \"ended\" event will not fire if you seek\n\t          // directly to the end of a video. To make that behavior\n\t          // consistent with the standard, fire a synthetic event if\n\t          // \"ended\" does not fire within 250ms. Note that the ended\n\t          // event should occur whether the browser actually has data\n\t          // available for that position\n\t          // (https://html.spec.whatwg.org/multipage/embedded-content.html#seeking),\n\t          // so it should not be necessary to wait for the seek to\n\t          // indicate completion.\n\t          player.ads.resumeEndedTimeout = window.setTimeout(function() {\n\t            if (!ended) {\n\t              player.play();\n\t            }\n\t            player.off('ended', updateEnded);\n\t            player.ads.resumeEndedTimeout = null;\n\t          }, 250);\n\t          player.on('ended', updateEnded);\n\t\n\t          // Need to clear the resume/ended timeout on dispose. If it fires\n\t          // after a player is disposed, an error will be thrown!\n\t          player.on('dispose', function() {\n\t            window.clearTimeout(player.ads.resumeEndedTimeout);\n\t          });\n\t        }\n\t      },\n\t\n\t      // determine if the video element has loaded enough of the snapshot source\n\t      // to be ready to apply the rest of the state\n\t      tryToResume = function() {\n\t\n\t        // tryToResume can either have been called through the `contentcanplay`\n\t        // event or fired through setTimeout.\n\t        // When tryToResume is called, we should make sure to clear out the other\n\t        // way it could've been called by removing the listener and clearing out\n\t        // the timeout.\n\t        player.off('contentcanplay', tryToResume);\n\t        if (player.ads.tryToResumeTimeout_) {\n\t          player.clearTimeout(player.ads.tryToResumeTimeout_);\n\t          player.ads.tryToResumeTimeout_ = null;\n\t        }\n\t\n\t        // Tech may have changed depending on the differences in sources of the\n\t        // original video and that of the ad\n\t        tech = player.el().querySelector('.vjs-tech');\n\t\n\t        if (tech.readyState > 1) {\n\t          // some browsers and media aren't \"seekable\".\n\t          // readyState greater than 1 allows for seeking without exceptions\n\t          return resume();\n\t        }\n\t\n\t        if (tech.seekable === undefined) {\n\t          // if the tech doesn't expose the seekable time ranges, try to\n\t          // resume playback immediately\n\t          return resume();\n\t        }\n\t\n\t        if (tech.seekable.length > 0) {\n\t          // if some period of the video is seekable, resume playback\n\t          return resume();\n\t        }\n\t\n\t        // delay a bit and then check again unless we're out of attempts\n\t        if (attempts--) {\n\t          window.setTimeout(tryToResume, 50);\n\t        } else {\n\t          (function() {\n\t            try {\n\t              resume();\n\t            } catch(e) {\n\t              videojs.log.warn('Failed to resume the content after an advertisement', e);\n\t            }\n\t          })();\n\t        }\n\t      },\n\t\n\t      // whether the video element has been modified since the\n\t      // snapshot was taken\n\t      srcChanged;\n\t\n\t    if (snapshot.nativePoster) {\n\t      tech.poster = snapshot.nativePoster;\n\t    }\n\t\n\t    if ('style' in snapshot) {\n\t      // overwrite all css style properties to restore state precisely\n\t      tech.setAttribute('style', snapshot.style || '');\n\t    }\n\t\n\t    // Determine whether the player needs to be restored to its state\n\t    // before ad playback began. With a custom ad display or burned-in\n\t    // ads, the content player state hasn't been modified and so no\n\t    // restoration is required\n\t\n\t    srcChanged = player.src() !== snapshot.src || player.currentSrc() !== snapshot.currentSrc;\n\t\n\t    if (srcChanged) {\n\t      // on ios7, fiddling with textTracks too early will cause safari to crash\n\t      player.one('contentloadedmetadata', restoreTracks);\n\t\n\t      // if the src changed for ad playback, reset it\n\t      player.src({ src: snapshot.currentSrc, type: snapshot.type });\n\t      // safari requires a call to `load` to pick up a changed source\n\t      player.load();\n\t      // and then resume from the snapshots time once the original src has loaded\n\t      // in some browsers (firefox) `canplay` may not fire correctly.\n\t      // Reace the `canplay` event with a timeout.\n\t      player.one('contentcanplay', tryToResume);\n\t      player.ads.tryToResumeTimeout_ = player.setTimeout(tryToResume, 2000);\n\t    } else if (!player.ended() || !snapshot.ended) {\n\t      // if we didn't change the src, just restore the tracks\n\t      restoreTracks();\n\t      // the src didn't change and this wasn't a postroll\n\t      // just resume playback at the current time.\n\t      player.play();\n\t    }\n\t  },\n\t\n\t  /**\n\t   * Remove the poster attribute from the video element tech, if present. When\n\t   * reusing a video element for multiple videos, the poster image will briefly\n\t   * reappear while the new source loads. Removing the attribute ahead of time\n\t   * prevents the poster from showing up between videos.\n\t   * @param {object} player The videojs player object\n\t   */\n\t  removeNativePoster = function(player) {\n\t    var tech = player.$('.vjs-tech');\n\t    if (tech) {\n\t      tech.removeAttribute('poster');\n\t    }\n\t  },\n\t\n\t  // ---------------------------------------------------------------------------\n\t  // Ad Framework\n\t  // ---------------------------------------------------------------------------\n\t\n\t  // default framework settings\n\t  defaults = {\n\t    // maximum amount of time in ms to wait to receive `adsready` from the ad\n\t    // implementation after play has been requested. Ad implementations are\n\t    // expected to load any dynamic libraries and make any requests to determine\n\t    // ad policies for a video during this time.\n\t    timeout: 5000,\n\t\n\t    // maximum amount of time in ms to wait for the ad implementation to start\n\t    // linear ad mode after `readyforpreroll` has fired. This is in addition to\n\t    // the standard timeout.\n\t    prerollTimeout: 100,\n\t\n\t    // maximum amount of time in ms to wait for the ad implementation to start\n\t    // linear ad mode after `contentended` has fired.\n\t    postrollTimeout: 100,\n\t\n\t    // when truthy, instructs the plugin to output additional information about\n\t    // plugin state to the video.js log. On most devices, the video.js log is\n\t    // the same as the developer console.\n\t    debug: false\n\t  },\n\t\n\t  adFramework = function(options) {\n\t    var player = this;\n\t    var settings = videojs.mergeOptions(defaults, options);\n\t    var fsmHandler;\n\t\n\t    // prefix all video element events during ad playback\n\t    // if the video element emits ad-related events directly,\n\t    // plugins that aren't ad-aware will break. prefixing allows\n\t    // plugins that wish to handle ad events to do so while\n\t    // avoiding the complexity for common usage\n\t    (function() {\n\t      var videoEvents = VIDEO_EVENTS.concat([\n\t        'firstplay',\n\t        'loadedalldata'\n\t      ]);\n\t\n\t      var returnTrue = function() { return true; };\n\t\n\t      var triggerEvent = function(type, event) {\n\t        // pretend we called stopImmediatePropagation because we want the native\n\t        // element events to continue propagating\n\t        event.isImmediatePropagationStopped = returnTrue;\n\t        event.cancelBubble = true;\n\t        event.isPropagationStopped = returnTrue;\n\t        player.trigger({\n\t          type: type + event.type,\n\t          state: player.ads.state,\n\t          originalEvent: event\n\t        });\n\t      };\n\t\n\t      player.on(videoEvents, function redispatch(event) {\n\t        if (player.ads.state === 'ad-playback') {\n\t          triggerEvent('ad', event);\n\t        } else if (player.ads.state === 'content-playback' && event.type === 'ended') {\n\t          triggerEvent('content', event);\n\t        } else if (player.ads.state === 'content-resuming') {\n\t          if (player.ads.snapshot) {\n\t            // the video element was recycled for ad playback\n\t            if (player.currentSrc() !== player.ads.snapshot.currentSrc) {\n\t              if (event.type === 'loadstart') {\n\t                return;\n\t              }\n\t              return triggerEvent('content', event);\n\t\n\t            // we ended playing postrolls and the video itself\n\t            // the content src is back in place\n\t            } else if (player.ads.snapshot.ended) {\n\t              if ((event.type === 'pause' ||\n\t                  event.type === 'ended')) {\n\t                // after loading a video, the natural state is to not be started\n\t                // in this case, it actually has, so, we do it manually\n\t                player.addClass('vjs-has-started');\n\t                // let `pause` and `ended` events through, naturally\n\t                return;\n\t              }\n\t              // prefix all other events in content-resuming with `content`\n\t              return triggerEvent('content', event);\n\t            }\n\t          }\n\t          if (event.type !== 'playing') {\n\t            triggerEvent('content', event);\n\t          }\n\t        }\n\t      });\n\t    })();\n\t\n\t    // We now auto-play when an ad gets loaded if we're playing ads in the same video element as the content.\n\t    // The problem is that in IE11, we cannot play in addurationchange but in iOS8, we cannot play from adcanplay.\n\t    // This will allow ad-integrations from needing to do this themselves.\n\t    player.on(['addurationchange', 'adcanplay'], function() {\n\t      if (player.currentSrc() === player.ads.snapshot.currentSrc) {\n\t        return;\n\t      }\n\t\n\t      player.play();\n\t    });\n\t\n\t    // replace the ad initializer with the ad namespace\n\t    player.ads = {\n\t      state: 'content-set',\n\t\n\t      // Call this when an ad response has been received and there are\n\t      // linear ads ready to be played.\n\t      startLinearAdMode: function() {\n\t        if (player.ads.state === 'preroll?' ||\n\t            player.ads.state === 'content-playback' ||\n\t            player.ads.state === 'postroll?') {\n\t          player.trigger('adstart');\n\t        }\n\t      },\n\t\n\t      // Call this when a linear ad pod has finished playing.\n\t      endLinearAdMode: function() {\n\t        if (player.ads.state === 'ad-playback') {\n\t          player.trigger('adend');\n\t        }\n\t      },\n\t\n\t      // Call this when an ad response has been received but there are no\n\t      // linear ads to be played (i.e. no ads available, or overlays).\n\t      // This has no effect if we are already in a linear ad mode.  Always\n\t      // use endLinearAdMode() to exit from linear ad-playback state.\n\t      skipLinearAdMode: function() {\n\t        if (player.ads.state !== 'ad-playback') {\n\t          player.trigger('adskip');\n\t        }\n\t      }\n\t    };\n\t\n\t    fsmHandler = function(event) {\n\t      // Ad Playback State Machine\n\t      var fsm = {\n\t        'content-set': {\n\t          events: {\n\t            'adscanceled': function() {\n\t              this.state = 'content-playback';\n\t            },\n\t            'adsready': function() {\n\t              this.state = 'ads-ready';\n\t            },\n\t            'play': function() {\n\t              this.state = 'ads-ready?';\n\t              cancelContentPlay(player);\n\t              // remove the poster so it doesn't flash between videos\n\t              removeNativePoster(player);\n\t            },\n\t            'adserror': function() {\n\t              this.state = 'content-playback';\n\t            },\n\t            'adskip': function() {\n\t              this.state = 'content-playback';\n\t            }\n\t          }\n\t        },\n\t        'ads-ready': {\n\t          events: {\n\t            'play': function() {\n\t              this.state = 'preroll?';\n\t              cancelContentPlay(player);\n\t            },\n\t            'adskip': function() {\n\t              this.state = 'content-playback';\n\t            },\n\t            'adserror': function() {\n\t              this.state = 'content-playback';\n\t            }\n\t          }\n\t        },\n\t        'preroll?': {\n\t          enter: function() {\n\t            // change class to show that we're waiting on ads\n\t            player.addClass('vjs-ad-loading');\n\t            // schedule an adtimeout event to fire if we waited too long\n\t            player.ads.adTimeoutTimeout = window.setTimeout(function() {\n\t              player.trigger('adtimeout');\n\t            }, settings.prerollTimeout);\n\t            // signal to ad plugin that it's their opportunity to play a preroll\n\t            player.trigger('readyforpreroll');\n\t          },\n\t          leave: function() {\n\t            window.clearTimeout(player.ads.adTimeoutTimeout);\n\t            player.removeClass('vjs-ad-loading');\n\t          },\n\t          events: {\n\t            'play': function() {\n\t              cancelContentPlay(player);\n\t            },\n\t            'adstart': function() {\n\t              this.state = 'ad-playback';\n\t            },\n\t            'adskip': function() {\n\t              this.state = 'content-playback';\n\t            },\n\t            'adtimeout': function() {\n\t              this.state = 'content-playback';\n\t            },\n\t            'adserror': function() {\n\t              this.state = 'content-playback';\n\t            }\n\t          }\n\t        },\n\t        'ads-ready?': {\n\t          enter: function() {\n\t            player.addClass('vjs-ad-loading');\n\t            player.ads.adTimeoutTimeout = window.setTimeout(function() {\n\t              player.trigger('adtimeout');\n\t            }, settings.timeout);\n\t          },\n\t          leave: function() {\n\t            window.clearTimeout(player.ads.adTimeoutTimeout);\n\t            player.removeClass('vjs-ad-loading');\n\t          },\n\t          events: {\n\t            'play': function() {\n\t              cancelContentPlay(player);\n\t            },\n\t            'adscanceled': function() {\n\t              this.state = 'content-playback';\n\t            },\n\t            'adsready': function() {\n\t              this.state = 'preroll?';\n\t            },\n\t            'adskip': function() {\n\t              this.state = 'content-playback';\n\t            },\n\t            'adtimeout': function() {\n\t              this.state = 'content-playback';\n\t            },\n\t            'adserror': function() {\n\t              this.state = 'content-playback';\n\t            }\n\t          }\n\t        },\n\t        'ad-playback': {\n\t          enter: function() {\n\t            // capture current player state snapshot (playing, currentTime, src)\n\t            this.snapshot = getPlayerSnapshot(player);\n\t\n\t            // add css to the element to indicate and ad is playing.\n\t            player.addClass('vjs-ad-playing');\n\t\n\t            // remove the poster so it doesn't flash between ads\n\t            removeNativePoster(player);\n\t\n\t            // We no longer need to supress play events once an ad is playing.\n\t            // Clear it if we were.\n\t            if (player.ads.cancelPlayTimeout) {\n\t              window.clearTimeout(player.ads.cancelPlayTimeout);\n\t              player.ads.cancelPlayTimeout = null;\n\t            }\n\t          },\n\t          leave: function() {\n\t            player.removeClass('vjs-ad-playing');\n\t            restorePlayerSnapshot(player, this.snapshot);\n\t            // trigger 'adend' as a consistent notification\n\t            // event that we're exiting ad-playback.\n\t            if (player.ads.triggerevent !== 'adend') {\n\t              player.trigger('adend');\n\t            }\n\t          },\n\t          events: {\n\t            'adend': function() {\n\t              this.state = 'content-resuming';\n\t            },\n\t            'adserror': function() {\n\t              this.state = 'content-resuming';\n\t            }\n\t          }\n\t        },\n\t        'content-resuming': {\n\t          enter: function() {\n\t            if (this.snapshot.ended) {\n\t              window.clearTimeout(player.ads._fireEndedTimeout);\n\t              // in some cases, ads are played in a swf or another video element\n\t              // so we do not get an ended event in this state automatically.\n\t              // If we don't get an ended event we can use, we need to trigger\n\t              // one ourselves or else we won't actually ever end the current video.\n\t              player.ads._fireEndedTimeout = window.setTimeout(function() {\n\t                player.trigger('ended');\n\t              }, 1000);\n\t            }\n\t          },\n\t          leave: function() {\n\t            window.clearTimeout(player.ads._fireEndedTimeout);\n\t          },\n\t          events: {\n\t            'contentupdate': function() {\n\t              this.state = 'content-set';\n\t            },\n\t            contentresumed: function() {\n\t              this.state = 'content-playback';\n\t            },\n\t            'playing': function() {\n\t              this.state = 'content-playback';\n\t            },\n\t            'ended': function() {\n\t              this.state = 'content-playback';\n\t            }\n\t          }\n\t        },\n\t        'postroll?': {\n\t          enter: function() {\n\t            this.snapshot = getPlayerSnapshot(player);\n\t\n\t            player.addClass('vjs-ad-loading');\n\t\n\t            player.ads.adTimeoutTimeout = window.setTimeout(function() {\n\t              player.trigger('adtimeout');\n\t            }, settings.postrollTimeout);\n\t          },\n\t          leave: function() {\n\t            window.clearTimeout(player.ads.adTimeoutTimeout);\n\t            player.removeClass('vjs-ad-loading');\n\t          },\n\t          events: {\n\t            'adstart': function() {\n\t              this.state = 'ad-playback';\n\t            },\n\t            'adskip': function() {\n\t              this.state = 'content-resuming';\n\t              window.setTimeout(function() {\n\t                player.trigger('ended');\n\t              }, 1);\n\t            },\n\t            'adtimeout': function() {\n\t              this.state = 'content-resuming';\n\t              window.setTimeout(function() {\n\t                player.trigger('ended');\n\t              }, 1);\n\t            },\n\t            'adserror': function() {\n\t              this.state = 'content-resuming';\n\t              window.setTimeout(function() {\n\t                player.trigger('ended');\n\t              }, 1);\n\t            }\n\t          }\n\t        },\n\t        'content-playback': {\n\t          enter: function() {\n\t            // make sure that any cancelPlayTimeout is cleared\n\t            if (player.ads.cancelPlayTimeout) {\n\t              window.clearTimeout(player.ads.cancelPlayTimeout);\n\t              player.ads.cancelPlayTimeout = null;\n\t            }\n\t            // this will cause content to start if a user initiated\n\t            // 'play' event was canceled earlier.\n\t            player.trigger({\n\t              type: 'contentplayback',\n\t              triggerevent: player.ads.triggerevent\n\t            });\n\t          },\n\t          events: {\n\t            // in the case of a timeout, adsready might come in late.\n\t            'adsready': function() {\n\t              player.trigger('readyforpreroll');\n\t            },\n\t            'adstart': function() {\n\t              this.state = 'ad-playback';\n\t            },\n\t            'contentupdate': function() {\n\t              if (player.paused()) {\n\t                this.state = 'content-set';\n\t              } else {\n\t                this.state = 'ads-ready?';\n\t              }\n\t            },\n\t            'contentended': function() {\n\t              this.state = 'postroll?';\n\t            }\n\t          }\n\t        }\n\t      };\n\t\n\t      (function(state) {\n\t        var noop = function() {};\n\t\n\t        // process the current event with a noop default handler\n\t        ((fsm[state].events || {})[event.type] || noop).apply(player.ads);\n\t\n\t        // check whether the state has changed\n\t        if (state !== player.ads.state) {\n\t\n\t          // record the event that caused the state transition\n\t          player.ads.triggerevent = event.type;\n\t\n\t          // execute leave/enter callbacks if present\n\t          (fsm[state].leave || noop).apply(player.ads);\n\t          (fsm[player.ads.state].enter || noop).apply(player.ads);\n\t\n\t          // output debug logging\n\t          if (settings.debug) {\n\t            videojs.log('ads', player.ads.triggerevent + ' triggered: ' + state + ' -> ' + player.ads.state);\n\t          }\n\t        }\n\t\n\t      })(player.ads.state);\n\t\n\t    };\n\t\n\t    // register for the events we're interested in\n\t    player.on(VIDEO_EVENTS.concat([\n\t      // events emitted by ad plugin\n\t      'adtimeout',\n\t      'contentupdate',\n\t      'contentplaying',\n\t      'contentended',\n\t      'contentresumed',\n\t\n\t      // events emitted by third party ad implementors\n\t      'adsready',\n\t      'adserror',\n\t      'adscanceled',\n\t      'adstart',  // startLinearAdMode()\n\t      'adend',    // endLinearAdMode()\n\t      'adskip'    // skipLinearAdMode()\n\t    ]), fsmHandler);\n\t\n\t    // keep track of the current content source\n\t    // if you want to change the src of the video without triggering\n\t    // the ad workflow to restart, you can update this variable before\n\t    // modifying the player's source\n\t    player.ads.contentSrc = player.currentSrc();\n\t\n\t    // implement 'contentupdate' event.\n\t    (function(){\n\t      var\n\t        // check if a new src has been set, if so, trigger contentupdate\n\t        checkSrc = function() {\n\t          var src;\n\t          if (player.ads.state !== 'ad-playback') {\n\t            src = player.currentSrc();\n\t            if (src !== player.ads.contentSrc) {\n\t              player.trigger({\n\t                type: 'contentupdate',\n\t                oldValue: player.ads.contentSrc,\n\t                newValue: src\n\t              });\n\t              player.ads.contentSrc = src;\n\t            }\n\t          }\n\t        };\n\t      // loadstart reliably indicates a new src has been set\n\t      player.on('loadstart', checkSrc);\n\t      // check immediately in case we missed the loadstart\n\t      window.setTimeout(checkSrc, 1);\n\t    })();\n\t\n\t    // kick off the fsm\n\t    if (!player.paused()) {\n\t      // simulate a play event if we're autoplaying\n\t      fsmHandler({type:'play'});\n\t    }\n\t\n\t  };\n\t\n\t  // register the ad plugin framework\n\t  videojs.plugin('ads', adFramework);\n\t\n\t})(window, videojs);\n\n\n/***/ },\n/* 109 */\n/***/ function(module, exports) {\n\n\t/**\n\t * Copyright 2014 Google Inc.\n\t *\n\t * Licensed under the Apache License, Version 2.0 (the \"License\");\n\t * you may not use this file except in compliance with the License.\n\t * You may obtain a copy of the License at\n\t *\n\t *     http://www.apache.org/licenses/LICENSE-2.0\n\t *\n\t * Unless required by applicable law or agreed to in writing, software\n\t * distributed under the License is distributed on an \"AS IS\" BASIS,\n\t * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n\t * See the License for the specific language governing permissions and\n\t * limitations under the License.\n\t *\n\t * IMA SDK integration plugin for Video.js. For more information see\n\t * https://www.github.com/googleads/videojs-ima\n\t */\n\t\n\t(function(vjs) {\n\t  'use strict';\n\t  var extend = function(obj) {\n\t    var arg;\n\t    var index;\n\t    var key;\n\t    for (index = 1; index < arguments.length; index++) {\n\t      arg = arguments[index];\n\t      for (key in arg) {\n\t        if (arg.hasOwnProperty(key)) {\n\t          obj[key] = arg[key];\n\t        }\n\t      }\n\t    }\n\t    return obj;\n\t  };\n\t\n\t  var ima_defaults = {\n\t    debug: false,\n\t    timeout: 5000,\n\t    prerollTimeout: 100,\n\t    adLabel: 'Advertisement',\n\t    showControlsForJSAds: true\n\t  };\n\t\n\t  var init = function(options, readyCallback) {\n\t    this.ima = new ImaPlugin(this, options, readyCallback);\n\t  };\n\t\n\t  var ImaPlugin = function(player, options, readyCallback) {\n\t    this.player = player;\n\t\n\t    /**\n\t     * Assigns the unique id and class names to the given element as well as the style class\n\t     * @param element\n\t     * @param controlName\n\t     * @private\n\t     */\n\t    var assignControlAttributes_ = function(element, controlName) {\n\t      element.id = this.controlPrefix + controlName;\n\t      element.className = this.controlPrefix + controlName + ' ' + controlName;\n\t    }.bind(this);\n\t\n\t    /**\n\t     * Returns a regular expression to test a string for the given className\n\t     * @param className\n\t     * @returns {RegExp}\n\t     * @private\n\t     */\n\t    var getClassRegexp_ = function(className){\n\t      // Matches on\n\t      // (beginning of string OR NOT word char)\n\t      // classname\n\t      // (negative lookahead word char OR end of string)\n\t      return new RegExp('(^|[^A-Za-z-])' + className + '((?![A-Za-z-])|$)', 'gi');\n\t    };\n\t\n\t    /**\n\t     * Adds a class to the given element if it doesn't already have the class\n\t     * @param element\n\t     * @param classToAdd\n\t     * @private\n\t     */\n\t    var addClass_ = function(element, classToAdd){\n\t      if(getClassRegexp_(classToAdd).test(element.className)){\n\t        return element;\n\t      }\n\t\n\t      return element.className = element.className.trim() + ' ' + classToAdd;\n\t    };\n\t\n\t    /**\n\t     * Removes a class from the given element if it has the given class\n\t     * @param element\n\t     * @param classToRemove\n\t     * @private\n\t     */\n\t    var removeClass_ = function(element, classToRemove){\n\t      var classRegexp = getClassRegexp_(classToRemove);\n\t\n\t      if(!classRegexp.test(element.className)){\n\t        return element;\n\t      }\n\t\n\t      return element.className = element.className.trim().replace(classRegexp, '');\n\t    };\n\t\n\t    /**\n\t     * Creates the ad container passed to the IMA SDK.\n\t     * @private\n\t     */\n\t    var createAdContainer_ = function() {\n\t      // The adContainerDiv is the DOM of the element that will house\n\t      // the ads and ad controls.\n\t      this.vjsControls = this.player.getChild('controlBar');\n\t      this.adContainerDiv =\n\t          this.vjsControls.el().parentNode.appendChild(\n\t              document.createElement('div'));\n\t      assignControlAttributes_(this.adContainerDiv, 'ima-ad-container');\n\t      this.adContainerDiv.style.position = \"absolute\";\n\t      this.adContainerDiv.style.zIndex = 1111;\n\t      this.adContainerDiv.addEventListener(\n\t          'mouseenter',\n\t          showAdControls_,\n\t          false);\n\t      this.adContainerDiv.addEventListener(\n\t          'mouseleave',\n\t          hideAdControls_,\n\t          false);\n\t      createControls_();\n\t      this.adDisplayContainer =\n\t          new google.ima.AdDisplayContainer(this.adContainerDiv, this.contentPlayer);\n\t    }.bind(this);\n\t\n\t    /**\n\t     * Creates the controls for the ad.\n\t     * @private\n\t     */\n\t    var createControls_ = function() {\n\t      this.controlsDiv = document.createElement('div');\n\t      assignControlAttributes_(this.controlsDiv, 'ima-controls-div');\n\t      this.controlsDiv.style.width = '100%';\n\t      this.countdownDiv = document.createElement('div');\n\t      assignControlAttributes_(this.countdownDiv, 'ima-countdown-div');\n\t      this.countdownDiv.innerHTML = this.settings.adLabel;\n\t      this.countdownDiv.style.display = this.showCountdown ? 'block' : 'none';\n\t      this.seekBarDiv = document.createElement('div');\n\t      assignControlAttributes_(this.seekBarDiv, 'ima-seek-bar-div');\n\t      this.seekBarDiv.style.width = '100%';\n\t      this.progressDiv = document.createElement('div');\n\t      assignControlAttributes_(this.progressDiv, 'ima-progress-div');\n\t      this.playPauseDiv = document.createElement('div');\n\t      assignControlAttributes_(this.playPauseDiv, 'ima-play-pause-div');\n\t      addClass_(this.playPauseDiv, 'ima-playing');\n\t      this.playPauseDiv.addEventListener(\n\t          'click',\n\t          onAdPlayPauseClick_,\n\t          false);\n\t      this.muteDiv = document.createElement('div');\n\t      assignControlAttributes_(this.muteDiv, 'ima-mute-div');\n\t      addClass_(this.muteDiv, 'ima-non-muted');\n\t      this.muteDiv.addEventListener(\n\t          'click',\n\t          onAdMuteClick_,\n\t          false);\n\t      this.sliderDiv = document.createElement('div');\n\t      assignControlAttributes_(this.sliderDiv, 'ima-slider-div');\n\t      this.sliderDiv.addEventListener(\n\t          'mousedown',\n\t          onAdVolumeSliderMouseDown_,\n\t          false);\n\t      this.sliderLevelDiv = document.createElement('div');\n\t      assignControlAttributes_(this.sliderLevelDiv, 'ima-slider-level-div');\n\t      this.fullscreenDiv = document.createElement('div');\n\t      assignControlAttributes_(this.fullscreenDiv, 'ima-fullscreen-div');\n\t      addClass_(this.fullscreenDiv, 'ima-non-fullscreen');\n\t      this.fullscreenDiv.addEventListener(\n\t          'click',\n\t          onAdFullscreenClick_,\n\t          false);\n\t      this.adContainerDiv.appendChild(this.controlsDiv);\n\t      this.controlsDiv.appendChild(this.countdownDiv);\n\t      this.controlsDiv.appendChild(this.seekBarDiv);\n\t      this.controlsDiv.appendChild(this.playPauseDiv);\n\t      this.controlsDiv.appendChild(this.muteDiv);\n\t      this.controlsDiv.appendChild(this.sliderDiv);\n\t      this.controlsDiv.appendChild(this.fullscreenDiv);\n\t      this.seekBarDiv.appendChild(this.progressDiv);\n\t      this.sliderDiv.appendChild(this.sliderLevelDiv);\n\t    }.bind(this);\n\t\n\t    /**\n\t     * Initializes the AdDisplayContainer. On mobile, this must be done as a\n\t     * result of user action.\n\t     */\n\t    this.initializeAdDisplayContainer = function() {\n\t      this.adDisplayContainerInitialized = true;\n\t      this.adDisplayContainer.initialize();\n\t    }.bind(this);\n\t\n\t    /**\n\t     * Creates the AdsRequest and request ads through the AdsLoader.\n\t     */\n\t    this.requestAds = function() {\n\t      if (!this.adDisplayContainerInitialized) {\n\t        this.adDisplayContainer.initialize();\n\t      }\n\t      var adsRequest = new google.ima.AdsRequest();\n\t      if (this.settings.adTagUrl) {\n\t        adsRequest.adTagUrl = this.settings.adTagUrl;\n\t      } else {\n\t        adsRequest.adsResponse = this.settings.adsResponse;\n\t      }\n\t      if (this.settings.forceNonLinearFullSlot) {\n\t        adsRequest.forceNonLinearFullSlot = true;\n\t      }\n\t\n\t      adsRequest.linearAdSlotWidth = this.getPlayerWidth();\n\t      adsRequest.linearAdSlotHeight = this.getPlayerHeight();\n\t      adsRequest.nonLinearAdSlotWidth =\n\t          this.settings.nonLinearWidth || this.getPlayerWidth();\n\t      adsRequest.nonLinearAdSlotHeight =\n\t          this.settings.nonLinearHeight || (this.getPlayerHeight() / 3);\n\t\n\t      this.adsLoader.requestAds(adsRequest);\n\t    }.bind(this);\n\t\n\t    /**\n\t     * Listener for the ADS_MANAGER_LOADED event. Creates the AdsManager,\n\t     * sets up event listeners, and triggers the 'adsready' event for\n\t     * videojs-ads-contrib.\n\t     * @private\n\t     */\n\t    var onAdsManagerLoaded_ = function(adsManagerLoadedEvent) {\n\t      this.adsManager = adsManagerLoadedEvent.getAdsManager(\n\t          this.contentPlayheadTracker, this.adsRenderingSettings);\n\t\n\t      this.adsManager.addEventListener(\n\t          google.ima.AdErrorEvent.Type.AD_ERROR,\n\t          onAdError_);\n\t      this.adsManager.addEventListener(\n\t          google.ima.AdEvent.Type.AD_BREAK_READY,\n\t          onAdBreakReady_);\n\t      this.adsManager.addEventListener(\n\t          google.ima.AdEvent.Type.CONTENT_PAUSE_REQUESTED,\n\t          this.onContentPauseRequested_);\n\t      this.adsManager.addEventListener(\n\t          google.ima.AdEvent.Type.CONTENT_RESUME_REQUESTED,\n\t          this.onContentResumeRequested_);\n\t      this.adsManager.addEventListener(\n\t          google.ima.AdEvent.Type.ALL_ADS_COMPLETED,\n\t          onAllAdsCompleted_);\n\t\n\t      this.adsManager.addEventListener(\n\t          google.ima.AdEvent.Type.LOADED,\n\t          onAdLoaded_);\n\t      this.adsManager.addEventListener(\n\t          google.ima.AdEvent.Type.STARTED,\n\t          onAdStarted_);\n\t      this.adsManager.addEventListener(\n\t          google.ima.AdEvent.Type.CLICK,\n\t          onAdPlayPauseClick_);\n\t      this.adsManager.addEventListener(\n\t          google.ima.AdEvent.Type.COMPLETE,\n\t          this.onAdComplete_);\n\t      this.adsManager.addEventListener(\n\t          google.ima.AdEvent.Type.SKIPPED,\n\t          this.onAdComplete_);\n\t\n\t      if (!this.autoPlayAdBreaks) {\n\t        try {\n\t          var initWidth = this.getPlayerWidth();\n\t          var initHeight = this.getPlayerHeight();\n\t          this.adsManagerDimensions.width = initWidth;\n\t          this.adsManagerDimensions.height = initHeight;\n\t          this.adsManager.init(\n\t              initWidth,\n\t              initHeight,\n\t              google.ima.ViewMode.NORMAL);\n\t          this.adsManager.setVolume(this.player.muted() ? 0 : this.player.volume());\n\t        } catch (adError) {\n\t          onAdError_(adError);\n\t        }\n\t      }\n\t\n\t      this.player.trigger('adsready');\n\t    }.bind(this);\n\t\n\t    /**\n\t     * DEPRECATED: Use startFromReadyCallback\n\t     * Start ad playback, or content video playback in the absence of a\n\t     * pre-roll.\n\t     */\n\t    this.start = function() {\n\t      window.console.log(\n\t          'WARNING: player.ima.start is deprecated. Use ' +\n\t              'player.ima.startFromReadyCallback instead.');\n\t    };\n\t\n\t    /**\n\t     * Start ad playback, or content video playback in the absence of a\n\t     * pre-roll. **NOTE**: This method only needs to be called if you provide\n\t     * your own readyCallback as the second parameter to player.ima(). If you\n\t     * only provide options and do not provide your own readyCallback,\n\t     * **DO NOT** call this method. If you do provide your own readyCallback,\n\t     * you should call this method in the last line of that callback. For more\n\t     * info, see this method's usage in our advanced and playlist examples.\n\t     */\n\t    this.startFromReadyCallback = function() {\n\t      if (this.autoPlayAdBreaks) {\n\t        try {\n\t          this.adsManager.init(\n\t              this.getPlayerWidth(),\n\t              this.getPlayerHeight(),\n\t              google.ima.ViewMode.NORMAL);\n\t          this.adsManager.setVolume(this.player.muted() ? 0 : this.player.volume());\n\t          this.adsManager.start();\n\t        } catch (adError) {\n\t          onAdError_(adError);\n\t        }\n\t      }\n\t    }.bind(this);\n\t\n\t    /**\n\t     * Listener for errors fired by the AdsLoader.\n\t     * @param {google.ima.AdErrorEvent} event The error event thrown by the\n\t     *     AdsLoader. See\n\t     *     https://developers.google.com/interactive-media-ads/docs/sdks/html5/v3/apis#ima.AdError.Type\n\t     * @private\n\t     */\n\t    var onAdsLoaderError_ = function(event) {\n\t      window.console.log('AdsLoader error: ' + event.getError());\n\t      this.adContainerDiv.style.display = 'none';\n\t      if (this.adsManager) {\n\t        this.adsManager.destroy();\n\t      }\n\t      this.player.trigger({type: 'adserror', data: { AdError: event.getError(), AdErrorEvent: event }});\n\t    }.bind(this);\n\t\n\t    /**\n\t     * Listener for errors thrown by the AdsManager.\n\t     * @param {google.ima.AdErrorEvent} adErrorEvent The error event thrown by\n\t     *     the AdsManager.\n\t     * @private\n\t     */\n\t    var onAdError_ = function(adErrorEvent) {\n\t      var errorMessage = adErrorEvent.getError !== undefined ? adErrorEvent.getError() : adErrorEvent.stack;\n\t      window.console.log('Ad error: ' + errorMessage);\n\t      this.vjsControls.show();\n\t      this.adsManager.destroy();\n\t      this.adContainerDiv.style.display = 'none';\n\t      this.player.trigger({ type: 'adserror', data: { AdError: errorMessage, AdErrorEvent: adErrorEvent }});\n\t    }.bind(this);\n\t\n\t    /**\n\t     * Listener for AD_BREAK_READY. Passes event on to publisher's listener.\n\t     * @param {google.ima.AdEvent} adEvent AdEvent thrown by the AdsManager.\n\t     * @private\n\t     */\n\t    var onAdBreakReady_ = function(adEvent) {\n\t      this.adBreakReadyListener(adEvent);\n\t    }.bind(this);\n\t\n\t    /**\n\t     * Called by publishers in manual ad break playback mode to start an ad\n\t     * break.\n\t     */\n\t    this.playAdBreak = function() {\n\t      if (!this.autoPlayAdBreaks) {\n\t        this.adsManager.start();\n\t      }\n\t    }.bind(this);\n\t\n\t    /**\n\t     * Pauses the content video and displays the ad container so ads can play.\n\t     * @param {google.ima.AdEvent} adEvent The AdEvent thrown by the AdsManager.\n\t     * @private\n\t     */\n\t    this.onContentPauseRequested_ = function(adEvent) {\n\t      this.adsActive = true;\n\t      this.adPlaying = true;\n\t      this.contentSource = this.player.currentSrc();\n\t      this.player.off('ended', this.localContentEndedListener);\n\t      if (adEvent.getAd().getAdPodInfo().getPodIndex() != -1) {\n\t        // Skip this call for post-roll ads\n\t        this.player.ads.startLinearAdMode();\n\t      }\n\t      this.adContainerDiv.style.display = 'block';\n\t\n\t      var contentType = adEvent.getAd().getContentType();\n\t      if ((contentType === 'application/javascript') && !this.settings.showControlsForJSAds) {\n\t        this.controlsDiv.style.display = 'none';\n\t      } else {\n\t        this.controlsDiv.style.display = 'block';\n\t      }\n\t\n\t      this.vjsControls.hide();\n\t      showPlayButton();\n\t      this.player.pause();\n\t    }.bind(this);\n\t\n\t    /**\n\t     * Resumes content video and hides the ad container.\n\t     * @param {google.ima.AdEvent} adEvent The AdEvent thrown by the AdsManager.\n\t     * @private\n\t     */\n\t    this.onContentResumeRequested_ = function(adEvent) {\n\t      this.adsActive = false;\n\t      this.adPlaying = false;\n\t      this.player.on('ended', this.localContentEndedListener);\n\t      if (this.currentAd == null || // hide for post-roll only playlist\n\t          this.currentAd.isLinear()) { // don't hide for non-linear ads\n\t        this.adContainerDiv.style.display = 'none';\n\t      }\n\t      this.vjsControls.show();\n\t      if (!this.currentAd) {\n\t        // Something went wrong playing the ad\n\t        this.player.ads.endLinearAdMode();\n\t      } else if (!this.contentComplete &&\n\t          // Don't exit linear mode after post-roll or content will auto-replay\n\t          this.currentAd.getAdPodInfo().getPodIndex() != -1 ) {\n\t        this.player.ads.endLinearAdMode();\n\t      }\n\t      this.countdownDiv.innerHTML = '';\n\t    }.bind(this);\n\t\n\t    /**\n\t     * Records that ads have completed and calls contentAndAdsEndedListeners\n\t     * if content is also complete.\n\t     * @param {google.ima.AdEvent} adEvent The AdEvent thrown by the AdsManager.\n\t     * @private\n\t     */\n\t    var onAllAdsCompleted_ = function(adEvent) {\n\t      this.allAdsCompleted = true;\n\t      this.adContainerDiv.style.display = 'none';\n\t      if (this.contentComplete == true) {\n\t        if (this.contentPlayer.src != this.contentSource) {\n\t          this.player.src(this.contentSource);\n\t        }\n\t        for (var index in this.contentAndAdsEndedListeners) {\n\t          this.contentAndAdsEndedListeners[index]();\n\t        }\n\t      }\n\t    }.bind(this);\n\t\n\t    /**\n\t     * Starts the content video when a non-linear ad is loaded.\n\t     * @param {google.ima.AdEvent} adEvent The AdEvent thrown by the AdsManager.\n\t     * @private\n\t     */\n\t   var onAdLoaded_ = function(adEvent) {\n\t      if (!adEvent.getAd().isLinear()) {\n\t        this.player.play();\n\t      }\n\t    }.bind(this);\n\t\n\t    /**\n\t     * Starts the interval timer to check the current ad time when an ad starts\n\t     * playing.\n\t     * @param {google.ima.AdEvent} adEvent The AdEvent thrown by the AdsManager.\n\t     * @private\n\t     */\n\t    var onAdStarted_ = function(adEvent) {\n\t      this.currentAd = adEvent.getAd();\n\t      if (this.currentAd.isLinear()) {\n\t        this.adTrackingTimer = setInterval(\n\t            onAdPlayheadTrackerInterval_, 250);\n\t        // Don't bump container when controls are shown\n\t        removeClass_(this.adContainerDiv, 'bumpable-ima-ad-container');\n\t      } else {\n\t        // Bump container when controls are shown\n\t       addClass_(this.adContainerDiv, 'bumpable-ima-ad-container');\n\t      }\n\t    }.bind(this);\n\t\n\t    /**\n\t     * Clears the interval timer for current ad time when an ad completes.\n\t     * @param {google.ima.AdEvent} adEvent The AdEvent thrown by the AdsManager.\n\t     * @private\n\t     */\n\t    this.onAdComplete_ = function(adEvent) {\n\t      if (this.currentAd.isLinear()) {\n\t        clearInterval(this.adTrackingTimer);\n\t      }\n\t    }.bind(this);\n\t\n\t    /**\n\t     * Gets the current time and duration of the ad and calls the method to\n\t     * update the ad UI.\n\t     * @private\n\t     */\n\t    var onAdPlayheadTrackerInterval_ = function() {\n\t      var remainingTime = this.adsManager.getRemainingTime();\n\t      var duration =  this.currentAd.getDuration();\n\t      var currentTime = duration - remainingTime;\n\t      currentTime = currentTime > 0 ? currentTime : 0;\n\t      var isPod = false;\n\t      var totalAds = 0;\n\t      var adPosition;\n\t      if (this.currentAd.getAdPodInfo()) {\n\t        isPod = true;\n\t        adPosition = this.currentAd.getAdPodInfo().getAdPosition();\n\t        totalAds = this.currentAd.getAdPodInfo().getTotalAds();\n\t      }\n\t\n\t      // Update countdown timer data\n\t      var remainingMinutes = Math.floor(remainingTime / 60);\n\t      var remainingSeconds = Math.floor(remainingTime % 60);\n\t      if (remainingSeconds.toString().length < 2) {\n\t        remainingSeconds = '0' + remainingSeconds;\n\t      }\n\t      var podCount = ': ';\n\t      if (isPod && (totalAds > 1)) {\n\t        podCount = ' (' + adPosition + ' of ' + totalAds + '): ';\n\t      }\n\t      this.countdownDiv.innerHTML =\n\t          this.settings.adLabel + podCount +\n\t          remainingMinutes + ':' + remainingSeconds;\n\t\n\t      // Update UI\n\t      var playProgressRatio = currentTime / duration;\n\t      var playProgressPercent = playProgressRatio * 100;\n\t      this.progressDiv.style.width = playProgressPercent + '%';\n\t    }.bind(this);\n\t\n\t    this.getPlayerWidth = function() {\n\t      var retVal = parseInt(getComputedStyle(this.player.el()).width, 10) ||\n\t          this.player.width();\n\t      return retVal;\n\t    }.bind(this);\n\t\n\t    this.getPlayerHeight = function() {\n\t      var retVal = parseInt(getComputedStyle(this.player.el()).height, 10) ||\n\t          this.player.height();\n\t      return retVal;\n\t    }.bind(this);\n\t\n\t    /**\n\t     * Hides the ad controls on mouseout.\n\t     * @private\n\t     */\n\t    var hideAdControls_ = function() {\n\t      this.controlsDiv.style.height = '14px';\n\t      this.playPauseDiv.style.display = 'none';\n\t      this.muteDiv.style.display = 'none';\n\t      this.sliderDiv.style.display = 'none';\n\t      this.fullscreenDiv.style.display = 'none';\n\t    }.bind(this);\n\t\n\t    /**\n\t     * Shows ad controls on mouseover.\n\t     * @private\n\t     */\n\t    var showAdControls_ = function() {\n\t      this.controlsDiv.style.height = '37px';\n\t      this.playPauseDiv.style.display = 'block';\n\t      this.muteDiv.style.display = 'block';\n\t      this.sliderDiv.style.display = 'block';\n\t      this.fullscreenDiv.style.display = 'block';\n\t    }.bind(this);\n\t\n\t    /**\n\t     * Show pause and hide play button\n\t     */\n\t    var showPauseButton = function() {\n\t      addClass_(this.playPauseDiv, 'ima-paused');\n\t      removeClass_(this.playPauseDiv, 'ima-playing');\n\t    }.bind(this);\n\t\n\t    /**\n\t     * Show play and hide pause button\n\t     */\n\t    var showPlayButton = function() {\n\t      addClass_(this.playPauseDiv, 'ima-playing');\n\t      removeClass_(this.playPauseDiv, 'ima-paused');\n\t    }.bind(this);\n\t\n\t    /**\n\t     * Listener for clicks on the play/pause button during ad playback.\n\t     * @private\n\t     */\n\t    var onAdPlayPauseClick_ = function() {\n\t      if (this.adPlaying) {\n\t        showPauseButton();\n\t        this.adsManager.pause();\n\t        this.adPlaying = false;\n\t      } else {\n\t        showPlayButton();\n\t        this.adsManager.resume();\n\t        this.adPlaying = true;\n\t      }\n\t    }.bind(this);\n\t\n\t    /**\n\t     * Listener for clicks on the mute button during ad playback.\n\t     * @private\n\t     */\n\t    var onAdMuteClick_ = function() {\n\t      if (this.adMuted) {\n\t        addClass_(this.muteDiv, 'ima-non-muted');\n\t        removeClass_(this.muteDiv, 'ima-muted');\n\t        this.adsManager.setVolume(1);\n\t        // Bubble down to content player\n\t        this.player.muted(false);\n\t        this.adMuted = false;\n\t        this.sliderLevelDiv.style.width = this.player.volume() * 100 + \"%\";\n\t      } else {\n\t        addClass_(this.muteDiv, 'ima-muted');\n\t        removeClass_(this.muteDiv, 'ima-non-muted');\n\t        this.adsManager.setVolume(0);\n\t        // Bubble down to content player\n\t        this.player.muted(true);\n\t        this.adMuted = true;\n\t        this.sliderLevelDiv.style.width = \"0%\";\n\t      }\n\t    }.bind(this);\n\t\n\t    /* Listener for mouse down events during ad playback. Used for volume.\n\t     * @private\n\t     */\n\t    var onAdVolumeSliderMouseDown_ = function() {\n\t       document.addEventListener('mouseup', onMouseUp_, false);\n\t       document.addEventListener('mousemove', onMouseMove_, false);\n\t    };\n\t\n\t    /* Mouse movement listener used for volume slider.\n\t     * @private\n\t     */\n\t    var onMouseMove_ = function(event) {\n\t      setVolumeSlider_(event);\n\t    };\n\t\n\t    /* Mouse release listener used for volume slider.\n\t     * @private\n\t     */\n\t    var onMouseUp_ = function(event) {\n\t      setVolumeSlider_(event);\n\t      document.removeEventListener('mousemove', onMouseMove_);\n\t      document.removeEventListener('mouseup', onMouseUp_);\n\t    };\n\t\n\t    /* Utility function to set volume and associated UI\n\t     * @private\n\t     */\n\t    var setVolumeSlider_ = function(event) {\n\t      var percent =\n\t          (event.clientX - this.sliderDiv.getBoundingClientRect().left) /\n\t              this.sliderDiv.offsetWidth;\n\t      percent *= 100;\n\t      //Bounds value 0-100 if mouse is outside slider region.\n\t      percent = Math.min(Math.max(percent, 0), 100);\n\t      this.sliderLevelDiv.style.width = percent + \"%\";\n\t      this.player.volume(percent / 100); //0-1\n\t      this.adsManager.setVolume(percent / 100);\n\t      if (this.player.volume() == 0) {\n\t        addClass_(this.muteDiv, 'ima-muted');\n\t        removeClass_(this.muteDiv, 'ima-non-muted');\n\t        this.player.muted(true);\n\t        this.adMuted = true;\n\t      }\n\t      else\n\t      {\n\t        addClass_(this.muteDiv, 'ima-non-muted');\n\t        removeClass_(this.muteDiv, 'ima-muted');\n\t        this.player.muted(false);\n\t        this.adMuted = false;\n\t      }\n\t    }.bind(this);\n\t\n\t    /**\n\t     * Listener for clicks on the fullscreen button during ad playback.\n\t     * @private\n\t     */\n\t    var onAdFullscreenClick_ = function() {\n\t      if (this.player.isFullscreen()) {\n\t        this.player.exitFullscreen();\n\t      } else {\n\t        this.player.requestFullscreen();\n\t      }\n\t    }.bind(this);\n\t\n\t    /**\n\t     * Listens for the video.js player to change its fullscreen status. This\n\t     * keeps the fullscreen-ness of the AdContainer in sync with the player.\n\t     * @private\n\t     */\n\t    var onFullscreenChange_ = function() {\n\t      if (this.player.isFullscreen()) {\n\t        addClass_(this.fullscreenDiv, 'ima-fullscreen');\n\t        removeClass_(this.fullscreenDiv, 'ima-non-fullscreen');\n\t        if (this.adsManager) {\n\t          this.adsManager.resize(\n\t              window.screen.width,\n\t              window.screen.height,\n\t              google.ima.ViewMode.FULLSCREEN);\n\t        }\n\t      } else {\n\t        addClass_(this.fullscreenDiv, 'ima-non-fullscreen');\n\t        removeClass_(this.fullscreenDiv, 'ima-fullscreen');\n\t        if (this.adsManager) {\n\t          this.adsManager.resize(\n\t              this.getPlayerWidth(),\n\t              this.getPlayerHeight(),\n\t              google.ima.ViewMode.NORMAL);\n\t        }\n\t      }\n\t    }.bind(this);\n\t\n\t    /**\n\t     * Listens for the video.js player to change its volume. This keeps the ad\n\t     * volume in sync with the content volume if the volume of the player is\n\t     * changed while content is playing\n\t     * @private\n\t     */\n\t    var onVolumeChange_ = function() {\n\t      var newVolume = this.player.muted() ? 0 : this.player.volume();\n\t      if (this.adsManager) {\n\t        this.adsManager.setVolume(newVolume);\n\t      }\n\t      // Update UI\n\t      if (newVolume == 0) {\n\t        this.adMuted = true;\n\t        addClass_(this.muteDiv, 'ima-muted');\n\t        removeClass_(this.muteDiv, 'ima-non-muted');\n\t        this.sliderLevelDiv.style.width = '0%';\n\t      } else {\n\t        this.adMuted = false;\n\t        addClass_(this.muteDiv, 'ima-non-muted');\n\t        removeClass_(this.muteDiv, 'ima-muted');\n\t        this.sliderLevelDiv.style.width = newVolume * 100 + '%';\n\t      }\n\t    }.bind(this);\n\t\n\t    /**\n\t     * Seeks content to 00:00:00. This is used as an event handler for the\n\t     * loadedmetadata event, since seeking is not possible until that event has\n\t     * fired.\n\t     * @private\n\t     */\n\t    var seekContentToZero_ = function() {\n\t      this.player.off('loadedmetadata', seekContentToZero_);\n\t      this.player.currentTime(0);\n\t    }.bind(this);\n\t\n\t    /**\n\t     * Seeks content to 00:00:00 and starts playback. This is used as an event\n\t     * handler for the loadedmetadata event, since seeking is not possible until\n\t     * that event has fired.\n\t     * @private\n\t     */\n\t    var playContentFromZero_ = function() {\n\t      this.player.off('loadedmetadata', playContentFromZero_);\n\t      this.player.currentTime(0);\n\t      this.player.play();\n\t    }.bind(this);\n\t\n\t    /**\n\t     * Destroys the AdsManager, sets it to null, and calls contentComplete to\n\t     * reset correlators. Once this is done it requests ads again to keep the\n\t     * inventory available.\n\t     * @private\n\t     */\n\t    var resetIMA_ = function() {\n\t      this.adsActive = false;\n\t      this.adPlaying = false;\n\t      this.player.on('ended', this.localContentEndedListener);\n\t      if (this.currentAd && this.currentAd.isLinear()) {\n\t        this.adContainerDiv.style.display = 'none';\n\t      }\n\t      this.vjsControls.show();\n\t      this.player.ads.endLinearAdMode();\n\t      if (this.adTrackingTimer) {\n\t        // If this is called while an ad is playing, stop trying to get that\n\t        // ad's current time.\n\t        clearInterval(this.adTrackingTimer);\n\t      }\n\t      if (this.adsManager) {\n\t        this.adsManager.destroy();\n\t        this.adsManager = null;\n\t      }\n\t      if (this.adsLoader && !this.contentComplete) {\n\t        this.adsLoader.contentComplete();\n\t      }\n\t      this.contentComplete = false;\n\t      this.allAdsCompleted = false;\n\t    }.bind(this);\n\t\n\t    /**\n\t     * Ads an EventListener to the AdsManager. For a list of available events,\n\t     * see\n\t     * https://developers.google.com/interactive-media-ads/docs/sdks/html5/v3/apis#ima.AdEvent.Type\n\t     * @param {google.ima.AdEvent.Type} event The AdEvent.Type for which to listen.\n\t     * @param {function} callback The method to call when the event is fired.\n\t     */\n\t    this.addEventListener = function(event, callback) {\n\t      if (this.adsManager) {\n\t        this.adsManager.addEventListener(event, callback);\n\t      }\n\t    }.bind(this);\n\t\n\t    /**\n\t     * Returns the instance of the AdsManager.\n\t     * @return {google.ima.AdsManager} The AdsManager being used by the plugin.\n\t     */\n\t    this.getAdsManager = function() {\n\t      return this.adsManager;\n\t    }.bind(this);\n\t\n\t    /**\n\t     * DEPRECATED: Use setContentWithAdTag.\n\t     * Sets the content of the video player. You should use this method instead\n\t     * of setting the content src directly to ensure the proper ad tag is\n\t     * requested when the video content is loaded.\n\t     * @param {?string} contentSrc The URI for the content to be played. Leave\n\t     *     blank to use the existing content.\n\t     * @param {?string} adTag The ad tag to be requested when the content loads.\n\t     *     Leave blank to use the existing ad tag.\n\t     * @param {?boolean} playOnLoad True to play the content once it has loaded,\n\t     *     false to only load the content but not start playback.\n\t     */\n\t    this.setContent = function(contentSrc, adTag, playOnLoad) {\n\t      window.console.log(\n\t          'WARNING: player.ima.setContent is deprecated. Use ' +\n\t              'player.ima.setContentWithAdTag instead.');\n\t      this.setContentWithAdTag(contentSrc, adTag, playOnLoad);\n\t    }.bind(this);\n\t\n\t    /**\n\t     * Sets the content of the video player. You should use this method instead\n\t     * of setting the content src directly to ensure the proper ad tag is\n\t     * requested when the video content is loaded.\n\t     * @param {?string} contentSrc The URI for the content to be played. Leave\n\t     *     blank to use the existing content.\n\t     * @param {?string} adTag The ad tag to be requested when the content loads.\n\t     *     Leave blank to use the existing ad tag.\n\t     * @param {?boolean} playOnLoad True to play the content once it has loaded,\n\t     *     false to only load the content but not start playback.\n\t     */\n\t    this.setContentWithAdTag = function(contentSrc, adTag, playOnLoad) {\n\t      resetIMA_();\n\t      this.settings.adTagUrl = adTag ? adTag : this.settings.adTagUrl;\n\t      changeSource_(contentSrc, playOnLoad);\n\t    }.bind(this);\n\t\n\t    /**\n\t     * Sets the content of the video player. You should use this method instead\n\t     * of setting the content src directly to ensure the proper ads response is\n\t     * used when the video content is loaded.\n\t     * @param {?string} contentSrc The URI for the content to be played. Leave\n\t     *     blank to use the existing content.\n\t     * @param {?string} adsResponse The ads response to be requested when the\n\t     *     content loads. Leave blank to use the existing ads response.\n\t     * @param {?boolean} playOnLoad True to play the content once it has loaded,\n\t     *     false to only load the content but not start playback.\n\t     */\n\t    this.setContentWithAdsResponse = function(contentSrc, adsResponse, playOnLoad) {\n\t      resetIMA_();\n\t      this.settings.adsResponse = adsResponse ? adsResponse : this.settings.adsResponse;\n\t      changeSource_(contentSrc, playOnLoad);\n\t    }.bind(this);\n\t\n\t    /**\n\t     * Changes the player source.\n\t     * @param {?string} contentSrc The URI for the content to be played. Leave\n\t     *     blank to use the existing content.\n\t     * @param {?boolean} playOnLoad True to play the content once it has loaded,\n\t     *     false to only load the content but not start playback.\n\t     * @private\n\t     */\n\t    var changeSource_ = function(contentSrc, playOnLoad) {\n\t      // Only try to pause the player when initialised with a source already\n\t      if (!!this.player.currentSrc()) {\n\t        this.player.currentTime(0);\n\t        this.player.pause();\n\t      }\n\t      if (contentSrc) {\n\t        this.player.src(contentSrc);\n\t      }\n\t      if (playOnLoad) {\n\t        this.player.on('loadedmetadata', playContentFromZero_);\n\t      } else {\n\t        this.player.on('loadedmetadata', seekContentToZero_);\n\t      }\n\t    }.bind(this);\n\t\n\t    /**\n\t     * Adds a listener for the 'ended' event of the video player. This should be\n\t     * used instead of setting an 'ended' listener directly to ensure that the\n\t     * ima can do proper cleanup of the SDK before other event listeners\n\t     * are called.\n\t     * @param {function} listener The listener to be called when content completes.\n\t     */\n\t    this.addContentEndedListener = function(listener) {\n\t      this.contentEndedListeners.push(listener);\n\t    }.bind(this);\n\t\n\t    /**\n\t     * Adds a listener that will be called when content and all ads have\n\t     * finished playing.\n\t     * @param {function} listener The listener to be called when content and ads complete.\n\t     */\n\t    this.addContentAndAdsEndedListener = function(listener) {\n\t      this.contentAndAdsEndedListeners.push(listener);\n\t    }.bind(this);\n\t\n\t    /**\n\t     * Sets the listener to be called to trigger manual ad break playback.\n\t     * @param {function} listener The listener to be called to trigger manual ad break playback.\n\t     */\n\t    this.setAdBreakReadyListener = function(listener) {\n\t      this.adBreakReadyListener = listener;\n\t    }.bind(this);\n\t\n\t    /**\n\t     * Pauses the ad.\n\t     */\n\t    this.pauseAd = function() {\n\t      if (this.adsActive && this.adPlaying) {\n\t        showPauseButton();\n\t        this.adsManager.pause();\n\t        this.adPlaying = false;\n\t      }\n\t    }.bind(this);\n\t\n\t    /**\n\t     * Resumes the ad.\n\t     */\n\t    this.resumeAd = function() {\n\t      if (this.adsActive && !this.adPlaying) {\n\t        showPlayButton();\n\t        this.adsManager.resume();\n\t        this.adPlaying = true;\n\t      }\n\t    }.bind(this);\n\t\n\t    /**\n\t     * Set up intervals to check for seeking and update current video time.\n\t     * @private\n\t     */\n\t    var setUpPlayerIntervals_ = function() {\n\t      this.updateTimeIntervalHandle =\n\t          setInterval(updateCurrentTime_, this.seekCheckInterval);\n\t      this.seekCheckIntervalHandle =\n\t          setInterval(checkForSeeking_, this.seekCheckInterval);\n\t      this.resizeCheckIntervalHandle =\n\t          setInterval(checkForResize_, this.resizeCheckInterval);\n\t    }.bind(this);\n\t\n\t    /**\n\t     * Updates the current time of the video\n\t     * @private\n\t     */\n\t    var updateCurrentTime_ = function() {\n\t      if (!this.contentPlayheadTracker.seeking) {\n\t        this.contentPlayheadTracker.currentTime = this.player.currentTime();\n\t      }\n\t    }.bind(this);\n\t\n\t    /**\n\t     * Detects when the user is seeking through a video.\n\t     * This is used to prevent mid-rolls from playing while a user is seeking.\n\t     *\n\t     * There *is* a seeking property of the HTML5 video element, but it's not\n\t     * properly implemented on all platforms (e.g. mobile safari), so we have to\n\t     * check ourselves to be sure.\n\t     *\n\t     * @private\n\t     */\n\t    var checkForSeeking_ = function() {\n\t      var tempCurrentTime = this.player.currentTime();\n\t      var diff = (tempCurrentTime - this.contentPlayheadTracker.previousTime) * 1000;\n\t      if (Math.abs(diff) > this.seekCheckInterval + this.seekThreshold) {\n\t        this.contentPlayheadTracker.seeking = true;\n\t      } else {\n\t        this.contentPlayheadTracker.seeking = false;\n\t      }\n\t      this.contentPlayheadTracker.previousTime = this.player.currentTime();\n\t    }.bind(this);\n\t\n\t    /**\n\t     * Detects when the player is resized (for fluid support) and resizes the\n\t     * ads manager to match.\n\t     *\n\t     * @private\n\t     */\n\t    var checkForResize_ = function() {\n\t      var currentWidth = this.getPlayerWidth();\n\t      var currentHeight = this.getPlayerHeight();\n\t\n\t      if (this.adsManager && (currentWidth != this.adsManagerDimensions.width ||\n\t          currentHeight != this.adsManagerDimensions.height)) {\n\t        this.adsManagerDimensions.width = currentWidth;\n\t        this.adsManagerDimensions.height = currentHeight;\n\t        this.adsManager.resize(currentWidth, currentHeight, google.ima.ViewMode.NORMAL);\n\t      }\n\t    }.bind(this);\n\t\n\t    /**\n\t     * Changes the flag to show or hide the ad countdown timer.\n\t     *\n\t     * @param {boolean} showCountdownIn Show or hide the countdown timer.\n\t     */\n\t    this.setShowCountdown = function(showCountdownIn) {\n\t      this.showCountdown = showCountdownIn;\n\t      this.countdownDiv.style.display = this.showCountdown ? 'block' : 'none';\n\t    }.bind(this);\n\t\n\t    /**\n\t     * Current plugin version.\n\t     */\n\t    this.VERSION = '0.2.0';\n\t\n\t    /**\n\t     * Stores user-provided settings.\n\t     */\n\t    this.settings;\n\t\n\t    /**\n\t     * Used to prefix videojs ima\n\t     */\n\t    this.controlPrefix;\n\t\n\t    /**\n\t     * Video element playing content.\n\t     */\n\t    this.contentPlayer;\n\t\n\t    /**\n\t     * Boolean flag to show or hide the ad countdown timer.\n\t     */\n\t    this.showCountdown;\n\t\n\t    /**\n\t     * Boolena flag to enable manual ad break playback.\n\t     */\n\t    this.autoPlayAdBreaks;\n\t\n\t    /**\n\t     * Video.js control bar.\n\t     */\n\t    this.vjsControls;\n\t\n\t    /**\n\t     * Div used as an ad container.\n\t     */\n\t    this.adContainerDiv;\n\t\n\t    /**\n\t     * Div used to display ad controls.\n\t     */\n\t    this.controlsDiv;\n\t\n\t    /**\n\t     * Div used to display ad countdown timer.\n\t     */\n\t    this.countdownDiv;\n\t\n\t    /**\n\t     * Div used to display add seek bar.\n\t     */\n\t    this.seekBarDiv;\n\t\n\t    /**\n\t     * Div used to display ad progress (in seek bar).\n\t     */\n\t    this.progressDiv;\n\t\n\t    /**\n\t     * Div used to display ad play/pause button.\n\t     */\n\t    this.playPauseDiv;\n\t\n\t    /**\n\t     * Div used to display ad mute button.\n\t     */\n\t    this.muteDiv;\n\t\n\t    /**\n\t     * Div used by the volume slider.\n\t     */\n\t    this.sliderDiv;\n\t\n\t    /**\n\t     * Volume slider level visuals\n\t     */\n\t    this.sliderLevelDiv;\n\t\n\t    /**\n\t     * Div used to display ad fullscreen button.\n\t     */\n\t    this.fullscreenDiv;\n\t\n\t    /**\n\t     * IMA SDK AdDisplayContainer.\n\t     */\n\t    this.adDisplayContainer;\n\t\n\t    /**\n\t     * True if the AdDisplayContainer has been initialized. False otherwise.\n\t     */\n\t    this.adDisplayContainerInitialized = false;\n\t\n\t    /**\n\t     * IMA SDK AdsLoader\n\t     */\n\t    this.adsLoader;\n\t\n\t    /**\n\t     * IMA SDK AdsManager\n\t     */\n\t    this.adsManager;\n\t\n\t    /**\n\t     * IMA SDK AdsRenderingSettings.\n\t     */\n\t    this.adsRenderingSettings = null;\n\t\n\t    /**\n\t     * Ad tag URL. Should return VAST, VMAP, or ad rules.\n\t     */\n\t    this.adTagUrl;\n\t\n\t    /**\n\t     * VAST, VMAP, or ad rules response. Used in lieu of fetching a response\n\t     * from an ad tag URL.\n\t     */\n\t    this.adsResponse;\n\t\n\t    /**\n\t     * Current IMA SDK Ad.\n\t     */\n\t    this.currentAd;\n\t\n\t    /**\n\t     * Timer used to track content progress.\n\t     */\n\t    this.contentTrackingTimer;\n\t\n\t    /**\n\t     * Timer used to track ad progress.\n\t     */\n\t    this.adTrackingTimer;\n\t\n\t    /**\n\t     * True if ads are currently displayed, false otherwise.\n\t     * True regardless of ad pause state if an ad is currently being displayed.\n\t     */\n\t    this.adsActive = false;\n\t\n\t    /**\n\t     * True if ad is currently playing, false if ad is paused or ads are not\n\t     * currently displayed.\n\t     */\n\t    this.adPlaying = false;\n\t\n\t    /**\n\t     * True if the ad is muted, false otherwise.\n\t     */\n\t    this.adMuted = false;\n\t\n\t    /**\n\t     * True if our content video has completed, false otherwise.\n\t     */\n\t    this.contentComplete = false;\n\t\n\t    /**\n\t     * True if ALL_ADS_COMPLETED has fired, false until then.\n\t     */\n\t     this.allAdsCompleted = false;\n\t\n\t    /**\n\t     * Handle to interval that repeatedly updates current time.\n\t     */\n\t    this.updateTimeIntervalHandle;\n\t\n\t    /**\n\t     * Handle to interval that repeatedly checks for seeking.\n\t     */\n\t    this.seekCheckIntervalHandle;\n\t\n\t    /**\n\t     * Interval (ms) on which to check if the user is seeking through the\n\t     * content.\n\t     */\n\t    this.seekCheckInterval = 1000;\n\t\n\t    /**\n\t     * Handle to interval that repeatedly checks for player resize.\n\t     */\n\t    this.resizeCheckIntervalHandle;\n\t\n\t    /**\n\t     * Interval (ms) to check for player resize for fluid support.\n\t     */\n\t    this.resizeCheckInterval = 250;\n\t\n\t    /**\n\t     * Threshold by which to judge user seeking. We check every 1000 ms to see\n\t     * if the user is seeking. In order for us to decide that they are *not*\n\t     * seeking, the content video playhead must only change by 900-1100 ms\n\t     * between checks. Any greater change and we assume the user is seeking\n\t     * through the video.\n\t     */\n\t    this.seekThreshold = 100;\n\t\n\t    /**\n\t     * Stores data for the content playhead tracker.\n\t     */\n\t    this.contentPlayheadTracker = {\n\t      currentTime: 0,\n\t      previousTime: 0,\n\t      seeking: false,\n\t      duration: 0\n\t    };\n\t\n\t    /**\n\t     * Stores data for the ad playhead tracker.\n\t     */\n\t    this.adPlayheadTracker = {\n\t      currentTime: 0,\n\t      duration: 0,\n\t      isPod: false,\n\t      adPosition: 0,\n\t      totalAds: 0\n\t    };\n\t\n\t    /**\n\t     * Stores the dimensions for the ads manager.\n\t     */\n\t    this.adsManagerDimensions = {\n\t      width: 0,\n\t      height: 0\n\t    };\n\t\n\t    /**\n\t     * Content ended listeners passed by the publisher to the plugin. Publishers\n\t     * should allow the plugin to handle content ended to ensure proper support\n\t     * of custom ad playback.\n\t     */\n\t    this.contentEndedListeners = [];\n\t\n\t    /**\n\t     * Content and ads ended listeners passed by the publisher to the plugin.\n\t     * These will be called when the plugin detects that content *and all\n\t     * ads* have completed. This differs from the contentEndedListeners in that\n\t     * contentEndedListeners will fire between content ending and a post-roll\n\t     * playing, whereas the contentAndAdsEndedListeners will fire after the\n\t     * post-roll completes.\n\t     */\n\t    this.contentAndAdsEndedListeners = [];\n\t\n\t     /**\n\t      * Listener to be called to trigger manual ad break playback.\n\t      */\n\t    this.adBreakReadyListener = undefined;\n\t\n\t    /**\n\t     * Stores the content source so we can re-populate it manually after a\n\t     * post-roll on iOS.\n\t     */\n\t    this.contentSource = '';\n\t\n\t    /**\n\t     * Local content ended listener for contentComplete.\n\t     */\n\t    this.localContentEndedListener = function() {\n\t      if (this.adsLoader && !this.contentComplete) {\n\t        this.adsLoader.contentComplete();\n\t        this.contentComplete = true;\n\t      }\n\t      for (var index in this.contentEndedListeners) {\n\t        this.contentEndedListeners[index]();\n\t      }\n\t      if (this.allAdsCompleted) {\n\t        for (var index in this.contentAndAdsEndedListeners) {\n\t          this.contentAndAdsEndedListeners[index]();\n\t        }\n\t      }\n\t      clearInterval(this.updateTimeIntervalHandle);\n\t      clearInterval(this.seekCheckIntervalHandle);\n\t      clearInterval(this.resizeCheckIntervalHandle);\n\t      if(this.player.el()) {\n\t        this.player.one('play', setUpPlayerIntervals_);\n\t      }\n\t    }.bind(this);\n\t\n\t    this.playerDisposedListener = function(){\n\t      this.contentEndedListeners, this.contentAndAdsEndedListeners = [], [];\n\t      this.contentComplete = true;\n\t      this.player.off('ended', this.localContentEndedListener);\n\t\n\t      // Bug fix: https://github.com/googleads/videojs-ima/issues/306\n\t      if (this.player.ads.adTimeoutTimeout) {\n\t        clearTimeout(this.player.ads.adTimeoutTimeout);\n\t      }\n\t\n\t      var intervalsToClear = [this.updateTimeIntervalHandle, this.seekCheckIntervalHandle,\n\t        this.adTrackingTimer, this.resizeCheckIntervalHandle];\n\t      for (var index in intervalsToClear) {\n\t        var interval = intervalsToClear[index];\n\t        if (interval) {\n\t          clearInterval(interval);\n\t        }\n\t      }\n\t      if (this.adsManager) {\n\t        this.adsManager.destroy();\n\t        this.adsManager = null;\n\t      }\n\t    }.bind(this);\n\t\n\t    this.settings = extend({}, ima_defaults, options || {});\n\t\n\t    // Currently this isn't used but I can see it being needed in the future, so\n\t    // to avoid implementation problems with later updates I'm requiring it.\n\t    if (!this.settings['id']) {\n\t      window.console.log('Error: must provide id of video.js div');\n\t      return;\n\t    }\n\t\n\t    this.controlPrefix = (this.settings.id + '_') || '';\n\t\n\t    this.contentPlayer = document.getElementById(this.settings['id'] + '_html5_api');\n\t    // Default showing countdown timer to true.\n\t    this.showCountdown = true;\n\t    if (this.settings['showCountdown'] == false) {\n\t      this.showCountdown = false;\n\t    }\n\t\n\t    this.autoPlayAdBreaks = true;\n\t    if (this.settings['autoPlayAdBreaks'] == false) {\n\t      this.autoPlayAdBreaks = false;\n\t    }\n\t\n\t    player.one('play', setUpPlayerIntervals_);\n\t\n\t    player.on('ended', this.localContentEndedListener);\n\t    player.on('dispose', this.playerDisposedListener);\n\t\n\t    var contrib_ads_defaults = {\n\t      debug: this.settings.debug,\n\t      timeout: this.settings.timeout,\n\t      prerollTimeout: this.settings.prerollTimeout\n\t    };\n\t\n\t    var ads_plugin_settings =\n\t        extend({}, contrib_ads_defaults, options['contribAdsSettings'] || {});\n\t\n\t    player.ads(ads_plugin_settings);\n\t\n\t    this.adsRenderingSettings = new google.ima.AdsRenderingSettings();\n\t    this.adsRenderingSettings.restoreCustomPlaybackStateOnAdBreakComplete = true;\n\t    if (this.settings['adsRenderingSettings']) {\n\t      for (var setting in this.settings['adsRenderingSettings']) {\n\t        this.adsRenderingSettings[setting] =\n\t            this.settings['adsRenderingSettings'][setting];\n\t      }\n\t    }\n\t\n\t    if (this.settings['locale']) {\n\t      google.ima.settings.setLocale(this.settings['locale']);\n\t    }\n\t\n\t    createAdContainer_();\n\t    this.adsLoader = new google.ima.AdsLoader(this.adDisplayContainer);\n\t\n\t    this.adsLoader.getSettings().setVpaidMode(\n\t        google.ima.ImaSdkSettings.VpaidMode.ENABLED);\n\t    if (this.settings.vpaidAllowed == false) {\n\t      this.adsLoader.getSettings().setVpaidMode(\n\t          google.ima.ImaSdkSettings.VpaidMode.DISABLED);\n\t    }\n\t    if (this.settings.vpaidMode) {\n\t      this.adsLoader.getSettings().setVpaidMode(this.settings.vpaidMode);\n\t    }\n\t\n\t    if (this.settings.locale) {\n\t      this.adsLoader.getSettings().setLocale(this.settings.locale);\n\t    }\n\t\n\t    if (this.settings.numRedirects) {\n\t      this.adsLoader.getSettings().setNumRedirects(this.settings.numRedirects);\n\t    }\n\t\n\t    this.adsLoader.getSettings().setPlayerType('videojs-ima');\n\t    this.adsLoader.getSettings().setPlayerVersion(this.VERSION);\n\t    this.adsLoader.getSettings().setAutoPlayAdBreaks(this.autoPlayAdBreaks);\n\t\n\t    this.adsLoader.addEventListener(\n\t      google.ima.AdsManagerLoadedEvent.Type.ADS_MANAGER_LOADED,\n\t      onAdsManagerLoaded_,\n\t      false);\n\t    this.adsLoader.addEventListener(\n\t      google.ima.AdErrorEvent.Type.AD_ERROR,\n\t      onAdsLoaderError_,\n\t      false);\n\t\n\t    if (!readyCallback) {\n\t      readyCallback = this.startFromReadyCallback;\n\t    }\n\t    player.on('readyforpreroll', readyCallback);\n\t    player.ready(function() {\n\t      player.on('fullscreenchange', onFullscreenChange_);\n\t      player.on('volumechange', onVolumeChange_);\n\t    });\n\t  };\n\t\n\t  vjs.plugin('ima', init);\n\t}(window.videojs));\n\n\n/***/ },\n/* 110 */\n/***/ function(module, exports) {\n\n\t/*\n\t* videojs-ga - v0.4.2 - 2016-11-03\n\t* Copyright (c) 2016 Michael Bensoussan\n\t* Licensed MIT\n\t*/\n\t(function() {\n\t  var __indexOf = [].indexOf || function(item) { for (var i = 0, l = this.length; i < l; i++) { if (i in this && this[i] === item) return i; } return -1; };\n\t\n\t  videojs.plugin('ga', function(options) {\n\t    var adend, adpause, adserror, adskip, adstart, adtimeout, autoLabel, dataSetupOptions, defaultsEventsToTrack, end, ended, error, eventCategory, eventLabel, eventsToTrack, firstplay, fullscreen, getCurrentTime, getCurrentValue, init, interval, isFinite, loaded, parsedOptions, pause, percentsAlreadyTracked, percentsPlayedInterval, play, playing, resize, secondsPlayed, secondsPlayedInterval, secondsPlayedMoments, seekEnd, seekStart, seeking, sendbeacon, startTimeTracking, stopTimeTracking, timeupdate, trackReplaySeconds, trackSeconds, trackingTime, volumeChange,\n\t      _this = this;\n\t    if (options == null) {\n\t      options = {};\n\t    }\n\t    dataSetupOptions = {};\n\t    if (this.options_['data-setup']) {\n\t      parsedOptions = JSON.parse(this.options_['data-setup']);\n\t      if (parsedOptions.ga) {\n\t        dataSetupOptions = parsedOptions.ga;\n\t      }\n\t    }\n\t    defaultsEventsToTrack = ['loaded', 'percentsPlayed', 'secondsPlayed', 'start', 'end', 'seek', 'play', 'pause', 'resize', 'volumeChange', 'error', 'fullscreen', 'adstart', 'adpause', 'adend', 'adskip', 'adtimeout', 'adserror'];\n\t    eventsToTrack = options.eventsToTrack || dataSetupOptions.eventsToTrack || defaultsEventsToTrack;\n\t    eventCategory = options.eventCategory || dataSetupOptions.eventCategory || 'Video';\n\t    autoLabel = options.autoLabel != null ? options.autoLabel : true;\n\t    eventLabel = options.eventLabel || dataSetupOptions.eventLabel;\n\t    percentsPlayedInterval = options.percentsPlayedInterval || dataSetupOptions.percentsPlayedInterval || 10;\n\t    secondsPlayedInterval = options.secondsPlayedInterval || dataSetupOptions.secondsPlayedInterval || 60;\n\t    secondsPlayedMoments = options.secondsPlayedMoments || dataSetupOptions.secondsPlayedMoments;\n\t    trackReplaySeconds = options.trackReplaySeconds;\n\t    percentsAlreadyTracked = [];\n\t    seekStart = seekEnd = 0;\n\t    seeking = false;\n\t    ended = false;\n\t    trackingTime = false;\n\t    secondsPlayed = 0;\n\t    isFinite = void 0;\n\t    trackSeconds = void 0;\n\t    interval = void 0;\n\t    options.debug = options.debug || false;\n\t    init = function() {\n\t      isFinite = Number.isFinite(_this.duration());\n\t      trackSeconds = __indexOf.call(eventsToTrack, 'secondsPlayed') >= 0 && (!isFinite || options.trackFiniteSeconds);\n\t      if (!eventLabel && autoLabel) {\n\t        eventLabel = _this.currentSrc().split('/').slice(-1)[0].replace(/\\.(\\w{3,4})(\\?.*)?$/i, '');\n\t      }\n\t      if (!isFinite && !(options.eventCategory || dataSetupOptions.eventCategory)) {\n\t        eventCategory = 'Stream';\n\t      }\n\t      return startTimeTracking();\n\t    };\n\t    loaded = function() {\n\t      init();\n\t      if (__indexOf.call(eventsToTrack, 'loadedmetadata') >= 0) {\n\t        sendbeacon('loadedmetadata', true);\n\t      }\n\t    };\n\t    timeupdate = function() {\n\t      var currentTime, duration, percent, percentPlayed, _i;\n\t      if (!isFinite) {\n\t        return;\n\t      }\n\t      currentTime = getCurrentValue();\n\t      duration = Math.round(this.duration());\n\t      percentPlayed = Math.round(currentTime / duration * 100);\n\t      if (percentsPlayedInterval) {\n\t        for (percent = _i = 0; _i <= 99; percent = _i += percentsPlayedInterval) {\n\t          if (percentPlayed >= percent && __indexOf.call(percentsAlreadyTracked, percent) < 0) {\n\t            if (__indexOf.call(eventsToTrack, 'start') >= 0 && percent === 0 && percentPlayed > 0) {\n\t              sendbeacon('start', true);\n\t            } else if (__indexOf.call(eventsToTrack, 'percentsPlayed') >= 0 && percentPlayed !== 0) {\n\t              sendbeacon('percent played', true, percent);\n\t            }\n\t            if (percentPlayed > 0) {\n\t              percentsAlreadyTracked.push(percent);\n\t            }\n\t          }\n\t        }\n\t      }\n\t      if (__indexOf.call(eventsToTrack, 'seek') >= 0) {\n\t        seekStart = seekEnd;\n\t        seekEnd = currentTime;\n\t        if (Math.abs(seekStart - seekEnd) > 1) {\n\t          seeking = true;\n\t          sendbeacon('seek start', false, seekStart);\n\t          sendbeacon('seek end', false, seekEnd);\n\t        }\n\t      }\n\t    };\n\t    startTimeTracking = function() {\n\t      var currentTime;\n\t      if (!trackSeconds || trackingTime) {\n\t        return;\n\t      }\n\t      trackingTime = true;\n\t      currentTime = getCurrentTime();\n\t      return interval = setInterval(function() {\n\t        if (!(getCurrentTime() > currentTime)) {\n\t          return;\n\t        }\n\t        secondsPlayed++;\n\t        if (__indexOf.call(secondsPlayedMoments, secondsPlayed) >= 0 || !(secondsPlayed % secondsPlayedInterval)) {\n\t          sendbeacon('seconds played', true, secondsPlayed);\n\t        }\n\t      }, 1000);\n\t    };\n\t    stopTimeTracking = function() {\n\t      clearInterval(interval);\n\t      return trackingTime = false;\n\t    };\n\t    firstplay = function() {\n\t      startTimeTracking();\n\t      if (__indexOf.call(eventsToTrack, 'start') >= 0 && !isFinite) {\n\t        return sendbeacon('start', true);\n\t      }\n\t    };\n\t    end = function() {\n\t      ended = true;\n\t      stopTimeTracking();\n\t      if (trackReplaySeconds) {\n\t        secondsPlayed = 0;\n\t      } else {\n\t        trackSeconds = false;\n\t      }\n\t      sendbeacon('end', true);\n\t    };\n\t    play = function() {\n\t      var currentTime;\n\t      startTimeTracking();\n\t      currentTime = getCurrentValue();\n\t      if (currentTime > 0 || __indexOf.call(eventsToTrack, 'start') < 0) {\n\t        sendbeacon('play', true, currentTime);\n\t      }\n\t      if (ended && currentTime === 0 && trackReplaySeconds) {\n\t        sendbeacon('start', true);\n\t      }\n\t      seeking = false;\n\t    };\n\t    playing = function() {\n\t      startTimeTracking();\n\t      seeking = false;\n\t    };\n\t    pause = function() {\n\t      var currentTime, duration;\n\t      stopTimeTracking();\n\t      currentTime = getCurrentValue();\n\t      duration = Math.round(this.duration());\n\t      if (currentTime !== duration && !seeking) {\n\t        sendbeacon('pause', false, currentTime);\n\t      }\n\t    };\n\t    volumeChange = function() {\n\t      var volume;\n\t      volume = this.muted() === true ? 0 : this.volume();\n\t      sendbeacon('volume change', false, volume);\n\t    };\n\t    resize = function() {\n\t      sendbeacon('resize - ' + this.width() + '*' + this.height(), true);\n\t    };\n\t    error = function() {\n\t      var currentTime;\n\t      currentTime = getCurrentValue();\n\t      sendbeacon('error', true, currentTime);\n\t    };\n\t    fullscreen = function() {\n\t      var currentTime;\n\t      currentTime = getCurrentValue();\n\t      if ((typeof this.isFullscreen === \"function\" ? this.isFullscreen() : void 0) || (typeof this.isFullScreen === \"function\" ? this.isFullScreen() : void 0)) {\n\t        sendbeacon('enter fullscreen', false, currentTime);\n\t      } else {\n\t        sendbeacon('exit fullscreen', false, currentTime);\n\t      }\n\t    };\n\t    adstart = function() {\n\t      stopTimeTracking();\n\t      if (__indexOf.call(eventsToTrack, 'adstart') >= 0) {\n\t        return sendbeacon('adstart', false, getCurrentValue());\n\t      }\n\t    };\n\t    adpause = function() {\n\t      return sendbeacon('adpause', false);\n\t    };\n\t    adend = function() {\n\t      startTimeTracking();\n\t      return sendbeacon('adend', true);\n\t    };\n\t    adskip = function() {\n\t      return sendbeacon('adskip', false);\n\t    };\n\t    adtimeout = function() {\n\t      return sendbeacon('adtimeout', true);\n\t    };\n\t    adserror = function(data) {\n\t      return sendbeacon('adserror', true, data != null ? data.AdError : void 0);\n\t    };\n\t    getCurrentValue = function() {\n\t      if (isFinite) {\n\t        return getCurrentTime();\n\t      } else {\n\t        return secondsPlayed;\n\t      }\n\t    };\n\t    getCurrentTime = function() {\n\t      return Math.round(_this.currentTime());\n\t    };\n\t    sendbeacon = function(action, nonInteraction, value) {\n\t      var eventFields;\n\t      eventFields = {\n\t        eventCategory: eventCategory,\n\t        eventAction: action,\n\t        nonInteraction: nonInteraction\n\t      };\n\t      if (eventLabel != null) {\n\t        eventFields.eventLabel = eventLabel;\n\t      }\n\t      if (value != null) {\n\t        eventFields.eventValue = value;\n\t      }\n\t      _this.trigger('gaEvent', eventFields);\n\t      if (options.sendGaEventDirectly && window.ga) {\n\t        ga('send', 'event', {\n\t          'eventCategory': eventCategory,\n\t          'eventAction': action,\n\t          'eventLabel': eventLabel,\n\t          'eventValue': value,\n\t          'nonInteraction': nonInteraction\n\t        });\n\t      }\n\t      if (options.debug) {\n\t        console.log(eventFields);\n\t      }\n\t    };\n\t    this.ready(function() {\n\t      this.on('loadedmetadata', loaded);\n\t      this.on('timeupdate', timeupdate);\n\t      this.one('firstplay', firstplay);\n\t      if (__indexOf.call(eventsToTrack, 'end') >= 0) {\n\t        this.on('ended', end);\n\t      }\n\t      if (__indexOf.call(eventsToTrack, 'play') >= 0) {\n\t        this.on('play', play);\n\t      }\n\t      this.on('playing', playing);\n\t      if (__indexOf.call(eventsToTrack, 'pause') >= 0) {\n\t        this.on('pause', pause);\n\t      }\n\t      if (__indexOf.call(eventsToTrack, 'volumeChange') >= 0) {\n\t        this.on('volumechange', volumeChange);\n\t      }\n\t      if (__indexOf.call(eventsToTrack, 'resize') >= 0) {\n\t        this.on('resize', resize);\n\t      }\n\t      if (__indexOf.call(eventsToTrack, 'error') >= 0) {\n\t        this.on('error', error);\n\t      }\n\t      if (__indexOf.call(eventsToTrack, 'fullscreen') >= 0) {\n\t        this.on('fullscreenchange', fullscreen);\n\t      }\n\t      if (__indexOf.call(eventsToTrack, 'adstart') >= 0) {\n\t        this.on('adstart', adstart);\n\t      }\n\t      if (__indexOf.call(eventsToTrack, 'adpause') >= 0) {\n\t        this.on('adpause', adpause);\n\t      }\n\t      if (__indexOf.call(eventsToTrack, 'adend') >= 0) {\n\t        this.on('adend', adend);\n\t      }\n\t      if (__indexOf.call(eventsToTrack, 'adskip') >= 0) {\n\t        this.on('adskip', adskip);\n\t      }\n\t      if (__indexOf.call(eventsToTrack, 'adtimeout') >= 0) {\n\t        this.on('adtimeout', adtimeout);\n\t      }\n\t      if (__indexOf.call(eventsToTrack, 'adserror') >= 0) {\n\t        return this.on('adserror', adserror);\n\t      }\n\t    });\n\t    return {\n\t      'sendbeacon': sendbeacon\n\t    };\n\t  });\n\t\n\t}).call(this);\n\n\n/***/ },\n/* 111 */\n/***/ function(module, exports) {\n\n\t/*!\n\t videojs-social - v1.5.2 - 2015-09-15\n\t * Copyright (c) 2015 Brightcove; Licensed https://accounts.brightcove.com/en/terms-and-conditions\n\t */\n\t\n\t/*! videojs-endscreen - v0.0.0 - 2014-10-13\n\t * Copyright (c) 2014 Brightcove\n\t * Modified by Hany alsamman for support videojs-5\n\t */\n\t(function (window, videojs) {\n\t    'use strict';\n\t\n\t    /**\n\t     * Initialize the plugin.\n\t     * @param options (optional) {object} configuration for the plugin\n\t     */\n\t    var endscreen = function (options) {\n\t        var player = this,\n\t            hasAds = !!(player.ads),\n\t            videoFinished = false,\n\t            adStarted = false,\n\t            adFinished = false;\n\t\n\t        /**\n\t         * videojs-ima3 appears to be firing an `adend` event at the start of the actual video when the ad\n\t         * is a postroll. We can account for it by checking if start was called and then if end was called.\n\t         * If a postroll is being run, it will bind displaying the Overlay to `adend` instead of `ended`.\n\t         */\n\t        if (hasAds) {\n\t            player.on('adstart', function () {\n\t                adStarted = true;\n\t                adFinished = false;\n\t            });\n\t\n\t            player.on('adend', function () {\n\t                if (adStarted) {\n\t                    adFinished = true;\n\t                }\n\t            });\n\t        }\n\t\n\t        player.on('ended', function () {\n\t            if (!videoFinished && (!hasAds || (adStarted && adFinished) || (!adStarted && !adFinished))) {\n\t                videoFinished = true;\n\t            }\n\t\n\t            if (videoFinished && hasAds && !adFinished) {\n\t                player.on('adend', function () {\n\t                    player.trigger('endscreen');\n\t                });\n\t            } else if (videoFinished) {\n\t                player.trigger('endscreen');\n\t            }\n\t        });\n\t    };\n\t\n\t    // register the plugin\n\t    videojs.plugin('endscreen', endscreen);\n\t})(window, window.videojs);\n\t\n\t/*! videojs-social - v0.0.0 - 2014-5-1\n\t * Copyright (c) 2014 Brightcove */\n\t(function (window, videojs) {\n\t    'use strict';\n\t\n\t    // Allocate all variables to be used\n\t    var defaults = {\n\t            title: '',\n\t            description: '',\n\t            url: '',\n\t            deeplinking: false,\n\t            displayAfterVideo: false,\n\t            offset: '00:00:00',\n\t            services: {\n\t                facebook: true,\n\t                google: true,\n\t                twitter: true,\n\t                tumblr: true,\n\t                pinterest: true,\n\t                linkedin: true\n\t            }\n\t        },\n\t        addEvent = function (el, type, callback) {\n\t            if (el.addEventListener) {\n\t                return el.addEventListener(type, callback, false);\n\t            }\n\t\n\t            // IE8 is onclick, not click\n\t            if (!el.addEventListener && type === 'click') {\n\t                type = 'onclick';\n\t            }\n\t            return el.attachEvent(type, callback);\n\t        },\n\t\n\t        removeEvent = function (el, type, callback) {\n\t            if (el.removeEventListener) {\n\t                return el.removeEventListener(type, callback, false);\n\t            }\n\t            if (!el.removeEventListener && type === 'click') {\n\t                type = 'onclick';\n\t            }\n\t            return el.detachEvent(type, callback);\n\t        },\n\t\n\t        social,\n\t        SocialButton,\n\t        SocialOverlay;\n\t\n\t    var handleEvent = function (e) {\n\t        e.preventDefault();\n\t        window.open(\n\t            this.href,\n\t            '_blank',\n\t            'width=600, height=400, top=100, left=100, titlebar=yes, modal=yes, resizable=yes, toolbar=no, status=1, location=no, menubar=no, centerscreen=yes'\n\t        );\n\t    };\n\t\n\t    /**\n\t     * Initialize the plugin.\n\t     * @param options (optional) {object} configuration for the plugin\n\t     */\n\t    social = function (options) {\n\t\n\t        var settings,\n\t            player = this;\n\t\n\t        // Merge options with the buttons defaults\n\t        settings = videojs.mergeOptions(defaults, options);\n\t\n\t        // If we are being re-initialized then remove the old stuff\n\t        if (player.controlBar.socialButton) {\n\t            player.controlBar.removeChild(player.controlBar.socialButton);\n\t            delete player.controlBar.socialButton;\n\t\n\t            if (player.socialOverlay) {\n\t                player.removeChild(player.socialOverlay);\n\t                delete player.socialOverlay;\n\t            }\n\t        }\n\t\n\t        // Add social button to player\n\t        player.controlBar.socialButton = player.controlBar.addChild('socialButton', settings);\n\t        player.socialOverlay = player.addChild('socialOverlay', settings);\n\t\n\t        // Add tabindex\n\t        player.controlBar.socialButton.el().setAttribute('tabindex', '0');\n\t\n\t        if (settings.displayAfterVideo) {\n\t            player.endscreen();\n\t            player.on('endscreen', function () {\n\t                player.socialOverlay.enableRestartButton();\n\t                player.socialOverlay.show();\n\t            });\n\t        }\n\t    };\n\t\n\t    /*\n\t     * The \"Share\" control bar button\n\t     */\n\t    SocialButton = videojs.extend(videojs.getComponent('Button'), {\n\t        constructor: function (player, options) {\n\t            videojs.getComponent('Button').call(this, player, options);\n\t\n\t            // Bind touchstart for mobile browsers and prevent default\n\t            this.on('touchstart', function (e) {\n\t                player.socialOverlay.update();\n\t                player.socialOverlay.disableRestartButton();\n\t                player.socialOverlay.show();\n\t                e.preventDefault();\n\t            });\n\t\n\t            // Bind click event for desktop browsers\n\t            this.on('click', function () {\n\t                player.socialOverlay.update();\n\t                player.socialOverlay.disableRestartButton();\n\t                player.socialOverlay.show();\n\t            });\n\t\n\t        }\n\t    });\n\t\n\t    SocialButton.prototype.createEl = function () {\n\t        return videojs.getComponent('ClickableComponent').prototype.createEl.call(this, 'div', {\n\t            className: 'vjs-share-control vjs-control',\n\t            innerHTML: '<div class=\"vjs-control-content\"><span class=\"vjs-control-text\">Share</span></div>'\n\t        }, {\n\t            role: 'button',\n\t            'aria-live': 'polite',\n\t        });\n\t    };\n\t\n\t    videojs.registerComponent('SocialButton', SocialButton);\n\t\n\t    /*\n\t     * The overlay panel that is toggled when the SocialButton is clicked\n\t     */\n\t    SocialOverlay = videojs.extend(videojs.getComponent('Component'), {\n\t        constructor: function (player, options) {\n\t\n\t            var embedCode,\n\t                start,\n\t                directLinkTextBox,\n\t                embedCodeTextBox,\n\t                offsetTextBox,\n\t                servicesHtml,\n\t                service,\n\t                restartButton;\n\t\n\t            // If we are being recreated, then remove our old self\n\t            if (player.socialOverlay) {\n\t                player.removeChild(player.socialOverlay);\n\t            }\n\t\n\t            videojs.getComponent('Component').call(this, player, options);\n\t\n\t            // set the direct link and embed code\n\t            this.el().querySelector('.vjs-social-embed-container input').setAttribute('value', this.getEmbedCode());\n\t            this.el().querySelector('.vjs-social-direct-link-container input').setAttribute('value', this._getUrlWithTime());\n\t\n\t            // Setup the Restart Button\n\t            restartButton = this.el().querySelector('.vjs-restart');\n\t            addEvent(restartButton, 'click', videojs.bind(this, this._restartPlayer));\n\t            addEvent(restartButton, 'activate', videojs.bind(this, this._restartPlayer));\n\t\n\t            // Hide offset if deeplinking is disabled\n\t            if (!options.deeplinking) {\n\t                start = this.el().querySelector('.vjs-social-start');\n\t                start.className += ' vjs-hidden ';\n\t            }\n\t\n\t            // Hide Embed code if disabled\n\t            if (options.removeEmbed && options.removeEmbed === true) {\n\t                this.el().querySelector('.vjs-social-embed-container').className += ' vjs-hidden ';\n\t            }\n\t\n\t            // Hide Direct Link\n\t            if (options.removeDirect && options.removeDirect === true) {\n\t                this.el().querySelector('.vjs-social-direct-link-container').className += ' vjs-hidden ';\n\t            }\n\t\n\t            // Add event to select the direct link when clicked\n\t            directLinkTextBox = this.el().querySelector('.direct-link-textbox');\n\t            addEvent(directLinkTextBox, 'click', function () {\n\t                this.select();\n\t            });\n\t\n\t            // Add event to select the embed code when clicked\n\t            embedCodeTextBox = this.el().querySelector('.embed-code-textbox');\n\t            addEvent(embedCodeTextBox, 'click', function () {\n\t                this.select();\n\t            });\n\t\n\t            this.offsetTextBox = this.el().querySelector('.start-offset-textbox');\n\t\n\t            // Bind changed event to the start offset\n\t            //  which will update the direct and embed links on changes and show it's current state\n\t            addEvent(this.offsetTextBox, 'change', videojs.bind(this, this.update));\n\t\n\t            // Bind the click event of the close button to hide the social overlay\n\t            this.closeButton = this.el().querySelector('.vjs-social-cancel');\n\t\n\t            // Catch escape key and hide dialog when pressed\n\t            addEvent(this.el(), 'keydown', function (event) {\n\t                if (player.socialOverlay.el().display !== 'none' && event.keyCode === 27) {\n\t                    // Hide the overlay, return focus to social button\n\t                    player.socialOverlay.hide();\n\t                }\n\t            }, true);\n\t\n\t\n\t            this.on('click', function (event) {\n\t                // if we clicked in the close button, we should close the overlay,\n\t                // this is specifically added to enable the closeButton in IE8\n\t                if (event.target === this.closeButton) {\n\t                    player.socialOverlay.hide();\n\t                }\n\t            });\n\t        },\n\t\n\t        update: function () {\n\t            var embedCodeTextBox = this.el().querySelector('.embed-code-textbox'),\n\t                directLinkTextBox;\n\t            var options = this.options_;\n\t\n\t            if (/^\\s*(0*[1-5]*\\d|0*[1-5]*\\d:[0-5]\\d|\\d+:[0-5]\\d:[0-5]\\d)\\s*$/.test(this.offsetTextBox.value)) {\n\t\n\t                directLinkTextBox = this.el().querySelector('.direct-link-textbox');\n\t\n\t                // update the validation state\n\t                this.offsetTextBox.className = this.offsetTextBox.className.replace(/(^|\\s)vjs-invalid/, '');\n\t\n\t                // Compute the new direct link\n\t                directLinkTextBox.value = this._getUrlWithTime();\n\t            } else {\n\t                this.offsetTextBox.className += ' vjs-invalid';\n\t            }\n\t\n\t            // Compute the new embed code\n\t            embedCodeTextBox.setAttribute('value', this.getEmbedCode());\n\t        },\n\t\n\t        enableRestartButton: function () {\n\t            var restartButton = this.el().querySelector('.vjs-restart');\n\t            restartButton.className = restartButton.className.replace(/\\bvjs\\-hidden\\b/, '');\n\t        },\n\t\n\t        disableRestartButton: function () {\n\t            var restartButton = this.el().querySelector('.vjs-restart');\n\t            if (!/\\bvjs-hidden\\b/.test(restartButton.className)) {\n\t                restartButton.className += ' vjs-hidden';\n\t            }\n\t        },\n\t\n\t        hide: function () {\n\t            videojs.getComponent('Component').prototype.hide.call(this);\n\t            if (this.previouslyPlaying) {\n\t                this.player().play();\n\t            }\n\t            // Set focus back to the social button for accessibility\n\t            this.player().controlBar.socialButton.el().focus();\n\t        },\n\t\n\t        show: function () {\n\t            videojs.getComponent('Component').prototype.show.call(this);\n\t            if (!this.player().paused()) {\n\t                this.previouslyPlaying = true;\n\t                this.player().pause();\n\t            }\n\t        }\n\t    });\n\t\n\t    SocialOverlay.prototype.createEl = function () {\n\t        var player = this.player(),\n\t            options = this.options_;\n\t\n\t        return videojs.getComponent('Component').prototype.createEl.call(this, 'div', {\n\t            className: 'vjs-social-overlay vjs-hidden',\n\t            'tabindex': -1,\n\t            innerHTML: '<div class=\"vjs-social-cancel\" role=\"button\">' +\n\t            '<div class=\"vjs-control-text\" aria-label=\"' + player.localize('Close button') + '\">' + player.localize('Close') + '</div>' +\n\t            '</div>' +\n\t            '<form>' +\n\t            '<legend>' + player.localize('Share Video') + ' ' + this._getTitle() + '</legend>' +\n\t            '<div class=\"vjs-social-link-options\">' +\n\t            '<label class=\"vjs-social-start\" aria-label=\"' + player.localize('Start From') + '\">' + player.localize('Start From') + ': <input class=\"start-offset-textbox\" type=\"text\" tabindex=\"9\" title=\"The offset must be specified using the following pattern: hh:mm:ss\" placeholder=\"hh:mm:ss\" maxlength=\"10\" value=\"' + options.offset + '\" /></label>' +\n\t            '<div class=\"vjs-social-direct-link-container\">' +\n\t            '<label class=\"vjs-social-link\" aria-label=\"Read Only: Direct Link To Content\">' + player.localize('Direct Link') + ': <input class=\"direct-link-textbox\" type=\"text\" tabindex=\"8\" readonly=\"true\" /></label>' +\n\t            '</div>' +\n\t            '</div>' +\n\t            '<div class=\"vjs-social-embed-container\">' +\n\t            '<label arial-label=\"Read Only: Embed Code\">' + player.localize('Embed Code') + ': <input class=\"embed-code-textbox\" type=\"text\" tabindex=\"10\" readonly=\"true\" /></label>' +\n\t            '</div>' +\n\t            '</form>' +\n\t            '<button tabindex=\"0\" class=\"vjs-restart vjs-hidden\">' +\n\t            '<div class=\"vjs-control-content\"><span class=\"vjs-control-text\">' + player.localize('Restart') + '</span></div>' +\n\t            '</button>'\n\t        }, {\n\t            'aria-role': 'dialog',\n\t            'aria-label': player.localize('Sharing Dialog'),\n\t        });\n\t    };\n\t\n\t    /*\n\t     * Computes the new embed code\n\t     */\n\t    SocialOverlay.prototype.getEmbedCode = function () {\n\t        // Declare variables\n\t        var offset, offsetTextBox, playerOptions, embedCode, urlTemplate, player, options;\n\t\n\t        player = this.player();\n\t        options = this.options_;\n\t\n\t        // Assign converted initial options offset value\n\t        offset = options.deeplinking ? this._convertOffset(options.offset) : null;\n\t        // If we can't find the offset control we should use the options value\n\t        offsetTextBox = player.el().querySelector('.start-offset-textbox');\n\t        if (offsetTextBox && options.deeplinking) {\n\t            offset = this._convertOffset(offsetTextBox.value);\n\t        }\n\t        // Get the player options so we can retrieve the account_id, player_id, and embed_id\n\t        playerOptions = player.options_;\n\t\n\t        // encode the URL for security\n\t        if (playerOptions['data-embed-url']) {\n\t            playerOptions['data-embed-url'] = encodeURI(playerOptions['data-embed-url']);\n\t        }\n\t\n\t        // Fallback Url Template\n\t        urlTemplate = '//players.brightcove.net/{{account_id}}/{{player_id}}_{{embed_id}}/index.html{{video_id}}';\n\t\n\t        // If in iframe use its URL\n\t        // jshint -W116\n\t        if (window.parent != window) {\n\t            urlTemplate = window.location.href;\n\t        }\n\t        // jshint +W116\n\t\n\t        // Embed code\n\t        if (options.embedCode) {\n\t            embedCode = options.embedCode;\n\t        } else {\n\t            embedCode = '<iframe src=\\'' + urlTemplate + '{{offset}}\\' allowfullscreen frameborder=0></iframe>';\n\t        }\n\t\n\t        // Construct the embed code snippet. Replace values with known template params.\n\t        return embedCode\n\t            .replace('{{account_id}}', playerOptions['data-account'])\n\t            .replace('{{player_id}}', playerOptions['data-player'])\n\t            .replace('{{embed_id}}', playerOptions['data-embed'])\n\t            .replace('{{video_id}}', (player.mediainfo && player.mediainfo.id) ? '?videoId=' + player.mediainfo.id : '')\n\t            .replace('{{offset}}', offset ? '#t=' + offset : '');\n\t    };\n\t\n\t    /*\n\t     * Determines the URL to be dispayed in the share dialog\n\t     */\n\t    SocialOverlay.prototype._getUrl = function () {\n\t        var url,\n\t            options = this.options_;\n\t\n\t        // Determine the custom base url\n\t        // In IE8, window.parent doesn't === window, but it does == equal it.\n\t        // jshint -W116\n\t        if (options.url) {\n\t            url = options.url;\n\t        } else if (window.parent != window) {\n\t            url = document.referrer;\n\t        } else {\n\t            url = window.location.href;\n\t        }\n\t        // jshint +W116\n\t\n\t        return url;\n\t    };\n\t\n\t    SocialOverlay.prototype._getUrlWithTime = function () {\n\t        var options = this.options_,\n\t            url = this._getUrl(),\n\t            offset;\n\t\n\t        // Get the start offset textbox (Only include offset if deeplinking is enabled)\n\t        if (options.deeplinking) {\n\t            offset = this._convertOffset(this.el().querySelector('.start-offset-textbox').value);\n\t        }\n\t\n\t        // Append the offset if available\n\t        if (offset) {\n\t            url = url + '#t=' + offset;\n\t        }\n\t\n\t        return url;\n\t    };\n\t\n\t    /*\n\t     * Updates the title based on the media date or the custom options setting\n\t     */\n\t    SocialOverlay.prototype._getTitle = function () {\n\t        var playerOptions,\n\t            options = this.options_,\n\t            player = this.player(),\n\t            title = options.title;\n\t\n\t        // If there's no title try and find one in the options\n\t        if (!title) {\n\t\n\t            // Get player options\n\t            playerOptions = player.options_;\n\t\n\t            // Search the player options data media for a title\n\t            if (playerOptions['data-media'] && playerOptions['data-media'].title) {\n\t                title = playerOptions['data-media'].title;\n\t            }\n\t        }\n\t\n\t        return title || '';\n\t    };\n\t    /*\n\t     * Converts an offset from hh:mm:ss to the YouTube format of 1h27m14s\n\t     */\n\t    SocialOverlay.prototype._convertOffset = function (offset) {\n\t\n\t        var segments,\n\t            seconds = 0,\n\t            multiples = [1, 60, 3600],\n\t            ret = '',\n\t            i,\n\t            s;\n\t\n\t        if (offset) {\n\t            segments = offset.split(':');\n\t            if (segments.length >= 1 && segments.length <= 3) {\n\t                // Parse each segment into an integer to remove leading zeros and other dentritis\n\t                for (i = 0; i < segments.length; ++i) {\n\t                    s = parseInt(segments[i], 10) * multiples[segments.length - 1 - i];\n\t                    if (isNaN(s)) {\n\t                        return '';\n\t                    }\n\t                    seconds += s;\n\t                }\n\t                ret = '';\n\t                if (seconds >= 3600 && Math.floor(seconds / 3600) !== 0) {\n\t                    ret = Math.floor(seconds / 3600) + 'h';\n\t                    seconds = seconds % 3600;\n\t                }\n\t\n\t                if (seconds >= 60 && Math.floor(seconds / 60) !== 0) {\n\t                    ret += Math.floor(seconds / 60) + 'm';\n\t                    seconds = seconds % 60;\n\t                }\n\t\n\t                if (seconds > 0) {\n\t                    ret += seconds + 's';\n\t                }\n\t\n\t                return ret;\n\t\n\t            }\n\t        }\n\t\n\t        return '';\n\t    };\n\t\n\t    SocialOverlay.prototype._restartPlayer = function () {\n\t        var player = this.player();\n\t        player.socialOverlay.hide();\n\t        player.currentTime(0);\n\t        player.play();\n\t    };\n\t\n\t    videojs.registerComponent('SocialOverlay', SocialOverlay);\n\t\n\t    // register the plugin\n\t    videojs.plugin('social', social);\n\t\n\t    // End the closure\n\t})(window, window.videojs);\n\n\n/***/ },\n/* 112 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, '__esModule', {\n\t  value: true\n\t});\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\t\n\tvar _videoJs = __webpack_require__(3);\n\t\n\tvar _videoJs2 = _interopRequireDefault(_videoJs);\n\t\n\tvar ClickableComponent = _videoJs2['default'].getComponent('ClickableComponent');\n\t\n\t// Default options for the plugin.\n\tvar defaults = {\n\t  text: 'Download'\n\t};\n\t\n\t/**\n\t * Stack CSS class names.\n\t * @return {String}\n\t */\n\tvar buildCSSClass = function buildCSSClass() {\n\t  return 'vjs-download-button-control ' + ClickableComponent.prototype.buildCSSClass();\n\t};\n\t\n\t/**\n\t * Function to invoke when the player is ready.\n\t *\n\t * @function onPlayerReady\n\t * @param    {Player} player\n\t * @param    {Object} [options={}]\n\t */\n\tvar onPlayerReady = function onPlayerReady(player, options) {\n\t  player.addClass('vjs-download-button');\n\t\n\t  if (!player.controlBar.childNameIndex_.hasOwnProperty('DownloadButton')) {\n\t    var linkProps = {\n\t      className: buildCSSClass(),\n\t      href: player.currentSrc(),\n\t      title: options.text,\n\t      download: ''\n\t    };\n\t    var linkAttrs = {\n\t      'aria-live': 'polite',\n\t      'aria-label': options.text\n\t    };\n\t\n\t    player.controlBar.addChild(new ClickableComponent(undefined, {\n\t      el: ClickableComponent.prototype.createEl('a', linkProps, linkAttrs)\n\t    }));\n\t  }\n\t};\n\t\n\t/**\n\t * A video.js plugin.\n\t *\n\t * In the plugin function, the value of `this` is a video.js `Player`\n\t * instance. You cannot rely on the player being in a \"ready\" state here,\n\t * depending on how the plugin is invoked. This may or may not be important\n\t * to you; if not, remove the wait for \"ready\"!\n\t *\n\t * @function downloadButton\n\t * @param    {Object} [options={}]\n\t *           An object of options left to the plugin author to define.\n\t */\n\tvar downloadButton = function downloadButton(options) {\n\t  var _this = this;\n\t\n\t  this.ready(function () {\n\t    onPlayerReady(_this, _videoJs2['default'].mergeOptions(defaults, options));\n\t  });\n\t};\n\t\n\t// Register the plugin with video.js.\n\t_videoJs2['default'].plugin('downloadButton', downloadButton);\n\t\n\t// Include the version number.\n\tdownloadButton.VERSION = '__VERSION__';\n\t\n\texports['default'] = downloadButton;\n\tmodule.exports = exports['default'];\n\n/***/ },\n/* 113 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar require;var require;/* WEBPACK VAR INJECTION */(function(global) {/**\n\t * videojs-contrib-hls\n\t * @version 4.0.2\n\t * @copyright 2016 Brightcove, Inc\n\t * @license Apache-2.0\n\t */\n\t(function(f){if(true){module.exports=f()}else if(typeof define===\"function\"&&define.amd){define([],f)}else{var g;if(typeof window!==\"undefined\"){g=window}else if(typeof global!==\"undefined\"){g=global}else if(typeof self!==\"undefined\"){g=self}else{g=this}g.videojsContribHls = f()}})(function(){var define,module,exports;return (function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return require(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){\n\t/**\n\t * @file ad-cue-tags.js\n\t */\n\t'use strict';\n\t\n\tObject.defineProperty(exports, '__esModule', {\n\t  value: true\n\t});\n\t\n\tvar _slicedToArray = (function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i['return']) _i['return'](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError('Invalid attempt to destructure non-iterable instance'); } }; })();\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\t\n\tvar _globalWindow = require('global/window');\n\t\n\tvar _globalWindow2 = _interopRequireDefault(_globalWindow);\n\t\n\t/**\n\t * Searches for an ad cue that overlaps with the given mediaTime\n\t */\n\tvar findAdCue = function findAdCue(track, mediaTime) {\n\t  var cues = track.cues;\n\t\n\t  for (var i = 0; i < cues.length; i++) {\n\t    var cue = cues[i];\n\t\n\t    if (mediaTime >= cue.adStartTime && mediaTime <= cue.adEndTime) {\n\t      return cue;\n\t    }\n\t  }\n\t  return null;\n\t};\n\t\n\tvar updateAdCues = function updateAdCues(media, track) {\n\t  var offset = arguments.length <= 2 || arguments[2] === undefined ? 0 : arguments[2];\n\t\n\t  if (!media.segments) {\n\t    return;\n\t  }\n\t\n\t  var mediaTime = offset;\n\t  var cue = undefined;\n\t\n\t  for (var i = 0; i < media.segments.length; i++) {\n\t    var segment = media.segments[i];\n\t\n\t    if (!cue) {\n\t      // Since the cues will span for at least the segment duration, adding a fudge\n\t      // factor of half segment duration will prevent duplicate cues from being\n\t      // created when timing info is not exact (e.g. cue start time initialized\n\t      // at 10.006677, but next call mediaTime is 10.003332 )\n\t      cue = findAdCue(track, mediaTime + segment.duration / 2);\n\t    }\n\t\n\t    if (cue) {\n\t      if ('cueIn' in segment) {\n\t        // Found a CUE-IN so end the cue\n\t        cue.endTime = mediaTime;\n\t        cue.adEndTime = mediaTime;\n\t        mediaTime += segment.duration;\n\t        cue = null;\n\t        continue;\n\t      }\n\t\n\t      if (mediaTime < cue.endTime) {\n\t        // Already processed this mediaTime for this cue\n\t        mediaTime += segment.duration;\n\t        continue;\n\t      }\n\t\n\t      // otherwise extend cue until a CUE-IN is found\n\t      cue.endTime += segment.duration;\n\t    } else {\n\t      if ('cueOut' in segment) {\n\t        cue = new _globalWindow2['default'].VTTCue(mediaTime, mediaTime + segment.duration, segment.cueOut);\n\t        cue.adStartTime = mediaTime;\n\t        // Assumes tag format to be\n\t        // #EXT-X-CUE-OUT:30\n\t        cue.adEndTime = mediaTime + parseFloat(segment.cueOut);\n\t        track.addCue(cue);\n\t      }\n\t\n\t      if ('cueOutCont' in segment) {\n\t        // Entered into the middle of an ad cue\n\t        var adOffset = undefined;\n\t        var adTotal = undefined;\n\t\n\t        // Assumes tag formate to be\n\t        // #EXT-X-CUE-OUT-CONT:10/30\n\t\n\t        var _segment$cueOutCont$split$map = segment.cueOutCont.split('/').map(parseFloat);\n\t\n\t        var _segment$cueOutCont$split$map2 = _slicedToArray(_segment$cueOutCont$split$map, 2);\n\t\n\t        adOffset = _segment$cueOutCont$split$map2[0];\n\t        adTotal = _segment$cueOutCont$split$map2[1];\n\t\n\t        cue = new _globalWindow2['default'].VTTCue(mediaTime, mediaTime + segment.duration, '');\n\t        cue.adStartTime = mediaTime - adOffset;\n\t        cue.adEndTime = cue.adStartTime + adTotal;\n\t        track.addCue(cue);\n\t      }\n\t    }\n\t    mediaTime += segment.duration;\n\t  }\n\t};\n\t\n\texports['default'] = {\n\t  updateAdCues: updateAdCues,\n\t  findAdCue: findAdCue\n\t};\n\tmodule.exports = exports['default'];\n\t},{\"global/window\":27}],2:[function(require,module,exports){\n\t/**\n\t * @file bin-utils.js\n\t */\n\t\n\t/**\n\t * convert a TimeRange to text\n\t *\n\t * @param {TimeRange} range the timerange to use for conversion\n\t * @param {Number} i the iterator on the range to convert\n\t */\n\t'use strict';\n\t\n\tObject.defineProperty(exports, '__esModule', {\n\t  value: true\n\t});\n\tvar textRange = function textRange(range, i) {\n\t  return range.start(i) + '-' + range.end(i);\n\t};\n\t\n\t/**\n\t * format a number as hex string\n\t *\n\t * @param {Number} e The number\n\t * @param {Number} i the iterator\n\t */\n\tvar formatHexString = function formatHexString(e, i) {\n\t  var value = e.toString(16);\n\t\n\t  return '00'.substring(0, 2 - value.length) + value + (i % 2 ? ' ' : '');\n\t};\n\tvar formatAsciiString = function formatAsciiString(e) {\n\t  if (e >= 0x20 && e < 0x7e) {\n\t    return String.fromCharCode(e);\n\t  }\n\t  return '.';\n\t};\n\t\n\t/**\n\t * utils to help dump binary data to the console\n\t */\n\tvar utils = {\n\t  hexDump: function hexDump(data) {\n\t    var bytes = Array.prototype.slice.call(data);\n\t    var step = 16;\n\t    var result = '';\n\t    var hex = undefined;\n\t    var ascii = undefined;\n\t\n\t    for (var j = 0; j < bytes.length / step; j++) {\n\t      hex = bytes.slice(j * step, j * step + step).map(formatHexString).join('');\n\t      ascii = bytes.slice(j * step, j * step + step).map(formatAsciiString).join('');\n\t      result += hex + ' ' + ascii + '\\n';\n\t    }\n\t    return result;\n\t  },\n\t  tagDump: function tagDump(tag) {\n\t    return utils.hexDump(tag.bytes);\n\t  },\n\t  textRanges: function textRanges(ranges) {\n\t    var result = '';\n\t    var i = undefined;\n\t\n\t    for (i = 0; i < ranges.length; i++) {\n\t      result += textRange(ranges, i) + ' ';\n\t    }\n\t    return result;\n\t  }\n\t};\n\t\n\texports['default'] = utils;\n\tmodule.exports = exports['default'];\n\t},{}],3:[function(require,module,exports){\n\t\"use strict\";\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports[\"default\"] = {\n\t  GOAL_BUFFER_LENGTH: 30\n\t};\n\tmodule.exports = exports[\"default\"];\n\t},{}],4:[function(require,module,exports){\n\t(function (global){\n\t/**\n\t * @file master-playlist-controller.js\n\t */\n\t'use strict';\n\t\n\tObject.defineProperty(exports, '__esModule', {\n\t  value: true\n\t});\n\t\n\tvar _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();\n\t\n\tvar _get = function get(_x2, _x3, _x4) { var _again = true; _function: while (_again) { var object = _x2, property = _x3, receiver = _x4; _again = false; if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { _x2 = parent; _x3 = property; _x4 = receiver; _again = true; desc = parent = undefined; continue _function; } } else if ('value' in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } } };\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== 'function' && superClass !== null) { throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\tvar _playlistLoader = require('./playlist-loader');\n\t\n\tvar _playlistLoader2 = _interopRequireDefault(_playlistLoader);\n\t\n\tvar _segmentLoader = require('./segment-loader');\n\t\n\tvar _segmentLoader2 = _interopRequireDefault(_segmentLoader);\n\t\n\tvar _ranges = require('./ranges');\n\t\n\tvar _ranges2 = _interopRequireDefault(_ranges);\n\t\n\tvar _videoJs = (typeof window !== \"undefined\" ? window['videojs'] : typeof global !== \"undefined\" ? global['videojs'] : null);\n\t\n\tvar _videoJs2 = _interopRequireDefault(_videoJs);\n\t\n\tvar _adCueTags = require('./ad-cue-tags');\n\t\n\tvar _adCueTags2 = _interopRequireDefault(_adCueTags);\n\t\n\tvar _syncController = require('./sync-controller');\n\t\n\tvar _syncController2 = _interopRequireDefault(_syncController);\n\t\n\t// 5 minute blacklist\n\tvar BLACKLIST_DURATION = 5 * 60 * 1000;\n\tvar Hls = undefined;\n\t\n\t/**\n\t * determine if an object a is differnt from\n\t * and object b. both only having one dimensional\n\t * properties\n\t *\n\t * @param {Object} a object one\n\t * @param {Object} b object two\n\t * @return {Boolean} if the object has changed or not\n\t */\n\tvar objectChanged = function objectChanged(a, b) {\n\t  if (typeof a !== typeof b) {\n\t    return true;\n\t  }\n\t  // if we have a different number of elements\n\t  // something has changed\n\t  if (Object.keys(a).length !== Object.keys(b).length) {\n\t    return true;\n\t  }\n\t\n\t  for (var prop in a) {\n\t    if (a[prop] !== b[prop]) {\n\t      return true;\n\t    }\n\t  }\n\t  return false;\n\t};\n\t\n\t/**\n\t * Parses a codec string to retrieve the number of codecs specified,\n\t * the video codec and object type indicator, and the audio profile.\n\t *\n\t * @private\n\t */\n\tvar parseCodecs = function parseCodecs(codecs) {\n\t  var result = {\n\t    codecCount: 0,\n\t    videoCodec: null,\n\t    videoObjectTypeIndicator: null,\n\t    audioProfile: null\n\t  };\n\t  var parsed = undefined;\n\t\n\t  result.codecCount = codecs.split(',').length;\n\t  result.codecCount = result.codecCount || 2;\n\t\n\t  // parse the video codec\n\t  parsed = /(^|\\s|,)+(avc1)([^ ,]*)/i.exec(codecs);\n\t  if (parsed) {\n\t    result.videoCodec = parsed[2];\n\t    result.videoObjectTypeIndicator = parsed[3];\n\t  }\n\t\n\t  // parse the last field of the audio codec\n\t  result.audioProfile = /(^|\\s|,)+mp4a.[0-9A-Fa-f]+\\.([0-9A-Fa-f]+)/i.exec(codecs);\n\t  result.audioProfile = result.audioProfile && result.audioProfile[2];\n\t\n\t  return result;\n\t};\n\t\n\t/**\n\t * Calculates the MIME type strings for a working configuration of\n\t * SourceBuffers to play variant streams in a master playlist. If\n\t * there is no possible working configuration, an empty array will be\n\t * returned.\n\t *\n\t * @param master {Object} the m3u8 object for the master playlist\n\t * @param media {Object} the m3u8 object for the variant playlist\n\t * @return {Array} the MIME type strings. If the array has more than\n\t * one entry, the first element should be applied to the video\n\t * SourceBuffer and the second to the audio SourceBuffer.\n\t *\n\t * @private\n\t */\n\tvar mimeTypesForPlaylist_ = function mimeTypesForPlaylist_(master, media) {\n\t  var container = 'mp2t';\n\t  var codecs = {\n\t    videoCodec: 'avc1',\n\t    videoObjectTypeIndicator: '.4d400d',\n\t    audioProfile: '2'\n\t  };\n\t  var audioGroup = [];\n\t  var mediaAttributes = undefined;\n\t  var previousGroup = null;\n\t\n\t  if (!media) {\n\t    // not enough information, return an error\n\t    return [];\n\t  }\n\t  // An initialization segment means the media playlists is an iframe\n\t  // playlist or is using the mp4 container. We don't currently\n\t  // support iframe playlists, so assume this is signalling mp4\n\t  // fragments.\n\t  // the existence check for segments can be removed once\n\t  // https://github.com/videojs/m3u8-parser/issues/8 is closed\n\t  if (media.segments && media.segments.length && media.segments[0].map) {\n\t    container = 'mp4';\n\t  }\n\t\n\t  // if the codecs were explicitly specified, use them instead of the\n\t  // defaults\n\t  mediaAttributes = media.attributes || {};\n\t  if (mediaAttributes.CODECS) {\n\t    (function () {\n\t      var parsedCodecs = parseCodecs(mediaAttributes.CODECS);\n\t\n\t      Object.keys(parsedCodecs).forEach(function (key) {\n\t        codecs[key] = parsedCodecs[key] || codecs[key];\n\t      });\n\t    })();\n\t  }\n\t\n\t  if (master.mediaGroups.AUDIO) {\n\t    audioGroup = master.mediaGroups.AUDIO[mediaAttributes.AUDIO];\n\t  }\n\t\n\t  // if audio could be muxed or unmuxed, use mime types appropriate\n\t  // for both scenarios\n\t  for (var groupId in audioGroup) {\n\t    if (previousGroup && !!audioGroup[groupId].uri !== !!previousGroup.uri) {\n\t      // one source buffer with muxed video and audio and another for\n\t      // the alternate audio\n\t      return ['video/' + container + '; codecs=\"' + codecs.videoCodec + codecs.videoObjectTypeIndicator + ', mp4a.40.' + codecs.audioProfile + '\"', 'audio/' + container + '; codecs=\"mp4a.40.' + codecs.audioProfile + '\"'];\n\t    }\n\t    previousGroup = audioGroup[groupId];\n\t  }\n\t  // if all video and audio is unmuxed, use two single-codec mime\n\t  // types\n\t  if (previousGroup && previousGroup.uri) {\n\t    return ['video/' + container + '; codecs=\"' + codecs.videoCodec + codecs.videoObjectTypeIndicator + '\"', 'audio/' + container + '; codecs=\"mp4a.40.' + codecs.audioProfile + '\"'];\n\t  }\n\t\n\t  // all video and audio are muxed, use a dual-codec mime type\n\t  return ['video/' + container + '; codecs=\"' + codecs.videoCodec + codecs.videoObjectTypeIndicator + ', mp4a.40.' + codecs.audioProfile + '\"'];\n\t};\n\t\n\texports.mimeTypesForPlaylist_ = mimeTypesForPlaylist_;\n\t/**\n\t * the master playlist controller controller all interactons\n\t * between playlists and segmentloaders. At this time this mainly\n\t * involves a master playlist and a series of audio playlists\n\t * if they are available\n\t *\n\t * @class MasterPlaylistController\n\t * @extends videojs.EventTarget\n\t */\n\t\n\tvar MasterPlaylistController = (function (_videojs$EventTarget) {\n\t  _inherits(MasterPlaylistController, _videojs$EventTarget);\n\t\n\t  function MasterPlaylistController(options) {\n\t    var _this = this;\n\t\n\t    _classCallCheck(this, MasterPlaylistController);\n\t\n\t    _get(Object.getPrototypeOf(MasterPlaylistController.prototype), 'constructor', this).call(this);\n\t\n\t    var url = options.url;\n\t    var withCredentials = options.withCredentials;\n\t    var mode = options.mode;\n\t    var tech = options.tech;\n\t    var bandwidth = options.bandwidth;\n\t    var externHls = options.externHls;\n\t    var useCueTags = options.useCueTags;\n\t\n\t    if (!url) {\n\t      throw new Error('A non-empty playlist URL is required');\n\t    }\n\t\n\t    Hls = externHls;\n\t\n\t    this.withCredentials = withCredentials;\n\t    this.tech_ = tech;\n\t    this.hls_ = tech.hls;\n\t    this.mode_ = mode;\n\t    this.useCueTags_ = useCueTags;\n\t    if (this.useCueTags_) {\n\t      this.cueTagsTrack_ = this.tech_.addTextTrack('metadata', 'ad-cues');\n\t      this.cueTagsTrack_.inBandMetadataTrackDispatchType = '';\n\t      this.tech_.textTracks().addTrack_(this.cueTagsTrack_);\n\t    }\n\t\n\t    this.audioTracks_ = [];\n\t    this.requestOptions_ = {\n\t      withCredentials: this.withCredentials,\n\t      timeout: null\n\t    };\n\t\n\t    this.audioGroups_ = {};\n\t\n\t    this.mediaSource = new _videoJs2['default'].MediaSource({ mode: mode });\n\t    this.audioinfo_ = null;\n\t    this.mediaSource.on('audioinfo', this.handleAudioinfoUpdate_.bind(this));\n\t\n\t    // load the media source into the player\n\t    this.mediaSource.addEventListener('sourceopen', this.handleSourceOpen_.bind(this));\n\t\n\t    this.seekable_ = _videoJs2['default'].createTimeRanges();\n\t    this.hasPlayed_ = function () {\n\t      return false;\n\t    };\n\t\n\t    this.syncController_ = new _syncController2['default']();\n\t\n\t    var segmentLoaderOptions = {\n\t      hls: this.hls_,\n\t      mediaSource: this.mediaSource,\n\t      currentTime: this.tech_.currentTime.bind(this.tech_),\n\t      seekable: function seekable() {\n\t        return _this.seekable();\n\t      },\n\t      seeking: function seeking() {\n\t        return _this.tech_.seeking();\n\t      },\n\t      setCurrentTime: function setCurrentTime(a) {\n\t        return _this.tech_.setCurrentTime(a);\n\t      },\n\t      hasPlayed: function hasPlayed() {\n\t        return _this.hasPlayed_();\n\t      },\n\t      bandwidth: bandwidth,\n\t      syncController: this.syncController_\n\t    };\n\t\n\t    // setup playlist loaders\n\t    this.masterPlaylistLoader_ = new _playlistLoader2['default'](url, this.hls_, this.withCredentials);\n\t    this.setupMasterPlaylistLoaderListeners_();\n\t    this.audioPlaylistLoader_ = null;\n\t\n\t    // setup segment loaders\n\t    // combined audio/video or just video when alternate audio track is selected\n\t    this.mainSegmentLoader_ = new _segmentLoader2['default'](segmentLoaderOptions);\n\t    // alternate audio track\n\t    this.audioSegmentLoader_ = new _segmentLoader2['default'](segmentLoaderOptions);\n\t    this.setupSegmentLoaderListeners_();\n\t\n\t    this.masterPlaylistLoader_.start();\n\t  }\n\t\n\t  /**\n\t   * Register event handlers on the master playlist loader. A helper\n\t   * function for construction time.\n\t   *\n\t   * @private\n\t   */\n\t\n\t  _createClass(MasterPlaylistController, [{\n\t    key: 'setupMasterPlaylistLoaderListeners_',\n\t    value: function setupMasterPlaylistLoaderListeners_() {\n\t      var _this2 = this;\n\t\n\t      this.masterPlaylistLoader_.on('loadedmetadata', function () {\n\t        var media = _this2.masterPlaylistLoader_.media();\n\t        var requestTimeout = _this2.masterPlaylistLoader_.targetDuration * 1.5 * 1000;\n\t\n\t        _this2.requestOptions_.timeout = requestTimeout;\n\t\n\t        // if this isn't a live video and preload permits, start\n\t        // downloading segments\n\t        if (media.endList && _this2.tech_.preload() !== 'none') {\n\t          _this2.mainSegmentLoader_.playlist(media, _this2.requestOptions_);\n\t          _this2.mainSegmentLoader_.load();\n\t        }\n\t\n\t        _this2.fillAudioTracks_();\n\t        _this2.setupAudio();\n\t\n\t        try {\n\t          _this2.setupSourceBuffers_();\n\t        } catch (e) {\n\t          _videoJs2['default'].log.warn('Failed to create SourceBuffers', e);\n\t          return _this2.mediaSource.endOfStream('decode');\n\t        }\n\t        _this2.setupFirstPlay();\n\t\n\t        _this2.trigger('audioupdate');\n\t        _this2.trigger('selectedinitialmedia');\n\t      });\n\t\n\t      this.masterPlaylistLoader_.on('loadedplaylist', function () {\n\t        var updatedPlaylist = _this2.masterPlaylistLoader_.media();\n\t\n\t        if (!updatedPlaylist) {\n\t          // select the initial variant\n\t          _this2.initialMedia_ = _this2.selectPlaylist();\n\t          _this2.masterPlaylistLoader_.media(_this2.initialMedia_);\n\t          return;\n\t        }\n\t\n\t        if (_this2.useCueTags_) {\n\t          _this2.updateAdCues_(updatedPlaylist);\n\t        }\n\t\n\t        // TODO: Create a new event on the PlaylistLoader that signals\n\t        // that the segments have changed in some way and use that to\n\t        // update the SegmentLoader instead of doing it twice here and\n\t        // on `mediachange`\n\t        _this2.mainSegmentLoader_.playlist(updatedPlaylist, _this2.requestOptions_);\n\t        _this2.updateDuration();\n\t\n\t        if (!updatedPlaylist.endList) {\n\t          (function () {\n\t            var addSeekableRange = function addSeekableRange() {\n\t              var seekable = _this2.seekable();\n\t\n\t              if (seekable.length !== 0) {\n\t                _this2.mediaSource.addSeekableRange_(seekable.start(0), seekable.end(0));\n\t              }\n\t            };\n\t\n\t            if (_this2.duration() !== Infinity) {\n\t              (function () {\n\t                var onDurationchange = function onDurationchange() {\n\t                  if (_this2.duration() === Infinity) {\n\t                    addSeekableRange();\n\t                  } else {\n\t                    _this2.tech_.one('durationchange', onDurationchange);\n\t                  }\n\t                };\n\t\n\t                _this2.tech_.one('durationchange', onDurationchange);\n\t              })();\n\t            } else {\n\t              addSeekableRange();\n\t            }\n\t          })();\n\t        }\n\t      });\n\t\n\t      this.masterPlaylistLoader_.on('error', function () {\n\t        _this2.blacklistCurrentPlaylist(_this2.masterPlaylistLoader_.error);\n\t      });\n\t\n\t      this.masterPlaylistLoader_.on('mediachanging', function () {\n\t        _this2.mainSegmentLoader_.abort();\n\t        _this2.mainSegmentLoader_.pause();\n\t      });\n\t\n\t      this.masterPlaylistLoader_.on('mediachange', function () {\n\t        var media = _this2.masterPlaylistLoader_.media();\n\t        var requestTimeout = _this2.masterPlaylistLoader_.targetDuration * 1.5 * 1000;\n\t        var activeAudioGroup = undefined;\n\t        var activeTrack = undefined;\n\t\n\t        // If we don't have any more available playlists, we don't want to\n\t        // timeout the request.\n\t        if (_this2.masterPlaylistLoader_.isLowestEnabledRendition_()) {\n\t          _this2.requestOptions_.timeout = 0;\n\t        } else {\n\t          _this2.requestOptions_.timeout = requestTimeout;\n\t        }\n\t\n\t        // TODO: Create a new event on the PlaylistLoader that signals\n\t        // that the segments have changed in some way and use that to\n\t        // update the SegmentLoader instead of doing it twice here and\n\t        // on `loadedplaylist`\n\t        _this2.mainSegmentLoader_.playlist(media, _this2.requestOptions_);\n\t        _this2.mainSegmentLoader_.load();\n\t\n\t        // if the audio group has changed, a new audio track has to be\n\t        // enabled\n\t        activeAudioGroup = _this2.activeAudioGroup();\n\t        activeTrack = activeAudioGroup.filter(function (track) {\n\t          return track.enabled;\n\t        })[0];\n\t        if (!activeTrack) {\n\t          _this2.setupAudio();\n\t          _this2.trigger('audioupdate');\n\t        }\n\t\n\t        _this2.tech_.trigger({\n\t          type: 'mediachange',\n\t          bubbles: true\n\t        });\n\t      });\n\t    }\n\t\n\t    /**\n\t     * Register event handlers on the segment loaders. A helper function\n\t     * for construction time.\n\t     *\n\t     * @private\n\t     */\n\t  }, {\n\t    key: 'setupSegmentLoaderListeners_',\n\t    value: function setupSegmentLoaderListeners_() {\n\t      var _this3 = this;\n\t\n\t      this.mainSegmentLoader_.on('progress', function () {\n\t        // figure out what stream the next segment should be downloaded from\n\t        // with the updated bandwidth information\n\t        _this3.masterPlaylistLoader_.media(_this3.selectPlaylist());\n\t\n\t        _this3.trigger('progress');\n\t      });\n\t\n\t      this.mainSegmentLoader_.on('error', function () {\n\t        _this3.blacklistCurrentPlaylist(_this3.mainSegmentLoader_.error());\n\t      });\n\t\n\t      this.mainSegmentLoader_.on('syncinfoupdate', function () {\n\t        _this3.onSyncInfoUpdate_();\n\t      });\n\t\n\t      this.audioSegmentLoader_.on('syncinfoupdate', function () {\n\t        _this3.onSyncInfoUpdate_();\n\t      });\n\t\n\t      this.audioSegmentLoader_.on('error', function () {\n\t        _videoJs2['default'].log.warn('Problem encountered with the current alternate audio track' + '. Switching back to default.');\n\t        _this3.audioSegmentLoader_.abort();\n\t        _this3.audioPlaylistLoader_ = null;\n\t        _this3.setupAudio();\n\t      });\n\t    }\n\t  }, {\n\t    key: 'handleAudioinfoUpdate_',\n\t    value: function handleAudioinfoUpdate_(event) {\n\t      if (Hls.supportsAudioInfoChange_() || !this.audioInfo_ || !objectChanged(this.audioInfo_, event.info)) {\n\t        this.audioInfo_ = event.info;\n\t        return;\n\t      }\n\t\n\t      var error = 'had different audio properties (channels, sample rate, etc.) ' + 'or changed in some other way.  This behavior is currently ' + 'unsupported in Firefox 48 and below due to an issue: \\n\\n' + 'https://bugzilla.mozilla.org/show_bug.cgi?id=1247138\\n\\n';\n\t\n\t      var enabledIndex = this.activeAudioGroup().map(function (track) {\n\t        return track.enabled;\n\t      }).indexOf(true);\n\t      var enabledTrack = this.activeAudioGroup()[enabledIndex];\n\t      var defaultTrack = this.activeAudioGroup().filter(function (track) {\n\t        return track.properties_ && track.properties_['default'];\n\t      })[0];\n\t\n\t      // they did not switch audiotracks\n\t      // blacklist the current playlist\n\t      if (!this.audioPlaylistLoader_) {\n\t        error = 'The rendition that we tried to switch to ' + error + 'Unfortunately that means we will have to blacklist ' + 'the current playlist and switch to another. Sorry!';\n\t        this.blacklistCurrentPlaylist();\n\t      } else {\n\t        error = 'The audio track \\'' + enabledTrack.label + '\\' that we tried to ' + ('switch to ' + error + ' Unfortunately this means we will have to ') + ('return you to the main track \\'' + defaultTrack.label + '\\'. Sorry!');\n\t        defaultTrack.enabled = true;\n\t        this.activeAudioGroup().splice(enabledIndex, 1);\n\t        this.trigger('audioupdate');\n\t      }\n\t\n\t      _videoJs2['default'].log.warn(error);\n\t      this.setupAudio();\n\t    }\n\t\n\t    /**\n\t     * get the total number of media requests from the `audiosegmentloader_`\n\t     * and the `mainSegmentLoader_`\n\t     *\n\t     * @private\n\t     */\n\t  }, {\n\t    key: 'mediaRequests_',\n\t    value: function mediaRequests_() {\n\t      return this.audioSegmentLoader_.mediaRequests + this.mainSegmentLoader_.mediaRequests;\n\t    }\n\t\n\t    /**\n\t     * get the total time that media requests have spent trnasfering\n\t     * from the `audiosegmentloader_` and the `mainSegmentLoader_`\n\t     *\n\t     * @private\n\t     */\n\t  }, {\n\t    key: 'mediaTransferDuration_',\n\t    value: function mediaTransferDuration_() {\n\t      return this.audioSegmentLoader_.mediaTransferDuration + this.mainSegmentLoader_.mediaTransferDuration;\n\t    }\n\t\n\t    /**\n\t     * get the total number of bytes transfered during media requests\n\t     * from the `audiosegmentloader_` and the `mainSegmentLoader_`\n\t     *\n\t     * @private\n\t     */\n\t  }, {\n\t    key: 'mediaBytesTransferred_',\n\t    value: function mediaBytesTransferred_() {\n\t      return this.audioSegmentLoader_.mediaBytesTransferred + this.mainSegmentLoader_.mediaBytesTransferred;\n\t    }\n\t  }, {\n\t    key: 'mediaSecondsLoaded_',\n\t    value: function mediaSecondsLoaded_() {\n\t      return Math.max(this.audioSegmentLoader_.mediaSecondsLoaded + this.mainSegmentLoader_.mediaSecondsLoaded);\n\t    }\n\t\n\t    /**\n\t     * fill our internal list of HlsAudioTracks with data from\n\t     * the master playlist or use a default\n\t     *\n\t     * @private\n\t     */\n\t  }, {\n\t    key: 'fillAudioTracks_',\n\t    value: function fillAudioTracks_() {\n\t      var master = this.master();\n\t      var mediaGroups = master.mediaGroups || {};\n\t\n\t      // force a default if we have none or we are not\n\t      // in html5 mode (the only mode to support more than one\n\t      // audio track)\n\t      if (!mediaGroups || !mediaGroups.AUDIO || Object.keys(mediaGroups.AUDIO).length === 0 || this.mode_ !== 'html5') {\n\t        // \"main\" audio group, track name \"default\"\n\t        mediaGroups.AUDIO = { main: { 'default': { 'default': true } } };\n\t      }\n\t\n\t      for (var mediaGroup in mediaGroups.AUDIO) {\n\t        if (!this.audioGroups_[mediaGroup]) {\n\t          this.audioGroups_[mediaGroup] = [];\n\t        }\n\t\n\t        for (var label in mediaGroups.AUDIO[mediaGroup]) {\n\t          var properties = mediaGroups.AUDIO[mediaGroup][label];\n\t          var track = new _videoJs2['default'].AudioTrack({\n\t            id: label,\n\t            kind: properties['default'] ? 'main' : 'alternative',\n\t            enabled: false,\n\t            language: properties.language,\n\t            label: label\n\t          });\n\t\n\t          track.properties_ = properties;\n\t          this.audioGroups_[mediaGroup].push(track);\n\t        }\n\t      }\n\t\n\t      // enable the default active track\n\t      (this.activeAudioGroup().filter(function (audioTrack) {\n\t        return audioTrack.properties_['default'];\n\t      })[0] || this.activeAudioGroup()[0]).enabled = true;\n\t    }\n\t\n\t    /**\n\t     * Call load on our SegmentLoaders\n\t     */\n\t  }, {\n\t    key: 'load',\n\t    value: function load() {\n\t      this.mainSegmentLoader_.load();\n\t      if (this.audioPlaylistLoader_) {\n\t        this.audioSegmentLoader_.load();\n\t      }\n\t    }\n\t\n\t    /**\n\t     * Returns the audio group for the currently active primary\n\t     * media playlist.\n\t     */\n\t  }, {\n\t    key: 'activeAudioGroup',\n\t    value: function activeAudioGroup() {\n\t      var videoPlaylist = this.masterPlaylistLoader_.media();\n\t      var result = undefined;\n\t\n\t      if (videoPlaylist.attributes && videoPlaylist.attributes.AUDIO) {\n\t        result = this.audioGroups_[videoPlaylist.attributes.AUDIO];\n\t      }\n\t\n\t      return result || this.audioGroups_.main;\n\t    }\n\t\n\t    /**\n\t     * Determine the correct audio rendition based on the active\n\t     * AudioTrack and initialize a PlaylistLoader and SegmentLoader if\n\t     * necessary. This method is called once automatically before\n\t     * playback begins to enable the default audio track and should be\n\t     * invoked again if the track is changed.\n\t     */\n\t  }, {\n\t    key: 'setupAudio',\n\t    value: function setupAudio() {\n\t      var _this4 = this;\n\t\n\t      // determine whether seperate loaders are required for the audio\n\t      // rendition\n\t      var audioGroup = this.activeAudioGroup();\n\t      var track = audioGroup.filter(function (audioTrack) {\n\t        return audioTrack.enabled;\n\t      })[0];\n\t\n\t      if (!track) {\n\t        track = audioGroup.filter(function (audioTrack) {\n\t          return audioTrack.properties_['default'];\n\t        })[0] || audioGroup[0];\n\t        track.enabled = true;\n\t      }\n\t\n\t      // stop playlist and segment loading for audio\n\t      if (this.audioPlaylistLoader_) {\n\t        this.audioPlaylistLoader_.dispose();\n\t        this.audioPlaylistLoader_ = null;\n\t      }\n\t      this.audioSegmentLoader_.pause();\n\t\n\t      if (!track.properties_.resolvedUri) {\n\t        this.mainSegmentLoader_.resetEverything();\n\t        return;\n\t      }\n\t      this.audioSegmentLoader_.resetEverything();\n\t\n\t      // startup playlist and segment loaders for the enabled audio\n\t      // track\n\t      this.audioPlaylistLoader_ = new _playlistLoader2['default'](track.properties_.resolvedUri, this.hls_, this.withCredentials);\n\t      this.audioPlaylistLoader_.start();\n\t\n\t      this.audioPlaylistLoader_.on('loadedmetadata', function () {\n\t        var audioPlaylist = _this4.audioPlaylistLoader_.media();\n\t\n\t        _this4.audioSegmentLoader_.playlist(audioPlaylist, _this4.requestOptions_);\n\t\n\t        // if the video is already playing, or if this isn't a live video and preload\n\t        // permits, start downloading segments\n\t        if (!_this4.tech_.paused() || audioPlaylist.endList && _this4.tech_.preload() !== 'none') {\n\t          _this4.audioSegmentLoader_.load();\n\t        }\n\t\n\t        if (!audioPlaylist.endList) {\n\t          _this4.audioPlaylistLoader_.trigger('firstplay');\n\t        }\n\t      });\n\t\n\t      this.audioPlaylistLoader_.on('loadedplaylist', function () {\n\t        var updatedPlaylist = undefined;\n\t\n\t        if (_this4.audioPlaylistLoader_) {\n\t          updatedPlaylist = _this4.audioPlaylistLoader_.media();\n\t        }\n\t\n\t        if (!updatedPlaylist) {\n\t          // only one playlist to select\n\t          _this4.audioPlaylistLoader_.media(_this4.audioPlaylistLoader_.playlists.master.playlists[0]);\n\t          return;\n\t        }\n\t\n\t        _this4.audioSegmentLoader_.playlist(updatedPlaylist, _this4.requestOptions_);\n\t      });\n\t\n\t      this.audioPlaylistLoader_.on('error', function () {\n\t        _videoJs2['default'].log.warn('Problem encountered loading the alternate audio track' + '. Switching back to default.');\n\t        _this4.audioSegmentLoader_.abort();\n\t        _this4.setupAudio();\n\t      });\n\t    }\n\t\n\t    /**\n\t     * Re-tune playback quality level for the current player\n\t     * conditions. This method may perform destructive actions, like\n\t     * removing already buffered content, to readjust the currently\n\t     * active playlist quickly.\n\t     *\n\t     * @private\n\t     */\n\t  }, {\n\t    key: 'fastQualityChange_',\n\t    value: function fastQualityChange_() {\n\t      var media = this.selectPlaylist();\n\t\n\t      if (media !== this.masterPlaylistLoader_.media()) {\n\t        this.masterPlaylistLoader_.media(media);\n\t\n\t        this.mainSegmentLoader_.resetLoader();\n\t        if (this.audiosegmentloader_) {\n\t          this.audioSegmentLoader_.resetLoader();\n\t        }\n\t      }\n\t    }\n\t\n\t    /**\n\t     * Begin playback.\n\t     */\n\t  }, {\n\t    key: 'play',\n\t    value: function play() {\n\t      if (this.setupFirstPlay()) {\n\t        return;\n\t      }\n\t\n\t      if (this.tech_.ended()) {\n\t        this.tech_.setCurrentTime(0);\n\t      }\n\t\n\t      if (this.hasPlayed_()) {\n\t        this.load();\n\t      }\n\t\n\t      // if the viewer has paused and we fell out of the live window,\n\t      // seek forward to the earliest available position\n\t      if (this.tech_.duration() === Infinity) {\n\t        if (this.tech_.currentTime() < this.tech_.seekable().start(0)) {\n\t          return this.tech_.setCurrentTime(this.tech_.seekable().start(0));\n\t        }\n\t      }\n\t    }\n\t\n\t    /**\n\t     * Seek to the latest media position if this is a live video and the\n\t     * player and video are loaded and initialized.\n\t     */\n\t  }, {\n\t    key: 'setupFirstPlay',\n\t    value: function setupFirstPlay() {\n\t      var seekable = undefined;\n\t      var media = this.masterPlaylistLoader_.media();\n\t\n\t      // check that everything is ready to begin buffering in the live\n\t      // scenario\n\t      // 1) the active media playlist is available\n\t      if (media &&\n\t      // 2) the player is not paused\n\t      !this.tech_.paused() &&\n\t      // 3) the player has not started playing\n\t      !this.hasPlayed_()) {\n\t\n\t        // when the video is a live stream\n\t        if (!media.endList) {\n\t          this.trigger('firstplay');\n\t\n\t          // seek to the latest media position for live videos\n\t          seekable = this.seekable();\n\t          if (seekable.length) {\n\t            this.tech_.setCurrentTime(seekable.end(0));\n\t          }\n\t        }\n\t        this.hasPlayed_ = function () {\n\t          return true;\n\t        };\n\t        // now that we are ready, load the segment\n\t        this.load();\n\t        return true;\n\t      }\n\t      return false;\n\t    }\n\t\n\t    /**\n\t     * handle the sourceopen event on the MediaSource\n\t     *\n\t     * @private\n\t     */\n\t  }, {\n\t    key: 'handleSourceOpen_',\n\t    value: function handleSourceOpen_() {\n\t      // Only attempt to create the source buffer if none already exist.\n\t      // handleSourceOpen is also called when we are \"re-opening\" a source buffer\n\t      // after `endOfStream` has been called (in response to a seek for instance)\n\t      try {\n\t        this.setupSourceBuffers_();\n\t      } catch (e) {\n\t        _videoJs2['default'].log.warn('Failed to create Source Buffers', e);\n\t        return this.mediaSource.endOfStream('decode');\n\t      }\n\t\n\t      // if autoplay is enabled, begin playback. This is duplicative of\n\t      // code in video.js but is required because play() must be invoked\n\t      // *after* the media source has opened.\n\t      if (this.tech_.autoplay()) {\n\t        this.tech_.play();\n\t      }\n\t\n\t      this.trigger('sourceopen');\n\t    }\n\t\n\t    /**\n\t     * Blacklists a playlist when an error occurs for a set amount of time\n\t     * making it unavailable for selection by the rendition selection algorithm\n\t     * and then forces a new playlist (rendition) selection.\n\t     *\n\t     * @param {Object=} error an optional error that may include the playlist\n\t     * to blacklist\n\t     */\n\t  }, {\n\t    key: 'blacklistCurrentPlaylist',\n\t    value: function blacklistCurrentPlaylist() {\n\t      var error = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];\n\t\n\t      var currentPlaylist = undefined;\n\t      var nextPlaylist = undefined;\n\t\n\t      // If the `error` was generated by the playlist loader, it will contain\n\t      // the playlist we were trying to load (but failed) and that should be\n\t      // blacklisted instead of the currently selected playlist which is likely\n\t      // out-of-date in this scenario\n\t      currentPlaylist = error.playlist || this.masterPlaylistLoader_.media();\n\t\n\t      // If there is no current playlist, then an error occurred while we were\n\t      // trying to load the master OR while we were disposing of the tech\n\t      if (!currentPlaylist) {\n\t        this.error = error;\n\t        return this.mediaSource.endOfStream('network');\n\t      }\n\t\n\t      // Blacklist this playlist\n\t      currentPlaylist.excludeUntil = Date.now() + BLACKLIST_DURATION;\n\t\n\t      // Select a new playlist\n\t      nextPlaylist = this.selectPlaylist();\n\t\n\t      if (nextPlaylist) {\n\t        _videoJs2['default'].log.warn('Problem encountered with the current ' + 'HLS playlist. Switching to another playlist.');\n\t\n\t        return this.masterPlaylistLoader_.media(nextPlaylist);\n\t      }\n\t      _videoJs2['default'].log.warn('Problem encountered with the current ' + 'HLS playlist. No suitable alternatives found.');\n\t      // We have no more playlists we can select so we must fail\n\t      this.error = error;\n\t      return this.mediaSource.endOfStream('network');\n\t    }\n\t\n\t    /**\n\t     * Pause all segment loaders\n\t     */\n\t  }, {\n\t    key: 'pauseLoading',\n\t    value: function pauseLoading() {\n\t      this.mainSegmentLoader_.pause();\n\t      if (this.audioPlaylistLoader_) {\n\t        this.audioSegmentLoader_.pause();\n\t      }\n\t    }\n\t\n\t    /**\n\t     * set the current time on all segment loaders\n\t     *\n\t     * @param {TimeRange} currentTime the current time to set\n\t     * @return {TimeRange} the current time\n\t     */\n\t  }, {\n\t    key: 'setCurrentTime',\n\t    value: function setCurrentTime(currentTime) {\n\t      var buffered = _ranges2['default'].findRange(this.tech_.buffered(), currentTime);\n\t\n\t      if (!(this.masterPlaylistLoader_ && this.masterPlaylistLoader_.media())) {\n\t        // return immediately if the metadata is not ready yet\n\t        return 0;\n\t      }\n\t\n\t      // it's clearly an edge-case but don't thrown an error if asked to\n\t      // seek within an empty playlist\n\t      if (!this.masterPlaylistLoader_.media().segments) {\n\t        return 0;\n\t      }\n\t\n\t      // if the seek location is already buffered, continue buffering as\n\t      // usual\n\t      if (buffered && buffered.length) {\n\t        return currentTime;\n\t      }\n\t\n\t      // cancel outstanding requests so we begin buffering at the new\n\t      // location\n\t      this.mainSegmentLoader_.resetEverything();\n\t      this.mainSegmentLoader_.abort();\n\t      if (this.audioPlaylistLoader_) {\n\t        this.audioSegmentLoader_.resetEverything();\n\t        this.audioSegmentLoader_.abort();\n\t      }\n\t\n\t      if (!this.tech_.paused()) {\n\t        this.mainSegmentLoader_.load();\n\t        if (this.audioPlaylistLoader_) {\n\t          this.audioSegmentLoader_.load();\n\t        }\n\t      }\n\t    }\n\t\n\t    /**\n\t     * get the current duration\n\t     *\n\t     * @return {TimeRange} the duration\n\t     */\n\t  }, {\n\t    key: 'duration',\n\t    value: function duration() {\n\t      if (!this.masterPlaylistLoader_) {\n\t        return 0;\n\t      }\n\t\n\t      if (this.mediaSource) {\n\t        return this.mediaSource.duration;\n\t      }\n\t\n\t      return Hls.Playlist.duration(this.masterPlaylistLoader_.media());\n\t    }\n\t\n\t    /**\n\t     * check the seekable range\n\t     *\n\t     * @return {TimeRange} the seekable range\n\t     */\n\t  }, {\n\t    key: 'seekable',\n\t    value: function seekable() {\n\t      return this.seekable_;\n\t    }\n\t  }, {\n\t    key: 'onSyncInfoUpdate_',\n\t    value: function onSyncInfoUpdate_() {\n\t      var media = undefined;\n\t      var mainSeekable = undefined;\n\t      var audioSeekable = undefined;\n\t\n\t      if (!this.masterPlaylistLoader_) {\n\t        return;\n\t      }\n\t\n\t      media = this.masterPlaylistLoader_.media();\n\t\n\t      if (!media) {\n\t        return;\n\t      }\n\t\n\t      mainSeekable = Hls.Playlist.seekable(media);\n\t      if (mainSeekable.length === 0) {\n\t        return;\n\t      }\n\t\n\t      if (this.audioPlaylistLoader_) {\n\t        audioSeekable = Hls.Playlist.seekable(this.audioPlaylistLoader_.media());\n\t        if (audioSeekable.length === 0) {\n\t          return;\n\t        }\n\t      }\n\t\n\t      if (!audioSeekable) {\n\t        // seekable has been calculated based on buffering video data so it\n\t        // can be returned directly\n\t        this.seekable_ = mainSeekable;\n\t        return;\n\t      }\n\t\n\t      this.seekable_ = _videoJs2['default'].createTimeRanges([[audioSeekable.start(0) > mainSeekable.start(0) ? audioSeekable.start(0) : mainSeekable.start(0), audioSeekable.end(0) < mainSeekable.end(0) ? audioSeekable.end(0) : mainSeekable.end(0)]]);\n\t    }\n\t\n\t    /**\n\t     * Update the player duration\n\t     */\n\t  }, {\n\t    key: 'updateDuration',\n\t    value: function updateDuration() {\n\t      var _this5 = this;\n\t\n\t      var oldDuration = this.mediaSource.duration;\n\t      var newDuration = Hls.Playlist.duration(this.masterPlaylistLoader_.media());\n\t      var buffered = this.tech_.buffered();\n\t      var setDuration = function setDuration() {\n\t        _this5.mediaSource.duration = newDuration;\n\t        _this5.tech_.trigger('durationchange');\n\t\n\t        _this5.mediaSource.removeEventListener('sourceopen', setDuration);\n\t      };\n\t\n\t      if (buffered.length > 0) {\n\t        newDuration = Math.max(newDuration, buffered.end(buffered.length - 1));\n\t      }\n\t\n\t      // if the duration has changed, invalidate the cached value\n\t      if (oldDuration !== newDuration) {\n\t        // update the duration\n\t        if (this.mediaSource.readyState !== 'open') {\n\t          this.mediaSource.addEventListener('sourceopen', setDuration);\n\t        } else {\n\t          setDuration();\n\t        }\n\t      }\n\t    }\n\t\n\t    /**\n\t     * dispose of the MasterPlaylistController and everything\n\t     * that it controls\n\t     */\n\t  }, {\n\t    key: 'dispose',\n\t    value: function dispose() {\n\t      this.masterPlaylistLoader_.dispose();\n\t      this.mainSegmentLoader_.dispose();\n\t\n\t      if (this.audioPlaylistLoader_) {\n\t        this.audioPlaylistLoader_.dispose();\n\t      }\n\t      this.audioSegmentLoader_.dispose();\n\t    }\n\t\n\t    /**\n\t     * return the master playlist object if we have one\n\t     *\n\t     * @return {Object} the master playlist object that we parsed\n\t     */\n\t  }, {\n\t    key: 'master',\n\t    value: function master() {\n\t      return this.masterPlaylistLoader_.master;\n\t    }\n\t\n\t    /**\n\t     * return the currently selected playlist\n\t     *\n\t     * @return {Object} the currently selected playlist object that we parsed\n\t     */\n\t  }, {\n\t    key: 'media',\n\t    value: function media() {\n\t      // playlist loader will not return media if it has not been fully loaded\n\t      return this.masterPlaylistLoader_.media() || this.initialMedia_;\n\t    }\n\t\n\t    /**\n\t     * setup our internal source buffers on our segment Loaders\n\t     *\n\t     * @private\n\t     */\n\t  }, {\n\t    key: 'setupSourceBuffers_',\n\t    value: function setupSourceBuffers_() {\n\t      var media = this.masterPlaylistLoader_.media();\n\t      var mimeTypes = undefined;\n\t\n\t      // wait until a media playlist is available and the Media Source is\n\t      // attached\n\t      if (!media || this.mediaSource.readyState !== 'open') {\n\t        return;\n\t      }\n\t\n\t      mimeTypes = mimeTypesForPlaylist_(this.masterPlaylistLoader_.master, media);\n\t      if (mimeTypes.length < 1) {\n\t        this.error = 'No compatible SourceBuffer configuration for the variant stream:' + media.resolvedUri;\n\t        return this.mediaSource.endOfStream('decode');\n\t      }\n\t      this.mainSegmentLoader_.mimeType(mimeTypes[0]);\n\t      if (mimeTypes[1]) {\n\t        this.audioSegmentLoader_.mimeType(mimeTypes[1]);\n\t      }\n\t\n\t      // exclude any incompatible variant streams from future playlist\n\t      // selection\n\t      this.excludeIncompatibleVariants_(media);\n\t    }\n\t\n\t    /**\n\t     * Blacklist playlists that are known to be codec or\n\t     * stream-incompatible with the SourceBuffer configuration. For\n\t     * instance, Media Source Extensions would cause the video element to\n\t     * stall waiting for video data if you switched from a variant with\n\t     * video and audio to an audio-only one.\n\t     *\n\t     * @param {Object} media a media playlist compatible with the current\n\t     * set of SourceBuffers. Variants in the current master playlist that\n\t     * do not appear to have compatible codec or stream configurations\n\t     * will be excluded from the default playlist selection algorithm\n\t     * indefinitely.\n\t     * @private\n\t     */\n\t  }, {\n\t    key: 'excludeIncompatibleVariants_',\n\t    value: function excludeIncompatibleVariants_(media) {\n\t      var master = this.masterPlaylistLoader_.master;\n\t      var codecCount = 2;\n\t      var videoCodec = null;\n\t      var audioProfile = null;\n\t      var codecs = undefined;\n\t\n\t      if (media.attributes && media.attributes.CODECS) {\n\t        codecs = parseCodecs(media.attributes.CODECS);\n\t        videoCodec = codecs.videoCodec;\n\t        audioProfile = codecs.audioProfile;\n\t        codecCount = codecs.codecCount;\n\t      }\n\t      master.playlists.forEach(function (variant) {\n\t        var variantCodecs = {\n\t          codecCount: 2,\n\t          videoCodec: null,\n\t          audioProfile: null\n\t        };\n\t\n\t        if (variant.attributes && variant.attributes.CODECS) {\n\t          var codecString = variant.attributes.CODECS;\n\t\n\t          variantCodecs = parseCodecs(codecString);\n\t          if (window.MediaSource && window.MediaSource.isTypeSupported && !window.MediaSource.isTypeSupported('video/mp4; codecs=\"' + codecString + '\"')) {\n\t            variant.excludeUntil = Infinity;\n\t          }\n\t        }\n\t\n\t        // if the streams differ in the presence or absence of audio or\n\t        // video, they are incompatible\n\t        if (variantCodecs.codecCount !== codecCount) {\n\t          variant.excludeUntil = Infinity;\n\t        }\n\t\n\t        // if h.264 is specified on the current playlist, some flavor of\n\t        // it must be specified on all compatible variants\n\t        if (variantCodecs.videoCodec !== videoCodec) {\n\t          variant.excludeUntil = Infinity;\n\t        }\n\t        // HE-AAC (\"mp4a.40.5\") is incompatible with all other versions of\n\t        // AAC audio in Chrome 46. Don't mix the two.\n\t        if (variantCodecs.audioProfile === '5' && audioProfile !== '5' || audioProfile === '5' && variantCodecs.audioProfile !== '5') {\n\t          variant.excludeUntil = Infinity;\n\t        }\n\t      });\n\t    }\n\t  }, {\n\t    key: 'updateAdCues_',\n\t    value: function updateAdCues_(media) {\n\t      var offset = 0;\n\t      var seekable = this.seekable();\n\t\n\t      if (seekable.length) {\n\t        offset = seekable.start(0);\n\t      }\n\t\n\t      _adCueTags2['default'].updateAdCues(media, this.cueTagsTrack_, offset);\n\t    }\n\t  }]);\n\t\n\t  return MasterPlaylistController;\n\t})(_videoJs2['default'].EventTarget);\n\t\n\texports.MasterPlaylistController = MasterPlaylistController;\n\t}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n\t},{\"./ad-cue-tags\":1,\"./playlist-loader\":6,\"./ranges\":8,\"./segment-loader\":12,\"./sync-controller\":15}],5:[function(require,module,exports){\n\t(function (global){\n\t/**\n\t * @file playback-watcher.js\n\t */\n\t'use strict';\n\t\n\tObject.defineProperty(exports, '__esModule', {\n\t  value: true\n\t});\n\t\n\tvar _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }\n\t\n\tvar _ranges = require('./ranges');\n\t\n\tvar _ranges2 = _interopRequireDefault(_ranges);\n\t\n\tvar _videoJs = (typeof window !== \"undefined\" ? window['videojs'] : typeof global !== \"undefined\" ? global['videojs'] : null);\n\t\n\tvar _videoJs2 = _interopRequireDefault(_videoJs);\n\t\n\t// Set of events that reset the playback-watcher time check logic and clear the timeout\n\tvar timerCancelEvents = ['seeking', 'seeked', 'pause', 'playing', 'error'];\n\t\n\t/**\n\t * @class PlaybackWatcher\n\t */\n\t\n\tvar PlaybackWatcher = (function () {\n\t  /**\n\t   * Represents an PlaybackWatcher object.\n\t   * @constructor\n\t   * @param {object} options an object that includes the tech and settings\n\t   */\n\t\n\t  function PlaybackWatcher(options) {\n\t    var _this = this;\n\t\n\t    _classCallCheck(this, PlaybackWatcher);\n\t\n\t    this.tech_ = options.tech;\n\t    this.seekable = options.seekable;\n\t\n\t    this.consecutiveUpdates = 0;\n\t    this.lastRecordedTime = null;\n\t    this.timer_ = null;\n\t    this.checkCurrentTimeTimeout_ = null;\n\t\n\t    if (options.debug) {\n\t      this.logger_ = _videoJs2['default'].log.bind(_videoJs2['default'], 'playback-watcher ->');\n\t    }\n\t    this.logger_('initialize');\n\t\n\t    var waitingHandler = function waitingHandler() {\n\t      return _this.waiting_();\n\t    };\n\t    var cancelTimerHandler = function cancelTimerHandler() {\n\t      return _this.cancelTimer_();\n\t    };\n\t\n\t    this.tech_.on('waiting', waitingHandler);\n\t    this.tech_.on(timerCancelEvents, cancelTimerHandler);\n\t    this.monitorCurrentTime_();\n\t\n\t    // Define the dispose function to clean up our events\n\t    this.dispose = function () {\n\t      _this.logger_('dispose');\n\t      _this.tech_.off('waiting', waitingHandler);\n\t      _this.tech_.off(timerCancelEvents, cancelTimerHandler);\n\t      if (_this.checkCurrentTimeTimeout_) {\n\t        clearTimeout(_this.checkCurrentTimeTimeout_);\n\t      }\n\t      _this.cancelTimer_();\n\t    };\n\t  }\n\t\n\t  /**\n\t   * Periodically check current time to see if playback stopped\n\t   *\n\t   * @private\n\t   */\n\t\n\t  _createClass(PlaybackWatcher, [{\n\t    key: 'monitorCurrentTime_',\n\t    value: function monitorCurrentTime_() {\n\t      this.checkCurrentTime_();\n\t\n\t      if (this.checkCurrentTimeTimeout_) {\n\t        clearTimeout(this.checkCurrentTimeTimeout_);\n\t      }\n\t\n\t      // 42 = 24 fps // 250 is what Webkit uses // FF uses 15\n\t      this.checkCurrentTimeTimeout_ = setTimeout(this.monitorCurrentTime_.bind(this), 250);\n\t    }\n\t\n\t    /**\n\t     * The purpose of this function is to emulate the \"waiting\" event on\n\t     * browsers that do not emit it when they are waiting for more\n\t     * data to continue playback\n\t     *\n\t     * @private\n\t     */\n\t  }, {\n\t    key: 'checkCurrentTime_',\n\t    value: function checkCurrentTime_() {\n\t      if (this.tech_.paused() || this.tech_.seeking()) {\n\t        return;\n\t      }\n\t\n\t      var currentTime = this.tech_.currentTime();\n\t\n\t      if (this.consecutiveUpdates >= 5 && currentTime === this.lastRecordedTime) {\n\t        this.consecutiveUpdates++;\n\t        this.waiting_();\n\t      } else if (currentTime === this.lastRecordedTime) {\n\t        this.consecutiveUpdates++;\n\t      } else {\n\t        this.consecutiveUpdates = 0;\n\t        this.lastRecordedTime = currentTime;\n\t      }\n\t    }\n\t\n\t    /**\n\t     * Cancels any pending timers and resets the 'timeupdate' mechanism\n\t     * designed to detect that we are stalled\n\t     *\n\t     * @private\n\t     */\n\t  }, {\n\t    key: 'cancelTimer_',\n\t    value: function cancelTimer_() {\n\t      this.consecutiveUpdates = 0;\n\t\n\t      if (this.timer_) {\n\t        this.logger_('cancelTimer_');\n\t        clearTimeout(this.timer_);\n\t      }\n\t\n\t      this.timer_ = null;\n\t    }\n\t\n\t    /**\n\t     * Handler for situations when we determine the player is waiting\n\t     *\n\t     * @private\n\t     */\n\t  }, {\n\t    key: 'waiting_',\n\t    value: function waiting_() {\n\t      var seekable = this.seekable();\n\t      var currentTime = this.tech_.currentTime();\n\t\n\t      if (this.tech_.seeking() || this.timer_ !== null) {\n\t        return;\n\t      }\n\t\n\t      if (this.fellOutOfLiveWindow_(seekable, currentTime)) {\n\t        var livePoint = seekable.end(seekable.length - 1);\n\t\n\t        this.logger_('Fell out of live window at time ' + currentTime + '. Seeking to ' + ('live point (seekable end) ' + livePoint));\n\t        this.cancelTimer_();\n\t        this.tech_.setCurrentTime(livePoint);\n\t\n\t        return;\n\t      }\n\t\n\t      var buffered = this.tech_.buffered();\n\t      var nextRange = _ranges2['default'].findNextRange(buffered, currentTime);\n\t\n\t      if (this.videoUnderflow_(nextRange, buffered, currentTime)) {\n\t        // Even though the video underflowed and was stuck in a gap, the audio overplayed\n\t        // the gap, leading currentTime into a buffered range. Seeking to currentTime\n\t        // allows the video to catch up to the audio position without losing any audio\n\t        // (only suffering ~3 seconds of frozen video and a pause in audio playback).\n\t        this.cancelTimer_();\n\t        this.tech_.setCurrentTime(currentTime);\n\t        return;\n\t      }\n\t\n\t      // check for gap\n\t      if (nextRange.length > 0) {\n\t        var difference = nextRange.start(0) - currentTime;\n\t\n\t        this.logger_('Stopped at ' + currentTime + ', setting timer for ' + difference + ', seeking ' + ('to ' + nextRange.start(0)));\n\t\n\t        this.timer_ = setTimeout(this.skipTheGap_.bind(this), difference * 1000, currentTime);\n\t      }\n\t    }\n\t  }, {\n\t    key: 'fellOutOfLiveWindow_',\n\t    value: function fellOutOfLiveWindow_(seekable, currentTime) {\n\t      if (seekable.length &&\n\t      // can't fall before 0 and 0 seekable start identifies VOD stream\n\t      seekable.start(0) > 0 && currentTime < seekable.start(0)) {\n\t        return true;\n\t      }\n\t\n\t      return false;\n\t    }\n\t  }, {\n\t    key: 'videoUnderflow_',\n\t    value: function videoUnderflow_(nextRange, buffered, currentTime) {\n\t      if (nextRange.length === 0) {\n\t        // Even if there is no available next range, there is still a possibility we are\n\t        // stuck in a gap due to video underflow.\n\t        var gap = this.gapFromVideoUnderflow_(buffered, currentTime);\n\t\n\t        if (gap) {\n\t          this.logger_('Encountered a gap in video from ' + gap.start + ' to ' + gap.end + '. ' + ('Seeking to current time ' + currentTime));\n\t\n\t          return true;\n\t        }\n\t      }\n\t\n\t      return false;\n\t    }\n\t\n\t    /**\n\t     * Timer callback. If playback still has not proceeded, then we seek\n\t     * to the start of the next buffered region.\n\t     *\n\t     * @private\n\t     */\n\t  }, {\n\t    key: 'skipTheGap_',\n\t    value: function skipTheGap_(scheduledCurrentTime) {\n\t      var buffered = this.tech_.buffered();\n\t      var currentTime = this.tech_.currentTime();\n\t      var nextRange = _ranges2['default'].findNextRange(buffered, currentTime);\n\t\n\t      this.cancelTimer_();\n\t\n\t      if (nextRange.length === 0 || currentTime !== scheduledCurrentTime) {\n\t        return;\n\t      }\n\t\n\t      this.logger_('skipTheGap_:', 'currentTime:', currentTime, 'scheduled currentTime:', scheduledCurrentTime, 'nextRange start:', nextRange.start(0));\n\t\n\t      // only seek if we still have not played\n\t      this.tech_.setCurrentTime(nextRange.start(0) + _ranges2['default'].TIME_FUDGE_FACTOR);\n\t    }\n\t  }, {\n\t    key: 'gapFromVideoUnderflow_',\n\t    value: function gapFromVideoUnderflow_(buffered, currentTime) {\n\t      // At least in Chrome, if there is a gap in the video buffer, the audio will continue\n\t      // playing for ~3 seconds after the video gap starts. This is done to account for\n\t      // video buffer underflow/underrun (note that this is not done when there is audio\n\t      // buffer underflow/underrun -- in that case the video will stop as soon as it\n\t      // encounters the gap, as audio stalls are more noticeable/jarring to a user than\n\t      // video stalls). The player's time will reflect the playthrough of audio, so the\n\t      // time will appear as if we are in a buffered region, even if we are stuck in a\n\t      // \"gap.\"\n\t      //\n\t      // Example:\n\t      // video buffer:   0 => 10.1, 10.2 => 20\n\t      // audio buffer:   0 => 20\n\t      // overall buffer: 0 => 10.1, 10.2 => 20\n\t      // current time: 13\n\t      //\n\t      // Chrome's video froze at 10 seconds, where the video buffer encountered the gap,\n\t      // however, the audio continued playing until it reached ~3 seconds past the gap\n\t      // (13 seconds), at which point it stops as well. Since current time is past the\n\t      // gap, findNextRange will return no ranges.\n\t      //\n\t      // To check for this issue, we see if there is a gap that starts somewhere within\n\t      // a 3 second range (3 seconds +/- 1 second) back from our current time.\n\t      var gaps = _ranges2['default'].findGaps(buffered);\n\t\n\t      for (var i = 0; i < gaps.length; i++) {\n\t        var start = gaps.start(i);\n\t        var end = gaps.end(i);\n\t\n\t        // gap is starts no more than 4 seconds back\n\t        if (currentTime - start < 4 && currentTime - start > 2) {\n\t          return {\n\t            start: start,\n\t            end: end\n\t          };\n\t        }\n\t      }\n\t\n\t      return null;\n\t    }\n\t\n\t    /**\n\t     * A debugging logger noop that is set to console.log only if debugging\n\t     * is enabled globally\n\t     *\n\t     * @private\n\t     */\n\t  }, {\n\t    key: 'logger_',\n\t    value: function logger_() {}\n\t  }]);\n\t\n\t  return PlaybackWatcher;\n\t})();\n\t\n\texports['default'] = PlaybackWatcher;\n\tmodule.exports = exports['default'];\n\t}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n\t},{\"./ranges\":8}],6:[function(require,module,exports){\n\t(function (global){\n\t/**\n\t * @file playlist-loader.js\n\t *\n\t * A state machine that manages the loading, caching, and updating of\n\t * M3U8 playlists.\n\t *\n\t */\n\t'use strict';\n\t\n\tObject.defineProperty(exports, '__esModule', {\n\t  value: true\n\t});\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\t\n\tvar _resolveUrl = require('./resolve-url');\n\t\n\tvar _resolveUrl2 = _interopRequireDefault(_resolveUrl);\n\t\n\tvar _videoJs = (typeof window !== \"undefined\" ? window['videojs'] : typeof global !== \"undefined\" ? global['videojs'] : null);\n\t\n\tvar _stream = require('./stream');\n\t\n\tvar _stream2 = _interopRequireDefault(_stream);\n\t\n\tvar _m3u8Parser = require('m3u8-parser');\n\t\n\tvar _m3u8Parser2 = _interopRequireDefault(_m3u8Parser);\n\t\n\tvar _globalWindow = require('global/window');\n\t\n\tvar _globalWindow2 = _interopRequireDefault(_globalWindow);\n\t\n\t/**\n\t  * Returns a new array of segments that is the result of merging\n\t  * properties from an older list of segments onto an updated\n\t  * list. No properties on the updated playlist will be overridden.\n\t  *\n\t  * @param {Array} original the outdated list of segments\n\t  * @param {Array} update the updated list of segments\n\t  * @param {Number=} offset the index of the first update\n\t  * segment in the original segment list. For non-live playlists,\n\t  * this should always be zero and does not need to be\n\t  * specified. For live playlists, it should be the difference\n\t  * between the media sequence numbers in the original and updated\n\t  * playlists.\n\t  * @return a list of merged segment objects\n\t  */\n\tvar updateSegments = function updateSegments(original, update, offset) {\n\t  var result = update.slice();\n\t  var length = undefined;\n\t  var i = undefined;\n\t\n\t  offset = offset || 0;\n\t  length = Math.min(original.length, update.length + offset);\n\t\n\t  for (i = offset; i < length; i++) {\n\t    result[i - offset] = (0, _videoJs.mergeOptions)(original[i], result[i - offset]);\n\t  }\n\t  return result;\n\t};\n\t\n\t/**\n\t  * Returns a new master playlist that is the result of merging an\n\t  * updated media playlist into the original version. If the\n\t  * updated media playlist does not match any of the playlist\n\t  * entries in the original master playlist, null is returned.\n\t  *\n\t  * @param {Object} master a parsed master M3U8 object\n\t  * @param {Object} media a parsed media M3U8 object\n\t  * @return {Object} a new object that represents the original\n\t  * master playlist with the updated media playlist merged in, or\n\t  * null if the merge produced no change.\n\t  */\n\tvar updateMaster = function updateMaster(master, media) {\n\t  var changed = false;\n\t  var result = (0, _videoJs.mergeOptions)(master, {});\n\t  var i = master.playlists.length;\n\t  var playlist = undefined;\n\t  var segment = undefined;\n\t  var j = undefined;\n\t\n\t  while (i--) {\n\t    playlist = result.playlists[i];\n\t    if (playlist.uri === media.uri) {\n\t      // consider the playlist unchanged if the number of segments\n\t      // are equal and the media sequence number is unchanged\n\t      if (playlist.segments && media.segments && playlist.segments.length === media.segments.length && playlist.mediaSequence === media.mediaSequence) {\n\t        continue;\n\t      }\n\t\n\t      result.playlists[i] = (0, _videoJs.mergeOptions)(playlist, media);\n\t      result.playlists[media.uri] = result.playlists[i];\n\t\n\t      // if the update could overlap existing segment information,\n\t      // merge the two lists\n\t      if (playlist.segments) {\n\t        result.playlists[i].segments = updateSegments(playlist.segments, media.segments, media.mediaSequence - playlist.mediaSequence);\n\t      }\n\t      // resolve any missing segment and key URIs\n\t      j = 0;\n\t      if (result.playlists[i].segments) {\n\t        j = result.playlists[i].segments.length;\n\t      }\n\t      while (j--) {\n\t        segment = result.playlists[i].segments[j];\n\t        if (!segment.resolvedUri) {\n\t          segment.resolvedUri = (0, _resolveUrl2['default'])(playlist.resolvedUri, segment.uri);\n\t        }\n\t        if (segment.key && !segment.key.resolvedUri) {\n\t          segment.key.resolvedUri = (0, _resolveUrl2['default'])(playlist.resolvedUri, segment.key.uri);\n\t        }\n\t        if (segment.map && !segment.map.resolvedUri) {\n\t          segment.map.resolvedUri = (0, _resolveUrl2['default'])(playlist.resolvedUri, segment.map.uri);\n\t        }\n\t      }\n\t      changed = true;\n\t    }\n\t  }\n\t  return changed ? result : null;\n\t};\n\t\n\t/**\n\t * Load a playlist from a remote loacation\n\t *\n\t * @class PlaylistLoader\n\t * @extends Stream\n\t * @param {String} srcUrl the url to start with\n\t * @param {Boolean} withCredentials the withCredentials xhr option\n\t * @constructor\n\t */\n\tvar PlaylistLoader = function PlaylistLoader(srcUrl, hls, withCredentials) {\n\t  var _this = this;\n\t\n\t  /* eslint-disable consistent-this */\n\t  var loader = this;\n\t  /* eslint-enable consistent-this */\n\t  var dispose = undefined;\n\t  var mediaUpdateTimeout = undefined;\n\t  var request = undefined;\n\t  var playlistRequestError = undefined;\n\t  var haveMetadata = undefined;\n\t\n\t  PlaylistLoader.prototype.constructor.call(this);\n\t\n\t  this.hls_ = hls;\n\t\n\t  if (!srcUrl) {\n\t    throw new Error('A non-empty playlist URL is required');\n\t  }\n\t\n\t  playlistRequestError = function (xhr, url, startingState) {\n\t    loader.setBandwidth(request || xhr);\n\t\n\t    // any in-flight request is now finished\n\t    request = null;\n\t\n\t    if (startingState) {\n\t      loader.state = startingState;\n\t    }\n\t\n\t    loader.error = {\n\t      playlist: loader.master.playlists[url],\n\t      status: xhr.status,\n\t      message: 'HLS playlist request error at URL: ' + url,\n\t      responseText: xhr.responseText,\n\t      code: xhr.status >= 500 ? 4 : 2\n\t    };\n\t\n\t    loader.trigger('error');\n\t  };\n\t\n\t  // update the playlist loader's state in response to a new or\n\t  // updated playlist.\n\t  haveMetadata = function (xhr, url) {\n\t    var parser = undefined;\n\t    var refreshDelay = undefined;\n\t    var update = undefined;\n\t\n\t    loader.setBandwidth(request || xhr);\n\t\n\t    // any in-flight request is now finished\n\t    request = null;\n\t\n\t    loader.state = 'HAVE_METADATA';\n\t\n\t    parser = new _m3u8Parser2['default'].Parser();\n\t    parser.push(xhr.responseText);\n\t    parser.end();\n\t    parser.manifest.uri = url;\n\t\n\t    // merge this playlist into the master\n\t    update = updateMaster(loader.master, parser.manifest);\n\t    refreshDelay = (parser.manifest.targetDuration || 10) * 1000;\n\t    loader.targetDuration = parser.manifest.targetDuration;\n\t    if (update) {\n\t      loader.master = update;\n\t      loader.media_ = loader.master.playlists[parser.manifest.uri];\n\t    } else {\n\t      // if the playlist is unchanged since the last reload,\n\t      // try again after half the target duration\n\t      refreshDelay /= 2;\n\t    }\n\t\n\t    // refresh live playlists after a target duration passes\n\t    if (!loader.media().endList) {\n\t      _globalWindow2['default'].clearTimeout(mediaUpdateTimeout);\n\t      mediaUpdateTimeout = _globalWindow2['default'].setTimeout(function () {\n\t        loader.trigger('mediaupdatetimeout');\n\t      }, refreshDelay);\n\t    }\n\t\n\t    loader.trigger('loadedplaylist');\n\t  };\n\t\n\t  // initialize the loader state\n\t  loader.state = 'HAVE_NOTHING';\n\t\n\t  // capture the prototype dispose function\n\t  dispose = this.dispose;\n\t\n\t  /**\n\t   * Abort any outstanding work and clean up.\n\t   */\n\t  loader.dispose = function () {\n\t    loader.stopRequest();\n\t    _globalWindow2['default'].clearTimeout(mediaUpdateTimeout);\n\t    dispose.call(this);\n\t  };\n\t\n\t  loader.stopRequest = function () {\n\t    if (request) {\n\t      var oldRequest = request;\n\t\n\t      request = null;\n\t      oldRequest.onreadystatechange = null;\n\t      oldRequest.abort();\n\t    }\n\t  };\n\t\n\t  /**\n\t   * Returns the number of enabled playlists on the master playlist object\n\t   *\n\t   * @return {Number} number of eneabled playlists\n\t   */\n\t  loader.enabledPlaylists_ = function () {\n\t    return loader.master.playlists.filter(function (element, index, array) {\n\t      return !element.excludeUntil || element.excludeUntil <= Date.now();\n\t    }).length;\n\t  };\n\t\n\t  /**\n\t   * Returns whether the current playlist is the lowest rendition\n\t   *\n\t   * @return {Boolean} true if on lowest rendition\n\t   */\n\t  loader.isLowestEnabledRendition_ = function () {\n\t    var media = loader.media();\n\t\n\t    if (!media || !media.attributes) {\n\t      return false;\n\t    }\n\t\n\t    var currentBandwidth = loader.media().attributes.BANDWIDTH || 0;\n\t\n\t    return !(loader.master.playlists.filter(function (playlist) {\n\t      var enabled = typeof playlist.excludeUntil === 'undefined' || playlist.excludeUntil <= Date.now();\n\t\n\t      if (!enabled) {\n\t        return false;\n\t      }\n\t\n\t      var bandwidth = 0;\n\t\n\t      if (playlist && playlist.attributes) {\n\t        bandwidth = playlist.attributes.BANDWIDTH;\n\t      }\n\t      return bandwidth <= currentBandwidth;\n\t    }).length > 1);\n\t  };\n\t\n\t  /**\n\t   * When called without any arguments, returns the currently\n\t   * active media playlist. When called with a single argument,\n\t   * triggers the playlist loader to asynchronously switch to the\n\t   * specified media playlist. Calling this method while the\n\t   * loader is in the HAVE_NOTHING causes an error to be emitted\n\t   * but otherwise has no effect.\n\t   *\n\t   * @param {Object=} playlis tthe parsed media playlist\n\t   * object to switch to\n\t   * @return {Playlist} the current loaded media\n\t   */\n\t  loader.media = function (playlist) {\n\t    var startingState = loader.state;\n\t    var mediaChange = undefined;\n\t\n\t    // getter\n\t    if (!playlist) {\n\t      return loader.media_;\n\t    }\n\t\n\t    // setter\n\t    if (loader.state === 'HAVE_NOTHING') {\n\t      throw new Error('Cannot switch media playlist from ' + loader.state);\n\t    }\n\t\n\t    // find the playlist object if the target playlist has been\n\t    // specified by URI\n\t    if (typeof playlist === 'string') {\n\t      if (!loader.master.playlists[playlist]) {\n\t        throw new Error('Unknown playlist URI: ' + playlist);\n\t      }\n\t      playlist = loader.master.playlists[playlist];\n\t    }\n\t\n\t    mediaChange = !loader.media_ || playlist.uri !== loader.media_.uri;\n\t\n\t    // switch to fully loaded playlists immediately\n\t    if (loader.master.playlists[playlist.uri].endList) {\n\t      // abort outstanding playlist requests\n\t      if (request) {\n\t        request.onreadystatechange = null;\n\t        request.abort();\n\t        request = null;\n\t      }\n\t      loader.state = 'HAVE_METADATA';\n\t      loader.media_ = playlist;\n\t\n\t      // trigger media change if the active media has been updated\n\t      if (mediaChange) {\n\t        loader.trigger('mediachanging');\n\t        loader.trigger('mediachange');\n\t      }\n\t      return;\n\t    }\n\t\n\t    // switching to the active playlist is a no-op\n\t    if (!mediaChange) {\n\t      return;\n\t    }\n\t\n\t    loader.state = 'SWITCHING_MEDIA';\n\t\n\t    // there is already an outstanding playlist request\n\t    if (request) {\n\t      if ((0, _resolveUrl2['default'])(loader.master.uri, playlist.uri) === request.url) {\n\t        // requesting to switch to the same playlist multiple times\n\t        // has no effect after the first\n\t        return;\n\t      }\n\t      request.onreadystatechange = null;\n\t      request.abort();\n\t      request = null;\n\t    }\n\t\n\t    // request the new playlist\n\t    if (this.media_) {\n\t      this.trigger('mediachanging');\n\t    }\n\t    request = this.hls_.xhr({\n\t      uri: (0, _resolveUrl2['default'])(loader.master.uri, playlist.uri),\n\t      withCredentials: withCredentials\n\t    }, function (error, req) {\n\t      // disposed\n\t      if (!request) {\n\t        return;\n\t      }\n\t\n\t      if (error) {\n\t        return playlistRequestError(request, playlist.uri, startingState);\n\t      }\n\t\n\t      haveMetadata(req, playlist.uri);\n\t\n\t      // fire loadedmetadata the first time a media playlist is loaded\n\t      if (startingState === 'HAVE_MASTER') {\n\t        loader.trigger('loadedmetadata');\n\t      } else {\n\t        loader.trigger('mediachange');\n\t      }\n\t    });\n\t  };\n\t\n\t  /**\n\t   * set the bandwidth on an xhr to the bandwidth on the playlist\n\t   */\n\t  loader.setBandwidth = function (xhr) {\n\t    loader.bandwidth = xhr.bandwidth;\n\t  };\n\t\n\t  // live playlist staleness timeout\n\t  loader.on('mediaupdatetimeout', function () {\n\t    if (loader.state !== 'HAVE_METADATA') {\n\t      // only refresh the media playlist if no other activity is going on\n\t      return;\n\t    }\n\t\n\t    loader.state = 'HAVE_CURRENT_METADATA';\n\t    request = this.hls_.xhr({\n\t      uri: (0, _resolveUrl2['default'])(loader.master.uri, loader.media().uri),\n\t      withCredentials: withCredentials\n\t    }, function (error, req) {\n\t      // disposed\n\t      if (!request) {\n\t        return;\n\t      }\n\t\n\t      if (error) {\n\t        return playlistRequestError(request, loader.media().uri);\n\t      }\n\t      haveMetadata(request, loader.media().uri);\n\t    });\n\t  });\n\t\n\t  // setup initial sync info\n\t  loader.on('firstplay', function () {\n\t    var playlist = loader.media();\n\t\n\t    if (playlist) {\n\t      playlist.syncInfo = {\n\t        mediaSequence: playlist.mediaSequence,\n\t        time: 0\n\t      };\n\t    }\n\t  });\n\t\n\t  /**\n\t   * pause loading of the playlist\n\t   */\n\t  loader.pause = function () {\n\t    loader.stopRequest();\n\t    _globalWindow2['default'].clearTimeout(mediaUpdateTimeout);\n\t  };\n\t\n\t  /**\n\t   * start loading of the playlist\n\t   */\n\t  loader.load = function () {\n\t    if (loader.started) {\n\t      if (!loader.media().endList) {\n\t        loader.trigger('mediaupdatetimeout');\n\t      } else {\n\t        loader.trigger('loadedplaylist');\n\t      }\n\t    } else {\n\t      loader.start();\n\t    }\n\t  };\n\t\n\t  /**\n\t   * start loading of the playlist\n\t   */\n\t  loader.start = function () {\n\t    loader.started = true;\n\t\n\t    // request the specified URL\n\t    request = _this.hls_.xhr({\n\t      uri: srcUrl,\n\t      withCredentials: withCredentials\n\t    }, function (error, req) {\n\t      var parser = undefined;\n\t      var playlist = undefined;\n\t      var i = undefined;\n\t\n\t      // disposed\n\t      if (!request) {\n\t        return;\n\t      }\n\t\n\t      // clear the loader's request reference\n\t      request = null;\n\t\n\t      if (error) {\n\t        loader.error = {\n\t          status: req.status,\n\t          message: 'HLS playlist request error at URL: ' + srcUrl,\n\t          responseText: req.responseText,\n\t          // MEDIA_ERR_NETWORK\n\t          code: 2\n\t        };\n\t        return loader.trigger('error');\n\t      }\n\t\n\t      parser = new _m3u8Parser2['default'].Parser();\n\t      parser.push(req.responseText);\n\t      parser.end();\n\t\n\t      loader.state = 'HAVE_MASTER';\n\t\n\t      parser.manifest.uri = srcUrl;\n\t\n\t      // loaded a master playlist\n\t      if (parser.manifest.playlists) {\n\t        loader.master = parser.manifest;\n\t\n\t        // setup by-URI lookups and resolve media playlist URIs\n\t        i = loader.master.playlists.length;\n\t        while (i--) {\n\t          playlist = loader.master.playlists[i];\n\t          loader.master.playlists[playlist.uri] = playlist;\n\t          playlist.resolvedUri = (0, _resolveUrl2['default'])(loader.master.uri, playlist.uri);\n\t        }\n\t\n\t        // resolve any media group URIs\n\t        for (var groupKey in loader.master.mediaGroups.AUDIO) {\n\t          for (var labelKey in loader.master.mediaGroups.AUDIO[groupKey]) {\n\t            var alternateAudio = loader.master.mediaGroups.AUDIO[groupKey][labelKey];\n\t\n\t            if (alternateAudio.uri) {\n\t              alternateAudio.resolvedUri = (0, _resolveUrl2['default'])(loader.master.uri, alternateAudio.uri);\n\t            }\n\t          }\n\t        }\n\t\n\t        loader.trigger('loadedplaylist');\n\t        if (!request) {\n\t          // no media playlist was specifically selected so start\n\t          // from the first listed one\n\t          loader.media(parser.manifest.playlists[0]);\n\t        }\n\t        return;\n\t      }\n\t\n\t      // loaded a media playlist\n\t      // infer a master playlist if none was previously requested\n\t      loader.master = {\n\t        mediaGroups: {\n\t          'AUDIO': {},\n\t          'VIDEO': {},\n\t          'CLOSED-CAPTIONS': {},\n\t          'SUBTITLES': {}\n\t        },\n\t        uri: _globalWindow2['default'].location.href,\n\t        playlists: [{\n\t          uri: srcUrl\n\t        }]\n\t      };\n\t      loader.master.playlists[srcUrl] = loader.master.playlists[0];\n\t      loader.master.playlists[0].resolvedUri = srcUrl;\n\t      haveMetadata(req, srcUrl);\n\t      return loader.trigger('loadedmetadata');\n\t    });\n\t  };\n\t};\n\t\n\tPlaylistLoader.prototype = new _stream2['default']();\n\t\n\texports['default'] = PlaylistLoader;\n\tmodule.exports = exports['default'];\n\t}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n\t},{\"./resolve-url\":11,\"./stream\":14,\"global/window\":27,\"m3u8-parser\":64}],7:[function(require,module,exports){\n\t(function (global){\n\t/**\n\t * @file playlist.js\n\t *\n\t * Playlist related utilities.\n\t */\n\t'use strict';\n\t\n\tObject.defineProperty(exports, '__esModule', {\n\t  value: true\n\t});\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\t\n\tvar _videoJs = (typeof window !== \"undefined\" ? window['videojs'] : typeof global !== \"undefined\" ? global['videojs'] : null);\n\t\n\tvar _globalWindow = require('global/window');\n\t\n\tvar _globalWindow2 = _interopRequireDefault(_globalWindow);\n\t\n\tvar Playlist = {\n\t  /**\n\t   * The number of segments that are unsafe to start playback at in\n\t   * a live stream. Changing this value can cause playback stalls.\n\t   * See HTTP Live Streaming, \"Playing the Media Playlist File\"\n\t   * https://tools.ietf.org/html/draft-pantos-http-live-streaming-18#section-6.3.3\n\t   */\n\t  UNSAFE_LIVE_SEGMENTS: 3\n\t};\n\t\n\t/**\n\t * walk backward until we find a duration we can use\n\t * or return a failure\n\t *\n\t * @param {Playlist} playlist the playlist to walk through\n\t * @param {Number} endSequence the mediaSequence to stop walking on\n\t */\n\t\n\tvar backwardDuration = function backwardDuration(playlist, endSequence) {\n\t  var result = 0;\n\t  var i = endSequence - playlist.mediaSequence;\n\t  // if a start time is available for segment immediately following\n\t  // the interval, use it\n\t  var segment = playlist.segments[i];\n\t\n\t  // Walk backward until we find the latest segment with timeline\n\t  // information that is earlier than endSequence\n\t  if (segment) {\n\t    if (typeof segment.start !== 'undefined') {\n\t      return { result: segment.start, precise: true };\n\t    }\n\t    if (typeof segment.end !== 'undefined') {\n\t      return {\n\t        result: segment.end - segment.duration,\n\t        precise: true\n\t      };\n\t    }\n\t  }\n\t  while (i--) {\n\t    segment = playlist.segments[i];\n\t    if (typeof segment.end !== 'undefined') {\n\t      return { result: result + segment.end, precise: true };\n\t    }\n\t\n\t    result += segment.duration;\n\t\n\t    if (typeof segment.start !== 'undefined') {\n\t      return { result: result + segment.start, precise: true };\n\t    }\n\t  }\n\t  return { result: result, precise: false };\n\t};\n\t\n\t/**\n\t * walk forward until we find a duration we can use\n\t * or return a failure\n\t *\n\t * @param {Playlist} playlist the playlist to walk through\n\t * @param {Number} endSequence the mediaSequence to stop walking on\n\t */\n\tvar forwardDuration = function forwardDuration(playlist, endSequence) {\n\t  var result = 0;\n\t  var segment = undefined;\n\t  var i = endSequence - playlist.mediaSequence;\n\t  // Walk forward until we find the earliest segment with timeline\n\t  // information\n\t\n\t  for (; i < playlist.segments.length; i++) {\n\t    segment = playlist.segments[i];\n\t    if (typeof segment.start !== 'undefined') {\n\t      return {\n\t        result: segment.start - result,\n\t        precise: true\n\t      };\n\t    }\n\t\n\t    result += segment.duration;\n\t\n\t    if (typeof segment.end !== 'undefined') {\n\t      return {\n\t        result: segment.end - result,\n\t        precise: true\n\t      };\n\t    }\n\t  }\n\t  // indicate we didn't find a useful duration estimate\n\t  return { result: -1, precise: false };\n\t};\n\t\n\t/**\n\t  * Calculate the media duration from the segments associated with a\n\t  * playlist. The duration of a subinterval of the available segments\n\t  * may be calculated by specifying an end index.\n\t  *\n\t  * @param {Object} playlist a media playlist object\n\t  * @param {Number=} endSequence an exclusive upper boundary\n\t  * for the playlist.  Defaults to playlist length.\n\t  * @param {Number} expired the amount of time that has dropped\n\t  * off the front of the playlist in a live scenario\n\t  * @return {Number} the duration between the first available segment\n\t  * and end index.\n\t  */\n\tvar intervalDuration = function intervalDuration(playlist, endSequence, expired) {\n\t  var backward = undefined;\n\t  var forward = undefined;\n\t\n\t  if (typeof endSequence === 'undefined') {\n\t    endSequence = playlist.mediaSequence + playlist.segments.length;\n\t  }\n\t\n\t  if (endSequence < playlist.mediaSequence) {\n\t    return 0;\n\t  }\n\t\n\t  // do a backward walk to estimate the duration\n\t  backward = backwardDuration(playlist, endSequence);\n\t  if (backward.precise) {\n\t    // if we were able to base our duration estimate on timing\n\t    // information provided directly from the Media Source, return\n\t    // it\n\t    return backward.result;\n\t  }\n\t\n\t  // walk forward to see if a precise duration estimate can be made\n\t  // that way\n\t  forward = forwardDuration(playlist, endSequence);\n\t  if (forward.precise) {\n\t    // we found a segment that has been buffered and so it's\n\t    // position is known precisely\n\t    return forward.result;\n\t  }\n\t\n\t  // return the less-precise, playlist-based duration estimate\n\t  return backward.result + expired;\n\t};\n\t\n\t/**\n\t  * Calculates the duration of a playlist. If a start and end index\n\t  * are specified, the duration will be for the subset of the media\n\t  * timeline between those two indices. The total duration for live\n\t  * playlists is always Infinity.\n\t  *\n\t  * @param {Object} playlist a media playlist object\n\t  * @param {Number=} endSequence an exclusive upper\n\t  * boundary for the playlist. Defaults to the playlist media\n\t  * sequence number plus its length.\n\t  * @param {Number=} expired the amount of time that has\n\t  * dropped off the front of the playlist in a live scenario\n\t  * @return {Number} the duration between the start index and end\n\t  * index.\n\t  */\n\tvar duration = function duration(playlist, endSequence, expired) {\n\t  if (!playlist) {\n\t    return 0;\n\t  }\n\t\n\t  if (typeof expired !== 'number') {\n\t    expired = 0;\n\t  }\n\t\n\t  // if a slice of the total duration is not requested, use\n\t  // playlist-level duration indicators when they're present\n\t  if (typeof endSequence === 'undefined') {\n\t    // if present, use the duration specified in the playlist\n\t    if (playlist.totalDuration) {\n\t      return playlist.totalDuration;\n\t    }\n\t\n\t    // duration should be Infinity for live playlists\n\t    if (!playlist.endList) {\n\t      return _globalWindow2['default'].Infinity;\n\t    }\n\t  }\n\t\n\t  // calculate the total duration based on the segment durations\n\t  return intervalDuration(playlist, endSequence, expired);\n\t};\n\t\n\texports.duration = duration;\n\t/**\n\t  * Calculate the time between two indexes in the current playlist\n\t  * neight the start- nor the end-index need to be within the current\n\t  * playlist in which case, the targetDuration of the playlist is used\n\t  * to approximate the durations of the segments\n\t  *\n\t  * @param {Object} playlist a media playlist object\n\t  * @param {Number} startIndex\n\t  * @param {Number} endIndex\n\t  * @return {Number} the number of seconds between startIndex and endIndex\n\t  */\n\tvar sumDurations = function sumDurations(playlist, startIndex, endIndex) {\n\t  var durations = 0;\n\t\n\t  if (startIndex > endIndex) {\n\t    var _ref = [endIndex, startIndex];\n\t    startIndex = _ref[0];\n\t    endIndex = _ref[1];\n\t  }\n\t\n\t  if (startIndex < 0) {\n\t    for (var i = startIndex; i < Math.min(0, endIndex); i++) {\n\t      durations += playlist.targetDuration;\n\t    }\n\t    startIndex = 0;\n\t  }\n\t\n\t  for (var i = startIndex; i < endIndex; i++) {\n\t    durations += playlist.segments[i].duration;\n\t  }\n\t\n\t  return durations;\n\t};\n\t\n\texports.sumDurations = sumDurations;\n\t/**\n\t * Returns an array with two sync points. The first being an expired sync point, which is\n\t * the most recent segment with timing sync data that has fallen off the playlist. The\n\t * second is a segment sync point, which is the first segment that has timing sync data in\n\t * the current playlist.\n\t *\n\t * @param {Object} playlist a media playlist object\n\t * @returns {Object} an object containing the two sync points\n\t * @returns {Object.expiredSync|null} sync point data from an expired segment\n\t * @returns {Object.segmentSync|null} sync point data from a segment in the playlist\n\t * @function getPlaylistSyncPoints\n\t */\n\tvar getPlaylistSyncPoints = function getPlaylistSyncPoints(playlist) {\n\t  if (!playlist || !playlist.segments) {\n\t    return [null, null];\n\t  }\n\t\n\t  var expiredSync = playlist.syncInfo || null;\n\t\n\t  var segmentSync = null;\n\t\n\t  // Find the first segment with timing information\n\t  for (var i = 0, l = playlist.segments.length; i < l; i++) {\n\t    var segment = playlist.segments[i];\n\t\n\t    if (typeof segment.start !== 'undefined') {\n\t      segmentSync = {\n\t        mediaSequence: playlist.mediaSequence + i,\n\t        time: segment.start\n\t      };\n\t      break;\n\t    }\n\t  }\n\t\n\t  return { expiredSync: expiredSync, segmentSync: segmentSync };\n\t};\n\t\n\t/**\n\t * Calculates the amount of time expired from the playlist based on the provided\n\t * sync points.\n\t *\n\t * @param {Object} playlist a media playlist object\n\t * @param {Object|null} expiredSync sync point representing most recent segment with\n\t *                                  timing sync data that has fallen off the playlist\n\t * @param {Object|null} segmentSync sync point representing the first segment that has\n\t *                                  timing sync data in the playlist\n\t * @returns {Number} the amount of time expired from the playlist\n\t * @function calculateExpiredTime\n\t */\n\tvar calculateExpiredTime = function calculateExpiredTime(playlist, expiredSync, segmentSync) {\n\t  // If we have both an expired sync point and a segment sync point\n\t  // determine which sync point is closest to the start of the playlist\n\t  // so the minimal amount of timing estimation is done.\n\t  if (expiredSync && segmentSync) {\n\t    var expiredDiff = expiredSync.mediaSequence - playlist.mediaSequence;\n\t    var segmentDiff = segmentSync.mediaSequence - playlist.mediaSequence;\n\t    var syncIndex = undefined;\n\t    var syncTime = undefined;\n\t\n\t    if (Math.abs(expiredDiff) > Math.abs(segmentDiff)) {\n\t      syncIndex = segmentDiff;\n\t      syncTime = -segmentSync.time;\n\t    } else {\n\t      syncIndex = expiredDiff;\n\t      syncTime = expiredSync.time;\n\t    }\n\t\n\t    return Math.abs(syncTime + sumDurations(playlist, syncIndex, 0));\n\t  }\n\t\n\t  // We only have an expired sync point, so base expired time on the expired sync point\n\t  // and estimate the time from that sync point to the start of the playlist.\n\t  if (expiredSync) {\n\t    var syncIndex = expiredSync.mediaSequence - playlist.mediaSequence;\n\t\n\t    return expiredSync.time + sumDurations(playlist, syncIndex, 0);\n\t  }\n\t\n\t  // We only have a segment sync point, so base expired time on the first segment we have\n\t  // sync point data for and estimate the time from that media index to the start of the\n\t  // playlist.\n\t  if (segmentSync) {\n\t    var syncIndex = segmentSync.mediaSequence - playlist.mediaSequence;\n\t\n\t    return segmentSync.time - sumDurations(playlist, syncIndex, 0);\n\t  }\n\t};\n\t\n\t/**\n\t  * Calculates the interval of time that is currently seekable in a\n\t  * playlist. The returned time ranges are relative to the earliest\n\t  * moment in the specified playlist that is still available. A full\n\t  * seekable implementation for live streams would need to offset\n\t  * these values by the duration of content that has expired from the\n\t  * stream.\n\t  *\n\t  * @param {Object} playlist a media playlist object\n\t  * dropped off the front of the playlist in a live scenario\n\t  * @return {TimeRanges} the periods of time that are valid targets\n\t  * for seeking\n\t  */\n\tvar seekable = function seekable(playlist) {\n\t  // without segments, there are no seekable ranges\n\t  if (!playlist || !playlist.segments) {\n\t    return (0, _videoJs.createTimeRange)();\n\t  }\n\t  // when the playlist is complete, the entire duration is seekable\n\t  if (playlist.endList) {\n\t    return (0, _videoJs.createTimeRange)(0, duration(playlist));\n\t  }\n\t\n\t  var _getPlaylistSyncPoints = getPlaylistSyncPoints(playlist);\n\t\n\t  var expiredSync = _getPlaylistSyncPoints.expiredSync;\n\t  var segmentSync = _getPlaylistSyncPoints.segmentSync;\n\t\n\t  // We have no sync information for this playlist so we can't create a seekable range\n\t  if (!expiredSync && !segmentSync) {\n\t    return (0, _videoJs.createTimeRange)();\n\t  }\n\t\n\t  var expired = calculateExpiredTime(playlist, expiredSync, segmentSync);\n\t\n\t  // live playlists should not expose three segment durations worth\n\t  // of content from the end of the playlist\n\t  // https://tools.ietf.org/html/draft-pantos-http-live-streaming-16#section-6.3.3\n\t  var start = expired;\n\t  var endSequence = Math.max(0, playlist.segments.length - Playlist.UNSAFE_LIVE_SEGMENTS);\n\t  var end = intervalDuration(playlist, playlist.mediaSequence + endSequence, expired);\n\t\n\t  return (0, _videoJs.createTimeRange)(start, end);\n\t};\n\t\n\texports.seekable = seekable;\n\tvar isWholeNumber = function isWholeNumber(num) {\n\t  return num - Math.floor(num) === 0;\n\t};\n\t\n\tvar roundSignificantDigit = function roundSignificantDigit(increment, num) {\n\t  // If we have a whole number, just add 1 to it\n\t  if (isWholeNumber(num)) {\n\t    return num + increment * 0.1;\n\t  }\n\t\n\t  var numDecimalDigits = num.toString().split('.')[1].length;\n\t\n\t  for (var i = 1; i <= numDecimalDigits; i++) {\n\t    var scale = Math.pow(10, i);\n\t    var temp = num * scale;\n\t\n\t    if (isWholeNumber(temp) || i === numDecimalDigits) {\n\t      return (temp + increment) / scale;\n\t    }\n\t  }\n\t};\n\t\n\tvar ceilLeastSignificantDigit = roundSignificantDigit.bind(null, 1);\n\tvar floorLeastSignificantDigit = roundSignificantDigit.bind(null, -1);\n\t\n\t/**\n\t * Determine the index and estimated starting time of the segment that\n\t * contains a specified playback position in a media playlist.\n\t *\n\t * @param {Object} playlist the media playlist to query\n\t * @param {Number} currentTime The number of seconds since the earliest\n\t * possible position to determine the containing segment for\n\t * @param {Number} startIndex\n\t * @param {Number} startTime\n\t * @return {Object}\n\t */\n\tvar getMediaInfoForTime_ = function getMediaInfoForTime_(playlist, currentTime, startIndex, startTime) {\n\t  var i = undefined;\n\t  var segment = undefined;\n\t  var numSegments = playlist.segments.length;\n\t\n\t  var time = currentTime - startTime;\n\t\n\t  if (time < 0) {\n\t    // Walk backward from startIndex in the playlist, adding durations\n\t    // until we find a segment that contains `time` and return it\n\t    if (startIndex > 0) {\n\t      for (i = startIndex - 1; i >= 0; i--) {\n\t        segment = playlist.segments[i];\n\t        time += floorLeastSignificantDigit(segment.duration);\n\t        if (time > 0) {\n\t          return {\n\t            mediaIndex: i,\n\t            startTime: startTime - sumDurations(playlist, startIndex, i)\n\t          };\n\t        }\n\t      }\n\t    }\n\t    // We were unable to find a good segment within the playlist\n\t    // so select the first segment\n\t    return {\n\t      mediaIndex: 0,\n\t      startTime: currentTime\n\t    };\n\t  }\n\t\n\t  // When startIndex is negative, we first walk forward to first segment\n\t  // adding target durations. If we \"run out of time\" before getting to\n\t  // the first segment, return the first segment\n\t  if (startIndex < 0) {\n\t    for (i = startIndex; i < 0; i++) {\n\t      time -= playlist.targetDuration;\n\t      if (time < 0) {\n\t        return {\n\t          mediaIndex: 0,\n\t          startTime: currentTime\n\t        };\n\t      }\n\t    }\n\t    startIndex = 0;\n\t  }\n\t\n\t  // Walk forward from startIndex in the playlist, subtracting durations\n\t  // until we find a segment that contains `time` and return it\n\t  for (i = startIndex; i < numSegments; i++) {\n\t    segment = playlist.segments[i];\n\t    time -= ceilLeastSignificantDigit(segment.duration);\n\t    if (time < 0) {\n\t      return {\n\t        mediaIndex: i,\n\t        startTime: startTime + sumDurations(playlist, startIndex, i)\n\t      };\n\t    }\n\t  }\n\t\n\t  // We are out of possible candidates so load the last one...\n\t  return {\n\t    mediaIndex: numSegments - 1,\n\t    startTime: currentTime\n\t  };\n\t};\n\t\n\texports.getMediaInfoForTime_ = getMediaInfoForTime_;\n\tPlaylist.duration = duration;\n\tPlaylist.seekable = seekable;\n\tPlaylist.getMediaInfoForTime_ = getMediaInfoForTime_;\n\t\n\t// exports\n\texports['default'] = Playlist;\n\t}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n\t},{\"global/window\":27}],8:[function(require,module,exports){\n\t(function (global){\n\t/**\n\t * ranges\n\t *\n\t * Utilities for working with TimeRanges.\n\t *\n\t */\n\t\n\t'use strict';\n\t\n\tObject.defineProperty(exports, '__esModule', {\n\t  value: true\n\t});\n\t\n\tvar _slicedToArray = (function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i['return']) _i['return'](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError('Invalid attempt to destructure non-iterable instance'); } }; })();\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\t\n\tvar _videoJs = (typeof window !== \"undefined\" ? window['videojs'] : typeof global !== \"undefined\" ? global['videojs'] : null);\n\t\n\tvar _videoJs2 = _interopRequireDefault(_videoJs);\n\t\n\t// Fudge factor to account for TimeRanges rounding\n\tvar TIME_FUDGE_FACTOR = 1 / 30;\n\t\n\t/**\n\t * Clamps a value to within a range\n\t * @param {Number} num - the value to clamp\n\t * @param {Number} start - the start of the range to clamp within, inclusive\n\t * @param {Number} end - the end of the range to clamp within, inclusive\n\t * @return {Number}\n\t */\n\tvar clamp = function clamp(num, _ref) {\n\t  var _ref2 = _slicedToArray(_ref, 2);\n\t\n\t  var start = _ref2[0];\n\t  var end = _ref2[1];\n\t\n\t  return Math.min(Math.max(start, num), end);\n\t};\n\tvar filterRanges = function filterRanges(timeRanges, predicate) {\n\t  var results = [];\n\t  var i = undefined;\n\t\n\t  if (timeRanges && timeRanges.length) {\n\t    // Search for ranges that match the predicate\n\t    for (i = 0; i < timeRanges.length; i++) {\n\t      if (predicate(timeRanges.start(i), timeRanges.end(i))) {\n\t        results.push([timeRanges.start(i), timeRanges.end(i)]);\n\t      }\n\t    }\n\t  }\n\t\n\t  return _videoJs2['default'].createTimeRanges(results);\n\t};\n\t\n\t/**\n\t * Attempts to find the buffered TimeRange that contains the specified\n\t * time.\n\t * @param {TimeRanges} buffered - the TimeRanges object to query\n\t * @param {number} time  - the time to filter on.\n\t * @returns {TimeRanges} a new TimeRanges object\n\t */\n\tvar findRange = function findRange(buffered, time) {\n\t  return filterRanges(buffered, function (start, end) {\n\t    return start - TIME_FUDGE_FACTOR <= time && end + TIME_FUDGE_FACTOR >= time;\n\t  });\n\t};\n\t\n\t/**\n\t * Returns the TimeRanges that begin later than the specified time.\n\t * @param {TimeRanges} timeRanges - the TimeRanges object to query\n\t * @param {number} time - the time to filter on.\n\t * @returns {TimeRanges} a new TimeRanges object.\n\t */\n\tvar findNextRange = function findNextRange(timeRanges, time) {\n\t  return filterRanges(timeRanges, function (start) {\n\t    return start - TIME_FUDGE_FACTOR >= time;\n\t  });\n\t};\n\t\n\t/**\n\t * Returns gaps within a list of TimeRanges\n\t * @param {TimeRanges} buffered - the TimeRanges object\n\t * @return {TimeRanges} a TimeRanges object of gaps\n\t */\n\tvar findGaps = function findGaps(buffered) {\n\t  if (buffered.length < 2) {\n\t    return _videoJs2['default'].createTimeRanges();\n\t  }\n\t\n\t  var ranges = [];\n\t\n\t  for (var i = 1; i < buffered.length; i++) {\n\t    var start = buffered.end(i - 1);\n\t    var end = buffered.start(i);\n\t\n\t    ranges.push([start, end]);\n\t  }\n\t\n\t  return _videoJs2['default'].createTimeRanges(ranges);\n\t};\n\t\n\t/**\n\t * Search for a likely end time for the segment that was just appened\n\t * based on the state of the `buffered` property before and after the\n\t * append. If we fin only one such uncommon end-point return it.\n\t * @param {TimeRanges} original - the buffered time ranges before the update\n\t * @param {TimeRanges} update - the buffered time ranges after the update\n\t * @returns {Number|null} the end time added between `original` and `update`,\n\t * or null if one cannot be unambiguously determined.\n\t */\n\tvar findSoleUncommonTimeRangesEnd = function findSoleUncommonTimeRangesEnd(original, update) {\n\t  var i = undefined;\n\t  var start = undefined;\n\t  var end = undefined;\n\t  var result = [];\n\t  var edges = [];\n\t\n\t  // In order to qualify as a possible candidate, the end point must:\n\t  //  1) Not have already existed in the `original` ranges\n\t  //  2) Not result from the shrinking of a range that already existed\n\t  //     in the `original` ranges\n\t  //  3) Not be contained inside of a range that existed in `original`\n\t  var overlapsCurrentEnd = function overlapsCurrentEnd(span) {\n\t    return span[0] <= end && span[1] >= end;\n\t  };\n\t\n\t  if (original) {\n\t    // Save all the edges in the `original` TimeRanges object\n\t    for (i = 0; i < original.length; i++) {\n\t      start = original.start(i);\n\t      end = original.end(i);\n\t\n\t      edges.push([start, end]);\n\t    }\n\t  }\n\t\n\t  if (update) {\n\t    // Save any end-points in `update` that are not in the `original`\n\t    // TimeRanges object\n\t    for (i = 0; i < update.length; i++) {\n\t      start = update.start(i);\n\t      end = update.end(i);\n\t\n\t      if (edges.some(overlapsCurrentEnd)) {\n\t        continue;\n\t      }\n\t\n\t      // at this point it must be a unique non-shrinking end edge\n\t      result.push(end);\n\t    }\n\t  }\n\t\n\t  // we err on the side of caution and return null if didn't find\n\t  // exactly *one* differing end edge in the search above\n\t  if (result.length !== 1) {\n\t    return null;\n\t  }\n\t\n\t  return result[0];\n\t};\n\t\n\t/**\n\t * Calculate the intersection of two TimeRanges\n\t * @param {TimeRanges} bufferA\n\t * @param {TimeRanges} bufferB\n\t * @returns {TimeRanges} The interesection of `bufferA` with `bufferB`\n\t */\n\tvar bufferIntersection = function bufferIntersection(bufferA, bufferB) {\n\t  var start = null;\n\t  var end = null;\n\t  var arity = 0;\n\t  var extents = [];\n\t  var ranges = [];\n\t\n\t  if (!bufferA || !bufferA.length || !bufferB || !bufferB.length) {\n\t    return _videoJs2['default'].createTimeRange();\n\t  }\n\t\n\t  // Handle the case where we have both buffers and create an\n\t  // intersection of the two\n\t  var count = bufferA.length;\n\t\n\t  // A) Gather up all start and end times\n\t  while (count--) {\n\t    extents.push({ time: bufferA.start(count), type: 'start' });\n\t    extents.push({ time: bufferA.end(count), type: 'end' });\n\t  }\n\t  count = bufferB.length;\n\t  while (count--) {\n\t    extents.push({ time: bufferB.start(count), type: 'start' });\n\t    extents.push({ time: bufferB.end(count), type: 'end' });\n\t  }\n\t  // B) Sort them by time\n\t  extents.sort(function (a, b) {\n\t    return a.time - b.time;\n\t  });\n\t\n\t  // C) Go along one by one incrementing arity for start and decrementing\n\t  //    arity for ends\n\t  for (count = 0; count < extents.length; count++) {\n\t    if (extents[count].type === 'start') {\n\t      arity++;\n\t\n\t      // D) If arity is ever incremented to 2 we are entering an\n\t      //    overlapping range\n\t      if (arity === 2) {\n\t        start = extents[count].time;\n\t      }\n\t    } else if (extents[count].type === 'end') {\n\t      arity--;\n\t\n\t      // E) If arity is ever decremented to 1 we leaving an\n\t      //    overlapping range\n\t      if (arity === 1) {\n\t        end = extents[count].time;\n\t      }\n\t    }\n\t\n\t    // F) Record overlapping ranges\n\t    if (start !== null && end !== null) {\n\t      ranges.push([start, end]);\n\t      start = null;\n\t      end = null;\n\t    }\n\t  }\n\t\n\t  return _videoJs2['default'].createTimeRanges(ranges);\n\t};\n\t\n\t/**\n\t * Calculates the percentage of `segmentRange` that overlaps the\n\t * `buffered` time ranges.\n\t * @param {TimeRanges} segmentRange - the time range that the segment\n\t * covers adjusted according to currentTime\n\t * @param {TimeRanges} referenceRange - the original time range that the\n\t * segment covers\n\t * @param {Number} currentTime - time in seconds where the current playback\n\t * is at\n\t * @param {TimeRanges} buffered - the currently buffered time ranges\n\t * @returns {Number} percent of the segment currently buffered\n\t */\n\tvar calculateBufferedPercent = function calculateBufferedPercent(adjustedRange, referenceRange, currentTime, buffered) {\n\t  var referenceDuration = referenceRange.end(0) - referenceRange.start(0);\n\t  var adjustedDuration = adjustedRange.end(0) - adjustedRange.start(0);\n\t  var bufferMissingFromAdjusted = referenceDuration - adjustedDuration;\n\t  var adjustedIntersection = bufferIntersection(adjustedRange, buffered);\n\t  var referenceIntersection = bufferIntersection(referenceRange, buffered);\n\t  var adjustedOverlap = 0;\n\t  var referenceOverlap = 0;\n\t\n\t  var count = adjustedIntersection.length;\n\t\n\t  while (count--) {\n\t    adjustedOverlap += adjustedIntersection.end(count) - adjustedIntersection.start(count);\n\t\n\t    // If the current overlap segment starts at currentTime, then increase the\n\t    // overlap duration so that it actually starts at the beginning of referenceRange\n\t    // by including the difference between the two Range's durations\n\t    // This is a work around for the way Flash has no buffer before currentTime\n\t    if (adjustedIntersection.start(count) === currentTime) {\n\t      adjustedOverlap += bufferMissingFromAdjusted;\n\t    }\n\t  }\n\t\n\t  count = referenceIntersection.length;\n\t\n\t  while (count--) {\n\t    referenceOverlap += referenceIntersection.end(count) - referenceIntersection.start(count);\n\t  }\n\t\n\t  // Use whichever value is larger for the percentage-buffered since that value\n\t  // is likely more accurate because the only way\n\t  return Math.max(adjustedOverlap, referenceOverlap) / referenceDuration * 100;\n\t};\n\t\n\t/**\n\t * Return the amount of a range specified by the startOfSegment and segmentDuration\n\t * overlaps the current buffered content.\n\t *\n\t * @param {Number} startOfSegment - the time where the segment begins\n\t * @param {Number} segmentDuration - the duration of the segment in seconds\n\t * @param {Number} currentTime - time in seconds where the current playback\n\t * is at\n\t * @param {TimeRanges} buffered - the state of the buffer\n\t * @returns {Number} percentage of the segment's time range that is\n\t * already in `buffered`\n\t */\n\tvar getSegmentBufferedPercent = function getSegmentBufferedPercent(startOfSegment, segmentDuration, currentTime, buffered) {\n\t  var endOfSegment = startOfSegment + segmentDuration;\n\t\n\t  // The entire time range of the segment\n\t  var originalSegmentRange = _videoJs2['default'].createTimeRanges([[startOfSegment, endOfSegment]]);\n\t\n\t  // The adjusted segment time range that is setup such that it starts\n\t  // no earlier than currentTime\n\t  // Flash has no notion of a back-buffer so adjustedSegmentRange adjusts\n\t  // for that and the function will still return 100% if a only half of a\n\t  // segment is actually in the buffer as long as the currentTime is also\n\t  // half-way through the segment\n\t  var adjustedSegmentRange = _videoJs2['default'].createTimeRanges([[clamp(startOfSegment, [currentTime, endOfSegment]), endOfSegment]]);\n\t\n\t  // This condition happens when the currentTime is beyond the segment's\n\t  // end time\n\t  if (adjustedSegmentRange.start(0) === adjustedSegmentRange.end(0)) {\n\t    return 0;\n\t  }\n\t\n\t  var percent = calculateBufferedPercent(adjustedSegmentRange, originalSegmentRange, currentTime, buffered);\n\t\n\t  // If the segment is reported as having a zero duration, return 0%\n\t  // since it is likely that we will need to fetch the segment\n\t  if (isNaN(percent) || percent === Infinity || percent === -Infinity) {\n\t    return 0;\n\t  }\n\t\n\t  return percent;\n\t};\n\t\n\texports['default'] = {\n\t  findRange: findRange,\n\t  findNextRange: findNextRange,\n\t  findGaps: findGaps,\n\t  findSoleUncommonTimeRangesEnd: findSoleUncommonTimeRangesEnd,\n\t  getSegmentBufferedPercent: getSegmentBufferedPercent,\n\t  TIME_FUDGE_FACTOR: TIME_FUDGE_FACTOR\n\t};\n\tmodule.exports = exports['default'];\n\t}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n\t},{}],9:[function(require,module,exports){\n\t(function (global){\n\t'use strict';\n\t\n\tObject.defineProperty(exports, '__esModule', {\n\t  value: true\n\t});\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\t\n\tvar _videoJs = (typeof window !== \"undefined\" ? window['videojs'] : typeof global !== \"undefined\" ? global['videojs'] : null);\n\t\n\tvar _videoJs2 = _interopRequireDefault(_videoJs);\n\t\n\tvar defaultOptions = {\n\t  errorInterval: 30,\n\t  getSource: function getSource(next) {\n\t    var tech = this.tech({ IWillNotUseThisInPlugins: true });\n\t    var sourceObj = tech.currentSource_;\n\t\n\t    return next(sourceObj);\n\t  }\n\t};\n\t\n\t/**\n\t * Main entry point for the plugin\n\t *\n\t * @param {Player} player a reference to a videojs Player instance\n\t * @param {Object} [options] an object with plugin options\n\t * @private\n\t */\n\tvar initPlugin = function initPlugin(player, options) {\n\t  var lastCalled = 0;\n\t  var seekTo = 0;\n\t  var localOptions = _videoJs2['default'].mergeOptions(defaultOptions, options);\n\t\n\t  /**\n\t   * Player modifications to perform that must wait until `loadedmetadata`\n\t   * has been triggered\n\t   *\n\t   * @private\n\t   */\n\t  var loadedMetadataHandler = function loadedMetadataHandler() {\n\t    if (seekTo) {\n\t      player.currentTime(seekTo);\n\t    }\n\t  };\n\t\n\t  /**\n\t   * Set the source on the player element, play, and seek if necessary\n\t   *\n\t   * @param {Object} sourceObj An object specifying the source url and mime-type to play\n\t   * @private\n\t   */\n\t  var setSource = function setSource(sourceObj) {\n\t    if (sourceObj === null || sourceObj === undefined) {\n\t      return;\n\t    }\n\t    seekTo = player.duration() !== Infinity && player.currentTime() || 0;\n\t\n\t    player.one('loadedmetadata', loadedMetadataHandler);\n\t\n\t    player.src(sourceObj);\n\t    player.play();\n\t  };\n\t\n\t  /**\n\t   * Attempt to get a source from either the built-in getSource function\n\t   * or a custom function provided via the options\n\t   *\n\t   * @private\n\t   */\n\t  var errorHandler = function errorHandler() {\n\t    // Do not attempt to reload the source if a source-reload occurred before\n\t    // 'errorInterval' time has elapsed since the last source-reload\n\t    if (Date.now() - lastCalled < localOptions.errorInterval * 1000) {\n\t      return;\n\t    }\n\t\n\t    if (!localOptions.getSource || typeof localOptions.getSource !== 'function') {\n\t      _videoJs2['default'].log.error('ERROR: reloadSourceOnError - The option getSource must be a function!');\n\t      return;\n\t    }\n\t    lastCalled = Date.now();\n\t\n\t    return localOptions.getSource.call(player, setSource);\n\t  };\n\t\n\t  /**\n\t   * Unbind any event handlers that were bound by the plugin\n\t   *\n\t   * @private\n\t   */\n\t  var cleanupEvents = function cleanupEvents() {\n\t    player.off('loadedmetadata', loadedMetadataHandler);\n\t    player.off('error', errorHandler);\n\t    player.off('dispose', cleanupEvents);\n\t  };\n\t\n\t  /**\n\t   * Cleanup before re-initializing the plugin\n\t   *\n\t   * @param {Object} [newOptions] an object with plugin options\n\t   * @private\n\t   */\n\t  var reinitPlugin = function reinitPlugin(newOptions) {\n\t    cleanupEvents();\n\t    initPlugin(player, newOptions);\n\t  };\n\t\n\t  player.on('error', errorHandler);\n\t  player.on('dispose', cleanupEvents);\n\t\n\t  // Overwrite the plugin function so that we can correctly cleanup before\n\t  // initializing the plugin\n\t  player.reloadSourceOnError = reinitPlugin;\n\t};\n\t\n\t/**\n\t * Reload the source when an error is detected as long as there\n\t * wasn't an error previously within the last 30 seconds\n\t *\n\t * @param {Object} [options] an object with plugin options\n\t */\n\tvar reloadSourceOnError = function reloadSourceOnError(options) {\n\t  initPlugin(this, options);\n\t};\n\t\n\texports['default'] = reloadSourceOnError;\n\tmodule.exports = exports['default'];\n\t}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n\t},{}],10:[function(require,module,exports){\n\t/**\n\t * Enable/disable playlist function. It is intended to have the first two\n\t * arguments partially-applied in order to create the final per-playlist\n\t * function.\n\t *\n\t * @param {PlaylistLoader} playlist - The rendition or media-playlist\n\t * @param {Function} changePlaylistFn - A function to be called after a\n\t * playlist's enabled-state has been changed. Will NOT be called if a\n\t * playlist's enabled-state is unchanged\n\t * @param {Boolean=} enable - Value to set the playlist enabled-state to\n\t * or if undefined returns the current enabled-state for the playlist\n\t * @return {Boolean} The current enabled-state of the playlist\n\t */\n\t'use strict';\n\t\n\tObject.defineProperty(exports, '__esModule', {\n\t  value: true\n\t});\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }\n\t\n\tvar enableFunction = function enableFunction(playlist, changePlaylistFn, enable) {\n\t  var currentlyEnabled = typeof playlist.excludeUntil === 'undefined' || playlist.excludeUntil <= Date.now();\n\t\n\t  if (typeof enable === 'undefined') {\n\t    return currentlyEnabled;\n\t  }\n\t\n\t  if (enable !== currentlyEnabled) {\n\t    if (enable) {\n\t      delete playlist.excludeUntil;\n\t    } else {\n\t      playlist.excludeUntil = Infinity;\n\t    }\n\t\n\t    // Ensure the outside world knows about our changes\n\t    changePlaylistFn();\n\t  }\n\t\n\t  return enable;\n\t};\n\t\n\t/**\n\t * The representation object encapsulates the publicly visible information\n\t * in a media playlist along with a setter/getter-type function (enabled)\n\t * for changing the enabled-state of a particular playlist entry\n\t *\n\t * @class Representation\n\t */\n\t\n\tvar Representation = function Representation(hlsHandler, playlist, id) {\n\t  _classCallCheck(this, Representation);\n\t\n\t  // Get a reference to a bound version of fastQualityChange_\n\t  var fastChangeFunction = hlsHandler.masterPlaylistController_.fastQualityChange_.bind(hlsHandler.masterPlaylistController_);\n\t\n\t  // Carefully descend into the playlist's attributes since most\n\t  // properties are optional\n\t  if (playlist.attributes) {\n\t    var attributes = playlist.attributes;\n\t\n\t    if (attributes.RESOLUTION) {\n\t      var resolution = attributes.RESOLUTION;\n\t\n\t      this.width = resolution.width;\n\t      this.height = resolution.height;\n\t    }\n\t\n\t    this.bandwidth = attributes.BANDWIDTH;\n\t  }\n\t\n\t  // The id is simply the ordinality of the media playlist\n\t  // within the master playlist\n\t  this.id = id;\n\t\n\t  // Partially-apply the enableFunction to create a playlist-\n\t  // specific variant\n\t  this.enabled = enableFunction.bind(this, playlist, fastChangeFunction);\n\t}\n\t\n\t/**\n\t * A mixin function that adds the `representations` api to an instance\n\t * of the HlsHandler class\n\t * @param {HlsHandler} hlsHandler - An instance of HlsHandler to add the\n\t * representation API into\n\t */\n\t;\n\t\n\tvar renditionSelectionMixin = function renditionSelectionMixin(hlsHandler) {\n\t  var playlists = hlsHandler.playlists;\n\t\n\t  // Add a single API-specific function to the HlsHandler instance\n\t  hlsHandler.representations = function () {\n\t    return playlists.master.playlists.map(function (e, i) {\n\t      return new Representation(hlsHandler, e, i);\n\t    });\n\t  };\n\t};\n\t\n\texports['default'] = renditionSelectionMixin;\n\tmodule.exports = exports['default'];\n\t},{}],11:[function(require,module,exports){\n\t/**\n\t * @file resolve-url.js\n\t */\n\t\n\t'use strict';\n\t\n\tObject.defineProperty(exports, '__esModule', {\n\t  value: true\n\t});\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\t\n\tvar _urlToolkit = require('url-toolkit');\n\t\n\tvar _urlToolkit2 = _interopRequireDefault(_urlToolkit);\n\t\n\tvar _globalWindow = require('global/window');\n\t\n\tvar _globalWindow2 = _interopRequireDefault(_globalWindow);\n\t\n\tvar resolveUrl = function resolveUrl(baseURL, relativeURL) {\n\t  // return early if we don't need to resolve\n\t  if (/^[a-z]+:/i.test(relativeURL)) {\n\t    return relativeURL;\n\t  }\n\t\n\t  // if the base URL is relative then combine with the current location\n\t  if (!/\\/\\//i.test(baseURL)) {\n\t    baseURL = _urlToolkit2['default'].buildAbsoluteURL(_globalWindow2['default'].location.href, baseURL);\n\t  }\n\t\n\t  return _urlToolkit2['default'].buildAbsoluteURL(baseURL, relativeURL);\n\t};\n\t\n\texports['default'] = resolveUrl;\n\tmodule.exports = exports['default'];\n\t},{\"global/window\":27,\"url-toolkit\":90}],12:[function(require,module,exports){\n\t(function (global){\n\t/**\n\t * @file segment-loader.js\n\t */\n\t'use strict';\n\t\n\tObject.defineProperty(exports, '__esModule', {\n\t  value: true\n\t});\n\t\n\tvar _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();\n\t\n\tvar _get = function get(_x2, _x3, _x4) { var _again = true; _function: while (_again) { var object = _x2, property = _x3, receiver = _x4; _again = false; if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { _x2 = parent; _x3 = property; _x4 = receiver; _again = true; desc = parent = undefined; continue _function; } } else if ('value' in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } } };\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== 'function' && superClass !== null) { throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\tvar _playlist = require('./playlist');\n\t\n\tvar _videoJs = (typeof window !== \"undefined\" ? window['videojs'] : typeof global !== \"undefined\" ? global['videojs'] : null);\n\t\n\tvar _videoJs2 = _interopRequireDefault(_videoJs);\n\t\n\tvar _sourceUpdater = require('./source-updater');\n\t\n\tvar _sourceUpdater2 = _interopRequireDefault(_sourceUpdater);\n\t\n\tvar _aesDecrypter = require('aes-decrypter');\n\t\n\tvar _config = require('./config');\n\t\n\tvar _config2 = _interopRequireDefault(_config);\n\t\n\tvar _globalWindow = require('global/window');\n\t\n\tvar _globalWindow2 = _interopRequireDefault(_globalWindow);\n\t\n\t// in ms\n\tvar CHECK_BUFFER_DELAY = 500;\n\tvar c = 'console';\n\t\n\t// temporary, switchable debug logging\n\tvar log = function log() {\n\t  if (_globalWindow2['default'].logit) {\n\t    _globalWindow2['default'][c].log.apply(_globalWindow2['default'][c], arguments);\n\t  }\n\t};\n\t\n\t/**\n\t * Determines if we should call endOfStream on the media source based\n\t * on the state of the buffer or if appened segment was the final\n\t * segment in the playlist.\n\t *\n\t * @param {Object} playlist a media playlist object\n\t * @param {Object} mediaSource the MediaSource object\n\t * @param {Number} segmentIndex the index of segment we last appended\n\t * @returns {Boolean} do we need to call endOfStream on the MediaSource\n\t */\n\tvar detectEndOfStream = function detectEndOfStream(playlist, mediaSource, segmentIndex) {\n\t  if (!playlist) {\n\t    return false;\n\t  }\n\t\n\t  var segments = playlist.segments;\n\t\n\t  // determine a few boolean values to help make the branch below easier\n\t  // to read\n\t  var appendedLastSegment = segmentIndex === segments.length;\n\t\n\t  // if we've buffered to the end of the video, we need to call endOfStream\n\t  // so that MediaSources can trigger the `ended` event when it runs out of\n\t  // buffered data instead of waiting for me\n\t  return playlist.endList && mediaSource.readyState === 'open' && appendedLastSegment;\n\t};\n\t\n\t/**\n\t * Turns segment byterange into a string suitable for use in\n\t * HTTP Range requests\n\t */\n\tvar byterangeStr = function byterangeStr(byterange) {\n\t  var byterangeStart = undefined;\n\t  var byterangeEnd = undefined;\n\t\n\t  // `byterangeEnd` is one less than `offset + length` because the HTTP range\n\t  // header uses inclusive ranges\n\t  byterangeEnd = byterange.offset + byterange.length - 1;\n\t  byterangeStart = byterange.offset;\n\t  return 'bytes=' + byterangeStart + '-' + byterangeEnd;\n\t};\n\t\n\t/**\n\t * Defines headers for use in the xhr request for a particular segment.\n\t */\n\tvar segmentXhrHeaders = function segmentXhrHeaders(segment) {\n\t  var headers = {};\n\t\n\t  if ('byterange' in segment) {\n\t    headers.Range = byterangeStr(segment.byterange);\n\t  }\n\t  return headers;\n\t};\n\t\n\t/**\n\t * Returns a unique string identifier for a media initialization\n\t * segment.\n\t */\n\tvar initSegmentId = function initSegmentId(initSegment) {\n\t  var byterange = initSegment.byterange || {\n\t    length: Infinity,\n\t    offset: 0\n\t  };\n\t\n\t  return [byterange.length, byterange.offset, initSegment.resolvedUri].join(',');\n\t};\n\t\n\t/**\n\t * An object that manages segment loading and appending.\n\t *\n\t * @class SegmentLoader\n\t * @param {Object} options required and optional options\n\t * @extends videojs.EventTarget\n\t */\n\t\n\tvar SegmentLoader = (function (_videojs$EventTarget) {\n\t  _inherits(SegmentLoader, _videojs$EventTarget);\n\t\n\t  function SegmentLoader(options) {\n\t    var _this = this;\n\t\n\t    _classCallCheck(this, SegmentLoader);\n\t\n\t    _get(Object.getPrototypeOf(SegmentLoader.prototype), 'constructor', this).call(this);\n\t    var settings = undefined;\n\t\n\t    // check pre-conditions\n\t    if (!options) {\n\t      throw new TypeError('Initialization options are required');\n\t    }\n\t    if (typeof options.currentTime !== 'function') {\n\t      throw new TypeError('No currentTime getter specified');\n\t    }\n\t    if (!options.mediaSource) {\n\t      throw new TypeError('No MediaSource specified');\n\t    }\n\t    settings = _videoJs2['default'].mergeOptions(_videoJs2['default'].options.hls, options);\n\t\n\t    // public properties\n\t    this.state = 'INIT';\n\t    this.bandwidth = settings.bandwidth;\n\t    this.throughput = { rate: 0, count: 0 };\n\t    this.roundTrip = NaN;\n\t    this.resetStats_();\n\t    this.mediaIndex = null;\n\t\n\t    // private settings\n\t    this.hasPlayed_ = settings.hasPlayed;\n\t    this.currentTime_ = settings.currentTime;\n\t    this.seekable_ = settings.seekable;\n\t    this.seeking_ = settings.seeking;\n\t    this.setCurrentTime_ = settings.setCurrentTime;\n\t    this.mediaSource_ = settings.mediaSource;\n\t    this.hls_ = settings.hls;\n\t\n\t    // private instance variables\n\t    this.checkBufferTimeout_ = null;\n\t    this.error_ = void 0;\n\t    this.currentTimeline_ = -1;\n\t    this.xhr_ = null;\n\t    this.pendingSegment_ = null;\n\t    this.mimeType_ = null;\n\t    this.sourceUpdater_ = null;\n\t    this.xhrOptions_ = null;\n\t\n\t    // Fragmented mp4 playback\n\t    this.activeInitSegmentId_ = null;\n\t    this.initSegments_ = {};\n\t\n\t    // Manages the tracking and generation of sync-points, mappings\n\t    // between a time in the display time and a segment index within\n\t    // a playlist\n\t    this.syncController_ = settings.syncController;\n\t    this.syncPoint_ = {\n\t      segmentIndex: 0,\n\t      time: 0\n\t    };\n\t\n\t    this.syncController_.on('syncinfoupdate', function () {\n\t      return _this.trigger('syncinfoupdate');\n\t    });\n\t\n\t    // ...for determining the fetch location\n\t    this.fetchAtBuffer_ = false;\n\t  }\n\t\n\t  /**\n\t   * reset all of our media stats\n\t   *\n\t   * @private\n\t   */\n\t\n\t  _createClass(SegmentLoader, [{\n\t    key: 'resetStats_',\n\t    value: function resetStats_() {\n\t      this.mediaBytesTransferred = 0;\n\t      this.mediaRequests = 0;\n\t      this.mediaTransferDuration = 0;\n\t      this.mediaSecondsLoaded = 0;\n\t    }\n\t\n\t    /**\n\t     * dispose of the SegmentLoader and reset to the default state\n\t     */\n\t  }, {\n\t    key: 'dispose',\n\t    value: function dispose() {\n\t      this.state = 'DISPOSED';\n\t      this.abort_();\n\t      if (this.sourceUpdater_) {\n\t        this.sourceUpdater_.dispose();\n\t      }\n\t      this.resetStats_();\n\t    }\n\t\n\t    /**\n\t     * abort anything that is currently doing on with the SegmentLoader\n\t     * and reset to a default state\n\t     */\n\t  }, {\n\t    key: 'abort',\n\t    value: function abort() {\n\t\n\t      if (this.state !== 'WAITING') {\n\t        if (this.pendingSegment_) {\n\t          this.pendingSegment_ = null;\n\t        }\n\t        return;\n\t      }\n\t\n\t      this.abort_();\n\t\n\t      // don't wait for buffer check timeouts to begin fetching the\n\t      // next segment\n\t      if (!this.paused()) {\n\t        this.state = 'READY';\n\t        this.fillBuffer_();\n\t      }\n\t    }\n\t\n\t    /**\n\t     * set an error on the segment loader and null out any pending segements\n\t     *\n\t     * @param {Error} error the error to set on the SegmentLoader\n\t     * @return {Error} the error that was set or that is currently set\n\t     */\n\t  }, {\n\t    key: 'error',\n\t    value: function error(_error) {\n\t      if (typeof _error !== 'undefined') {\n\t        this.error_ = _error;\n\t      }\n\t\n\t      this.pendingSegment_ = null;\n\t      return this.error_;\n\t    }\n\t\n\t    /**\n\t     * load a playlist and start to fill the buffer\n\t     */\n\t  }, {\n\t    key: 'load',\n\t    value: function load() {\n\t      // un-pause\n\t      this.monitorBuffer_();\n\t\n\t      // if we don't have a playlist yet, keep waiting for one to be\n\t      // specified\n\t      if (!this.playlist_) {\n\t        return;\n\t      }\n\t\n\t      // not sure if this is the best place for this\n\t      this.syncController_.setDateTimeMapping(this.playlist_);\n\t\n\t      // if all the configuration is ready, initialize and begin loading\n\t      if (this.state === 'INIT' && this.mimeType_) {\n\t        return this.init_();\n\t      }\n\t\n\t      // if we're in the middle of processing a segment already, don't\n\t      // kick off an additional segment request\n\t      if (!this.sourceUpdater_ || this.state !== 'READY' && this.state !== 'INIT') {\n\t        return;\n\t      }\n\t\n\t      this.state = 'READY';\n\t      this.fillBuffer_();\n\t    }\n\t\n\t    /**\n\t     * set a playlist on the segment loader\n\t     *\n\t     * @param {PlaylistLoader} media the playlist to set on the segment loader\n\t     */\n\t  }, {\n\t    key: 'playlist',\n\t    value: function playlist(newPlaylist) {\n\t      var options = arguments.length <= 1 || arguments[1] === undefined ? {} : arguments[1];\n\t\n\t      if (!newPlaylist) {\n\t        return;\n\t      }\n\t\n\t      var oldPlaylist = this.playlist_;\n\t      var segmentInfo = this.pendingSegment_;\n\t\n\t      if (this.mediaIndex !== null) {\n\t        // We reloaded the same playlist so we are in a live scenario\n\t        // and we will likely need to adjust the mediaIndex\n\t        if (oldPlaylist && oldPlaylist.uri === newPlaylist.uri) {\n\t          var mediaSequenceDiff = newPlaylist.mediaSequence - oldPlaylist.mediaSequence;\n\t\n\t          this.mediaIndex -= mediaSequenceDiff;\n\t\n\t          if (segmentInfo && !segmentInfo.isSyncRequest) {\n\t            segmentInfo.mediaIndex -= mediaSequenceDiff;\n\t          }\n\t\n\t          this.syncController_.saveExpiredSegmentInfo(oldPlaylist, newPlaylist);\n\t        } else {\n\t          // We must \"resync\" the fetcher when we switch renditions\n\t          this.resyncLoader();\n\t        }\n\t      } else if (!this.hasPlayed_()) {\n\t        newPlaylist.syncInfo = {\n\t          mediaSequence: newPlaylist.mediaSequence,\n\t          time: 0\n\t        };\n\t        this.trigger('syncinfoupdate');\n\t      }\n\t\n\t      this.playlist_ = newPlaylist;\n\t      this.xhrOptions_ = options;\n\t\n\t      // if we were unpaused but waiting for a playlist, start\n\t      // buffering now\n\t      if (this.mimeType_ && this.state === 'INIT' && !this.paused()) {\n\t        return this.init_();\n\t      }\n\t    }\n\t\n\t    /**\n\t     * Prevent the loader from fetching additional segments. If there\n\t     * is a segment request outstanding, it will finish processing\n\t     * before the loader halts. A segment loader can be unpaused by\n\t     * calling load().\n\t     */\n\t  }, {\n\t    key: 'pause',\n\t    value: function pause() {\n\t      if (this.checkBufferTimeout_) {\n\t        _globalWindow2['default'].clearTimeout(this.checkBufferTimeout_);\n\t\n\t        this.checkBufferTimeout_ = null;\n\t      }\n\t    }\n\t\n\t    /**\n\t     * Returns whether the segment loader is fetching additional\n\t     * segments when given the opportunity. This property can be\n\t     * modified through calls to pause() and load().\n\t     */\n\t  }, {\n\t    key: 'paused',\n\t    value: function paused() {\n\t      return this.checkBufferTimeout_ === null;\n\t    }\n\t\n\t    /**\n\t     * create/set the following mimetype on the SourceBuffer through a\n\t     * SourceUpdater\n\t     *\n\t     * @param {String} mimeType the mime type string to use\n\t     */\n\t  }, {\n\t    key: 'mimeType',\n\t    value: function mimeType(_mimeType) {\n\t      if (this.mimeType_) {\n\t        return;\n\t      }\n\t\n\t      this.mimeType_ = _mimeType;\n\t      // if we were unpaused but waiting for a sourceUpdater, start\n\t      // buffering now\n\t      if (this.playlist_ && this.state === 'INIT' && !this.paused()) {\n\t        this.init_();\n\t      }\n\t    }\n\t\n\t    /**\n\t     * As long as the SegmentLoader is in the READY state, periodically\n\t     * invoke fillBuffer_().\n\t     *\n\t     * @private\n\t     */\n\t  }, {\n\t    key: 'monitorBuffer_',\n\t    value: function monitorBuffer_() {\n\t      if (this.state === 'READY') {\n\t        this.fillBuffer_();\n\t      }\n\t\n\t      if (this.checkBufferTimeout_) {\n\t        _globalWindow2['default'].clearTimeout(this.checkBufferTimeout_);\n\t      }\n\t\n\t      this.checkBufferTimeout_ = _globalWindow2['default'].setTimeout(this.monitorBuffer_.bind(this), CHECK_BUFFER_DELAY);\n\t    }\n\t\n\t    /**\n\t     * The segment loader has no recourse except to fetch a segment in the\n\t     * current playlist and use the internal timestamps in that segment to\n\t     * generate a syncPoint. This function returns a good candidate index\n\t     * for that process.\n\t     *\n\t     * @param {Object} playlist - the playlist object to look for a\n\t     * @returns {Number} An index of a segment from the playlist to load\n\t     */\n\t  }, {\n\t    key: 'getSyncSegmentCandidate_',\n\t    value: function getSyncSegmentCandidate_(playlist) {\n\t      var _this2 = this;\n\t\n\t      if (this.currentTimeline_ === -1) {\n\t        return 0;\n\t      }\n\t\n\t      var segmentIndexArray = playlist.segments.map(function (s, i) {\n\t        return {\n\t          timeline: s.timeline,\n\t          segmentIndex: i\n\t        };\n\t      }).filter(function (s) {\n\t        return s.timeline === _this2.currentTimeline_;\n\t      });\n\t\n\t      if (segmentIndexArray.length) {\n\t        return segmentIndexArray[Math.min(segmentIndexArray.length - 1, 1)].segmentIndex;\n\t      }\n\t\n\t      return Math.max(playlist.segments.length - 1, 0);\n\t    }\n\t\n\t    /**\n\t     * Determines what segment request should be made, given current playback\n\t     * state.\n\t     *\n\t     * @param {TimeRanges} buffered - the state of the buffer\n\t     * @param {Object} playlist - the playlist object to fetch segments from\n\t     * @param {Number} mediaIndex - the previous mediaIndex fetched or null\n\t     * @param {Boolean} hasPlayed - a flag indicating whether we have played or not\n\t     * @param {Number} currentTime - the playback position in seconds\n\t     * @param {Object} syncPoint - a segment info object that describes the\n\t     * @returns {Object} a segment request object that describes the segment to load\n\t     */\n\t  }, {\n\t    key: 'checkBuffer_',\n\t    value: function checkBuffer_(buffered, playlist, mediaIndex, hasPlayed, currentTime, syncPoint) {\n\t      var lastBufferedEnd = 0;\n\t      var startOfSegment = undefined;\n\t\n\t      if (buffered.length) {\n\t        lastBufferedEnd = buffered.end(buffered.length - 1);\n\t      }\n\t\n\t      var bufferedTime = Math.max(0, lastBufferedEnd - currentTime);\n\t\n\t      if (!playlist.segments.length) {\n\t        return null;\n\t      }\n\t\n\t      log('cB_', 'mediaIndex:', mediaIndex, 'hasPlayed:', hasPlayed, 'currentTime:', currentTime, 'syncPoint:', syncPoint, 'fetchAtBuffer:', this.fetchAtBuffer_);\n\t      log('cB_ 2', 'bufferedTime:', bufferedTime);\n\t\n\t      // if there is plenty of content buffered, and the video has\n\t      // been played before relax for awhile\n\t      if (bufferedTime >= _config2['default'].GOAL_BUFFER_LENGTH) {\n\t        return null;\n\t      }\n\t\n\t      // if the video has not yet played once, and we already have\n\t      // one segment downloaded do nothing\n\t      if (!hasPlayed && bufferedTime >= 1) {\n\t        return null;\n\t      }\n\t\n\t      // When the syncPoint is null, there is no way of determining a good\n\t      // conservative segment index to fetch from\n\t      // The best thing to do here is to get the kind of sync-point data by\n\t      // making a request\n\t      if (syncPoint === null) {\n\t        mediaIndex = this.getSyncSegmentCandidate_(playlist);\n\t        log('getSync', mediaIndex);\n\t        return this.generateSegmentInfo_(playlist, mediaIndex, null, true);\n\t      }\n\t\n\t      // Under normal playback conditions fetching is a simple walk forward\n\t      if (mediaIndex !== null) {\n\t        log('++', mediaIndex + 1);\n\t        var segment = playlist.segments[mediaIndex];\n\t\n\t        if (segment && segment.end) {\n\t          startOfSegment = segment.end;\n\t        } else {\n\t          startOfSegment = lastBufferedEnd;\n\t        }\n\t        return this.generateSegmentInfo_(playlist, mediaIndex + 1, startOfSegment, false);\n\t      }\n\t\n\t      // There is a sync-point but the lack of a mediaIndex indicates that\n\t      // we need to make a good conservative guess about which segment to\n\t      // fetch\n\t      if (this.fetchAtBuffer_) {\n\t        // Find the segment containing the end of the buffer\n\t        var mediaSourceInfo = (0, _playlist.getMediaInfoForTime_)(playlist, lastBufferedEnd, syncPoint.segmentIndex, syncPoint.time);\n\t\n\t        mediaIndex = mediaSourceInfo.mediaIndex;\n\t        startOfSegment = mediaSourceInfo.startTime;\n\t      } else {\n\t        // Find the segment containing currentTime\n\t        var mediaSourceInfo = (0, _playlist.getMediaInfoForTime_)(playlist, currentTime, syncPoint.segmentIndex, syncPoint.time);\n\t\n\t        mediaIndex = mediaSourceInfo.mediaIndex;\n\t        startOfSegment = mediaSourceInfo.startTime;\n\t      }\n\t      log('gMIFT', mediaIndex, 'sos', startOfSegment);\n\t      return this.generateSegmentInfo_(playlist, mediaIndex, startOfSegment, false);\n\t    }\n\t  }, {\n\t    key: 'generateSegmentInfo_',\n\t    value: function generateSegmentInfo_(playlist, mediaIndex, startOfSegment, isSyncRequest) {\n\t      if (mediaIndex < 0 || mediaIndex >= playlist.segments.length) {\n\t        return null;\n\t      }\n\t\n\t      var segment = playlist.segments[mediaIndex];\n\t\n\t      return {\n\t        // resolve the segment URL relative to the playlist\n\t        uri: segment.resolvedUri,\n\t        // the segment's mediaIndex at the time it was requested\n\t        mediaIndex: mediaIndex,\n\t        // whether or not to update the SegmentLoader's state with this\n\t        // segment's mediaIndex\n\t        isSyncRequest: isSyncRequest,\n\t        startOfSegment: startOfSegment,\n\t        // the segment's playlist\n\t        playlist: playlist,\n\t        // unencrypted bytes of the segment\n\t        bytes: null,\n\t        // when a key is defined for this segment, the encrypted bytes\n\t        encryptedBytes: null,\n\t        // The target timestampOffset for this segment when we append it\n\t        // to the source buffer\n\t        timestampOffset: null,\n\t        // The timeline that the segment is in\n\t        timeline: segment.timeline,\n\t        // The expected duration of the segment in seconds\n\t        duration: segment.duration\n\t      };\n\t    }\n\t\n\t    /**\n\t     * abort all pending xhr requests and null any pending segements\n\t     *\n\t     * @private\n\t     */\n\t  }, {\n\t    key: 'abort_',\n\t    value: function abort_() {\n\t      if (this.xhr_) {\n\t        this.xhr_.abort();\n\t      }\n\t\n\t      // clear out the segment being processed\n\t      this.pendingSegment_ = null;\n\t    }\n\t\n\t    /**\n\t     * Once all the starting parameters have been specified, begin\n\t     * operation. This method should only be invoked from the INIT\n\t     * state.\n\t     *\n\t     * @private\n\t     */\n\t  }, {\n\t    key: 'init_',\n\t    value: function init_() {\n\t      this.state = 'READY';\n\t      this.sourceUpdater_ = new _sourceUpdater2['default'](this.mediaSource_, this.mimeType_);\n\t      this.resetEverything();\n\t      return this.fillBuffer_();\n\t    }\n\t\n\t    /**\n\t     * fill the buffer with segements unless the\n\t     * sourceBuffers are currently updating\n\t     *\n\t     * @private\n\t     */\n\t  }, {\n\t    key: 'fillBuffer_',\n\t    value: function fillBuffer_() {\n\t      if (this.sourceUpdater_.updating()) {\n\t        return;\n\t      }\n\t\n\t      if (!this.syncPoint_) {\n\t        this.syncPoint_ = this.syncController_.getSyncPoint(this.playlist_, this.mediaSource_.duration, this.currentTimeline_);\n\t      }\n\t\n\t      // see if we need to begin loading immediately\n\t      var segmentInfo = this.checkBuffer_(this.sourceUpdater_.buffered(), this.playlist_, this.mediaIndex, this.hasPlayed_(), this.currentTime_(), this.syncPoint_);\n\t\n\t      if (!segmentInfo) {\n\t        return;\n\t      }\n\t\n\t      var isEndOfStream = detectEndOfStream(this.playlist_, this.mediaSource_, segmentInfo.mediaIndex);\n\t\n\t      if (isEndOfStream) {\n\t        this.mediaSource_.endOfStream();\n\t        return;\n\t      }\n\t\n\t      if (segmentInfo.mediaIndex === this.playlist_.segments.length - 1 && this.mediaSource_.readyState === 'ended' && !this.seeking_()) {\n\t        return;\n\t      }\n\t\n\t      // We will need to change timestampOffset of the sourceBuffer if either of\n\t      // the following conditions are true:\n\t      // - The segment.timeline !== this.currentTimeline\n\t      //   (we are crossing a discontinuity somehow)\n\t      // - The \"timestampOffset\" for the start of this segment is less than\n\t      //   the currently set timestampOffset\n\t      if (segmentInfo.timeline !== this.currentTimeline_ || segmentInfo.startOfSegment !== null && segmentInfo.startOfSegment < this.sourceUpdater_.timestampOffset()) {\n\t        this.syncController_.reset();\n\t        segmentInfo.timestampOffset = segmentInfo.startOfSegment;\n\t      }\n\t\n\t      this.currentTimeline_ = segmentInfo.timeline;\n\t      this.loadSegment_(segmentInfo);\n\t    }\n\t\n\t    /**\n\t     * trim the back buffer so we only remove content\n\t     * on segment boundaries\n\t     *\n\t     * @private\n\t     *\n\t     * @param {Object} segmentInfo - the current segment\n\t     * @returns {Number} removeToTime - the end point in time, in seconds\n\t     * that the the buffer should be trimmed.\n\t     */\n\t  }, {\n\t    key: 'trimBuffer_',\n\t    value: function trimBuffer_(segmentInfo) {\n\t      var seekable = this.seekable_();\n\t      var currentTime = this.currentTime_();\n\t      var removeToTime = undefined;\n\t\n\t      // Chrome has a hard limit of 150mb of\n\t      // buffer and a very conservative \"garbage collector\"\n\t      // We manually clear out the old buffer to ensure\n\t      // we don't trigger the QuotaExceeded error\n\t      // on the source buffer during subsequent appends\n\t\n\t      // If we have a seekable range use that as the limit for what can be removed safely\n\t      // otherwise remove anything older than 1 minute before the current play head\n\t      if (seekable.length && seekable.start(0) > 0 && seekable.start(0) < currentTime) {\n\t        return seekable.start(0);\n\t      }\n\t\n\t      removeToTime = currentTime - 60;\n\t\n\t      return removeToTime;\n\t    }\n\t\n\t    /**\n\t     * load a specific segment from a request into the buffer\n\t     *\n\t     * @private\n\t     */\n\t  }, {\n\t    key: 'loadSegment_',\n\t    value: function loadSegment_(segmentInfo) {\n\t      var segment = undefined;\n\t      var keyXhr = undefined;\n\t      var initSegmentXhr = undefined;\n\t      var segmentXhr = undefined;\n\t      var removeToTime = 0;\n\t\n\t      removeToTime = this.trimBuffer_(segmentInfo);\n\t\n\t      if (removeToTime > 0) {\n\t        this.sourceUpdater_.remove(0, removeToTime);\n\t      }\n\t\n\t      segment = segmentInfo.playlist.segments[segmentInfo.mediaIndex];\n\t\n\t      // optionally, request the decryption key\n\t      if (segment.key) {\n\t        var keyRequestOptions = _videoJs2['default'].mergeOptions(this.xhrOptions_, {\n\t          uri: segment.key.resolvedUri,\n\t          responseType: 'arraybuffer'\n\t        });\n\t\n\t        keyXhr = this.hls_.xhr(keyRequestOptions, this.handleResponse_.bind(this));\n\t      }\n\t\n\t      // optionally, request the associated media init segment\n\t      if (segment.map && !this.initSegments_[initSegmentId(segment.map)]) {\n\t        var initSegmentOptions = _videoJs2['default'].mergeOptions(this.xhrOptions_, {\n\t          uri: segment.map.resolvedUri,\n\t          responseType: 'arraybuffer',\n\t          headers: segmentXhrHeaders(segment.map)\n\t        });\n\t\n\t        initSegmentXhr = this.hls_.xhr(initSegmentOptions, this.handleResponse_.bind(this));\n\t      }\n\t      this.pendingSegment_ = segmentInfo;\n\t\n\t      var segmentRequestOptions = _videoJs2['default'].mergeOptions(this.xhrOptions_, {\n\t        uri: segmentInfo.uri,\n\t        responseType: 'arraybuffer',\n\t        headers: segmentXhrHeaders(segment)\n\t      });\n\t\n\t      segmentXhr = this.hls_.xhr(segmentRequestOptions, this.handleResponse_.bind(this));\n\t\n\t      this.xhr_ = {\n\t        keyXhr: keyXhr,\n\t        initSegmentXhr: initSegmentXhr,\n\t        segmentXhr: segmentXhr,\n\t        abort: function abort() {\n\t          if (this.segmentXhr) {\n\t            // Prevent error handler from running.\n\t            this.segmentXhr.onreadystatechange = null;\n\t            this.segmentXhr.abort();\n\t            this.segmentXhr = null;\n\t          }\n\t          if (this.initSegmentXhr) {\n\t            // Prevent error handler from running.\n\t            this.initSegmentXhr.onreadystatechange = null;\n\t            this.initSegmentXhr.abort();\n\t            this.initSegmentXhr = null;\n\t          }\n\t          if (this.keyXhr) {\n\t            // Prevent error handler from running.\n\t            this.keyXhr.onreadystatechange = null;\n\t            this.keyXhr.abort();\n\t            this.keyXhr = null;\n\t          }\n\t        }\n\t      };\n\t\n\t      this.state = 'WAITING';\n\t    }\n\t\n\t    /**\n\t     * triggered when a segment response is received\n\t     *\n\t     * @private\n\t     */\n\t  }, {\n\t    key: 'handleResponse_',\n\t    value: function handleResponse_(error, request) {\n\t      var segmentInfo = undefined;\n\t      var segment = undefined;\n\t      var view = undefined;\n\t\n\t      // timeout of previously aborted request\n\t      if (!this.xhr_ || request !== this.xhr_.segmentXhr && request !== this.xhr_.keyXhr && request !== this.xhr_.initSegmentXhr) {\n\t        return;\n\t      }\n\t\n\t      segmentInfo = this.pendingSegment_;\n\t      segment = segmentInfo.playlist.segments[segmentInfo.mediaIndex];\n\t\n\t      // if a request times out, reset bandwidth tracking\n\t      if (request.timedout) {\n\t        this.abort_();\n\t        this.bandwidth = 1;\n\t        this.roundTrip = NaN;\n\t        this.state = 'READY';\n\t        return this.trigger('progress');\n\t      }\n\t\n\t      // trigger an event for other errors\n\t      if (!request.aborted && error) {\n\t        // abort will clear xhr_\n\t        var keyXhrRequest = this.xhr_.keyXhr;\n\t\n\t        this.abort_();\n\t        this.error({\n\t          status: request.status,\n\t          message: request === keyXhrRequest ? 'HLS key request error at URL: ' + segment.key.uri : 'HLS segment request error at URL: ' + segmentInfo.uri,\n\t          code: 2,\n\t          xhr: request\n\t        });\n\t        this.state = 'READY';\n\t        this.pause();\n\t        return this.trigger('error');\n\t      }\n\t\n\t      // stop processing if the request was aborted\n\t      if (!request.response) {\n\t        this.abort_();\n\t        return;\n\t      }\n\t\n\t      if (request === this.xhr_.segmentXhr) {\n\t        // the segment request is no longer outstanding\n\t        this.xhr_.segmentXhr = null;\n\t        segmentInfo.startOfAppend = Date.now();\n\t\n\t        // calculate the download bandwidth based on segment request\n\t        this.roundTrip = request.roundTripTime;\n\t        this.bandwidth = request.bandwidth;\n\t        this.mediaBytesTransferred += request.bytesReceived || 0;\n\t        this.mediaRequests += 1;\n\t        this.mediaTransferDuration += request.roundTripTime || 0;\n\t\n\t        if (segment.key) {\n\t          segmentInfo.encryptedBytes = new Uint8Array(request.response);\n\t        } else {\n\t          segmentInfo.bytes = new Uint8Array(request.response);\n\t        }\n\t      }\n\t\n\t      if (request === this.xhr_.keyXhr) {\n\t        // the key request is no longer outstanding\n\t        this.xhr_.keyXhr = null;\n\t\n\t        if (request.response.byteLength !== 16) {\n\t          this.abort_();\n\t          this.error({\n\t            status: request.status,\n\t            message: 'Invalid HLS key at URL: ' + segment.key.uri,\n\t            code: 2,\n\t            xhr: request\n\t          });\n\t          this.state = 'READY';\n\t          this.pause();\n\t          return this.trigger('error');\n\t        }\n\t\n\t        view = new DataView(request.response);\n\t        segment.key.bytes = new Uint32Array([view.getUint32(0), view.getUint32(4), view.getUint32(8), view.getUint32(12)]);\n\t\n\t        // if the media sequence is greater than 2^32, the IV will be incorrect\n\t        // assuming 10s segments, that would be about 1300 years\n\t        segment.key.iv = segment.key.iv || new Uint32Array([0, 0, 0, segmentInfo.mediaIndex + segmentInfo.playlist.mediaSequence]);\n\t      }\n\t\n\t      if (request === this.xhr_.initSegmentXhr) {\n\t        // the init segment request is no longer outstanding\n\t        this.xhr_.initSegmentXhr = null;\n\t        segment.map.bytes = new Uint8Array(request.response);\n\t        this.initSegments_[initSegmentId(segment.map)] = segment.map;\n\t      }\n\t\n\t      if (!this.xhr_.segmentXhr && !this.xhr_.keyXhr && !this.xhr_.initSegmentXhr) {\n\t        this.xhr_ = null;\n\t        this.processResponse_();\n\t      }\n\t    }\n\t\n\t    /**\n\t     * Delete all the buffered data and reset the SegmentLoader\n\t     */\n\t  }, {\n\t    key: 'resetEverything',\n\t    value: function resetEverything() {\n\t      this.resetLoader();\n\t      this.remove(0, Infinity);\n\t    }\n\t\n\t    /**\n\t     * Force the SegmentLoader to resync and start loading around the currentTime instead\n\t     * of starting at the end of the buffer\n\t     *\n\t     * Useful for fast quality changes\n\t     */\n\t  }, {\n\t    key: 'resetLoader',\n\t    value: function resetLoader() {\n\t      this.fetchAtBuffer_ = false;\n\t      this.resyncLoader();\n\t    }\n\t\n\t    /**\n\t     * Force the SegmentLoader to restart synchronization and make a conservative guess\n\t     * before returning to the simple walk-forward method\n\t     */\n\t  }, {\n\t    key: 'resyncLoader',\n\t    value: function resyncLoader() {\n\t      this.mediaIndex = null;\n\t      this.syncPoint_ = null;\n\t    }\n\t\n\t    /**\n\t     * Remove any data in the source buffer between start and end times\n\t     * @param {Number} start - the start time of the region to remove from the buffer\n\t     * @param {Number} end - the end time of the region to remove from the buffer\n\t     */\n\t  }, {\n\t    key: 'remove',\n\t    value: function remove(start, end) {\n\t      if (this.sourceUpdater_) {\n\t        this.sourceUpdater_.remove(start, end);\n\t      }\n\t    }\n\t\n\t    /**\n\t     * Decrypt the segment that is being loaded if necessary\n\t     *\n\t     * @private\n\t     */\n\t  }, {\n\t    key: 'processResponse_',\n\t    value: function processResponse_() {\n\t      if (!this.pendingSegment_) {\n\t        this.state = 'READY';\n\t        return;\n\t      }\n\t\n\t      this.state = 'DECRYPTING';\n\t\n\t      var segmentInfo = this.pendingSegment_;\n\t      var segment = segmentInfo.playlist.segments[segmentInfo.mediaIndex];\n\t\n\t      if (segment.key) {\n\t        // this is an encrypted segment\n\t        // incrementally decrypt the segment\n\t        /* eslint-disable no-new, handle-callback-err */\n\t        new _aesDecrypter.Decrypter(segmentInfo.encryptedBytes, segment.key.bytes, segment.key.iv, (function (err, bytes) {\n\t          // err always null\n\t          segmentInfo.bytes = bytes;\n\t          this.handleSegment_();\n\t        }).bind(this));\n\t        /* eslint-enable */\n\t      } else {\n\t          this.handleSegment_();\n\t        }\n\t    }\n\t\n\t    /**\n\t     * append a decrypted segement to the SourceBuffer through a SourceUpdater\n\t     *\n\t     * @private\n\t     */\n\t  }, {\n\t    key: 'handleSegment_',\n\t    value: function handleSegment_() {\n\t      var _this3 = this;\n\t\n\t      if (!this.pendingSegment_) {\n\t        this.state = 'READY';\n\t        return;\n\t      }\n\t\n\t      this.state = 'APPENDING';\n\t\n\t      var segmentInfo = this.pendingSegment_;\n\t      var segment = segmentInfo.playlist.segments[segmentInfo.mediaIndex];\n\t\n\t      this.syncController_.probeSegmentInfo(segmentInfo);\n\t\n\t      if (segmentInfo.isSyncRequest) {\n\t        this.pendingSegment_ = null;\n\t        this.state = 'READY';\n\t        return;\n\t      }\n\t\n\t      if (segmentInfo.timestampOffset !== null && segmentInfo.timestampOffset !== this.sourceUpdater_.timestampOffset()) {\n\t        this.sourceUpdater_.timestampOffset(segmentInfo.timestampOffset);\n\t      }\n\t\n\t      // if the media initialization segment is changing, append it\n\t      // before the content segment\n\t      if (segment.map) {\n\t        (function () {\n\t          var initId = initSegmentId(segment.map);\n\t\n\t          if (!_this3.activeInitSegmentId_ || _this3.activeInitSegmentId_ !== initId) {\n\t            var initSegment = _this3.initSegments_[initId];\n\t\n\t            _this3.sourceUpdater_.appendBuffer(initSegment.bytes, function () {\n\t              _this3.activeInitSegmentId_ = initId;\n\t            });\n\t          }\n\t        })();\n\t      }\n\t\n\t      segmentInfo.byteLength = segmentInfo.bytes.byteLength;\n\t      if (typeof segment.start === 'number' && typeof segment.end === 'number') {\n\t        this.mediaSecondsLoaded += segment.end - segment.start;\n\t      } else {\n\t        this.mediaSecondsLoaded += segment.duration;\n\t      }\n\t\n\t      this.sourceUpdater_.appendBuffer(segmentInfo.bytes, this.handleUpdateEnd_.bind(this));\n\t    }\n\t\n\t    /**\n\t     * callback to run when appendBuffer is finished. detects if we are\n\t     * in a good state to do things with the data we got, or if we need\n\t     * to wait for more\n\t     *\n\t     * @private\n\t     */\n\t  }, {\n\t    key: 'handleUpdateEnd_',\n\t    value: function handleUpdateEnd_() {\n\t      if (!this.pendingSegment_) {\n\t        this.state = 'READY';\n\t        if (!this.paused()) {\n\t          this.fillBuffer_();\n\t        }\n\t        return;\n\t      }\n\t\n\t      var segmentInfo = this.pendingSegment_;\n\t\n\t      this.pendingSegment_ = null;\n\t      this.recordThroughput_(segmentInfo);\n\t\n\t      log('handleUpdateEnd_');\n\t\n\t      if (!segmentInfo.isSyncRequest) {\n\t        this.mediaIndex = segmentInfo.mediaIndex;\n\t        this.fetchAtBuffer_ = true;\n\t      }\n\t\n\t      var currentMediaIndex = segmentInfo.mediaIndex;\n\t\n\t      currentMediaIndex += segmentInfo.playlist.mediaSequence - this.playlist_.mediaSequence;\n\t\n\t      // any time an update finishes and the last segment is in the\n\t      // buffer, end the stream. this ensures the \"ended\" event will\n\t      // fire if playback reaches that point.\n\t      var isEndOfStream = detectEndOfStream(segmentInfo.playlist, this.mediaSource_, currentMediaIndex + 1);\n\t\n\t      if (isEndOfStream) {\n\t        this.mediaSource_.endOfStream();\n\t      }\n\t\n\t      this.state = 'READY';\n\t      this.trigger('progress');\n\t\n\t      if (!this.paused()) {\n\t        this.fillBuffer_();\n\t      }\n\t    }\n\t\n\t    /**\n\t     * Records the current throughput of the decrypt, transmux, and append\n\t     * portion of the semgment pipeline. `throughput.rate` is a the cumulative\n\t     * moving average of the throughput. `throughput.count` is the number of\n\t     * data points in the average.\n\t     *\n\t     * @private\n\t     * @param {Object} segmentInfo the object returned by loadSegment\n\t     */\n\t  }, {\n\t    key: 'recordThroughput_',\n\t    value: function recordThroughput_(segmentInfo) {\n\t      var rate = this.throughput.rate;\n\t      // Add one to the time to ensure that we don't accidentally attempt to divide\n\t      // by zero in the case where the throughput is ridiculously high\n\t      var segmentProcessingTime = Date.now() - segmentInfo.startOfAppend + 1;\n\t      // Multiply by 8000 to convert from bytes/millisecond to bits/second\n\t      var segmentProcessingThroughput = Math.floor(segmentInfo.byteLength / segmentProcessingTime * 8 * 1000);\n\t\n\t      // This is just a cumulative moving average calculation:\n\t      //   newAvg = oldAvg + (sample - oldAvg) / (sampleCount + 1)\n\t      this.throughput.rate += (segmentProcessingThroughput - rate) / ++this.throughput.count;\n\t    }\n\t  }]);\n\t\n\t  return SegmentLoader;\n\t})(_videoJs2['default'].EventTarget);\n\t\n\texports['default'] = SegmentLoader;\n\tmodule.exports = exports['default'];\n\t}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n\t},{\"./config\":3,\"./playlist\":7,\"./source-updater\":13,\"aes-decrypter\":20,\"global/window\":27}],13:[function(require,module,exports){\n\t(function (global){\n\t/**\n\t * @file source-updater.js\n\t */\n\t'use strict';\n\t\n\tObject.defineProperty(exports, '__esModule', {\n\t  value: true\n\t});\n\t\n\tvar _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }\n\t\n\tvar _videoJs = (typeof window !== \"undefined\" ? window['videojs'] : typeof global !== \"undefined\" ? global['videojs'] : null);\n\t\n\tvar _videoJs2 = _interopRequireDefault(_videoJs);\n\t\n\t/**\n\t * A queue of callbacks to be serialized and applied when a\n\t * MediaSource and its associated SourceBuffers are not in the\n\t * updating state. It is used by the segment loader to update the\n\t * underlying SourceBuffers when new data is loaded, for instance.\n\t *\n\t * @class SourceUpdater\n\t * @param {MediaSource} mediaSource the MediaSource to create the\n\t * SourceBuffer from\n\t * @param {String} mimeType the desired MIME type of the underlying\n\t * SourceBuffer\n\t */\n\t\n\tvar SourceUpdater = (function () {\n\t  function SourceUpdater(mediaSource, mimeType) {\n\t    var _this = this;\n\t\n\t    _classCallCheck(this, SourceUpdater);\n\t\n\t    var createSourceBuffer = function createSourceBuffer() {\n\t      _this.sourceBuffer_ = mediaSource.addSourceBuffer(mimeType);\n\t\n\t      // run completion handlers and process callbacks as updateend\n\t      // events fire\n\t      _this.onUpdateendCallback_ = function () {\n\t        var pendingCallback = _this.pendingCallback_;\n\t\n\t        _this.pendingCallback_ = null;\n\t\n\t        if (pendingCallback) {\n\t          pendingCallback();\n\t        }\n\t\n\t        _this.runCallback_();\n\t      };\n\t\n\t      _this.sourceBuffer_.addEventListener('updateend', _this.onUpdateendCallback_);\n\t\n\t      _this.runCallback_();\n\t    };\n\t\n\t    this.callbacks_ = [];\n\t    this.pendingCallback_ = null;\n\t    this.timestampOffset_ = 0;\n\t    this.mediaSource = mediaSource;\n\t\n\t    if (mediaSource.readyState === 'closed') {\n\t      mediaSource.addEventListener('sourceopen', createSourceBuffer);\n\t    } else {\n\t      createSourceBuffer();\n\t    }\n\t  }\n\t\n\t  /**\n\t   * Aborts the current segment and resets the segment parser.\n\t   *\n\t   * @param {Function} done function to call when done\n\t   * @see http://w3c.github.io/media-source/#widl-SourceBuffer-abort-void\n\t   */\n\t\n\t  _createClass(SourceUpdater, [{\n\t    key: 'abort',\n\t    value: function abort(done) {\n\t      var _this2 = this;\n\t\n\t      this.queueCallback_(function () {\n\t        _this2.sourceBuffer_.abort();\n\t      }, done);\n\t    }\n\t\n\t    /**\n\t     * Queue an update to append an ArrayBuffer.\n\t     *\n\t     * @param {ArrayBuffer} bytes\n\t     * @param {Function} done the function to call when done\n\t     * @see http://www.w3.org/TR/media-source/#widl-SourceBuffer-appendBuffer-void-ArrayBuffer-data\n\t     */\n\t  }, {\n\t    key: 'appendBuffer',\n\t    value: function appendBuffer(bytes, done) {\n\t      var _this3 = this;\n\t\n\t      this.queueCallback_(function () {\n\t        _this3.sourceBuffer_.appendBuffer(bytes);\n\t      }, done);\n\t    }\n\t\n\t    /**\n\t     * Indicates what TimeRanges are buffered in the managed SourceBuffer.\n\t     *\n\t     * @see http://www.w3.org/TR/media-source/#widl-SourceBuffer-buffered\n\t     */\n\t  }, {\n\t    key: 'buffered',\n\t    value: function buffered() {\n\t      if (!this.sourceBuffer_) {\n\t        return _videoJs2['default'].createTimeRanges();\n\t      }\n\t      return this.sourceBuffer_.buffered;\n\t    }\n\t\n\t    /**\n\t     * Queue an update to set the duration.\n\t     *\n\t     * @param {Double} duration what to set the duration to\n\t     * @see http://www.w3.org/TR/media-source/#widl-MediaSource-duration\n\t     */\n\t  }, {\n\t    key: 'duration',\n\t    value: function duration(_duration) {\n\t      var _this4 = this;\n\t\n\t      this.queueCallback_(function () {\n\t        _this4.sourceBuffer_.duration = _duration;\n\t      });\n\t    }\n\t\n\t    /**\n\t     * Queue an update to remove a time range from the buffer.\n\t     *\n\t     * @param {Number} start where to start the removal\n\t     * @param {Number} end where to end the removal\n\t     * @see http://www.w3.org/TR/media-source/#widl-SourceBuffer-remove-void-double-start-unrestricted-double-end\n\t     */\n\t  }, {\n\t    key: 'remove',\n\t    value: function remove(start, end) {\n\t      var _this5 = this;\n\t\n\t      this.queueCallback_(function () {\n\t        _this5.sourceBuffer_.remove(start, end);\n\t      });\n\t    }\n\t\n\t    /**\n\t     * wether the underlying sourceBuffer is updating or not\n\t     *\n\t     * @return {Boolean} the updating status of the SourceBuffer\n\t     */\n\t  }, {\n\t    key: 'updating',\n\t    value: function updating() {\n\t      return !this.sourceBuffer_ || this.sourceBuffer_.updating;\n\t    }\n\t\n\t    /**\n\t     * Set/get the timestampoffset on the SourceBuffer\n\t     *\n\t     * @return {Number} the timestamp offset\n\t     */\n\t  }, {\n\t    key: 'timestampOffset',\n\t    value: function timestampOffset(offset) {\n\t      var _this6 = this;\n\t\n\t      if (typeof offset !== 'undefined') {\n\t        this.queueCallback_(function () {\n\t          _this6.sourceBuffer_.timestampOffset = offset;\n\t        });\n\t        this.timestampOffset_ = offset;\n\t      }\n\t      return this.timestampOffset_;\n\t    }\n\t\n\t    /**\n\t     * que a callback to run\n\t     */\n\t  }, {\n\t    key: 'queueCallback_',\n\t    value: function queueCallback_(callback, done) {\n\t      this.callbacks_.push([callback.bind(this), done]);\n\t      this.runCallback_();\n\t    }\n\t\n\t    /**\n\t     * run a queued callback\n\t     */\n\t  }, {\n\t    key: 'runCallback_',\n\t    value: function runCallback_() {\n\t      var callbacks = undefined;\n\t\n\t      if (this.sourceBuffer_ && !this.sourceBuffer_.updating && this.callbacks_.length) {\n\t        callbacks = this.callbacks_.shift();\n\t        this.pendingCallback_ = callbacks[1];\n\t        callbacks[0]();\n\t      }\n\t    }\n\t\n\t    /**\n\t     * dispose of the source updater and the underlying sourceBuffer\n\t     */\n\t  }, {\n\t    key: 'dispose',\n\t    value: function dispose() {\n\t      this.sourceBuffer_.removeEventListener('updateend', this.onUpdateendCallback_);\n\t      if (this.sourceBuffer_ && this.mediaSource.readyState === 'open') {\n\t        this.sourceBuffer_.abort();\n\t      }\n\t    }\n\t  }]);\n\t\n\t  return SourceUpdater;\n\t})();\n\t\n\texports['default'] = SourceUpdater;\n\tmodule.exports = exports['default'];\n\t}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n\t},{}],14:[function(require,module,exports){\n\t/**\n\t * @file stream.js\n\t */\n\t/**\n\t * A lightweight readable stream implemention that handles event dispatching.\n\t *\n\t * @class Stream\n\t */\n\t'use strict';\n\t\n\tObject.defineProperty(exports, '__esModule', {\n\t  value: true\n\t});\n\t\n\tvar _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }\n\t\n\tvar Stream = (function () {\n\t  function Stream() {\n\t    _classCallCheck(this, Stream);\n\t\n\t    this.listeners = {};\n\t  }\n\t\n\t  /**\n\t   * Add a listener for a specified event type.\n\t   *\n\t   * @param {String} type the event name\n\t   * @param {Function} listener the callback to be invoked when an event of\n\t   * the specified type occurs\n\t   */\n\t\n\t  _createClass(Stream, [{\n\t    key: 'on',\n\t    value: function on(type, listener) {\n\t      if (!this.listeners[type]) {\n\t        this.listeners[type] = [];\n\t      }\n\t      this.listeners[type].push(listener);\n\t    }\n\t\n\t    /**\n\t     * Remove a listener for a specified event type.\n\t     *\n\t     * @param {String} type the event name\n\t     * @param {Function} listener  a function previously registered for this\n\t     * type of event through `on`\n\t     * @return {Boolean} if we could turn it off or not\n\t     */\n\t  }, {\n\t    key: 'off',\n\t    value: function off(type, listener) {\n\t      var index = undefined;\n\t\n\t      if (!this.listeners[type]) {\n\t        return false;\n\t      }\n\t      index = this.listeners[type].indexOf(listener);\n\t      this.listeners[type].splice(index, 1);\n\t      return index > -1;\n\t    }\n\t\n\t    /**\n\t     * Trigger an event of the specified type on this stream. Any additional\n\t     * arguments to this function are passed as parameters to event listeners.\n\t     *\n\t     * @param {String} type the event name\n\t     */\n\t  }, {\n\t    key: 'trigger',\n\t    value: function trigger(type) {\n\t      var callbacks = undefined;\n\t      var i = undefined;\n\t      var length = undefined;\n\t      var args = undefined;\n\t\n\t      callbacks = this.listeners[type];\n\t      if (!callbacks) {\n\t        return;\n\t      }\n\t      // Slicing the arguments on every invocation of this method\n\t      // can add a significant amount of overhead. Avoid the\n\t      // intermediate object creation for the common case of a\n\t      // single callback argument\n\t      if (arguments.length === 2) {\n\t        length = callbacks.length;\n\t        for (i = 0; i < length; ++i) {\n\t          callbacks[i].call(this, arguments[1]);\n\t        }\n\t      } else {\n\t        args = Array.prototype.slice.call(arguments, 1);\n\t        length = callbacks.length;\n\t        for (i = 0; i < length; ++i) {\n\t          callbacks[i].apply(this, args);\n\t        }\n\t      }\n\t    }\n\t\n\t    /**\n\t     * Destroys the stream and cleans up.\n\t     */\n\t  }, {\n\t    key: 'dispose',\n\t    value: function dispose() {\n\t      this.listeners = {};\n\t    }\n\t\n\t    /**\n\t     * Forwards all `data` events on this stream to the destination stream. The\n\t     * destination stream should provide a method `push` to receive the data\n\t     * events as they arrive.\n\t     *\n\t     * @param {Stream} destination the stream that will receive all `data` events\n\t     * @see http://nodejs.org/api/stream.html#stream_readable_pipe_destination_options\n\t     */\n\t  }, {\n\t    key: 'pipe',\n\t    value: function pipe(destination) {\n\t      this.on('data', function (data) {\n\t        destination.push(data);\n\t      });\n\t    }\n\t  }]);\n\t\n\t  return Stream;\n\t})();\n\t\n\texports['default'] = Stream;\n\tmodule.exports = exports['default'];\n\t},{}],15:[function(require,module,exports){\n\t(function (global){\n\t/**\n\t * @file sync-controller.js\n\t */\n\t\n\t'use strict';\n\t\n\tObject.defineProperty(exports, '__esModule', {\n\t  value: true\n\t});\n\t\n\tvar _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();\n\t\n\tvar _get = function get(_x, _x2, _x3) { var _again = true; _function: while (_again) { var object = _x, property = _x2, receiver = _x3; _again = false; if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { _x = parent; _x2 = property; _x3 = receiver; _again = true; desc = parent = undefined; continue _function; } } else if ('value' in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } } };\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== 'function' && superClass !== null) { throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\tvar _muxJsLibMp4Probe = require('mux.js/lib/mp4/probe');\n\t\n\tvar _muxJsLibMp4Probe2 = _interopRequireDefault(_muxJsLibMp4Probe);\n\t\n\tvar _muxJsLibToolsTsInspectorJs = require('mux.js/lib/tools/ts-inspector.js');\n\t\n\tvar _playlist = require('./playlist');\n\t\n\tvar _videoJs = (typeof window !== \"undefined\" ? window['videojs'] : typeof global !== \"undefined\" ? global['videojs'] : null);\n\t\n\tvar _videoJs2 = _interopRequireDefault(_videoJs);\n\t\n\tvar c = 'console';\n\t// temporary, switchable debug logging\n\tvar log = function log() {\n\t  if (window.logit) {\n\t    window[c].log.apply(window[c], arguments);\n\t  }\n\t};\n\t\n\tvar syncPointStrategies = [\n\t// Stategy \"VOD\": Handle the VOD-case where the sync-point is *always*\n\t//                the equivalence display-time 0 === segment-index 0\n\t{\n\t  name: 'VOD',\n\t  run: function run(syncController, playlist, duration, currentTimeline) {\n\t    if (duration !== Infinity) {\n\t      var syncPoint = {\n\t        time: 0,\n\t        segmentIndex: 0\n\t      };\n\t\n\t      return syncPoint;\n\t    }\n\t    return null;\n\t  }\n\t},\n\t// Stategy \"ProgramDateTime\": We have a program-date-time tag in this playlist\n\t{\n\t  name: 'ProgramDateTime',\n\t  run: function run(syncController, playlist, duration, currentTimeline) {\n\t    if (syncController.datetimeToDisplayTime && playlist.dateTimeObject) {\n\t      var playlistTime = playlist.dateTimeObject.getTime() / 1000;\n\t      var playlistStart = playlistTime + syncController.datetimeToDisplayTime;\n\t      var syncPoint = {\n\t        time: playlistStart,\n\t        segmentIndex: 0\n\t      };\n\t\n\t      return syncPoint;\n\t    }\n\t    return null;\n\t  }\n\t},\n\t// Stategy \"Segment\": We have a known time mapping for a timeline and a\n\t//                    segment in the current timeline with timing data\n\t{\n\t  name: 'Segment',\n\t  run: function run(syncController, playlist, duration, currentTimeline) {\n\t    var segments = playlist.segments;\n\t\n\t    for (var i = segments.length - 1; i >= 0; i--) {\n\t      var segment = segments[i];\n\t\n\t      if (segment.timeline === currentTimeline && typeof segment.start !== 'undefined') {\n\t        var syncPoint = {\n\t          time: segment.start,\n\t          segmentIndex: i\n\t        };\n\t\n\t        return syncPoint;\n\t      }\n\t    }\n\t    return null;\n\t  }\n\t},\n\t\n\t// Stategy \"Discontinuity\": We have a discontinuity with a known\n\t//                          display-time\n\t{\n\t  name: 'Discontinuity',\n\t  run: function run(syncController, playlist, duration, currentTimeline) {\n\t    if (playlist.discontinuityStarts.length) {\n\t      for (var i = 0; i < playlist.discontinuityStarts.length; i++) {\n\t        var segmentIndex = playlist.discontinuityStarts[i];\n\t        var discontinuity = playlist.discontinuitySequence + i + 1;\n\t\n\t        if (syncController.discontinuities[discontinuity]) {\n\t          var syncPoint = {\n\t            time: syncController.discontinuities[discontinuity].time,\n\t            segmentIndex: segmentIndex\n\t          };\n\t\n\t          return syncPoint;\n\t        }\n\t      }\n\t    }\n\t    return null;\n\t  }\n\t},\n\t// Stategy \"Playlist\": We have a playlist with a known mapping of\n\t//                     segment index to display time\n\t{\n\t  name: 'Playlist',\n\t  run: function run(syncController, playlist, duration, currentTimeline) {\n\t    if (playlist.syncInfo) {\n\t      var syncPoint = {\n\t        time: playlist.syncInfo.time,\n\t        segmentIndex: playlist.syncInfo.mediaSequence - playlist.mediaSequence\n\t      };\n\t\n\t      return syncPoint;\n\t    }\n\t    return null;\n\t  }\n\t}];\n\t\n\texports.syncPointStrategies = syncPointStrategies;\n\t\n\tvar SyncController = (function (_videojs$EventTarget) {\n\t  _inherits(SyncController, _videojs$EventTarget);\n\t\n\t  function SyncController() {\n\t    _classCallCheck(this, SyncController);\n\t\n\t    _get(Object.getPrototypeOf(SyncController.prototype), 'constructor', this).call(this);\n\t    // Segment Loader state variables...\n\t    // ...for synching across variants\n\t    this.inspectCache_ = undefined;\n\t\n\t    // ...for synching across variants\n\t    this.timelines = [];\n\t    this.discontinuities = [];\n\t    this.datetimeToDisplayTime = null;\n\t  }\n\t\n\t  /**\n\t   * Find a sync-point for the playlist specified\n\t   *\n\t   * A sync-point is defined as a known mapping from display-time to\n\t   * a segment-index in the current playlist.\n\t   *\n\t   * @param {Playlist} media - The playlist that needs a sync-point\n\t   * @param {Number} duration - Duration of the MediaSource (Infinite if playing a live source)\n\t   * @param {Number} currentTimeline - The last timeline from which a segment was loaded\n\t   * @returns {Object} - A sync-point object\n\t   */\n\t\n\t  _createClass(SyncController, [{\n\t    key: 'getSyncPoint',\n\t    value: function getSyncPoint(playlist, duration, currentTimeline) {\n\t      // Try to find a sync-point in by utilizing various strategies...\n\t      for (var i = 0; i < syncPointStrategies.length; i++) {\n\t        var strategy = syncPointStrategies[i];\n\t        var syncPoint = strategy.run(this, playlist, duration, currentTimeline);\n\t\n\t        if (syncPoint) {\n\t          log('syncPoint found via <' + strategy.name + '>:', syncPoint);\n\t          return syncPoint;\n\t        }\n\t      }\n\t      // Otherwise, signal that we need to attempt to get a sync-point\n\t      // manually by fetching a segment in the playlist and constructing\n\t      // a sync-point from that information\n\t      return null;\n\t    }\n\t\n\t    /**\n\t     * Save any meta-data present on the segments when segments leave\n\t     * the live window to the playlist to allow for synchronization at the\n\t     * playlist level later.\n\t     *\n\t     * @param {Playlist} oldPlaylist - The previous active playlist\n\t     * @param {Playlist} newPlaylist - The updated and most current playlist\n\t     */\n\t  }, {\n\t    key: 'saveExpiredSegmentInfo',\n\t    value: function saveExpiredSegmentInfo(oldPlaylist, newPlaylist) {\n\t      var mediaSequenceDiff = newPlaylist.mediaSequence - oldPlaylist.mediaSequence;\n\t\n\t      // When a segment expires from the playlist and it has a start time\n\t      // save that information as a possible sync-point reference in future\n\t      for (var i = mediaSequenceDiff - 1; i >= 0; i--) {\n\t        var lastRemovedSegment = oldPlaylist.segments[i];\n\t\n\t        if (typeof lastRemovedSegment.start !== 'undefined') {\n\t          newPlaylist.syncInfo = {\n\t            mediaSequence: oldPlaylist.mediaSequence + i,\n\t            time: lastRemovedSegment.start\n\t          };\n\t          log('playlist sync:', newPlaylist.syncInfo);\n\t          this.trigger('syncinfoupdate');\n\t          break;\n\t        }\n\t      }\n\t    }\n\t\n\t    /**\n\t     * Save the mapping from playlist's ProgramDateTime to display. This should\n\t     * only ever happen once at the start of playback.\n\t     *\n\t     * @param {Playlist} playlist - The currently active playlist\n\t     */\n\t  }, {\n\t    key: 'setDateTimeMapping',\n\t    value: function setDateTimeMapping(playlist) {\n\t      if (!this.datetimeToDisplayTime && playlist.dateTimeObject) {\n\t        var playlistTimestamp = playlist.dateTimeObject.getTime() / 1000;\n\t\n\t        this.datetimeToDisplayTime = -playlistTimestamp;\n\t      }\n\t    }\n\t\n\t    /**\n\t     * Reset the state of the inspection cache when we do a rendition\n\t     * switch\n\t     */\n\t  }, {\n\t    key: 'reset',\n\t    value: function reset() {\n\t      this.inspectCache_ = undefined;\n\t    }\n\t\n\t    /**\n\t     * Probe or inspect a fmp4 or an mpeg2-ts segment to determine the start\n\t     * and end of the segment in it's internal \"media time\". Used to generate\n\t     * mappings from that internal \"media time\" to the display time that is\n\t     * shown on the player.\n\t     *\n\t     * @param {SegmentInfo} segmentInfo - The current active request information\n\t     */\n\t  }, {\n\t    key: 'probeSegmentInfo',\n\t    value: function probeSegmentInfo(segmentInfo) {\n\t      var segment = segmentInfo.playlist.segments[segmentInfo.mediaIndex];\n\t      var timingInfo = undefined;\n\t\n\t      if (segment.map) {\n\t        timingInfo = this.probeMp4Segment_(segmentInfo);\n\t      } else {\n\t        timingInfo = this.probeTsSegment_(segmentInfo);\n\t      }\n\t\n\t      if (timingInfo) {\n\t        if (this.calculateSegmentTimeMapping_(segmentInfo, timingInfo)) {\n\t          this.saveDiscontinuitySyncInfo_(segmentInfo);\n\t        }\n\t      }\n\t    }\n\t\n\t    /**\n\t     * Probe an fmp4 or an mpeg2-ts segment to determine the start of the segment\n\t     * in it's internal \"media time\".\n\t     *\n\t     * @private\n\t     * @param {SegmentInfo} segmentInfo - The current active request information\n\t     * @return {object} The start and end time of the current segment in \"media time\"\n\t     */\n\t  }, {\n\t    key: 'probeMp4Segment_',\n\t    value: function probeMp4Segment_(segmentInfo) {\n\t      var segment = segmentInfo.playlist.segments[segmentInfo.mediaIndex];\n\t      var timescales = _muxJsLibMp4Probe2['default'].timescale(segment.map.bytes);\n\t      var startTime = _muxJsLibMp4Probe2['default'].startTime(timescales, segmentInfo.bytes);\n\t\n\t      if (segmentInfo.timestampOffset !== null) {\n\t        segmentInfo.timestampOffset -= startTime;\n\t      }\n\t\n\t      return {\n\t        start: startTime,\n\t        end: startTime + segment.duration\n\t      };\n\t    }\n\t\n\t    /**\n\t     * Probe an mpeg2-ts segment to determine the start and end of the segment\n\t     * in it's internal \"media time\".\n\t     *\n\t     * @private\n\t     * @param {SegmentInfo} segmentInfo - The current active request information\n\t     * @return {object} The start and end time of the current segment in \"media time\"\n\t     */\n\t  }, {\n\t    key: 'probeTsSegment_',\n\t    value: function probeTsSegment_(segmentInfo) {\n\t      var timeInfo = (0, _muxJsLibToolsTsInspectorJs.inspect)(segmentInfo.bytes, this.inspectCache_);\n\t      var segmentStartTime = undefined;\n\t      var segmentEndTime = undefined;\n\t\n\t      if (!timeInfo) {\n\t        return null;\n\t      }\n\t\n\t      if (timeInfo.video && timeInfo.video.length === 2) {\n\t        this.inspectCache_ = timeInfo.video[1].dts;\n\t        segmentStartTime = timeInfo.video[0].dtsTime;\n\t        segmentEndTime = timeInfo.video[1].dtsTime;\n\t      } else if (timeInfo.audio && timeInfo.audio.length === 2) {\n\t        this.inspectCache_ = timeInfo.audio[1].dts;\n\t        segmentStartTime = timeInfo.audio[0].dtsTime;\n\t        segmentEndTime = timeInfo.audio[1].dtsTime;\n\t      }\n\t\n\t      return {\n\t        start: segmentStartTime,\n\t        end: segmentEndTime\n\t      };\n\t    }\n\t\n\t    /**\n\t     * Use the \"media time\" for a segment to generate a mapping to \"display time\" and\n\t     * save that display time to the segment.\n\t     *\n\t     * @private\n\t     * @param {SegmentInfo} segmentInfo - The current active request information\n\t     * @param {object} timingInfo - The start and end time of the current segment in \"media time\"\n\t     */\n\t  }, {\n\t    key: 'calculateSegmentTimeMapping_',\n\t    value: function calculateSegmentTimeMapping_(segmentInfo, timingInfo) {\n\t      var segment = segmentInfo.playlist.segments[segmentInfo.mediaIndex];\n\t      var mappingObj = this.timelines[segmentInfo.timeline];\n\t\n\t      if (segmentInfo.timestampOffset !== null) {\n\t        log('tsO:', segmentInfo.timestampOffset);\n\t\n\t        mappingObj = {\n\t          time: segmentInfo.timestampOffset,\n\t          mapping: segmentInfo.timestampOffset - timingInfo.start\n\t        };\n\t        this.timelines[segmentInfo.timeline] = mappingObj;\n\t\n\t        segment.start = segmentInfo.timestampOffset;\n\t        segment.end = timingInfo.end + mappingObj.mapping;\n\t      } else if (mappingObj) {\n\t        segment.start = timingInfo.start + mappingObj.mapping;\n\t        segment.end = timingInfo.end + mappingObj.mapping;\n\t      } else {\n\t        return false;\n\t      }\n\t      this.trigger('syncinfoupdate');\n\t      return true;\n\t    }\n\t\n\t    /**\n\t     * Each time we have discontinuity in the playlist, attempt to calculate the location\n\t     * in display of the start of the discontinuity and save that. We also save an accuracy\n\t     * value so that we save values with the most accuracy (closest to 0.)\n\t     *\n\t     * @private\n\t     * @param {SegmentInfo} segmentInfo - The current active request information\n\t     */\n\t  }, {\n\t    key: 'saveDiscontinuitySyncInfo_',\n\t    value: function saveDiscontinuitySyncInfo_(segmentInfo) {\n\t      var playlist = segmentInfo.playlist;\n\t      var segment = playlist.segments[segmentInfo.mediaIndex];\n\t\n\t      // If the current segment is a discontinuity then we know exactly where\n\t      // the start of the range and it's accuracy is 0 (greater accuracy values\n\t      // mean more approximation)\n\t      if (segment.discontinuity) {\n\t        this.discontinuities[segment.timeline] = {\n\t          time: segment.start,\n\t          accuracy: 0\n\t        };\n\t      } else if (playlist.discontinuityStarts.length) {\n\t        // Search for future discontinuities that we can provide better timing\n\t        // information for and save that information for sync purposes\n\t        for (var i = 0; i < playlist.discontinuityStarts.length; i++) {\n\t          var segmentIndex = playlist.discontinuityStarts[i];\n\t          var discontinuity = playlist.discontinuitySequence + i + 1;\n\t          var accuracy = segmentIndex - segmentInfo.mediaIndex;\n\t\n\t          if (accuracy > 0 && (!this.discontinuities[discontinuity] || this.discontinuities[discontinuity].accuracy > accuracy)) {\n\t\n\t            this.discontinuities[discontinuity] = {\n\t              time: segment.end + (0, _playlist.sumDurations)(playlist, segmentInfo.mediaIndex + 1, segmentIndex),\n\t              accuracy: accuracy\n\t            };\n\t          }\n\t        }\n\t      }\n\t    }\n\t  }]);\n\t\n\t  return SyncController;\n\t})(_videoJs2['default'].EventTarget);\n\t\n\texports['default'] = SyncController;\n\t}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n\t},{\"./playlist\":7,\"mux.js/lib/mp4/probe\":85,\"mux.js/lib/tools/ts-inspector.js\":87}],16:[function(require,module,exports){\n\t(function (global){\n\t/**\n\t * @file xhr.js\n\t */\n\t\n\t/**\n\t * A wrapper for videojs.xhr that tracks bandwidth.\n\t *\n\t * @param {Object} options options for the XHR\n\t * @param {Function} callback the callback to call when done\n\t * @return {Request} the xhr request that is going to be made\n\t */\n\t'use strict';\n\t\n\tObject.defineProperty(exports, '__esModule', {\n\t  value: true\n\t});\n\t\n\tvar _videoJs = (typeof window !== \"undefined\" ? window['videojs'] : typeof global !== \"undefined\" ? global['videojs'] : null);\n\t\n\tvar xhrFactory = function xhrFactory() {\n\t  var xhr = function XhrFunction(options, callback) {\n\t    // Add a default timeout for all hls requests\n\t    options = (0, _videoJs.mergeOptions)({\n\t      timeout: 45e3\n\t    }, options);\n\t\n\t    // Allow an optional user-specified function to modify the option\n\t    // object before we construct the xhr request\n\t    if (XhrFunction.beforeRequest && typeof XhrFunction.beforeRequest === 'function') {\n\t      var newOptions = XhrFunction.beforeRequest(options);\n\t\n\t      if (newOptions) {\n\t        options = newOptions;\n\t      }\n\t    }\n\t\n\t    var request = (0, _videoJs.xhr)(options, function (error, response) {\n\t      if (!error && request.response) {\n\t        request.responseTime = Date.now();\n\t        request.roundTripTime = request.responseTime - request.requestTime;\n\t        request.bytesReceived = request.response.byteLength || request.response.length;\n\t        if (!request.bandwidth) {\n\t          request.bandwidth = Math.floor(request.bytesReceived / request.roundTripTime * 8 * 1000);\n\t        }\n\t      }\n\t\n\t      // videojs.xhr now uses a specific code\n\t      // on the error object to signal that a request has\n\t      // timed out errors of setting a boolean on the request object\n\t      if (error || request.timedout) {\n\t        request.timedout = request.timedout || error.code === 'ETIMEDOUT';\n\t      } else {\n\t        request.timedout = false;\n\t      }\n\t\n\t      // videojs.xhr no longer considers status codes outside of 200 and 0\n\t      // (for file uris) to be errors, but the old XHR did, so emulate that\n\t      // behavior. Status 206 may be used in response to byterange requests.\n\t      if (!error && response.statusCode !== 200 && response.statusCode !== 206 && response.statusCode !== 0) {\n\t        error = new Error('XHR Failed with a response of: ' + (request && (request.response || request.responseText)));\n\t      }\n\t\n\t      callback(error, request);\n\t    });\n\t\n\t    request.requestTime = Date.now();\n\t    return request;\n\t  };\n\t\n\t  return xhr;\n\t};\n\t\n\texports['default'] = xhrFactory;\n\tmodule.exports = exports['default'];\n\t}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n\t},{}],17:[function(require,module,exports){\n\t/**\n\t * @file aes.js\n\t *\n\t * This file contains an adaptation of the AES decryption algorithm\n\t * from the Standford Javascript Cryptography Library. That work is\n\t * covered by the following copyright and permissions notice:\n\t *\n\t * Copyright 2009-2010 Emily Stark, Mike Hamburg, Dan Boneh.\n\t * All rights reserved.\n\t *\n\t * Redistribution and use in source and binary forms, with or without\n\t * modification, are permitted provided that the following conditions are\n\t * met:\n\t *\n\t * 1. Redistributions of source code must retain the above copyright\n\t *    notice, this list of conditions and the following disclaimer.\n\t *\n\t * 2. Redistributions in binary form must reproduce the above\n\t *    copyright notice, this list of conditions and the following\n\t *    disclaimer in the documentation and/or other materials provided\n\t *    with the distribution.\n\t *\n\t * THIS SOFTWARE IS PROVIDED BY THE AUTHORS ``AS IS'' AND ANY EXPRESS OR\n\t * IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n\t * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n\t * DISCLAIMED. IN NO EVENT SHALL <COPYRIGHT HOLDER> OR CONTRIBUTORS BE\n\t * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n\t * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n\t * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR\n\t * BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n\t * WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE\n\t * OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN\n\t * IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\t *\n\t * The views and conclusions contained in the software and documentation\n\t * are those of the authors and should not be interpreted as representing\n\t * official policies, either expressed or implied, of the authors.\n\t */\n\t\n\t/**\n\t * Expand the S-box tables.\n\t *\n\t * @private\n\t */\n\t'use strict';\n\t\n\tObject.defineProperty(exports, '__esModule', {\n\t  value: true\n\t});\n\t\n\tvar _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }\n\t\n\tvar precompute = function precompute() {\n\t  var tables = [[[], [], [], [], []], [[], [], [], [], []]];\n\t  var encTable = tables[0];\n\t  var decTable = tables[1];\n\t  var sbox = encTable[4];\n\t  var sboxInv = decTable[4];\n\t  var i = undefined;\n\t  var x = undefined;\n\t  var xInv = undefined;\n\t  var d = [];\n\t  var th = [];\n\t  var x2 = undefined;\n\t  var x4 = undefined;\n\t  var x8 = undefined;\n\t  var s = undefined;\n\t  var tEnc = undefined;\n\t  var tDec = undefined;\n\t\n\t  // Compute double and third tables\n\t  for (i = 0; i < 256; i++) {\n\t    th[(d[i] = i << 1 ^ (i >> 7) * 283) ^ i] = i;\n\t  }\n\t\n\t  for (x = xInv = 0; !sbox[x]; x ^= x2 || 1, xInv = th[xInv] || 1) {\n\t    // Compute sbox\n\t    s = xInv ^ xInv << 1 ^ xInv << 2 ^ xInv << 3 ^ xInv << 4;\n\t    s = s >> 8 ^ s & 255 ^ 99;\n\t    sbox[x] = s;\n\t    sboxInv[s] = x;\n\t\n\t    // Compute MixColumns\n\t    x8 = d[x4 = d[x2 = d[x]]];\n\t    tDec = x8 * 0x1010101 ^ x4 * 0x10001 ^ x2 * 0x101 ^ x * 0x1010100;\n\t    tEnc = d[s] * 0x101 ^ s * 0x1010100;\n\t\n\t    for (i = 0; i < 4; i++) {\n\t      encTable[i][x] = tEnc = tEnc << 24 ^ tEnc >>> 8;\n\t      decTable[i][s] = tDec = tDec << 24 ^ tDec >>> 8;\n\t    }\n\t  }\n\t\n\t  // Compactify. Considerable speedup on Firefox.\n\t  for (i = 0; i < 5; i++) {\n\t    encTable[i] = encTable[i].slice(0);\n\t    decTable[i] = decTable[i].slice(0);\n\t  }\n\t  return tables;\n\t};\n\tvar aesTables = null;\n\t\n\t/**\n\t * Schedule out an AES key for both encryption and decryption. This\n\t * is a low-level class. Use a cipher mode to do bulk encryption.\n\t *\n\t * @class AES\n\t * @param key {Array} The key as an array of 4, 6 or 8 words.\n\t */\n\t\n\tvar AES = (function () {\n\t  function AES(key) {\n\t    _classCallCheck(this, AES);\n\t\n\t    /**\n\t     * The expanded S-box and inverse S-box tables. These will be computed\n\t     * on the client so that we don't have to send them down the wire.\n\t     *\n\t     * There are two tables, _tables[0] is for encryption and\n\t     * _tables[1] is for decryption.\n\t     *\n\t     * The first 4 sub-tables are the expanded S-box with MixColumns. The\n\t     * last (_tables[01][4]) is the S-box itself.\n\t     *\n\t     * @private\n\t     */\n\t    // if we have yet to precompute the S-box tables\n\t    // do so now\n\t    if (!aesTables) {\n\t      aesTables = precompute();\n\t    }\n\t    // then make a copy of that object for use\n\t    this._tables = [[aesTables[0][0].slice(), aesTables[0][1].slice(), aesTables[0][2].slice(), aesTables[0][3].slice(), aesTables[0][4].slice()], [aesTables[1][0].slice(), aesTables[1][1].slice(), aesTables[1][2].slice(), aesTables[1][3].slice(), aesTables[1][4].slice()]];\n\t    var i = undefined;\n\t    var j = undefined;\n\t    var tmp = undefined;\n\t    var encKey = undefined;\n\t    var decKey = undefined;\n\t    var sbox = this._tables[0][4];\n\t    var decTable = this._tables[1];\n\t    var keyLen = key.length;\n\t    var rcon = 1;\n\t\n\t    if (keyLen !== 4 && keyLen !== 6 && keyLen !== 8) {\n\t      throw new Error('Invalid aes key size');\n\t    }\n\t\n\t    encKey = key.slice(0);\n\t    decKey = [];\n\t    this._key = [encKey, decKey];\n\t\n\t    // schedule encryption keys\n\t    for (i = keyLen; i < 4 * keyLen + 28; i++) {\n\t      tmp = encKey[i - 1];\n\t\n\t      // apply sbox\n\t      if (i % keyLen === 0 || keyLen === 8 && i % keyLen === 4) {\n\t        tmp = sbox[tmp >>> 24] << 24 ^ sbox[tmp >> 16 & 255] << 16 ^ sbox[tmp >> 8 & 255] << 8 ^ sbox[tmp & 255];\n\t\n\t        // shift rows and add rcon\n\t        if (i % keyLen === 0) {\n\t          tmp = tmp << 8 ^ tmp >>> 24 ^ rcon << 24;\n\t          rcon = rcon << 1 ^ (rcon >> 7) * 283;\n\t        }\n\t      }\n\t\n\t      encKey[i] = encKey[i - keyLen] ^ tmp;\n\t    }\n\t\n\t    // schedule decryption keys\n\t    for (j = 0; i; j++, i--) {\n\t      tmp = encKey[j & 3 ? i : i - 4];\n\t      if (i <= 4 || j < 4) {\n\t        decKey[j] = tmp;\n\t      } else {\n\t        decKey[j] = decTable[0][sbox[tmp >>> 24]] ^ decTable[1][sbox[tmp >> 16 & 255]] ^ decTable[2][sbox[tmp >> 8 & 255]] ^ decTable[3][sbox[tmp & 255]];\n\t      }\n\t    }\n\t  }\n\t\n\t  /**\n\t   * Decrypt 16 bytes, specified as four 32-bit words.\n\t   *\n\t   * @param {Number} encrypted0 the first word to decrypt\n\t   * @param {Number} encrypted1 the second word to decrypt\n\t   * @param {Number} encrypted2 the third word to decrypt\n\t   * @param {Number} encrypted3 the fourth word to decrypt\n\t   * @param {Int32Array} out the array to write the decrypted words\n\t   * into\n\t   * @param {Number} offset the offset into the output array to start\n\t   * writing results\n\t   * @return {Array} The plaintext.\n\t   */\n\t\n\t  _createClass(AES, [{\n\t    key: 'decrypt',\n\t    value: function decrypt(encrypted0, encrypted1, encrypted2, encrypted3, out, offset) {\n\t      var key = this._key[1];\n\t      // state variables a,b,c,d are loaded with pre-whitened data\n\t      var a = encrypted0 ^ key[0];\n\t      var b = encrypted3 ^ key[1];\n\t      var c = encrypted2 ^ key[2];\n\t      var d = encrypted1 ^ key[3];\n\t      var a2 = undefined;\n\t      var b2 = undefined;\n\t      var c2 = undefined;\n\t\n\t      // key.length === 2 ?\n\t      var nInnerRounds = key.length / 4 - 2;\n\t      var i = undefined;\n\t      var kIndex = 4;\n\t      var table = this._tables[1];\n\t\n\t      // load up the tables\n\t      var table0 = table[0];\n\t      var table1 = table[1];\n\t      var table2 = table[2];\n\t      var table3 = table[3];\n\t      var sbox = table[4];\n\t\n\t      // Inner rounds. Cribbed from OpenSSL.\n\t      for (i = 0; i < nInnerRounds; i++) {\n\t        a2 = table0[a >>> 24] ^ table1[b >> 16 & 255] ^ table2[c >> 8 & 255] ^ table3[d & 255] ^ key[kIndex];\n\t        b2 = table0[b >>> 24] ^ table1[c >> 16 & 255] ^ table2[d >> 8 & 255] ^ table3[a & 255] ^ key[kIndex + 1];\n\t        c2 = table0[c >>> 24] ^ table1[d >> 16 & 255] ^ table2[a >> 8 & 255] ^ table3[b & 255] ^ key[kIndex + 2];\n\t        d = table0[d >>> 24] ^ table1[a >> 16 & 255] ^ table2[b >> 8 & 255] ^ table3[c & 255] ^ key[kIndex + 3];\n\t        kIndex += 4;\n\t        a = a2;b = b2;c = c2;\n\t      }\n\t\n\t      // Last round.\n\t      for (i = 0; i < 4; i++) {\n\t        out[(3 & -i) + offset] = sbox[a >>> 24] << 24 ^ sbox[b >> 16 & 255] << 16 ^ sbox[c >> 8 & 255] << 8 ^ sbox[d & 255] ^ key[kIndex++];\n\t        a2 = a;a = b;b = c;c = d;d = a2;\n\t      }\n\t    }\n\t  }]);\n\t\n\t  return AES;\n\t})();\n\t\n\texports['default'] = AES;\n\tmodule.exports = exports['default'];\n\t},{}],18:[function(require,module,exports){\n\t/**\n\t * @file async-stream.js\n\t */\n\t'use strict';\n\t\n\tObject.defineProperty(exports, '__esModule', {\n\t  value: true\n\t});\n\t\n\tvar _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();\n\t\n\tvar _get = function get(_x, _x2, _x3) { var _again = true; _function: while (_again) { var object = _x, property = _x2, receiver = _x3; _again = false; if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { _x = parent; _x2 = property; _x3 = receiver; _again = true; desc = parent = undefined; continue _function; } } else if ('value' in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } } };\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== 'function' && superClass !== null) { throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\tvar _stream = require('./stream');\n\t\n\tvar _stream2 = _interopRequireDefault(_stream);\n\t\n\t/**\n\t * A wrapper around the Stream class to use setTiemout\n\t * and run stream \"jobs\" Asynchronously\n\t *\n\t * @class AsyncStream\n\t * @extends Stream\n\t */\n\t\n\tvar AsyncStream = (function (_Stream) {\n\t  _inherits(AsyncStream, _Stream);\n\t\n\t  function AsyncStream() {\n\t    _classCallCheck(this, AsyncStream);\n\t\n\t    _get(Object.getPrototypeOf(AsyncStream.prototype), 'constructor', this).call(this, _stream2['default']);\n\t    this.jobs = [];\n\t    this.delay = 1;\n\t    this.timeout_ = null;\n\t  }\n\t\n\t  /**\n\t   * process an async job\n\t   *\n\t   * @private\n\t   */\n\t\n\t  _createClass(AsyncStream, [{\n\t    key: 'processJob_',\n\t    value: function processJob_() {\n\t      this.jobs.shift()();\n\t      if (this.jobs.length) {\n\t        this.timeout_ = setTimeout(this.processJob_.bind(this), this.delay);\n\t      } else {\n\t        this.timeout_ = null;\n\t      }\n\t    }\n\t\n\t    /**\n\t     * push a job into the stream\n\t     *\n\t     * @param {Function} job the job to push into the stream\n\t     */\n\t  }, {\n\t    key: 'push',\n\t    value: function push(job) {\n\t      this.jobs.push(job);\n\t      if (!this.timeout_) {\n\t        this.timeout_ = setTimeout(this.processJob_.bind(this), this.delay);\n\t      }\n\t    }\n\t  }]);\n\t\n\t  return AsyncStream;\n\t})(_stream2['default']);\n\t\n\texports['default'] = AsyncStream;\n\tmodule.exports = exports['default'];\n\t},{\"./stream\":21}],19:[function(require,module,exports){\n\t/**\n\t * @file decrypter.js\n\t *\n\t * An asynchronous implementation of AES-128 CBC decryption with\n\t * PKCS#7 padding.\n\t */\n\t\n\t'use strict';\n\t\n\tObject.defineProperty(exports, '__esModule', {\n\t  value: true\n\t});\n\t\n\tvar _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }\n\t\n\tvar _aes = require('./aes');\n\t\n\tvar _aes2 = _interopRequireDefault(_aes);\n\t\n\tvar _asyncStream = require('./async-stream');\n\t\n\tvar _asyncStream2 = _interopRequireDefault(_asyncStream);\n\t\n\tvar _pkcs7 = require('pkcs7');\n\t\n\t/**\n\t * Convert network-order (big-endian) bytes into their little-endian\n\t * representation.\n\t */\n\tvar ntoh = function ntoh(word) {\n\t  return word << 24 | (word & 0xff00) << 8 | (word & 0xff0000) >> 8 | word >>> 24;\n\t};\n\t\n\t/**\n\t * Decrypt bytes using AES-128 with CBC and PKCS#7 padding.\n\t *\n\t * @param {Uint8Array} encrypted the encrypted bytes\n\t * @param {Uint32Array} key the bytes of the decryption key\n\t * @param {Uint32Array} initVector the initialization vector (IV) to\n\t * use for the first round of CBC.\n\t * @return {Uint8Array} the decrypted bytes\n\t *\n\t * @see http://en.wikipedia.org/wiki/Advanced_Encryption_Standard\n\t * @see http://en.wikipedia.org/wiki/Block_cipher_mode_of_operation#Cipher_Block_Chaining_.28CBC.29\n\t * @see https://tools.ietf.org/html/rfc2315\n\t */\n\tvar decrypt = function decrypt(encrypted, key, initVector) {\n\t  // word-level access to the encrypted bytes\n\t  var encrypted32 = new Int32Array(encrypted.buffer, encrypted.byteOffset, encrypted.byteLength >> 2);\n\t\n\t  var decipher = new _aes2['default'](Array.prototype.slice.call(key));\n\t\n\t  // byte and word-level access for the decrypted output\n\t  var decrypted = new Uint8Array(encrypted.byteLength);\n\t  var decrypted32 = new Int32Array(decrypted.buffer);\n\t\n\t  // temporary variables for working with the IV, encrypted, and\n\t  // decrypted data\n\t  var init0 = undefined;\n\t  var init1 = undefined;\n\t  var init2 = undefined;\n\t  var init3 = undefined;\n\t  var encrypted0 = undefined;\n\t  var encrypted1 = undefined;\n\t  var encrypted2 = undefined;\n\t  var encrypted3 = undefined;\n\t\n\t  // iteration variable\n\t  var wordIx = undefined;\n\t\n\t  // pull out the words of the IV to ensure we don't modify the\n\t  // passed-in reference and easier access\n\t  init0 = initVector[0];\n\t  init1 = initVector[1];\n\t  init2 = initVector[2];\n\t  init3 = initVector[3];\n\t\n\t  // decrypt four word sequences, applying cipher-block chaining (CBC)\n\t  // to each decrypted block\n\t  for (wordIx = 0; wordIx < encrypted32.length; wordIx += 4) {\n\t    // convert big-endian (network order) words into little-endian\n\t    // (javascript order)\n\t    encrypted0 = ntoh(encrypted32[wordIx]);\n\t    encrypted1 = ntoh(encrypted32[wordIx + 1]);\n\t    encrypted2 = ntoh(encrypted32[wordIx + 2]);\n\t    encrypted3 = ntoh(encrypted32[wordIx + 3]);\n\t\n\t    // decrypt the block\n\t    decipher.decrypt(encrypted0, encrypted1, encrypted2, encrypted3, decrypted32, wordIx);\n\t\n\t    // XOR with the IV, and restore network byte-order to obtain the\n\t    // plaintext\n\t    decrypted32[wordIx] = ntoh(decrypted32[wordIx] ^ init0);\n\t    decrypted32[wordIx + 1] = ntoh(decrypted32[wordIx + 1] ^ init1);\n\t    decrypted32[wordIx + 2] = ntoh(decrypted32[wordIx + 2] ^ init2);\n\t    decrypted32[wordIx + 3] = ntoh(decrypted32[wordIx + 3] ^ init3);\n\t\n\t    // setup the IV for the next round\n\t    init0 = encrypted0;\n\t    init1 = encrypted1;\n\t    init2 = encrypted2;\n\t    init3 = encrypted3;\n\t  }\n\t\n\t  return decrypted;\n\t};\n\t\n\texports.decrypt = decrypt;\n\t/**\n\t * The `Decrypter` class that manages decryption of AES\n\t * data through `AsyncStream` objects and the `decrypt`\n\t * function\n\t *\n\t * @param {Uint8Array} encrypted the encrypted bytes\n\t * @param {Uint32Array} key the bytes of the decryption key\n\t * @param {Uint32Array} initVector the initialization vector (IV) to\n\t * @param {Function} done the function to run when done\n\t * @class Decrypter\n\t */\n\t\n\tvar Decrypter = (function () {\n\t  function Decrypter(encrypted, key, initVector, done) {\n\t    _classCallCheck(this, Decrypter);\n\t\n\t    var step = Decrypter.STEP;\n\t    var encrypted32 = new Int32Array(encrypted.buffer);\n\t    var decrypted = new Uint8Array(encrypted.byteLength);\n\t    var i = 0;\n\t\n\t    this.asyncStream_ = new _asyncStream2['default']();\n\t\n\t    // split up the encryption job and do the individual chunks asynchronously\n\t    this.asyncStream_.push(this.decryptChunk_(encrypted32.subarray(i, i + step), key, initVector, decrypted));\n\t    for (i = step; i < encrypted32.length; i += step) {\n\t      initVector = new Uint32Array([ntoh(encrypted32[i - 4]), ntoh(encrypted32[i - 3]), ntoh(encrypted32[i - 2]), ntoh(encrypted32[i - 1])]);\n\t      this.asyncStream_.push(this.decryptChunk_(encrypted32.subarray(i, i + step), key, initVector, decrypted));\n\t    }\n\t    // invoke the done() callback when everything is finished\n\t    this.asyncStream_.push(function () {\n\t      // remove pkcs#7 padding from the decrypted bytes\n\t      done(null, (0, _pkcs7.unpad)(decrypted));\n\t    });\n\t  }\n\t\n\t  /**\n\t   * a getter for step the maximum number of bytes to process at one time\n\t   *\n\t   * @return {Number} the value of step 32000\n\t   */\n\t\n\t  _createClass(Decrypter, [{\n\t    key: 'decryptChunk_',\n\t\n\t    /**\n\t     * @private\n\t     */\n\t    value: function decryptChunk_(encrypted, key, initVector, decrypted) {\n\t      return function () {\n\t        var bytes = decrypt(encrypted, key, initVector);\n\t\n\t        decrypted.set(bytes, encrypted.byteOffset);\n\t      };\n\t    }\n\t  }], [{\n\t    key: 'STEP',\n\t    get: function get() {\n\t      // 4 * 8000;\n\t      return 32000;\n\t    }\n\t  }]);\n\t\n\t  return Decrypter;\n\t})();\n\t\n\texports.Decrypter = Decrypter;\n\texports['default'] = {\n\t  Decrypter: Decrypter,\n\t  decrypt: decrypt\n\t};\n\t},{\"./aes\":17,\"./async-stream\":18,\"pkcs7\":23}],20:[function(require,module,exports){\n\t/**\n\t * @file index.js\n\t *\n\t * Index module to easily import the primary components of AES-128\n\t * decryption. Like this:\n\t *\n\t * ```js\n\t * import {Decrypter, decrypt, AsyncStream} from 'aes-decrypter';\n\t * ```\n\t */\n\t'use strict';\n\t\n\tObject.defineProperty(exports, '__esModule', {\n\t  value: true\n\t});\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\t\n\tvar _decrypter = require('./decrypter');\n\t\n\tvar _asyncStream = require('./async-stream');\n\t\n\tvar _asyncStream2 = _interopRequireDefault(_asyncStream);\n\t\n\texports['default'] = {\n\t  decrypt: _decrypter.decrypt,\n\t  Decrypter: _decrypter.Decrypter,\n\t  AsyncStream: _asyncStream2['default']\n\t};\n\tmodule.exports = exports['default'];\n\t},{\"./async-stream\":18,\"./decrypter\":19}],21:[function(require,module,exports){\n\targuments[4][14][0].apply(exports,arguments)\n\t},{\"dup\":14}],22:[function(require,module,exports){\n\t/*\n\t * pkcs7.pad\n\t * https://github.com/brightcove/pkcs7\n\t *\n\t * Copyright (c) 2014 Brightcove\n\t * Licensed under the apache2 license.\n\t */\n\t\n\t'use strict';\n\t\n\tvar PADDING;\n\t\n\t/**\n\t * Returns a new Uint8Array that is padded with PKCS#7 padding.\n\t * @param plaintext {Uint8Array} the input bytes before encryption\n\t * @return {Uint8Array} the padded bytes\n\t * @see http://tools.ietf.org/html/rfc5652\n\t */\n\tmodule.exports = function pad(plaintext) {\n\t  var padding = PADDING[(plaintext.byteLength % 16) || 0],\n\t      result = new Uint8Array(plaintext.byteLength + padding.length);\n\t  result.set(plaintext);\n\t  result.set(padding, plaintext.byteLength);\n\t  return result;\n\t};\n\t\n\t// pre-define the padding values\n\tPADDING = [\n\t  [16, 16, 16, 16,\n\t   16, 16, 16, 16,\n\t   16, 16, 16, 16,\n\t   16, 16, 16, 16],\n\t\n\t  [15, 15, 15, 15,\n\t   15, 15, 15, 15,\n\t   15, 15, 15, 15,\n\t   15, 15, 15],\n\t\n\t  [14, 14, 14, 14,\n\t   14, 14, 14, 14,\n\t   14, 14, 14, 14,\n\t   14, 14],\n\t\n\t  [13, 13, 13, 13,\n\t   13, 13, 13, 13,\n\t   13, 13, 13, 13,\n\t   13],\n\t\n\t  [12, 12, 12, 12,\n\t   12, 12, 12, 12,\n\t   12, 12, 12, 12],\n\t\n\t  [11, 11, 11, 11,\n\t   11, 11, 11, 11,\n\t   11, 11, 11],\n\t\n\t  [10, 10, 10, 10,\n\t   10, 10, 10, 10,\n\t   10, 10],\n\t\n\t  [9, 9, 9, 9,\n\t   9, 9, 9, 9,\n\t   9],\n\t\n\t  [8, 8, 8, 8,\n\t   8, 8, 8, 8],\n\t\n\t  [7, 7, 7, 7,\n\t   7, 7, 7],\n\t\n\t  [6, 6, 6, 6,\n\t   6, 6],\n\t\n\t  [5, 5, 5, 5,\n\t   5],\n\t\n\t  [4, 4, 4, 4],\n\t\n\t  [3, 3, 3],\n\t\n\t  [2, 2],\n\t\n\t  [1]\n\t];\n\t\n\t},{}],23:[function(require,module,exports){\n\t/*\n\t * pkcs7\n\t * https://github.com/brightcove/pkcs7\n\t *\n\t * Copyright (c) 2014 Brightcove\n\t * Licensed under the apache2 license.\n\t */\n\t\n\t'use strict';\n\t\n\texports.pad = require('./pad.js');\n\texports.unpad = require('./unpad.js');\n\t\n\t},{\"./pad.js\":22,\"./unpad.js\":24}],24:[function(require,module,exports){\n\t/*\n\t * pkcs7.unpad\n\t * https://github.com/brightcove/pkcs7\n\t *\n\t * Copyright (c) 2014 Brightcove\n\t * Licensed under the apache2 license.\n\t */\n\t\n\t'use strict';\n\t\n\t/**\n\t * Returns the subarray of a Uint8Array without PKCS#7 padding.\n\t * @param padded {Uint8Array} unencrypted bytes that have been padded\n\t * @return {Uint8Array} the unpadded bytes\n\t * @see http://tools.ietf.org/html/rfc5652\n\t */\n\tmodule.exports = function unpad(padded) {\n\t  return padded.subarray(0, padded.byteLength - padded[padded.byteLength - 1]);\n\t};\n\t\n\t},{}],25:[function(require,module,exports){\n\t\n\t},{}],26:[function(require,module,exports){\n\t(function (global){\n\tvar topLevel = typeof global !== 'undefined' ? global :\n\t    typeof window !== 'undefined' ? window : {}\n\tvar minDoc = require('min-document');\n\t\n\tif (typeof document !== 'undefined') {\n\t    module.exports = document;\n\t} else {\n\t    var doccy = topLevel['__GLOBAL_DOCUMENT_CACHE@4'];\n\t\n\t    if (!doccy) {\n\t        doccy = topLevel['__GLOBAL_DOCUMENT_CACHE@4'] = minDoc;\n\t    }\n\t\n\t    module.exports = doccy;\n\t}\n\t\n\t}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n\t},{\"min-document\":25}],27:[function(require,module,exports){\n\t(function (global){\n\tif (typeof window !== \"undefined\") {\n\t    module.exports = window;\n\t} else if (typeof global !== \"undefined\") {\n\t    module.exports = global;\n\t} else if (typeof self !== \"undefined\"){\n\t    module.exports = self;\n\t} else {\n\t    module.exports = {};\n\t}\n\t\n\t}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n\t},{}],28:[function(require,module,exports){\n\t/** Used as the `TypeError` message for \"Functions\" methods. */\n\tvar FUNC_ERROR_TEXT = 'Expected a function';\n\t\n\t/* Native method references for those with the same name as other `lodash` methods. */\n\tvar nativeMax = Math.max;\n\t\n\t/**\n\t * Creates a function that invokes `func` with the `this` binding of the\n\t * created function and arguments from `start` and beyond provided as an array.\n\t *\n\t * **Note:** This method is based on the [rest parameter](https://developer.mozilla.org/Web/JavaScript/Reference/Functions/rest_parameters).\n\t *\n\t * @static\n\t * @memberOf _\n\t * @category Function\n\t * @param {Function} func The function to apply a rest parameter to.\n\t * @param {number} [start=func.length-1] The start position of the rest parameter.\n\t * @returns {Function} Returns the new function.\n\t * @example\n\t *\n\t * var say = _.restParam(function(what, names) {\n\t *   return what + ' ' + _.initial(names).join(', ') +\n\t *     (_.size(names) > 1 ? ', & ' : '') + _.last(names);\n\t * });\n\t *\n\t * say('hello', 'fred', 'barney', 'pebbles');\n\t * // => 'hello fred, barney, & pebbles'\n\t */\n\tfunction restParam(func, start) {\n\t  if (typeof func != 'function') {\n\t    throw new TypeError(FUNC_ERROR_TEXT);\n\t  }\n\t  start = nativeMax(start === undefined ? (func.length - 1) : (+start || 0), 0);\n\t  return function() {\n\t    var args = arguments,\n\t        index = -1,\n\t        length = nativeMax(args.length - start, 0),\n\t        rest = Array(length);\n\t\n\t    while (++index < length) {\n\t      rest[index] = args[start + index];\n\t    }\n\t    switch (start) {\n\t      case 0: return func.call(this, rest);\n\t      case 1: return func.call(this, args[0], rest);\n\t      case 2: return func.call(this, args[0], args[1], rest);\n\t    }\n\t    var otherArgs = Array(start + 1);\n\t    index = -1;\n\t    while (++index < start) {\n\t      otherArgs[index] = args[index];\n\t    }\n\t    otherArgs[start] = rest;\n\t    return func.apply(this, otherArgs);\n\t  };\n\t}\n\t\n\tmodule.exports = restParam;\n\t\n\t},{}],29:[function(require,module,exports){\n\t/**\n\t * Copies the values of `source` to `array`.\n\t *\n\t * @private\n\t * @param {Array} source The array to copy values from.\n\t * @param {Array} [array=[]] The array to copy values to.\n\t * @returns {Array} Returns `array`.\n\t */\n\tfunction arrayCopy(source, array) {\n\t  var index = -1,\n\t      length = source.length;\n\t\n\t  array || (array = Array(length));\n\t  while (++index < length) {\n\t    array[index] = source[index];\n\t  }\n\t  return array;\n\t}\n\t\n\tmodule.exports = arrayCopy;\n\t\n\t},{}],30:[function(require,module,exports){\n\t/**\n\t * A specialized version of `_.forEach` for arrays without support for callback\n\t * shorthands and `this` binding.\n\t *\n\t * @private\n\t * @param {Array} array The array to iterate over.\n\t * @param {Function} iteratee The function invoked per iteration.\n\t * @returns {Array} Returns `array`.\n\t */\n\tfunction arrayEach(array, iteratee) {\n\t  var index = -1,\n\t      length = array.length;\n\t\n\t  while (++index < length) {\n\t    if (iteratee(array[index], index, array) === false) {\n\t      break;\n\t    }\n\t  }\n\t  return array;\n\t}\n\t\n\tmodule.exports = arrayEach;\n\t\n\t},{}],31:[function(require,module,exports){\n\t/**\n\t * Copies properties of `source` to `object`.\n\t *\n\t * @private\n\t * @param {Object} source The object to copy properties from.\n\t * @param {Array} props The property names to copy.\n\t * @param {Object} [object={}] The object to copy properties to.\n\t * @returns {Object} Returns `object`.\n\t */\n\tfunction baseCopy(source, props, object) {\n\t  object || (object = {});\n\t\n\t  var index = -1,\n\t      length = props.length;\n\t\n\t  while (++index < length) {\n\t    var key = props[index];\n\t    object[key] = source[key];\n\t  }\n\t  return object;\n\t}\n\t\n\tmodule.exports = baseCopy;\n\t\n\t},{}],32:[function(require,module,exports){\n\tvar createBaseFor = require('./createBaseFor');\n\t\n\t/**\n\t * The base implementation of `baseForIn` and `baseForOwn` which iterates\n\t * over `object` properties returned by `keysFunc` invoking `iteratee` for\n\t * each property. Iteratee functions may exit iteration early by explicitly\n\t * returning `false`.\n\t *\n\t * @private\n\t * @param {Object} object The object to iterate over.\n\t * @param {Function} iteratee The function invoked per iteration.\n\t * @param {Function} keysFunc The function to get the keys of `object`.\n\t * @returns {Object} Returns `object`.\n\t */\n\tvar baseFor = createBaseFor();\n\t\n\tmodule.exports = baseFor;\n\t\n\t},{\"./createBaseFor\":39}],33:[function(require,module,exports){\n\tvar baseFor = require('./baseFor'),\n\t    keysIn = require('../object/keysIn');\n\t\n\t/**\n\t * The base implementation of `_.forIn` without support for callback\n\t * shorthands and `this` binding.\n\t *\n\t * @private\n\t * @param {Object} object The object to iterate over.\n\t * @param {Function} iteratee The function invoked per iteration.\n\t * @returns {Object} Returns `object`.\n\t */\n\tfunction baseForIn(object, iteratee) {\n\t  return baseFor(object, iteratee, keysIn);\n\t}\n\t\n\tmodule.exports = baseForIn;\n\t\n\t},{\"../object/keysIn\":60,\"./baseFor\":32}],34:[function(require,module,exports){\n\tvar arrayEach = require('./arrayEach'),\n\t    baseMergeDeep = require('./baseMergeDeep'),\n\t    isArray = require('../lang/isArray'),\n\t    isArrayLike = require('./isArrayLike'),\n\t    isObject = require('../lang/isObject'),\n\t    isObjectLike = require('./isObjectLike'),\n\t    isTypedArray = require('../lang/isTypedArray'),\n\t    keys = require('../object/keys');\n\t\n\t/**\n\t * The base implementation of `_.merge` without support for argument juggling,\n\t * multiple sources, and `this` binding `customizer` functions.\n\t *\n\t * @private\n\t * @param {Object} object The destination object.\n\t * @param {Object} source The source object.\n\t * @param {Function} [customizer] The function to customize merged values.\n\t * @param {Array} [stackA=[]] Tracks traversed source objects.\n\t * @param {Array} [stackB=[]] Associates values with source counterparts.\n\t * @returns {Object} Returns `object`.\n\t */\n\tfunction baseMerge(object, source, customizer, stackA, stackB) {\n\t  if (!isObject(object)) {\n\t    return object;\n\t  }\n\t  var isSrcArr = isArrayLike(source) && (isArray(source) || isTypedArray(source)),\n\t      props = isSrcArr ? undefined : keys(source);\n\t\n\t  arrayEach(props || source, function(srcValue, key) {\n\t    if (props) {\n\t      key = srcValue;\n\t      srcValue = source[key];\n\t    }\n\t    if (isObjectLike(srcValue)) {\n\t      stackA || (stackA = []);\n\t      stackB || (stackB = []);\n\t      baseMergeDeep(object, source, key, baseMerge, customizer, stackA, stackB);\n\t    }\n\t    else {\n\t      var value = object[key],\n\t          result = customizer ? customizer(value, srcValue, key, object, source) : undefined,\n\t          isCommon = result === undefined;\n\t\n\t      if (isCommon) {\n\t        result = srcValue;\n\t      }\n\t      if ((result !== undefined || (isSrcArr && !(key in object))) &&\n\t          (isCommon || (result === result ? (result !== value) : (value === value)))) {\n\t        object[key] = result;\n\t      }\n\t    }\n\t  });\n\t  return object;\n\t}\n\t\n\tmodule.exports = baseMerge;\n\t\n\t},{\"../lang/isArray\":51,\"../lang/isObject\":54,\"../lang/isTypedArray\":57,\"../object/keys\":59,\"./arrayEach\":30,\"./baseMergeDeep\":35,\"./isArrayLike\":42,\"./isObjectLike\":47}],35:[function(require,module,exports){\n\tvar arrayCopy = require('./arrayCopy'),\n\t    isArguments = require('../lang/isArguments'),\n\t    isArray = require('../lang/isArray'),\n\t    isArrayLike = require('./isArrayLike'),\n\t    isPlainObject = require('../lang/isPlainObject'),\n\t    isTypedArray = require('../lang/isTypedArray'),\n\t    toPlainObject = require('../lang/toPlainObject');\n\t\n\t/**\n\t * A specialized version of `baseMerge` for arrays and objects which performs\n\t * deep merges and tracks traversed objects enabling objects with circular\n\t * references to be merged.\n\t *\n\t * @private\n\t * @param {Object} object The destination object.\n\t * @param {Object} source The source object.\n\t * @param {string} key The key of the value to merge.\n\t * @param {Function} mergeFunc The function to merge values.\n\t * @param {Function} [customizer] The function to customize merged values.\n\t * @param {Array} [stackA=[]] Tracks traversed source objects.\n\t * @param {Array} [stackB=[]] Associates values with source counterparts.\n\t * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n\t */\n\tfunction baseMergeDeep(object, source, key, mergeFunc, customizer, stackA, stackB) {\n\t  var length = stackA.length,\n\t      srcValue = source[key];\n\t\n\t  while (length--) {\n\t    if (stackA[length] == srcValue) {\n\t      object[key] = stackB[length];\n\t      return;\n\t    }\n\t  }\n\t  var value = object[key],\n\t      result = customizer ? customizer(value, srcValue, key, object, source) : undefined,\n\t      isCommon = result === undefined;\n\t\n\t  if (isCommon) {\n\t    result = srcValue;\n\t    if (isArrayLike(srcValue) && (isArray(srcValue) || isTypedArray(srcValue))) {\n\t      result = isArray(value)\n\t        ? value\n\t        : (isArrayLike(value) ? arrayCopy(value) : []);\n\t    }\n\t    else if (isPlainObject(srcValue) || isArguments(srcValue)) {\n\t      result = isArguments(value)\n\t        ? toPlainObject(value)\n\t        : (isPlainObject(value) ? value : {});\n\t    }\n\t    else {\n\t      isCommon = false;\n\t    }\n\t  }\n\t  // Add the source value to the stack of traversed objects and associate\n\t  // it with its merged value.\n\t  stackA.push(srcValue);\n\t  stackB.push(result);\n\t\n\t  if (isCommon) {\n\t    // Recursively merge objects and arrays (susceptible to call stack limits).\n\t    object[key] = mergeFunc(result, srcValue, customizer, stackA, stackB);\n\t  } else if (result === result ? (result !== value) : (value === value)) {\n\t    object[key] = result;\n\t  }\n\t}\n\t\n\tmodule.exports = baseMergeDeep;\n\t\n\t},{\"../lang/isArguments\":50,\"../lang/isArray\":51,\"../lang/isPlainObject\":55,\"../lang/isTypedArray\":57,\"../lang/toPlainObject\":58,\"./arrayCopy\":29,\"./isArrayLike\":42}],36:[function(require,module,exports){\n\tvar toObject = require('./toObject');\n\t\n\t/**\n\t * The base implementation of `_.property` without support for deep paths.\n\t *\n\t * @private\n\t * @param {string} key The key of the property to get.\n\t * @returns {Function} Returns the new function.\n\t */\n\tfunction baseProperty(key) {\n\t  return function(object) {\n\t    return object == null ? undefined : toObject(object)[key];\n\t  };\n\t}\n\t\n\tmodule.exports = baseProperty;\n\t\n\t},{\"./toObject\":49}],37:[function(require,module,exports){\n\tvar identity = require('../utility/identity');\n\t\n\t/**\n\t * A specialized version of `baseCallback` which only supports `this` binding\n\t * and specifying the number of arguments to provide to `func`.\n\t *\n\t * @private\n\t * @param {Function} func The function to bind.\n\t * @param {*} thisArg The `this` binding of `func`.\n\t * @param {number} [argCount] The number of arguments to provide to `func`.\n\t * @returns {Function} Returns the callback.\n\t */\n\tfunction bindCallback(func, thisArg, argCount) {\n\t  if (typeof func != 'function') {\n\t    return identity;\n\t  }\n\t  if (thisArg === undefined) {\n\t    return func;\n\t  }\n\t  switch (argCount) {\n\t    case 1: return function(value) {\n\t      return func.call(thisArg, value);\n\t    };\n\t    case 3: return function(value, index, collection) {\n\t      return func.call(thisArg, value, index, collection);\n\t    };\n\t    case 4: return function(accumulator, value, index, collection) {\n\t      return func.call(thisArg, accumulator, value, index, collection);\n\t    };\n\t    case 5: return function(value, other, key, object, source) {\n\t      return func.call(thisArg, value, other, key, object, source);\n\t    };\n\t  }\n\t  return function() {\n\t    return func.apply(thisArg, arguments);\n\t  };\n\t}\n\t\n\tmodule.exports = bindCallback;\n\t\n\t},{\"../utility/identity\":63}],38:[function(require,module,exports){\n\tvar bindCallback = require('./bindCallback'),\n\t    isIterateeCall = require('./isIterateeCall'),\n\t    restParam = require('../function/restParam');\n\t\n\t/**\n\t * Creates a `_.assign`, `_.defaults`, or `_.merge` function.\n\t *\n\t * @private\n\t * @param {Function} assigner The function to assign values.\n\t * @returns {Function} Returns the new assigner function.\n\t */\n\tfunction createAssigner(assigner) {\n\t  return restParam(function(object, sources) {\n\t    var index = -1,\n\t        length = object == null ? 0 : sources.length,\n\t        customizer = length > 2 ? sources[length - 2] : undefined,\n\t        guard = length > 2 ? sources[2] : undefined,\n\t        thisArg = length > 1 ? sources[length - 1] : undefined;\n\t\n\t    if (typeof customizer == 'function') {\n\t      customizer = bindCallback(customizer, thisArg, 5);\n\t      length -= 2;\n\t    } else {\n\t      customizer = typeof thisArg == 'function' ? thisArg : undefined;\n\t      length -= (customizer ? 1 : 0);\n\t    }\n\t    if (guard && isIterateeCall(sources[0], sources[1], guard)) {\n\t      customizer = length < 3 ? undefined : customizer;\n\t      length = 1;\n\t    }\n\t    while (++index < length) {\n\t      var source = sources[index];\n\t      if (source) {\n\t        assigner(object, source, customizer);\n\t      }\n\t    }\n\t    return object;\n\t  });\n\t}\n\t\n\tmodule.exports = createAssigner;\n\t\n\t},{\"../function/restParam\":28,\"./bindCallback\":37,\"./isIterateeCall\":45}],39:[function(require,module,exports){\n\tvar toObject = require('./toObject');\n\t\n\t/**\n\t * Creates a base function for `_.forIn` or `_.forInRight`.\n\t *\n\t * @private\n\t * @param {boolean} [fromRight] Specify iterating from right to left.\n\t * @returns {Function} Returns the new base function.\n\t */\n\tfunction createBaseFor(fromRight) {\n\t  return function(object, iteratee, keysFunc) {\n\t    var iterable = toObject(object),\n\t        props = keysFunc(object),\n\t        length = props.length,\n\t        index = fromRight ? length : -1;\n\t\n\t    while ((fromRight ? index-- : ++index < length)) {\n\t      var key = props[index];\n\t      if (iteratee(iterable[key], key, iterable) === false) {\n\t        break;\n\t      }\n\t    }\n\t    return object;\n\t  };\n\t}\n\t\n\tmodule.exports = createBaseFor;\n\t\n\t},{\"./toObject\":49}],40:[function(require,module,exports){\n\tvar baseProperty = require('./baseProperty');\n\t\n\t/**\n\t * Gets the \"length\" property value of `object`.\n\t *\n\t * **Note:** This function is used to avoid a [JIT bug](https://bugs.webkit.org/show_bug.cgi?id=142792)\n\t * that affects Safari on at least iOS 8.1-8.3 ARM64.\n\t *\n\t * @private\n\t * @param {Object} object The object to query.\n\t * @returns {*} Returns the \"length\" value.\n\t */\n\tvar getLength = baseProperty('length');\n\t\n\tmodule.exports = getLength;\n\t\n\t},{\"./baseProperty\":36}],41:[function(require,module,exports){\n\tvar isNative = require('../lang/isNative');\n\t\n\t/**\n\t * Gets the native function at `key` of `object`.\n\t *\n\t * @private\n\t * @param {Object} object The object to query.\n\t * @param {string} key The key of the method to get.\n\t * @returns {*} Returns the function if it's native, else `undefined`.\n\t */\n\tfunction getNative(object, key) {\n\t  var value = object == null ? undefined : object[key];\n\t  return isNative(value) ? value : undefined;\n\t}\n\t\n\tmodule.exports = getNative;\n\t\n\t},{\"../lang/isNative\":53}],42:[function(require,module,exports){\n\tvar getLength = require('./getLength'),\n\t    isLength = require('./isLength');\n\t\n\t/**\n\t * Checks if `value` is array-like.\n\t *\n\t * @private\n\t * @param {*} value The value to check.\n\t * @returns {boolean} Returns `true` if `value` is array-like, else `false`.\n\t */\n\tfunction isArrayLike(value) {\n\t  return value != null && isLength(getLength(value));\n\t}\n\t\n\tmodule.exports = isArrayLike;\n\t\n\t},{\"./getLength\":40,\"./isLength\":46}],43:[function(require,module,exports){\n\t/**\n\t * Checks if `value` is a host object in IE < 9.\n\t *\n\t * @private\n\t * @param {*} value The value to check.\n\t * @returns {boolean} Returns `true` if `value` is a host object, else `false`.\n\t */\n\tvar isHostObject = (function() {\n\t  try {\n\t    Object({ 'toString': 0 } + '');\n\t  } catch(e) {\n\t    return function() { return false; };\n\t  }\n\t  return function(value) {\n\t    // IE < 9 presents many host objects as `Object` objects that can coerce\n\t    // to strings despite having improperly defined `toString` methods.\n\t    return typeof value.toString != 'function' && typeof (value + '') == 'string';\n\t  };\n\t}());\n\t\n\tmodule.exports = isHostObject;\n\t\n\t},{}],44:[function(require,module,exports){\n\t/** Used to detect unsigned integer values. */\n\tvar reIsUint = /^\\d+$/;\n\t\n\t/**\n\t * Used as the [maximum length](http://ecma-international.org/ecma-262/6.0/#sec-number.max_safe_integer)\n\t * of an array-like value.\n\t */\n\tvar MAX_SAFE_INTEGER = 9007199254740991;\n\t\n\t/**\n\t * Checks if `value` is a valid array-like index.\n\t *\n\t * @private\n\t * @param {*} value The value to check.\n\t * @param {number} [length=MAX_SAFE_INTEGER] The upper bounds of a valid index.\n\t * @returns {boolean} Returns `true` if `value` is a valid index, else `false`.\n\t */\n\tfunction isIndex(value, length) {\n\t  value = (typeof value == 'number' || reIsUint.test(value)) ? +value : -1;\n\t  length = length == null ? MAX_SAFE_INTEGER : length;\n\t  return value > -1 && value % 1 == 0 && value < length;\n\t}\n\t\n\tmodule.exports = isIndex;\n\t\n\t},{}],45:[function(require,module,exports){\n\tvar isArrayLike = require('./isArrayLike'),\n\t    isIndex = require('./isIndex'),\n\t    isObject = require('../lang/isObject');\n\t\n\t/**\n\t * Checks if the provided arguments are from an iteratee call.\n\t *\n\t * @private\n\t * @param {*} value The potential iteratee value argument.\n\t * @param {*} index The potential iteratee index or key argument.\n\t * @param {*} object The potential iteratee object argument.\n\t * @returns {boolean} Returns `true` if the arguments are from an iteratee call, else `false`.\n\t */\n\tfunction isIterateeCall(value, index, object) {\n\t  if (!isObject(object)) {\n\t    return false;\n\t  }\n\t  var type = typeof index;\n\t  if (type == 'number'\n\t      ? (isArrayLike(object) && isIndex(index, object.length))\n\t      : (type == 'string' && index in object)) {\n\t    var other = object[index];\n\t    return value === value ? (value === other) : (other !== other);\n\t  }\n\t  return false;\n\t}\n\t\n\tmodule.exports = isIterateeCall;\n\t\n\t},{\"../lang/isObject\":54,\"./isArrayLike\":42,\"./isIndex\":44}],46:[function(require,module,exports){\n\t/**\n\t * Used as the [maximum length](http://ecma-international.org/ecma-262/6.0/#sec-number.max_safe_integer)\n\t * of an array-like value.\n\t */\n\tvar MAX_SAFE_INTEGER = 9007199254740991;\n\t\n\t/**\n\t * Checks if `value` is a valid array-like length.\n\t *\n\t * **Note:** This function is based on [`ToLength`](http://ecma-international.org/ecma-262/6.0/#sec-tolength).\n\t *\n\t * @private\n\t * @param {*} value The value to check.\n\t * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.\n\t */\n\tfunction isLength(value) {\n\t  return typeof value == 'number' && value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;\n\t}\n\t\n\tmodule.exports = isLength;\n\t\n\t},{}],47:[function(require,module,exports){\n\t/**\n\t * Checks if `value` is object-like.\n\t *\n\t * @private\n\t * @param {*} value The value to check.\n\t * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n\t */\n\tfunction isObjectLike(value) {\n\t  return !!value && typeof value == 'object';\n\t}\n\t\n\tmodule.exports = isObjectLike;\n\t\n\t},{}],48:[function(require,module,exports){\n\tvar isArguments = require('../lang/isArguments'),\n\t    isArray = require('../lang/isArray'),\n\t    isIndex = require('./isIndex'),\n\t    isLength = require('./isLength'),\n\t    isString = require('../lang/isString'),\n\t    keysIn = require('../object/keysIn');\n\t\n\t/** Used for native method references. */\n\tvar objectProto = Object.prototype;\n\t\n\t/** Used to check objects for own properties. */\n\tvar hasOwnProperty = objectProto.hasOwnProperty;\n\t\n\t/**\n\t * A fallback implementation of `Object.keys` which creates an array of the\n\t * own enumerable property names of `object`.\n\t *\n\t * @private\n\t * @param {Object} object The object to query.\n\t * @returns {Array} Returns the array of property names.\n\t */\n\tfunction shimKeys(object) {\n\t  var props = keysIn(object),\n\t      propsLength = props.length,\n\t      length = propsLength && object.length;\n\t\n\t  var allowIndexes = !!length && isLength(length) &&\n\t    (isArray(object) || isArguments(object) || isString(object));\n\t\n\t  var index = -1,\n\t      result = [];\n\t\n\t  while (++index < propsLength) {\n\t    var key = props[index];\n\t    if ((allowIndexes && isIndex(key, length)) || hasOwnProperty.call(object, key)) {\n\t      result.push(key);\n\t    }\n\t  }\n\t  return result;\n\t}\n\t\n\tmodule.exports = shimKeys;\n\t\n\t},{\"../lang/isArguments\":50,\"../lang/isArray\":51,\"../lang/isString\":56,\"../object/keysIn\":60,\"./isIndex\":44,\"./isLength\":46}],49:[function(require,module,exports){\n\tvar isObject = require('../lang/isObject'),\n\t    isString = require('../lang/isString'),\n\t    support = require('../support');\n\t\n\t/**\n\t * Converts `value` to an object if it's not one.\n\t *\n\t * @private\n\t * @param {*} value The value to process.\n\t * @returns {Object} Returns the object.\n\t */\n\tfunction toObject(value) {\n\t  if (support.unindexedChars && isString(value)) {\n\t    var index = -1,\n\t        length = value.length,\n\t        result = Object(value);\n\t\n\t    while (++index < length) {\n\t      result[index] = value.charAt(index);\n\t    }\n\t    return result;\n\t  }\n\t  return isObject(value) ? value : Object(value);\n\t}\n\t\n\tmodule.exports = toObject;\n\t\n\t},{\"../lang/isObject\":54,\"../lang/isString\":56,\"../support\":62}],50:[function(require,module,exports){\n\tvar isArrayLike = require('../internal/isArrayLike'),\n\t    isObjectLike = require('../internal/isObjectLike');\n\t\n\t/** Used for native method references. */\n\tvar objectProto = Object.prototype;\n\t\n\t/** Used to check objects for own properties. */\n\tvar hasOwnProperty = objectProto.hasOwnProperty;\n\t\n\t/** Native method references. */\n\tvar propertyIsEnumerable = objectProto.propertyIsEnumerable;\n\t\n\t/**\n\t * Checks if `value` is classified as an `arguments` object.\n\t *\n\t * @static\n\t * @memberOf _\n\t * @category Lang\n\t * @param {*} value The value to check.\n\t * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n\t * @example\n\t *\n\t * _.isArguments(function() { return arguments; }());\n\t * // => true\n\t *\n\t * _.isArguments([1, 2, 3]);\n\t * // => false\n\t */\n\tfunction isArguments(value) {\n\t  return isObjectLike(value) && isArrayLike(value) &&\n\t    hasOwnProperty.call(value, 'callee') && !propertyIsEnumerable.call(value, 'callee');\n\t}\n\t\n\tmodule.exports = isArguments;\n\t\n\t},{\"../internal/isArrayLike\":42,\"../internal/isObjectLike\":47}],51:[function(require,module,exports){\n\tvar getNative = require('../internal/getNative'),\n\t    isLength = require('../internal/isLength'),\n\t    isObjectLike = require('../internal/isObjectLike');\n\t\n\t/** `Object#toString` result references. */\n\tvar arrayTag = '[object Array]';\n\t\n\t/** Used for native method references. */\n\tvar objectProto = Object.prototype;\n\t\n\t/**\n\t * Used to resolve the [`toStringTag`](http://ecma-international.org/ecma-262/6.0/#sec-object.prototype.tostring)\n\t * of values.\n\t */\n\tvar objToString = objectProto.toString;\n\t\n\t/* Native method references for those with the same name as other `lodash` methods. */\n\tvar nativeIsArray = getNative(Array, 'isArray');\n\t\n\t/**\n\t * Checks if `value` is classified as an `Array` object.\n\t *\n\t * @static\n\t * @memberOf _\n\t * @category Lang\n\t * @param {*} value The value to check.\n\t * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n\t * @example\n\t *\n\t * _.isArray([1, 2, 3]);\n\t * // => true\n\t *\n\t * _.isArray(function() { return arguments; }());\n\t * // => false\n\t */\n\tvar isArray = nativeIsArray || function(value) {\n\t  return isObjectLike(value) && isLength(value.length) && objToString.call(value) == arrayTag;\n\t};\n\t\n\tmodule.exports = isArray;\n\t\n\t},{\"../internal/getNative\":41,\"../internal/isLength\":46,\"../internal/isObjectLike\":47}],52:[function(require,module,exports){\n\tvar isObject = require('./isObject');\n\t\n\t/** `Object#toString` result references. */\n\tvar funcTag = '[object Function]';\n\t\n\t/** Used for native method references. */\n\tvar objectProto = Object.prototype;\n\t\n\t/**\n\t * Used to resolve the [`toStringTag`](http://ecma-international.org/ecma-262/6.0/#sec-object.prototype.tostring)\n\t * of values.\n\t */\n\tvar objToString = objectProto.toString;\n\t\n\t/**\n\t * Checks if `value` is classified as a `Function` object.\n\t *\n\t * @static\n\t * @memberOf _\n\t * @category Lang\n\t * @param {*} value The value to check.\n\t * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n\t * @example\n\t *\n\t * _.isFunction(_);\n\t * // => true\n\t *\n\t * _.isFunction(/abc/);\n\t * // => false\n\t */\n\tfunction isFunction(value) {\n\t  // The use of `Object#toString` avoids issues with the `typeof` operator\n\t  // in older versions of Chrome and Safari which return 'function' for regexes\n\t  // and Safari 8 which returns 'object' for typed array constructors.\n\t  return isObject(value) && objToString.call(value) == funcTag;\n\t}\n\t\n\tmodule.exports = isFunction;\n\t\n\t},{\"./isObject\":54}],53:[function(require,module,exports){\n\tvar isFunction = require('./isFunction'),\n\t    isHostObject = require('../internal/isHostObject'),\n\t    isObjectLike = require('../internal/isObjectLike');\n\t\n\t/** Used to detect host constructors (Safari > 5). */\n\tvar reIsHostCtor = /^\\[object .+?Constructor\\]$/;\n\t\n\t/** Used for native method references. */\n\tvar objectProto = Object.prototype;\n\t\n\t/** Used to resolve the decompiled source of functions. */\n\tvar fnToString = Function.prototype.toString;\n\t\n\t/** Used to check objects for own properties. */\n\tvar hasOwnProperty = objectProto.hasOwnProperty;\n\t\n\t/** Used to detect if a method is native. */\n\tvar reIsNative = RegExp('^' +\n\t  fnToString.call(hasOwnProperty).replace(/[\\\\^$.*+?()[\\]{}|]/g, '\\\\$&')\n\t  .replace(/hasOwnProperty|(function).*?(?=\\\\\\()| for .+?(?=\\\\\\])/g, '$1.*?') + '$'\n\t);\n\t\n\t/**\n\t * Checks if `value` is a native function.\n\t *\n\t * @static\n\t * @memberOf _\n\t * @category Lang\n\t * @param {*} value The value to check.\n\t * @returns {boolean} Returns `true` if `value` is a native function, else `false`.\n\t * @example\n\t *\n\t * _.isNative(Array.prototype.push);\n\t * // => true\n\t *\n\t * _.isNative(_);\n\t * // => false\n\t */\n\tfunction isNative(value) {\n\t  if (value == null) {\n\t    return false;\n\t  }\n\t  if (isFunction(value)) {\n\t    return reIsNative.test(fnToString.call(value));\n\t  }\n\t  return isObjectLike(value) && (isHostObject(value) ? reIsNative : reIsHostCtor).test(value);\n\t}\n\t\n\tmodule.exports = isNative;\n\t\n\t},{\"../internal/isHostObject\":43,\"../internal/isObjectLike\":47,\"./isFunction\":52}],54:[function(require,module,exports){\n\t/**\n\t * Checks if `value` is the [language type](https://es5.github.io/#x8) of `Object`.\n\t * (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n\t *\n\t * @static\n\t * @memberOf _\n\t * @category Lang\n\t * @param {*} value The value to check.\n\t * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n\t * @example\n\t *\n\t * _.isObject({});\n\t * // => true\n\t *\n\t * _.isObject([1, 2, 3]);\n\t * // => true\n\t *\n\t * _.isObject(1);\n\t * // => false\n\t */\n\tfunction isObject(value) {\n\t  // Avoid a V8 JIT bug in Chrome 19-20.\n\t  // See https://code.google.com/p/v8/issues/detail?id=2291 for more details.\n\t  var type = typeof value;\n\t  return !!value && (type == 'object' || type == 'function');\n\t}\n\t\n\tmodule.exports = isObject;\n\t\n\t},{}],55:[function(require,module,exports){\n\tvar baseForIn = require('../internal/baseForIn'),\n\t    isArguments = require('./isArguments'),\n\t    isHostObject = require('../internal/isHostObject'),\n\t    isObjectLike = require('../internal/isObjectLike'),\n\t    support = require('../support');\n\t\n\t/** `Object#toString` result references. */\n\tvar objectTag = '[object Object]';\n\t\n\t/** Used for native method references. */\n\tvar objectProto = Object.prototype;\n\t\n\t/** Used to check objects for own properties. */\n\tvar hasOwnProperty = objectProto.hasOwnProperty;\n\t\n\t/**\n\t * Used to resolve the [`toStringTag`](http://ecma-international.org/ecma-262/6.0/#sec-object.prototype.tostring)\n\t * of values.\n\t */\n\tvar objToString = objectProto.toString;\n\t\n\t/**\n\t * Checks if `value` is a plain object, that is, an object created by the\n\t * `Object` constructor or one with a `[[Prototype]]` of `null`.\n\t *\n\t * **Note:** This method assumes objects created by the `Object` constructor\n\t * have no inherited enumerable properties.\n\t *\n\t * @static\n\t * @memberOf _\n\t * @category Lang\n\t * @param {*} value The value to check.\n\t * @returns {boolean} Returns `true` if `value` is a plain object, else `false`.\n\t * @example\n\t *\n\t * function Foo() {\n\t *   this.a = 1;\n\t * }\n\t *\n\t * _.isPlainObject(new Foo);\n\t * // => false\n\t *\n\t * _.isPlainObject([1, 2, 3]);\n\t * // => false\n\t *\n\t * _.isPlainObject({ 'x': 0, 'y': 0 });\n\t * // => true\n\t *\n\t * _.isPlainObject(Object.create(null));\n\t * // => true\n\t */\n\tfunction isPlainObject(value) {\n\t  var Ctor;\n\t\n\t  // Exit early for non `Object` objects.\n\t  if (!(isObjectLike(value) && objToString.call(value) == objectTag && !isHostObject(value) && !isArguments(value)) ||\n\t      (!hasOwnProperty.call(value, 'constructor') && (Ctor = value.constructor, typeof Ctor == 'function' && !(Ctor instanceof Ctor)))) {\n\t    return false;\n\t  }\n\t  // IE < 9 iterates inherited properties before own properties. If the first\n\t  // iterated property is an object's own property then there are no inherited\n\t  // enumerable properties.\n\t  var result;\n\t  if (support.ownLast) {\n\t    baseForIn(value, function(subValue, key, object) {\n\t      result = hasOwnProperty.call(object, key);\n\t      return false;\n\t    });\n\t    return result !== false;\n\t  }\n\t  // In most environments an object's own properties are iterated before\n\t  // its inherited properties. If the last iterated property is an object's\n\t  // own property then there are no inherited enumerable properties.\n\t  baseForIn(value, function(subValue, key) {\n\t    result = key;\n\t  });\n\t  return result === undefined || hasOwnProperty.call(value, result);\n\t}\n\t\n\tmodule.exports = isPlainObject;\n\t\n\t},{\"../internal/baseForIn\":33,\"../internal/isHostObject\":43,\"../internal/isObjectLike\":47,\"../support\":62,\"./isArguments\":50}],56:[function(require,module,exports){\n\tvar isObjectLike = require('../internal/isObjectLike');\n\t\n\t/** `Object#toString` result references. */\n\tvar stringTag = '[object String]';\n\t\n\t/** Used for native method references. */\n\tvar objectProto = Object.prototype;\n\t\n\t/**\n\t * Used to resolve the [`toStringTag`](http://ecma-international.org/ecma-262/6.0/#sec-object.prototype.tostring)\n\t * of values.\n\t */\n\tvar objToString = objectProto.toString;\n\t\n\t/**\n\t * Checks if `value` is classified as a `String` primitive or object.\n\t *\n\t * @static\n\t * @memberOf _\n\t * @category Lang\n\t * @param {*} value The value to check.\n\t * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n\t * @example\n\t *\n\t * _.isString('abc');\n\t * // => true\n\t *\n\t * _.isString(1);\n\t * // => false\n\t */\n\tfunction isString(value) {\n\t  return typeof value == 'string' || (isObjectLike(value) && objToString.call(value) == stringTag);\n\t}\n\t\n\tmodule.exports = isString;\n\t\n\t},{\"../internal/isObjectLike\":47}],57:[function(require,module,exports){\n\tvar isLength = require('../internal/isLength'),\n\t    isObjectLike = require('../internal/isObjectLike');\n\t\n\t/** `Object#toString` result references. */\n\tvar argsTag = '[object Arguments]',\n\t    arrayTag = '[object Array]',\n\t    boolTag = '[object Boolean]',\n\t    dateTag = '[object Date]',\n\t    errorTag = '[object Error]',\n\t    funcTag = '[object Function]',\n\t    mapTag = '[object Map]',\n\t    numberTag = '[object Number]',\n\t    objectTag = '[object Object]',\n\t    regexpTag = '[object RegExp]',\n\t    setTag = '[object Set]',\n\t    stringTag = '[object String]',\n\t    weakMapTag = '[object WeakMap]';\n\t\n\tvar arrayBufferTag = '[object ArrayBuffer]',\n\t    float32Tag = '[object Float32Array]',\n\t    float64Tag = '[object Float64Array]',\n\t    int8Tag = '[object Int8Array]',\n\t    int16Tag = '[object Int16Array]',\n\t    int32Tag = '[object Int32Array]',\n\t    uint8Tag = '[object Uint8Array]',\n\t    uint8ClampedTag = '[object Uint8ClampedArray]',\n\t    uint16Tag = '[object Uint16Array]',\n\t    uint32Tag = '[object Uint32Array]';\n\t\n\t/** Used to identify `toStringTag` values of typed arrays. */\n\tvar typedArrayTags = {};\n\ttypedArrayTags[float32Tag] = typedArrayTags[float64Tag] =\n\ttypedArrayTags[int8Tag] = typedArrayTags[int16Tag] =\n\ttypedArrayTags[int32Tag] = typedArrayTags[uint8Tag] =\n\ttypedArrayTags[uint8ClampedTag] = typedArrayTags[uint16Tag] =\n\ttypedArrayTags[uint32Tag] = true;\n\ttypedArrayTags[argsTag] = typedArrayTags[arrayTag] =\n\ttypedArrayTags[arrayBufferTag] = typedArrayTags[boolTag] =\n\ttypedArrayTags[dateTag] = typedArrayTags[errorTag] =\n\ttypedArrayTags[funcTag] = typedArrayTags[mapTag] =\n\ttypedArrayTags[numberTag] = typedArrayTags[objectTag] =\n\ttypedArrayTags[regexpTag] = typedArrayTags[setTag] =\n\ttypedArrayTags[stringTag] = typedArrayTags[weakMapTag] = false;\n\t\n\t/** Used for native method references. */\n\tvar objectProto = Object.prototype;\n\t\n\t/**\n\t * Used to resolve the [`toStringTag`](http://ecma-international.org/ecma-262/6.0/#sec-object.prototype.tostring)\n\t * of values.\n\t */\n\tvar objToString = objectProto.toString;\n\t\n\t/**\n\t * Checks if `value` is classified as a typed array.\n\t *\n\t * @static\n\t * @memberOf _\n\t * @category Lang\n\t * @param {*} value The value to check.\n\t * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n\t * @example\n\t *\n\t * _.isTypedArray(new Uint8Array);\n\t * // => true\n\t *\n\t * _.isTypedArray([]);\n\t * // => false\n\t */\n\tfunction isTypedArray(value) {\n\t  return isObjectLike(value) && isLength(value.length) && !!typedArrayTags[objToString.call(value)];\n\t}\n\t\n\tmodule.exports = isTypedArray;\n\t\n\t},{\"../internal/isLength\":46,\"../internal/isObjectLike\":47}],58:[function(require,module,exports){\n\tvar baseCopy = require('../internal/baseCopy'),\n\t    keysIn = require('../object/keysIn');\n\t\n\t/**\n\t * Converts `value` to a plain object flattening inherited enumerable\n\t * properties of `value` to own properties of the plain object.\n\t *\n\t * @static\n\t * @memberOf _\n\t * @category Lang\n\t * @param {*} value The value to convert.\n\t * @returns {Object} Returns the converted plain object.\n\t * @example\n\t *\n\t * function Foo() {\n\t *   this.b = 2;\n\t * }\n\t *\n\t * Foo.prototype.c = 3;\n\t *\n\t * _.assign({ 'a': 1 }, new Foo);\n\t * // => { 'a': 1, 'b': 2 }\n\t *\n\t * _.assign({ 'a': 1 }, _.toPlainObject(new Foo));\n\t * // => { 'a': 1, 'b': 2, 'c': 3 }\n\t */\n\tfunction toPlainObject(value) {\n\t  return baseCopy(value, keysIn(value));\n\t}\n\t\n\tmodule.exports = toPlainObject;\n\t\n\t},{\"../internal/baseCopy\":31,\"../object/keysIn\":60}],59:[function(require,module,exports){\n\tvar getNative = require('../internal/getNative'),\n\t    isArrayLike = require('../internal/isArrayLike'),\n\t    isObject = require('../lang/isObject'),\n\t    shimKeys = require('../internal/shimKeys'),\n\t    support = require('../support');\n\t\n\t/* Native method references for those with the same name as other `lodash` methods. */\n\tvar nativeKeys = getNative(Object, 'keys');\n\t\n\t/**\n\t * Creates an array of the own enumerable property names of `object`.\n\t *\n\t * **Note:** Non-object values are coerced to objects. See the\n\t * [ES spec](http://ecma-international.org/ecma-262/6.0/#sec-object.keys)\n\t * for more details.\n\t *\n\t * @static\n\t * @memberOf _\n\t * @category Object\n\t * @param {Object} object The object to query.\n\t * @returns {Array} Returns the array of property names.\n\t * @example\n\t *\n\t * function Foo() {\n\t *   this.a = 1;\n\t *   this.b = 2;\n\t * }\n\t *\n\t * Foo.prototype.c = 3;\n\t *\n\t * _.keys(new Foo);\n\t * // => ['a', 'b'] (iteration order is not guaranteed)\n\t *\n\t * _.keys('hi');\n\t * // => ['0', '1']\n\t */\n\tvar keys = !nativeKeys ? shimKeys : function(object) {\n\t  var Ctor = object == null ? undefined : object.constructor;\n\t  if ((typeof Ctor == 'function' && Ctor.prototype === object) ||\n\t      (typeof object == 'function' ? support.enumPrototypes : isArrayLike(object))) {\n\t    return shimKeys(object);\n\t  }\n\t  return isObject(object) ? nativeKeys(object) : [];\n\t};\n\t\n\tmodule.exports = keys;\n\t\n\t},{\"../internal/getNative\":41,\"../internal/isArrayLike\":42,\"../internal/shimKeys\":48,\"../lang/isObject\":54,\"../support\":62}],60:[function(require,module,exports){\n\tvar arrayEach = require('../internal/arrayEach'),\n\t    isArguments = require('../lang/isArguments'),\n\t    isArray = require('../lang/isArray'),\n\t    isFunction = require('../lang/isFunction'),\n\t    isIndex = require('../internal/isIndex'),\n\t    isLength = require('../internal/isLength'),\n\t    isObject = require('../lang/isObject'),\n\t    isString = require('../lang/isString'),\n\t    support = require('../support');\n\t\n\t/** `Object#toString` result references. */\n\tvar arrayTag = '[object Array]',\n\t    boolTag = '[object Boolean]',\n\t    dateTag = '[object Date]',\n\t    errorTag = '[object Error]',\n\t    funcTag = '[object Function]',\n\t    numberTag = '[object Number]',\n\t    objectTag = '[object Object]',\n\t    regexpTag = '[object RegExp]',\n\t    stringTag = '[object String]';\n\t\n\t/** Used to fix the JScript `[[DontEnum]]` bug. */\n\tvar shadowProps = [\n\t  'constructor', 'hasOwnProperty', 'isPrototypeOf', 'propertyIsEnumerable',\n\t  'toLocaleString', 'toString', 'valueOf'\n\t];\n\t\n\t/** Used for native method references. */\n\tvar errorProto = Error.prototype,\n\t    objectProto = Object.prototype,\n\t    stringProto = String.prototype;\n\t\n\t/** Used to check objects for own properties. */\n\tvar hasOwnProperty = objectProto.hasOwnProperty;\n\t\n\t/**\n\t * Used to resolve the [`toStringTag`](http://ecma-international.org/ecma-262/6.0/#sec-object.prototype.tostring)\n\t * of values.\n\t */\n\tvar objToString = objectProto.toString;\n\t\n\t/** Used to avoid iterating over non-enumerable properties in IE < 9. */\n\tvar nonEnumProps = {};\n\tnonEnumProps[arrayTag] = nonEnumProps[dateTag] = nonEnumProps[numberTag] = { 'constructor': true, 'toLocaleString': true, 'toString': true, 'valueOf': true };\n\tnonEnumProps[boolTag] = nonEnumProps[stringTag] = { 'constructor': true, 'toString': true, 'valueOf': true };\n\tnonEnumProps[errorTag] = nonEnumProps[funcTag] = nonEnumProps[regexpTag] = { 'constructor': true, 'toString': true };\n\tnonEnumProps[objectTag] = { 'constructor': true };\n\t\n\tarrayEach(shadowProps, function(key) {\n\t  for (var tag in nonEnumProps) {\n\t    if (hasOwnProperty.call(nonEnumProps, tag)) {\n\t      var props = nonEnumProps[tag];\n\t      props[key] = hasOwnProperty.call(props, key);\n\t    }\n\t  }\n\t});\n\t\n\t/**\n\t * Creates an array of the own and inherited enumerable property names of `object`.\n\t *\n\t * **Note:** Non-object values are coerced to objects.\n\t *\n\t * @static\n\t * @memberOf _\n\t * @category Object\n\t * @param {Object} object The object to query.\n\t * @returns {Array} Returns the array of property names.\n\t * @example\n\t *\n\t * function Foo() {\n\t *   this.a = 1;\n\t *   this.b = 2;\n\t * }\n\t *\n\t * Foo.prototype.c = 3;\n\t *\n\t * _.keysIn(new Foo);\n\t * // => ['a', 'b', 'c'] (iteration order is not guaranteed)\n\t */\n\tfunction keysIn(object) {\n\t  if (object == null) {\n\t    return [];\n\t  }\n\t  if (!isObject(object)) {\n\t    object = Object(object);\n\t  }\n\t  var length = object.length;\n\t\n\t  length = (length && isLength(length) &&\n\t    (isArray(object) || isArguments(object) || isString(object)) && length) || 0;\n\t\n\t  var Ctor = object.constructor,\n\t      index = -1,\n\t      proto = (isFunction(Ctor) && Ctor.prototype) || objectProto,\n\t      isProto = proto === object,\n\t      result = Array(length),\n\t      skipIndexes = length > 0,\n\t      skipErrorProps = support.enumErrorProps && (object === errorProto || object instanceof Error),\n\t      skipProto = support.enumPrototypes && isFunction(object);\n\t\n\t  while (++index < length) {\n\t    result[index] = (index + '');\n\t  }\n\t  // lodash skips the `constructor` property when it infers it's iterating\n\t  // over a `prototype` object because IE < 9 can't set the `[[Enumerable]]`\n\t  // attribute of an existing property and the `constructor` property of a\n\t  // prototype defaults to non-enumerable.\n\t  for (var key in object) {\n\t    if (!(skipProto && key == 'prototype') &&\n\t        !(skipErrorProps && (key == 'message' || key == 'name')) &&\n\t        !(skipIndexes && isIndex(key, length)) &&\n\t        !(key == 'constructor' && (isProto || !hasOwnProperty.call(object, key)))) {\n\t      result.push(key);\n\t    }\n\t  }\n\t  if (support.nonEnumShadows && object !== objectProto) {\n\t    var tag = object === stringProto ? stringTag : (object === errorProto ? errorTag : objToString.call(object)),\n\t        nonEnums = nonEnumProps[tag] || nonEnumProps[objectTag];\n\t\n\t    if (tag == objectTag) {\n\t      proto = objectProto;\n\t    }\n\t    length = shadowProps.length;\n\t    while (length--) {\n\t      key = shadowProps[length];\n\t      var nonEnum = nonEnums[key];\n\t      if (!(isProto && nonEnum) &&\n\t          (nonEnum ? hasOwnProperty.call(object, key) : object[key] !== proto[key])) {\n\t        result.push(key);\n\t      }\n\t    }\n\t  }\n\t  return result;\n\t}\n\t\n\tmodule.exports = keysIn;\n\t\n\t},{\"../internal/arrayEach\":30,\"../internal/isIndex\":44,\"../internal/isLength\":46,\"../lang/isArguments\":50,\"../lang/isArray\":51,\"../lang/isFunction\":52,\"../lang/isObject\":54,\"../lang/isString\":56,\"../support\":62}],61:[function(require,module,exports){\n\tvar baseMerge = require('../internal/baseMerge'),\n\t    createAssigner = require('../internal/createAssigner');\n\t\n\t/**\n\t * Recursively merges own enumerable properties of the source object(s), that\n\t * don't resolve to `undefined` into the destination object. Subsequent sources\n\t * overwrite property assignments of previous sources. If `customizer` is\n\t * provided it's invoked to produce the merged values of the destination and\n\t * source properties. If `customizer` returns `undefined` merging is handled\n\t * by the method instead. The `customizer` is bound to `thisArg` and invoked\n\t * with five arguments: (objectValue, sourceValue, key, object, source).\n\t *\n\t * @static\n\t * @memberOf _\n\t * @category Object\n\t * @param {Object} object The destination object.\n\t * @param {...Object} [sources] The source objects.\n\t * @param {Function} [customizer] The function to customize assigned values.\n\t * @param {*} [thisArg] The `this` binding of `customizer`.\n\t * @returns {Object} Returns `object`.\n\t * @example\n\t *\n\t * var users = {\n\t *   'data': [{ 'user': 'barney' }, { 'user': 'fred' }]\n\t * };\n\t *\n\t * var ages = {\n\t *   'data': [{ 'age': 36 }, { 'age': 40 }]\n\t * };\n\t *\n\t * _.merge(users, ages);\n\t * // => { 'data': [{ 'user': 'barney', 'age': 36 }, { 'user': 'fred', 'age': 40 }] }\n\t *\n\t * // using a customizer callback\n\t * var object = {\n\t *   'fruits': ['apple'],\n\t *   'vegetables': ['beet']\n\t * };\n\t *\n\t * var other = {\n\t *   'fruits': ['banana'],\n\t *   'vegetables': ['carrot']\n\t * };\n\t *\n\t * _.merge(object, other, function(a, b) {\n\t *   if (_.isArray(a)) {\n\t *     return a.concat(b);\n\t *   }\n\t * });\n\t * // => { 'fruits': ['apple', 'banana'], 'vegetables': ['beet', 'carrot'] }\n\t */\n\tvar merge = createAssigner(baseMerge);\n\t\n\tmodule.exports = merge;\n\t\n\t},{\"../internal/baseMerge\":34,\"../internal/createAssigner\":38}],62:[function(require,module,exports){\n\t/** Used for native method references. */\n\tvar arrayProto = Array.prototype,\n\t    errorProto = Error.prototype,\n\t    objectProto = Object.prototype;\n\t\n\t/** Native method references. */\n\tvar propertyIsEnumerable = objectProto.propertyIsEnumerable,\n\t    splice = arrayProto.splice;\n\t\n\t/**\n\t * An object environment feature flags.\n\t *\n\t * @static\n\t * @memberOf _\n\t * @type Object\n\t */\n\tvar support = {};\n\t\n\t(function(x) {\n\t  var Ctor = function() { this.x = x; },\n\t      object = { '0': x, 'length': x },\n\t      props = [];\n\t\n\t  Ctor.prototype = { 'valueOf': x, 'y': x };\n\t  for (var key in new Ctor) { props.push(key); }\n\t\n\t  /**\n\t   * Detect if `name` or `message` properties of `Error.prototype` are\n\t   * enumerable by default (IE < 9, Safari < 5.1).\n\t   *\n\t   * @memberOf _.support\n\t   * @type boolean\n\t   */\n\t  support.enumErrorProps = propertyIsEnumerable.call(errorProto, 'message') ||\n\t    propertyIsEnumerable.call(errorProto, 'name');\n\t\n\t  /**\n\t   * Detect if `prototype` properties are enumerable by default.\n\t   *\n\t   * Firefox < 3.6, Opera > 9.50 - Opera < 11.60, and Safari < 5.1\n\t   * (if the prototype or a property on the prototype has been set)\n\t   * incorrectly set the `[[Enumerable]]` value of a function's `prototype`\n\t   * property to `true`.\n\t   *\n\t   * @memberOf _.support\n\t   * @type boolean\n\t   */\n\t  support.enumPrototypes = propertyIsEnumerable.call(Ctor, 'prototype');\n\t\n\t  /**\n\t   * Detect if properties shadowing those on `Object.prototype` are non-enumerable.\n\t   *\n\t   * In IE < 9 an object's own properties, shadowing non-enumerable ones,\n\t   * are made non-enumerable as well (a.k.a the JScript `[[DontEnum]]` bug).\n\t   *\n\t   * @memberOf _.support\n\t   * @type boolean\n\t   */\n\t  support.nonEnumShadows = !/valueOf/.test(props);\n\t\n\t  /**\n\t   * Detect if own properties are iterated after inherited properties (IE < 9).\n\t   *\n\t   * @memberOf _.support\n\t   * @type boolean\n\t   */\n\t  support.ownLast = props[0] != 'x';\n\t\n\t  /**\n\t   * Detect if `Array#shift` and `Array#splice` augment array-like objects\n\t   * correctly.\n\t   *\n\t   * Firefox < 10, compatibility modes of IE 8, and IE < 9 have buggy Array\n\t   * `shift()` and `splice()` functions that fail to remove the last element,\n\t   * `value[0]`, of array-like objects even though the \"length\" property is\n\t   * set to `0`. The `shift()` method is buggy in compatibility modes of IE 8,\n\t   * while `splice()` is buggy regardless of mode in IE < 9.\n\t   *\n\t   * @memberOf _.support\n\t   * @type boolean\n\t   */\n\t  support.spliceObjects = (splice.call(object, 0, 1), !object[0]);\n\t\n\t  /**\n\t   * Detect lack of support for accessing string characters by index.\n\t   *\n\t   * IE < 8 can't access characters by index. IE 8 can only access characters\n\t   * by index on string literals, not string objects.\n\t   *\n\t   * @memberOf _.support\n\t   * @type boolean\n\t   */\n\t  support.unindexedChars = ('x'[0] + Object('x')[0]) != 'xx';\n\t}(1, 0));\n\t\n\tmodule.exports = support;\n\t\n\t},{}],63:[function(require,module,exports){\n\t/**\n\t * This method returns the first argument provided to it.\n\t *\n\t * @static\n\t * @memberOf _\n\t * @category Utility\n\t * @param {*} value Any value.\n\t * @returns {*} Returns `value`.\n\t * @example\n\t *\n\t * var object = { 'user': 'fred' };\n\t *\n\t * _.identity(object) === object;\n\t * // => true\n\t */\n\tfunction identity(value) {\n\t  return value;\n\t}\n\t\n\tmodule.exports = identity;\n\t\n\t},{}],64:[function(require,module,exports){\n\t/**\n\t * @file m3u8/index.js\n\t *\n\t * Utilities for parsing M3U8 files. If the entire manifest is available,\n\t * `Parser` will create an object representation with enough detail for managing\n\t * playback. `ParseStream` and `LineStream` are lower-level parsing primitives\n\t * that do not assume the entirety of the manifest is ready and expose a\n\t * ReadableStream-like interface.\n\t */\n\t\n\t'use strict';\n\t\n\tObject.defineProperty(exports, '__esModule', {\n\t  value: true\n\t});\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\t\n\tvar _lineStream = require('./line-stream');\n\t\n\tvar _lineStream2 = _interopRequireDefault(_lineStream);\n\t\n\tvar _parseStream = require('./parse-stream');\n\t\n\tvar _parseStream2 = _interopRequireDefault(_parseStream);\n\t\n\tvar _parser = require('./parser');\n\t\n\tvar _parser2 = _interopRequireDefault(_parser);\n\t\n\texports['default'] = {\n\t  LineStream: _lineStream2['default'],\n\t  ParseStream: _parseStream2['default'],\n\t  Parser: _parser2['default']\n\t};\n\tmodule.exports = exports['default'];\n\t},{\"./line-stream\":65,\"./parse-stream\":66,\"./parser\":67}],65:[function(require,module,exports){\n\t/**\n\t * @file m3u8/line-stream.js\n\t */\n\t'use strict';\n\t\n\tObject.defineProperty(exports, '__esModule', {\n\t  value: true\n\t});\n\t\n\tvar _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();\n\t\n\tvar _get = function get(_x, _x2, _x3) { var _again = true; _function: while (_again) { var object = _x, property = _x2, receiver = _x3; _again = false; if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { _x = parent; _x2 = property; _x3 = receiver; _again = true; desc = parent = undefined; continue _function; } } else if ('value' in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } } };\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== 'function' && superClass !== null) { throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\tvar _stream = require('./stream');\n\t\n\tvar _stream2 = _interopRequireDefault(_stream);\n\t\n\t/**\n\t * A stream that buffers string input and generates a `data` event for each\n\t * line.\n\t *\n\t * @class LineStream\n\t * @extends Stream\n\t */\n\t\n\tvar LineStream = (function (_Stream) {\n\t  _inherits(LineStream, _Stream);\n\t\n\t  function LineStream() {\n\t    _classCallCheck(this, LineStream);\n\t\n\t    _get(Object.getPrototypeOf(LineStream.prototype), 'constructor', this).call(this);\n\t    this.buffer = '';\n\t  }\n\t\n\t  /**\n\t   * Add new data to be parsed.\n\t   *\n\t   * @param {String} data the text to process\n\t   */\n\t\n\t  _createClass(LineStream, [{\n\t    key: 'push',\n\t    value: function push(data) {\n\t      var nextNewline = undefined;\n\t\n\t      this.buffer += data;\n\t      nextNewline = this.buffer.indexOf('\\n');\n\t\n\t      for (; nextNewline > -1; nextNewline = this.buffer.indexOf('\\n')) {\n\t        this.trigger('data', this.buffer.substring(0, nextNewline));\n\t        this.buffer = this.buffer.substring(nextNewline + 1);\n\t      }\n\t    }\n\t  }]);\n\t\n\t  return LineStream;\n\t})(_stream2['default']);\n\t\n\texports['default'] = LineStream;\n\tmodule.exports = exports['default'];\n\t},{\"./stream\":68}],66:[function(require,module,exports){\n\t/**\n\t * @file m3u8/parse-stream.js\n\t */\n\t'use strict';\n\t\n\tObject.defineProperty(exports, '__esModule', {\n\t  value: true\n\t});\n\t\n\tvar _slicedToArray = (function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i['return']) _i['return'](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError('Invalid attempt to destructure non-iterable instance'); } }; })();\n\t\n\tvar _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();\n\t\n\tvar _get = function get(_x, _x2, _x3) { var _again = true; _function: while (_again) { var object = _x, property = _x2, receiver = _x3; _again = false; if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { _x = parent; _x2 = property; _x3 = receiver; _again = true; desc = parent = undefined; continue _function; } } else if ('value' in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } } };\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== 'function' && superClass !== null) { throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\tvar _stream = require('./stream');\n\t\n\tvar _stream2 = _interopRequireDefault(_stream);\n\t\n\t/**\n\t * \"forgiving\" attribute list psuedo-grammar:\n\t * attributes -> keyvalue (',' keyvalue)*\n\t * keyvalue   -> key '=' value\n\t * key        -> [^=]*\n\t * value      -> '\"' [^\"]* '\"' | [^,]*\n\t */\n\tvar attributeSeparator = function attributeSeparator() {\n\t  var key = '[^=]*';\n\t  var value = '\"[^\"]*\"|[^,]*';\n\t  var keyvalue = '(?:' + key + ')=(?:' + value + ')';\n\t\n\t  return new RegExp('(?:^|,)(' + keyvalue + ')');\n\t};\n\t\n\t/**\n\t * Parse attributes from a line given the seperator\n\t *\n\t * @param {String} attributes the attibute line to parse\n\t */\n\tvar parseAttributes = function parseAttributes(attributes) {\n\t  // split the string using attributes as the separator\n\t  var attrs = attributes.split(attributeSeparator());\n\t  var i = attrs.length;\n\t  var result = {};\n\t  var attr = undefined;\n\t\n\t  while (i--) {\n\t    // filter out unmatched portions of the string\n\t    if (attrs[i] === '') {\n\t      continue;\n\t    }\n\t\n\t    // split the key and value\n\t    attr = /([^=]*)=(.*)/.exec(attrs[i]).slice(1);\n\t    // trim whitespace and remove optional quotes around the value\n\t    attr[0] = attr[0].replace(/^\\s+|\\s+$/g, '');\n\t    attr[1] = attr[1].replace(/^\\s+|\\s+$/g, '');\n\t    attr[1] = attr[1].replace(/^['\"](.*)['\"]$/g, '$1');\n\t    result[attr[0]] = attr[1];\n\t  }\n\t  return result;\n\t};\n\t\n\t/**\n\t * A line-level M3U8 parser event stream. It expects to receive input one\n\t * line at a time and performs a context-free parse of its contents. A stream\n\t * interpretation of a manifest can be useful if the manifest is expected to\n\t * be too large to fit comfortably into memory or the entirety of the input\n\t * is not immediately available. Otherwise, it's probably much easier to work\n\t * with a regular `Parser` object.\n\t *\n\t * Produces `data` events with an object that captures the parser's\n\t * interpretation of the input. That object has a property `tag` that is one\n\t * of `uri`, `comment`, or `tag`. URIs only have a single additional\n\t * property, `line`, which captures the entirety of the input without\n\t * interpretation. Comments similarly have a single additional property\n\t * `text` which is the input without the leading `#`.\n\t *\n\t * Tags always have a property `tagType` which is the lower-cased version of\n\t * the M3U8 directive without the `#EXT` or `#EXT-X-` prefix. For instance,\n\t * `#EXT-X-MEDIA-SEQUENCE` becomes `media-sequence` when parsed. Unrecognized\n\t * tags are given the tag type `unknown` and a single additional property\n\t * `data` with the remainder of the input.\n\t *\n\t * @class ParseStream\n\t * @extends Stream\n\t */\n\t\n\tvar ParseStream = (function (_Stream) {\n\t  _inherits(ParseStream, _Stream);\n\t\n\t  function ParseStream() {\n\t    _classCallCheck(this, ParseStream);\n\t\n\t    _get(Object.getPrototypeOf(ParseStream.prototype), 'constructor', this).call(this);\n\t  }\n\t\n\t  /**\n\t   * Parses an additional line of input.\n\t   *\n\t   * @param {String} line a single line of an M3U8 file to parse\n\t   */\n\t\n\t  _createClass(ParseStream, [{\n\t    key: 'push',\n\t    value: function push(line) {\n\t      var match = undefined;\n\t      var event = undefined;\n\t\n\t      // strip whitespace\n\t      line = line.replace(/^[\\u0000\\s]+|[\\u0000\\s]+$/g, '');\n\t      if (line.length === 0) {\n\t        // ignore empty lines\n\t        return;\n\t      }\n\t\n\t      // URIs\n\t      if (line[0] !== '#') {\n\t        this.trigger('data', {\n\t          type: 'uri',\n\t          uri: line\n\t        });\n\t        return;\n\t      }\n\t\n\t      // Comments\n\t      if (line.indexOf('#EXT') !== 0) {\n\t        this.trigger('data', {\n\t          type: 'comment',\n\t          text: line.slice(1)\n\t        });\n\t        return;\n\t      }\n\t\n\t      // strip off any carriage returns here so the regex matching\n\t      // doesn't have to account for them.\n\t      line = line.replace('\\r', '');\n\t\n\t      // Tags\n\t      match = /^#EXTM3U/.exec(line);\n\t      if (match) {\n\t        this.trigger('data', {\n\t          type: 'tag',\n\t          tagType: 'm3u'\n\t        });\n\t        return;\n\t      }\n\t      match = /^#EXTINF:?([0-9\\.]*)?,?(.*)?$/.exec(line);\n\t      if (match) {\n\t        event = {\n\t          type: 'tag',\n\t          tagType: 'inf'\n\t        };\n\t        if (match[1]) {\n\t          event.duration = parseFloat(match[1]);\n\t        }\n\t        if (match[2]) {\n\t          event.title = match[2];\n\t        }\n\t        this.trigger('data', event);\n\t        return;\n\t      }\n\t      match = /^#EXT-X-TARGETDURATION:?([0-9.]*)?/.exec(line);\n\t      if (match) {\n\t        event = {\n\t          type: 'tag',\n\t          tagType: 'targetduration'\n\t        };\n\t        if (match[1]) {\n\t          event.duration = parseInt(match[1], 10);\n\t        }\n\t        this.trigger('data', event);\n\t        return;\n\t      }\n\t      match = /^#ZEN-TOTAL-DURATION:?([0-9.]*)?/.exec(line);\n\t      if (match) {\n\t        event = {\n\t          type: 'tag',\n\t          tagType: 'totalduration'\n\t        };\n\t        if (match[1]) {\n\t          event.duration = parseInt(match[1], 10);\n\t        }\n\t        this.trigger('data', event);\n\t        return;\n\t      }\n\t      match = /^#EXT-X-VERSION:?([0-9.]*)?/.exec(line);\n\t      if (match) {\n\t        event = {\n\t          type: 'tag',\n\t          tagType: 'version'\n\t        };\n\t        if (match[1]) {\n\t          event.version = parseInt(match[1], 10);\n\t        }\n\t        this.trigger('data', event);\n\t        return;\n\t      }\n\t      match = /^#EXT-X-MEDIA-SEQUENCE:?(\\-?[0-9.]*)?/.exec(line);\n\t      if (match) {\n\t        event = {\n\t          type: 'tag',\n\t          tagType: 'media-sequence'\n\t        };\n\t        if (match[1]) {\n\t          event.number = parseInt(match[1], 10);\n\t        }\n\t        this.trigger('data', event);\n\t        return;\n\t      }\n\t      match = /^#EXT-X-DISCONTINUITY-SEQUENCE:?(\\-?[0-9.]*)?/.exec(line);\n\t      if (match) {\n\t        event = {\n\t          type: 'tag',\n\t          tagType: 'discontinuity-sequence'\n\t        };\n\t        if (match[1]) {\n\t          event.number = parseInt(match[1], 10);\n\t        }\n\t        this.trigger('data', event);\n\t        return;\n\t      }\n\t      match = /^#EXT-X-PLAYLIST-TYPE:?(.*)?$/.exec(line);\n\t      if (match) {\n\t        event = {\n\t          type: 'tag',\n\t          tagType: 'playlist-type'\n\t        };\n\t        if (match[1]) {\n\t          event.playlistType = match[1];\n\t        }\n\t        this.trigger('data', event);\n\t        return;\n\t      }\n\t      match = /^#EXT-X-BYTERANGE:?([0-9.]*)?@?([0-9.]*)?/.exec(line);\n\t      if (match) {\n\t        event = {\n\t          type: 'tag',\n\t          tagType: 'byterange'\n\t        };\n\t        if (match[1]) {\n\t          event.length = parseInt(match[1], 10);\n\t        }\n\t        if (match[2]) {\n\t          event.offset = parseInt(match[2], 10);\n\t        }\n\t        this.trigger('data', event);\n\t        return;\n\t      }\n\t      match = /^#EXT-X-ALLOW-CACHE:?(YES|NO)?/.exec(line);\n\t      if (match) {\n\t        event = {\n\t          type: 'tag',\n\t          tagType: 'allow-cache'\n\t        };\n\t        if (match[1]) {\n\t          event.allowed = !/NO/.test(match[1]);\n\t        }\n\t        this.trigger('data', event);\n\t        return;\n\t      }\n\t      match = /^#EXT-X-MAP:?(.*)$/.exec(line);\n\t      if (match) {\n\t        event = {\n\t          type: 'tag',\n\t          tagType: 'map'\n\t        };\n\t\n\t        if (match[1]) {\n\t          var attributes = parseAttributes(match[1]);\n\t\n\t          if (attributes.URI) {\n\t            event.uri = attributes.URI;\n\t          }\n\t          if (attributes.BYTERANGE) {\n\t            var _attributes$BYTERANGE$split = attributes.BYTERANGE.split('@');\n\t\n\t            var _attributes$BYTERANGE$split2 = _slicedToArray(_attributes$BYTERANGE$split, 2);\n\t\n\t            var _length = _attributes$BYTERANGE$split2[0];\n\t            var offset = _attributes$BYTERANGE$split2[1];\n\t\n\t            event.byterange = {};\n\t            if (_length) {\n\t              event.byterange.length = parseInt(_length, 10);\n\t            }\n\t            if (offset) {\n\t              event.byterange.offset = parseInt(offset, 10);\n\t            }\n\t          }\n\t        }\n\t\n\t        this.trigger('data', event);\n\t        return;\n\t      }\n\t      match = /^#EXT-X-STREAM-INF:?(.*)$/.exec(line);\n\t      if (match) {\n\t        event = {\n\t          type: 'tag',\n\t          tagType: 'stream-inf'\n\t        };\n\t        if (match[1]) {\n\t          event.attributes = parseAttributes(match[1]);\n\t\n\t          if (event.attributes.RESOLUTION) {\n\t            var split = event.attributes.RESOLUTION.split('x');\n\t            var resolution = {};\n\t\n\t            if (split[0]) {\n\t              resolution.width = parseInt(split[0], 10);\n\t            }\n\t            if (split[1]) {\n\t              resolution.height = parseInt(split[1], 10);\n\t            }\n\t            event.attributes.RESOLUTION = resolution;\n\t          }\n\t          if (event.attributes.BANDWIDTH) {\n\t            event.attributes.BANDWIDTH = parseInt(event.attributes.BANDWIDTH, 10);\n\t          }\n\t          if (event.attributes['PROGRAM-ID']) {\n\t            event.attributes['PROGRAM-ID'] = parseInt(event.attributes['PROGRAM-ID'], 10);\n\t          }\n\t        }\n\t        this.trigger('data', event);\n\t        return;\n\t      }\n\t      match = /^#EXT-X-MEDIA:?(.*)$/.exec(line);\n\t      if (match) {\n\t        event = {\n\t          type: 'tag',\n\t          tagType: 'media'\n\t        };\n\t        if (match[1]) {\n\t          event.attributes = parseAttributes(match[1]);\n\t        }\n\t        this.trigger('data', event);\n\t        return;\n\t      }\n\t      match = /^#EXT-X-ENDLIST/.exec(line);\n\t      if (match) {\n\t        this.trigger('data', {\n\t          type: 'tag',\n\t          tagType: 'endlist'\n\t        });\n\t        return;\n\t      }\n\t      match = /^#EXT-X-DISCONTINUITY/.exec(line);\n\t      if (match) {\n\t        this.trigger('data', {\n\t          type: 'tag',\n\t          tagType: 'discontinuity'\n\t        });\n\t        return;\n\t      }\n\t      match = /^#EXT-X-PROGRAM-DATE-TIME:?(.*)$/.exec(line);\n\t      if (match) {\n\t        event = {\n\t          type: 'tag',\n\t          tagType: 'program-date-time'\n\t        };\n\t        if (match[1]) {\n\t          event.dateTimeString = match[1];\n\t          event.dateTimeObject = new Date(match[1]);\n\t        }\n\t        this.trigger('data', event);\n\t        return;\n\t      }\n\t      match = /^#EXT-X-KEY:?(.*)$/.exec(line);\n\t      if (match) {\n\t        event = {\n\t          type: 'tag',\n\t          tagType: 'key'\n\t        };\n\t        if (match[1]) {\n\t          event.attributes = parseAttributes(match[1]);\n\t          // parse the IV string into a Uint32Array\n\t          if (event.attributes.IV) {\n\t            if (event.attributes.IV.substring(0, 2).toLowerCase() === '0x') {\n\t              event.attributes.IV = event.attributes.IV.substring(2);\n\t            }\n\t\n\t            event.attributes.IV = event.attributes.IV.match(/.{8}/g);\n\t            event.attributes.IV[0] = parseInt(event.attributes.IV[0], 16);\n\t            event.attributes.IV[1] = parseInt(event.attributes.IV[1], 16);\n\t            event.attributes.IV[2] = parseInt(event.attributes.IV[2], 16);\n\t            event.attributes.IV[3] = parseInt(event.attributes.IV[3], 16);\n\t            event.attributes.IV = new Uint32Array(event.attributes.IV);\n\t          }\n\t        }\n\t        this.trigger('data', event);\n\t        return;\n\t      }\n\t      match = /^#EXT-X-CUE-OUT-CONT:?(.*)?$/.exec(line);\n\t      if (match) {\n\t        event = {\n\t          type: 'tag',\n\t          tagType: 'cue-out-cont'\n\t        };\n\t        if (match[1]) {\n\t          event.data = match[1];\n\t        } else {\n\t          event.data = '';\n\t        }\n\t        this.trigger('data', event);\n\t        return;\n\t      }\n\t      match = /^#EXT-X-CUE-OUT:?(.*)?$/.exec(line);\n\t      if (match) {\n\t        event = {\n\t          type: 'tag',\n\t          tagType: 'cue-out'\n\t        };\n\t        if (match[1]) {\n\t          event.data = match[1];\n\t        } else {\n\t          event.data = '';\n\t        }\n\t        this.trigger('data', event);\n\t        return;\n\t      }\n\t      match = /^#EXT-X-CUE-IN:?(.*)?$/.exec(line);\n\t      if (match) {\n\t        event = {\n\t          type: 'tag',\n\t          tagType: 'cue-in'\n\t        };\n\t        if (match[1]) {\n\t          event.data = match[1];\n\t        } else {\n\t          event.data = '';\n\t        }\n\t        this.trigger('data', event);\n\t        return;\n\t      }\n\t\n\t      // unknown tag type\n\t      this.trigger('data', {\n\t        type: 'tag',\n\t        data: line.slice(4)\n\t      });\n\t    }\n\t  }]);\n\t\n\t  return ParseStream;\n\t})(_stream2['default']);\n\t\n\texports['default'] = ParseStream;\n\tmodule.exports = exports['default'];\n\t},{\"./stream\":68}],67:[function(require,module,exports){\n\t/**\n\t * @file m3u8/parser.js\n\t */\n\t'use strict';\n\t\n\tObject.defineProperty(exports, '__esModule', {\n\t  value: true\n\t});\n\t\n\tvar _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();\n\t\n\tvar _get = function get(_x, _x2, _x3) { var _again = true; _function: while (_again) { var object = _x, property = _x2, receiver = _x3; _again = false; if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { _x = parent; _x2 = property; _x3 = receiver; _again = true; desc = parent = undefined; continue _function; } } else if ('value' in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } } };\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== 'function' && superClass !== null) { throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\tvar _stream = require('./stream');\n\t\n\tvar _stream2 = _interopRequireDefault(_stream);\n\t\n\tvar _lineStream = require('./line-stream');\n\t\n\tvar _lineStream2 = _interopRequireDefault(_lineStream);\n\t\n\tvar _parseStream = require('./parse-stream');\n\t\n\tvar _parseStream2 = _interopRequireDefault(_parseStream);\n\t\n\tvar _lodashCompatObjectMerge = require('lodash-compat/object/merge');\n\t\n\tvar _lodashCompatObjectMerge2 = _interopRequireDefault(_lodashCompatObjectMerge);\n\t\n\t/**\n\t * A parser for M3U8 files. The current interpretation of the input is\n\t * exposed as a property `manifest` on parser objects. It's just two lines to\n\t * create and parse a manifest once you have the contents available as a string:\n\t *\n\t * ```js\n\t * var parser = new m3u8.Parser();\n\t * parser.push(xhr.responseText);\n\t * ```\n\t *\n\t * New input can later be applied to update the manifest object by calling\n\t * `push` again.\n\t *\n\t * The parser attempts to create a usable manifest object even if the\n\t * underlying input is somewhat nonsensical. It emits `info` and `warning`\n\t * events during the parse if it encounters input that seems invalid or\n\t * requires some property of the manifest object to be defaulted.\n\t *\n\t * @class Parser\n\t * @extends Stream\n\t */\n\t\n\tvar Parser = (function (_Stream) {\n\t  _inherits(Parser, _Stream);\n\t\n\t  function Parser() {\n\t    _classCallCheck(this, Parser);\n\t\n\t    _get(Object.getPrototypeOf(Parser.prototype), 'constructor', this).call(this);\n\t    this.lineStream = new _lineStream2['default']();\n\t    this.parseStream = new _parseStream2['default']();\n\t    this.lineStream.pipe(this.parseStream);\n\t    /* eslint-disable consistent-this */\n\t    var self = this;\n\t    /* eslint-enable consistent-this */\n\t    var uris = [];\n\t    var currentUri = {};\n\t    // if specified, the active EXT-X-MAP definition\n\t    var currentMap = undefined;\n\t    // if specified, the active decryption key\n\t    var _key = undefined;\n\t    var noop = function noop() {};\n\t    var defaultMediaGroups = {\n\t      'AUDIO': {},\n\t      'VIDEO': {},\n\t      'CLOSED-CAPTIONS': {},\n\t      'SUBTITLES': {}\n\t    };\n\t    // group segments into numbered timelines delineated by discontinuities\n\t    var currentTimeline = 0;\n\t\n\t    // the manifest is empty until the parse stream begins delivering data\n\t    this.manifest = {\n\t      allowCache: true,\n\t      discontinuityStarts: []\n\t    };\n\t\n\t    // update the manifest with the m3u8 entry from the parse stream\n\t    this.parseStream.on('data', function (entry) {\n\t      var mediaGroup = undefined;\n\t      var rendition = undefined;\n\t\n\t      ({\n\t        tag: function tag() {\n\t          // switch based on the tag type\n\t          (({\n\t            'allow-cache': function allowCache() {\n\t              this.manifest.allowCache = entry.allowed;\n\t              if (!('allowed' in entry)) {\n\t                this.trigger('info', {\n\t                  message: 'defaulting allowCache to YES'\n\t                });\n\t                this.manifest.allowCache = true;\n\t              }\n\t            },\n\t            byterange: function byterange() {\n\t              var byterange = {};\n\t\n\t              if ('length' in entry) {\n\t                currentUri.byterange = byterange;\n\t                byterange.length = entry.length;\n\t\n\t                if (!('offset' in entry)) {\n\t                  this.trigger('info', {\n\t                    message: 'defaulting offset to zero'\n\t                  });\n\t                  entry.offset = 0;\n\t                }\n\t              }\n\t              if ('offset' in entry) {\n\t                currentUri.byterange = byterange;\n\t                byterange.offset = entry.offset;\n\t              }\n\t            },\n\t            endlist: function endlist() {\n\t              this.manifest.endList = true;\n\t            },\n\t            inf: function inf() {\n\t              if (!('mediaSequence' in this.manifest)) {\n\t                this.manifest.mediaSequence = 0;\n\t                this.trigger('info', {\n\t                  message: 'defaulting media sequence to zero'\n\t                });\n\t              }\n\t              if (!('discontinuitySequence' in this.manifest)) {\n\t                this.manifest.discontinuitySequence = 0;\n\t                this.trigger('info', {\n\t                  message: 'defaulting discontinuity sequence to zero'\n\t                });\n\t              }\n\t              if (entry.duration > 0) {\n\t                currentUri.duration = entry.duration;\n\t              }\n\t\n\t              if (entry.duration === 0) {\n\t                currentUri.duration = 0.01;\n\t                this.trigger('info', {\n\t                  message: 'updating zero segment duration to a small value'\n\t                });\n\t              }\n\t\n\t              this.manifest.segments = uris;\n\t            },\n\t            key: function key() {\n\t              if (!entry.attributes) {\n\t                this.trigger('warn', {\n\t                  message: 'ignoring key declaration without attribute list'\n\t                });\n\t                return;\n\t              }\n\t              // clear the active encryption key\n\t              if (entry.attributes.METHOD === 'NONE') {\n\t                _key = null;\n\t                return;\n\t              }\n\t              if (!entry.attributes.URI) {\n\t                this.trigger('warn', {\n\t                  message: 'ignoring key declaration without URI'\n\t                });\n\t                return;\n\t              }\n\t              if (!entry.attributes.METHOD) {\n\t                this.trigger('warn', {\n\t                  message: 'defaulting key method to AES-128'\n\t                });\n\t              }\n\t\n\t              // setup an encryption key for upcoming segments\n\t              _key = {\n\t                method: entry.attributes.METHOD || 'AES-128',\n\t                uri: entry.attributes.URI\n\t              };\n\t\n\t              if (typeof entry.attributes.IV !== 'undefined') {\n\t                _key.iv = entry.attributes.IV;\n\t              }\n\t            },\n\t            'media-sequence': function mediaSequence() {\n\t              if (!isFinite(entry.number)) {\n\t                this.trigger('warn', {\n\t                  message: 'ignoring invalid media sequence: ' + entry.number\n\t                });\n\t                return;\n\t              }\n\t              this.manifest.mediaSequence = entry.number;\n\t            },\n\t            'discontinuity-sequence': function discontinuitySequence() {\n\t              if (!isFinite(entry.number)) {\n\t                this.trigger('warn', {\n\t                  message: 'ignoring invalid discontinuity sequence: ' + entry.number\n\t                });\n\t                return;\n\t              }\n\t              this.manifest.discontinuitySequence = entry.number;\n\t              currentTimeline = entry.number;\n\t            },\n\t            'playlist-type': function playlistType() {\n\t              if (!/VOD|EVENT/.test(entry.playlistType)) {\n\t                this.trigger('warn', {\n\t                  message: 'ignoring unknown playlist type: ' + entry.playlist\n\t                });\n\t                return;\n\t              }\n\t              this.manifest.playlistType = entry.playlistType;\n\t            },\n\t            map: function map() {\n\t              currentMap = {};\n\t              if (entry.uri) {\n\t                currentMap.uri = entry.uri;\n\t              }\n\t              if (entry.byterange) {\n\t                currentMap.byterange = entry.byterange;\n\t              }\n\t            },\n\t            'stream-inf': function streamInf() {\n\t              this.manifest.playlists = uris;\n\t              this.manifest.mediaGroups = this.manifest.mediaGroups || defaultMediaGroups;\n\t\n\t              if (!entry.attributes) {\n\t                this.trigger('warn', {\n\t                  message: 'ignoring empty stream-inf attributes'\n\t                });\n\t                return;\n\t              }\n\t\n\t              if (!currentUri.attributes) {\n\t                currentUri.attributes = {};\n\t              }\n\t              currentUri.attributes = (0, _lodashCompatObjectMerge2['default'])(currentUri.attributes, entry.attributes);\n\t            },\n\t            media: function media() {\n\t              this.manifest.mediaGroups = this.manifest.mediaGroups || defaultMediaGroups;\n\t\n\t              if (!(entry.attributes && entry.attributes.TYPE && entry.attributes['GROUP-ID'] && entry.attributes.NAME)) {\n\t                this.trigger('warn', {\n\t                  message: 'ignoring incomplete or missing media group'\n\t                });\n\t                return;\n\t              }\n\t\n\t              // find the media group, creating defaults as necessary\n\t              var mediaGroupType = this.manifest.mediaGroups[entry.attributes.TYPE];\n\t\n\t              mediaGroupType[entry.attributes['GROUP-ID']] = mediaGroupType[entry.attributes['GROUP-ID']] || {};\n\t              mediaGroup = mediaGroupType[entry.attributes['GROUP-ID']];\n\t\n\t              // collect the rendition metadata\n\t              rendition = {\n\t                'default': /yes/i.test(entry.attributes.DEFAULT)\n\t              };\n\t              if (rendition['default']) {\n\t                rendition.autoselect = true;\n\t              } else {\n\t                rendition.autoselect = /yes/i.test(entry.attributes.AUTOSELECT);\n\t              }\n\t              if (entry.attributes.LANGUAGE) {\n\t                rendition.language = entry.attributes.LANGUAGE;\n\t              }\n\t              if (entry.attributes.URI) {\n\t                rendition.uri = entry.attributes.URI;\n\t              }\n\t              if (entry.attributes['INSTREAM-ID']) {\n\t                rendition.instreamId = entry.attributes['INSTREAM-ID'];\n\t              }\n\t\n\t              // insert the new rendition\n\t              mediaGroup[entry.attributes.NAME] = rendition;\n\t            },\n\t            discontinuity: function discontinuity() {\n\t              currentTimeline += 1;\n\t              currentUri.discontinuity = true;\n\t              this.manifest.discontinuityStarts.push(uris.length);\n\t            },\n\t            'program-date-time': function programDateTime() {\n\t              this.manifest.dateTimeString = entry.dateTimeString;\n\t              this.manifest.dateTimeObject = entry.dateTimeObject;\n\t            },\n\t            targetduration: function targetduration() {\n\t              if (!isFinite(entry.duration) || entry.duration < 0) {\n\t                this.trigger('warn', {\n\t                  message: 'ignoring invalid target duration: ' + entry.duration\n\t                });\n\t                return;\n\t              }\n\t              this.manifest.targetDuration = entry.duration;\n\t            },\n\t            totalduration: function totalduration() {\n\t              if (!isFinite(entry.duration) || entry.duration < 0) {\n\t                this.trigger('warn', {\n\t                  message: 'ignoring invalid total duration: ' + entry.duration\n\t                });\n\t                return;\n\t              }\n\t              this.manifest.totalDuration = entry.duration;\n\t            },\n\t            'cue-out': function cueOut() {\n\t              currentUri.cueOut = entry.data;\n\t            },\n\t            'cue-out-cont': function cueOutCont() {\n\t              currentUri.cueOutCont = entry.data;\n\t            },\n\t            'cue-in': function cueIn() {\n\t              currentUri.cueIn = entry.data;\n\t            }\n\t          })[entry.tagType] || noop).call(self);\n\t        },\n\t        uri: function uri() {\n\t          currentUri.uri = entry.uri;\n\t          uris.push(currentUri);\n\t\n\t          // if no explicit duration was declared, use the target duration\n\t          if (this.manifest.targetDuration && !('duration' in currentUri)) {\n\t            this.trigger('warn', {\n\t              message: 'defaulting segment duration to the target duration'\n\t            });\n\t            currentUri.duration = this.manifest.targetDuration;\n\t          }\n\t          // annotate with encryption information, if necessary\n\t          if (_key) {\n\t            currentUri.key = _key;\n\t          }\n\t          currentUri.timeline = currentTimeline;\n\t          // annotate with initialization segment information, if necessary\n\t          if (currentMap) {\n\t            currentUri.map = currentMap;\n\t          }\n\t\n\t          // prepare for the next URI\n\t          currentUri = {};\n\t        },\n\t        comment: function comment() {\n\t          // comments are not important for playback\n\t        }\n\t      })[entry.type].call(self);\n\t    });\n\t  }\n\t\n\t  /**\n\t   * Parse the input string and update the manifest object.\n\t   *\n\t   * @param {String} chunk a potentially incomplete portion of the manifest\n\t   */\n\t\n\t  _createClass(Parser, [{\n\t    key: 'push',\n\t    value: function push(chunk) {\n\t      this.lineStream.push(chunk);\n\t    }\n\t\n\t    /**\n\t     * Flush any remaining input. This can be handy if the last line of an M3U8\n\t     * manifest did not contain a trailing newline but the file has been\n\t     * completely received.\n\t     */\n\t  }, {\n\t    key: 'end',\n\t    value: function end() {\n\t      // flush any buffered input\n\t      this.lineStream.push('\\n');\n\t    }\n\t  }]);\n\t\n\t  return Parser;\n\t})(_stream2['default']);\n\t\n\texports['default'] = Parser;\n\tmodule.exports = exports['default'];\n\t},{\"./line-stream\":65,\"./parse-stream\":66,\"./stream\":68,\"lodash-compat/object/merge\":61}],68:[function(require,module,exports){\n\targuments[4][14][0].apply(exports,arguments)\n\t},{\"dup\":14}],69:[function(require,module,exports){\n\t/**\n\t * mux.js\n\t *\n\t * Copyright (c) 2016 Brightcove\n\t * All rights reserved.\n\t *\n\t * A stream-based aac to mp4 converter. This utility can be used to\n\t * deliver mp4s to a SourceBuffer on platforms that support native\n\t * Media Source Extensions.\n\t */\n\t'use strict';\n\tvar Stream = require('../utils/stream.js');\n\t\n\t// Constants\n\tvar AacStream;\n\t\n\t/**\n\t * Splits an incoming stream of binary data into ADTS and ID3 Frames.\n\t */\n\t\n\tAacStream = function() {\n\t  var\n\t    everything = new Uint8Array(),\n\t    timeStamp = 0;\n\t\n\t  AacStream.prototype.init.call(this);\n\t\n\t  this.setTimestamp = function(timestamp) {\n\t    timeStamp = timestamp;\n\t  };\n\t\n\t  this.parseId3TagSize = function(header, byteIndex) {\n\t    var\n\t      returnSize = (header[byteIndex + 6] << 21) |\n\t                   (header[byteIndex + 7] << 14) |\n\t                   (header[byteIndex + 8] << 7) |\n\t                   (header[byteIndex + 9]),\n\t      flags = header[byteIndex + 5],\n\t      footerPresent = (flags & 16) >> 4;\n\t\n\t    if (footerPresent) {\n\t      return returnSize + 20;\n\t    }\n\t    return returnSize + 10;\n\t  };\n\t\n\t  this.parseAdtsSize = function(header, byteIndex) {\n\t    var\n\t      lowThree = (header[byteIndex + 5] & 0xE0) >> 5,\n\t      middle = header[byteIndex + 4] << 3,\n\t      highTwo = header[byteIndex + 3] & 0x3 << 11;\n\t\n\t    return (highTwo | middle) | lowThree;\n\t  };\n\t\n\t  this.push = function(bytes) {\n\t    var\n\t      frameSize = 0,\n\t      byteIndex = 0,\n\t      bytesLeft,\n\t      chunk,\n\t      packet,\n\t      tempLength;\n\t\n\t    // If there are bytes remaining from the last segment, prepend them to the\n\t    // bytes that were pushed in\n\t    if (everything.length) {\n\t      tempLength = everything.length;\n\t      everything = new Uint8Array(bytes.byteLength + tempLength);\n\t      everything.set(everything.subarray(0, tempLength));\n\t      everything.set(bytes, tempLength);\n\t    } else {\n\t      everything = bytes;\n\t    }\n\t\n\t    while (everything.length - byteIndex >= 3) {\n\t      if ((everything[byteIndex] === 'I'.charCodeAt(0)) &&\n\t          (everything[byteIndex + 1] === 'D'.charCodeAt(0)) &&\n\t          (everything[byteIndex + 2] === '3'.charCodeAt(0))) {\n\t\n\t        // Exit early because we don't have enough to parse\n\t        // the ID3 tag header\n\t        if (everything.length - byteIndex < 10) {\n\t          break;\n\t        }\n\t\n\t        // check framesize\n\t        frameSize = this.parseId3TagSize(everything, byteIndex);\n\t\n\t        // Exit early if we don't have enough in the buffer\n\t        // to emit a full packet\n\t        if (frameSize > everything.length) {\n\t          break;\n\t        }\n\t        chunk = {\n\t          type: 'timed-metadata',\n\t          data: everything.subarray(byteIndex, byteIndex + frameSize)\n\t        };\n\t        this.trigger('data', chunk);\n\t        byteIndex += frameSize;\n\t        continue;\n\t      } else if ((everything[byteIndex] & 0xff === 0xff) &&\n\t                 ((everything[byteIndex + 1] & 0xf0) === 0xf0)) {\n\t\n\t        // Exit early because we don't have enough to parse\n\t        // the ADTS frame header\n\t        if (everything.length - byteIndex < 7) {\n\t          break;\n\t        }\n\t\n\t        frameSize = this.parseAdtsSize(everything, byteIndex);\n\t\n\t        // Exit early if we don't have enough in the buffer\n\t        // to emit a full packet\n\t        if (frameSize > everything.length) {\n\t          break;\n\t        }\n\t\n\t        packet = {\n\t          type: 'audio',\n\t          data: everything.subarray(byteIndex, byteIndex + frameSize),\n\t          pts: timeStamp,\n\t          dts: timeStamp\n\t        };\n\t        this.trigger('data', packet);\n\t        byteIndex += frameSize;\n\t        continue;\n\t      }\n\t      byteIndex++;\n\t    }\n\t    bytesLeft = everything.length - byteIndex;\n\t\n\t    if (bytesLeft > 0) {\n\t      everything = everything.subarray(byteIndex);\n\t    } else {\n\t      everything = new Uint8Array();\n\t    }\n\t  };\n\t};\n\t\n\tAacStream.prototype = new Stream();\n\t\n\tmodule.exports = AacStream;\n\t\n\t},{\"../utils/stream.js\":89}],70:[function(require,module,exports){\n\t/**\n\t * mux.js\n\t *\n\t * Copyright (c) 2016 Brightcove\n\t * All rights reserved.\n\t *\n\t * Utilities to detect basic properties and metadata about Aac data.\n\t */\n\t'use strict';\n\t\n\tvar ADTS_SAMPLING_FREQUENCIES = [\n\t  96000,\n\t  88200,\n\t  64000,\n\t  48000,\n\t  44100,\n\t  32000,\n\t  24000,\n\t  22050,\n\t  16000,\n\t  12000,\n\t  11025,\n\t  8000,\n\t  7350\n\t];\n\t\n\tvar parseSyncSafeInteger = function(data) {\n\t  return (data[0] << 21) |\n\t          (data[1] << 14) |\n\t          (data[2] << 7) |\n\t          (data[3]);\n\t};\n\t\n\t// return a percent-encoded representation of the specified byte range\n\t// @see http://en.wikipedia.org/wiki/Percent-encoding\n\tvar percentEncode = function(bytes, start, end) {\n\t  var i, result = '';\n\t  for (i = start; i < end; i++) {\n\t    result += '%' + ('00' + bytes[i].toString(16)).slice(-2);\n\t  }\n\t  return result;\n\t};\n\t\n\t// return the string representation of the specified byte range,\n\t// interpreted as ISO-8859-1.\n\tvar parseIso88591 = function(bytes, start, end) {\n\t  return unescape(percentEncode(bytes, start, end)); // jshint ignore:line\n\t};\n\t\n\tvar parseId3TagSize = function(header, byteIndex) {\n\t  var\n\t    returnSize = (header[byteIndex + 6] << 21) |\n\t                 (header[byteIndex + 7] << 14) |\n\t                 (header[byteIndex + 8] << 7) |\n\t                 (header[byteIndex + 9]),\n\t    flags = header[byteIndex + 5],\n\t    footerPresent = (flags & 16) >> 4;\n\t\n\t  if (footerPresent) {\n\t    return returnSize + 20;\n\t  }\n\t  return returnSize + 10;\n\t};\n\t\n\tvar parseAdtsSize = function(header, byteIndex) {\n\t  var\n\t    lowThree = (header[byteIndex + 5] & 0xE0) >> 5,\n\t    middle = header[byteIndex + 4] << 3,\n\t    highTwo = header[byteIndex + 3] & 0x3 << 11;\n\t\n\t  return (highTwo | middle) | lowThree;\n\t};\n\t\n\tvar parseType = function(header, byteIndex) {\n\t  if ((header[byteIndex] === 'I'.charCodeAt(0)) &&\n\t      (header[byteIndex + 1] === 'D'.charCodeAt(0)) &&\n\t      (header[byteIndex + 2] === '3'.charCodeAt(0))) {\n\t    return 'timed-metadata';\n\t  } else if ((header[byteIndex] & 0xff === 0xff) &&\n\t             ((header[byteIndex + 1] & 0xf0) === 0xf0)) {\n\t    return 'audio';\n\t  }\n\t  return null;\n\t};\n\t\n\tvar parseSampleRate = function(packet) {\n\t  var i = 0;\n\t\n\t  while (i + 5 < packet.length) {\n\t    if (packet[i] !== 0xFF || (packet[i + 1] & 0xF6) !== 0xF0) {\n\t      // If a valid header was not found,  jump one forward and attempt to\n\t      // find a valid ADTS header starting at the next byte\n\t      i++;\n\t      continue;\n\t    }\n\t    return ADTS_SAMPLING_FREQUENCIES[(packet[i + 2] & 0x3c) >>> 2];\n\t  }\n\t\n\t  return null;\n\t};\n\t\n\tvar parseAacTimestamp = function(packet) {\n\t  var frameStart, frameSize, frame, frameHeader;\n\t\n\t  // find the start of the first frame and the end of the tag\n\t  frameStart = 10;\n\t  if (packet[5] & 0x40) {\n\t    // advance the frame start past the extended header\n\t    frameStart += 4; // header size field\n\t    frameStart += parseSyncSafeInteger(packet.subarray(10, 14));\n\t  }\n\t\n\t  // parse one or more ID3 frames\n\t  // http://id3.org/id3v2.3.0#ID3v2_frame_overview\n\t  do {\n\t    // determine the number of bytes in this frame\n\t    frameSize = parseSyncSafeInteger(packet.subarray(frameStart + 4, frameStart + 8));\n\t    if (frameSize < 1) {\n\t      return null;\n\t    }\n\t    frameHeader = String.fromCharCode(packet[frameStart],\n\t                                      packet[frameStart + 1],\n\t                                      packet[frameStart + 2],\n\t                                      packet[frameStart + 3]);\n\t\n\t    if (frameHeader === 'PRIV') {\n\t      frame = packet.subarray(frameStart + 10, frameStart + frameSize + 10);\n\t\n\t      for (var i = 0; i < frame.byteLength; i++) {\n\t        if (frame[i] === 0) {\n\t          var owner = parseIso88591(frame, 0, i);\n\t          if (owner === 'com.apple.streaming.transportStreamTimestamp') {\n\t            var d = frame.subarray(i + 1);\n\t            var size = ((d[3] & 0x01)  << 30) |\n\t                       (d[4]  << 22) |\n\t                       (d[5] << 14) |\n\t                       (d[6] << 6) |\n\t                       (d[7] >>> 2);\n\t            size *= 4;\n\t            size += d[7] & 0x03;\n\t\n\t            return size;\n\t          }\n\t          break;\n\t        }\n\t      }\n\t    }\n\t\n\t    frameStart += 10; // advance past the frame header\n\t    frameStart += frameSize; // advance past the frame body\n\t  } while (frameStart < packet.byteLength);\n\t  return null;\n\t};\n\t\n\tmodule.exports = {\n\t  parseId3TagSize: parseId3TagSize,\n\t  parseAdtsSize: parseAdtsSize,\n\t  parseType: parseType,\n\t  parseSampleRate: parseSampleRate,\n\t  parseAacTimestamp: parseAacTimestamp\n\t};\n\t\n\t},{}],71:[function(require,module,exports){\n\t'use strict';\n\t\n\tvar Stream = require('../utils/stream.js');\n\t\n\tvar AdtsStream;\n\t\n\tvar\n\t  ADTS_SAMPLING_FREQUENCIES = [\n\t    96000,\n\t    88200,\n\t    64000,\n\t    48000,\n\t    44100,\n\t    32000,\n\t    24000,\n\t    22050,\n\t    16000,\n\t    12000,\n\t    11025,\n\t    8000,\n\t    7350\n\t  ];\n\t\n\t/*\n\t * Accepts a ElementaryStream and emits data events with parsed\n\t * AAC Audio Frames of the individual packets. Input audio in ADTS\n\t * format is unpacked and re-emitted as AAC frames.\n\t *\n\t * @see http://wiki.multimedia.cx/index.php?title=ADTS\n\t * @see http://wiki.multimedia.cx/?title=Understanding_AAC\n\t */\n\tAdtsStream = function() {\n\t  var buffer;\n\t\n\t  AdtsStream.prototype.init.call(this);\n\t\n\t  this.push = function(packet) {\n\t    var\n\t      i = 0,\n\t      frameNum = 0,\n\t      frameLength,\n\t      protectionSkipBytes,\n\t      frameEnd,\n\t      oldBuffer,\n\t      sampleCount,\n\t      adtsFrameDuration;\n\t\n\t    if (packet.type !== 'audio') {\n\t      // ignore non-audio data\n\t      return;\n\t    }\n\t\n\t    // Prepend any data in the buffer to the input data so that we can parse\n\t    // aac frames the cross a PES packet boundary\n\t    if (buffer) {\n\t      oldBuffer = buffer;\n\t      buffer = new Uint8Array(oldBuffer.byteLength + packet.data.byteLength);\n\t      buffer.set(oldBuffer);\n\t      buffer.set(packet.data, oldBuffer.byteLength);\n\t    } else {\n\t      buffer = packet.data;\n\t    }\n\t\n\t    // unpack any ADTS frames which have been fully received\n\t    // for details on the ADTS header, see http://wiki.multimedia.cx/index.php?title=ADTS\n\t    while (i + 5 < buffer.length) {\n\t\n\t      // Loook for the start of an ADTS header..\n\t      if (buffer[i] !== 0xFF || (buffer[i + 1] & 0xF6) !== 0xF0) {\n\t        // If a valid header was not found,  jump one forward and attempt to\n\t        // find a valid ADTS header starting at the next byte\n\t        i++;\n\t        continue;\n\t      }\n\t\n\t      // The protection skip bit tells us if we have 2 bytes of CRC data at the\n\t      // end of the ADTS header\n\t      protectionSkipBytes = (~buffer[i + 1] & 0x01) * 2;\n\t\n\t      // Frame length is a 13 bit integer starting 16 bits from the\n\t      // end of the sync sequence\n\t      frameLength = ((buffer[i + 3] & 0x03) << 11) |\n\t        (buffer[i + 4] << 3) |\n\t        ((buffer[i + 5] & 0xe0) >> 5);\n\t\n\t      sampleCount = ((buffer[i + 6] & 0x03) + 1) * 1024;\n\t      adtsFrameDuration = (sampleCount * 90000) /\n\t        ADTS_SAMPLING_FREQUENCIES[(buffer[i + 2] & 0x3c) >>> 2];\n\t\n\t      frameEnd = i + frameLength;\n\t\n\t      // If we don't have enough data to actually finish this ADTS frame, return\n\t      // and wait for more data\n\t      if (buffer.byteLength < frameEnd) {\n\t        return;\n\t      }\n\t\n\t      // Otherwise, deliver the complete AAC frame\n\t      this.trigger('data', {\n\t        pts: packet.pts + (frameNum * adtsFrameDuration),\n\t        dts: packet.dts + (frameNum * adtsFrameDuration),\n\t        sampleCount: sampleCount,\n\t        audioobjecttype: ((buffer[i + 2] >>> 6) & 0x03) + 1,\n\t        channelcount: ((buffer[i + 2] & 1) << 2) |\n\t          ((buffer[i + 3] & 0xc0) >>> 6),\n\t        samplerate: ADTS_SAMPLING_FREQUENCIES[(buffer[i + 2] & 0x3c) >>> 2],\n\t        samplingfrequencyindex: (buffer[i + 2] & 0x3c) >>> 2,\n\t        // assume ISO/IEC 14496-12 AudioSampleEntry default of 16\n\t        samplesize: 16,\n\t        data: buffer.subarray(i + 7 + protectionSkipBytes, frameEnd)\n\t      });\n\t\n\t      // If the buffer is empty, clear it and return\n\t      if (buffer.byteLength === frameEnd) {\n\t        buffer = undefined;\n\t        return;\n\t      }\n\t\n\t      frameNum++;\n\t\n\t      // Remove the finished frame from the buffer and start the process again\n\t      buffer = buffer.subarray(frameEnd);\n\t    }\n\t  };\n\t  this.flush = function() {\n\t    this.trigger('done');\n\t  };\n\t};\n\t\n\tAdtsStream.prototype = new Stream();\n\t\n\tmodule.exports = AdtsStream;\n\t\n\t},{\"../utils/stream.js\":89}],72:[function(require,module,exports){\n\t'use strict';\n\t\n\tvar Stream = require('../utils/stream.js');\n\tvar ExpGolomb = require('../utils/exp-golomb.js');\n\t\n\tvar H264Stream, NalByteStream;\n\tvar PROFILES_WITH_OPTIONAL_SPS_DATA;\n\t\n\t/**\n\t * Accepts a NAL unit byte stream and unpacks the embedded NAL units.\n\t */\n\tNalByteStream = function() {\n\t  var\n\t    syncPoint = 0,\n\t    i,\n\t    buffer;\n\t  NalByteStream.prototype.init.call(this);\n\t\n\t  this.push = function(data) {\n\t    var swapBuffer;\n\t\n\t    if (!buffer) {\n\t      buffer = data.data;\n\t    } else {\n\t      swapBuffer = new Uint8Array(buffer.byteLength + data.data.byteLength);\n\t      swapBuffer.set(buffer);\n\t      swapBuffer.set(data.data, buffer.byteLength);\n\t      buffer = swapBuffer;\n\t    }\n\t\n\t    // Rec. ITU-T H.264, Annex B\n\t    // scan for NAL unit boundaries\n\t\n\t    // a match looks like this:\n\t    // 0 0 1 .. NAL .. 0 0 1\n\t    // ^ sync point        ^ i\n\t    // or this:\n\t    // 0 0 1 .. NAL .. 0 0 0\n\t    // ^ sync point        ^ i\n\t\n\t    // advance the sync point to a NAL start, if necessary\n\t    for (; syncPoint < buffer.byteLength - 3; syncPoint++) {\n\t      if (buffer[syncPoint + 2] === 1) {\n\t        // the sync point is properly aligned\n\t        i = syncPoint + 5;\n\t        break;\n\t      }\n\t    }\n\t\n\t    while (i < buffer.byteLength) {\n\t      // look at the current byte to determine if we've hit the end of\n\t      // a NAL unit boundary\n\t      switch (buffer[i]) {\n\t      case 0:\n\t        // skip past non-sync sequences\n\t        if (buffer[i - 1] !== 0) {\n\t          i += 2;\n\t          break;\n\t        } else if (buffer[i - 2] !== 0) {\n\t          i++;\n\t          break;\n\t        }\n\t\n\t        // deliver the NAL unit if it isn't empty\n\t        if (syncPoint + 3 !== i - 2) {\n\t          this.trigger('data', buffer.subarray(syncPoint + 3, i - 2));\n\t        }\n\t\n\t        // drop trailing zeroes\n\t        do {\n\t          i++;\n\t        } while (buffer[i] !== 1 && i < buffer.length);\n\t        syncPoint = i - 2;\n\t        i += 3;\n\t        break;\n\t      case 1:\n\t        // skip past non-sync sequences\n\t        if (buffer[i - 1] !== 0 ||\n\t            buffer[i - 2] !== 0) {\n\t          i += 3;\n\t          break;\n\t        }\n\t\n\t        // deliver the NAL unit\n\t        this.trigger('data', buffer.subarray(syncPoint + 3, i - 2));\n\t        syncPoint = i - 2;\n\t        i += 3;\n\t        break;\n\t      default:\n\t        // the current byte isn't a one or zero, so it cannot be part\n\t        // of a sync sequence\n\t        i += 3;\n\t        break;\n\t      }\n\t    }\n\t    // filter out the NAL units that were delivered\n\t    buffer = buffer.subarray(syncPoint);\n\t    i -= syncPoint;\n\t    syncPoint = 0;\n\t  };\n\t\n\t  this.flush = function() {\n\t    // deliver the last buffered NAL unit\n\t    if (buffer && buffer.byteLength > 3) {\n\t      this.trigger('data', buffer.subarray(syncPoint + 3));\n\t    }\n\t    // reset the stream state\n\t    buffer = null;\n\t    syncPoint = 0;\n\t    this.trigger('done');\n\t  };\n\t};\n\tNalByteStream.prototype = new Stream();\n\t\n\t// values of profile_idc that indicate additional fields are included in the SPS\n\t// see Recommendation ITU-T H.264 (4/2013),\n\t// 7.3.2.1.1 Sequence parameter set data syntax\n\tPROFILES_WITH_OPTIONAL_SPS_DATA = {\n\t  100: true,\n\t  110: true,\n\t  122: true,\n\t  244: true,\n\t  44: true,\n\t  83: true,\n\t  86: true,\n\t  118: true,\n\t  128: true,\n\t  138: true,\n\t  139: true,\n\t  134: true\n\t};\n\t\n\t/**\n\t * Accepts input from a ElementaryStream and produces H.264 NAL unit data\n\t * events.\n\t */\n\tH264Stream = function() {\n\t  var\n\t    nalByteStream = new NalByteStream(),\n\t    self,\n\t    trackId,\n\t    currentPts,\n\t    currentDts,\n\t\n\t    discardEmulationPreventionBytes,\n\t    readSequenceParameterSet,\n\t    skipScalingList;\n\t\n\t  H264Stream.prototype.init.call(this);\n\t  self = this;\n\t\n\t  this.push = function(packet) {\n\t    if (packet.type !== 'video') {\n\t      return;\n\t    }\n\t    trackId = packet.trackId;\n\t    currentPts = packet.pts;\n\t    currentDts = packet.dts;\n\t\n\t    nalByteStream.push(packet);\n\t  };\n\t\n\t  nalByteStream.on('data', function(data) {\n\t    var\n\t      event = {\n\t        trackId: trackId,\n\t        pts: currentPts,\n\t        dts: currentDts,\n\t        data: data\n\t      };\n\t\n\t    switch (data[0] & 0x1f) {\n\t    case 0x05:\n\t      event.nalUnitType = 'slice_layer_without_partitioning_rbsp_idr';\n\t      break;\n\t    case 0x06:\n\t      event.nalUnitType = 'sei_rbsp';\n\t      event.escapedRBSP = discardEmulationPreventionBytes(data.subarray(1));\n\t      break;\n\t    case 0x07:\n\t      event.nalUnitType = 'seq_parameter_set_rbsp';\n\t      event.escapedRBSP = discardEmulationPreventionBytes(data.subarray(1));\n\t      event.config = readSequenceParameterSet(event.escapedRBSP);\n\t      break;\n\t    case 0x08:\n\t      event.nalUnitType = 'pic_parameter_set_rbsp';\n\t      break;\n\t    case 0x09:\n\t      event.nalUnitType = 'access_unit_delimiter_rbsp';\n\t      break;\n\t\n\t    default:\n\t      break;\n\t    }\n\t    self.trigger('data', event);\n\t  });\n\t  nalByteStream.on('done', function() {\n\t    self.trigger('done');\n\t  });\n\t\n\t  this.flush = function() {\n\t    nalByteStream.flush();\n\t  };\n\t\n\t  /**\n\t   * Advance the ExpGolomb decoder past a scaling list. The scaling\n\t   * list is optionally transmitted as part of a sequence parameter\n\t   * set and is not relevant to transmuxing.\n\t   * @param count {number} the number of entries in this scaling list\n\t   * @param expGolombDecoder {object} an ExpGolomb pointed to the\n\t   * start of a scaling list\n\t   * @see Recommendation ITU-T H.264, Section 7.3.2.1.1.1\n\t   */\n\t  skipScalingList = function(count, expGolombDecoder) {\n\t    var\n\t      lastScale = 8,\n\t      nextScale = 8,\n\t      j,\n\t      deltaScale;\n\t\n\t    for (j = 0; j < count; j++) {\n\t      if (nextScale !== 0) {\n\t        deltaScale = expGolombDecoder.readExpGolomb();\n\t        nextScale = (lastScale + deltaScale + 256) % 256;\n\t      }\n\t\n\t      lastScale = (nextScale === 0) ? lastScale : nextScale;\n\t    }\n\t  };\n\t\n\t  /**\n\t   * Expunge any \"Emulation Prevention\" bytes from a \"Raw Byte\n\t   * Sequence Payload\"\n\t   * @param data {Uint8Array} the bytes of a RBSP from a NAL\n\t   * unit\n\t   * @return {Uint8Array} the RBSP without any Emulation\n\t   * Prevention Bytes\n\t   */\n\t  discardEmulationPreventionBytes = function(data) {\n\t    var\n\t      length = data.byteLength,\n\t      emulationPreventionBytesPositions = [],\n\t      i = 1,\n\t      newLength, newData;\n\t\n\t    // Find all `Emulation Prevention Bytes`\n\t    while (i < length - 2) {\n\t      if (data[i] === 0 && data[i + 1] === 0 && data[i + 2] === 0x03) {\n\t        emulationPreventionBytesPositions.push(i + 2);\n\t        i += 2;\n\t      } else {\n\t        i++;\n\t      }\n\t    }\n\t\n\t    // If no Emulation Prevention Bytes were found just return the original\n\t    // array\n\t    if (emulationPreventionBytesPositions.length === 0) {\n\t      return data;\n\t    }\n\t\n\t    // Create a new array to hold the NAL unit data\n\t    newLength = length - emulationPreventionBytesPositions.length;\n\t    newData = new Uint8Array(newLength);\n\t    var sourceIndex = 0;\n\t\n\t    for (i = 0; i < newLength; sourceIndex++, i++) {\n\t      if (sourceIndex === emulationPreventionBytesPositions[0]) {\n\t        // Skip this byte\n\t        sourceIndex++;\n\t        // Remove this position index\n\t        emulationPreventionBytesPositions.shift();\n\t      }\n\t      newData[i] = data[sourceIndex];\n\t    }\n\t\n\t    return newData;\n\t  };\n\t\n\t  /**\n\t   * Read a sequence parameter set and return some interesting video\n\t   * properties. A sequence parameter set is the H264 metadata that\n\t   * describes the properties of upcoming video frames.\n\t   * @param data {Uint8Array} the bytes of a sequence parameter set\n\t   * @return {object} an object with configuration parsed from the\n\t   * sequence parameter set, including the dimensions of the\n\t   * associated video frames.\n\t   */\n\t  readSequenceParameterSet = function(data) {\n\t    var\n\t      frameCropLeftOffset = 0,\n\t      frameCropRightOffset = 0,\n\t      frameCropTopOffset = 0,\n\t      frameCropBottomOffset = 0,\n\t      sarScale = 1,\n\t      expGolombDecoder, profileIdc, levelIdc, profileCompatibility,\n\t      chromaFormatIdc, picOrderCntType,\n\t      numRefFramesInPicOrderCntCycle, picWidthInMbsMinus1,\n\t      picHeightInMapUnitsMinus1,\n\t      frameMbsOnlyFlag,\n\t      scalingListCount,\n\t      sarRatio,\n\t      aspectRatioIdc,\n\t      i;\n\t\n\t    expGolombDecoder = new ExpGolomb(data);\n\t    profileIdc = expGolombDecoder.readUnsignedByte(); // profile_idc\n\t    profileCompatibility = expGolombDecoder.readUnsignedByte(); // constraint_set[0-5]_flag\n\t    levelIdc = expGolombDecoder.readUnsignedByte(); // level_idc u(8)\n\t    expGolombDecoder.skipUnsignedExpGolomb(); // seq_parameter_set_id\n\t\n\t    // some profiles have more optional data we don't need\n\t    if (PROFILES_WITH_OPTIONAL_SPS_DATA[profileIdc]) {\n\t      chromaFormatIdc = expGolombDecoder.readUnsignedExpGolomb();\n\t      if (chromaFormatIdc === 3) {\n\t        expGolombDecoder.skipBits(1); // separate_colour_plane_flag\n\t      }\n\t      expGolombDecoder.skipUnsignedExpGolomb(); // bit_depth_luma_minus8\n\t      expGolombDecoder.skipUnsignedExpGolomb(); // bit_depth_chroma_minus8\n\t      expGolombDecoder.skipBits(1); // qpprime_y_zero_transform_bypass_flag\n\t      if (expGolombDecoder.readBoolean()) { // seq_scaling_matrix_present_flag\n\t        scalingListCount = (chromaFormatIdc !== 3) ? 8 : 12;\n\t        for (i = 0; i < scalingListCount; i++) {\n\t          if (expGolombDecoder.readBoolean()) { // seq_scaling_list_present_flag[ i ]\n\t            if (i < 6) {\n\t              skipScalingList(16, expGolombDecoder);\n\t            } else {\n\t              skipScalingList(64, expGolombDecoder);\n\t            }\n\t          }\n\t        }\n\t      }\n\t    }\n\t\n\t    expGolombDecoder.skipUnsignedExpGolomb(); // log2_max_frame_num_minus4\n\t    picOrderCntType = expGolombDecoder.readUnsignedExpGolomb();\n\t\n\t    if (picOrderCntType === 0) {\n\t      expGolombDecoder.readUnsignedExpGolomb(); // log2_max_pic_order_cnt_lsb_minus4\n\t    } else if (picOrderCntType === 1) {\n\t      expGolombDecoder.skipBits(1); // delta_pic_order_always_zero_flag\n\t      expGolombDecoder.skipExpGolomb(); // offset_for_non_ref_pic\n\t      expGolombDecoder.skipExpGolomb(); // offset_for_top_to_bottom_field\n\t      numRefFramesInPicOrderCntCycle = expGolombDecoder.readUnsignedExpGolomb();\n\t      for (i = 0; i < numRefFramesInPicOrderCntCycle; i++) {\n\t        expGolombDecoder.skipExpGolomb(); // offset_for_ref_frame[ i ]\n\t      }\n\t    }\n\t\n\t    expGolombDecoder.skipUnsignedExpGolomb(); // max_num_ref_frames\n\t    expGolombDecoder.skipBits(1); // gaps_in_frame_num_value_allowed_flag\n\t\n\t    picWidthInMbsMinus1 = expGolombDecoder.readUnsignedExpGolomb();\n\t    picHeightInMapUnitsMinus1 = expGolombDecoder.readUnsignedExpGolomb();\n\t\n\t    frameMbsOnlyFlag = expGolombDecoder.readBits(1);\n\t    if (frameMbsOnlyFlag === 0) {\n\t      expGolombDecoder.skipBits(1); // mb_adaptive_frame_field_flag\n\t    }\n\t\n\t    expGolombDecoder.skipBits(1); // direct_8x8_inference_flag\n\t    if (expGolombDecoder.readBoolean()) { // frame_cropping_flag\n\t      frameCropLeftOffset = expGolombDecoder.readUnsignedExpGolomb();\n\t      frameCropRightOffset = expGolombDecoder.readUnsignedExpGolomb();\n\t      frameCropTopOffset = expGolombDecoder.readUnsignedExpGolomb();\n\t      frameCropBottomOffset = expGolombDecoder.readUnsignedExpGolomb();\n\t    }\n\t    if (expGolombDecoder.readBoolean()) {\n\t      // vui_parameters_present_flag\n\t      if (expGolombDecoder.readBoolean()) {\n\t        // aspect_ratio_info_present_flag\n\t        aspectRatioIdc = expGolombDecoder.readUnsignedByte();\n\t        switch (aspectRatioIdc) {\n\t          case 1: sarRatio = [1, 1]; break;\n\t          case 2: sarRatio = [12, 11]; break;\n\t          case 3: sarRatio = [10, 11]; break;\n\t          case 4: sarRatio = [16, 11]; break;\n\t          case 5: sarRatio = [40, 33]; break;\n\t          case 6: sarRatio = [24, 11]; break;\n\t          case 7: sarRatio = [20, 11]; break;\n\t          case 8: sarRatio = [32, 11]; break;\n\t          case 9: sarRatio = [80, 33]; break;\n\t          case 10: sarRatio = [18, 11]; break;\n\t          case 11: sarRatio = [15, 11]; break;\n\t          case 12: sarRatio = [64, 33]; break;\n\t          case 13: sarRatio = [160, 99]; break;\n\t          case 14: sarRatio = [4, 3]; break;\n\t          case 15: sarRatio = [3, 2]; break;\n\t          case 16: sarRatio = [2, 1]; break;\n\t          case 255: {\n\t            sarRatio = [expGolombDecoder.readUnsignedByte() << 8 |\n\t                        expGolombDecoder.readUnsignedByte(),\n\t                        expGolombDecoder.readUnsignedByte() << 8 |\n\t                        expGolombDecoder.readUnsignedByte() ];\n\t            break;\n\t          }\n\t        }\n\t        if (sarRatio) {\n\t          sarScale = sarRatio[0] / sarRatio[1];\n\t        }\n\t      }\n\t    }\n\t    return {\n\t      profileIdc: profileIdc,\n\t      levelIdc: levelIdc,\n\t      profileCompatibility: profileCompatibility,\n\t      width: Math.ceil((((picWidthInMbsMinus1 + 1) * 16) - frameCropLeftOffset * 2 - frameCropRightOffset * 2) * sarScale),\n\t      height: ((2 - frameMbsOnlyFlag) * (picHeightInMapUnitsMinus1 + 1) * 16) - (frameCropTopOffset * 2) - (frameCropBottomOffset * 2)\n\t    };\n\t  };\n\t\n\t};\n\tH264Stream.prototype = new Stream();\n\t\n\tmodule.exports = {\n\t  H264Stream: H264Stream,\n\t  NalByteStream: NalByteStream\n\t};\n\t\n\t},{\"../utils/exp-golomb.js\":88,\"../utils/stream.js\":89}],73:[function(require,module,exports){\n\t'use strict';\n\t\n\tvar Stream = require('../utils/stream.js');\n\t\n\t/**\n\t * The final stage of the transmuxer that emits the flv tags\n\t * for audio, video, and metadata. Also tranlates in time and\n\t * outputs caption data and id3 cues.\n\t */\n\tvar CoalesceStream = function(options) {\n\t  // Number of Tracks per output segment\n\t  // If greater than 1, we combine multiple\n\t  // tracks into a single segment\n\t  this.numberOfTracks = 0;\n\t  this.metadataStream = options.metadataStream;\n\t\n\t  this.videoTags = [];\n\t  this.audioTags = [];\n\t  this.videoTrack = null;\n\t  this.audioTrack = null;\n\t  this.pendingCaptions = [];\n\t  this.pendingMetadata = [];\n\t  this.pendingTracks = 0;\n\t  this.processedTracks = 0;\n\t\n\t  CoalesceStream.prototype.init.call(this);\n\t\n\t  // Take output from multiple\n\t  this.push = function(output) {\n\t    // buffer incoming captions until the associated video segment\n\t    // finishes\n\t    if (output.text) {\n\t      return this.pendingCaptions.push(output);\n\t    }\n\t    // buffer incoming id3 tags until the final flush\n\t    if (output.frames) {\n\t      return this.pendingMetadata.push(output);\n\t    }\n\t\n\t    if (output.track.type === 'video') {\n\t      this.videoTrack = output.track;\n\t      this.videoTags = output.tags;\n\t      this.pendingTracks++;\n\t    }\n\t    if (output.track.type === 'audio') {\n\t      this.audioTrack = output.track;\n\t      this.audioTags = output.tags;\n\t      this.pendingTracks++;\n\t    }\n\t  };\n\t};\n\t\n\tCoalesceStream.prototype = new Stream();\n\tCoalesceStream.prototype.flush = function(flushSource) {\n\t  var\n\t    id3,\n\t    caption,\n\t    i,\n\t    timelineStartPts,\n\t    event = {\n\t      tags: {},\n\t      captions: [],\n\t      metadata: []\n\t    };\n\t\n\t  if (this.pendingTracks < this.numberOfTracks) {\n\t    if (flushSource !== 'VideoSegmentStream' &&\n\t        flushSource !== 'AudioSegmentStream') {\n\t      // Return because we haven't received a flush from a data-generating\n\t      // portion of the segment (meaning that we have only recieved meta-data\n\t      // or captions.)\n\t      return;\n\t    } else if (this.pendingTracks === 0) {\n\t      // In the case where we receive a flush without any data having been\n\t      // received we consider it an emitted track for the purposes of coalescing\n\t      // `done` events.\n\t      // We do this for the case where there is an audio and video track in the\n\t      // segment but no audio data. (seen in several playlists with alternate\n\t      // audio tracks and no audio present in the main TS segments.)\n\t      this.processedTracks++;\n\t\n\t      if (this.processedTracks < this.numberOfTracks) {\n\t        return;\n\t      }\n\t    }\n\t  }\n\t\n\t  this.processedTracks += this.pendingTracks;\n\t  this.pendingTracks = 0;\n\t\n\t  if (this.processedTracks < this.numberOfTracks) {\n\t    return;\n\t  }\n\t\n\t  if (this.videoTrack) {\n\t    timelineStartPts = this.videoTrack.timelineStartInfo.pts;\n\t  } else if (this.audioTrack) {\n\t    timelineStartPts = this.audioTrack.timelineStartInfo.pts;\n\t  }\n\t\n\t  event.tags.videoTags = this.videoTags;\n\t  event.tags.audioTags = this.audioTags;\n\t\n\t  // Translate caption PTS times into second offsets into the\n\t  // video timeline for the segment\n\t  for (i = 0; i < this.pendingCaptions.length; i++) {\n\t    caption = this.pendingCaptions[i];\n\t    caption.startTime = caption.startPts - timelineStartPts;\n\t    caption.startTime /= 90e3;\n\t    caption.endTime = caption.endPts - timelineStartPts;\n\t    caption.endTime /= 90e3;\n\t    event.captions.push(caption);\n\t  }\n\t\n\t  // Translate ID3 frame PTS times into second offsets into the\n\t  // video timeline for the segment\n\t  for (i = 0; i < this.pendingMetadata.length; i++) {\n\t    id3 = this.pendingMetadata[i];\n\t    id3.cueTime = id3.pts - timelineStartPts;\n\t    id3.cueTime /= 90e3;\n\t    event.metadata.push(id3);\n\t  }\n\t  // We add this to every single emitted segment even though we only need\n\t  // it for the first\n\t  event.metadata.dispatchType = this.metadataStream.dispatchType;\n\t\n\t  // Reset stream state\n\t  this.videoTrack = null;\n\t  this.audioTrack = null;\n\t  this.videoTags = [];\n\t  this.audioTags = [];\n\t  this.pendingCaptions.length = 0;\n\t  this.pendingMetadata.length = 0;\n\t  this.pendingTracks = 0;\n\t  this.processedTracks = 0;\n\t\n\t  // Emit the final segment\n\t  this.trigger('data', event);\n\t\n\t  this.trigger('done');\n\t};\n\t\n\tmodule.exports = CoalesceStream;\n\t\n\t},{\"../utils/stream.js\":89}],74:[function(require,module,exports){\n\t/**\n\t * An object that stores the bytes of an FLV tag and methods for\n\t * querying and manipulating that data.\n\t * @see http://download.macromedia.com/f4v/video_file_format_spec_v10_1.pdf\n\t */\n\t'use strict';\n\t\n\tvar FlvTag;\n\t\n\t// (type:uint, extraData:Boolean = false) extends ByteArray\n\tFlvTag = function(type, extraData) {\n\t  var\n\t    // Counter if this is a metadata tag, nal start marker if this is a video\n\t    // tag. unused if this is an audio tag\n\t    adHoc = 0, // :uint\n\t\n\t    // The default size is 16kb but this is not enough to hold iframe\n\t    // data and the resizing algorithm costs a bit so we create a larger\n\t    // starting buffer for video tags\n\t    bufferStartSize = 16384,\n\t\n\t    // checks whether the FLV tag has enough capacity to accept the proposed\n\t    // write and re-allocates the internal buffers if necessary\n\t    prepareWrite = function(flv, count) {\n\t      var\n\t        bytes,\n\t        minLength = flv.position + count;\n\t      if (minLength < flv.bytes.byteLength) {\n\t        // there's enough capacity so do nothing\n\t        return;\n\t      }\n\t\n\t      // allocate a new buffer and copy over the data that will not be modified\n\t      bytes = new Uint8Array(minLength * 2);\n\t      bytes.set(flv.bytes.subarray(0, flv.position), 0);\n\t      flv.bytes = bytes;\n\t      flv.view = new DataView(flv.bytes.buffer);\n\t    },\n\t\n\t    // commonly used metadata properties\n\t    widthBytes = FlvTag.widthBytes || new Uint8Array('width'.length),\n\t    heightBytes = FlvTag.heightBytes || new Uint8Array('height'.length),\n\t    videocodecidBytes = FlvTag.videocodecidBytes || new Uint8Array('videocodecid'.length),\n\t    i;\n\t\n\t  if (!FlvTag.widthBytes) {\n\t    // calculating the bytes of common metadata names ahead of time makes the\n\t    // corresponding writes faster because we don't have to loop over the\n\t    // characters\n\t    // re-test with test/perf.html if you're planning on changing this\n\t    for (i = 0; i < 'width'.length; i++) {\n\t      widthBytes[i] = 'width'.charCodeAt(i);\n\t    }\n\t    for (i = 0; i < 'height'.length; i++) {\n\t      heightBytes[i] = 'height'.charCodeAt(i);\n\t    }\n\t    for (i = 0; i < 'videocodecid'.length; i++) {\n\t      videocodecidBytes[i] = 'videocodecid'.charCodeAt(i);\n\t    }\n\t\n\t    FlvTag.widthBytes = widthBytes;\n\t    FlvTag.heightBytes = heightBytes;\n\t    FlvTag.videocodecidBytes = videocodecidBytes;\n\t  }\n\t\n\t  this.keyFrame = false; // :Boolean\n\t\n\t  switch (type) {\n\t  case FlvTag.VIDEO_TAG:\n\t    this.length = 16;\n\t    // Start the buffer at 256k\n\t    bufferStartSize *= 6;\n\t    break;\n\t  case FlvTag.AUDIO_TAG:\n\t    this.length = 13;\n\t    this.keyFrame = true;\n\t    break;\n\t  case FlvTag.METADATA_TAG:\n\t    this.length = 29;\n\t    this.keyFrame = true;\n\t    break;\n\t  default:\n\t    throw new Error('Unknown FLV tag type');\n\t  }\n\t\n\t  this.bytes = new Uint8Array(bufferStartSize);\n\t  this.view = new DataView(this.bytes.buffer);\n\t  this.bytes[0] = type;\n\t  this.position = this.length;\n\t  this.keyFrame = extraData; // Defaults to false\n\t\n\t  // presentation timestamp\n\t  this.pts = 0;\n\t  // decoder timestamp\n\t  this.dts = 0;\n\t\n\t  // ByteArray#writeBytes(bytes:ByteArray, offset:uint = 0, length:uint = 0)\n\t  this.writeBytes = function(bytes, offset, length) {\n\t    var\n\t      start = offset || 0,\n\t      end;\n\t    length = length || bytes.byteLength;\n\t    end = start + length;\n\t\n\t    prepareWrite(this, length);\n\t    this.bytes.set(bytes.subarray(start, end), this.position);\n\t\n\t    this.position += length;\n\t    this.length = Math.max(this.length, this.position);\n\t  };\n\t\n\t  // ByteArray#writeByte(value:int):void\n\t  this.writeByte = function(byte) {\n\t    prepareWrite(this, 1);\n\t    this.bytes[this.position] = byte;\n\t    this.position++;\n\t    this.length = Math.max(this.length, this.position);\n\t  };\n\t\n\t  // ByteArray#writeShort(value:int):void\n\t  this.writeShort = function(short) {\n\t    prepareWrite(this, 2);\n\t    this.view.setUint16(this.position, short);\n\t    this.position += 2;\n\t    this.length = Math.max(this.length, this.position);\n\t  };\n\t\n\t  // Negative index into array\n\t  // (pos:uint):int\n\t  this.negIndex = function(pos) {\n\t    return this.bytes[this.length - pos];\n\t  };\n\t\n\t  // The functions below ONLY work when this[0] == VIDEO_TAG.\n\t  // We are not going to check for that because we dont want the overhead\n\t  // (nal:ByteArray = null):int\n\t  this.nalUnitSize = function() {\n\t    if (adHoc === 0) {\n\t      return 0;\n\t    }\n\t\n\t    return this.length - (adHoc + 4);\n\t  };\n\t\n\t  this.startNalUnit = function() {\n\t    // remember position and add 4 bytes\n\t    if (adHoc > 0) {\n\t      throw new Error('Attempted to create new NAL wihout closing the old one');\n\t    }\n\t\n\t    // reserve 4 bytes for nal unit size\n\t    adHoc = this.length;\n\t    this.length += 4;\n\t    this.position = this.length;\n\t  };\n\t\n\t  // (nal:ByteArray = null):void\n\t  this.endNalUnit = function(nalContainer) {\n\t    var\n\t      nalStart, // :uint\n\t      nalLength; // :uint\n\t\n\t    // Rewind to the marker and write the size\n\t    if (this.length === adHoc + 4) {\n\t      // we started a nal unit, but didnt write one, so roll back the 4 byte size value\n\t      this.length -= 4;\n\t    } else if (adHoc > 0) {\n\t      nalStart = adHoc + 4;\n\t      nalLength = this.length - nalStart;\n\t\n\t      this.position = adHoc;\n\t      this.view.setUint32(this.position, nalLength);\n\t      this.position = this.length;\n\t\n\t      if (nalContainer) {\n\t        // Add the tag to the NAL unit\n\t        nalContainer.push(this.bytes.subarray(nalStart, nalStart + nalLength));\n\t      }\n\t    }\n\t\n\t    adHoc = 0;\n\t  };\n\t\n\t  /**\n\t   * Write out a 64-bit floating point valued metadata property. This method is\n\t   * called frequently during a typical parse and needs to be fast.\n\t   */\n\t  // (key:String, val:Number):void\n\t  this.writeMetaDataDouble = function(key, val) {\n\t    var i;\n\t    prepareWrite(this, 2 + key.length + 9);\n\t\n\t    // write size of property name\n\t    this.view.setUint16(this.position, key.length);\n\t    this.position += 2;\n\t\n\t    // this next part looks terrible but it improves parser throughput by\n\t    // 10kB/s in my testing\n\t\n\t    // write property name\n\t    if (key === 'width') {\n\t      this.bytes.set(widthBytes, this.position);\n\t      this.position += 5;\n\t    } else if (key === 'height') {\n\t      this.bytes.set(heightBytes, this.position);\n\t      this.position += 6;\n\t    } else if (key === 'videocodecid') {\n\t      this.bytes.set(videocodecidBytes, this.position);\n\t      this.position += 12;\n\t    } else {\n\t      for (i = 0; i < key.length; i++) {\n\t        this.bytes[this.position] = key.charCodeAt(i);\n\t        this.position++;\n\t      }\n\t    }\n\t\n\t    // skip null byte\n\t    this.position++;\n\t\n\t    // write property value\n\t    this.view.setFloat64(this.position, val);\n\t    this.position += 8;\n\t\n\t    // update flv tag length\n\t    this.length = Math.max(this.length, this.position);\n\t    ++adHoc;\n\t  };\n\t\n\t  // (key:String, val:Boolean):void\n\t  this.writeMetaDataBoolean = function(key, val) {\n\t    var i;\n\t    prepareWrite(this, 2);\n\t    this.view.setUint16(this.position, key.length);\n\t    this.position += 2;\n\t    for (i = 0; i < key.length; i++) {\n\t      // if key.charCodeAt(i) >= 255, handle error\n\t      prepareWrite(this, 1);\n\t      this.bytes[this.position] = key.charCodeAt(i);\n\t      this.position++;\n\t    }\n\t    prepareWrite(this, 2);\n\t    this.view.setUint8(this.position, 0x01);\n\t    this.position++;\n\t    this.view.setUint8(this.position, val ? 0x01 : 0x00);\n\t    this.position++;\n\t    this.length = Math.max(this.length, this.position);\n\t    ++adHoc;\n\t  };\n\t\n\t  // ():ByteArray\n\t  this.finalize = function() {\n\t    var\n\t      dtsDelta, // :int\n\t      len; // :int\n\t\n\t    switch (this.bytes[0]) {\n\t      // Video Data\n\t    case FlvTag.VIDEO_TAG:\n\t       // We only support AVC, 1 = key frame (for AVC, a seekable\n\t       // frame), 2 = inter frame (for AVC, a non-seekable frame)\n\t      this.bytes[11] = ((this.keyFrame || extraData) ? 0x10 : 0x20) | 0x07;\n\t      this.bytes[12] = extraData ?  0x00 : 0x01;\n\t\n\t      dtsDelta = this.pts - this.dts;\n\t      this.bytes[13] = (dtsDelta & 0x00FF0000) >>> 16;\n\t      this.bytes[14] = (dtsDelta & 0x0000FF00) >>>  8;\n\t      this.bytes[15] = (dtsDelta & 0x000000FF) >>>  0;\n\t      break;\n\t\n\t    case FlvTag.AUDIO_TAG:\n\t      this.bytes[11] = 0xAF; // 44 kHz, 16-bit stereo\n\t      this.bytes[12] = extraData ? 0x00 : 0x01;\n\t      break;\n\t\n\t    case FlvTag.METADATA_TAG:\n\t      this.position = 11;\n\t      this.view.setUint8(this.position, 0x02); // String type\n\t      this.position++;\n\t      this.view.setUint16(this.position, 0x0A); // 10 Bytes\n\t      this.position += 2;\n\t      // set \"onMetaData\"\n\t      this.bytes.set([0x6f, 0x6e, 0x4d, 0x65,\n\t                      0x74, 0x61, 0x44, 0x61,\n\t                      0x74, 0x61], this.position);\n\t      this.position += 10;\n\t      this.bytes[this.position] = 0x08; // Array type\n\t      this.position++;\n\t      this.view.setUint32(this.position, adHoc);\n\t      this.position = this.length;\n\t      this.bytes.set([0, 0, 9], this.position);\n\t      this.position += 3; // End Data Tag\n\t      this.length = this.position;\n\t      break;\n\t    }\n\t\n\t    len = this.length - 11;\n\t\n\t    // write the DataSize field\n\t    this.bytes[ 1] = (len & 0x00FF0000) >>> 16;\n\t    this.bytes[ 2] = (len & 0x0000FF00) >>>  8;\n\t    this.bytes[ 3] = (len & 0x000000FF) >>>  0;\n\t    // write the Timestamp\n\t    this.bytes[ 4] = (this.dts & 0x00FF0000) >>> 16;\n\t    this.bytes[ 5] = (this.dts & 0x0000FF00) >>>  8;\n\t    this.bytes[ 6] = (this.dts & 0x000000FF) >>>  0;\n\t    this.bytes[ 7] = (this.dts & 0xFF000000) >>> 24;\n\t    // write the StreamID\n\t    this.bytes[ 8] = 0;\n\t    this.bytes[ 9] = 0;\n\t    this.bytes[10] = 0;\n\t\n\t    // Sometimes we're at the end of the view and have one slot to write a\n\t    // uint32, so, prepareWrite of count 4, since, view is uint8\n\t    prepareWrite(this, 4);\n\t    this.view.setUint32(this.length, this.length);\n\t    this.length += 4;\n\t    this.position += 4;\n\t\n\t    // trim down the byte buffer to what is actually being used\n\t    this.bytes = this.bytes.subarray(0, this.length);\n\t    this.frameTime = FlvTag.frameTime(this.bytes);\n\t    // if bytes.bytelength isn't equal to this.length, handle error\n\t    return this;\n\t  };\n\t};\n\t\n\tFlvTag.AUDIO_TAG = 0x08; // == 8, :uint\n\tFlvTag.VIDEO_TAG = 0x09; // == 9, :uint\n\tFlvTag.METADATA_TAG = 0x12; // == 18, :uint\n\t\n\t// (tag:ByteArray):Boolean {\n\tFlvTag.isAudioFrame = function(tag) {\n\t  return FlvTag.AUDIO_TAG === tag[0];\n\t};\n\t\n\t// (tag:ByteArray):Boolean {\n\tFlvTag.isVideoFrame = function(tag) {\n\t  return FlvTag.VIDEO_TAG === tag[0];\n\t};\n\t\n\t// (tag:ByteArray):Boolean {\n\tFlvTag.isMetaData = function(tag) {\n\t  return FlvTag.METADATA_TAG === tag[0];\n\t};\n\t\n\t// (tag:ByteArray):Boolean {\n\tFlvTag.isKeyFrame = function(tag) {\n\t  if (FlvTag.isVideoFrame(tag)) {\n\t    return tag[11] === 0x17;\n\t  }\n\t\n\t  if (FlvTag.isAudioFrame(tag)) {\n\t    return true;\n\t  }\n\t\n\t  if (FlvTag.isMetaData(tag)) {\n\t    return true;\n\t  }\n\t\n\t  return false;\n\t};\n\t\n\t// (tag:ByteArray):uint {\n\tFlvTag.frameTime = function(tag) {\n\t  var pts = tag[ 4] << 16; // :uint\n\t  pts |= tag[ 5] <<  8;\n\t  pts |= tag[ 6] <<  0;\n\t  pts |= tag[ 7] << 24;\n\t  return pts;\n\t};\n\t\n\tmodule.exports = FlvTag;\n\t\n\t},{}],75:[function(require,module,exports){\n\tmodule.exports = {\n\t  tag: require('./flv-tag'),\n\t  Transmuxer: require('./transmuxer')\n\t};\n\t\n\t},{\"./flv-tag\":74,\"./transmuxer\":76}],76:[function(require,module,exports){\n\t'use strict';\n\t\n\tvar Stream = require('../utils/stream.js');\n\tvar FlvTag = require('./flv-tag.js');\n\tvar m2ts = require('../m2ts/m2ts.js');\n\tvar AdtsStream = require('../codecs/adts.js');\n\tvar H264Stream = require('../codecs/h264').H264Stream;\n\tvar CoalesceStream = require('./coalesce-stream.js');\n\t\n\tvar\n\t  Transmuxer,\n\t  VideoSegmentStream,\n\t  AudioSegmentStream,\n\t  collectTimelineInfo,\n\t  metaDataTag,\n\t  extraDataTag;\n\t\n\t/**\n\t * Store information about the start and end of the tracka and the\n\t * duration for each frame/sample we process in order to calculate\n\t * the baseMediaDecodeTime\n\t */\n\tcollectTimelineInfo = function(track, data) {\n\t  if (typeof data.pts === 'number') {\n\t    if (track.timelineStartInfo.pts === undefined) {\n\t      track.timelineStartInfo.pts = data.pts;\n\t    } else {\n\t      track.timelineStartInfo.pts =\n\t        Math.min(track.timelineStartInfo.pts, data.pts);\n\t    }\n\t  }\n\t\n\t  if (typeof data.dts === 'number') {\n\t    if (track.timelineStartInfo.dts === undefined) {\n\t      track.timelineStartInfo.dts = data.dts;\n\t    } else {\n\t      track.timelineStartInfo.dts =\n\t        Math.min(track.timelineStartInfo.dts, data.dts);\n\t    }\n\t  }\n\t};\n\t\n\tmetaDataTag = function(track, pts) {\n\t  var\n\t    tag = new FlvTag(FlvTag.METADATA_TAG); // :FlvTag\n\t\n\t  tag.dts = pts;\n\t  tag.pts = pts;\n\t\n\t  tag.writeMetaDataDouble('videocodecid', 7);\n\t  tag.writeMetaDataDouble('width', track.width);\n\t  tag.writeMetaDataDouble('height', track.height);\n\t\n\t  return tag;\n\t};\n\t\n\textraDataTag = function(track, pts) {\n\t  var\n\t    i,\n\t    tag = new FlvTag(FlvTag.VIDEO_TAG, true);\n\t\n\t  tag.dts = pts;\n\t  tag.pts = pts;\n\t\n\t  tag.writeByte(0x01);// version\n\t  tag.writeByte(track.profileIdc);// profile\n\t  tag.writeByte(track.profileCompatibility);// compatibility\n\t  tag.writeByte(track.levelIdc);// level\n\t  tag.writeByte(0xFC | 0x03); // reserved (6 bits), NULA length size - 1 (2 bits)\n\t  tag.writeByte(0xE0 | 0x01); // reserved (3 bits), num of SPS (5 bits)\n\t  tag.writeShort(track.sps[0].length); // data of SPS\n\t  tag.writeBytes(track.sps[0]); // SPS\n\t\n\t  tag.writeByte(track.pps.length); // num of PPS (will there ever be more that 1 PPS?)\n\t  for (i = 0; i < track.pps.length; ++i) {\n\t    tag.writeShort(track.pps[i].length); // 2 bytes for length of PPS\n\t    tag.writeBytes(track.pps[i]); // data of PPS\n\t  }\n\t\n\t  return tag;\n\t};\n\t\n\t/**\n\t * Constructs a single-track, media segment from AAC data\n\t * events. The output of this stream can be fed to flash.\n\t */\n\tAudioSegmentStream = function(track) {\n\t  var\n\t    adtsFrames = [],\n\t    oldExtraData;\n\t\n\t  AudioSegmentStream.prototype.init.call(this);\n\t\n\t  this.push = function(data) {\n\t    collectTimelineInfo(track, data);\n\t\n\t    if (track && track.channelcount === undefined) {\n\t      track.audioobjecttype = data.audioobjecttype;\n\t      track.channelcount = data.channelcount;\n\t      track.samplerate = data.samplerate;\n\t      track.samplingfrequencyindex = data.samplingfrequencyindex;\n\t      track.samplesize = data.samplesize;\n\t      track.extraData = (track.audioobjecttype << 11) |\n\t                        (track.samplingfrequencyindex << 7) |\n\t                        (track.channelcount << 3);\n\t    }\n\t\n\t    data.pts = Math.round(data.pts / 90);\n\t    data.dts = Math.round(data.dts / 90);\n\t\n\t    // buffer audio data until end() is called\n\t    adtsFrames.push(data);\n\t  };\n\t\n\t  this.flush = function() {\n\t    var currentFrame, adtsFrame, lastMetaPts, tags = [];\n\t    // return early if no audio data has been observed\n\t    if (adtsFrames.length === 0) {\n\t      this.trigger('done', 'AudioSegmentStream');\n\t      return;\n\t    }\n\t\n\t    lastMetaPts = -Infinity;\n\t\n\t    while (adtsFrames.length) {\n\t      currentFrame = adtsFrames.shift();\n\t\n\t      // write out metadata tags every 1 second so that the decoder\n\t      // is re-initialized quickly after seeking into a different\n\t      // audio configuration\n\t      if (track.extraData !== oldExtraData || currentFrame.pts - lastMetaPts >= 1000) {\n\t       adtsFrame = new FlvTag(FlvTag.METADATA_TAG);\n\t        adtsFrame.pts = currentFrame.pts;\n\t        adtsFrame.dts = currentFrame.dts;\n\t\n\t        // AAC is always 10\n\t        adtsFrame.writeMetaDataDouble('audiocodecid', 10);\n\t        adtsFrame.writeMetaDataBoolean('stereo', track.channelcount === 2);\n\t        adtsFrame.writeMetaDataDouble('audiosamplerate', track.samplerate);\n\t        // Is AAC always 16 bit?\n\t        adtsFrame.writeMetaDataDouble('audiosamplesize', 16);\n\t\n\t        tags.push(adtsFrame);\n\t\n\t        oldExtraData = track.extraData;\n\t\n\t        adtsFrame = new FlvTag(FlvTag.AUDIO_TAG, true);\n\t        // For audio, DTS is always the same as PTS. We want to set the DTS\n\t        // however so we can compare with video DTS to determine approximate\n\t        // packet order\n\t        adtsFrame.pts = currentFrame.pts;\n\t        adtsFrame.dts = currentFrame.dts;\n\t\n\t        adtsFrame.view.setUint16(adtsFrame.position, track.extraData);\n\t        adtsFrame.position += 2;\n\t        adtsFrame.length = Math.max(adtsFrame.length, adtsFrame.position);\n\t\n\t        tags.push(adtsFrame);\n\t\n\t        lastMetaPts = currentFrame.pts;\n\t      }\n\t      adtsFrame = new FlvTag(FlvTag.AUDIO_TAG);\n\t      adtsFrame.pts = currentFrame.pts;\n\t      adtsFrame.dts = currentFrame.dts;\n\t\n\t      adtsFrame.writeBytes(currentFrame.data);\n\t\n\t      tags.push(adtsFrame);\n\t    }\n\t\n\t    oldExtraData = null;\n\t    this.trigger('data', {track: track, tags: tags});\n\t\n\t    this.trigger('done', 'AudioSegmentStream');\n\t  };\n\t};\n\tAudioSegmentStream.prototype = new Stream();\n\t\n\t/**\n\t * Store FlvTags for the h264 stream\n\t * @param track {object} track metadata configuration\n\t */\n\tVideoSegmentStream = function(track) {\n\t  var\n\t    nalUnits = [],\n\t    config,\n\t    h264Frame;\n\t  VideoSegmentStream.prototype.init.call(this);\n\t\n\t  this.finishFrame = function(tags, frame) {\n\t    if (!frame) {\n\t      return;\n\t    }\n\t    // Check if keyframe and the length of tags.\n\t    // This makes sure we write metadata on the first frame of a segment.\n\t    if (config && track && track.newMetadata &&\n\t        (frame.keyFrame || tags.length === 0)) {\n\t      // Push extra data on every IDR frame in case we did a stream change + seek\n\t      tags.push(metaDataTag(config, frame.dts));\n\t      tags.push(extraDataTag(track, frame.dts));\n\t      track.newMetadata = false;\n\t    }\n\t\n\t    frame.endNalUnit();\n\t    tags.push(frame);\n\t    h264Frame = null;\n\t  };\n\t\n\t  this.push = function(data) {\n\t    collectTimelineInfo(track, data);\n\t\n\t    data.pts = Math.round(data.pts / 90);\n\t    data.dts = Math.round(data.dts / 90);\n\t\n\t    // buffer video until flush() is called\n\t    nalUnits.push(data);\n\t  };\n\t\n\t  this.flush = function() {\n\t    var\n\t      currentNal,\n\t      tags = [];\n\t\n\t    // Throw away nalUnits at the start of the byte stream until we find\n\t    // the first AUD\n\t    while (nalUnits.length) {\n\t      if (nalUnits[0].nalUnitType === 'access_unit_delimiter_rbsp') {\n\t        break;\n\t      }\n\t      nalUnits.shift();\n\t    }\n\t\n\t    // return early if no video data has been observed\n\t    if (nalUnits.length === 0) {\n\t      this.trigger('done', 'VideoSegmentStream');\n\t      return;\n\t    }\n\t\n\t    while (nalUnits.length) {\n\t      currentNal = nalUnits.shift();\n\t\n\t      // record the track config\n\t      if (currentNal.nalUnitType === 'seq_parameter_set_rbsp') {\n\t        track.newMetadata = true;\n\t        config = currentNal.config;\n\t        track.width = config.width;\n\t        track.height = config.height;\n\t        track.sps = [currentNal.data];\n\t        track.profileIdc = config.profileIdc;\n\t        track.levelIdc = config.levelIdc;\n\t        track.profileCompatibility = config.profileCompatibility;\n\t        h264Frame.endNalUnit();\n\t      } else if (currentNal.nalUnitType === 'pic_parameter_set_rbsp') {\n\t        track.newMetadata = true;\n\t        track.pps = [currentNal.data];\n\t        h264Frame.endNalUnit();\n\t      } else if (currentNal.nalUnitType === 'access_unit_delimiter_rbsp') {\n\t        if (h264Frame) {\n\t          this.finishFrame(tags, h264Frame);\n\t        }\n\t        h264Frame = new FlvTag(FlvTag.VIDEO_TAG);\n\t        h264Frame.pts = currentNal.pts;\n\t        h264Frame.dts = currentNal.dts;\n\t      } else {\n\t        if (currentNal.nalUnitType === 'slice_layer_without_partitioning_rbsp_idr') {\n\t          // the current sample is a key frame\n\t          h264Frame.keyFrame = true;\n\t        }\n\t        h264Frame.endNalUnit();\n\t      }\n\t      h264Frame.startNalUnit();\n\t      h264Frame.writeBytes(currentNal.data);\n\t    }\n\t    if (h264Frame) {\n\t      this.finishFrame(tags, h264Frame);\n\t    }\n\t\n\t    this.trigger('data', {track: track, tags: tags});\n\t\n\t    // Continue with the flush process now\n\t    this.trigger('done', 'VideoSegmentStream');\n\t  };\n\t};\n\t\n\tVideoSegmentStream.prototype = new Stream();\n\t\n\t/**\n\t * An object that incrementally transmuxes MPEG2 Trasport Stream\n\t * chunks into an FLV.\n\t */\n\tTransmuxer = function(options) {\n\t  var\n\t    self = this,\n\t\n\t    packetStream, parseStream, elementaryStream,\n\t    videoTimestampRolloverStream, audioTimestampRolloverStream,\n\t    timedMetadataTimestampRolloverStream,\n\t    adtsStream, h264Stream,\n\t    videoSegmentStream, audioSegmentStream, captionStream,\n\t    coalesceStream;\n\t\n\t  Transmuxer.prototype.init.call(this);\n\t\n\t  options = options || {};\n\t\n\t  // expose the metadata stream\n\t  this.metadataStream = new m2ts.MetadataStream();\n\t\n\t  options.metadataStream = this.metadataStream;\n\t\n\t  // set up the parsing pipeline\n\t  packetStream = new m2ts.TransportPacketStream();\n\t  parseStream = new m2ts.TransportParseStream();\n\t  elementaryStream = new m2ts.ElementaryStream();\n\t  videoTimestampRolloverStream = new m2ts.TimestampRolloverStream('video');\n\t  audioTimestampRolloverStream = new m2ts.TimestampRolloverStream('audio');\n\t  timedMetadataTimestampRolloverStream = new m2ts.TimestampRolloverStream('timed-metadata');\n\t\n\t  adtsStream = new AdtsStream();\n\t  h264Stream = new H264Stream();\n\t  coalesceStream = new CoalesceStream(options);\n\t\n\t  // disassemble MPEG2-TS packets into elementary streams\n\t  packetStream\n\t    .pipe(parseStream)\n\t    .pipe(elementaryStream);\n\t\n\t  // !!THIS ORDER IS IMPORTANT!!\n\t  // demux the streams\n\t  elementaryStream\n\t    .pipe(videoTimestampRolloverStream)\n\t    .pipe(h264Stream);\n\t  elementaryStream\n\t    .pipe(audioTimestampRolloverStream)\n\t    .pipe(adtsStream);\n\t\n\t  elementaryStream\n\t    .pipe(timedMetadataTimestampRolloverStream)\n\t    .pipe(this.metadataStream)\n\t    .pipe(coalesceStream);\n\t  // if CEA-708 parsing is available, hook up a caption stream\n\t  captionStream = new m2ts.CaptionStream();\n\t  h264Stream.pipe(captionStream)\n\t    .pipe(coalesceStream);\n\t\n\t  // hook up the segment streams once track metadata is delivered\n\t  elementaryStream.on('data', function(data) {\n\t    var i, videoTrack, audioTrack;\n\t\n\t    if (data.type === 'metadata') {\n\t      i = data.tracks.length;\n\t\n\t      // scan the tracks listed in the metadata\n\t      while (i--) {\n\t        if (data.tracks[i].type === 'video') {\n\t          videoTrack = data.tracks[i];\n\t        } else if (data.tracks[i].type === 'audio') {\n\t          audioTrack = data.tracks[i];\n\t        }\n\t      }\n\t\n\t      // hook up the video segment stream to the first track with h264 data\n\t      if (videoTrack && !videoSegmentStream) {\n\t        coalesceStream.numberOfTracks++;\n\t        videoSegmentStream = new VideoSegmentStream(videoTrack);\n\t\n\t        // Set up the final part of the video pipeline\n\t        h264Stream\n\t          .pipe(videoSegmentStream)\n\t          .pipe(coalesceStream);\n\t      }\n\t\n\t      if (audioTrack && !audioSegmentStream) {\n\t        // hook up the audio segment stream to the first track with aac data\n\t        coalesceStream.numberOfTracks++;\n\t        audioSegmentStream = new AudioSegmentStream(audioTrack);\n\t\n\t        // Set up the final part of the audio pipeline\n\t        adtsStream\n\t          .pipe(audioSegmentStream)\n\t          .pipe(coalesceStream);\n\t      }\n\t    }\n\t  });\n\t\n\t  // feed incoming data to the front of the parsing pipeline\n\t  this.push = function(data) {\n\t    packetStream.push(data);\n\t  };\n\t\n\t  // flush any buffered data\n\t  this.flush = function() {\n\t    // Start at the top of the pipeline and flush all pending work\n\t    packetStream.flush();\n\t  };\n\t\n\t  // Re-emit any data coming from the coalesce stream to the outside world\n\t  coalesceStream.on('data', function(event) {\n\t    self.trigger('data', event);\n\t  });\n\t\n\t  // Let the consumer know we have finished flushing the entire pipeline\n\t  coalesceStream.on('done', function() {\n\t    self.trigger('done');\n\t  });\n\t\n\t  // For information on the FLV format, see\n\t  // http://download.macromedia.com/f4v/video_file_format_spec_v10_1.pdf.\n\t  // Technically, this function returns the header and a metadata FLV tag\n\t  // if duration is greater than zero\n\t  // duration in seconds\n\t  // @return {object} the bytes of the FLV header as a Uint8Array\n\t  this.getFlvHeader = function(duration, audio, video) { // :ByteArray {\n\t    var\n\t      headBytes = new Uint8Array(3 + 1 + 1 + 4),\n\t      head = new DataView(headBytes.buffer),\n\t      metadata,\n\t      result,\n\t      metadataLength;\n\t\n\t    // default arguments\n\t    duration = duration || 0;\n\t    audio = audio === undefined ? true : audio;\n\t    video = video === undefined ? true : video;\n\t\n\t    // signature\n\t    head.setUint8(0, 0x46); // 'F'\n\t    head.setUint8(1, 0x4c); // 'L'\n\t    head.setUint8(2, 0x56); // 'V'\n\t\n\t    // version\n\t    head.setUint8(3, 0x01);\n\t\n\t    // flags\n\t    head.setUint8(4, (audio ? 0x04 : 0x00) | (video ? 0x01 : 0x00));\n\t\n\t    // data offset, should be 9 for FLV v1\n\t    head.setUint32(5, headBytes.byteLength);\n\t\n\t    // init the first FLV tag\n\t    if (duration <= 0) {\n\t      // no duration available so just write the first field of the first\n\t      // FLV tag\n\t      result = new Uint8Array(headBytes.byteLength + 4);\n\t      result.set(headBytes);\n\t      result.set([0, 0, 0, 0], headBytes.byteLength);\n\t      return result;\n\t    }\n\t\n\t    // write out the duration metadata tag\n\t    metadata = new FlvTag(FlvTag.METADATA_TAG);\n\t    metadata.pts = metadata.dts = 0;\n\t    metadata.writeMetaDataDouble('duration', duration);\n\t    metadataLength = metadata.finalize().length;\n\t    result = new Uint8Array(headBytes.byteLength + metadataLength);\n\t    result.set(headBytes);\n\t    result.set(head.byteLength, metadataLength);\n\t\n\t    return result;\n\t  };\n\t};\n\tTransmuxer.prototype = new Stream();\n\t\n\t// forward compatibility\n\tmodule.exports = Transmuxer;\n\t\n\t},{\"../codecs/adts.js\":71,\"../codecs/h264\":72,\"../m2ts/m2ts.js\":78,\"../utils/stream.js\":89,\"./coalesce-stream.js\":73,\"./flv-tag.js\":74}],77:[function(require,module,exports){\n\t/**\n\t * mux.js\n\t *\n\t * Copyright (c) 2015 Brightcove\n\t * All rights reserved.\n\t *\n\t * Reads in-band caption information from a video elementary\n\t * stream. Captions must follow the CEA-708 standard for injection\n\t * into an MPEG-2 transport streams.\n\t * @see https://en.wikipedia.org/wiki/CEA-708\n\t */\n\t\n\t'use strict';\n\t\n\t// -----------------\n\t// Link To Transport\n\t// -----------------\n\t\n\t// Supplemental enhancement information (SEI) NAL units have a\n\t// payload type field to indicate how they are to be\n\t// interpreted. CEAS-708 caption content is always transmitted with\n\t// payload type 0x04.\n\tvar USER_DATA_REGISTERED_ITU_T_T35 = 4,\n\t    RBSP_TRAILING_BITS = 128,\n\t    Stream = require('../utils/stream');\n\t\n\t/**\n\t  * Parse a supplemental enhancement information (SEI) NAL unit.\n\t  * Stops parsing once a message of type ITU T T35 has been found.\n\t  *\n\t  * @param bytes {Uint8Array} the bytes of a SEI NAL unit\n\t  * @return {object} the parsed SEI payload\n\t  * @see Rec. ITU-T H.264, 7.3.2.3.1\n\t  */\n\tvar parseSei = function(bytes) {\n\t  var\n\t    i = 0,\n\t    result = {\n\t      payloadType: -1,\n\t      payloadSize: 0\n\t    },\n\t    payloadType = 0,\n\t    payloadSize = 0;\n\t\n\t  // go through the sei_rbsp parsing each each individual sei_message\n\t  while (i < bytes.byteLength) {\n\t    // stop once we have hit the end of the sei_rbsp\n\t    if (bytes[i] === RBSP_TRAILING_BITS) {\n\t      break;\n\t    }\n\t\n\t    // Parse payload type\n\t    while (bytes[i] === 0xFF) {\n\t      payloadType += 255;\n\t      i++;\n\t    }\n\t    payloadType += bytes[i++];\n\t\n\t    // Parse payload size\n\t    while (bytes[i] === 0xFF) {\n\t      payloadSize += 255;\n\t      i++;\n\t    }\n\t    payloadSize += bytes[i++];\n\t\n\t    // this sei_message is a 608/708 caption so save it and break\n\t    // there can only ever be one caption message in a frame's sei\n\t    if (!result.payload && payloadType === USER_DATA_REGISTERED_ITU_T_T35) {\n\t      result.payloadType = payloadType;\n\t      result.payloadSize = payloadSize;\n\t      result.payload = bytes.subarray(i, i + payloadSize);\n\t      break;\n\t    }\n\t\n\t    // skip the payload and parse the next message\n\t    i += payloadSize;\n\t    payloadType = 0;\n\t    payloadSize = 0;\n\t  }\n\t\n\t  return result;\n\t};\n\t\n\t// see ANSI/SCTE 128-1 (2013), section 8.1\n\tvar parseUserData = function(sei) {\n\t  // itu_t_t35_contry_code must be 181 (United States) for\n\t  // captions\n\t  if (sei.payload[0] !== 181) {\n\t    return null;\n\t  }\n\t\n\t  // itu_t_t35_provider_code should be 49 (ATSC) for captions\n\t  if (((sei.payload[1] << 8) | sei.payload[2]) !== 49) {\n\t    return null;\n\t  }\n\t\n\t  // the user_identifier should be \"GA94\" to indicate ATSC1 data\n\t  if (String.fromCharCode(sei.payload[3],\n\t                          sei.payload[4],\n\t                          sei.payload[5],\n\t                          sei.payload[6]) !== 'GA94') {\n\t    return null;\n\t  }\n\t\n\t  // finally, user_data_type_code should be 0x03 for caption data\n\t  if (sei.payload[7] !== 0x03) {\n\t    return null;\n\t  }\n\t\n\t  // return the user_data_type_structure and strip the trailing\n\t  // marker bits\n\t  return sei.payload.subarray(8, sei.payload.length - 1);\n\t};\n\t\n\t// see CEA-708-D, section 4.4\n\tvar parseCaptionPackets = function(pts, userData) {\n\t  var results = [], i, count, offset, data;\n\t\n\t  // if this is just filler, return immediately\n\t  if (!(userData[0] & 0x40)) {\n\t    return results;\n\t  }\n\t\n\t  // parse out the cc_data_1 and cc_data_2 fields\n\t  count = userData[0] & 0x1f;\n\t  for (i = 0; i < count; i++) {\n\t    offset = i * 3;\n\t    data = {\n\t      type: userData[offset + 2] & 0x03,\n\t      pts: pts\n\t    };\n\t\n\t    // capture cc data when cc_valid is 1\n\t    if (userData[offset + 2] & 0x04) {\n\t      data.ccData = (userData[offset + 3] << 8) | userData[offset + 4];\n\t      results.push(data);\n\t    }\n\t  }\n\t  return results;\n\t};\n\t\n\tvar CaptionStream = function() {\n\t  CaptionStream.prototype.init.call(this);\n\t\n\t  this.captionPackets_ = [];\n\t\n\t  this.field1_ = new Cea608Stream(); // eslint-disable-line no-use-before-define\n\t\n\t  // forward data and done events from field1_ to this CaptionStream\n\t  this.field1_.on('data', this.trigger.bind(this, 'data'));\n\t  this.field1_.on('done', this.trigger.bind(this, 'done'));\n\t};\n\tCaptionStream.prototype = new Stream();\n\tCaptionStream.prototype.push = function(event) {\n\t  var sei, userData;\n\t\n\t  // only examine SEI NALs\n\t  if (event.nalUnitType !== 'sei_rbsp') {\n\t    return;\n\t  }\n\t\n\t  // parse the sei\n\t  sei = parseSei(event.escapedRBSP);\n\t\n\t  // ignore everything but user_data_registered_itu_t_t35\n\t  if (sei.payloadType !== USER_DATA_REGISTERED_ITU_T_T35) {\n\t    return;\n\t  }\n\t\n\t  // parse out the user data payload\n\t  userData = parseUserData(sei);\n\t\n\t  // ignore unrecognized userData\n\t  if (!userData) {\n\t    return;\n\t  }\n\t\n\t  // parse out CC data packets and save them for later\n\t  this.captionPackets_ = this.captionPackets_.concat(parseCaptionPackets(event.pts, userData));\n\t};\n\t\n\tCaptionStream.prototype.flush = function() {\n\t  // make sure we actually parsed captions before proceeding\n\t  if (!this.captionPackets_.length) {\n\t    this.field1_.flush();\n\t    return;\n\t  }\n\t\n\t  // In Chrome, the Array#sort function is not stable so add a\n\t  // presortIndex that we can use to ensure we get a stable-sort\n\t  this.captionPackets_.forEach(function(elem, idx) {\n\t    elem.presortIndex = idx;\n\t  });\n\t\n\t  // sort caption byte-pairs based on their PTS values\n\t  this.captionPackets_.sort(function(a, b) {\n\t    if (a.pts === b.pts) {\n\t      return a.presortIndex - b.presortIndex;\n\t    }\n\t    return a.pts - b.pts;\n\t  });\n\t\n\t  // Push each caption into Cea608Stream\n\t  this.captionPackets_.forEach(this.field1_.push, this.field1_);\n\t\n\t  this.captionPackets_.length = 0;\n\t  this.field1_.flush();\n\t  return;\n\t};\n\t// ----------------------\n\t// Session to Application\n\t// ----------------------\n\t\n\tvar BASIC_CHARACTER_TRANSLATION = {\n\t  0x2a: 0xe1,\n\t  0x5c: 0xe9,\n\t  0x5e: 0xed,\n\t  0x5f: 0xf3,\n\t  0x60: 0xfa,\n\t  0x7b: 0xe7,\n\t  0x7c: 0xf7,\n\t  0x7d: 0xd1,\n\t  0x7e: 0xf1,\n\t  0x7f: 0x2588\n\t};\n\t\n\tvar getCharFromCode = function(code) {\n\t  if (code === null) {\n\t    return '';\n\t  }\n\t  code = BASIC_CHARACTER_TRANSLATION[code] || code;\n\t  return String.fromCharCode(code);\n\t};\n\t\n\t// Constants for the byte codes recognized by Cea608Stream. This\n\t// list is not exhaustive. For a more comprehensive listing and\n\t// semantics see\n\t// http://www.gpo.gov/fdsys/pkg/CFR-2010-title47-vol1/pdf/CFR-2010-title47-vol1-sec15-119.pdf\n\tvar PADDING                    = 0x0000,\n\t\n\t    // Pop-on Mode\n\t    RESUME_CAPTION_LOADING     = 0x1420,\n\t    END_OF_CAPTION             = 0x142f,\n\t\n\t    // Roll-up Mode\n\t    ROLL_UP_2_ROWS             = 0x1425,\n\t    ROLL_UP_3_ROWS             = 0x1426,\n\t    ROLL_UP_4_ROWS             = 0x1427,\n\t    CARRIAGE_RETURN            = 0x142d,\n\t    // Erasure\n\t    BACKSPACE                  = 0x1421,\n\t    ERASE_DISPLAYED_MEMORY     = 0x142c,\n\t    ERASE_NON_DISPLAYED_MEMORY = 0x142e;\n\t\n\t// the index of the last row in a CEA-608 display buffer\n\tvar BOTTOM_ROW = 14;\n\t// CEA-608 captions are rendered onto a 34x15 matrix of character\n\t// cells. The \"bottom\" row is the last element in the outer array.\n\tvar createDisplayBuffer = function() {\n\t  var result = [], i = BOTTOM_ROW + 1;\n\t  while (i--) {\n\t    result.push('');\n\t  }\n\t  return result;\n\t};\n\t\n\tvar Cea608Stream = function() {\n\t  Cea608Stream.prototype.init.call(this);\n\t\n\t  this.mode_ = 'popOn';\n\t  // When in roll-up mode, the index of the last row that will\n\t  // actually display captions. If a caption is shifted to a row\n\t  // with a lower index than this, it is cleared from the display\n\t  // buffer\n\t  this.topRow_ = 0;\n\t  this.startPts_ = 0;\n\t  this.displayed_ = createDisplayBuffer();\n\t  this.nonDisplayed_ = createDisplayBuffer();\n\t  this.lastControlCode_ = null;\n\t\n\t  this.push = function(packet) {\n\t    // Ignore other channels\n\t    if (packet.type !== 0) {\n\t      return;\n\t    }\n\t    var data, swap, char0, char1;\n\t    // remove the parity bits\n\t    data = packet.ccData & 0x7f7f;\n\t\n\t    // ignore duplicate control codes\n\t    if (data === this.lastControlCode_) {\n\t      this.lastControlCode_ = null;\n\t      return;\n\t    }\n\t\n\t    // Store control codes\n\t    if ((data & 0xf000) === 0x1000) {\n\t      this.lastControlCode_ = data;\n\t    } else {\n\t      this.lastControlCode_ = null;\n\t    }\n\t\n\t    switch (data) {\n\t    case PADDING:\n\t      break;\n\t    case RESUME_CAPTION_LOADING:\n\t      this.mode_ = 'popOn';\n\t      break;\n\t    case END_OF_CAPTION:\n\t      // if a caption was being displayed, it's gone now\n\t      this.flushDisplayed(packet.pts);\n\t\n\t      // flip memory\n\t      swap = this.displayed_;\n\t      this.displayed_ = this.nonDisplayed_;\n\t      this.nonDisplayed_ = swap;\n\t\n\t      // start measuring the time to display the caption\n\t      this.startPts_ = packet.pts;\n\t      break;\n\t\n\t    case ROLL_UP_2_ROWS:\n\t      this.topRow_ = BOTTOM_ROW - 1;\n\t      this.mode_ = 'rollUp';\n\t      break;\n\t    case ROLL_UP_3_ROWS:\n\t      this.topRow_ = BOTTOM_ROW - 2;\n\t      this.mode_ = 'rollUp';\n\t      break;\n\t    case ROLL_UP_4_ROWS:\n\t      this.topRow_ = BOTTOM_ROW - 3;\n\t      this.mode_ = 'rollUp';\n\t      break;\n\t    case CARRIAGE_RETURN:\n\t      this.flushDisplayed(packet.pts);\n\t      this.shiftRowsUp_();\n\t      this.startPts_ = packet.pts;\n\t      break;\n\t\n\t    case BACKSPACE:\n\t      if (this.mode_ === 'popOn') {\n\t        this.nonDisplayed_[BOTTOM_ROW] = this.nonDisplayed_[BOTTOM_ROW].slice(0, -1);\n\t      } else {\n\t        this.displayed_[BOTTOM_ROW] = this.displayed_[BOTTOM_ROW].slice(0, -1);\n\t      }\n\t      break;\n\t    case ERASE_DISPLAYED_MEMORY:\n\t      this.flushDisplayed(packet.pts);\n\t      this.displayed_ = createDisplayBuffer();\n\t      break;\n\t    case ERASE_NON_DISPLAYED_MEMORY:\n\t      this.nonDisplayed_ = createDisplayBuffer();\n\t      break;\n\t    default:\n\t      char0 = data >>> 8;\n\t      char1 = data & 0xff;\n\t\n\t      // Look for a Channel 1 Preamble Address Code\n\t      if (char0 >= 0x10 && char0 <= 0x17 &&\n\t          char1 >= 0x40 && char1 <= 0x7F &&\n\t          (char0 !== 0x10 || char1 < 0x60)) {\n\t        // Follow Safari's lead and replace the PAC with a space\n\t        char0 = 0x20;\n\t        // we only want one space so make the second character null\n\t        // which will get become '' in getCharFromCode\n\t        char1 = null;\n\t      }\n\t\n\t      // Look for special character sets\n\t      if ((char0 === 0x11 || char0 === 0x19) &&\n\t          (char1 >= 0x30 && char1 <= 0x3F)) {\n\t        // Put in eigth note and space\n\t        char0 = 0x266A;\n\t        char1 = '';\n\t      }\n\t\n\t      // ignore unsupported control codes\n\t      if ((char0 & 0xf0) === 0x10) {\n\t        return;\n\t      }\n\t\n\t      // character handling is dependent on the current mode\n\t      this[this.mode_](packet.pts, char0, char1);\n\t      break;\n\t    }\n\t  };\n\t};\n\tCea608Stream.prototype = new Stream();\n\t// Trigger a cue point that captures the current state of the\n\t// display buffer\n\tCea608Stream.prototype.flushDisplayed = function(pts) {\n\t  var content = this.displayed_\n\t    // remove spaces from the start and end of the string\n\t    .map(function(row) {\n\t      return row.trim();\n\t    })\n\t    // remove empty rows\n\t    .filter(function(row) {\n\t      return row.length;\n\t    })\n\t    // combine all text rows to display in one cue\n\t    .join('\\n');\n\t\n\t  if (content.length) {\n\t    this.trigger('data', {\n\t      startPts: this.startPts_,\n\t      endPts: pts,\n\t      text: content\n\t    });\n\t  }\n\t};\n\t\n\t// Mode Implementations\n\tCea608Stream.prototype.popOn = function(pts, char0, char1) {\n\t  var baseRow = this.nonDisplayed_[BOTTOM_ROW];\n\t\n\t  // buffer characters\n\t  baseRow += getCharFromCode(char0);\n\t  baseRow += getCharFromCode(char1);\n\t  this.nonDisplayed_[BOTTOM_ROW] = baseRow;\n\t};\n\t\n\tCea608Stream.prototype.rollUp = function(pts, char0, char1) {\n\t  var baseRow = this.displayed_[BOTTOM_ROW];\n\t  if (baseRow === '') {\n\t    // we're starting to buffer new display input, so flush out the\n\t    // current display\n\t    this.flushDisplayed(pts);\n\t\n\t    this.startPts_ = pts;\n\t  }\n\t\n\t  baseRow += getCharFromCode(char0);\n\t  baseRow += getCharFromCode(char1);\n\t\n\t  this.displayed_[BOTTOM_ROW] = baseRow;\n\t};\n\tCea608Stream.prototype.shiftRowsUp_ = function() {\n\t  var i;\n\t  // clear out inactive rows\n\t  for (i = 0; i < this.topRow_; i++) {\n\t    this.displayed_[i] = '';\n\t  }\n\t  // shift displayed rows up\n\t  for (i = this.topRow_; i < BOTTOM_ROW; i++) {\n\t    this.displayed_[i] = this.displayed_[i + 1];\n\t  }\n\t  // clear out the bottom row\n\t  this.displayed_[BOTTOM_ROW] = '';\n\t};\n\t\n\t// exports\n\tmodule.exports = {\n\t  CaptionStream: CaptionStream,\n\t  Cea608Stream: Cea608Stream\n\t};\n\t\n\t},{\"../utils/stream\":89}],78:[function(require,module,exports){\n\t/**\n\t * mux.js\n\t *\n\t * Copyright (c) 2015 Brightcove\n\t * All rights reserved.\n\t *\n\t * A stream-based mp2t to mp4 converter. This utility can be used to\n\t * deliver mp4s to a SourceBuffer on platforms that support native\n\t * Media Source Extensions.\n\t */\n\t'use strict';\n\tvar Stream = require('../utils/stream.js'),\n\t  CaptionStream = require('./caption-stream'),\n\t  StreamTypes = require('./stream-types'),\n\t  TimestampRolloverStream = require('./timestamp-rollover-stream').TimestampRolloverStream;\n\t\n\tvar m2tsStreamTypes = require('./stream-types.js');\n\t\n\t// object types\n\tvar TransportPacketStream, TransportParseStream, ElementaryStream;\n\t\n\t// constants\n\tvar\n\t  MP2T_PACKET_LENGTH = 188, // bytes\n\t  SYNC_BYTE = 0x47;\n\t\n\t/**\n\t * Splits an incoming stream of binary data into MPEG-2 Transport\n\t * Stream packets.\n\t */\n\tTransportPacketStream = function() {\n\t  var\n\t    buffer = new Uint8Array(MP2T_PACKET_LENGTH),\n\t    bytesInBuffer = 0;\n\t\n\t  TransportPacketStream.prototype.init.call(this);\n\t\n\t   // Deliver new bytes to the stream.\n\t\n\t  this.push = function(bytes) {\n\t    var\n\t      startIndex = 0,\n\t      endIndex = MP2T_PACKET_LENGTH,\n\t      everything;\n\t\n\t    // If there are bytes remaining from the last segment, prepend them to the\n\t    // bytes that were pushed in\n\t    if (bytesInBuffer) {\n\t      everything = new Uint8Array(bytes.byteLength + bytesInBuffer);\n\t      everything.set(buffer.subarray(0, bytesInBuffer));\n\t      everything.set(bytes, bytesInBuffer);\n\t      bytesInBuffer = 0;\n\t    } else {\n\t      everything = bytes;\n\t    }\n\t\n\t    // While we have enough data for a packet\n\t    while (endIndex < everything.byteLength) {\n\t      // Look for a pair of start and end sync bytes in the data..\n\t      if (everything[startIndex] === SYNC_BYTE && everything[endIndex] === SYNC_BYTE) {\n\t        // We found a packet so emit it and jump one whole packet forward in\n\t        // the stream\n\t        this.trigger('data', everything.subarray(startIndex, endIndex));\n\t        startIndex += MP2T_PACKET_LENGTH;\n\t        endIndex += MP2T_PACKET_LENGTH;\n\t        continue;\n\t      }\n\t      // If we get here, we have somehow become de-synchronized and we need to step\n\t      // forward one byte at a time until we find a pair of sync bytes that denote\n\t      // a packet\n\t      startIndex++;\n\t      endIndex++;\n\t    }\n\t\n\t    // If there was some data left over at the end of the segment that couldn't\n\t    // possibly be a whole packet, keep it because it might be the start of a packet\n\t    // that continues in the next segment\n\t    if (startIndex < everything.byteLength) {\n\t      buffer.set(everything.subarray(startIndex), 0);\n\t      bytesInBuffer = everything.byteLength - startIndex;\n\t    }\n\t  };\n\t\n\t  this.flush = function() {\n\t    // If the buffer contains a whole packet when we are being flushed, emit it\n\t    // and empty the buffer. Otherwise hold onto the data because it may be\n\t    // important for decoding the next segment\n\t    if (bytesInBuffer === MP2T_PACKET_LENGTH && buffer[0] === SYNC_BYTE) {\n\t      this.trigger('data', buffer);\n\t      bytesInBuffer = 0;\n\t    }\n\t    this.trigger('done');\n\t  };\n\t};\n\tTransportPacketStream.prototype = new Stream();\n\t\n\t/**\n\t * Accepts an MP2T TransportPacketStream and emits data events with parsed\n\t * forms of the individual transport stream packets.\n\t */\n\tTransportParseStream = function() {\n\t  var parsePsi, parsePat, parsePmt, self;\n\t  TransportParseStream.prototype.init.call(this);\n\t  self = this;\n\t\n\t  this.packetsWaitingForPmt = [];\n\t  this.programMapTable = undefined;\n\t\n\t  parsePsi = function(payload, psi) {\n\t    var offset = 0;\n\t\n\t    // PSI packets may be split into multiple sections and those\n\t    // sections may be split into multiple packets. If a PSI\n\t    // section starts in this packet, the payload_unit_start_indicator\n\t    // will be true and the first byte of the payload will indicate\n\t    // the offset from the current position to the start of the\n\t    // section.\n\t    if (psi.payloadUnitStartIndicator) {\n\t      offset += payload[offset] + 1;\n\t    }\n\t\n\t    if (psi.type === 'pat') {\n\t      parsePat(payload.subarray(offset), psi);\n\t    } else {\n\t      parsePmt(payload.subarray(offset), psi);\n\t    }\n\t  };\n\t\n\t  parsePat = function(payload, pat) {\n\t    pat.section_number = payload[7]; // eslint-disable-line camelcase\n\t    pat.last_section_number = payload[8]; // eslint-disable-line camelcase\n\t\n\t    // skip the PSI header and parse the first PMT entry\n\t    self.pmtPid = (payload[10] & 0x1F) << 8 | payload[11];\n\t    pat.pmtPid = self.pmtPid;\n\t  };\n\t\n\t  /**\n\t   * Parse out the relevant fields of a Program Map Table (PMT).\n\t   * @param payload {Uint8Array} the PMT-specific portion of an MP2T\n\t   * packet. The first byte in this array should be the table_id\n\t   * field.\n\t   * @param pmt {object} the object that should be decorated with\n\t   * fields parsed from the PMT.\n\t   */\n\t  parsePmt = function(payload, pmt) {\n\t    var sectionLength, tableEnd, programInfoLength, offset;\n\t\n\t    // PMTs can be sent ahead of the time when they should actually\n\t    // take effect. We don't believe this should ever be the case\n\t    // for HLS but we'll ignore \"forward\" PMT declarations if we see\n\t    // them. Future PMT declarations have the current_next_indicator\n\t    // set to zero.\n\t    if (!(payload[5] & 0x01)) {\n\t      return;\n\t    }\n\t\n\t    // overwrite any existing program map table\n\t    self.programMapTable = {};\n\t\n\t    // the mapping table ends at the end of the current section\n\t    sectionLength = (payload[1] & 0x0f) << 8 | payload[2];\n\t    tableEnd = 3 + sectionLength - 4;\n\t\n\t    // to determine where the table is, we have to figure out how\n\t    // long the program info descriptors are\n\t    programInfoLength = (payload[10] & 0x0f) << 8 | payload[11];\n\t\n\t    // advance the offset to the first entry in the mapping table\n\t    offset = 12 + programInfoLength;\n\t    while (offset < tableEnd) {\n\t      // add an entry that maps the elementary_pid to the stream_type\n\t      self.programMapTable[(payload[offset + 1] & 0x1F) << 8 | payload[offset + 2]] = payload[offset];\n\t\n\t      // move to the next table entry\n\t      // skip past the elementary stream descriptors, if present\n\t      offset += ((payload[offset + 3] & 0x0F) << 8 | payload[offset + 4]) + 5;\n\t    }\n\t\n\t    // record the map on the packet as well\n\t    pmt.programMapTable = self.programMapTable;\n\t\n\t    // if there are any packets waiting for a PMT to be found, process them now\n\t    while (self.packetsWaitingForPmt.length) {\n\t      self.processPes_.apply(self, self.packetsWaitingForPmt.shift());\n\t    }\n\t  };\n\t\n\t  /**\n\t   * Deliver a new MP2T packet to the stream.\n\t   */\n\t  this.push = function(packet) {\n\t    var\n\t      result = {},\n\t      offset = 4;\n\t\n\t    result.payloadUnitStartIndicator = !!(packet[1] & 0x40);\n\t\n\t    // pid is a 13-bit field starting at the last bit of packet[1]\n\t    result.pid = packet[1] & 0x1f;\n\t    result.pid <<= 8;\n\t    result.pid |= packet[2];\n\t\n\t    // if an adaption field is present, its length is specified by the\n\t    // fifth byte of the TS packet header. The adaptation field is\n\t    // used to add stuffing to PES packets that don't fill a complete\n\t    // TS packet, and to specify some forms of timing and control data\n\t    // that we do not currently use.\n\t    if (((packet[3] & 0x30) >>> 4) > 0x01) {\n\t      offset += packet[offset] + 1;\n\t    }\n\t\n\t    // parse the rest of the packet based on the type\n\t    if (result.pid === 0) {\n\t      result.type = 'pat';\n\t      parsePsi(packet.subarray(offset), result);\n\t      this.trigger('data', result);\n\t    } else if (result.pid === this.pmtPid) {\n\t      result.type = 'pmt';\n\t      parsePsi(packet.subarray(offset), result);\n\t      this.trigger('data', result);\n\t    } else if (this.programMapTable === undefined) {\n\t      // When we have not seen a PMT yet, defer further processing of\n\t      // PES packets until one has been parsed\n\t      this.packetsWaitingForPmt.push([packet, offset, result]);\n\t    } else {\n\t      this.processPes_(packet, offset, result);\n\t    }\n\t  };\n\t\n\t  this.processPes_ = function(packet, offset, result) {\n\t    result.streamType = this.programMapTable[result.pid];\n\t    result.type = 'pes';\n\t    result.data = packet.subarray(offset);\n\t\n\t    this.trigger('data', result);\n\t  };\n\t\n\t};\n\tTransportParseStream.prototype = new Stream();\n\tTransportParseStream.STREAM_TYPES  = {\n\t  h264: 0x1b,\n\t  adts: 0x0f\n\t};\n\t\n\t/**\n\t * Reconsistutes program elementary stream (PES) packets from parsed\n\t * transport stream packets. That is, if you pipe an\n\t * mp2t.TransportParseStream into a mp2t.ElementaryStream, the output\n\t * events will be events which capture the bytes for individual PES\n\t * packets plus relevant metadata that has been extracted from the\n\t * container.\n\t */\n\tElementaryStream = function() {\n\t  var\n\t    self = this,\n\t    // PES packet fragments\n\t    video = {\n\t      data: [],\n\t      size: 0\n\t    },\n\t    audio = {\n\t      data: [],\n\t      size: 0\n\t    },\n\t    timedMetadata = {\n\t      data: [],\n\t      size: 0\n\t    },\n\t    parsePes = function(payload, pes) {\n\t      var ptsDtsFlags;\n\t\n\t      // find out if this packets starts a new keyframe\n\t      pes.dataAlignmentIndicator = (payload[6] & 0x04) !== 0;\n\t      // PES packets may be annotated with a PTS value, or a PTS value\n\t      // and a DTS value. Determine what combination of values is\n\t      // available to work with.\n\t      ptsDtsFlags = payload[7];\n\t\n\t      // PTS and DTS are normally stored as a 33-bit number.  Javascript\n\t      // performs all bitwise operations on 32-bit integers but javascript\n\t      // supports a much greater range (52-bits) of integer using standard\n\t      // mathematical operations.\n\t      // We construct a 31-bit value using bitwise operators over the 31\n\t      // most significant bits and then multiply by 4 (equal to a left-shift\n\t      // of 2) before we add the final 2 least significant bits of the\n\t      // timestamp (equal to an OR.)\n\t      if (ptsDtsFlags & 0xC0) {\n\t        // the PTS and DTS are not written out directly. For information\n\t        // on how they are encoded, see\n\t        // http://dvd.sourceforge.net/dvdinfo/pes-hdr.html\n\t        pes.pts = (payload[9] & 0x0E) << 27 |\n\t          (payload[10] & 0xFF) << 20 |\n\t          (payload[11] & 0xFE) << 12 |\n\t          (payload[12] & 0xFF) <<  5 |\n\t          (payload[13] & 0xFE) >>>  3;\n\t        pes.pts *= 4; // Left shift by 2\n\t        pes.pts += (payload[13] & 0x06) >>> 1; // OR by the two LSBs\n\t        pes.dts = pes.pts;\n\t        if (ptsDtsFlags & 0x40) {\n\t          pes.dts = (payload[14] & 0x0E) << 27 |\n\t            (payload[15] & 0xFF) << 20 |\n\t            (payload[16] & 0xFE) << 12 |\n\t            (payload[17] & 0xFF) << 5 |\n\t            (payload[18] & 0xFE) >>> 3;\n\t          pes.dts *= 4; // Left shift by 2\n\t          pes.dts += (payload[18] & 0x06) >>> 1; // OR by the two LSBs\n\t        }\n\t      }\n\t      // the data section starts immediately after the PES header.\n\t      // pes_header_data_length specifies the number of header bytes\n\t      // that follow the last byte of the field.\n\t      pes.data = payload.subarray(9 + payload[8]);\n\t    },\n\t    flushStream = function(stream, type) {\n\t      var\n\t        packetData = new Uint8Array(stream.size),\n\t        event = {\n\t          type: type\n\t        },\n\t        i = 0,\n\t        fragment;\n\t\n\t      // do nothing if there is no buffered data\n\t      if (!stream.data.length) {\n\t        return;\n\t      }\n\t      event.trackId = stream.data[0].pid;\n\t\n\t      // reassemble the packet\n\t      while (stream.data.length) {\n\t        fragment = stream.data.shift();\n\t\n\t        packetData.set(fragment.data, i);\n\t        i += fragment.data.byteLength;\n\t      }\n\t\n\t      // parse assembled packet's PES header\n\t      parsePes(packetData, event);\n\t\n\t      stream.size = 0;\n\t\n\t      self.trigger('data', event);\n\t    };\n\t\n\t  ElementaryStream.prototype.init.call(this);\n\t\n\t  this.push = function(data) {\n\t    ({\n\t      pat: function() {\n\t        // we have to wait for the PMT to arrive as well before we\n\t        // have any meaningful metadata\n\t      },\n\t      pes: function() {\n\t        var stream, streamType;\n\t\n\t        switch (data.streamType) {\n\t        case StreamTypes.H264_STREAM_TYPE:\n\t        case m2tsStreamTypes.H264_STREAM_TYPE:\n\t          stream = video;\n\t          streamType = 'video';\n\t          break;\n\t        case StreamTypes.ADTS_STREAM_TYPE:\n\t          stream = audio;\n\t          streamType = 'audio';\n\t          break;\n\t        case StreamTypes.METADATA_STREAM_TYPE:\n\t          stream = timedMetadata;\n\t          streamType = 'timed-metadata';\n\t          break;\n\t        default:\n\t          // ignore unknown stream types\n\t          return;\n\t        }\n\t\n\t        // if a new packet is starting, we can flush the completed\n\t        // packet\n\t        if (data.payloadUnitStartIndicator) {\n\t          flushStream(stream, streamType);\n\t        }\n\t\n\t        // buffer this fragment until we are sure we've received the\n\t        // complete payload\n\t        stream.data.push(data);\n\t        stream.size += data.data.byteLength;\n\t      },\n\t      pmt: function() {\n\t        var\n\t          event = {\n\t            type: 'metadata',\n\t            tracks: []\n\t          },\n\t          programMapTable = data.programMapTable,\n\t          k,\n\t          track;\n\t\n\t        // translate streams to tracks\n\t        for (k in programMapTable) {\n\t          if (programMapTable.hasOwnProperty(k)) {\n\t            track = {\n\t              timelineStartInfo: {\n\t                baseMediaDecodeTime: 0\n\t              }\n\t            };\n\t            track.id = +k;\n\t            if (programMapTable[k] === m2tsStreamTypes.H264_STREAM_TYPE) {\n\t              track.codec = 'avc';\n\t              track.type = 'video';\n\t            } else if (programMapTable[k] === m2tsStreamTypes.ADTS_STREAM_TYPE) {\n\t              track.codec = 'adts';\n\t              track.type = 'audio';\n\t            }\n\t            event.tracks.push(track);\n\t          }\n\t        }\n\t        self.trigger('data', event);\n\t      }\n\t    })[data.type]();\n\t  };\n\t\n\t  /**\n\t   * Flush any remaining input. Video PES packets may be of variable\n\t   * length. Normally, the start of a new video packet can trigger the\n\t   * finalization of the previous packet. That is not possible if no\n\t   * more video is forthcoming, however. In that case, some other\n\t   * mechanism (like the end of the file) has to be employed. When it is\n\t   * clear that no additional data is forthcoming, calling this method\n\t   * will flush the buffered packets.\n\t   */\n\t  this.flush = function() {\n\t    // !!THIS ORDER IS IMPORTANT!!\n\t    // video first then audio\n\t    flushStream(video, 'video');\n\t    flushStream(audio, 'audio');\n\t    flushStream(timedMetadata, 'timed-metadata');\n\t    this.trigger('done');\n\t  };\n\t};\n\tElementaryStream.prototype = new Stream();\n\t\n\tvar m2ts = {\n\t  PAT_PID: 0x0000,\n\t  MP2T_PACKET_LENGTH: MP2T_PACKET_LENGTH,\n\t  TransportPacketStream: TransportPacketStream,\n\t  TransportParseStream: TransportParseStream,\n\t  ElementaryStream: ElementaryStream,\n\t  TimestampRolloverStream: TimestampRolloverStream,\n\t  CaptionStream: CaptionStream.CaptionStream,\n\t  Cea608Stream: CaptionStream.Cea608Stream,\n\t  MetadataStream: require('./metadata-stream')\n\t};\n\t\n\tfor (var type in StreamTypes) {\n\t  if (StreamTypes.hasOwnProperty(type)) {\n\t    m2ts[type] = StreamTypes[type];\n\t  }\n\t}\n\t\n\tmodule.exports = m2ts;\n\t\n\t},{\"../utils/stream.js\":89,\"./caption-stream\":77,\"./metadata-stream\":79,\"./stream-types\":81,\"./stream-types.js\":81,\"./timestamp-rollover-stream\":82}],79:[function(require,module,exports){\n\t/**\n\t * Accepts program elementary stream (PES) data events and parses out\n\t * ID3 metadata from them, if present.\n\t * @see http://id3.org/id3v2.3.0\n\t */\n\t'use strict';\n\tvar\n\t  Stream = require('../utils/stream'),\n\t  StreamTypes = require('./stream-types'),\n\t  // return a percent-encoded representation of the specified byte range\n\t  // @see http://en.wikipedia.org/wiki/Percent-encoding\n\t  percentEncode = function(bytes, start, end) {\n\t    var i, result = '';\n\t    for (i = start; i < end; i++) {\n\t      result += '%' + ('00' + bytes[i].toString(16)).slice(-2);\n\t    }\n\t    return result;\n\t  },\n\t  // return the string representation of the specified byte range,\n\t  // interpreted as UTf-8.\n\t  parseUtf8 = function(bytes, start, end) {\n\t    return decodeURIComponent(percentEncode(bytes, start, end));\n\t  },\n\t  // return the string representation of the specified byte range,\n\t  // interpreted as ISO-8859-1.\n\t  parseIso88591 = function(bytes, start, end) {\n\t    return unescape(percentEncode(bytes, start, end)); // jshint ignore:line\n\t  },\n\t  parseSyncSafeInteger = function(data) {\n\t    return (data[0] << 21) |\n\t            (data[1] << 14) |\n\t            (data[2] << 7) |\n\t            (data[3]);\n\t  },\n\t  tagParsers = {\n\t    TXXX: function(tag) {\n\t      var i;\n\t      if (tag.data[0] !== 3) {\n\t        // ignore frames with unrecognized character encodings\n\t        return;\n\t      }\n\t\n\t      for (i = 1; i < tag.data.length; i++) {\n\t        if (tag.data[i] === 0) {\n\t          // parse the text fields\n\t          tag.description = parseUtf8(tag.data, 1, i);\n\t          // do not include the null terminator in the tag value\n\t          tag.value = parseUtf8(tag.data, i + 1, tag.data.length - 1);\n\t          break;\n\t        }\n\t      }\n\t      tag.data = tag.value;\n\t    },\n\t    WXXX: function(tag) {\n\t      var i;\n\t      if (tag.data[0] !== 3) {\n\t        // ignore frames with unrecognized character encodings\n\t        return;\n\t      }\n\t\n\t      for (i = 1; i < tag.data.length; i++) {\n\t        if (tag.data[i] === 0) {\n\t          // parse the description and URL fields\n\t          tag.description = parseUtf8(tag.data, 1, i);\n\t          tag.url = parseUtf8(tag.data, i + 1, tag.data.length);\n\t          break;\n\t        }\n\t      }\n\t    },\n\t    PRIV: function(tag) {\n\t      var i;\n\t\n\t      for (i = 0; i < tag.data.length; i++) {\n\t        if (tag.data[i] === 0) {\n\t          // parse the description and URL fields\n\t          tag.owner = parseIso88591(tag.data, 0, i);\n\t          break;\n\t        }\n\t      }\n\t      tag.privateData = tag.data.subarray(i + 1);\n\t      tag.data = tag.privateData;\n\t    }\n\t  },\n\t  MetadataStream;\n\t\n\tMetadataStream = function(options) {\n\t  var\n\t    settings = {\n\t      debug: !!(options && options.debug),\n\t\n\t      // the bytes of the program-level descriptor field in MP2T\n\t      // see ISO/IEC 13818-1:2013 (E), section 2.6 \"Program and\n\t      // program element descriptors\"\n\t      descriptor: options && options.descriptor\n\t    },\n\t    // the total size in bytes of the ID3 tag being parsed\n\t    tagSize = 0,\n\t    // tag data that is not complete enough to be parsed\n\t    buffer = [],\n\t    // the total number of bytes currently in the buffer\n\t    bufferSize = 0,\n\t    i;\n\t\n\t  MetadataStream.prototype.init.call(this);\n\t\n\t  // calculate the text track in-band metadata track dispatch type\n\t  // https://html.spec.whatwg.org/multipage/embedded-content.html#steps-to-expose-a-media-resource-specific-text-track\n\t  this.dispatchType = StreamTypes.METADATA_STREAM_TYPE.toString(16);\n\t  if (settings.descriptor) {\n\t    for (i = 0; i < settings.descriptor.length; i++) {\n\t      this.dispatchType += ('00' + settings.descriptor[i].toString(16)).slice(-2);\n\t    }\n\t  }\n\t\n\t  this.push = function(chunk) {\n\t    var tag, frameStart, frameSize, frame, i, frameHeader;\n\t    if (chunk.type !== 'timed-metadata') {\n\t      return;\n\t    }\n\t\n\t    // if data_alignment_indicator is set in the PES header,\n\t    // we must have the start of a new ID3 tag. Assume anything\n\t    // remaining in the buffer was malformed and throw it out\n\t    if (chunk.dataAlignmentIndicator) {\n\t      bufferSize = 0;\n\t      buffer.length = 0;\n\t    }\n\t\n\t    // ignore events that don't look like ID3 data\n\t    if (buffer.length === 0 &&\n\t        (chunk.data.length < 10 ||\n\t          chunk.data[0] !== 'I'.charCodeAt(0) ||\n\t          chunk.data[1] !== 'D'.charCodeAt(0) ||\n\t          chunk.data[2] !== '3'.charCodeAt(0))) {\n\t      if (settings.debug) {\n\t        // eslint-disable-next-line no-console\n\t        console.log('Skipping unrecognized metadata packet');\n\t      }\n\t      return;\n\t    }\n\t\n\t    // add this chunk to the data we've collected so far\n\t\n\t    buffer.push(chunk);\n\t    bufferSize += chunk.data.byteLength;\n\t\n\t    // grab the size of the entire frame from the ID3 header\n\t    if (buffer.length === 1) {\n\t      // the frame size is transmitted as a 28-bit integer in the\n\t      // last four bytes of the ID3 header.\n\t      // The most significant bit of each byte is dropped and the\n\t      // results concatenated to recover the actual value.\n\t      tagSize = parseSyncSafeInteger(chunk.data.subarray(6, 10));\n\t\n\t      // ID3 reports the tag size excluding the header but it's more\n\t      // convenient for our comparisons to include it\n\t      tagSize += 10;\n\t    }\n\t\n\t    // if the entire frame has not arrived, wait for more data\n\t    if (bufferSize < tagSize) {\n\t      return;\n\t    }\n\t\n\t    // collect the entire frame so it can be parsed\n\t    tag = {\n\t      data: new Uint8Array(tagSize),\n\t      frames: [],\n\t      pts: buffer[0].pts,\n\t      dts: buffer[0].dts\n\t    };\n\t    for (i = 0; i < tagSize;) {\n\t      tag.data.set(buffer[0].data.subarray(0, tagSize - i), i);\n\t      i += buffer[0].data.byteLength;\n\t      bufferSize -= buffer[0].data.byteLength;\n\t      buffer.shift();\n\t    }\n\t\n\t    // find the start of the first frame and the end of the tag\n\t    frameStart = 10;\n\t    if (tag.data[5] & 0x40) {\n\t      // advance the frame start past the extended header\n\t      frameStart += 4; // header size field\n\t      frameStart += parseSyncSafeInteger(tag.data.subarray(10, 14));\n\t\n\t      // clip any padding off the end\n\t      tagSize -= parseSyncSafeInteger(tag.data.subarray(16, 20));\n\t    }\n\t\n\t    // parse one or more ID3 frames\n\t    // http://id3.org/id3v2.3.0#ID3v2_frame_overview\n\t    do {\n\t      // determine the number of bytes in this frame\n\t      frameSize = parseSyncSafeInteger(tag.data.subarray(frameStart + 4, frameStart + 8));\n\t      if (frameSize < 1) {\n\t         // eslint-disable-next-line no-console\n\t        return console.log('Malformed ID3 frame encountered. Skipping metadata parsing.');\n\t      }\n\t      frameHeader = String.fromCharCode(tag.data[frameStart],\n\t                                        tag.data[frameStart + 1],\n\t                                        tag.data[frameStart + 2],\n\t                                        tag.data[frameStart + 3]);\n\t\n\t\n\t      frame = {\n\t        id: frameHeader,\n\t        data: tag.data.subarray(frameStart + 10, frameStart + frameSize + 10)\n\t      };\n\t      frame.key = frame.id;\n\t      if (tagParsers[frame.id]) {\n\t        tagParsers[frame.id](frame);\n\t\n\t        // handle the special PRIV frame used to indicate the start\n\t        // time for raw AAC data\n\t        if (frame.owner === 'com.apple.streaming.transportStreamTimestamp') {\n\t          var\n\t            d = frame.data,\n\t            size = ((d[3] & 0x01)  << 30) |\n\t                   (d[4]  << 22) |\n\t                   (d[5] << 14) |\n\t                   (d[6] << 6) |\n\t                   (d[7] >>> 2);\n\t\n\t          size *= 4;\n\t          size += d[7] & 0x03;\n\t          frame.timeStamp = size;\n\t          // in raw AAC, all subsequent data will be timestamped based\n\t          // on the value of this frame\n\t          // we couldn't have known the appropriate pts and dts before\n\t          // parsing this ID3 tag so set those values now\n\t          if (tag.pts === undefined && tag.dts === undefined) {\n\t            tag.pts = frame.timeStamp;\n\t            tag.dts = frame.timeStamp;\n\t          }\n\t          this.trigger('timestamp', frame);\n\t        }\n\t      }\n\t      tag.frames.push(frame);\n\t\n\t      frameStart += 10; // advance past the frame header\n\t      frameStart += frameSize; // advance past the frame body\n\t    } while (frameStart < tagSize);\n\t    this.trigger('data', tag);\n\t  };\n\t};\n\tMetadataStream.prototype = new Stream();\n\t\n\tmodule.exports = MetadataStream;\n\t\n\t},{\"../utils/stream\":89,\"./stream-types\":81}],80:[function(require,module,exports){\n\t/**\n\t * mux.js\n\t *\n\t * Copyright (c) 2016 Brightcove\n\t * All rights reserved.\n\t *\n\t * Utilities to detect basic properties and metadata about TS Segments.\n\t */\n\t'use strict';\n\t\n\tvar StreamTypes = require('./stream-types.js');\n\t\n\tvar parsePid = function(packet) {\n\t  var pid = packet[1] & 0x1f;\n\t  pid <<= 8;\n\t  pid |= packet[2];\n\t  return pid;\n\t};\n\t\n\tvar parsePayloadUnitStartIndicator = function(packet) {\n\t  return !!(packet[1] & 0x40);\n\t};\n\t\n\tvar parseAdaptionField = function(packet) {\n\t  var offset = 0;\n\t  // if an adaption field is present, its length is specified by the\n\t  // fifth byte of the TS packet header. The adaptation field is\n\t  // used to add stuffing to PES packets that don't fill a complete\n\t  // TS packet, and to specify some forms of timing and control data\n\t  // that we do not currently use.\n\t  if (((packet[3] & 0x30) >>> 4) > 0x01) {\n\t    offset += packet[4] + 1;\n\t  }\n\t  return offset;\n\t};\n\t\n\tvar parseType = function(packet, pmtPid) {\n\t  var pid = parsePid(packet);\n\t  if (pid === 0) {\n\t    return 'pat';\n\t  } else if (pid === pmtPid) {\n\t    return 'pmt';\n\t  } else if (pmtPid) {\n\t    return 'pes';\n\t  }\n\t  return null;\n\t};\n\t\n\tvar parsePat = function(packet) {\n\t  var pusi = parsePayloadUnitStartIndicator(packet);\n\t  var offset = 4 + parseAdaptionField(packet);\n\t\n\t  if (pusi) {\n\t    offset += packet[offset] + 1;\n\t  }\n\t\n\t  return (packet[offset + 10] & 0x1f) << 8 | packet[offset + 11];\n\t};\n\t\n\tvar parsePmt = function(packet) {\n\t  var programMapTable = {};\n\t  var pusi = parsePayloadUnitStartIndicator(packet);\n\t  var payloadOffset = 4 + parseAdaptionField(packet);\n\t\n\t  if (pusi) {\n\t    payloadOffset += packet[payloadOffset] + 1;\n\t  }\n\t\n\t  // PMTs can be sent ahead of the time when they should actually\n\t  // take effect. We don't believe this should ever be the case\n\t  // for HLS but we'll ignore \"forward\" PMT declarations if we see\n\t  // them. Future PMT declarations have the current_next_indicator\n\t  // set to zero.\n\t  if (!(packet[payloadOffset + 5] & 0x01)) {\n\t    return;\n\t  }\n\t\n\t  var sectionLength, tableEnd, programInfoLength;\n\t  // the mapping table ends at the end of the current section\n\t  sectionLength = (packet[payloadOffset + 1] & 0x0f) << 8 | packet[payloadOffset + 2];\n\t  tableEnd = 3 + sectionLength - 4;\n\t\n\t  // to determine where the table is, we have to figure out how\n\t  // long the program info descriptors are\n\t  programInfoLength = (packet[payloadOffset + 10] & 0x0f) << 8 | packet[payloadOffset + 11];\n\t\n\t  // advance the offset to the first entry in the mapping table\n\t  var offset = 12 + programInfoLength;\n\t  while (offset < tableEnd) {\n\t    var i = payloadOffset + offset;\n\t    // add an entry that maps the elementary_pid to the stream_type\n\t    programMapTable[(packet[i + 1] & 0x1F) << 8 | packet[i + 2]] = packet[i];\n\t\n\t    // move to the next table entry\n\t    // skip past the elementary stream descriptors, if present\n\t    offset += ((packet[i + 3] & 0x0F) << 8 | packet[i + 4]) + 5;\n\t  }\n\t  return programMapTable;\n\t};\n\t\n\tvar parsePesType = function(packet, programMapTable) {\n\t  var pid = parsePid(packet);\n\t  var type = programMapTable[pid];\n\t  switch (type) {\n\t    case StreamTypes.H264_STREAM_TYPE:\n\t      return 'video';\n\t    case StreamTypes.ADTS_STREAM_TYPE:\n\t      return 'audio';\n\t    case StreamTypes.METADATA_STREAM_TYPE:\n\t      return 'timed-metadata';\n\t    default:\n\t      return null;\n\t  }\n\t};\n\t\n\tvar parsePesTime = function(packet) {\n\t  var pusi = parsePayloadUnitStartIndicator(packet);\n\t  if (!pusi) {\n\t    return null;\n\t  }\n\t\n\t  var offset = 4 + parseAdaptionField(packet);\n\t\n\t  var pes = {};\n\t  var ptsDtsFlags;\n\t\n\t  // PES packets may be annotated with a PTS value, or a PTS value\n\t  // and a DTS value. Determine what combination of values is\n\t  // available to work with.\n\t  ptsDtsFlags = packet[offset + 7];\n\t\n\t  // PTS and DTS are normally stored as a 33-bit number.  Javascript\n\t  // performs all bitwise operations on 32-bit integers but javascript\n\t  // supports a much greater range (52-bits) of integer using standard\n\t  // mathematical operations.\n\t  // We construct a 31-bit value using bitwise operators over the 31\n\t  // most significant bits and then multiply by 4 (equal to a left-shift\n\t  // of 2) before we add the final 2 least significant bits of the\n\t  // timestamp (equal to an OR.)\n\t  if (ptsDtsFlags & 0xC0) {\n\t    // the PTS and DTS are not written out directly. For information\n\t    // on how they are encoded, see\n\t    // http://dvd.sourceforge.net/dvdinfo/pes-hdr.html\n\t    pes.pts = (packet[offset + 9] & 0x0E) << 27 |\n\t      (packet[offset + 10] & 0xFF) << 20 |\n\t      (packet[offset + 11] & 0xFE) << 12 |\n\t      (packet[offset + 12] & 0xFF) <<  5 |\n\t      (packet[offset + 13] & 0xFE) >>>  3;\n\t    pes.pts *= 4; // Left shift by 2\n\t    pes.pts += (packet[offset + 13] & 0x06) >>> 1; // OR by the two LSBs\n\t    pes.dts = pes.pts;\n\t    if (ptsDtsFlags & 0x40) {\n\t      pes.dts = (packet[offset + 14] & 0x0E) << 27 |\n\t        (packet[offset + 15] & 0xFF) << 20 |\n\t        (packet[offset + 16] & 0xFE) << 12 |\n\t        (packet[offset + 17] & 0xFF) << 5 |\n\t        (packet[offset + 18] & 0xFE) >>> 3;\n\t      pes.dts *= 4; // Left shift by 2\n\t      pes.dts += (packet[offset + 18] & 0x06) >>> 1; // OR by the two LSBs\n\t    }\n\t  }\n\t  return pes;\n\t};\n\t\n\tvar parseNalUnitType = function(type) {\n\t  switch (type) {\n\t    case 0x05:\n\t      return 'slice_layer_without_partitioning_rbsp_idr';\n\t    case 0x06:\n\t      return 'sei_rbsp';\n\t    case 0x07:\n\t      return 'seq_parameter_set_rbsp';\n\t    case 0x08:\n\t      return 'pic_parameter_set_rbsp';\n\t    case 0x09:\n\t      return 'access_unit_delimiter_rbsp';\n\t    default:\n\t      return null;\n\t  }\n\t};\n\t\n\tvar videoPacketContainsKeyFrame = function(packet) {\n\t  var offset = 4 + parseAdaptionField(packet);\n\t  var frameBuffer = packet.subarray(offset);\n\t  var frameI = 0;\n\t  var frameSyncPoint = 0;\n\t  var foundKeyFrame = false;\n\t  var nalType;\n\t\n\t  // advance the sync point to a NAL start, if necessary\n\t  for (; frameSyncPoint < frameBuffer.byteLength - 3; frameSyncPoint++) {\n\t    if (frameBuffer[frameSyncPoint + 2] === 1) {\n\t      // the sync point is properly aligned\n\t      frameI = frameSyncPoint + 5;\n\t      break;\n\t    }\n\t  }\n\t\n\t  while (frameI < frameBuffer.byteLength) {\n\t    // look at the current byte to determine if we've hit the end of\n\t    // a NAL unit boundary\n\t    switch (frameBuffer[frameI]) {\n\t    case 0:\n\t      // skip past non-sync sequences\n\t      if (frameBuffer[frameI - 1] !== 0) {\n\t        frameI += 2;\n\t        break;\n\t      } else if (frameBuffer[frameI - 2] !== 0) {\n\t        frameI++;\n\t        break;\n\t      }\n\t\n\t      if (frameSyncPoint + 3 !== frameI - 2) {\n\t        nalType = parseNalUnitType(frameBuffer[frameSyncPoint + 3] & 0x1f);\n\t        if (nalType === 'slice_layer_without_partitioning_rbsp_idr') {\n\t          foundKeyFrame = true;\n\t        }\n\t      }\n\t\n\t      // drop trailing zeroes\n\t      do {\n\t        frameI++;\n\t      } while (frameBuffer[frameI] !== 1 && frameI < frameBuffer.length);\n\t      frameSyncPoint = frameI - 2;\n\t      frameI += 3;\n\t      break;\n\t    case 1:\n\t      // skip past non-sync sequences\n\t      if (frameBuffer[frameI - 1] !== 0 ||\n\t          frameBuffer[frameI - 2] !== 0) {\n\t        frameI += 3;\n\t        break;\n\t      }\n\t\n\t      nalType = parseNalUnitType(frameBuffer[frameSyncPoint + 3] & 0x1f);\n\t      if (nalType === 'slice_layer_without_partitioning_rbsp_idr') {\n\t        foundKeyFrame = true;\n\t      }\n\t      frameSyncPoint = frameI - 2;\n\t      frameI += 3;\n\t      break;\n\t    default:\n\t      // the current byte isn't a one or zero, so it cannot be part\n\t      // of a sync sequence\n\t      frameI += 3;\n\t      break;\n\t    }\n\t  }\n\t  frameBuffer = frameBuffer.subarray(frameSyncPoint);\n\t  frameI -= frameSyncPoint;\n\t  frameSyncPoint = 0;\n\t  // parse the final nal\n\t  if (frameBuffer && frameBuffer.byteLength > 3) {\n\t    nalType = parseNalUnitType(frameBuffer[frameSyncPoint + 3] & 0x1f);\n\t    if (nalType === 'slice_layer_without_partitioning_rbsp_idr') {\n\t      foundKeyFrame = true;\n\t    }\n\t  }\n\t\n\t  return foundKeyFrame;\n\t};\n\t\n\t\n\tmodule.exports = {\n\t  parseType: parseType,\n\t  parsePat: parsePat,\n\t  parsePmt: parsePmt,\n\t  parsePayloadUnitStartIndicator: parsePayloadUnitStartIndicator,\n\t  parsePesType: parsePesType,\n\t  parsePesTime: parsePesTime,\n\t  videoPacketContainsKeyFrame: videoPacketContainsKeyFrame\n\t};\n\t\n\t},{\"./stream-types.js\":81}],81:[function(require,module,exports){\n\t'use strict';\n\t\n\tmodule.exports = {\n\t  H264_STREAM_TYPE: 0x1B,\n\t  ADTS_STREAM_TYPE: 0x0F,\n\t  METADATA_STREAM_TYPE: 0x15\n\t};\n\t\n\t},{}],82:[function(require,module,exports){\n\t/**\n\t * mux.js\n\t *\n\t * Copyright (c) 2016 Brightcove\n\t * All rights reserved.\n\t *\n\t * Accepts program elementary stream (PES) data events and corrects\n\t * decode and presentation time stamps to account for a rollover\n\t * of the 33 bit value.\n\t */\n\t\n\t'use strict';\n\t\n\tvar Stream = require('../utils/stream');\n\t\n\tvar MAX_TS = 8589934592;\n\t\n\tvar RO_THRESH = 4294967296;\n\t\n\tvar handleRollover = function(value, reference) {\n\t  var direction = 1;\n\t\n\t  if (value > reference) {\n\t    // If the current timestamp value is greater than our reference timestamp and we detect a\n\t    // timestamp rollover, this means the roll over is happening in the opposite direction.\n\t    // Example scenario: Enter a long stream/video just after a rollover occurred. The reference\n\t    // point will be set to a small number, e.g. 1. The user then seeks backwards over the\n\t    // rollover point. In loading this segment, the timestamp values will be very large,\n\t    // e.g. 2^33 - 1. Since this comes before the data we loaded previously, we want to adjust\n\t    // the time stamp to be `value - 2^33`.\n\t    direction = -1;\n\t  }\n\t\n\t  // Note: A seek forwards or back that is greater than the RO_THRESH (2^32, ~13 hours) will\n\t  // cause an incorrect adjustment.\n\t  while (Math.abs(reference - value) > RO_THRESH) {\n\t    value += (direction * MAX_TS);\n\t  }\n\t\n\t  return value;\n\t};\n\t\n\tvar TimestampRolloverStream = function(type) {\n\t  var lastDTS, referenceDTS;\n\t\n\t  TimestampRolloverStream.prototype.init.call(this);\n\t\n\t  this.type_ = type;\n\t\n\t  this.push = function(data) {\n\t    if (data.type !== this.type_) {\n\t      return;\n\t    }\n\t\n\t    if (referenceDTS === undefined) {\n\t      referenceDTS = data.dts;\n\t    }\n\t\n\t    data.dts = handleRollover(data.dts, referenceDTS);\n\t    data.pts = handleRollover(data.pts, referenceDTS);\n\t\n\t    lastDTS = data.dts;\n\t\n\t    this.trigger('data', data);\n\t  };\n\t\n\t  this.flush = function() {\n\t    referenceDTS = lastDTS;\n\t    this.trigger('done');\n\t  };\n\t\n\t};\n\t\n\tTimestampRolloverStream.prototype = new Stream();\n\t\n\tmodule.exports = {\n\t  TimestampRolloverStream: TimestampRolloverStream,\n\t  handleRollover: handleRollover\n\t};\n\t\n\t},{\"../utils/stream\":89}],83:[function(require,module,exports){\n\tmodule.exports = {\n\t  generator: require('./mp4-generator'),\n\t  Transmuxer: require('./transmuxer').Transmuxer,\n\t  AudioSegmentStream: require('./transmuxer').AudioSegmentStream,\n\t  VideoSegmentStream: require('./transmuxer').VideoSegmentStream\n\t};\n\t\n\t},{\"./mp4-generator\":84,\"./transmuxer\":86}],84:[function(require,module,exports){\n\t/**\n\t * mux.js\n\t *\n\t * Copyright (c) 2015 Brightcove\n\t * All rights reserved.\n\t *\n\t * Functions that generate fragmented MP4s suitable for use with Media\n\t * Source Extensions.\n\t */\n\t'use strict';\n\t\n\tvar UINT32_MAX = Math.pow(2, 32) - 1;\n\t\n\tvar box, dinf, esds, ftyp, mdat, mfhd, minf, moof, moov, mvex, mvhd,\n\t    trak, tkhd, mdia, mdhd, hdlr, sdtp, stbl, stsd, traf, trex,\n\t    trun, types, MAJOR_BRAND, MINOR_VERSION, AVC1_BRAND, VIDEO_HDLR,\n\t    AUDIO_HDLR, HDLR_TYPES, VMHD, SMHD, DREF, STCO, STSC, STSZ, STTS;\n\t\n\t// pre-calculate constants\n\t(function() {\n\t  var i;\n\t  types = {\n\t    avc1: [], // codingname\n\t    avcC: [],\n\t    btrt: [],\n\t    dinf: [],\n\t    dref: [],\n\t    esds: [],\n\t    ftyp: [],\n\t    hdlr: [],\n\t    mdat: [],\n\t    mdhd: [],\n\t    mdia: [],\n\t    mfhd: [],\n\t    minf: [],\n\t    moof: [],\n\t    moov: [],\n\t    mp4a: [], // codingname\n\t    mvex: [],\n\t    mvhd: [],\n\t    sdtp: [],\n\t    smhd: [],\n\t    stbl: [],\n\t    stco: [],\n\t    stsc: [],\n\t    stsd: [],\n\t    stsz: [],\n\t    stts: [],\n\t    styp: [],\n\t    tfdt: [],\n\t    tfhd: [],\n\t    traf: [],\n\t    trak: [],\n\t    trun: [],\n\t    trex: [],\n\t    tkhd: [],\n\t    vmhd: []\n\t  };\n\t\n\t  // In environments where Uint8Array is undefined (e.g., IE8), skip set up so that we\n\t  // don't throw an error\n\t  if (typeof Uint8Array === 'undefined') {\n\t    return;\n\t  }\n\t\n\t  for (i in types) {\n\t    if (types.hasOwnProperty(i)) {\n\t      types[i] = [\n\t        i.charCodeAt(0),\n\t        i.charCodeAt(1),\n\t        i.charCodeAt(2),\n\t        i.charCodeAt(3)\n\t      ];\n\t    }\n\t  }\n\t\n\t  MAJOR_BRAND = new Uint8Array([\n\t    'i'.charCodeAt(0),\n\t    's'.charCodeAt(0),\n\t    'o'.charCodeAt(0),\n\t    'm'.charCodeAt(0)\n\t  ]);\n\t  AVC1_BRAND = new Uint8Array([\n\t    'a'.charCodeAt(0),\n\t    'v'.charCodeAt(0),\n\t    'c'.charCodeAt(0),\n\t    '1'.charCodeAt(0)\n\t  ]);\n\t  MINOR_VERSION = new Uint8Array([0, 0, 0, 1]);\n\t  VIDEO_HDLR = new Uint8Array([\n\t    0x00, // version 0\n\t    0x00, 0x00, 0x00, // flags\n\t    0x00, 0x00, 0x00, 0x00, // pre_defined\n\t    0x76, 0x69, 0x64, 0x65, // handler_type: 'vide'\n\t    0x00, 0x00, 0x00, 0x00, // reserved\n\t    0x00, 0x00, 0x00, 0x00, // reserved\n\t    0x00, 0x00, 0x00, 0x00, // reserved\n\t    0x56, 0x69, 0x64, 0x65,\n\t    0x6f, 0x48, 0x61, 0x6e,\n\t    0x64, 0x6c, 0x65, 0x72, 0x00 // name: 'VideoHandler'\n\t  ]);\n\t  AUDIO_HDLR = new Uint8Array([\n\t    0x00, // version 0\n\t    0x00, 0x00, 0x00, // flags\n\t    0x00, 0x00, 0x00, 0x00, // pre_defined\n\t    0x73, 0x6f, 0x75, 0x6e, // handler_type: 'soun'\n\t    0x00, 0x00, 0x00, 0x00, // reserved\n\t    0x00, 0x00, 0x00, 0x00, // reserved\n\t    0x00, 0x00, 0x00, 0x00, // reserved\n\t    0x53, 0x6f, 0x75, 0x6e,\n\t    0x64, 0x48, 0x61, 0x6e,\n\t    0x64, 0x6c, 0x65, 0x72, 0x00 // name: 'SoundHandler'\n\t  ]);\n\t  HDLR_TYPES = {\n\t    video: VIDEO_HDLR,\n\t    audio: AUDIO_HDLR\n\t  };\n\t  DREF = new Uint8Array([\n\t    0x00, // version 0\n\t    0x00, 0x00, 0x00, // flags\n\t    0x00, 0x00, 0x00, 0x01, // entry_count\n\t    0x00, 0x00, 0x00, 0x0c, // entry_size\n\t    0x75, 0x72, 0x6c, 0x20, // 'url' type\n\t    0x00, // version 0\n\t    0x00, 0x00, 0x01 // entry_flags\n\t  ]);\n\t  SMHD = new Uint8Array([\n\t    0x00,             // version\n\t    0x00, 0x00, 0x00, // flags\n\t    0x00, 0x00,       // balance, 0 means centered\n\t    0x00, 0x00        // reserved\n\t  ]);\n\t  STCO = new Uint8Array([\n\t    0x00, // version\n\t    0x00, 0x00, 0x00, // flags\n\t    0x00, 0x00, 0x00, 0x00 // entry_count\n\t  ]);\n\t  STSC = STCO;\n\t  STSZ = new Uint8Array([\n\t    0x00, // version\n\t    0x00, 0x00, 0x00, // flags\n\t    0x00, 0x00, 0x00, 0x00, // sample_size\n\t    0x00, 0x00, 0x00, 0x00 // sample_count\n\t  ]);\n\t  STTS = STCO;\n\t  VMHD = new Uint8Array([\n\t    0x00, // version\n\t    0x00, 0x00, 0x01, // flags\n\t    0x00, 0x00, // graphicsmode\n\t    0x00, 0x00,\n\t    0x00, 0x00,\n\t    0x00, 0x00 // opcolor\n\t  ]);\n\t}());\n\t\n\tbox = function(type) {\n\t  var\n\t    payload = [],\n\t    size = 0,\n\t    i,\n\t    result,\n\t    view;\n\t\n\t  for (i = 1; i < arguments.length; i++) {\n\t    payload.push(arguments[i]);\n\t  }\n\t\n\t  i = payload.length;\n\t\n\t  // calculate the total size we need to allocate\n\t  while (i--) {\n\t    size += payload[i].byteLength;\n\t  }\n\t  result = new Uint8Array(size + 8);\n\t  view = new DataView(result.buffer, result.byteOffset, result.byteLength);\n\t  view.setUint32(0, result.byteLength);\n\t  result.set(type, 4);\n\t\n\t  // copy the payload into the result\n\t  for (i = 0, size = 8; i < payload.length; i++) {\n\t    result.set(payload[i], size);\n\t    size += payload[i].byteLength;\n\t  }\n\t  return result;\n\t};\n\t\n\tdinf = function() {\n\t  return box(types.dinf, box(types.dref, DREF));\n\t};\n\t\n\tesds = function(track) {\n\t  return box(types.esds, new Uint8Array([\n\t    0x00, // version\n\t    0x00, 0x00, 0x00, // flags\n\t\n\t    // ES_Descriptor\n\t    0x03, // tag, ES_DescrTag\n\t    0x19, // length\n\t    0x00, 0x00, // ES_ID\n\t    0x00, // streamDependenceFlag, URL_flag, reserved, streamPriority\n\t\n\t    // DecoderConfigDescriptor\n\t    0x04, // tag, DecoderConfigDescrTag\n\t    0x11, // length\n\t    0x40, // object type\n\t    0x15,  // streamType\n\t    0x00, 0x06, 0x00, // bufferSizeDB\n\t    0x00, 0x00, 0xda, 0xc0, // maxBitrate\n\t    0x00, 0x00, 0xda, 0xc0, // avgBitrate\n\t\n\t    // DecoderSpecificInfo\n\t    0x05, // tag, DecoderSpecificInfoTag\n\t    0x02, // length\n\t    // ISO/IEC 14496-3, AudioSpecificConfig\n\t    // for samplingFrequencyIndex see ISO/IEC 13818-7:2006, 8.1.3.2.2, Table 35\n\t    (track.audioobjecttype << 3) | (track.samplingfrequencyindex >>> 1),\n\t    (track.samplingfrequencyindex << 7) | (track.channelcount << 3),\n\t    0x06, 0x01, 0x02 // GASpecificConfig\n\t  ]));\n\t};\n\t\n\tftyp = function() {\n\t  return box(types.ftyp, MAJOR_BRAND, MINOR_VERSION, MAJOR_BRAND, AVC1_BRAND);\n\t};\n\t\n\thdlr = function(type) {\n\t  return box(types.hdlr, HDLR_TYPES[type]);\n\t};\n\tmdat = function(data) {\n\t  return box(types.mdat, data);\n\t};\n\tmdhd = function(track) {\n\t  var result = new Uint8Array([\n\t    0x00,                   // version 0\n\t    0x00, 0x00, 0x00,       // flags\n\t    0x00, 0x00, 0x00, 0x02, // creation_time\n\t    0x00, 0x00, 0x00, 0x03, // modification_time\n\t    0x00, 0x01, 0x5f, 0x90, // timescale, 90,000 \"ticks\" per second\n\t\n\t    (track.duration >>> 24) & 0xFF,\n\t    (track.duration >>> 16) & 0xFF,\n\t    (track.duration >>>  8) & 0xFF,\n\t    track.duration & 0xFF,  // duration\n\t    0x55, 0xc4,             // 'und' language (undetermined)\n\t    0x00, 0x00\n\t  ]);\n\t\n\t  // Use the sample rate from the track metadata, when it is\n\t  // defined. The sample rate can be parsed out of an ADTS header, for\n\t  // instance.\n\t  if (track.samplerate) {\n\t    result[12] = (track.samplerate >>> 24) & 0xFF;\n\t    result[13] = (track.samplerate >>> 16) & 0xFF;\n\t    result[14] = (track.samplerate >>>  8) & 0xFF;\n\t    result[15] = (track.samplerate)        & 0xFF;\n\t  }\n\t\n\t  return box(types.mdhd, result);\n\t};\n\tmdia = function(track) {\n\t  return box(types.mdia, mdhd(track), hdlr(track.type), minf(track));\n\t};\n\tmfhd = function(sequenceNumber) {\n\t  return box(types.mfhd, new Uint8Array([\n\t    0x00,\n\t    0x00, 0x00, 0x00, // flags\n\t    (sequenceNumber & 0xFF000000) >> 24,\n\t    (sequenceNumber & 0xFF0000) >> 16,\n\t    (sequenceNumber & 0xFF00) >> 8,\n\t    sequenceNumber & 0xFF // sequence_number\n\t  ]));\n\t};\n\tminf = function(track) {\n\t  return box(types.minf,\n\t             track.type === 'video' ? box(types.vmhd, VMHD) : box(types.smhd, SMHD),\n\t             dinf(),\n\t             stbl(track));\n\t};\n\tmoof = function(sequenceNumber, tracks) {\n\t  var\n\t    trackFragments = [],\n\t    i = tracks.length;\n\t  // build traf boxes for each track fragment\n\t  while (i--) {\n\t    trackFragments[i] = traf(tracks[i]);\n\t  }\n\t  return box.apply(null, [\n\t    types.moof,\n\t    mfhd(sequenceNumber)\n\t  ].concat(trackFragments));\n\t};\n\t/**\n\t * Returns a movie box.\n\t * @param tracks {array} the tracks associated with this movie\n\t * @see ISO/IEC 14496-12:2012(E), section 8.2.1\n\t */\n\tmoov = function(tracks) {\n\t  var\n\t    i = tracks.length,\n\t    boxes = [];\n\t\n\t  while (i--) {\n\t    boxes[i] = trak(tracks[i]);\n\t  }\n\t\n\t  return box.apply(null, [types.moov, mvhd(0xffffffff)].concat(boxes).concat(mvex(tracks)));\n\t};\n\tmvex = function(tracks) {\n\t  var\n\t    i = tracks.length,\n\t    boxes = [];\n\t\n\t  while (i--) {\n\t    boxes[i] = trex(tracks[i]);\n\t  }\n\t  return box.apply(null, [types.mvex].concat(boxes));\n\t};\n\tmvhd = function(duration) {\n\t  var\n\t    bytes = new Uint8Array([\n\t      0x00, // version 0\n\t      0x00, 0x00, 0x00, // flags\n\t      0x00, 0x00, 0x00, 0x01, // creation_time\n\t      0x00, 0x00, 0x00, 0x02, // modification_time\n\t      0x00, 0x01, 0x5f, 0x90, // timescale, 90,000 \"ticks\" per second\n\t      (duration & 0xFF000000) >> 24,\n\t      (duration & 0xFF0000) >> 16,\n\t      (duration & 0xFF00) >> 8,\n\t      duration & 0xFF, // duration\n\t      0x00, 0x01, 0x00, 0x00, // 1.0 rate\n\t      0x01, 0x00, // 1.0 volume\n\t      0x00, 0x00, // reserved\n\t      0x00, 0x00, 0x00, 0x00, // reserved\n\t      0x00, 0x00, 0x00, 0x00, // reserved\n\t      0x00, 0x01, 0x00, 0x00,\n\t      0x00, 0x00, 0x00, 0x00,\n\t      0x00, 0x00, 0x00, 0x00,\n\t      0x00, 0x00, 0x00, 0x00,\n\t      0x00, 0x01, 0x00, 0x00,\n\t      0x00, 0x00, 0x00, 0x00,\n\t      0x00, 0x00, 0x00, 0x00,\n\t      0x00, 0x00, 0x00, 0x00,\n\t      0x40, 0x00, 0x00, 0x00, // transformation: unity matrix\n\t      0x00, 0x00, 0x00, 0x00,\n\t      0x00, 0x00, 0x00, 0x00,\n\t      0x00, 0x00, 0x00, 0x00,\n\t      0x00, 0x00, 0x00, 0x00,\n\t      0x00, 0x00, 0x00, 0x00,\n\t      0x00, 0x00, 0x00, 0x00, // pre_defined\n\t      0xff, 0xff, 0xff, 0xff // next_track_ID\n\t    ]);\n\t  return box(types.mvhd, bytes);\n\t};\n\t\n\tsdtp = function(track) {\n\t  var\n\t    samples = track.samples || [],\n\t    bytes = new Uint8Array(4 + samples.length),\n\t    flags,\n\t    i;\n\t\n\t  // leave the full box header (4 bytes) all zero\n\t\n\t  // write the sample table\n\t  for (i = 0; i < samples.length; i++) {\n\t    flags = samples[i].flags;\n\t\n\t    bytes[i + 4] = (flags.dependsOn << 4) |\n\t      (flags.isDependedOn << 2) |\n\t      (flags.hasRedundancy);\n\t  }\n\t\n\t  return box(types.sdtp,\n\t             bytes);\n\t};\n\t\n\tstbl = function(track) {\n\t  return box(types.stbl,\n\t             stsd(track),\n\t             box(types.stts, STTS),\n\t             box(types.stsc, STSC),\n\t             box(types.stsz, STSZ),\n\t             box(types.stco, STCO));\n\t};\n\t\n\t(function() {\n\t  var videoSample, audioSample;\n\t\n\t  stsd = function(track) {\n\t\n\t    return box(types.stsd, new Uint8Array([\n\t      0x00, // version 0\n\t      0x00, 0x00, 0x00, // flags\n\t      0x00, 0x00, 0x00, 0x01\n\t    ]), track.type === 'video' ? videoSample(track) : audioSample(track));\n\t  };\n\t\n\t  videoSample = function(track) {\n\t    var\n\t      sps = track.sps || [],\n\t      pps = track.pps || [],\n\t      sequenceParameterSets = [],\n\t      pictureParameterSets = [],\n\t      i;\n\t\n\t    // assemble the SPSs\n\t    for (i = 0; i < sps.length; i++) {\n\t      sequenceParameterSets.push((sps[i].byteLength & 0xFF00) >>> 8);\n\t      sequenceParameterSets.push((sps[i].byteLength & 0xFF)); // sequenceParameterSetLength\n\t      sequenceParameterSets = sequenceParameterSets.concat(Array.prototype.slice.call(sps[i])); // SPS\n\t    }\n\t\n\t    // assemble the PPSs\n\t    for (i = 0; i < pps.length; i++) {\n\t      pictureParameterSets.push((pps[i].byteLength & 0xFF00) >>> 8);\n\t      pictureParameterSets.push((pps[i].byteLength & 0xFF));\n\t      pictureParameterSets = pictureParameterSets.concat(Array.prototype.slice.call(pps[i]));\n\t    }\n\t\n\t    return box(types.avc1, new Uint8Array([\n\t      0x00, 0x00, 0x00,\n\t      0x00, 0x00, 0x00, // reserved\n\t      0x00, 0x01, // data_reference_index\n\t      0x00, 0x00, // pre_defined\n\t      0x00, 0x00, // reserved\n\t      0x00, 0x00, 0x00, 0x00,\n\t      0x00, 0x00, 0x00, 0x00,\n\t      0x00, 0x00, 0x00, 0x00, // pre_defined\n\t      (track.width & 0xff00) >> 8,\n\t      track.width & 0xff, // width\n\t      (track.height & 0xff00) >> 8,\n\t      track.height & 0xff, // height\n\t      0x00, 0x48, 0x00, 0x00, // horizresolution\n\t      0x00, 0x48, 0x00, 0x00, // vertresolution\n\t      0x00, 0x00, 0x00, 0x00, // reserved\n\t      0x00, 0x01, // frame_count\n\t      0x13,\n\t      0x76, 0x69, 0x64, 0x65,\n\t      0x6f, 0x6a, 0x73, 0x2d,\n\t      0x63, 0x6f, 0x6e, 0x74,\n\t      0x72, 0x69, 0x62, 0x2d,\n\t      0x68, 0x6c, 0x73, 0x00,\n\t      0x00, 0x00, 0x00, 0x00,\n\t      0x00, 0x00, 0x00, 0x00,\n\t      0x00, 0x00, 0x00, // compressorname\n\t      0x00, 0x18, // depth = 24\n\t      0x11, 0x11 // pre_defined = -1\n\t    ]), box(types.avcC, new Uint8Array([\n\t      0x01, // configurationVersion\n\t      track.profileIdc, // AVCProfileIndication\n\t      track.profileCompatibility, // profile_compatibility\n\t      track.levelIdc, // AVCLevelIndication\n\t      0xff // lengthSizeMinusOne, hard-coded to 4 bytes\n\t    ].concat([\n\t      sps.length // numOfSequenceParameterSets\n\t    ]).concat(sequenceParameterSets).concat([\n\t      pps.length // numOfPictureParameterSets\n\t    ]).concat(pictureParameterSets))), // \"PPS\"\n\t            box(types.btrt, new Uint8Array([\n\t              0x00, 0x1c, 0x9c, 0x80, // bufferSizeDB\n\t              0x00, 0x2d, 0xc6, 0xc0, // maxBitrate\n\t              0x00, 0x2d, 0xc6, 0xc0\n\t            ])) // avgBitrate\n\t              );\n\t  };\n\t\n\t  audioSample = function(track) {\n\t    return box(types.mp4a, new Uint8Array([\n\t\n\t      // SampleEntry, ISO/IEC 14496-12\n\t      0x00, 0x00, 0x00,\n\t      0x00, 0x00, 0x00, // reserved\n\t      0x00, 0x01, // data_reference_index\n\t\n\t      // AudioSampleEntry, ISO/IEC 14496-12\n\t      0x00, 0x00, 0x00, 0x00, // reserved\n\t      0x00, 0x00, 0x00, 0x00, // reserved\n\t      (track.channelcount & 0xff00) >> 8,\n\t      (track.channelcount & 0xff), // channelcount\n\t\n\t      (track.samplesize & 0xff00) >> 8,\n\t      (track.samplesize & 0xff), // samplesize\n\t      0x00, 0x00, // pre_defined\n\t      0x00, 0x00, // reserved\n\t\n\t      (track.samplerate & 0xff00) >> 8,\n\t      (track.samplerate & 0xff),\n\t      0x00, 0x00 // samplerate, 16.16\n\t\n\t      // MP4AudioSampleEntry, ISO/IEC 14496-14\n\t    ]), esds(track));\n\t  };\n\t}());\n\t\n\ttkhd = function(track) {\n\t  var result = new Uint8Array([\n\t    0x00, // version 0\n\t    0x00, 0x00, 0x07, // flags\n\t    0x00, 0x00, 0x00, 0x00, // creation_time\n\t    0x00, 0x00, 0x00, 0x00, // modification_time\n\t    (track.id & 0xFF000000) >> 24,\n\t    (track.id & 0xFF0000) >> 16,\n\t    (track.id & 0xFF00) >> 8,\n\t    track.id & 0xFF, // track_ID\n\t    0x00, 0x00, 0x00, 0x00, // reserved\n\t    (track.duration & 0xFF000000) >> 24,\n\t    (track.duration & 0xFF0000) >> 16,\n\t    (track.duration & 0xFF00) >> 8,\n\t    track.duration & 0xFF, // duration\n\t    0x00, 0x00, 0x00, 0x00,\n\t    0x00, 0x00, 0x00, 0x00, // reserved\n\t    0x00, 0x00, // layer\n\t    0x00, 0x00, // alternate_group\n\t    0x01, 0x00, // non-audio track volume\n\t    0x00, 0x00, // reserved\n\t    0x00, 0x01, 0x00, 0x00,\n\t    0x00, 0x00, 0x00, 0x00,\n\t    0x00, 0x00, 0x00, 0x00,\n\t    0x00, 0x00, 0x00, 0x00,\n\t    0x00, 0x01, 0x00, 0x00,\n\t    0x00, 0x00, 0x00, 0x00,\n\t    0x00, 0x00, 0x00, 0x00,\n\t    0x00, 0x00, 0x00, 0x00,\n\t    0x40, 0x00, 0x00, 0x00, // transformation: unity matrix\n\t    (track.width & 0xFF00) >> 8,\n\t    track.width & 0xFF,\n\t    0x00, 0x00, // width\n\t    (track.height & 0xFF00) >> 8,\n\t    track.height & 0xFF,\n\t    0x00, 0x00 // height\n\t  ]);\n\t\n\t  return box(types.tkhd, result);\n\t};\n\t\n\t/**\n\t * Generate a track fragment (traf) box. A traf box collects metadata\n\t * about tracks in a movie fragment (moof) box.\n\t */\n\ttraf = function(track) {\n\t  var trackFragmentHeader, trackFragmentDecodeTime, trackFragmentRun,\n\t      sampleDependencyTable, dataOffset,\n\t      upperWordBaseMediaDecodeTime, lowerWordBaseMediaDecodeTime;\n\t\n\t  trackFragmentHeader = box(types.tfhd, new Uint8Array([\n\t    0x00, // version 0\n\t    0x00, 0x00, 0x3a, // flags\n\t    (track.id & 0xFF000000) >> 24,\n\t    (track.id & 0xFF0000) >> 16,\n\t    (track.id & 0xFF00) >> 8,\n\t    (track.id & 0xFF), // track_ID\n\t    0x00, 0x00, 0x00, 0x01, // sample_description_index\n\t    0x00, 0x00, 0x00, 0x00, // default_sample_duration\n\t    0x00, 0x00, 0x00, 0x00, // default_sample_size\n\t    0x00, 0x00, 0x00, 0x00  // default_sample_flags\n\t  ]));\n\t\n\t  upperWordBaseMediaDecodeTime = Math.floor(track.baseMediaDecodeTime / (UINT32_MAX + 1));\n\t  lowerWordBaseMediaDecodeTime = Math.floor(track.baseMediaDecodeTime % (UINT32_MAX + 1));\n\t\n\t  trackFragmentDecodeTime = box(types.tfdt, new Uint8Array([\n\t    0x01, // version 1\n\t    0x00, 0x00, 0x00, // flags\n\t    // baseMediaDecodeTime\n\t    (upperWordBaseMediaDecodeTime >>> 24) & 0xFF,\n\t    (upperWordBaseMediaDecodeTime >>> 16) & 0xFF,\n\t    (upperWordBaseMediaDecodeTime >>>  8) & 0xFF,\n\t    upperWordBaseMediaDecodeTime & 0xFF,\n\t    (lowerWordBaseMediaDecodeTime >>> 24) & 0xFF,\n\t    (lowerWordBaseMediaDecodeTime >>> 16) & 0xFF,\n\t    (lowerWordBaseMediaDecodeTime >>>  8) & 0xFF,\n\t    lowerWordBaseMediaDecodeTime & 0xFF\n\t  ]));\n\t\n\t  // the data offset specifies the number of bytes from the start of\n\t  // the containing moof to the first payload byte of the associated\n\t  // mdat\n\t  dataOffset = (32 + // tfhd\n\t                20 + // tfdt\n\t                8 +  // traf header\n\t                16 + // mfhd\n\t                8 +  // moof header\n\t                8);  // mdat header\n\t\n\t  // audio tracks require less metadata\n\t  if (track.type === 'audio') {\n\t    trackFragmentRun = trun(track, dataOffset);\n\t    return box(types.traf,\n\t               trackFragmentHeader,\n\t               trackFragmentDecodeTime,\n\t               trackFragmentRun);\n\t  }\n\t\n\t  // video tracks should contain an independent and disposable samples\n\t  // box (sdtp)\n\t  // generate one and adjust offsets to match\n\t  sampleDependencyTable = sdtp(track);\n\t  trackFragmentRun = trun(track,\n\t                          sampleDependencyTable.length + dataOffset);\n\t  return box(types.traf,\n\t             trackFragmentHeader,\n\t             trackFragmentDecodeTime,\n\t             trackFragmentRun,\n\t             sampleDependencyTable);\n\t};\n\t\n\t/**\n\t * Generate a track box.\n\t * @param track {object} a track definition\n\t * @return {Uint8Array} the track box\n\t */\n\ttrak = function(track) {\n\t  track.duration = track.duration || 0xffffffff;\n\t  return box(types.trak,\n\t             tkhd(track),\n\t             mdia(track));\n\t};\n\t\n\ttrex = function(track) {\n\t  var result = new Uint8Array([\n\t    0x00, // version 0\n\t    0x00, 0x00, 0x00, // flags\n\t    (track.id & 0xFF000000) >> 24,\n\t    (track.id & 0xFF0000) >> 16,\n\t    (track.id & 0xFF00) >> 8,\n\t    (track.id & 0xFF), // track_ID\n\t    0x00, 0x00, 0x00, 0x01, // default_sample_description_index\n\t    0x00, 0x00, 0x00, 0x00, // default_sample_duration\n\t    0x00, 0x00, 0x00, 0x00, // default_sample_size\n\t    0x00, 0x01, 0x00, 0x01 // default_sample_flags\n\t  ]);\n\t  // the last two bytes of default_sample_flags is the sample\n\t  // degradation priority, a hint about the importance of this sample\n\t  // relative to others. Lower the degradation priority for all sample\n\t  // types other than video.\n\t  if (track.type !== 'video') {\n\t    result[result.length - 1] = 0x00;\n\t  }\n\t\n\t  return box(types.trex, result);\n\t};\n\t\n\t(function() {\n\t  var audioTrun, videoTrun, trunHeader;\n\t\n\t  // This method assumes all samples are uniform. That is, if a\n\t  // duration is present for the first sample, it will be present for\n\t  // all subsequent samples.\n\t  // see ISO/IEC 14496-12:2012, Section 8.8.8.1\n\t  trunHeader = function(samples, offset) {\n\t    var durationPresent = 0, sizePresent = 0,\n\t        flagsPresent = 0, compositionTimeOffset = 0;\n\t\n\t    // trun flag constants\n\t    if (samples.length) {\n\t      if (samples[0].duration !== undefined) {\n\t        durationPresent = 0x1;\n\t      }\n\t      if (samples[0].size !== undefined) {\n\t        sizePresent = 0x2;\n\t      }\n\t      if (samples[0].flags !== undefined) {\n\t        flagsPresent = 0x4;\n\t      }\n\t      if (samples[0].compositionTimeOffset !== undefined) {\n\t        compositionTimeOffset = 0x8;\n\t      }\n\t    }\n\t\n\t    return [\n\t      0x00, // version 0\n\t      0x00,\n\t      durationPresent | sizePresent | flagsPresent | compositionTimeOffset,\n\t      0x01, // flags\n\t      (samples.length & 0xFF000000) >>> 24,\n\t      (samples.length & 0xFF0000) >>> 16,\n\t      (samples.length & 0xFF00) >>> 8,\n\t      samples.length & 0xFF, // sample_count\n\t      (offset & 0xFF000000) >>> 24,\n\t      (offset & 0xFF0000) >>> 16,\n\t      (offset & 0xFF00) >>> 8,\n\t      offset & 0xFF // data_offset\n\t    ];\n\t  };\n\t\n\t  videoTrun = function(track, offset) {\n\t    var bytes, samples, sample, i;\n\t\n\t    samples = track.samples || [];\n\t    offset += 8 + 12 + (16 * samples.length);\n\t\n\t    bytes = trunHeader(samples, offset);\n\t\n\t    for (i = 0; i < samples.length; i++) {\n\t      sample = samples[i];\n\t      bytes = bytes.concat([\n\t        (sample.duration & 0xFF000000) >>> 24,\n\t        (sample.duration & 0xFF0000) >>> 16,\n\t        (sample.duration & 0xFF00) >>> 8,\n\t        sample.duration & 0xFF, // sample_duration\n\t        (sample.size & 0xFF000000) >>> 24,\n\t        (sample.size & 0xFF0000) >>> 16,\n\t        (sample.size & 0xFF00) >>> 8,\n\t        sample.size & 0xFF, // sample_size\n\t        (sample.flags.isLeading << 2) | sample.flags.dependsOn,\n\t        (sample.flags.isDependedOn << 6) |\n\t          (sample.flags.hasRedundancy << 4) |\n\t          (sample.flags.paddingValue << 1) |\n\t          sample.flags.isNonSyncSample,\n\t        sample.flags.degradationPriority & 0xF0 << 8,\n\t        sample.flags.degradationPriority & 0x0F, // sample_flags\n\t        (sample.compositionTimeOffset & 0xFF000000) >>> 24,\n\t        (sample.compositionTimeOffset & 0xFF0000) >>> 16,\n\t        (sample.compositionTimeOffset & 0xFF00) >>> 8,\n\t        sample.compositionTimeOffset & 0xFF // sample_composition_time_offset\n\t      ]);\n\t    }\n\t    return box(types.trun, new Uint8Array(bytes));\n\t  };\n\t\n\t  audioTrun = function(track, offset) {\n\t    var bytes, samples, sample, i;\n\t\n\t    samples = track.samples || [];\n\t    offset += 8 + 12 + (8 * samples.length);\n\t\n\t    bytes = trunHeader(samples, offset);\n\t\n\t    for (i = 0; i < samples.length; i++) {\n\t      sample = samples[i];\n\t      bytes = bytes.concat([\n\t        (sample.duration & 0xFF000000) >>> 24,\n\t        (sample.duration & 0xFF0000) >>> 16,\n\t        (sample.duration & 0xFF00) >>> 8,\n\t        sample.duration & 0xFF, // sample_duration\n\t        (sample.size & 0xFF000000) >>> 24,\n\t        (sample.size & 0xFF0000) >>> 16,\n\t        (sample.size & 0xFF00) >>> 8,\n\t        sample.size & 0xFF]); // sample_size\n\t    }\n\t\n\t    return box(types.trun, new Uint8Array(bytes));\n\t  };\n\t\n\t  trun = function(track, offset) {\n\t    if (track.type === 'audio') {\n\t      return audioTrun(track, offset);\n\t    }\n\t\n\t    return videoTrun(track, offset);\n\t  };\n\t}());\n\t\n\tmodule.exports = {\n\t  ftyp: ftyp,\n\t  mdat: mdat,\n\t  moof: moof,\n\t  moov: moov,\n\t  initSegment: function(tracks) {\n\t    var\n\t      fileType = ftyp(),\n\t      movie = moov(tracks),\n\t      result;\n\t\n\t    result = new Uint8Array(fileType.byteLength + movie.byteLength);\n\t    result.set(fileType);\n\t    result.set(movie, fileType.byteLength);\n\t    return result;\n\t  }\n\t};\n\t\n\t},{}],85:[function(require,module,exports){\n\t/**\n\t * mux.js\n\t *\n\t * Copyright (c) 2015 Brightcove\n\t * All rights reserved.\n\t *\n\t * Utilities to detect basic properties and metadata about MP4s.\n\t */\n\t'use strict';\n\t\n\tvar findBox, parseType, timescale, startTime;\n\t\n\t// Find the data for a box specified by its path\n\tfindBox = function(data, path) {\n\t  var results = [],\n\t      i, size, type, end, subresults;\n\t\n\t  if (!path.length) {\n\t    // short-circuit the search for empty paths\n\t    return null;\n\t  }\n\t\n\t  for (i = 0; i < data.byteLength;) {\n\t    size  = data[i]     << 24;\n\t    size |= data[i + 1] << 16;\n\t    size |= data[i + 2] << 8;\n\t    size |= data[i + 3];\n\t\n\t    type = parseType(data.subarray(i + 4, i + 8));\n\t\n\t    end = size > 1 ? i + size : data.byteLength;\n\t\n\t    if (type === path[0]) {\n\t      if (path.length === 1) {\n\t        // this is the end of the path and we've found the box we were\n\t        // looking for\n\t        results.push(data.subarray(i + 8, end));\n\t      } else {\n\t        // recursively search for the next box along the path\n\t        subresults = findBox(data.subarray(i + 8, end), path.slice(1));\n\t        if (subresults.length) {\n\t          results = results.concat(subresults);\n\t        }\n\t      }\n\t    }\n\t    i = end;\n\t  }\n\t\n\t  // we've finished searching all of data\n\t  return results;\n\t};\n\t\n\t/**\n\t * Returns the string representation of an ASCII encoded four byte buffer.\n\t * @param buffer {Uint8Array} a four-byte buffer to translate\n\t * @return {string} the corresponding string\n\t */\n\tparseType = function(buffer) {\n\t  var result = '';\n\t  result += String.fromCharCode(buffer[0]);\n\t  result += String.fromCharCode(buffer[1]);\n\t  result += String.fromCharCode(buffer[2]);\n\t  result += String.fromCharCode(buffer[3]);\n\t  return result;\n\t};\n\t\n\t/**\n\t * Parses an MP4 initialization segment and extracts the timescale\n\t * values for any declared tracks. Timescale values indicate the\n\t * number of clock ticks per second to assume for time-based values\n\t * elsewhere in the MP4.\n\t *\n\t * To determine the start time of an MP4, you need two pieces of\n\t * information: the timescale unit and the earliest base media decode\n\t * time. Multiple timescales can be specified within an MP4 but the\n\t * base media decode time is always expressed in the timescale from\n\t * the media header box for the track:\n\t * ```\n\t * moov > trak > mdia > mdhd.timescale\n\t * ```\n\t * @param init {Uint8Array} the bytes of the init segment\n\t * @return {object} a hash of track ids to timescale values or null if\n\t * the init segment is malformed.\n\t */\n\ttimescale = function(init) {\n\t  var\n\t    result = {},\n\t    traks = findBox(init, ['moov', 'trak']);\n\t\n\t  // mdhd timescale\n\t  return traks.reduce(function(result, trak) {\n\t    var tkhd, version, index, id, mdhd;\n\t\n\t    tkhd = findBox(trak, ['tkhd'])[0];\n\t    if (!tkhd) {\n\t      return null;\n\t    }\n\t    version = tkhd[0];\n\t    index = version === 0 ? 12 : 20;\n\t    id = tkhd[index]     << 24 |\n\t         tkhd[index + 1] << 16 |\n\t         tkhd[index + 2] <<  8 |\n\t         tkhd[index + 3];\n\t\n\t    mdhd = findBox(trak, ['mdia', 'mdhd'])[0];\n\t    if (!mdhd) {\n\t      return null;\n\t    }\n\t    version = mdhd[0];\n\t    index = version === 0 ? 12 : 20;\n\t    result[id] = mdhd[index]     << 24 |\n\t                 mdhd[index + 1] << 16 |\n\t                 mdhd[index + 2] <<  8 |\n\t                 mdhd[index + 3];\n\t    return result;\n\t  }, result);\n\t};\n\t\n\t/**\n\t * Determine the base media decode start time, in seconds, for an MP4\n\t * fragment. If multiple fragments are specified, the earliest time is\n\t * returned.\n\t *\n\t * The base media decode time can be parsed from track fragment\n\t * metadata:\n\t * ```\n\t * moof > traf > tfdt.baseMediaDecodeTime\n\t * ```\n\t * It requires the timescale value from the mdhd to interpret.\n\t *\n\t * @param timescale {object} a hash of track ids to timescale values.\n\t * @return {number} the earliest base media decode start time for the\n\t * fragment, in seconds\n\t */\n\tstartTime = function(timescale, fragment) {\n\t  var trafs, baseTimes, result;\n\t\n\t  // we need info from two childrend of each track fragment box\n\t  trafs = findBox(fragment, ['moof', 'traf']);\n\t\n\t  // determine the start times for each track\n\t  baseTimes = [].concat.apply([], trafs.map(function(traf) {\n\t    return findBox(traf, ['tfhd']).map(function(tfhd) {\n\t      var id, scale, baseTime;\n\t\n\t      // get the track id from the tfhd\n\t      id = tfhd[4] << 24 |\n\t           tfhd[5] << 16 |\n\t           tfhd[6] << 8 |\n\t           tfhd[7];\n\t      // assume a 90kHz clock if no timescale was specified\n\t      scale = timescale[id] || 90e3;\n\t\n\t      // get the base media decode time from the tfdt\n\t      baseTime = findBox(traf, ['tfdt']).map(function(tfdt) {\n\t        var version, result;\n\t\n\t        version = tfdt[0];\n\t        result = tfdt[4] << 24 |\n\t                 tfdt[5] << 16 |\n\t                 tfdt[6] <<  8 |\n\t                 tfdt[7];\n\t        if (version ===  1) {\n\t          result *= Math.pow(2, 32);\n\t          result += tfdt[8]  << 24 |\n\t                    tfdt[9]  << 16 |\n\t                    tfdt[10] <<  8 |\n\t                    tfdt[11];\n\t        }\n\t        return result;\n\t      })[0];\n\t      baseTime = baseTime || Infinity;\n\t\n\t      // convert base time to seconds\n\t      return baseTime / scale;\n\t    });\n\t  }));\n\t\n\t  // return the minimum\n\t  result = Math.min.apply(null, baseTimes);\n\t  return isFinite(result) ? result : 0;\n\t};\n\t\n\tmodule.exports = {\n\t  parseType: parseType,\n\t  timescale: timescale,\n\t  startTime: startTime\n\t};\n\t\n\t},{}],86:[function(require,module,exports){\n\t/**\n\t * mux.js\n\t *\n\t * Copyright (c) 2015 Brightcove\n\t * All rights reserved.\n\t *\n\t * A stream-based mp2t to mp4 converter. This utility can be used to\n\t * deliver mp4s to a SourceBuffer on platforms that support native\n\t * Media Source Extensions.\n\t */\n\t'use strict';\n\t\n\tvar Stream = require('../utils/stream.js');\n\tvar mp4 = require('./mp4-generator.js');\n\tvar m2ts = require('../m2ts/m2ts.js');\n\tvar AdtsStream = require('../codecs/adts.js');\n\tvar H264Stream = require('../codecs/h264').H264Stream;\n\tvar AacStream = require('../aac');\n\t\n\t// constants\n\tvar AUDIO_PROPERTIES = [\n\t  'audioobjecttype',\n\t  'channelcount',\n\t  'samplerate',\n\t  'samplingfrequencyindex',\n\t  'samplesize'\n\t];\n\t\n\tvar VIDEO_PROPERTIES = [\n\t  'width',\n\t  'height',\n\t  'profileIdc',\n\t  'levelIdc',\n\t  'profileCompatibility'\n\t];\n\t\n\t// object types\n\tvar VideoSegmentStream, AudioSegmentStream, Transmuxer, CoalesceStream;\n\t\n\t// Helper functions\n\tvar\n\t  createDefaultSample,\n\t  isLikelyAacData,\n\t  collectDtsInfo,\n\t  clearDtsInfo,\n\t  calculateTrackBaseMediaDecodeTime,\n\t  arrayEquals,\n\t  sumFrameByteLengths;\n\t\n\t/**\n\t * Default sample object\n\t * see ISO/IEC 14496-12:2012, section 8.6.4.3\n\t */\n\tcreateDefaultSample = function() {\n\t  return {\n\t    size: 0,\n\t    flags: {\n\t      isLeading: 0,\n\t      dependsOn: 1,\n\t      isDependedOn: 0,\n\t      hasRedundancy: 0,\n\t      degradationPriority: 0\n\t    }\n\t  };\n\t};\n\t\n\tisLikelyAacData = function(data) {\n\t  if ((data[0] === 'I'.charCodeAt(0)) &&\n\t      (data[1] === 'D'.charCodeAt(0)) &&\n\t      (data[2] === '3'.charCodeAt(0))) {\n\t    return true;\n\t  }\n\t  return false;\n\t};\n\t\n\t/**\n\t * Compare two arrays (even typed) for same-ness\n\t */\n\tarrayEquals = function(a, b) {\n\t  var\n\t    i;\n\t\n\t  if (a.length !== b.length) {\n\t    return false;\n\t  }\n\t\n\t  // compare the value of each element in the array\n\t  for (i = 0; i < a.length; i++) {\n\t    if (a[i] !== b[i]) {\n\t      return false;\n\t    }\n\t  }\n\t\n\t  return true;\n\t};\n\t\n\t/**\n\t * Sum the `byteLength` properties of the data in each AAC frame\n\t */\n\tsumFrameByteLengths = function(array) {\n\t  var\n\t    i,\n\t    currentObj,\n\t    sum = 0;\n\t\n\t  // sum the byteLength's all each nal unit in the frame\n\t  for (i = 0; i < array.length; i++) {\n\t    currentObj = array[i];\n\t    sum += currentObj.data.byteLength;\n\t  }\n\t\n\t  return sum;\n\t};\n\t\n\t/**\n\t * Constructs a single-track, ISO BMFF media segment from AAC data\n\t * events. The output of this stream can be fed to a SourceBuffer\n\t * configured with a suitable initialization segment.\n\t */\n\tAudioSegmentStream = function(track) {\n\t  var\n\t    adtsFrames = [],\n\t    sequenceNumber = 0,\n\t    earliestAllowedDts = 0;\n\t\n\t  AudioSegmentStream.prototype.init.call(this);\n\t\n\t  this.push = function(data) {\n\t    collectDtsInfo(track, data);\n\t\n\t    if (track) {\n\t      AUDIO_PROPERTIES.forEach(function(prop) {\n\t        track[prop] = data[prop];\n\t      });\n\t    }\n\t\n\t    // buffer audio data until end() is called\n\t    adtsFrames.push(data);\n\t  };\n\t\n\t  this.setEarliestDts = function(earliestDts) {\n\t    earliestAllowedDts = earliestDts - track.timelineStartInfo.baseMediaDecodeTime;\n\t  };\n\t\n\t  this.flush = function() {\n\t    var\n\t      frames,\n\t      moof,\n\t      mdat,\n\t      boxes;\n\t\n\t    // return early if no audio data has been observed\n\t    if (adtsFrames.length === 0) {\n\t      this.trigger('done', 'AudioSegmentStream');\n\t      return;\n\t    }\n\t\n\t    frames = this.trimAdtsFramesByEarliestDts_(adtsFrames);\n\t\n\t    // we have to build the index from byte locations to\n\t    // samples (that is, adts frames) in the audio data\n\t    track.samples = this.generateSampleTable_(frames);\n\t\n\t    // concatenate the audio data to constuct the mdat\n\t    mdat = mp4.mdat(this.concatenateFrameData_(frames));\n\t\n\t    adtsFrames = [];\n\t\n\t    calculateTrackBaseMediaDecodeTime(track);\n\t    moof = mp4.moof(sequenceNumber, [track]);\n\t    boxes = new Uint8Array(moof.byteLength + mdat.byteLength);\n\t\n\t    // bump the sequence number for next time\n\t    sequenceNumber++;\n\t\n\t    boxes.set(moof);\n\t    boxes.set(mdat, moof.byteLength);\n\t\n\t    clearDtsInfo(track);\n\t\n\t    this.trigger('data', {track: track, boxes: boxes});\n\t    this.trigger('done', 'AudioSegmentStream');\n\t  };\n\t\n\t  // If the audio segment extends before the earliest allowed dts\n\t  // value, remove AAC frames until starts at or after the earliest\n\t  // allowed DTS so that we don't end up with a negative baseMedia-\n\t  // DecodeTime for the audio track\n\t  this.trimAdtsFramesByEarliestDts_ = function(adtsFrames) {\n\t    if (track.minSegmentDts >= earliestAllowedDts) {\n\t      return adtsFrames;\n\t    }\n\t\n\t    // We will need to recalculate the earliest segment Dts\n\t    track.minSegmentDts = Infinity;\n\t\n\t    return adtsFrames.filter(function(currentFrame) {\n\t      // If this is an allowed frame, keep it and record it's Dts\n\t      if (currentFrame.dts >= earliestAllowedDts) {\n\t        track.minSegmentDts = Math.min(track.minSegmentDts, currentFrame.dts);\n\t        track.minSegmentPts = track.minSegmentDts;\n\t        return true;\n\t      }\n\t      // Otherwise, discard it\n\t      return false;\n\t    });\n\t  };\n\t\n\t  // generate the track's raw mdat data from an array of frames\n\t  this.generateSampleTable_ = function(frames) {\n\t    var\n\t      i,\n\t      currentFrame,\n\t      samples = [];\n\t\n\t    for (i = 0; i < frames.length; i++) {\n\t      currentFrame = frames[i];\n\t      samples.push({\n\t        size: currentFrame.data.byteLength,\n\t        duration: 1024 // For AAC audio, all samples contain 1024 samples\n\t      });\n\t    }\n\t    return samples;\n\t  };\n\t\n\t  // generate the track's sample table from an array of frames\n\t  this.concatenateFrameData_ = function(frames) {\n\t    var\n\t      i,\n\t      currentFrame,\n\t      dataOffset = 0,\n\t      data = new Uint8Array(sumFrameByteLengths(frames));\n\t\n\t    for (i = 0; i < frames.length; i++) {\n\t      currentFrame = frames[i];\n\t\n\t      data.set(currentFrame.data, dataOffset);\n\t      dataOffset += currentFrame.data.byteLength;\n\t    }\n\t    return data;\n\t  };\n\t};\n\t\n\tAudioSegmentStream.prototype = new Stream();\n\t\n\t/**\n\t * Constructs a single-track, ISO BMFF media segment from H264 data\n\t * events. The output of this stream can be fed to a SourceBuffer\n\t * configured with a suitable initialization segment.\n\t * @param track {object} track metadata configuration\n\t */\n\tVideoSegmentStream = function(track) {\n\t  var\n\t    sequenceNumber = 0,\n\t    nalUnits = [],\n\t    config,\n\t    pps;\n\t\n\t  VideoSegmentStream.prototype.init.call(this);\n\t\n\t  delete track.minPTS;\n\t\n\t  this.gopCache_ = [];\n\t\n\t  this.push = function(nalUnit) {\n\t    collectDtsInfo(track, nalUnit);\n\t\n\t    // record the track config\n\t    if (nalUnit.nalUnitType === 'seq_parameter_set_rbsp' && !config) {\n\t      config = nalUnit.config;\n\t      track.sps = [nalUnit.data];\n\t\n\t      VIDEO_PROPERTIES.forEach(function(prop) {\n\t        track[prop] = config[prop];\n\t      }, this);\n\t    }\n\t\n\t    if (nalUnit.nalUnitType === 'pic_parameter_set_rbsp' &&\n\t        !pps) {\n\t      pps = nalUnit.data;\n\t      track.pps = [nalUnit.data];\n\t    }\n\t\n\t    // buffer video until flush() is called\n\t    nalUnits.push(nalUnit);\n\t  };\n\t\n\t  this.flush = function() {\n\t    var\n\t      frames,\n\t      gopForFusion,\n\t      gops,\n\t      moof,\n\t      mdat,\n\t      boxes;\n\t\n\t    // Throw away nalUnits at the start of the byte stream until\n\t    // we find the first AUD\n\t    while (nalUnits.length) {\n\t      if (nalUnits[0].nalUnitType === 'access_unit_delimiter_rbsp') {\n\t        break;\n\t      }\n\t      nalUnits.shift();\n\t    }\n\t\n\t    // Return early if no video data has been observed\n\t    if (nalUnits.length === 0) {\n\t      this.resetStream_();\n\t      this.trigger('done', 'VideoSegmentStream');\n\t      return;\n\t    }\n\t\n\t    // Organize the raw nal-units into arrays that represent\n\t    // higher-level constructs such as frames and gops\n\t    // (group-of-pictures)\n\t    frames = this.groupNalsIntoFrames_(nalUnits);\n\t    gops = this.groupFramesIntoGops_(frames);\n\t\n\t    // If the first frame of this fragment is not a keyframe we have\n\t    // a problem since MSE (on Chrome) requires a leading keyframe.\n\t    //\n\t    // We have two approaches to repairing this situation:\n\t    // 1) GOP-FUSION:\n\t    //    This is where we keep track of the GOPS (group-of-pictures)\n\t    //    from previous fragments and attempt to find one that we can\n\t    //    prepend to the current fragment in order to create a valid\n\t    //    fragment.\n\t    // 2) KEYFRAME-PULLING:\n\t    //    Here we search for the first keyframe in the fragment and\n\t    //    throw away all the frames between the start of the fragment\n\t    //    and that keyframe. We then extend the duration and pull the\n\t    //    PTS of the keyframe forward so that it covers the time range\n\t    //    of the frames that were disposed of.\n\t    //\n\t    // #1 is far prefereable over #2 which can cause \"stuttering\" but\n\t    // requires more things to be just right.\n\t    if (!gops[0][0].keyFrame) {\n\t      // Search for a gop for fusion from our gopCache\n\t      gopForFusion = this.getGopForFusion_(nalUnits[0], track);\n\t\n\t      if (gopForFusion) {\n\t        gops.unshift(gopForFusion);\n\t        // Adjust Gops' metadata to account for the inclusion of the\n\t        // new gop at the beginning\n\t        gops.byteLength += gopForFusion.byteLength;\n\t        gops.nalCount += gopForFusion.nalCount;\n\t        gops.pts = gopForFusion.pts;\n\t        gops.dts = gopForFusion.dts;\n\t        gops.duration += gopForFusion.duration;\n\t      } else {\n\t        // If we didn't find a candidate gop fall back to keyrame-pulling\n\t        gops = this.extendFirstKeyFrame_(gops);\n\t      }\n\t    }\n\t    collectDtsInfo(track, gops);\n\t\n\t    // First, we have to build the index from byte locations to\n\t    // samples (that is, frames) in the video data\n\t    track.samples = this.generateSampleTable_(gops);\n\t\n\t    // Concatenate the video data and construct the mdat\n\t    mdat = mp4.mdat(this.concatenateNalData_(gops));\n\t\n\t    // save all the nals in the last GOP into the gop cache\n\t    this.gopCache_.unshift({\n\t      gop: gops.pop(),\n\t      pps: track.pps,\n\t      sps: track.sps\n\t    });\n\t\n\t    // Keep a maximum of 6 GOPs in the cache\n\t    this.gopCache_.length = Math.min(6, this.gopCache_.length);\n\t\n\t    // Clear nalUnits\n\t    nalUnits = [];\n\t\n\t    calculateTrackBaseMediaDecodeTime(track);\n\t\n\t    this.trigger('timelineStartInfo', track.timelineStartInfo);\n\t\n\t    moof = mp4.moof(sequenceNumber, [track]);\n\t\n\t    // it would be great to allocate this array up front instead of\n\t    // throwing away hundreds of media segment fragments\n\t    boxes = new Uint8Array(moof.byteLength + mdat.byteLength);\n\t\n\t    // Bump the sequence number for next time\n\t    sequenceNumber++;\n\t\n\t    boxes.set(moof);\n\t    boxes.set(mdat, moof.byteLength);\n\t\n\t    this.trigger('data', {track: track, boxes: boxes});\n\t\n\t    this.resetStream_();\n\t\n\t    // Continue with the flush process now\n\t    this.trigger('done', 'VideoSegmentStream');\n\t  };\n\t\n\t  this.resetStream_ = function() {\n\t    clearDtsInfo(track);\n\t\n\t    // reset config and pps because they may differ across segments\n\t    // for instance, when we are rendition switching\n\t    config = undefined;\n\t    pps = undefined;\n\t  };\n\t\n\t  // Search for a candidate Gop for gop-fusion from the gop cache and\n\t  // return it or return null if no good candidate was found\n\t  this.getGopForFusion_ = function(nalUnit) {\n\t    var\n\t      halfSecond = 45000, // Half-a-second in a 90khz clock\n\t      allowableOverlap = 10000, // About 3 frames @ 30fps\n\t      nearestDistance = Infinity,\n\t      dtsDistance,\n\t      nearestGopObj,\n\t      currentGop,\n\t      currentGopObj,\n\t      i;\n\t\n\t    // Search for the GOP nearest to the beginning of this nal unit\n\t    for (i = 0; i < this.gopCache_.length; i++) {\n\t      currentGopObj = this.gopCache_[i];\n\t      currentGop = currentGopObj.gop;\n\t\n\t      // Reject Gops with different SPS or PPS\n\t      if (!(track.pps && arrayEquals(track.pps[0], currentGopObj.pps[0])) ||\n\t          !(track.sps && arrayEquals(track.sps[0], currentGopObj.sps[0]))) {\n\t        continue;\n\t      }\n\t\n\t      // Reject Gops that would require a negative baseMediaDecodeTime\n\t      if (currentGop.dts < track.timelineStartInfo.dts) {\n\t        continue;\n\t      }\n\t\n\t      // The distance between the end of the gop and the start of the nalUnit\n\t      dtsDistance = (nalUnit.dts - currentGop.dts) - currentGop.duration;\n\t\n\t      // Only consider GOPS that start before the nal unit and end within\n\t      // a half-second of the nal unit\n\t      if (dtsDistance >= -allowableOverlap &&\n\t          dtsDistance <= halfSecond) {\n\t\n\t        // Always use the closest GOP we found if there is more than\n\t        // one candidate\n\t        if (!nearestGopObj ||\n\t            nearestDistance > dtsDistance) {\n\t          nearestGopObj = currentGopObj;\n\t          nearestDistance = dtsDistance;\n\t        }\n\t      }\n\t    }\n\t\n\t    if (nearestGopObj) {\n\t      return nearestGopObj.gop;\n\t    }\n\t    return null;\n\t  };\n\t\n\t  this.extendFirstKeyFrame_ = function(gops) {\n\t    var currentGop;\n\t\n\t    if (!gops[0][0].keyFrame) {\n\t      // Remove the first GOP\n\t      currentGop = gops.shift();\n\t\n\t      gops.byteLength -=  currentGop.byteLength;\n\t      gops.nalCount -= currentGop.nalCount;\n\t\n\t      // Extend the first frame of what is now the\n\t      // first gop to cover the time period of the\n\t      // frames we just removed\n\t      gops[0][0].dts = currentGop.dts;\n\t      gops[0][0].pts = currentGop.pts;\n\t      gops[0][0].duration += currentGop.duration;\n\t    }\n\t\n\t    return gops;\n\t  };\n\t\n\t  // Convert an array of nal units into an array of frames with each frame being\n\t  // composed of the nal units that make up that frame\n\t  // Also keep track of cummulative data about the frame from the nal units such\n\t  // as the frame duration, starting pts, etc.\n\t  this.groupNalsIntoFrames_ = function(nalUnits) {\n\t    var\n\t      i,\n\t      currentNal,\n\t      currentFrame = [],\n\t      frames = [];\n\t\n\t    currentFrame.byteLength = 0;\n\t\n\t    for (i = 0; i < nalUnits.length; i++) {\n\t      currentNal = nalUnits[i];\n\t\n\t      // Split on 'aud'-type nal units\n\t      if (currentNal.nalUnitType === 'access_unit_delimiter_rbsp') {\n\t        // Since the very first nal unit is expected to be an AUD\n\t        // only push to the frames array when currentFrame is not empty\n\t        if (currentFrame.length) {\n\t          currentFrame.duration = currentNal.dts - currentFrame.dts;\n\t          frames.push(currentFrame);\n\t        }\n\t        currentFrame = [currentNal];\n\t        currentFrame.byteLength = currentNal.data.byteLength;\n\t        currentFrame.pts = currentNal.pts;\n\t        currentFrame.dts = currentNal.dts;\n\t      } else {\n\t        // Specifically flag key frames for ease of use later\n\t        if (currentNal.nalUnitType === 'slice_layer_without_partitioning_rbsp_idr') {\n\t          currentFrame.keyFrame = true;\n\t        }\n\t        currentFrame.duration = currentNal.dts - currentFrame.dts;\n\t        currentFrame.byteLength += currentNal.data.byteLength;\n\t        currentFrame.push(currentNal);\n\t      }\n\t    }\n\t\n\t    // For the last frame, use the duration of the previous frame if we\n\t    // have nothing better to go on\n\t    if (frames.length &&\n\t        (!currentFrame.duration ||\n\t         currentFrame.duration <= 0)) {\n\t      currentFrame.duration = frames[frames.length - 1].duration;\n\t    }\n\t\n\t    // Push the final frame\n\t    frames.push(currentFrame);\n\t    return frames;\n\t  };\n\t\n\t  // Convert an array of frames into an array of Gop with each Gop being composed\n\t  // of the frames that make up that Gop\n\t  // Also keep track of cummulative data about the Gop from the frames such as the\n\t  // Gop duration, starting pts, etc.\n\t  this.groupFramesIntoGops_ = function(frames) {\n\t    var\n\t      i,\n\t      currentFrame,\n\t      currentGop = [],\n\t      gops = [];\n\t\n\t    // We must pre-set some of the values on the Gop since we\n\t    // keep running totals of these values\n\t    currentGop.byteLength = 0;\n\t    currentGop.nalCount = 0;\n\t    currentGop.duration = 0;\n\t    currentGop.pts = frames[0].pts;\n\t    currentGop.dts = frames[0].dts;\n\t\n\t    // store some metadata about all the Gops\n\t    gops.byteLength = 0;\n\t    gops.nalCount = 0;\n\t    gops.duration = 0;\n\t    gops.pts = frames[0].pts;\n\t    gops.dts = frames[0].dts;\n\t\n\t    for (i = 0; i < frames.length; i++) {\n\t      currentFrame = frames[i];\n\t\n\t      if (currentFrame.keyFrame) {\n\t        // Since the very first frame is expected to be an keyframe\n\t        // only push to the gops array when currentGop is not empty\n\t        if (currentGop.length) {\n\t          gops.push(currentGop);\n\t          gops.byteLength += currentGop.byteLength;\n\t          gops.nalCount += currentGop.nalCount;\n\t          gops.duration += currentGop.duration;\n\t        }\n\t\n\t        currentGop = [currentFrame];\n\t        currentGop.nalCount = currentFrame.length;\n\t        currentGop.byteLength = currentFrame.byteLength;\n\t        currentGop.pts = currentFrame.pts;\n\t        currentGop.dts = currentFrame.dts;\n\t        currentGop.duration = currentFrame.duration;\n\t      } else {\n\t        currentGop.duration += currentFrame.duration;\n\t        currentGop.nalCount += currentFrame.length;\n\t        currentGop.byteLength += currentFrame.byteLength;\n\t        currentGop.push(currentFrame);\n\t      }\n\t    }\n\t\n\t    if (gops.length && currentGop.duration <= 0) {\n\t      currentGop.duration = gops[gops.length - 1].duration;\n\t    }\n\t    gops.byteLength += currentGop.byteLength;\n\t    gops.nalCount += currentGop.nalCount;\n\t    gops.duration += currentGop.duration;\n\t\n\t    // push the final Gop\n\t    gops.push(currentGop);\n\t    return gops;\n\t  };\n\t\n\t  // generate the track's sample table from an array of gops\n\t  this.generateSampleTable_ = function(gops, baseDataOffset) {\n\t    var\n\t      h, i,\n\t      sample,\n\t      currentGop,\n\t      currentFrame,\n\t      dataOffset = baseDataOffset || 0,\n\t      samples = [];\n\t\n\t    for (h = 0; h < gops.length; h++) {\n\t      currentGop = gops[h];\n\t\n\t      for (i = 0; i < currentGop.length; i++) {\n\t        currentFrame = currentGop[i];\n\t\n\t        sample = createDefaultSample();\n\t\n\t        sample.dataOffset = dataOffset;\n\t        sample.compositionTimeOffset = currentFrame.pts - currentFrame.dts;\n\t        sample.duration = currentFrame.duration;\n\t        sample.size = 4 * currentFrame.length; // Space for nal unit size\n\t        sample.size += currentFrame.byteLength;\n\t\n\t        if (currentFrame.keyFrame) {\n\t          sample.flags.dependsOn = 2;\n\t        }\n\t\n\t        dataOffset += sample.size;\n\t\n\t        samples.push(sample);\n\t      }\n\t    }\n\t    return samples;\n\t  };\n\t\n\t  // generate the track's raw mdat data from an array of gops\n\t  this.concatenateNalData_ = function(gops) {\n\t    var\n\t      h, i, j,\n\t      currentGop,\n\t      currentFrame,\n\t      currentNal,\n\t      dataOffset = 0,\n\t      nalsByteLength = gops.byteLength,\n\t      numberOfNals = gops.nalCount,\n\t      totalByteLength = nalsByteLength + 4 * numberOfNals,\n\t      data = new Uint8Array(totalByteLength),\n\t      view = new DataView(data.buffer);\n\t\n\t    // For each Gop..\n\t    for (h = 0; h < gops.length; h++) {\n\t      currentGop = gops[h];\n\t\n\t      // For each Frame..\n\t      for (i = 0; i < currentGop.length; i++) {\n\t        currentFrame = currentGop[i];\n\t\n\t        // For each NAL..\n\t        for (j = 0; j < currentFrame.length; j++) {\n\t          currentNal = currentFrame[j];\n\t\n\t          view.setUint32(dataOffset, currentNal.data.byteLength);\n\t          dataOffset += 4;\n\t          data.set(currentNal.data, dataOffset);\n\t          dataOffset += currentNal.data.byteLength;\n\t        }\n\t      }\n\t    }\n\t    return data;\n\t  };\n\t};\n\t\n\tVideoSegmentStream.prototype = new Stream();\n\t\n\t/**\n\t * Store information about the start and end of the track and the\n\t * duration for each frame/sample we process in order to calculate\n\t * the baseMediaDecodeTime\n\t */\n\tcollectDtsInfo = function(track, data) {\n\t  if (typeof data.pts === 'number') {\n\t    if (track.timelineStartInfo.pts === undefined) {\n\t      track.timelineStartInfo.pts = data.pts;\n\t    }\n\t\n\t    if (track.minSegmentPts === undefined) {\n\t      track.minSegmentPts = data.pts;\n\t    } else {\n\t      track.minSegmentPts = Math.min(track.minSegmentPts, data.pts);\n\t    }\n\t\n\t    if (track.maxSegmentPts === undefined) {\n\t      track.maxSegmentPts = data.pts;\n\t    } else {\n\t      track.maxSegmentPts = Math.max(track.maxSegmentPts, data.pts);\n\t    }\n\t  }\n\t\n\t  if (typeof data.dts === 'number') {\n\t    if (track.timelineStartInfo.dts === undefined) {\n\t      track.timelineStartInfo.dts = data.dts;\n\t    }\n\t\n\t    if (track.minSegmentDts === undefined) {\n\t      track.minSegmentDts = data.dts;\n\t    } else {\n\t      track.minSegmentDts = Math.min(track.minSegmentDts, data.dts);\n\t    }\n\t\n\t    if (track.maxSegmentDts === undefined) {\n\t      track.maxSegmentDts = data.dts;\n\t    } else {\n\t      track.maxSegmentDts = Math.max(track.maxSegmentDts, data.dts);\n\t    }\n\t  }\n\t};\n\t\n\t/**\n\t * Clear values used to calculate the baseMediaDecodeTime between\n\t * tracks\n\t */\n\tclearDtsInfo = function(track) {\n\t  delete track.minSegmentDts;\n\t  delete track.maxSegmentDts;\n\t  delete track.minSegmentPts;\n\t  delete track.maxSegmentPts;\n\t};\n\t\n\t/**\n\t * Calculate the track's baseMediaDecodeTime based on the earliest\n\t * DTS the transmuxer has ever seen and the minimum DTS for the\n\t * current track\n\t */\n\tcalculateTrackBaseMediaDecodeTime = function(track) {\n\t  var\n\t    oneSecondInTS = 90000, // 90kHz clock\n\t    scale,\n\t    // Calculate the distance, in time, that this segment starts from the start\n\t    // of the timeline (earliest time seen since the transmuxer initialized)\n\t    timeSinceStartOfTimeline = track.minSegmentDts - track.timelineStartInfo.dts;\n\t\n\t  // track.timelineStartInfo.baseMediaDecodeTime is the location, in time, where\n\t  // we want the start of the first segment to be placed\n\t  track.baseMediaDecodeTime = track.timelineStartInfo.baseMediaDecodeTime;\n\t\n\t  // Add to that the distance this segment is from the very first\n\t  track.baseMediaDecodeTime += timeSinceStartOfTimeline;\n\t\n\t  // baseMediaDecodeTime must not become negative\n\t  track.baseMediaDecodeTime = Math.max(0, track.baseMediaDecodeTime);\n\t\n\t  if (track.type === 'audio') {\n\t    // Audio has a different clock equal to the sampling_rate so we need to\n\t    // scale the PTS values into the clock rate of the track\n\t    scale = track.samplerate / oneSecondInTS;\n\t    track.baseMediaDecodeTime *= scale;\n\t    track.baseMediaDecodeTime = Math.floor(track.baseMediaDecodeTime);\n\t  }\n\t};\n\t\n\t/**\n\t * A Stream that can combine multiple streams (ie. audio & video)\n\t * into a single output segment for MSE. Also supports audio-only\n\t * and video-only streams.\n\t */\n\tCoalesceStream = function(options, metadataStream) {\n\t  // Number of Tracks per output segment\n\t  // If greater than 1, we combine multiple\n\t  // tracks into a single segment\n\t  this.numberOfTracks = 0;\n\t  this.metadataStream = metadataStream;\n\t\n\t  if (typeof options.remux !== 'undefined') {\n\t    this.remuxTracks = !!options.remux;\n\t  } else {\n\t    this.remuxTracks = true;\n\t  }\n\t\n\t  this.pendingTracks = [];\n\t  this.videoTrack = null;\n\t  this.pendingBoxes = [];\n\t  this.pendingCaptions = [];\n\t  this.pendingMetadata = [];\n\t  this.pendingBytes = 0;\n\t  this.emittedTracks = 0;\n\t\n\t  CoalesceStream.prototype.init.call(this);\n\t\n\t  // Take output from multiple\n\t  this.push = function(output) {\n\t    // buffer incoming captions until the associated video segment\n\t    // finishes\n\t    if (output.text) {\n\t      return this.pendingCaptions.push(output);\n\t    }\n\t    // buffer incoming id3 tags until the final flush\n\t    if (output.frames) {\n\t      return this.pendingMetadata.push(output);\n\t    }\n\t\n\t    // Add this track to the list of pending tracks and store\n\t    // important information required for the construction of\n\t    // the final segment\n\t    this.pendingTracks.push(output.track);\n\t    this.pendingBoxes.push(output.boxes);\n\t    this.pendingBytes += output.boxes.byteLength;\n\t\n\t    if (output.track.type === 'video') {\n\t      this.videoTrack = output.track;\n\t    }\n\t    if (output.track.type === 'audio') {\n\t      this.audioTrack = output.track;\n\t    }\n\t  };\n\t};\n\t\n\tCoalesceStream.prototype = new Stream();\n\tCoalesceStream.prototype.flush = function(flushSource) {\n\t  var\n\t    offset = 0,\n\t    event = {\n\t      captions: [],\n\t      metadata: [],\n\t      info: {}\n\t    },\n\t    caption,\n\t    id3,\n\t    initSegment,\n\t    timelineStartPts = 0,\n\t    i;\n\t\n\t  if (this.pendingTracks.length < this.numberOfTracks) {\n\t    if (flushSource !== 'VideoSegmentStream' &&\n\t        flushSource !== 'AudioSegmentStream') {\n\t      // Return because we haven't received a flush from a data-generating\n\t      // portion of the segment (meaning that we have only recieved meta-data\n\t      // or captions.)\n\t      return;\n\t    } else if (this.remuxTracks) {\n\t      // Return until we have enough tracks from the pipeline to remux (if we\n\t      // are remuxing audio and video into a single MP4)\n\t      return;\n\t    } else if (this.pendingTracks.length === 0) {\n\t      // In the case where we receive a flush without any data having been\n\t      // received we consider it an emitted track for the purposes of coalescing\n\t      // `done` events.\n\t      // We do this for the case where there is an audio and video track in the\n\t      // segment but no audio data. (seen in several playlists with alternate\n\t      // audio tracks and no audio present in the main TS segments.)\n\t      this.emittedTracks++;\n\t\n\t      if (this.emittedTracks >= this.numberOfTracks) {\n\t        this.trigger('done');\n\t        this.emittedTracks = 0;\n\t      }\n\t      return;\n\t    }\n\t  }\n\t\n\t  if (this.videoTrack) {\n\t    timelineStartPts = this.videoTrack.timelineStartInfo.pts;\n\t    VIDEO_PROPERTIES.forEach(function(prop) {\n\t      event.info[prop] = this.videoTrack[prop];\n\t    }, this);\n\t  } else if (this.audioTrack) {\n\t    timelineStartPts = this.audioTrack.timelineStartInfo.pts;\n\t    AUDIO_PROPERTIES.forEach(function(prop) {\n\t      event.info[prop] = this.audioTrack[prop];\n\t    }, this);\n\t  }\n\t\n\t  if (this.pendingTracks.length === 1) {\n\t    event.type = this.pendingTracks[0].type;\n\t  } else {\n\t    event.type = 'combined';\n\t  }\n\t\n\t  this.emittedTracks += this.pendingTracks.length;\n\t\n\t  initSegment = mp4.initSegment(this.pendingTracks);\n\t\n\t  // Create a new typed array to hold the init segment\n\t  event.initSegment = new Uint8Array(initSegment.byteLength);\n\t\n\t  // Create an init segment containing a moov\n\t  // and track definitions\n\t  event.initSegment.set(initSegment);\n\t\n\t  // Create a new typed array to hold the moof+mdats\n\t  event.data = new Uint8Array(this.pendingBytes);\n\t\n\t  // Append each moof+mdat (one per track) together\n\t  for (i = 0; i < this.pendingBoxes.length; i++) {\n\t    event.data.set(this.pendingBoxes[i], offset);\n\t    offset += this.pendingBoxes[i].byteLength;\n\t  }\n\t\n\t  // Translate caption PTS times into second offsets into the\n\t  // video timeline for the segment\n\t  for (i = 0; i < this.pendingCaptions.length; i++) {\n\t    caption = this.pendingCaptions[i];\n\t    caption.startTime = (caption.startPts - timelineStartPts);\n\t    caption.startTime /= 90e3;\n\t    caption.endTime = (caption.endPts - timelineStartPts);\n\t    caption.endTime /= 90e3;\n\t    event.captions.push(caption);\n\t  }\n\t\n\t  // Translate ID3 frame PTS times into second offsets into the\n\t  // video timeline for the segment\n\t  for (i = 0; i < this.pendingMetadata.length; i++) {\n\t    id3 = this.pendingMetadata[i];\n\t    id3.cueTime = (id3.pts - timelineStartPts);\n\t    id3.cueTime /= 90e3;\n\t    event.metadata.push(id3);\n\t  }\n\t  // We add this to every single emitted segment even though we only need\n\t  // it for the first\n\t  event.metadata.dispatchType = this.metadataStream.dispatchType;\n\t\n\t  // Reset stream state\n\t  this.pendingTracks.length = 0;\n\t  this.videoTrack = null;\n\t  this.pendingBoxes.length = 0;\n\t  this.pendingCaptions.length = 0;\n\t  this.pendingBytes = 0;\n\t  this.pendingMetadata.length = 0;\n\t\n\t  // Emit the built segment\n\t  this.trigger('data', event);\n\t\n\t  // Only emit `done` if all tracks have been flushed and emitted\n\t  if (this.emittedTracks >= this.numberOfTracks) {\n\t    this.trigger('done');\n\t    this.emittedTracks = 0;\n\t  }\n\t};\n\t/**\n\t * A Stream that expects MP2T binary data as input and produces\n\t * corresponding media segments, suitable for use with Media Source\n\t * Extension (MSE) implementations that support the ISO BMFF byte\n\t * stream format, like Chrome.\n\t */\n\tTransmuxer = function(options) {\n\t  var\n\t    self = this,\n\t    hasFlushed = true,\n\t    videoTrack,\n\t    audioTrack;\n\t\n\t  Transmuxer.prototype.init.call(this);\n\t\n\t  options = options || {};\n\t  this.baseMediaDecodeTime = options.baseMediaDecodeTime || 0;\n\t  this.transmuxPipeline_ = {};\n\t\n\t  this.setupAacPipeline = function() {\n\t    var pipeline = {};\n\t    this.transmuxPipeline_ = pipeline;\n\t\n\t    pipeline.type = 'aac';\n\t    pipeline.metadataStream = new m2ts.MetadataStream();\n\t\n\t    // set up the parsing pipeline\n\t    pipeline.aacStream = new AacStream();\n\t    pipeline.audioTimestampRolloverStream = new m2ts.TimestampRolloverStream('audio');\n\t    pipeline.timedMetadataTimestampRolloverStream = new m2ts.TimestampRolloverStream('timed-metadata');\n\t    pipeline.adtsStream = new AdtsStream();\n\t    pipeline.coalesceStream = new CoalesceStream(options, pipeline.metadataStream);\n\t    pipeline.headOfPipeline = pipeline.aacStream;\n\t\n\t    pipeline.aacStream\n\t      .pipe(pipeline.audioTimestampRolloverStream)\n\t      .pipe(pipeline.adtsStream);\n\t    pipeline.aacStream\n\t      .pipe(pipeline.timedMetadataTimestampRolloverStream)\n\t      .pipe(pipeline.metadataStream)\n\t      .pipe(pipeline.coalesceStream);\n\t\n\t    pipeline.metadataStream.on('timestamp', function(frame) {\n\t      pipeline.aacStream.setTimestamp(frame.timeStamp);\n\t    });\n\t\n\t    pipeline.aacStream.on('data', function(data) {\n\t      if (data.type === 'timed-metadata' && !pipeline.audioSegmentStream) {\n\t        audioTrack = audioTrack || {\n\t          timelineStartInfo: {\n\t            baseMediaDecodeTime: self.baseMediaDecodeTime\n\t          },\n\t          codec: 'adts',\n\t          type: 'audio'\n\t        };\n\t        // hook up the audio segment stream to the first track with aac data\n\t        pipeline.coalesceStream.numberOfTracks++;\n\t        pipeline.audioSegmentStream = new AudioSegmentStream(audioTrack);\n\t        // Set up the final part of the audio pipeline\n\t        pipeline.adtsStream\n\t          .pipe(pipeline.audioSegmentStream)\n\t          .pipe(pipeline.coalesceStream);\n\t      }\n\t    });\n\t\n\t    // Re-emit any data coming from the coalesce stream to the outside world\n\t    pipeline.coalesceStream.on('data', this.trigger.bind(this, 'data'));\n\t    // Let the consumer know we have finished flushing the entire pipeline\n\t    pipeline.coalesceStream.on('done', this.trigger.bind(this, 'done'));\n\t  };\n\t\n\t  this.setupTsPipeline = function() {\n\t    var pipeline = {};\n\t    this.transmuxPipeline_ = pipeline;\n\t\n\t    pipeline.type = 'ts';\n\t    pipeline.metadataStream = new m2ts.MetadataStream();\n\t\n\t    // set up the parsing pipeline\n\t    pipeline.packetStream = new m2ts.TransportPacketStream();\n\t    pipeline.parseStream = new m2ts.TransportParseStream();\n\t    pipeline.elementaryStream = new m2ts.ElementaryStream();\n\t    pipeline.videoTimestampRolloverStream = new m2ts.TimestampRolloverStream('video');\n\t    pipeline.audioTimestampRolloverStream = new m2ts.TimestampRolloverStream('audio');\n\t    pipeline.timedMetadataTimestampRolloverStream = new m2ts.TimestampRolloverStream('timed-metadata');\n\t    pipeline.adtsStream = new AdtsStream();\n\t    pipeline.h264Stream = new H264Stream();\n\t    pipeline.captionStream = new m2ts.CaptionStream();\n\t    pipeline.coalesceStream = new CoalesceStream(options, pipeline.metadataStream);\n\t    pipeline.headOfPipeline = pipeline.packetStream;\n\t\n\t    // disassemble MPEG2-TS packets into elementary streams\n\t    pipeline.packetStream\n\t      .pipe(pipeline.parseStream)\n\t      .pipe(pipeline.elementaryStream);\n\t\n\t    // !!THIS ORDER IS IMPORTANT!!\n\t    // demux the streams\n\t    pipeline.elementaryStream\n\t      .pipe(pipeline.videoTimestampRolloverStream)\n\t      .pipe(pipeline.h264Stream);\n\t    pipeline.elementaryStream\n\t      .pipe(pipeline.audioTimestampRolloverStream)\n\t      .pipe(pipeline.adtsStream);\n\t\n\t    pipeline.elementaryStream\n\t      .pipe(pipeline.timedMetadataTimestampRolloverStream)\n\t      .pipe(pipeline.metadataStream)\n\t      .pipe(pipeline.coalesceStream);\n\t\n\t    // Hook up CEA-608/708 caption stream\n\t    pipeline.h264Stream.pipe(pipeline.captionStream)\n\t      .pipe(pipeline.coalesceStream);\n\t\n\t    pipeline.elementaryStream.on('data', function(data) {\n\t      var i;\n\t\n\t      if (data.type === 'metadata') {\n\t        i = data.tracks.length;\n\t\n\t        // scan the tracks listed in the metadata\n\t        while (i--) {\n\t          if (!videoTrack && data.tracks[i].type === 'video') {\n\t            videoTrack = data.tracks[i];\n\t            videoTrack.timelineStartInfo.baseMediaDecodeTime = self.baseMediaDecodeTime;\n\t          } else if (!audioTrack && data.tracks[i].type === 'audio') {\n\t            audioTrack = data.tracks[i];\n\t            audioTrack.timelineStartInfo.baseMediaDecodeTime = self.baseMediaDecodeTime;\n\t          }\n\t        }\n\t\n\t        // hook up the video segment stream to the first track with h264 data\n\t        if (videoTrack && !pipeline.videoSegmentStream) {\n\t          pipeline.coalesceStream.numberOfTracks++;\n\t          pipeline.videoSegmentStream = new VideoSegmentStream(videoTrack);\n\t\n\t          pipeline.videoSegmentStream.on('timelineStartInfo', function(timelineStartInfo) {\n\t          // When video emits timelineStartInfo data after a flush, we forward that\n\t          // info to the AudioSegmentStream, if it exists, because video timeline\n\t          // data takes precedence.\n\t            if (audioTrack) {\n\t              audioTrack.timelineStartInfo = timelineStartInfo;\n\t              // On the first segment we trim AAC frames that exist before the\n\t              // very earliest DTS we have seen in video because Chrome will\n\t              // interpret any video track with a baseMediaDecodeTime that is\n\t              // non-zero as a gap.\n\t              pipeline.audioSegmentStream.setEarliestDts(timelineStartInfo.dts);\n\t            }\n\t          });\n\t\n\t          // Set up the final part of the video pipeline\n\t          pipeline.h264Stream\n\t            .pipe(pipeline.videoSegmentStream)\n\t            .pipe(pipeline.coalesceStream);\n\t        }\n\t\n\t        if (audioTrack && !pipeline.audioSegmentStream) {\n\t          // hook up the audio segment stream to the first track with aac data\n\t          pipeline.coalesceStream.numberOfTracks++;\n\t          pipeline.audioSegmentStream = new AudioSegmentStream(audioTrack);\n\t\n\t          // Set up the final part of the audio pipeline\n\t          pipeline.adtsStream\n\t            .pipe(pipeline.audioSegmentStream)\n\t            .pipe(pipeline.coalesceStream);\n\t        }\n\t      }\n\t    });\n\t\n\t    // Re-emit any data coming from the coalesce stream to the outside world\n\t    pipeline.coalesceStream.on('data', this.trigger.bind(this, 'data'));\n\t    // Let the consumer know we have finished flushing the entire pipeline\n\t    pipeline.coalesceStream.on('done', this.trigger.bind(this, 'done'));\n\t  };\n\t\n\t  // hook up the segment streams once track metadata is delivered\n\t  this.setBaseMediaDecodeTime = function(baseMediaDecodeTime) {\n\t    var pipeline = this.transmuxPipeline_;\n\t\n\t    this.baseMediaDecodeTime = baseMediaDecodeTime;\n\t    if (audioTrack) {\n\t      audioTrack.timelineStartInfo.dts = undefined;\n\t      audioTrack.timelineStartInfo.pts = undefined;\n\t      clearDtsInfo(audioTrack);\n\t      audioTrack.timelineStartInfo.baseMediaDecodeTime = baseMediaDecodeTime;\n\t    }\n\t    if (videoTrack) {\n\t      if (pipeline.videoSegmentStream) {\n\t        pipeline.videoSegmentStream.gopCache_ = [];\n\t      }\n\t      videoTrack.timelineStartInfo.dts = undefined;\n\t      videoTrack.timelineStartInfo.pts = undefined;\n\t      clearDtsInfo(videoTrack);\n\t      videoTrack.timelineStartInfo.baseMediaDecodeTime = baseMediaDecodeTime;\n\t    }\n\t  };\n\t\n\t  // feed incoming data to the front of the parsing pipeline\n\t  this.push = function(data) {\n\t    if (hasFlushed) {\n\t      var isAac = isLikelyAacData(data);\n\t\n\t      if (isAac && this.transmuxPipeline_.type !== 'aac') {\n\t        this.setupAacPipeline();\n\t      } else if (!isAac && this.transmuxPipeline_.type !== 'ts') {\n\t        this.setupTsPipeline();\n\t      }\n\t      hasFlushed = false;\n\t    }\n\t    this.transmuxPipeline_.headOfPipeline.push(data);\n\t  };\n\t\n\t  // flush any buffered data\n\t  this.flush = function() {\n\t      hasFlushed = true;\n\t    // Start at the top of the pipeline and flush all pending work\n\t    this.transmuxPipeline_.headOfPipeline.flush();\n\t  };\n\t};\n\tTransmuxer.prototype = new Stream();\n\t\n\tmodule.exports = {\n\t  Transmuxer: Transmuxer,\n\t  VideoSegmentStream: VideoSegmentStream,\n\t  AudioSegmentStream: AudioSegmentStream,\n\t  AUDIO_PROPERTIES: AUDIO_PROPERTIES,\n\t  VIDEO_PROPERTIES: VIDEO_PROPERTIES\n\t};\n\t\n\t},{\"../aac\":69,\"../codecs/adts.js\":71,\"../codecs/h264\":72,\"../m2ts/m2ts.js\":78,\"../utils/stream.js\":89,\"./mp4-generator.js\":84}],87:[function(require,module,exports){\n\t/**\n\t * mux.js\n\t *\n\t * Copyright (c) 2016 Brightcove\n\t * All rights reserved.\n\t *\n\t * Parse mpeg2 transport stream packets to extract basic timing information\n\t */\n\t'use strict';\n\t\n\tvar StreamTypes = require('../m2ts/stream-types.js');\n\tvar handleRollover = require('../m2ts/timestamp-rollover-stream.js').handleRollover;\n\tvar probe = {};\n\tprobe.ts = require('../m2ts/probe.js');\n\tprobe.aac = require('../aac/probe.js');\n\t\n\t\n\tvar\n\t  PES_TIMESCALE = 90000,\n\t  MP2T_PACKET_LENGTH = 188, // bytes\n\t  SYNC_BYTE = 0x47;\n\t\n\tvar isLikelyAacData = function(data) {\n\t  if ((data[0] === 'I'.charCodeAt(0)) &&\n\t      (data[1] === 'D'.charCodeAt(0)) &&\n\t      (data[2] === '3'.charCodeAt(0))) {\n\t    return true;\n\t  }\n\t  return false;\n\t};\n\t\n\t/**\n\t * walks through segment data looking for pat and pmt packets to parse out\n\t * program map table information\n\t */\n\tvar parsePsi_ = function(bytes, pmt) {\n\t  var\n\t    startIndex = 0,\n\t    endIndex = MP2T_PACKET_LENGTH,\n\t    packet, type;\n\t\n\t  while (endIndex < bytes.byteLength) {\n\t    // Look for a pair of start and end sync bytes in the data..\n\t    if (bytes[startIndex] === SYNC_BYTE && bytes[endIndex] === SYNC_BYTE) {\n\t      // We found a packet\n\t      packet = bytes.subarray(startIndex, endIndex);\n\t      type = probe.ts.parseType(packet, pmt.pid);\n\t\n\t      switch (type) {\n\t        case 'pat':\n\t          if (!pmt.pid) {\n\t            pmt.pid = probe.ts.parsePat(packet);\n\t          }\n\t          break;\n\t        case 'pmt':\n\t          if (!pmt.table) {\n\t            pmt.table = probe.ts.parsePmt(packet);\n\t          }\n\t          break;\n\t        default:\n\t          break;\n\t      }\n\t\n\t      // Found the pat and pmt, we can stop walking the segment\n\t      if (pmt.pid && pmt.table) {\n\t        return;\n\t      }\n\t\n\t      startIndex += MP2T_PACKET_LENGTH;\n\t      endIndex += MP2T_PACKET_LENGTH;\n\t      continue;\n\t    }\n\t\n\t    // If we get here, we have somehow become de-synchronized and we need to step\n\t    // forward one byte at a time until we find a pair of sync bytes that denote\n\t    // a packet\n\t    startIndex++;\n\t    endIndex++;\n\t  }\n\t};\n\t\n\t/**\n\t * walks through the segment data from the start and end to get timing information\n\t * for the first and last audio pes packets\n\t */\n\tvar parseAudioPes_ = function(bytes, pmt, result) {\n\t  var\n\t    startIndex = 0,\n\t    endIndex = MP2T_PACKET_LENGTH,\n\t    packet, type, pesType, pusi, parsed;\n\t\n\t  var endLoop = false;\n\t\n\t  // Start walking from start of segment to get first audio packet\n\t  while (endIndex < bytes.byteLength) {\n\t    // Look for a pair of start and end sync bytes in the data..\n\t    if (bytes[startIndex] === SYNC_BYTE && bytes[endIndex] === SYNC_BYTE) {\n\t      // We found a packet\n\t      packet = bytes.subarray(startIndex, endIndex);\n\t      type = probe.ts.parseType(packet, pmt.pid);\n\t\n\t      switch (type) {\n\t        case 'pes':\n\t          pesType = probe.ts.parsePesType(packet, pmt.table);\n\t          pusi = probe.ts.parsePayloadUnitStartIndicator(packet);\n\t          if (pesType === 'audio' && pusi) {\n\t            parsed = probe.ts.parsePesTime(packet);\n\t            parsed.type = 'audio';\n\t            result.audio.push(parsed);\n\t            endLoop = true;\n\t          }\n\t          break;\n\t        default:\n\t          break;\n\t      }\n\t\n\t      if (endLoop) {\n\t        break;\n\t      }\n\t\n\t      startIndex += MP2T_PACKET_LENGTH;\n\t      endIndex += MP2T_PACKET_LENGTH;\n\t      continue;\n\t    }\n\t\n\t    // If we get here, we have somehow become de-synchronized and we need to step\n\t    // forward one byte at a time until we find a pair of sync bytes that denote\n\t    // a packet\n\t    startIndex++;\n\t    endIndex++;\n\t  }\n\t\n\t  // Start walking from end of segment to get last audio packet\n\t  endIndex = bytes.byteLength;\n\t  startIndex = endIndex - MP2T_PACKET_LENGTH;\n\t  endLoop = false;\n\t  while (startIndex >= 0) {\n\t    // Look for a pair of start and end sync bytes in the data..\n\t    if (bytes[startIndex] === SYNC_BYTE && bytes[endIndex] === SYNC_BYTE) {\n\t      // We found a packet\n\t      packet = bytes.subarray(startIndex, endIndex);\n\t      type = probe.ts.parseType(packet, pmt.pid);\n\t\n\t      switch (type) {\n\t        case 'pes':\n\t          pesType = probe.ts.parsePesType(packet, pmt.table);\n\t          pusi = probe.ts.parsePayloadUnitStartIndicator(packet);\n\t          if (pesType === 'audio' && pusi) {\n\t            parsed = probe.ts.parsePesTime(packet);\n\t            parsed.type = 'audio';\n\t            result.audio.push(parsed);\n\t            endLoop = true;\n\t          }\n\t          break;\n\t        default:\n\t          break;\n\t      }\n\t\n\t      if (endLoop) {\n\t        break;\n\t      }\n\t\n\t      startIndex -= MP2T_PACKET_LENGTH;\n\t      endIndex -= MP2T_PACKET_LENGTH;\n\t      continue;\n\t    }\n\t\n\t    // If we get here, we have somehow become de-synchronized and we need to step\n\t    // forward one byte at a time until we find a pair of sync bytes that denote\n\t    // a packet\n\t    startIndex--;\n\t    endIndex--;\n\t  }\n\t};\n\t\n\t/**\n\t * walks through the segment data from the start and end to get timing information\n\t * for the first and last video pes packets as well as timing information for the first\n\t * key frame.\n\t */\n\tvar parseVideoPes_ = function(bytes, pmt, result) {\n\t  var\n\t    startIndex = 0,\n\t    endIndex = MP2T_PACKET_LENGTH,\n\t    packet, type, pesType, pusi, parsed, frame, i, pes;\n\t\n\t  var endLoop = false;\n\t\n\t  var currentFrame = {\n\t    data: [],\n\t    size: 0\n\t  };\n\t\n\t  // Start walking from start of segment to get first video packet\n\t  while (endIndex < bytes.byteLength) {\n\t    // Look for a pair of start and end sync bytes in the data..\n\t    if (bytes[startIndex] === SYNC_BYTE && bytes[endIndex] === SYNC_BYTE) {\n\t      // We found a packet\n\t      packet = bytes.subarray(startIndex, endIndex);\n\t      type = probe.ts.parseType(packet, pmt.pid);\n\t\n\t      switch (type) {\n\t        case 'pes':\n\t          pesType = probe.ts.parsePesType(packet, pmt.table);\n\t          pusi = probe.ts.parsePayloadUnitStartIndicator(packet);\n\t          if (pesType === 'video') {\n\t            if (pusi && !endLoop) {\n\t              parsed = probe.ts.parsePesTime(packet);\n\t              parsed.type = 'video';\n\t              result.video.push(parsed);\n\t              endLoop = true;\n\t            }\n\t            if (!result.firstKeyFrame) {\n\t              if (pusi) {\n\t                if (currentFrame.size !== 0) {\n\t                  frame = new Uint8Array(currentFrame.size);\n\t                  i = 0;\n\t                  while (currentFrame.data.length) {\n\t                    pes = currentFrame.data.shift();\n\t                    frame.set(pes, i);\n\t                    i += pes.byteLength;\n\t                  }\n\t                  if (probe.ts.videoPacketContainsKeyFrame(frame)) {\n\t                    result.firstKeyFrame = probe.ts.parsePesTime(frame);\n\t                    result.firstKeyFrame.type = 'video';\n\t                  }\n\t                  currentFrame.size = 0;\n\t                }\n\t              }\n\t              currentFrame.data.push(packet);\n\t              currentFrame.size += packet.byteLength;\n\t            }\n\t          }\n\t          break;\n\t        default:\n\t          break;\n\t      }\n\t\n\t      if (endLoop && result.firstKeyFrame) {\n\t        break;\n\t      }\n\t\n\t      startIndex += MP2T_PACKET_LENGTH;\n\t      endIndex += MP2T_PACKET_LENGTH;\n\t      continue;\n\t    }\n\t\n\t    // If we get here, we have somehow become de-synchronized and we need to step\n\t    // forward one byte at a time until we find a pair of sync bytes that denote\n\t    // a packet\n\t    startIndex++;\n\t    endIndex++;\n\t  }\n\t\n\t  // Start walking from end of segment to get last video packet\n\t  endIndex = bytes.byteLength;\n\t  startIndex = endIndex - MP2T_PACKET_LENGTH;\n\t  endLoop = false;\n\t  while (startIndex >= 0) {\n\t    // Look for a pair of start and end sync bytes in the data..\n\t    if (bytes[startIndex] === SYNC_BYTE && bytes[endIndex] === SYNC_BYTE) {\n\t      // We found a packet\n\t      packet = bytes.subarray(startIndex, endIndex);\n\t      type = probe.ts.parseType(packet, pmt.pid);\n\t\n\t      switch (type) {\n\t        case 'pes':\n\t          pesType = probe.ts.parsePesType(packet, pmt.table);\n\t          pusi = probe.ts.parsePayloadUnitStartIndicator(packet);\n\t          if (pesType === 'video' && pusi) {\n\t              parsed = probe.ts.parsePesTime(packet);\n\t              parsed.type = 'video';\n\t              result.video.push(parsed);\n\t            endLoop = true;\n\t          }\n\t          break;\n\t        default:\n\t          break;\n\t      }\n\t\n\t      if (endLoop) {\n\t        break;\n\t      }\n\t\n\t      startIndex -= MP2T_PACKET_LENGTH;\n\t      endIndex -= MP2T_PACKET_LENGTH;\n\t      continue;\n\t    }\n\t\n\t    // If we get here, we have somehow become de-synchronized and we need to step\n\t    // forward one byte at a time until we find a pair of sync bytes that denote\n\t    // a packet\n\t    startIndex--;\n\t    endIndex--;\n\t  }\n\t};\n\t\n\t/**\n\t * Adjusts the timestamp information for the segment to account for\n\t * rollover and convert to seconds based on pes packet timescale (90khz clock)\n\t */\n\tvar adjustTimestamp_ = function(segmentInfo, baseTimestamp) {\n\t  if (segmentInfo.audio && segmentInfo.audio.length) {\n\t    var audioBaseTimestamp = baseTimestamp;\n\t    if (typeof audioBaseTimestamp === 'undefined') {\n\t      audioBaseTimestamp = segmentInfo.audio[0].dts;\n\t    }\n\t    segmentInfo.audio.forEach(function(info) {\n\t      info.dts = handleRollover(info.dts, audioBaseTimestamp);\n\t      info.pts = handleRollover(info.pts, audioBaseTimestamp);\n\t      // time in seconds\n\t      info.dtsTime = info.dts / PES_TIMESCALE;\n\t      info.ptsTime = info.pts / PES_TIMESCALE;\n\t    });\n\t  }\n\t\n\t  if (segmentInfo.video && segmentInfo.video.length) {\n\t    var videoBaseTimestamp = baseTimestamp;\n\t    if (typeof videoBaseTimestamp === 'undefined') {\n\t      videoBaseTimestamp = segmentInfo.video[0].dts;\n\t    }\n\t    segmentInfo.video.forEach(function(info) {\n\t      info.dts = handleRollover(info.dts, videoBaseTimestamp);\n\t      info.pts = handleRollover(info.pts, videoBaseTimestamp);\n\t      // time in seconds\n\t      info.dtsTime = info.dts / PES_TIMESCALE;\n\t      info.ptsTime = info.pts / PES_TIMESCALE;\n\t    });\n\t    if (segmentInfo.firstKeyFrame) {\n\t      var frame = segmentInfo.firstKeyFrame;\n\t      frame.dts = handleRollover(frame.dts, videoBaseTimestamp);\n\t      frame.pts = handleRollover(frame.pts, videoBaseTimestamp);\n\t      // time in seconds\n\t      frame.dtsTime = frame.dts / PES_TIMESCALE;\n\t      frame.ptsTime = frame.dts / PES_TIMESCALE;\n\t    }\n\t  }\n\t};\n\t\n\t/**\n\t * inspects the aac data stream for start and end time information\n\t */\n\tvar inspectAac_ = function(bytes) {\n\t  var\n\t    endLoop = false,\n\t    audioCount = 0,\n\t    sampleRate = null,\n\t    timestamp = null,\n\t    frameSize = 0,\n\t    byteIndex = 0,\n\t    packet;\n\t\n\t  while (bytes.length - byteIndex >= 3) {\n\t    var type = probe.aac.parseType(bytes, byteIndex);\n\t    switch (type) {\n\t      case 'timed-metadata':\n\t        // Exit early because we don't have enough to parse\n\t        // the ID3 tag header\n\t        if (bytes.length - byteIndex < 10) {\n\t          endLoop = true;\n\t          break;\n\t        }\n\t\n\t        frameSize = probe.aac.parseId3TagSize(bytes, byteIndex);\n\t\n\t        // Exit early if we don't have enough in the buffer\n\t        // to emit a full packet\n\t        if (frameSize > bytes.length) {\n\t          endLoop = true;\n\t          break;\n\t        }\n\t        if (timestamp === null) {\n\t          packet = bytes.subarray(byteIndex, byteIndex + frameSize);\n\t          timestamp = probe.aac.parseAacTimestamp(packet);\n\t        }\n\t        byteIndex += frameSize;\n\t        break;\n\t      case 'audio':\n\t        // Exit early because we don't have enough to parse\n\t        // the ADTS frame header\n\t        if (bytes.length - byteIndex < 7) {\n\t          endLoop = true;\n\t          break;\n\t        }\n\t\n\t        frameSize = probe.aac.parseAdtsSize(bytes, byteIndex);\n\t\n\t        // Exit early if we don't have enough in the buffer\n\t        // to emit a full packet\n\t        if (frameSize > bytes.length) {\n\t          endLoop = true;\n\t          break;\n\t        }\n\t        if (sampleRate === null) {\n\t          packet = bytes.subarray(byteIndex, byteIndex + frameSize);\n\t          sampleRate = probe.aac.parseSampleRate(packet);\n\t        }\n\t        audioCount++;\n\t        byteIndex += frameSize;\n\t        break;\n\t      default:\n\t        byteIndex++;\n\t        break;\n\t    }\n\t    if (endLoop) {\n\t      return null;\n\t    }\n\t  }\n\t  if (sampleRate === null || timestamp === null) {\n\t    return null;\n\t  }\n\t\n\t  var audioTimescale = PES_TIMESCALE / sampleRate;\n\t\n\t  var result = {\n\t    audio: [\n\t      {\n\t        type: 'audio',\n\t        dts: timestamp,\n\t        pts: timestamp\n\t      },\n\t      {\n\t        type: 'audio',\n\t        dts: timestamp + (audioCount * 1024 * audioTimescale),\n\t        pts: timestamp + (audioCount * 1024 * audioTimescale)\n\t      }\n\t    ]\n\t  };\n\t\n\t  return result;\n\t};\n\t\n\t/**\n\t * inspects the transport stream segment data for start and end time information\n\t * of the audio and video tracks (when present) as well as the first key frame's\n\t * start time.\n\t */\n\tvar inspectTs_ = function(bytes) {\n\t  var pmt = {\n\t    pid: null,\n\t    table: null\n\t  };\n\t\n\t  var result = {};\n\t\n\t  parsePsi_(bytes, pmt);\n\t\n\t  for (var pid in pmt.table) {\n\t    if (pmt.table.hasOwnProperty(pid)) {\n\t      var type = pmt.table[pid];\n\t      switch (type) {\n\t        case StreamTypes.H264_STREAM_TYPE:\n\t          result.video = [];\n\t          parseVideoPes_(bytes, pmt, result);\n\t          if (result.video.length === 0) {\n\t            delete result.video;\n\t          }\n\t          break;\n\t        case StreamTypes.ADTS_STREAM_TYPE:\n\t          result.audio = [];\n\t          parseAudioPes_(bytes, pmt, result);\n\t          if (result.audio.length === 0) {\n\t            delete result.audio;\n\t          }\n\t          break;\n\t        default:\n\t          break;\n\t      }\n\t    }\n\t  }\n\t  return result;\n\t};\n\t\n\t/**\n\t * Inspects segment byte data and returns an object with start and end timing information\n\t *\n\t * @param {Uint8Array} bytes The segment byte data\n\t * @param {Number} baseTimestamp Relative reference timestamp used when adjusting frame\n\t *  timestamps for rollover. This value must be in 90khz clock.\n\t * @return {Object} Object containing start and end frame timing info of segment.\n\t */\n\tvar inspect = function(bytes, baseTimestamp) {\n\t  var isAacData = isLikelyAacData(bytes);\n\t\n\t  var result;\n\t\n\t  if (isAacData) {\n\t    result = inspectAac_(bytes);\n\t  } else {\n\t    result = inspectTs_(bytes);\n\t  }\n\t\n\t  if (!result || (!result.audio && !result.video)) {\n\t    return null;\n\t  }\n\t\n\t  adjustTimestamp_(result, baseTimestamp);\n\t\n\t  return result;\n\t};\n\t\n\tmodule.exports = {\n\t  inspect: inspect\n\t};\n\t\n\t},{\"../aac/probe.js\":70,\"../m2ts/probe.js\":80,\"../m2ts/stream-types.js\":81,\"../m2ts/timestamp-rollover-stream.js\":82}],88:[function(require,module,exports){\n\t'use strict';\n\t\n\tvar ExpGolomb;\n\t\n\t/**\n\t * Parser for exponential Golomb codes, a variable-bitwidth number encoding\n\t * scheme used by h264.\n\t */\n\tExpGolomb = function(workingData) {\n\t  var\n\t    // the number of bytes left to examine in workingData\n\t    workingBytesAvailable = workingData.byteLength,\n\t\n\t    // the current word being examined\n\t    workingWord = 0, // :uint\n\t\n\t    // the number of bits left to examine in the current word\n\t    workingBitsAvailable = 0; // :uint;\n\t\n\t  // ():uint\n\t  this.length = function() {\n\t    return (8 * workingBytesAvailable);\n\t  };\n\t\n\t  // ():uint\n\t  this.bitsAvailable = function() {\n\t    return (8 * workingBytesAvailable) + workingBitsAvailable;\n\t  };\n\t\n\t  // ():void\n\t  this.loadWord = function() {\n\t    var\n\t      position = workingData.byteLength - workingBytesAvailable,\n\t      workingBytes = new Uint8Array(4),\n\t      availableBytes = Math.min(4, workingBytesAvailable);\n\t\n\t    if (availableBytes === 0) {\n\t      throw new Error('no bytes available');\n\t    }\n\t\n\t    workingBytes.set(workingData.subarray(position,\n\t                                          position + availableBytes));\n\t    workingWord = new DataView(workingBytes.buffer).getUint32(0);\n\t\n\t    // track the amount of workingData that has been processed\n\t    workingBitsAvailable = availableBytes * 8;\n\t    workingBytesAvailable -= availableBytes;\n\t  };\n\t\n\t  // (count:int):void\n\t  this.skipBits = function(count) {\n\t    var skipBytes; // :int\n\t    if (workingBitsAvailable > count) {\n\t      workingWord          <<= count;\n\t      workingBitsAvailable -= count;\n\t    } else {\n\t      count -= workingBitsAvailable;\n\t      skipBytes = Math.floor(count / 8);\n\t\n\t      count -= (skipBytes * 8);\n\t      workingBytesAvailable -= skipBytes;\n\t\n\t      this.loadWord();\n\t\n\t      workingWord <<= count;\n\t      workingBitsAvailable -= count;\n\t    }\n\t  };\n\t\n\t  // (size:int):uint\n\t  this.readBits = function(size) {\n\t    var\n\t      bits = Math.min(workingBitsAvailable, size), // :uint\n\t      valu = workingWord >>> (32 - bits); // :uint\n\t    // if size > 31, handle error\n\t    workingBitsAvailable -= bits;\n\t    if (workingBitsAvailable > 0) {\n\t      workingWord <<= bits;\n\t    } else if (workingBytesAvailable > 0) {\n\t      this.loadWord();\n\t    }\n\t\n\t    bits = size - bits;\n\t    if (bits > 0) {\n\t      return valu << bits | this.readBits(bits);\n\t    }\n\t    return valu;\n\t  };\n\t\n\t  // ():uint\n\t  this.skipLeadingZeros = function() {\n\t    var leadingZeroCount; // :uint\n\t    for (leadingZeroCount = 0; leadingZeroCount < workingBitsAvailable; ++leadingZeroCount) {\n\t      if ((workingWord & (0x80000000 >>> leadingZeroCount)) !== 0) {\n\t        // the first bit of working word is 1\n\t        workingWord <<= leadingZeroCount;\n\t        workingBitsAvailable -= leadingZeroCount;\n\t        return leadingZeroCount;\n\t      }\n\t    }\n\t\n\t    // we exhausted workingWord and still have not found a 1\n\t    this.loadWord();\n\t    return leadingZeroCount + this.skipLeadingZeros();\n\t  };\n\t\n\t  // ():void\n\t  this.skipUnsignedExpGolomb = function() {\n\t    this.skipBits(1 + this.skipLeadingZeros());\n\t  };\n\t\n\t  // ():void\n\t  this.skipExpGolomb = function() {\n\t    this.skipBits(1 + this.skipLeadingZeros());\n\t  };\n\t\n\t  // ():uint\n\t  this.readUnsignedExpGolomb = function() {\n\t    var clz = this.skipLeadingZeros(); // :uint\n\t    return this.readBits(clz + 1) - 1;\n\t  };\n\t\n\t  // ():int\n\t  this.readExpGolomb = function() {\n\t    var valu = this.readUnsignedExpGolomb(); // :int\n\t    if (0x01 & valu) {\n\t      // the number is odd if the low order bit is set\n\t      return (1 + valu) >>> 1; // add 1 to make it even, and divide by 2\n\t    }\n\t    return -1 * (valu >>> 1); // divide by two then make it negative\n\t  };\n\t\n\t  // Some convenience functions\n\t  // :Boolean\n\t  this.readBoolean = function() {\n\t    return this.readBits(1) === 1;\n\t  };\n\t\n\t  // ():int\n\t  this.readUnsignedByte = function() {\n\t    return this.readBits(8);\n\t  };\n\t\n\t  this.loadWord();\n\t};\n\t\n\tmodule.exports = ExpGolomb;\n\t\n\t},{}],89:[function(require,module,exports){\n\t/**\n\t * mux.js\n\t *\n\t * Copyright (c) 2014 Brightcove\n\t * All rights reserved.\n\t *\n\t * A lightweight readable stream implemention that handles event dispatching.\n\t * Objects that inherit from streams should call init in their constructors.\n\t */\n\t'use strict';\n\t\n\tvar Stream = function() {\n\t  this.init = function() {\n\t    var listeners = {};\n\t    /**\n\t     * Add a listener for a specified event type.\n\t     * @param type {string} the event name\n\t     * @param listener {function} the callback to be invoked when an event of\n\t     * the specified type occurs\n\t     */\n\t    this.on = function(type, listener) {\n\t      if (!listeners[type]) {\n\t        listeners[type] = [];\n\t      }\n\t      listeners[type] = listeners[type].concat(listener);\n\t    };\n\t    /**\n\t     * Remove a listener for a specified event type.\n\t     * @param type {string} the event name\n\t     * @param listener {function} a function previously registered for this\n\t     * type of event through `on`\n\t     */\n\t    this.off = function(type, listener) {\n\t      var index;\n\t      if (!listeners[type]) {\n\t        return false;\n\t      }\n\t      index = listeners[type].indexOf(listener);\n\t      listeners[type] = listeners[type].slice();\n\t      listeners[type].splice(index, 1);\n\t      return index > -1;\n\t    };\n\t    /**\n\t     * Trigger an event of the specified type on this stream. Any additional\n\t     * arguments to this function are passed as parameters to event listeners.\n\t     * @param type {string} the event name\n\t     */\n\t    this.trigger = function(type) {\n\t      var callbacks, i, length, args;\n\t      callbacks = listeners[type];\n\t      if (!callbacks) {\n\t        return;\n\t      }\n\t      // Slicing the arguments on every invocation of this method\n\t      // can add a significant amount of overhead. Avoid the\n\t      // intermediate object creation for the common case of a\n\t      // single callback argument\n\t      if (arguments.length === 2) {\n\t        length = callbacks.length;\n\t        for (i = 0; i < length; ++i) {\n\t          callbacks[i].call(this, arguments[1]);\n\t        }\n\t      } else {\n\t        args = [];\n\t        i = arguments.length;\n\t        for (i = 1; i < arguments.length; ++i) {\n\t          args.push(arguments[i]);\n\t        }\n\t        length = callbacks.length;\n\t        for (i = 0; i < length; ++i) {\n\t          callbacks[i].apply(this, args);\n\t        }\n\t      }\n\t    };\n\t    /**\n\t     * Destroys the stream and cleans up.\n\t     */\n\t    this.dispose = function() {\n\t      listeners = {};\n\t    };\n\t  };\n\t};\n\t\n\t/**\n\t * Forwards all `data` events on this stream to the destination stream. The\n\t * destination stream should provide a method `push` to receive the data\n\t * events as they arrive.\n\t * @param destination {stream} the stream that will receive all `data` events\n\t * @param autoFlush {boolean} if false, we will not call `flush` on the destination\n\t *                            when the current stream emits a 'done' event\n\t * @see http://nodejs.org/api/stream.html#stream_readable_pipe_destination_options\n\t */\n\tStream.prototype.pipe = function(destination) {\n\t  this.on('data', function(data) {\n\t    destination.push(data);\n\t  });\n\t\n\t  this.on('done', function(flushSource) {\n\t    destination.flush(flushSource);\n\t  });\n\t\n\t  return destination;\n\t};\n\t\n\t// Default stream functions that are expected to be overridden to perform\n\t// actual work. These are provided by the prototype as a sort of no-op\n\t// implementation so that we don't have to check for their existence in the\n\t// `pipe` function above.\n\tStream.prototype.push = function(data) {\n\t  this.trigger('data', data);\n\t};\n\t\n\tStream.prototype.flush = function(flushSource) {\n\t  this.trigger('done', flushSource);\n\t};\n\t\n\tmodule.exports = Stream;\n\t\n\t},{}],90:[function(require,module,exports){\n\t/* jshint ignore:start */\r\n\t(function(root) { \r\n\t/* jshint ignore:end */\r\n\t  var URLToolkit = {\r\n\t    // build an absolute URL from a relative one using the provided baseURL\r\n\t    // if relativeURL is an absolute URL it will be returned as is.\r\n\t    buildAbsoluteURL: function(baseURL, relativeURL) {\r\n\t      // remove any remaining space and CRLF\r\n\t      relativeURL = relativeURL.trim();\r\n\t      if (/^[a-z]+:/i.test(relativeURL)) {\r\n\t        // complete url, not relative\r\n\t        return relativeURL;\r\n\t      }\r\n\t\r\n\t      var relativeURLQuery = null;\r\n\t      var relativeURLHash = null;\r\n\t\r\n\t      var relativeURLHashSplit = /^([^#]*)(.*)$/.exec(relativeURL);\r\n\t      if (relativeURLHashSplit) {\r\n\t        relativeURLHash = relativeURLHashSplit[2];\r\n\t        relativeURL = relativeURLHashSplit[1];\r\n\t      }\r\n\t      var relativeURLQuerySplit = /^([^\\?]*)(.*)$/.exec(relativeURL);\r\n\t      if (relativeURLQuerySplit) {\r\n\t        relativeURLQuery = relativeURLQuerySplit[2];\r\n\t        relativeURL = relativeURLQuerySplit[1];\r\n\t      }\r\n\t\r\n\t      var baseURLHashSplit = /^([^#]*)(.*)$/.exec(baseURL);\r\n\t      if (baseURLHashSplit) {\r\n\t        baseURL = baseURLHashSplit[1];\r\n\t      }\r\n\t      var baseURLQuerySplit = /^([^\\?]*)(.*)$/.exec(baseURL);\r\n\t      if (baseURLQuerySplit) {\r\n\t        baseURL = baseURLQuerySplit[1];\r\n\t      }\r\n\t\r\n\t      var baseURLDomainSplit = /^(([a-z]+:)?\\/\\/[a-z0-9\\.\\-_~]+(:[0-9]+)?)?(\\/.*)$/i.exec(baseURL);\r\n\t      if (!baseURLDomainSplit) {\r\n\t        throw new Error('Error trying to parse base URL.');\r\n\t      }\r\n\t      \r\n\t      // e.g. 'http:', 'https:', ''\r\n\t      var baseURLProtocol = baseURLDomainSplit[2] || '';\r\n\t      // e.g. 'http://example.com', '//example.com', ''\r\n\t      var baseURLProtocolDomain = baseURLDomainSplit[1] || '';\r\n\t      // e.g. '/a/b/c/playlist.m3u8'\r\n\t      var baseURLPath = baseURLDomainSplit[4];\r\n\t\r\n\t      var builtURL = null;\r\n\t      if (/^\\/\\//.test(relativeURL)) {\r\n\t        // relative url starts wth '//' so copy protocol (which may be '' if baseUrl didn't provide one)\r\n\t        builtURL = baseURLProtocol+'//'+URLToolkit.buildAbsolutePath('', relativeURL.substring(2));\r\n\t      }\r\n\t      else if (/^\\//.test(relativeURL)) {\r\n\t        // relative url starts with '/' so start from root of domain\r\n\t        builtURL = baseURLProtocolDomain+'/'+URLToolkit.buildAbsolutePath('', relativeURL.substring(1));\r\n\t      }\r\n\t      else {\r\n\t        builtURL = URLToolkit.buildAbsolutePath(baseURLProtocolDomain+baseURLPath, relativeURL);\r\n\t      }\r\n\t\r\n\t      // put the query and hash parts back\r\n\t      if (relativeURLQuery) {\r\n\t        builtURL += relativeURLQuery;\r\n\t      }\r\n\t      if (relativeURLHash) {\r\n\t        builtURL += relativeURLHash;\r\n\t      }\r\n\t      return builtURL;\r\n\t    },\r\n\t\r\n\t    // build an absolute path using the provided basePath\r\n\t    // adapted from https://developer.mozilla.org/en-US/docs/Web/API/document/cookie#Using_relative_URLs_in_the_path_parameter\r\n\t    // this does not handle the case where relativePath is \"/\" or \"//\". These cases should be handled outside this.\r\n\t    buildAbsolutePath: function(basePath, relativePath) {\r\n\t      var sRelPath = relativePath;\r\n\t      var nUpLn, sDir = '', sPath = basePath.replace(/[^\\/]*$/, sRelPath.replace(/(\\/|^)(?:\\.?\\/+)+/g, '$1'));\r\n\t      for (var nEnd, nStart = 0; nEnd = sPath.indexOf('/../', nStart), nEnd > -1; nStart = nEnd + nUpLn) {\r\n\t        nUpLn = /^\\/(?:\\.\\.\\/)*/.exec(sPath.slice(nEnd))[0].length;\r\n\t        sDir = (sDir + sPath.substring(nStart, nEnd)).replace(new RegExp('(?:\\\\\\/+[^\\\\\\/]*){0,' + ((nUpLn - 1) / 3) + '}$'), '/');\r\n\t      }\r\n\t      return sDir + sPath.substr(nStart);\r\n\t    }\r\n\t  };\r\n\t\r\n\t/* jshint ignore:start */\r\n\t  if(typeof exports === 'object' && typeof module === 'object')\r\n\t    module.exports = URLToolkit;\r\n\t  else if(typeof define === 'function' && define.amd)\r\n\t    define([], function() { return URLToolkit; });\r\n\t  else if(typeof exports === 'object')\r\n\t    exports[\"URLToolkit\"] = URLToolkit;\r\n\t  else\r\n\t    root[\"URLToolkit\"] = URLToolkit;\r\n\t})(this);\r\n\t/* jshint ignore:end */\r\n\t\n\t},{}],91:[function(require,module,exports){\n\t(function (global){\n\t/**\n\t * @file add-text-track-data.js\n\t */\n\t'use strict';\n\t\n\tObject.defineProperty(exports, '__esModule', {\n\t  value: true\n\t});\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\t\n\tvar _globalWindow = require('global/window');\n\t\n\tvar _globalWindow2 = _interopRequireDefault(_globalWindow);\n\t\n\tvar _videoJs = (typeof window !== \"undefined\" ? window['videojs'] : typeof global !== \"undefined\" ? global['videojs'] : null);\n\t\n\tvar _videoJs2 = _interopRequireDefault(_videoJs);\n\t\n\t/**\n\t * Define properties on a cue for backwards compatability,\n\t * but warn the user that the way that they are using it\n\t * is depricated and will be removed at a later date.\n\t *\n\t * @param {Cue} cue the cue to add the properties on\n\t * @private\n\t */\n\tvar deprecateOldCue = function deprecateOldCue(cue) {\n\t  Object.defineProperties(cue.frame, {\n\t    id: {\n\t      get: function get() {\n\t        _videoJs2['default'].log.warn('cue.frame.id is deprecated. Use cue.value.key instead.');\n\t        return cue.value.key;\n\t      }\n\t    },\n\t    value: {\n\t      get: function get() {\n\t        _videoJs2['default'].log.warn('cue.frame.value is deprecated. Use cue.value.data instead.');\n\t        return cue.value.data;\n\t      }\n\t    },\n\t    privateData: {\n\t      get: function get() {\n\t        _videoJs2['default'].log.warn('cue.frame.privateData is deprecated. Use cue.value.data instead.');\n\t        return cue.value.data;\n\t      }\n\t    }\n\t  });\n\t};\n\t\n\tvar durationOfVideo = function durationOfVideo(duration) {\n\t  var dur = undefined;\n\t\n\t  if (isNaN(duration) || Math.abs(duration) === Infinity) {\n\t    dur = Number.MAX_VALUE;\n\t  } else {\n\t    dur = duration;\n\t  }\n\t  return dur;\n\t};\n\t/**\n\t * Add text track data to a source handler given the captions and\n\t * metadata from the buffer.\n\t *\n\t * @param {Object} sourceHandler the flash or virtual source buffer\n\t * @param {Array} captionArray an array of caption data\n\t * @param {Array} cue an array of meta data\n\t * @private\n\t */\n\tvar addTextTrackData = function addTextTrackData(sourceHandler, captionArray, metadataArray) {\n\t  var Cue = _globalWindow2['default'].WebKitDataCue || _globalWindow2['default'].VTTCue;\n\t\n\t  if (captionArray) {\n\t    captionArray.forEach(function (caption) {\n\t      this.inbandTextTrack_.addCue(new Cue(caption.startTime + this.timestampOffset, caption.endTime + this.timestampOffset, caption.text));\n\t    }, sourceHandler);\n\t  }\n\t\n\t  if (metadataArray) {\n\t    var videoDuration = durationOfVideo(sourceHandler.mediaSource_.duration);\n\t\n\t    metadataArray.forEach(function (metadata) {\n\t      var time = metadata.cueTime + this.timestampOffset;\n\t\n\t      metadata.frames.forEach(function (frame) {\n\t        var cue = new Cue(time, time, frame.value || frame.url || frame.data || '');\n\t\n\t        cue.frame = frame;\n\t        cue.value = frame;\n\t        deprecateOldCue(cue);\n\t\n\t        this.metadataTrack_.addCue(cue);\n\t      }, this);\n\t    }, sourceHandler);\n\t\n\t    // Updating the metadeta cues so that\n\t    // the endTime of each cue is the startTime of the next cue\n\t    // the endTime of last cue is the duration of the video\n\t    if (sourceHandler.metadataTrack_ && sourceHandler.metadataTrack_.cues && sourceHandler.metadataTrack_.cues.length) {\n\t      var cues = sourceHandler.metadataTrack_.cues;\n\t      var cuesArray = [];\n\t\n\t      for (var j = 0; j < cues.length; j++) {\n\t        cuesArray.push(cues[j]);\n\t      }\n\t      cuesArray.sort(function (first, second) {\n\t        return first.startTime - second.startTime;\n\t      });\n\t\n\t      for (var i = 0; i < cuesArray.length - 1; i++) {\n\t        if (cuesArray[i].endTime !== cuesArray[i + 1].startTime) {\n\t          cuesArray[i].endTime = cuesArray[i + 1].startTime;\n\t        }\n\t      }\n\t      cuesArray[cuesArray.length - 1].endTime = videoDuration;\n\t    }\n\t  }\n\t};\n\t\n\texports['default'] = {\n\t  addTextTrackData: addTextTrackData,\n\t  durationOfVideo: durationOfVideo\n\t};\n\tmodule.exports = exports['default'];\n\t}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n\t},{\"global/window\":27}],92:[function(require,module,exports){\n\t/**\n\t * Remove the text track from the player if one with matching kind and\n\t * label properties already exists on the player\n\t *\n\t * @param {Object} player the video.js player object\n\t * @param {String} kind to be considered the text track's `kind` must match\n\t * @param {String} label to be considered the text track's `label` must match\n\t * @private\n\t */\n\t'use strict';\n\t\n\tObject.defineProperty(exports, '__esModule', {\n\t  value: true\n\t});\n\tvar removeExistingTrack = function removeExistingTrack(player, kind, label) {\n\t  var tracks = player.remoteTextTracks() || [];\n\t\n\t  for (var i = 0; i < tracks.length; i++) {\n\t    var track = tracks[i];\n\t\n\t    if (track.kind === kind && track.label === label) {\n\t      player.removeRemoteTextTrack(track);\n\t    }\n\t  }\n\t};\n\t\n\texports.removeExistingTrack = removeExistingTrack;\n\t/**\n\t * Cleaup text tracks on video.js if they exist\n\t *\n\t * @param {Object} player the video.js player object\n\t * @private\n\t */\n\tvar cleanupTextTracks = function cleanupTextTracks(player) {\n\t  removeExistingTrack(player, 'captions', 'cc1');\n\t  removeExistingTrack(player, 'metadata', 'Timed Metadata');\n\t};\n\texports.cleanupTextTracks = cleanupTextTracks;\n\t},{}],93:[function(require,module,exports){\n\t/**\n\t * @file codec-utils.js\n\t */\n\t\n\t/**\n\t * Check if a codec string refers to an audio codec.\n\t *\n\t * @param {String} codec codec string to check\n\t * @return {Boolean} if this is an audio codec\n\t * @private\n\t */\n\t'use strict';\n\t\n\tObject.defineProperty(exports, '__esModule', {\n\t  value: true\n\t});\n\tvar isAudioCodec = function isAudioCodec(codec) {\n\t  return (/mp4a\\.\\d+.\\d+/i.test(codec)\n\t  );\n\t};\n\t\n\t/**\n\t * Check if a codec string refers to a video codec.\n\t *\n\t * @param {String} codec codec string to check\n\t * @return {Boolean} if this is a video codec\n\t * @private\n\t */\n\tvar isVideoCodec = function isVideoCodec(codec) {\n\t  return (/avc1\\.[\\da-f]+/i.test(codec)\n\t  );\n\t};\n\t\n\t/**\n\t * Parse a content type header into a type and parameters\n\t * object\n\t *\n\t * @param {String} type the content type header\n\t * @return {Object} the parsed content-type\n\t * @private\n\t */\n\tvar parseContentType = function parseContentType(type) {\n\t  var object = { type: '', parameters: {} };\n\t  var parameters = type.trim().split(';');\n\t\n\t  // first parameter should always be content-type\n\t  object.type = parameters.shift().trim();\n\t  parameters.forEach(function (parameter) {\n\t    var pair = parameter.trim().split('=');\n\t\n\t    if (pair.length > 1) {\n\t      var _name = pair[0].replace(/\"/g, '').trim();\n\t      var value = pair[1].replace(/\"/g, '').trim();\n\t\n\t      object.parameters[_name] = value;\n\t    }\n\t  });\n\t\n\t  return object;\n\t};\n\t\n\texports['default'] = {\n\t  isAudioCodec: isAudioCodec,\n\t  parseContentType: parseContentType,\n\t  isVideoCodec: isVideoCodec\n\t};\n\tmodule.exports = exports['default'];\n\t},{}],94:[function(require,module,exports){\n\t/**\n\t * @file create-text-tracks-if-necessary.js\n\t */\n\t'use strict';\n\t\n\tObject.defineProperty(exports, '__esModule', {\n\t  value: true\n\t});\n\t\n\tvar _cleanupTextTracks = require('./cleanup-text-tracks');\n\t\n\t/**\n\t * Create text tracks on video.js if they exist on a segment.\n\t *\n\t * @param {Object} sourceBuffer the VSB or FSB\n\t * @param {Object} mediaSource the HTML or Flash media source\n\t * @param {Object} segment the segment that may contain the text track\n\t * @private\n\t */\n\tvar createTextTracksIfNecessary = function createTextTracksIfNecessary(sourceBuffer, mediaSource, segment) {\n\t  var player = mediaSource.player_;\n\t\n\t  // create an in-band caption track if one is present in the segment\n\t  if (segment.captions && segment.captions.length && !sourceBuffer.inbandTextTrack_) {\n\t    (0, _cleanupTextTracks.removeExistingTrack)(player, 'captions', 'cc1');\n\t    sourceBuffer.inbandTextTrack_ = player.addRemoteTextTrack({\n\t      kind: 'captions',\n\t      label: 'cc1'\n\t    }, false).track;\n\t  }\n\t\n\t  if (segment.metadata && segment.metadata.length && !sourceBuffer.metadataTrack_) {\n\t    (0, _cleanupTextTracks.removeExistingTrack)(player, 'metadata', 'Timed Metadata', true);\n\t    sourceBuffer.metadataTrack_ = player.addRemoteTextTrack({\n\t      kind: 'metadata',\n\t      label: 'Timed Metadata'\n\t    }, false).track;\n\t    sourceBuffer.metadataTrack_.inBandMetadataTrackDispatchType = segment.metadata.dispatchType;\n\t  }\n\t};\n\t\n\texports['default'] = createTextTracksIfNecessary;\n\tmodule.exports = exports['default'];\n\t},{\"./cleanup-text-tracks\":92}],95:[function(require,module,exports){\n\t/**\n\t * @file flash-constants.js\n\t */\n\t/**\n\t * The maximum size in bytes for append operations to the video.js\n\t * SWF. Calling through to Flash blocks and can be expensive so\n\t * we chunk data and pass through 4KB at a time, yielding to the\n\t * browser between chunks. This gives a theoretical maximum rate of\n\t * 1MB/s into Flash. Any higher and we begin to drop frames and UI\n\t * responsiveness suffers.\n\t *\n\t * @private\n\t */\n\t\"use strict\";\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\tvar flashConstants = {\n\t  // times in milliseconds\n\t  TIME_BETWEEN_CHUNKS: 4,\n\t  BYTES_PER_CHUNK: 4096\n\t};\n\t\n\texports[\"default\"] = flashConstants;\n\tmodule.exports = exports[\"default\"];\n\t},{}],96:[function(require,module,exports){\n\t(function (global){\n\t/**\n\t * @file flash-media-source.js\n\t */\n\t'use strict';\n\t\n\tObject.defineProperty(exports, '__esModule', {\n\t  value: true\n\t});\n\t\n\tvar _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();\n\t\n\tvar _get = function get(_x, _x2, _x3) { var _again = true; _function: while (_again) { var object = _x, property = _x2, receiver = _x3; _again = false; if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { _x = parent; _x2 = property; _x3 = receiver; _again = true; desc = parent = undefined; continue _function; } } else if ('value' in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } } };\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== 'function' && superClass !== null) { throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\tvar _globalDocument = require('global/document');\n\t\n\tvar _globalDocument2 = _interopRequireDefault(_globalDocument);\n\t\n\tvar _videoJs = (typeof window !== \"undefined\" ? window['videojs'] : typeof global !== \"undefined\" ? global['videojs'] : null);\n\t\n\tvar _videoJs2 = _interopRequireDefault(_videoJs);\n\t\n\tvar _flashSourceBuffer = require('./flash-source-buffer');\n\t\n\tvar _flashSourceBuffer2 = _interopRequireDefault(_flashSourceBuffer);\n\t\n\tvar _flashConstants = require('./flash-constants');\n\t\n\tvar _flashConstants2 = _interopRequireDefault(_flashConstants);\n\t\n\tvar _codecUtils = require('./codec-utils');\n\t\n\tvar _cleanupTextTracks = require('./cleanup-text-tracks');\n\t\n\t/**\n\t * A flash implmentation of HTML MediaSources and a polyfill\n\t * for browsers that don't support native or HTML MediaSources..\n\t *\n\t * @link https://developer.mozilla.org/en-US/docs/Web/API/MediaSource\n\t * @class FlashMediaSource\n\t * @extends videojs.EventTarget\n\t */\n\t\n\tvar FlashMediaSource = (function (_videojs$EventTarget) {\n\t  _inherits(FlashMediaSource, _videojs$EventTarget);\n\t\n\t  function FlashMediaSource() {\n\t    var _this = this;\n\t\n\t    _classCallCheck(this, FlashMediaSource);\n\t\n\t    _get(Object.getPrototypeOf(FlashMediaSource.prototype), 'constructor', this).call(this);\n\t    this.sourceBuffers = [];\n\t    this.readyState = 'closed';\n\t\n\t    this.on(['sourceopen', 'webkitsourceopen'], function (event) {\n\t      // find the swf where we will push media data\n\t      _this.swfObj = _globalDocument2['default'].getElementById(event.swfId);\n\t      _this.player_ = (0, _videoJs2['default'])(_this.swfObj.parentNode);\n\t      _this.tech_ = _this.swfObj.tech;\n\t      _this.readyState = 'open';\n\t\n\t      _this.tech_.on('seeking', function () {\n\t        var i = _this.sourceBuffers.length;\n\t\n\t        while (i--) {\n\t          _this.sourceBuffers[i].abort();\n\t        }\n\t      });\n\t\n\t      if (_this.tech_.hls) {\n\t        _this.tech_.hls.on('dispose', function () {\n\t          (0, _cleanupTextTracks.cleanupTextTracks)(_this.player_);\n\t        });\n\t      }\n\t\n\t      // trigger load events\n\t      if (_this.swfObj) {\n\t        _this.swfObj.vjs_load();\n\t      }\n\t    });\n\t  }\n\t\n\t  /**\n\t    * Set or return the presentation duration.\n\t    *\n\t    * @param {Double} value the duration of the media in seconds\n\t    * @param {Double} the current presentation duration\n\t    * @link http://www.w3.org/TR/media-source/#widl-MediaSource-duration\n\t    */\n\t\n\t  /**\n\t   * We have this function so that the html and flash interfaces\n\t   * are the same.\n\t   *\n\t   * @private\n\t   */\n\t\n\t  _createClass(FlashMediaSource, [{\n\t    key: 'addSeekableRange_',\n\t    value: function addSeekableRange_() {}\n\t    // intentional no-op\n\t\n\t    /**\n\t     * Create a new flash source buffer and add it to our flash media source.\n\t     *\n\t     * @link https://developer.mozilla.org/en-US/docs/Web/API/MediaSource/addSourceBuffer\n\t     * @param {String} type the content-type of the source\n\t     * @return {Object} the flash source buffer\n\t     */\n\t\n\t  }, {\n\t    key: 'addSourceBuffer',\n\t    value: function addSourceBuffer(type) {\n\t      var parsedType = (0, _codecUtils.parseContentType)(type);\n\t      var sourceBuffer = undefined;\n\t\n\t      // if this is an FLV type, we'll push data to flash\n\t      if (parsedType.type === 'video/mp2t') {\n\t        // Flash source buffers\n\t        sourceBuffer = new _flashSourceBuffer2['default'](this);\n\t      } else {\n\t        throw new Error('NotSupportedError (Video.js)');\n\t      }\n\t\n\t      this.sourceBuffers.push(sourceBuffer);\n\t      return sourceBuffer;\n\t    }\n\t\n\t    /**\n\t     * Signals the end of the stream.\n\t     *\n\t     * @link https://w3c.github.io/media-source/#widl-MediaSource-endOfStream-void-EndOfStreamError-error\n\t     * @param {String=} error Signals that a playback error\n\t     * has occurred. If specified, it must be either \"network\" or\n\t     * \"decode\".\n\t     */\n\t  }, {\n\t    key: 'endOfStream',\n\t    value: function endOfStream(error) {\n\t      if (error === 'network') {\n\t        // MEDIA_ERR_NETWORK\n\t        this.tech_.error(2);\n\t      } else if (error === 'decode') {\n\t        // MEDIA_ERR_DECODE\n\t        this.tech_.error(3);\n\t      }\n\t      if (this.readyState !== 'ended') {\n\t        this.readyState = 'ended';\n\t        this.swfObj.vjs_endOfStream();\n\t      }\n\t    }\n\t  }]);\n\t\n\t  return FlashMediaSource;\n\t})(_videoJs2['default'].EventTarget);\n\t\n\texports['default'] = FlashMediaSource;\n\ttry {\n\t  Object.defineProperty(FlashMediaSource.prototype, 'duration', {\n\t    /**\n\t     * Return the presentation duration.\n\t     *\n\t     * @return {Double} the duration of the media in seconds\n\t     * @link http://www.w3.org/TR/media-source/#widl-MediaSource-duration\n\t     */\n\t    get: function get() {\n\t      if (!this.swfObj) {\n\t        return NaN;\n\t      }\n\t      // get the current duration from the SWF\n\t      return this.swfObj.vjs_getProperty('duration');\n\t    },\n\t    /**\n\t     * Set the presentation duration.\n\t     *\n\t     * @param {Double} value the duration of the media in seconds\n\t     * @return {Double} the duration of the media in seconds\n\t     * @link http://www.w3.org/TR/media-source/#widl-MediaSource-duration\n\t     */\n\t    set: function set(value) {\n\t      var i = undefined;\n\t      var oldDuration = this.swfObj.vjs_getProperty('duration');\n\t\n\t      this.swfObj.vjs_setProperty('duration', value);\n\t\n\t      if (value < oldDuration) {\n\t        // In MSE, this triggers the range removal algorithm which causes\n\t        // an update to occur\n\t        for (i = 0; i < this.sourceBuffers.length; i++) {\n\t          this.sourceBuffers[i].remove(value, oldDuration);\n\t        }\n\t      }\n\t\n\t      return value;\n\t    }\n\t  });\n\t} catch (e) {\n\t  // IE8 throws if defineProperty is called on a non-DOM node. We\n\t  // don't support IE8 but we shouldn't throw an error if loaded\n\t  // there.\n\t  FlashMediaSource.prototype.duration = NaN;\n\t}\n\t\n\tfor (var property in _flashConstants2['default']) {\n\t  FlashMediaSource[property] = _flashConstants2['default'][property];\n\t}\n\tmodule.exports = exports['default'];\n\t}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n\t},{\"./cleanup-text-tracks\":92,\"./codec-utils\":93,\"./flash-constants\":95,\"./flash-source-buffer\":97,\"global/document\":26}],97:[function(require,module,exports){\n\t(function (global){\n\t/**\n\t * @file flash-source-buffer.js\n\t */\n\t'use strict';\n\t\n\tObject.defineProperty(exports, '__esModule', {\n\t  value: true\n\t});\n\t\n\tvar _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();\n\t\n\tvar _get = function get(_x, _x2, _x3) { var _again = true; _function: while (_again) { var object = _x, property = _x2, receiver = _x3; _again = false; if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { _x = parent; _x2 = property; _x3 = receiver; _again = true; desc = parent = undefined; continue _function; } } else if ('value' in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } } };\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== 'function' && superClass !== null) { throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\tvar _globalWindow = require('global/window');\n\t\n\tvar _globalWindow2 = _interopRequireDefault(_globalWindow);\n\t\n\tvar _videoJs = (typeof window !== \"undefined\" ? window['videojs'] : typeof global !== \"undefined\" ? global['videojs'] : null);\n\t\n\tvar _videoJs2 = _interopRequireDefault(_videoJs);\n\t\n\tvar _muxJsLibFlv = require('mux.js/lib/flv');\n\t\n\tvar _muxJsLibFlv2 = _interopRequireDefault(_muxJsLibFlv);\n\t\n\tvar _removeCuesFromTrack = require('./remove-cues-from-track');\n\t\n\tvar _removeCuesFromTrack2 = _interopRequireDefault(_removeCuesFromTrack);\n\t\n\tvar _createTextTracksIfNecessary = require('./create-text-tracks-if-necessary');\n\t\n\tvar _createTextTracksIfNecessary2 = _interopRequireDefault(_createTextTracksIfNecessary);\n\t\n\tvar _addTextTrackData = require('./add-text-track-data');\n\t\n\tvar _flashConstants = require('./flash-constants');\n\t\n\tvar _flashConstants2 = _interopRequireDefault(_flashConstants);\n\t\n\t/**\n\t * A wrapper around the setTimeout function that uses\n\t * the flash constant time between ticks value.\n\t *\n\t * @param {Function} func the function callback to run\n\t * @private\n\t */\n\tvar scheduleTick = function scheduleTick(func) {\n\t  // Chrome doesn't invoke requestAnimationFrame callbacks\n\t  // in background tabs, so use setTimeout.\n\t  _globalWindow2['default'].setTimeout(func, _flashConstants2['default'].TIME_BETWEEN_CHUNKS);\n\t};\n\t\n\t/**\n\t * Round a number to a specified number of places much like\n\t * toFixed but return a number instead of a string representation.\n\t *\n\t * @param {Number} num A number\n\t * @param {Number} places The number of decimal places which to\n\t * round\n\t * @private\n\t */\n\tvar toDecimalPlaces = function toDecimalPlaces(num, places) {\n\t  if (typeof places !== 'number' || places < 0) {\n\t    places = 0;\n\t  }\n\t\n\t  var scale = Math.pow(10, places);\n\t\n\t  return Math.round(num * scale) / scale;\n\t};\n\t\n\t/**\n\t * A SourceBuffer implementation for Flash rather than HTML.\n\t *\n\t * @link https://developer.mozilla.org/en-US/docs/Web/API/MediaSource\n\t * @param {Object} mediaSource the flash media source\n\t * @class FlashSourceBuffer\n\t * @extends videojs.EventTarget\n\t */\n\t\n\tvar FlashSourceBuffer = (function (_videojs$EventTarget) {\n\t  _inherits(FlashSourceBuffer, _videojs$EventTarget);\n\t\n\t  function FlashSourceBuffer(mediaSource) {\n\t    var _this = this;\n\t\n\t    _classCallCheck(this, FlashSourceBuffer);\n\t\n\t    _get(Object.getPrototypeOf(FlashSourceBuffer.prototype), 'constructor', this).call(this);\n\t    var encodedHeader = undefined;\n\t\n\t    // Start off using the globally defined value but refine\n\t    // as we append data into flash\n\t    this.chunkSize_ = _flashConstants2['default'].BYTES_PER_CHUNK;\n\t\n\t    // byte arrays queued to be appended\n\t    this.buffer_ = [];\n\t\n\t    // the total number of queued bytes\n\t    this.bufferSize_ = 0;\n\t\n\t    // to be able to determine the correct position to seek to, we\n\t    // need to retain information about the mapping between the\n\t    // media timeline and PTS values\n\t    this.basePtsOffset_ = NaN;\n\t\n\t    this.mediaSource_ = mediaSource;\n\t\n\t    // indicates whether the asynchronous continuation of an operation\n\t    // is still being processed\n\t    // see https://w3c.github.io/media-source/#widl-SourceBuffer-updating\n\t    this.updating = false;\n\t    this.timestampOffset_ = 0;\n\t\n\t    // TS to FLV transmuxer\n\t    this.segmentParser_ = new _muxJsLibFlv2['default'].Transmuxer();\n\t    this.segmentParser_.on('data', this.receiveBuffer_.bind(this));\n\t    encodedHeader = _globalWindow2['default'].btoa(String.fromCharCode.apply(null, Array.prototype.slice.call(this.segmentParser_.getFlvHeader())));\n\t    this.mediaSource_.swfObj.vjs_appendBuffer(encodedHeader);\n\t\n\t    this.one('updateend', function () {\n\t      _this.mediaSource_.tech_.trigger('loadedmetadata');\n\t    });\n\t\n\t    Object.defineProperty(this, 'timestampOffset', {\n\t      get: function get() {\n\t        return this.timestampOffset_;\n\t      },\n\t      set: function set(val) {\n\t        if (typeof val === 'number' && val >= 0) {\n\t          this.timestampOffset_ = val;\n\t          this.segmentParser_ = new _muxJsLibFlv2['default'].Transmuxer();\n\t          this.segmentParser_.on('data', this.receiveBuffer_.bind(this));\n\t          // We have to tell flash to expect a discontinuity\n\t          this.mediaSource_.swfObj.vjs_discontinuity();\n\t          // the media <-> PTS mapping must be re-established after\n\t          // the discontinuity\n\t          this.basePtsOffset_ = NaN;\n\t        }\n\t      }\n\t    });\n\t\n\t    Object.defineProperty(this, 'buffered', {\n\t      get: function get() {\n\t        if (!this.mediaSource_ || !this.mediaSource_.swfObj || !('vjs_getProperty' in this.mediaSource_.swfObj)) {\n\t          return _videoJs2['default'].createTimeRange();\n\t        }\n\t\n\t        var buffered = this.mediaSource_.swfObj.vjs_getProperty('buffered');\n\t\n\t        if (buffered && buffered.length) {\n\t          buffered[0][0] = toDecimalPlaces(buffered[0][0], 3);\n\t          buffered[0][1] = toDecimalPlaces(buffered[0][1], 3);\n\t        }\n\t        return _videoJs2['default'].createTimeRanges(buffered);\n\t      }\n\t    });\n\t\n\t    // On a seek we remove all text track data since flash has no concept\n\t    // of a buffered-range and everything else is reset on seek\n\t    this.mediaSource_.player_.on('seeked', function () {\n\t      (0, _removeCuesFromTrack2['default'])(0, Infinity, _this.metadataTrack_);\n\t      (0, _removeCuesFromTrack2['default'])(0, Infinity, _this.inbandTextTrack_);\n\t    });\n\t  }\n\t\n\t  /**\n\t   * Append bytes to the sourcebuffers buffer, in this case we\n\t   * have to append it to swf object.\n\t   *\n\t   * @link https://developer.mozilla.org/en-US/docs/Web/API/SourceBuffer/appendBuffer\n\t   * @param {Array} bytes\n\t   */\n\t\n\t  _createClass(FlashSourceBuffer, [{\n\t    key: 'appendBuffer',\n\t    value: function appendBuffer(bytes) {\n\t      var _this2 = this;\n\t\n\t      var error = undefined;\n\t      var chunk = 512 * 1024;\n\t      var i = 0;\n\t\n\t      if (this.updating) {\n\t        error = new Error('SourceBuffer.append() cannot be called ' + 'while an update is in progress');\n\t        error.name = 'InvalidStateError';\n\t        error.code = 11;\n\t        throw error;\n\t      }\n\t\n\t      this.updating = true;\n\t      this.mediaSource_.readyState = 'open';\n\t      this.trigger({ type: 'update' });\n\t\n\t      // this is here to use recursion\n\t      var chunkInData = function chunkInData() {\n\t        _this2.segmentParser_.push(bytes.subarray(i, i + chunk));\n\t        i += chunk;\n\t        if (i < bytes.byteLength) {\n\t          scheduleTick(chunkInData);\n\t        } else {\n\t          scheduleTick(_this2.segmentParser_.flush.bind(_this2.segmentParser_));\n\t        }\n\t      };\n\t\n\t      chunkInData();\n\t    }\n\t\n\t    /**\n\t     * Reset the parser and remove any data queued to be sent to the SWF.\n\t     *\n\t     * @link https://developer.mozilla.org/en-US/docs/Web/API/SourceBuffer/abort\n\t     */\n\t  }, {\n\t    key: 'abort',\n\t    value: function abort() {\n\t      this.buffer_ = [];\n\t      this.bufferSize_ = 0;\n\t      this.mediaSource_.swfObj.vjs_abort();\n\t\n\t      // report any outstanding updates have ended\n\t      if (this.updating) {\n\t        this.updating = false;\n\t        this.trigger({ type: 'updateend' });\n\t      }\n\t    }\n\t\n\t    /**\n\t     * Flash cannot remove ranges already buffered in the NetStream\n\t     * but seeking clears the buffer entirely. For most purposes,\n\t     * having this operation act as a no-op is acceptable.\n\t     *\n\t     * @link https://developer.mozilla.org/en-US/docs/Web/API/SourceBuffer/remove\n\t     * @param {Double} start start of the section to remove\n\t     * @param {Double} end end of the section to remove\n\t     */\n\t  }, {\n\t    key: 'remove',\n\t    value: function remove(start, end) {\n\t      (0, _removeCuesFromTrack2['default'])(start, end, this.metadataTrack_);\n\t      (0, _removeCuesFromTrack2['default'])(start, end, this.inbandTextTrack_);\n\t      this.trigger({ type: 'update' });\n\t      this.trigger({ type: 'updateend' });\n\t    }\n\t\n\t    /**\n\t     * Receive a buffer from the flv.\n\t     *\n\t     * @param {Object} segment\n\t     * @private\n\t     */\n\t  }, {\n\t    key: 'receiveBuffer_',\n\t    value: function receiveBuffer_(segment) {\n\t      var _this3 = this;\n\t\n\t      // create an in-band caption track if one is present in the segment\n\t      (0, _createTextTracksIfNecessary2['default'])(this, this.mediaSource_, segment);\n\t      (0, _addTextTrackData.addTextTrackData)(this, segment.captions, segment.metadata);\n\t\n\t      // Do this asynchronously since convertTagsToData_ can be time consuming\n\t      scheduleTick(function () {\n\t        var flvBytes = _this3.convertTagsToData_(segment);\n\t\n\t        if (_this3.buffer_.length === 0) {\n\t          scheduleTick(_this3.processBuffer_.bind(_this3));\n\t        }\n\t\n\t        if (flvBytes) {\n\t          _this3.buffer_.push(flvBytes);\n\t          _this3.bufferSize_ += flvBytes.byteLength;\n\t        }\n\t      });\n\t    }\n\t\n\t    /**\n\t     * Append a portion of the current buffer to the SWF.\n\t     *\n\t     * @private\n\t     */\n\t  }, {\n\t    key: 'processBuffer_',\n\t    value: function processBuffer_() {\n\t      var chunkSize = _flashConstants2['default'].BYTES_PER_CHUNK;\n\t\n\t      if (!this.buffer_.length) {\n\t        if (this.updating !== false) {\n\t          this.updating = false;\n\t          this.trigger({ type: 'updateend' });\n\t        }\n\t        // do nothing if the buffer is empty\n\t        return;\n\t      }\n\t\n\t      // concatenate appends up to the max append size\n\t      var chunk = this.buffer_[0].subarray(0, chunkSize);\n\t\n\t      // requeue any bytes that won't make it this round\n\t      if (chunk.byteLength < chunkSize || this.buffer_[0].byteLength === chunkSize) {\n\t        this.buffer_.shift();\n\t      } else {\n\t        this.buffer_[0] = this.buffer_[0].subarray(chunkSize);\n\t      }\n\t\n\t      this.bufferSize_ -= chunk.byteLength;\n\t\n\t      // base64 encode the bytes\n\t      var binary = '';\n\t      var length = chunk.byteLength;\n\t\n\t      for (var i = 0; i < length; i++) {\n\t        binary += String.fromCharCode(chunk[i]);\n\t      }\n\t      var b64str = _globalWindow2['default'].btoa(binary);\n\t\n\t      // bypass normal ExternalInterface calls and pass xml directly\n\t      // IE can be slow by default\n\t      this.mediaSource_.swfObj.CallFunction('<invoke name=\"vjs_appendBuffer\"' + 'returntype=\"javascript\"><arguments><string>' + b64str + '</string></arguments></invoke>');\n\t\n\t      // schedule another append if necessary\n\t      if (this.bufferSize_ !== 0) {\n\t        scheduleTick(this.processBuffer_.bind(this));\n\t      } else {\n\t        this.updating = false;\n\t        this.trigger({ type: 'updateend' });\n\t      }\n\t    }\n\t\n\t    /**\n\t     * Turns an array of flv tags into a Uint8Array representing the\n\t     * flv data. Also removes any tags that are before the current\n\t     * time so that playback begins at or slightly after the right\n\t     * place on a seek\n\t     *\n\t     * @private\n\t     * @param {Object} segmentData object of segment data\n\t     */\n\t  }, {\n\t    key: 'convertTagsToData_',\n\t    value: function convertTagsToData_(segmentData) {\n\t      var segmentByteLength = 0;\n\t      var tech = this.mediaSource_.tech_;\n\t      var targetPts = 0;\n\t      var i = undefined;\n\t      var j = undefined;\n\t      var segment = undefined;\n\t      var filteredTags = [];\n\t      var tags = this.getOrderedTags_(segmentData);\n\t\n\t      // Establish the media timeline to PTS translation if we don't\n\t      // have one already\n\t      if (isNaN(this.basePtsOffset_) && tags.length) {\n\t        this.basePtsOffset_ = tags[0].pts;\n\t      }\n\t\n\t      // Trim to currentTime if it's ahead of buffered or buffered doesn't exist\n\t      if (tech.seeking()) {\n\t        targetPts = Math.max(targetPts, tech.currentTime() - this.timestampOffset);\n\t      }\n\t\n\t      // PTS values are represented in milliseconds\n\t      targetPts *= 1e3;\n\t      targetPts += this.basePtsOffset_;\n\t\n\t      // skip tags with a presentation time less than the seek target\n\t      for (i = 0; i < tags.length; i++) {\n\t        if (tags[i].pts >= targetPts) {\n\t          filteredTags.push(tags[i]);\n\t        }\n\t      }\n\t\n\t      if (filteredTags.length === 0) {\n\t        return;\n\t      }\n\t\n\t      // concatenate the bytes into a single segment\n\t      for (i = 0; i < filteredTags.length; i++) {\n\t        segmentByteLength += filteredTags[i].bytes.byteLength;\n\t      }\n\t      segment = new Uint8Array(segmentByteLength);\n\t      for (i = 0, j = 0; i < filteredTags.length; i++) {\n\t        segment.set(filteredTags[i].bytes, j);\n\t        j += filteredTags[i].bytes.byteLength;\n\t      }\n\t\n\t      return segment;\n\t    }\n\t\n\t    /**\n\t     * Assemble the FLV tags in decoder order.\n\t     *\n\t     * @private\n\t     * @param {Object} segmentData object of segment data\n\t     */\n\t  }, {\n\t    key: 'getOrderedTags_',\n\t    value: function getOrderedTags_(segmentData) {\n\t      var videoTags = segmentData.tags.videoTags;\n\t      var audioTags = segmentData.tags.audioTags;\n\t      var tag = undefined;\n\t      var tags = [];\n\t\n\t      while (videoTags.length || audioTags.length) {\n\t        if (!videoTags.length) {\n\t          // only audio tags remain\n\t          tag = audioTags.shift();\n\t        } else if (!audioTags.length) {\n\t          // only video tags remain\n\t          tag = videoTags.shift();\n\t        } else if (audioTags[0].dts < videoTags[0].dts) {\n\t          // audio should be decoded next\n\t          tag = audioTags.shift();\n\t        } else {\n\t          // video should be decoded next\n\t          tag = videoTags.shift();\n\t        }\n\t\n\t        tags.push(tag.finalize());\n\t      }\n\t\n\t      return tags;\n\t    }\n\t  }]);\n\t\n\t  return FlashSourceBuffer;\n\t})(_videoJs2['default'].EventTarget);\n\t\n\texports['default'] = FlashSourceBuffer;\n\tmodule.exports = exports['default'];\n\t}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n\t},{\"./add-text-track-data\":91,\"./create-text-tracks-if-necessary\":94,\"./flash-constants\":95,\"./remove-cues-from-track\":99,\"global/window\":27,\"mux.js/lib/flv\":75}],98:[function(require,module,exports){\n\t(function (global){\n\t/**\n\t * @file html-media-source.js\n\t */\n\t'use strict';\n\t\n\tObject.defineProperty(exports, '__esModule', {\n\t  value: true\n\t});\n\t\n\tvar _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();\n\t\n\tvar _get = function get(_x, _x2, _x3) { var _again = true; _function: while (_again) { var object = _x, property = _x2, receiver = _x3; _again = false; if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { _x = parent; _x2 = property; _x3 = receiver; _again = true; desc = parent = undefined; continue _function; } } else if ('value' in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } } };\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== 'function' && superClass !== null) { throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\tvar _globalWindow = require('global/window');\n\t\n\tvar _globalWindow2 = _interopRequireDefault(_globalWindow);\n\t\n\tvar _globalDocument = require('global/document');\n\t\n\tvar _globalDocument2 = _interopRequireDefault(_globalDocument);\n\t\n\tvar _videoJs = (typeof window !== \"undefined\" ? window['videojs'] : typeof global !== \"undefined\" ? global['videojs'] : null);\n\t\n\tvar _videoJs2 = _interopRequireDefault(_videoJs);\n\t\n\tvar _virtualSourceBuffer = require('./virtual-source-buffer');\n\t\n\tvar _virtualSourceBuffer2 = _interopRequireDefault(_virtualSourceBuffer);\n\t\n\tvar _addTextTrackData = require('./add-text-track-data');\n\t\n\tvar _codecUtils = require('./codec-utils');\n\t\n\tvar _cleanupTextTracks = require('./cleanup-text-tracks');\n\t\n\t/**\n\t * Replace the old apple-style `avc1.<dd>.<dd>` codec string with the standard\n\t * `avc1.<hhhhhh>`\n\t *\n\t * @param {Array} codecs an array of codec strings to fix\n\t * @return {Array} the translated codec array\n\t * @private\n\t */\n\tvar translateLegacyCodecs = function translateLegacyCodecs(codecs) {\n\t  return codecs.map(function (codec) {\n\t    return codec.replace(/avc1\\.(\\d+)\\.(\\d+)/i, function (orig, profile, avcLevel) {\n\t      var profileHex = ('00' + Number(profile).toString(16)).slice(-2);\n\t      var avcLevelHex = ('00' + Number(avcLevel).toString(16)).slice(-2);\n\t\n\t      return 'avc1.' + profileHex + '00' + avcLevelHex;\n\t    });\n\t  });\n\t};\n\t\n\t/**\n\t * Our MediaSource implementation in HTML, mimics native\n\t * MediaSource where/if possible.\n\t *\n\t * @link https://developer.mozilla.org/en-US/docs/Web/API/MediaSource\n\t * @class HtmlMediaSource\n\t * @extends videojs.EventTarget\n\t */\n\t\n\tvar HtmlMediaSource = (function (_videojs$EventTarget) {\n\t  _inherits(HtmlMediaSource, _videojs$EventTarget);\n\t\n\t  function HtmlMediaSource() {\n\t    var _this = this;\n\t\n\t    _classCallCheck(this, HtmlMediaSource);\n\t\n\t    _get(Object.getPrototypeOf(HtmlMediaSource.prototype), 'constructor', this).call(this);\n\t    var property = undefined;\n\t\n\t    this.nativeMediaSource_ = new _globalWindow2['default'].MediaSource();\n\t    // delegate to the native MediaSource's methods by default\n\t    for (property in this.nativeMediaSource_) {\n\t      if (!(property in HtmlMediaSource.prototype) && typeof this.nativeMediaSource_[property] === 'function') {\n\t        this[property] = this.nativeMediaSource_[property].bind(this.nativeMediaSource_);\n\t      }\n\t    }\n\t\n\t    // emulate `duration` and `seekable` until seeking can be\n\t    // handled uniformly for live streams\n\t    // see https://github.com/w3c/media-source/issues/5\n\t    this.duration_ = NaN;\n\t    Object.defineProperty(this, 'duration', {\n\t      get: function get() {\n\t        if (this.duration_ === Infinity) {\n\t          return this.duration_;\n\t        }\n\t        return this.nativeMediaSource_.duration;\n\t      },\n\t      set: function set(duration) {\n\t        this.duration_ = duration;\n\t        if (duration !== Infinity) {\n\t          this.nativeMediaSource_.duration = duration;\n\t          return;\n\t        }\n\t      }\n\t    });\n\t    Object.defineProperty(this, 'seekable', {\n\t      get: function get() {\n\t        if (this.duration_ === Infinity) {\n\t          return _videoJs2['default'].createTimeRanges([[0, this.nativeMediaSource_.duration]]);\n\t        }\n\t        return this.nativeMediaSource_.seekable;\n\t      }\n\t    });\n\t\n\t    Object.defineProperty(this, 'readyState', {\n\t      get: function get() {\n\t        return this.nativeMediaSource_.readyState;\n\t      }\n\t    });\n\t\n\t    Object.defineProperty(this, 'activeSourceBuffers', {\n\t      get: function get() {\n\t        return this.activeSourceBuffers_;\n\t      }\n\t    });\n\t\n\t    // the list of virtual and native SourceBuffers created by this\n\t    // MediaSource\n\t    this.sourceBuffers = [];\n\t\n\t    this.activeSourceBuffers_ = [];\n\t\n\t    /**\n\t     * update the list of active source buffers based upon various\n\t     * imformation from HLS and video.js\n\t     *\n\t     * @private\n\t     */\n\t    this.updateActiveSourceBuffers_ = function () {\n\t      // Retain the reference but empty the array\n\t      _this.activeSourceBuffers_.length = 0;\n\t\n\t      // By default, the audio in the combined virtual source buffer is enabled\n\t      // and the audio-only source buffer (if it exists) is disabled.\n\t      var combined = false;\n\t      var audioOnly = true;\n\t\n\t      // TODO: maybe we can store the sourcebuffers on the track objects?\n\t      // safari may do something like this\n\t      for (var i = 0; i < _this.player_.audioTracks().length; i++) {\n\t        var track = _this.player_.audioTracks()[i];\n\t\n\t        if (track.enabled && track.kind !== 'main') {\n\t          // The enabled track is an alternate audio track so disable the audio in\n\t          // the combined source buffer and enable the audio-only source buffer.\n\t          combined = true;\n\t          audioOnly = false;\n\t          break;\n\t        }\n\t      }\n\t\n\t      // Since we currently support a max of two source buffers, add all of the source\n\t      // buffers (in order).\n\t      _this.sourceBuffers.forEach(function (sourceBuffer) {\n\t        /* eslinst-disable */\n\t        // TODO once codecs are required, we can switch to using the codecs to determine\n\t        //      what stream is the video stream, rather than relying on videoTracks\n\t        /* eslinst-enable */\n\t\n\t        sourceBuffer.appendAudioInitSegment_ = true;\n\t\n\t        if (sourceBuffer.videoCodec_ && sourceBuffer.audioCodec_) {\n\t          // combined\n\t          sourceBuffer.audioDisabled_ = combined;\n\t        } else if (sourceBuffer.videoCodec_ && !sourceBuffer.audioCodec_) {\n\t          // If the \"combined\" source buffer is video only, then we do not want\n\t          // disable the audio-only source buffer (this is mostly for demuxed\n\t          // audio and video hls)\n\t          sourceBuffer.audioDisabled_ = true;\n\t          audioOnly = false;\n\t        } else if (!sourceBuffer.videoCodec_ && sourceBuffer.audioCodec_) {\n\t          // audio only\n\t          sourceBuffer.audioDisabled_ = audioOnly;\n\t          if (audioOnly) {\n\t            return;\n\t          }\n\t        }\n\t\n\t        _this.activeSourceBuffers_.push(sourceBuffer);\n\t      });\n\t    };\n\t\n\t    this.onPlayerMediachange_ = function () {\n\t      _this.sourceBuffers.forEach(function (sourceBuffer) {\n\t        sourceBuffer.appendAudioInitSegment_ = true;\n\t      });\n\t    };\n\t\n\t    // Re-emit MediaSource events on the polyfill\n\t    ['sourceopen', 'sourceclose', 'sourceended'].forEach(function (eventName) {\n\t      this.nativeMediaSource_.addEventListener(eventName, this.trigger.bind(this));\n\t    }, this);\n\t\n\t    // capture the associated player when the MediaSource is\n\t    // successfully attached\n\t    this.on('sourceopen', function (event) {\n\t      // Get the player this MediaSource is attached to\n\t      var video = _globalDocument2['default'].querySelector('[src=\"' + _this.url_ + '\"]');\n\t\n\t      if (!video) {\n\t        return;\n\t      }\n\t\n\t      _this.player_ = (0, _videoJs2['default'])(video.parentNode);\n\t\n\t      if (_this.player_.audioTracks && _this.player_.audioTracks()) {\n\t        _this.player_.audioTracks().on('change', _this.updateActiveSourceBuffers_);\n\t        _this.player_.audioTracks().on('addtrack', _this.updateActiveSourceBuffers_);\n\t        _this.player_.audioTracks().on('removetrack', _this.updateActiveSourceBuffers_);\n\t      }\n\t\n\t      _this.player_.on('mediachange', _this.onPlayerMediachange_);\n\t    });\n\t\n\t    this.on('sourceended', function (event) {\n\t      var duration = (0, _addTextTrackData.durationOfVideo)(_this.duration);\n\t\n\t      for (var i = 0; i < _this.sourceBuffers.length; i++) {\n\t        var sourcebuffer = _this.sourceBuffers[i];\n\t        var cues = sourcebuffer.metadataTrack_ && sourcebuffer.metadataTrack_.cues;\n\t\n\t        if (cues && cues.length) {\n\t          cues[cues.length - 1].endTime = duration;\n\t        }\n\t      }\n\t    });\n\t\n\t    // explicitly terminate any WebWorkers that were created\n\t    // by SourceHandlers\n\t    this.on('sourceclose', function (event) {\n\t      this.sourceBuffers.forEach(function (sourceBuffer) {\n\t        if (sourceBuffer.transmuxer_) {\n\t          sourceBuffer.transmuxer_.terminate();\n\t        }\n\t      });\n\t\n\t      this.sourceBuffers.length = 0;\n\t      if (!this.player_) {\n\t        return;\n\t      }\n\t\n\t      (0, _cleanupTextTracks.cleanupTextTracks)(this.player_);\n\t\n\t      if (this.player_.audioTracks && this.player_.audioTracks()) {\n\t        this.player_.audioTracks().off('change', this.updateActiveSourceBuffers_);\n\t        this.player_.audioTracks().off('addtrack', this.updateActiveSourceBuffers_);\n\t        this.player_.audioTracks().off('removetrack', this.updateActiveSourceBuffers_);\n\t      }\n\t\n\t      // We can only change this if the player hasn't been disposed of yet\n\t      // because `off` eventually tries to use the el_ property. If it has\n\t      // been disposed of, then don't worry about it because there are no\n\t      // event handlers left to unbind anyway\n\t      if (this.player_.el_) {\n\t        this.player_.off('mediachange', this.onPlayerMediachange_);\n\t      }\n\t    });\n\t  }\n\t\n\t  /**\n\t   * Add a range that that can now be seeked to.\n\t   *\n\t   * @param {Double} start where to start the addition\n\t   * @param {Double} end where to end the addition\n\t   * @private\n\t   */\n\t\n\t  _createClass(HtmlMediaSource, [{\n\t    key: 'addSeekableRange_',\n\t    value: function addSeekableRange_(start, end) {\n\t      var error = undefined;\n\t\n\t      if (this.duration !== Infinity) {\n\t        error = new Error('MediaSource.addSeekableRange() can only be invoked ' + 'when the duration is Infinity');\n\t        error.name = 'InvalidStateError';\n\t        error.code = 11;\n\t        throw error;\n\t      }\n\t\n\t      if (end > this.nativeMediaSource_.duration || isNaN(this.nativeMediaSource_.duration)) {\n\t        this.nativeMediaSource_.duration = end;\n\t      }\n\t    }\n\t\n\t    /**\n\t     * Add a source buffer to the media source.\n\t     *\n\t     * @link https://developer.mozilla.org/en-US/docs/Web/API/MediaSource/addSourceBuffer\n\t     * @param {String} type the content-type of the content\n\t     * @return {Object} the created source buffer\n\t     */\n\t  }, {\n\t    key: 'addSourceBuffer',\n\t    value: function addSourceBuffer(type) {\n\t      var buffer = undefined;\n\t      var parsedType = (0, _codecUtils.parseContentType)(type);\n\t\n\t      // Create a VirtualSourceBuffer to transmux MPEG-2 transport\n\t      // stream segments into fragmented MP4s\n\t      if (/^(video|audio)\\/mp2t$/i.test(parsedType.type)) {\n\t        var codecs = [];\n\t\n\t        if (parsedType.parameters && parsedType.parameters.codecs) {\n\t          codecs = parsedType.parameters.codecs.split(',');\n\t          codecs = translateLegacyCodecs(codecs);\n\t          codecs = codecs.filter(function (codec) {\n\t            return (0, _codecUtils.isAudioCodec)(codec) || (0, _codecUtils.isVideoCodec)(codec);\n\t          });\n\t        }\n\t\n\t        if (codecs.length === 0) {\n\t          codecs = ['avc1.4d400d', 'mp4a.40.2'];\n\t        }\n\t\n\t        buffer = new _virtualSourceBuffer2['default'](this, codecs);\n\t\n\t        if (this.sourceBuffers.length !== 0) {\n\t          // If another VirtualSourceBuffer already exists, then we are creating a\n\t          // SourceBuffer for an alternate audio track and therefore we know that\n\t          // the source has both an audio and video track.\n\t          // That means we should trigger the manual creation of the real\n\t          // SourceBuffers instead of waiting for the transmuxer to return data\n\t          this.sourceBuffers[0].createRealSourceBuffers_();\n\t          buffer.createRealSourceBuffers_();\n\t\n\t          // Automatically disable the audio on the first source buffer if\n\t          // a second source buffer is ever created\n\t          this.sourceBuffers[0].audioDisabled_ = true;\n\t        }\n\t      } else {\n\t        // delegate to the native implementation\n\t        buffer = this.nativeMediaSource_.addSourceBuffer(type);\n\t      }\n\t\n\t      this.sourceBuffers.push(buffer);\n\t      return buffer;\n\t    }\n\t  }]);\n\t\n\t  return HtmlMediaSource;\n\t})(_videoJs2['default'].EventTarget);\n\t\n\texports['default'] = HtmlMediaSource;\n\tmodule.exports = exports['default'];\n\t}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n\t},{\"./add-text-track-data\":91,\"./cleanup-text-tracks\":92,\"./codec-utils\":93,\"./virtual-source-buffer\":102,\"global/document\":26,\"global/window\":27}],99:[function(require,module,exports){\n\t/**\n\t * @file remove-cues-from-track.js\n\t */\n\t\n\t/**\n\t * Remove cues from a track on video.js.\n\t *\n\t * @param {Double} start start of where we should remove the cue\n\t * @param {Double} end end of where the we should remove the cue\n\t * @param {Object} track the text track to remove the cues from\n\t * @private\n\t */\n\t\"use strict\";\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\tvar removeCuesFromTrack = function removeCuesFromTrack(start, end, track) {\n\t  var i = undefined;\n\t  var cue = undefined;\n\t\n\t  if (!track) {\n\t    return;\n\t  }\n\t\n\t  if (!track.cues) {\n\t    return;\n\t  }\n\t\n\t  i = track.cues.length;\n\t\n\t  while (i--) {\n\t    cue = track.cues[i];\n\t\n\t    // Remove any overlapping cue\n\t    if (cue.startTime <= end && cue.endTime >= start) {\n\t      track.removeCue(cue);\n\t    }\n\t  }\n\t};\n\t\n\texports[\"default\"] = removeCuesFromTrack;\n\tmodule.exports = exports[\"default\"];\n\t},{}],100:[function(require,module,exports){\n\t/**\n\t * @file transmuxer-worker.js\n\t */\n\t\n\t/**\n\t * videojs-contrib-media-sources\n\t *\n\t * Copyright (c) 2015 Brightcove\n\t * All rights reserved.\n\t *\n\t * Handles communication between the browser-world and the mux.js\n\t * transmuxer running inside of a WebWorker by exposing a simple\n\t * message-based interface to a Transmuxer object.\n\t */\n\t'use strict';\n\t\n\tObject.defineProperty(exports, '__esModule', {\n\t  value: true\n\t});\n\t\n\tvar _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }\n\t\n\tvar _globalWindow = require('global/window');\n\t\n\tvar _globalWindow2 = _interopRequireDefault(_globalWindow);\n\t\n\tvar _muxJsLibMp4 = require('mux.js/lib/mp4');\n\t\n\tvar _muxJsLibMp42 = _interopRequireDefault(_muxJsLibMp4);\n\t\n\t/**\n\t * Re-emits tranmsuxer events by converting them into messages to the\n\t * world outside the worker.\n\t *\n\t * @param {Object} transmuxer the transmuxer to wire events on\n\t * @private\n\t */\n\tvar wireTransmuxerEvents = function wireTransmuxerEvents(transmuxer) {\n\t  transmuxer.on('data', function (segment) {\n\t    // transfer ownership of the underlying ArrayBuffer\n\t    // instead of doing a copy to save memory\n\t    // ArrayBuffers are transferable but generic TypedArrays are not\n\t    // @link https://developer.mozilla.org/en-US/docs/Web/API/Web_Workers_API/Using_web_workers#Passing_data_by_transferring_ownership_(transferable_objects)\n\t    var initArray = segment.initSegment;\n\t\n\t    segment.initSegment = {\n\t      data: initArray.buffer,\n\t      byteOffset: initArray.byteOffset,\n\t      byteLength: initArray.byteLength\n\t    };\n\t\n\t    var typedArray = segment.data;\n\t\n\t    segment.data = typedArray.buffer;\n\t    _globalWindow2['default'].postMessage({\n\t      action: 'data',\n\t      segment: segment,\n\t      byteOffset: typedArray.byteOffset,\n\t      byteLength: typedArray.byteLength\n\t    }, [segment.data]);\n\t  });\n\t\n\t  if (transmuxer.captionStream) {\n\t    transmuxer.captionStream.on('data', function (caption) {\n\t      _globalWindow2['default'].postMessage({\n\t        action: 'caption',\n\t        data: caption\n\t      });\n\t    });\n\t  }\n\t\n\t  transmuxer.on('done', function (data) {\n\t    _globalWindow2['default'].postMessage({ action: 'done' });\n\t  });\n\t};\n\t\n\t/**\n\t * All incoming messages route through this hash. If no function exists\n\t * to handle an incoming message, then we ignore the message.\n\t *\n\t * @class MessageHandlers\n\t * @param {Object} options the options to initialize with\n\t */\n\t\n\tvar MessageHandlers = (function () {\n\t  function MessageHandlers(options) {\n\t    _classCallCheck(this, MessageHandlers);\n\t\n\t    this.options = options || {};\n\t    this.init();\n\t  }\n\t\n\t  /**\n\t   * Our web wroker interface so that things can talk to mux.js\n\t   * that will be running in a web worker. the scope is passed to this by\n\t   * webworkify.\n\t   *\n\t   * @param {Object} self the scope for the web worker\n\t   */\n\t\n\t  /**\n\t   * initialize our web worker and wire all the events.\n\t   */\n\t\n\t  _createClass(MessageHandlers, [{\n\t    key: 'init',\n\t    value: function init() {\n\t      if (this.transmuxer) {\n\t        this.transmuxer.dispose();\n\t      }\n\t      this.transmuxer = new _muxJsLibMp42['default'].Transmuxer(this.options);\n\t      wireTransmuxerEvents(this.transmuxer);\n\t    }\n\t\n\t    /**\n\t     * Adds data (a ts segment) to the start of the transmuxer pipeline for\n\t     * processing.\n\t     *\n\t     * @param {ArrayBuffer} data data to push into the muxer\n\t     */\n\t  }, {\n\t    key: 'push',\n\t    value: function push(data) {\n\t      // Cast array buffer to correct type for transmuxer\n\t      var segment = new Uint8Array(data.data, data.byteOffset, data.byteLength);\n\t\n\t      this.transmuxer.push(segment);\n\t    }\n\t\n\t    /**\n\t     * Recreate the transmuxer so that the next segment added via `push`\n\t     * start with a fresh transmuxer.\n\t     */\n\t  }, {\n\t    key: 'reset',\n\t    value: function reset() {\n\t      this.init();\n\t    }\n\t\n\t    /**\n\t     * Set the value that will be used as the `baseMediaDecodeTime` time for the\n\t     * next segment pushed in. Subsequent segments will have their `baseMediaDecodeTime`\n\t     * set relative to the first based on the PTS values.\n\t     *\n\t     * @param {Object} data used to set the timestamp offset in the muxer\n\t     */\n\t  }, {\n\t    key: 'setTimestampOffset',\n\t    value: function setTimestampOffset(data) {\n\t      var timestampOffset = data.timestampOffset || 0;\n\t\n\t      this.transmuxer.setBaseMediaDecodeTime(Math.round(timestampOffset * 90000));\n\t    }\n\t\n\t    /**\n\t     * Forces the pipeline to finish processing the last segment and emit it's\n\t     * results.\n\t     *\n\t     * @param {Object} data event data, not really used\n\t     */\n\t  }, {\n\t    key: 'flush',\n\t    value: function flush(data) {\n\t      this.transmuxer.flush();\n\t    }\n\t  }]);\n\t\n\t  return MessageHandlers;\n\t})();\n\t\n\tvar Worker = function Worker(self) {\n\t  self.onmessage = function (event) {\n\t    if (event.data.action === 'init' && event.data.options) {\n\t      this.messageHandlers = new MessageHandlers(event.data.options);\n\t      return;\n\t    }\n\t\n\t    if (!this.messageHandlers) {\n\t      this.messageHandlers = new MessageHandlers();\n\t    }\n\t\n\t    if (event.data && event.data.action && event.data.action !== 'init') {\n\t      if (this.messageHandlers[event.data.action]) {\n\t        this.messageHandlers[event.data.action](event.data);\n\t      }\n\t    }\n\t  };\n\t};\n\t\n\texports['default'] = function (self) {\n\t  return new Worker(self);\n\t};\n\t\n\tmodule.exports = exports['default'];\n\t},{\"global/window\":27,\"mux.js/lib/mp4\":83}],101:[function(require,module,exports){\n\t(function (global){\n\t/**\n\t * @file videojs-contrib-media-sources.js\n\t */\n\t'use strict';\n\t\n\tObject.defineProperty(exports, '__esModule', {\n\t  value: true\n\t});\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\t\n\tvar _globalWindow = require('global/window');\n\t\n\tvar _globalWindow2 = _interopRequireDefault(_globalWindow);\n\t\n\tvar _flashMediaSource = require('./flash-media-source');\n\t\n\tvar _flashMediaSource2 = _interopRequireDefault(_flashMediaSource);\n\t\n\tvar _htmlMediaSource = require('./html-media-source');\n\t\n\tvar _htmlMediaSource2 = _interopRequireDefault(_htmlMediaSource);\n\t\n\tvar _videoJs = (typeof window !== \"undefined\" ? window['videojs'] : typeof global !== \"undefined\" ? global['videojs'] : null);\n\t\n\tvar _videoJs2 = _interopRequireDefault(_videoJs);\n\t\n\tvar urlCount = 0;\n\t\n\t// ------------\n\t// Media Source\n\t// ------------\n\t\n\tvar defaults = {\n\t  // how to determine the MediaSource implementation to use. There\n\t  // are three available modes:\n\t  // - auto: use native MediaSources where available and Flash\n\t  //   everywhere else\n\t  // - html5: always use native MediaSources\n\t  // - flash: always use the Flash MediaSource polyfill\n\t  mode: 'auto'\n\t};\n\t\n\t// store references to the media sources so they can be connected\n\t// to a video element (a swf object)\n\t// TODO: can we store this somewhere local to this module?\n\t_videoJs2['default'].mediaSources = {};\n\t\n\t/**\n\t * Provide a method for a swf object to notify JS that a\n\t * media source is now open.\n\t *\n\t * @param {String} msObjectURL string referencing the MSE Object URL\n\t * @param {String} swfId the swf id\n\t */\n\tvar open = function open(msObjectURL, swfId) {\n\t  var mediaSource = _videoJs2['default'].mediaSources[msObjectURL];\n\t\n\t  if (mediaSource) {\n\t    mediaSource.trigger({ type: 'sourceopen', swfId: swfId });\n\t  } else {\n\t    throw new Error('Media Source not found (Video.js)');\n\t  }\n\t};\n\t\n\t/**\n\t * Check to see if the native MediaSource object exists and supports\n\t * an MP4 container with both H.264 video and AAC-LC audio.\n\t *\n\t * @return {Boolean} if  native media sources are supported\n\t */\n\tvar supportsNativeMediaSources = function supportsNativeMediaSources() {\n\t  return !!_globalWindow2['default'].MediaSource && !!_globalWindow2['default'].MediaSource.isTypeSupported && _globalWindow2['default'].MediaSource.isTypeSupported('video/mp4;codecs=\"avc1.4d400d,mp4a.40.2\"');\n\t};\n\t\n\t/**\n\t * An emulation of the MediaSource API so that we can support\n\t * native and non-native functionality such as flash and\n\t * video/mp2t videos. returns an instance of HtmlMediaSource or\n\t * FlashMediaSource depending on what is supported and what options\n\t * are passed in.\n\t *\n\t * @link https://developer.mozilla.org/en-US/docs/Web/API/MediaSource/MediaSource\n\t * @param {Object} options options to use during setup.\n\t */\n\tvar MediaSource = function MediaSource(options) {\n\t  var settings = _videoJs2['default'].mergeOptions(defaults, options);\n\t\n\t  this.MediaSource = {\n\t    open: open,\n\t    supportsNativeMediaSources: supportsNativeMediaSources\n\t  };\n\t\n\t  // determine whether HTML MediaSources should be used\n\t  if (settings.mode === 'html5' || settings.mode === 'auto' && supportsNativeMediaSources()) {\n\t    return new _htmlMediaSource2['default']();\n\t  }\n\t\n\t  // otherwise, emulate them through the SWF\n\t  return new _flashMediaSource2['default']();\n\t};\n\t\n\texports.MediaSource = MediaSource;\n\tMediaSource.open = open;\n\tMediaSource.supportsNativeMediaSources = supportsNativeMediaSources;\n\t\n\t/**\n\t * A wrapper around the native URL for our MSE object\n\t * implementation, this object is exposed under videojs.URL\n\t *\n\t * @link https://developer.mozilla.org/en-US/docs/Web/API/URL/URL\n\t */\n\tvar URL = {\n\t  /**\n\t   * A wrapper around the native createObjectURL for our objects.\n\t   * This function maps a native or emulated mediaSource to a blob\n\t   * url so that it can be loaded into video.js\n\t   *\n\t   * @link https://developer.mozilla.org/en-US/docs/Web/API/URL/createObjectURL\n\t   * @param {MediaSource} object the object to create a blob url to\n\t   */\n\t  createObjectURL: function createObjectURL(object) {\n\t    var objectUrlPrefix = 'blob:vjs-media-source/';\n\t    var url = undefined;\n\t\n\t    // use the native MediaSource to generate an object URL\n\t    if (object instanceof _htmlMediaSource2['default']) {\n\t      url = _globalWindow2['default'].URL.createObjectURL(object.nativeMediaSource_);\n\t      object.url_ = url;\n\t      return url;\n\t    }\n\t    // if the object isn't an emulated MediaSource, delegate to the\n\t    // native implementation\n\t    if (!(object instanceof _flashMediaSource2['default'])) {\n\t      url = _globalWindow2['default'].URL.createObjectURL(object);\n\t      object.url_ = url;\n\t      return url;\n\t    }\n\t\n\t    // build a URL that can be used to map back to the emulated\n\t    // MediaSource\n\t    url = objectUrlPrefix + urlCount;\n\t\n\t    urlCount++;\n\t\n\t    // setup the mapping back to object\n\t    _videoJs2['default'].mediaSources[url] = object;\n\t\n\t    return url;\n\t  }\n\t};\n\t\n\texports.URL = URL;\n\t_videoJs2['default'].MediaSource = MediaSource;\n\t_videoJs2['default'].URL = URL;\n\t}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n\t},{\"./flash-media-source\":96,\"./html-media-source\":98,\"global/window\":27}],102:[function(require,module,exports){\n\t(function (global){\n\t/**\n\t * @file virtual-source-buffer.js\n\t */\n\t'use strict';\n\t\n\tObject.defineProperty(exports, '__esModule', {\n\t  value: true\n\t});\n\t\n\tvar _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();\n\t\n\tvar _get = function get(_x, _x2, _x3) { var _again = true; _function: while (_again) { var object = _x, property = _x2, receiver = _x3; _again = false; if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { _x = parent; _x2 = property; _x3 = receiver; _again = true; desc = parent = undefined; continue _function; } } else if ('value' in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } } };\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== 'function' && superClass !== null) { throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\tvar _videoJs = (typeof window !== \"undefined\" ? window['videojs'] : typeof global !== \"undefined\" ? global['videojs'] : null);\n\t\n\tvar _videoJs2 = _interopRequireDefault(_videoJs);\n\t\n\tvar _createTextTracksIfNecessary = require('./create-text-tracks-if-necessary');\n\t\n\tvar _createTextTracksIfNecessary2 = _interopRequireDefault(_createTextTracksIfNecessary);\n\t\n\tvar _removeCuesFromTrack = require('./remove-cues-from-track');\n\t\n\tvar _removeCuesFromTrack2 = _interopRequireDefault(_removeCuesFromTrack);\n\t\n\tvar _addTextTrackData = require('./add-text-track-data');\n\t\n\tvar _webworkify = require('webworkify');\n\t\n\tvar _webworkify2 = _interopRequireDefault(_webworkify);\n\t\n\tvar _transmuxerWorker = require('./transmuxer-worker');\n\t\n\tvar _transmuxerWorker2 = _interopRequireDefault(_transmuxerWorker);\n\t\n\tvar _codecUtils = require('./codec-utils');\n\t\n\t/**\n\t * VirtualSourceBuffers exist so that we can transmux non native formats\n\t * into a native format, but keep the same api as a native source buffer.\n\t * It creates a transmuxer, that works in its own thread (a web worker) and\n\t * that transmuxer muxes the data into a native format. VirtualSourceBuffer will\n\t * then send all of that data to the naive sourcebuffer so that it is\n\t * indestinguishable from a natively supported format.\n\t *\n\t * @param {HtmlMediaSource} mediaSource the parent mediaSource\n\t * @param {Array} codecs array of codecs that we will be dealing with\n\t * @class VirtualSourceBuffer\n\t * @extends video.js.EventTarget\n\t */\n\t\n\tvar VirtualSourceBuffer = (function (_videojs$EventTarget) {\n\t  _inherits(VirtualSourceBuffer, _videojs$EventTarget);\n\t\n\t  function VirtualSourceBuffer(mediaSource, codecs) {\n\t    var _this = this;\n\t\n\t    _classCallCheck(this, VirtualSourceBuffer);\n\t\n\t    _get(Object.getPrototypeOf(VirtualSourceBuffer.prototype), 'constructor', this).call(this, _videoJs2['default'].EventTarget);\n\t    this.timestampOffset_ = 0;\n\t    this.pendingBuffers_ = [];\n\t    this.bufferUpdating_ = false;\n\t    this.mediaSource_ = mediaSource;\n\t    this.codecs_ = codecs;\n\t    this.audioCodec_ = null;\n\t    this.videoCodec_ = null;\n\t    this.audioDisabled_ = false;\n\t    this.appendAudioInitSegment_ = true;\n\t\n\t    var options = {\n\t      remux: false\n\t    };\n\t\n\t    this.codecs_.forEach(function (codec) {\n\t      if ((0, _codecUtils.isAudioCodec)(codec)) {\n\t        _this.audioCodec_ = codec;\n\t      } else if ((0, _codecUtils.isVideoCodec)(codec)) {\n\t        _this.videoCodec_ = codec;\n\t      }\n\t    });\n\t\n\t    // append muxed segments to their respective native buffers as\n\t    // soon as they are available\n\t    this.transmuxer_ = (0, _webworkify2['default'])(_transmuxerWorker2['default']);\n\t    this.transmuxer_.postMessage({ action: 'init', options: options });\n\t\n\t    this.transmuxer_.onmessage = function (event) {\n\t      if (event.data.action === 'data') {\n\t        return _this.data_(event);\n\t      }\n\t\n\t      if (event.data.action === 'done') {\n\t        return _this.done_(event);\n\t      }\n\t    };\n\t\n\t    // this timestampOffset is a property with the side-effect of resetting\n\t    // baseMediaDecodeTime in the transmuxer on the setter\n\t    Object.defineProperty(this, 'timestampOffset', {\n\t      get: function get() {\n\t        return this.timestampOffset_;\n\t      },\n\t      set: function set(val) {\n\t        if (typeof val === 'number' && val >= 0) {\n\t          this.timestampOffset_ = val;\n\t          this.appendAudioInitSegment_ = true;\n\t\n\t          // We have to tell the transmuxer to set the baseMediaDecodeTime to\n\t          // the desired timestampOffset for the next segment\n\t          this.transmuxer_.postMessage({\n\t            action: 'setTimestampOffset',\n\t            timestampOffset: val\n\t          });\n\t        }\n\t      }\n\t    });\n\t\n\t    // setting the append window affects both source buffers\n\t    Object.defineProperty(this, 'appendWindowStart', {\n\t      get: function get() {\n\t        return (this.videoBuffer_ || this.audioBuffer_).appendWindowStart;\n\t      },\n\t      set: function set(start) {\n\t        if (this.videoBuffer_) {\n\t          this.videoBuffer_.appendWindowStart = start;\n\t        }\n\t        if (this.audioBuffer_) {\n\t          this.audioBuffer_.appendWindowStart = start;\n\t        }\n\t      }\n\t    });\n\t\n\t    // this buffer is \"updating\" if either of its native buffers are\n\t    Object.defineProperty(this, 'updating', {\n\t      get: function get() {\n\t        return !!(this.bufferUpdating_ || !this.audioDisabled_ && this.audioBuffer_ && this.audioBuffer_.updating || this.videoBuffer_ && this.videoBuffer_.updating);\n\t      }\n\t    });\n\t\n\t    // the buffered property is the intersection of the buffered\n\t    // ranges of the native source buffers\n\t    Object.defineProperty(this, 'buffered', {\n\t      get: function get() {\n\t        var start = null;\n\t        var end = null;\n\t        var arity = 0;\n\t        var extents = [];\n\t        var ranges = [];\n\t\n\t        // neither buffer has been created yet\n\t        if (!this.videoBuffer_ && !this.audioBuffer_) {\n\t          return _videoJs2['default'].createTimeRange();\n\t        }\n\t\n\t        // only one buffer is configured\n\t        if (!this.videoBuffer_) {\n\t          return this.audioBuffer_.buffered;\n\t        }\n\t        if (!this.audioBuffer_) {\n\t          return this.videoBuffer_.buffered;\n\t        }\n\t\n\t        // both buffers are configured\n\t        if (this.audioDisabled_) {\n\t          return this.videoBuffer_.buffered;\n\t        }\n\t\n\t        // both buffers are empty\n\t        if (this.videoBuffer_.buffered.length === 0 && this.audioBuffer_.buffered.length === 0) {\n\t          return _videoJs2['default'].createTimeRange();\n\t        }\n\t\n\t        // Handle the case where we have both buffers and create an\n\t        // intersection of the two\n\t        var videoBuffered = this.videoBuffer_.buffered;\n\t        var audioBuffered = this.audioBuffer_.buffered;\n\t        var count = videoBuffered.length;\n\t\n\t        // A) Gather up all start and end times\n\t        while (count--) {\n\t          extents.push({ time: videoBuffered.start(count), type: 'start' });\n\t          extents.push({ time: videoBuffered.end(count), type: 'end' });\n\t        }\n\t        count = audioBuffered.length;\n\t        while (count--) {\n\t          extents.push({ time: audioBuffered.start(count), type: 'start' });\n\t          extents.push({ time: audioBuffered.end(count), type: 'end' });\n\t        }\n\t        // B) Sort them by time\n\t        extents.sort(function (a, b) {\n\t          return a.time - b.time;\n\t        });\n\t\n\t        // C) Go along one by one incrementing arity for start and decrementing\n\t        //    arity for ends\n\t        for (count = 0; count < extents.length; count++) {\n\t          if (extents[count].type === 'start') {\n\t            arity++;\n\t\n\t            // D) If arity is ever incremented to 2 we are entering an\n\t            //    overlapping range\n\t            if (arity === 2) {\n\t              start = extents[count].time;\n\t            }\n\t          } else if (extents[count].type === 'end') {\n\t            arity--;\n\t\n\t            // E) If arity is ever decremented to 1 we leaving an\n\t            //    overlapping range\n\t            if (arity === 1) {\n\t              end = extents[count].time;\n\t            }\n\t          }\n\t\n\t          // F) Record overlapping ranges\n\t          if (start !== null && end !== null) {\n\t            ranges.push([start, end]);\n\t            start = null;\n\t            end = null;\n\t          }\n\t        }\n\t\n\t        return _videoJs2['default'].createTimeRanges(ranges);\n\t      }\n\t    });\n\t  }\n\t\n\t  /**\n\t   * When we get a data event from the transmuxer\n\t   * we call this function and handle the data that\n\t   * was sent to us\n\t   *\n\t   * @private\n\t   * @param {Event} event the data event from the transmuxer\n\t   */\n\t\n\t  _createClass(VirtualSourceBuffer, [{\n\t    key: 'data_',\n\t    value: function data_(event) {\n\t      var segment = event.data.segment;\n\t\n\t      // Cast ArrayBuffer to TypedArray\n\t      segment.data = new Uint8Array(segment.data, event.data.byteOffset, event.data.byteLength);\n\t\n\t      segment.initSegment = new Uint8Array(segment.initSegment.data, segment.initSegment.byteOffset, segment.initSegment.byteLength);\n\t\n\t      (0, _createTextTracksIfNecessary2['default'])(this, this.mediaSource_, segment);\n\t\n\t      // Add the segments to the pendingBuffers array\n\t      this.pendingBuffers_.push(segment);\n\t      return;\n\t    }\n\t\n\t    /**\n\t     * When we get a done event from the transmuxer\n\t     * we call this function and we process all\n\t     * of the pending data that we have been saving in the\n\t     * data_ function\n\t     *\n\t     * @private\n\t     * @param {Event} event the done event from the transmuxer\n\t     */\n\t  }, {\n\t    key: 'done_',\n\t    value: function done_(event) {\n\t      // All buffers should have been flushed from the muxer\n\t      // start processing anything we have received\n\t      this.processPendingSegments_();\n\t      return;\n\t    }\n\t\n\t    /**\n\t     * Create our internal native audio/video source buffers and add\n\t     * event handlers to them with the following conditions:\n\t     * 1. they do not already exist on the mediaSource\n\t     * 2. this VSB has a codec for them\n\t     *\n\t     * @private\n\t     */\n\t  }, {\n\t    key: 'createRealSourceBuffers_',\n\t    value: function createRealSourceBuffers_() {\n\t      var _this2 = this;\n\t\n\t      var types = ['audio', 'video'];\n\t\n\t      types.forEach(function (type) {\n\t        // Don't create a SourceBuffer of this type if we don't have a\n\t        // codec for it\n\t        if (!_this2[type + 'Codec_']) {\n\t          return;\n\t        }\n\t\n\t        // Do nothing if a SourceBuffer of this type already exists\n\t        if (_this2[type + 'Buffer_']) {\n\t          return;\n\t        }\n\t\n\t        var buffer = null;\n\t\n\t        // If the mediasource already has a SourceBuffer for the codec\n\t        // use that\n\t        if (_this2.mediaSource_[type + 'Buffer_']) {\n\t          buffer = _this2.mediaSource_[type + 'Buffer_'];\n\t        } else {\n\t          buffer = _this2.mediaSource_.nativeMediaSource_.addSourceBuffer(type + '/mp4;codecs=\"' + _this2[type + 'Codec_'] + '\"');\n\t          _this2.mediaSource_[type + 'Buffer_'] = buffer;\n\t        }\n\t\n\t        _this2[type + 'Buffer_'] = buffer;\n\t\n\t        // Wire up the events to the SourceBuffer\n\t        ['update', 'updatestart', 'updateend'].forEach(function (event) {\n\t          buffer.addEventListener(event, function () {\n\t            // if audio is disabled\n\t            if (type === 'audio' && _this2.audioDisabled_) {\n\t              return;\n\t            }\n\t\n\t            var shouldTrigger = types.every(function (t) {\n\t              // skip checking audio's updating status if audio\n\t              // is not enabled\n\t              if (t === 'audio' && _this2.audioDisabled_) {\n\t                return true;\n\t              }\n\t              // if the other type if updating we don't trigger\n\t              if (type !== t && _this2[t + 'Buffer_'] && _this2[t + 'Buffer_'].updating) {\n\t                return false;\n\t              }\n\t              return true;\n\t            });\n\t\n\t            if (shouldTrigger) {\n\t              return _this2.trigger(event);\n\t            }\n\t          });\n\t        });\n\t      });\n\t    }\n\t\n\t    /**\n\t     * Emulate the native mediasource function, but our function will\n\t     * send all of the proposed segments to the transmuxer so that we\n\t     * can transmux them before we append them to our internal\n\t     * native source buffers in the correct format.\n\t     *\n\t     * @link https://developer.mozilla.org/en-US/docs/Web/API/SourceBuffer/appendBuffer\n\t     * @param {Uint8Array} segment the segment to append to the buffer\n\t     */\n\t  }, {\n\t    key: 'appendBuffer',\n\t    value: function appendBuffer(segment) {\n\t      // Start the internal \"updating\" state\n\t      this.bufferUpdating_ = true;\n\t\n\t      this.transmuxer_.postMessage({\n\t        action: 'push',\n\t        // Send the typed-array of data as an ArrayBuffer so that\n\t        // it can be sent as a \"Transferable\" and avoid the costly\n\t        // memory copy\n\t        data: segment.buffer,\n\t\n\t        // To recreate the original typed-array, we need information\n\t        // about what portion of the ArrayBuffer it was a view into\n\t        byteOffset: segment.byteOffset,\n\t        byteLength: segment.byteLength\n\t      }, [segment.buffer]);\n\t      this.transmuxer_.postMessage({ action: 'flush' });\n\t    }\n\t\n\t    /**\n\t     * Emulate the native mediasource function and remove parts\n\t     * of the buffer from any of our internal buffers that exist\n\t     *\n\t     * @link https://developer.mozilla.org/en-US/docs/Web/API/SourceBuffer/remove\n\t     * @param {Double} start position to start the remove at\n\t     * @param {Double} end position to end the remove at\n\t     */\n\t  }, {\n\t    key: 'remove',\n\t    value: function remove(start, end) {\n\t      if (this.videoBuffer_) {\n\t        this.videoBuffer_.remove(start, end);\n\t      }\n\t      if (this.audioBuffer_) {\n\t        this.audioBuffer_.remove(start, end);\n\t      }\n\t\n\t      // Remove Metadata Cues (id3)\n\t      (0, _removeCuesFromTrack2['default'])(start, end, this.metadataTrack_);\n\t\n\t      // Remove Any Captions\n\t      (0, _removeCuesFromTrack2['default'])(start, end, this.inbandTextTrack_);\n\t    }\n\t\n\t    /**\n\t     * Process any segments that the muxer has output\n\t     * Concatenate segments together based on type and append them into\n\t     * their respective sourceBuffers\n\t     *\n\t     * @private\n\t     */\n\t  }, {\n\t    key: 'processPendingSegments_',\n\t    value: function processPendingSegments_() {\n\t      var sortedSegments = {\n\t        video: {\n\t          segments: [],\n\t          bytes: 0\n\t        },\n\t        audio: {\n\t          segments: [],\n\t          bytes: 0\n\t        },\n\t        captions: [],\n\t        metadata: []\n\t      };\n\t\n\t      // Sort segments into separate video/audio arrays and\n\t      // keep track of their total byte lengths\n\t      sortedSegments = this.pendingBuffers_.reduce(function (segmentObj, segment) {\n\t        var type = segment.type;\n\t        var data = segment.data;\n\t        var initSegment = segment.initSegment;\n\t\n\t        segmentObj[type].segments.push(data);\n\t        segmentObj[type].bytes += data.byteLength;\n\t\n\t        segmentObj[type].initSegment = initSegment;\n\t\n\t        // Gather any captions into a single array\n\t        if (segment.captions) {\n\t          segmentObj.captions = segmentObj.captions.concat(segment.captions);\n\t        }\n\t\n\t        if (segment.info) {\n\t          segmentObj[type].info = segment.info;\n\t        }\n\t\n\t        // Gather any metadata into a single array\n\t        if (segment.metadata) {\n\t          segmentObj.metadata = segmentObj.metadata.concat(segment.metadata);\n\t        }\n\t\n\t        return segmentObj;\n\t      }, sortedSegments);\n\t\n\t      // Create the real source buffers if they don't exist by now since we\n\t      // finally are sure what tracks are contained in the source\n\t      if (!this.videoBuffer_ && !this.audioBuffer_) {\n\t        // Remove any codecs that may have been specified by default but\n\t        // are no longer applicable now\n\t        if (sortedSegments.video.bytes === 0) {\n\t          this.videoCodec_ = null;\n\t        }\n\t        if (sortedSegments.audio.bytes === 0) {\n\t          this.audioCodec_ = null;\n\t        }\n\t\n\t        this.createRealSourceBuffers_();\n\t      }\n\t\n\t      if (sortedSegments.audio.info) {\n\t        this.mediaSource_.trigger({ type: 'audioinfo', info: sortedSegments.audio.info });\n\t      }\n\t      if (sortedSegments.video.info) {\n\t        this.mediaSource_.trigger({ type: 'videoinfo', info: sortedSegments.video.info });\n\t      }\n\t\n\t      if (this.appendAudioInitSegment_) {\n\t        if (!this.audioDisabled_ && this.audioBuffer_) {\n\t          sortedSegments.audio.segments.unshift(sortedSegments.audio.initSegment);\n\t          sortedSegments.audio.bytes += sortedSegments.audio.initSegment.byteLength;\n\t        }\n\t        this.appendAudioInitSegment_ = false;\n\t      }\n\t\n\t      // Merge multiple video and audio segments into one and append\n\t      if (this.videoBuffer_) {\n\t        sortedSegments.video.segments.unshift(sortedSegments.video.initSegment);\n\t        sortedSegments.video.bytes += sortedSegments.video.initSegment.byteLength;\n\t        this.concatAndAppendSegments_(sortedSegments.video, this.videoBuffer_);\n\t        // TODO: are video tracks the only ones with text tracks?\n\t        (0, _addTextTrackData.addTextTrackData)(this, sortedSegments.captions, sortedSegments.metadata);\n\t      }\n\t      if (!this.audioDisabled_ && this.audioBuffer_) {\n\t        this.concatAndAppendSegments_(sortedSegments.audio, this.audioBuffer_);\n\t      }\n\t\n\t      this.pendingBuffers_.length = 0;\n\t\n\t      // We are no longer in the internal \"updating\" state\n\t      this.bufferUpdating_ = false;\n\t    }\n\t\n\t    /**\n\t     * Combine all segments into a single Uint8Array and then append them\n\t     * to the destination buffer\n\t     *\n\t     * @param {Object} segmentObj\n\t     * @param {SourceBuffer} destinationBuffer native source buffer to append data to\n\t     * @private\n\t     */\n\t  }, {\n\t    key: 'concatAndAppendSegments_',\n\t    value: function concatAndAppendSegments_(segmentObj, destinationBuffer) {\n\t      var offset = 0;\n\t      var tempBuffer = undefined;\n\t\n\t      if (segmentObj.bytes) {\n\t        tempBuffer = new Uint8Array(segmentObj.bytes);\n\t\n\t        // Combine the individual segments into one large typed-array\n\t        segmentObj.segments.forEach(function (segment) {\n\t          tempBuffer.set(segment, offset);\n\t          offset += segment.byteLength;\n\t        });\n\t\n\t        try {\n\t          destinationBuffer.appendBuffer(tempBuffer);\n\t        } catch (error) {\n\t          if (this.mediaSource_.player_) {\n\t            this.mediaSource_.player_.error({\n\t              code: -3,\n\t              type: 'APPEND_BUFFER_ERR'\n\t            });\n\t          }\n\t        }\n\t      }\n\t    }\n\t\n\t    /**\n\t     * Emulate the native mediasource function. abort any soureBuffer\n\t     * actions and throw out any un-appended data.\n\t     *\n\t     * @link https://developer.mozilla.org/en-US/docs/Web/API/SourceBuffer/abort\n\t     */\n\t  }, {\n\t    key: 'abort',\n\t    value: function abort() {\n\t      if (this.videoBuffer_) {\n\t        this.videoBuffer_.abort();\n\t      }\n\t      if (this.audioBuffer_) {\n\t        this.audioBuffer_.abort();\n\t      }\n\t      if (this.transmuxer_) {\n\t        this.transmuxer_.postMessage({ action: 'reset' });\n\t      }\n\t      this.pendingBuffers_.length = 0;\n\t      this.bufferUpdating_ = false;\n\t    }\n\t  }]);\n\t\n\t  return VirtualSourceBuffer;\n\t})(_videoJs2['default'].EventTarget);\n\t\n\texports['default'] = VirtualSourceBuffer;\n\tmodule.exports = exports['default'];\n\t}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n\t},{\"./add-text-track-data\":91,\"./codec-utils\":93,\"./create-text-tracks-if-necessary\":94,\"./remove-cues-from-track\":99,\"./transmuxer-worker\":100,\"webworkify\":103}],103:[function(require,module,exports){\n\tvar bundleFn = arguments[3];\n\tvar sources = arguments[4];\n\tvar cache = arguments[5];\n\t\n\tvar stringify = JSON.stringify;\n\t\n\tmodule.exports = function (fn) {\n\t    var keys = [];\n\t    var wkey;\n\t    var cacheKeys = Object.keys(cache);\n\t    \n\t    for (var i = 0, l = cacheKeys.length; i < l; i++) {\n\t        var key = cacheKeys[i];\n\t        if (cache[key].exports === fn) {\n\t            wkey = key;\n\t            break;\n\t        }\n\t    }\n\t    \n\t    if (!wkey) {\n\t        wkey = Math.floor(Math.pow(16, 8) * Math.random()).toString(16);\n\t        var wcache = {};\n\t        for (var i = 0, l = cacheKeys.length; i < l; i++) {\n\t            var key = cacheKeys[i];\n\t            wcache[key] = key;\n\t        }\n\t        sources[wkey] = [\n\t            Function(['require','module','exports'], '(' + fn + ')(self)'),\n\t            wcache\n\t        ];\n\t    }\n\t    var skey = Math.floor(Math.pow(16, 8) * Math.random()).toString(16);\n\t    \n\t    var scache = {}; scache[wkey] = wkey;\n\t    sources[skey] = [\n\t        Function(['require'],'require(' + stringify(wkey) + ')(self)'),\n\t        scache\n\t    ];\n\t    \n\t    var src = '(' + bundleFn + ')({'\n\t        + Object.keys(sources).map(function (key) {\n\t            return stringify(key) + ':['\n\t                + sources[key][0]\n\t                + ',' + stringify(sources[key][1]) + ']'\n\t            ;\n\t        }).join(',')\n\t        + '},{},[' + stringify(skey) + '])'\n\t    ;\n\t    \n\t    var URL = window.URL || window.webkitURL || window.mozURL || window.msURL;\n\t    \n\t    return new Worker(URL.createObjectURL(\n\t        new Blob([src], { type: 'text/javascript' })\n\t    ));\n\t};\n\t\n\t},{}],104:[function(require,module,exports){\n\t(function (global){\n\t/**\n\t * @file videojs-contrib-hls.js\n\t *\n\t * The main file for the HLS project.\n\t * License: https://github.com/videojs/videojs-contrib-hls/blob/master/LICENSE\n\t */\n\t'use strict';\n\t\n\tvar _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();\n\t\n\tvar _get = function get(_x, _x2, _x3) { var _again = true; _function: while (_again) { var object = _x, property = _x2, receiver = _x3; _again = false; if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { _x = parent; _x2 = property; _x3 = receiver; _again = true; desc = parent = undefined; continue _function; } } else if ('value' in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } } };\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== 'function' && superClass !== null) { throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\tvar _globalDocument = require('global/document');\n\t\n\tvar _globalDocument2 = _interopRequireDefault(_globalDocument);\n\t\n\tvar _playlistLoader = require('./playlist-loader');\n\t\n\tvar _playlistLoader2 = _interopRequireDefault(_playlistLoader);\n\t\n\tvar _playlist = require('./playlist');\n\t\n\tvar _playlist2 = _interopRequireDefault(_playlist);\n\t\n\tvar _xhr = require('./xhr');\n\t\n\tvar _xhr2 = _interopRequireDefault(_xhr);\n\t\n\tvar _aesDecrypter = require('aes-decrypter');\n\t\n\tvar _binUtils = require('./bin-utils');\n\t\n\tvar _binUtils2 = _interopRequireDefault(_binUtils);\n\t\n\tvar _videojsContribMediaSources = require('videojs-contrib-media-sources');\n\t\n\tvar _m3u8Parser = require('m3u8-parser');\n\t\n\tvar _m3u8Parser2 = _interopRequireDefault(_m3u8Parser);\n\t\n\tvar _videoJs = (typeof window !== \"undefined\" ? window['videojs'] : typeof global !== \"undefined\" ? global['videojs'] : null);\n\t\n\tvar _videoJs2 = _interopRequireDefault(_videoJs);\n\t\n\tvar _masterPlaylistController = require('./master-playlist-controller');\n\t\n\tvar _config = require('./config');\n\t\n\tvar _config2 = _interopRequireDefault(_config);\n\t\n\tvar _renditionMixin = require('./rendition-mixin');\n\t\n\tvar _renditionMixin2 = _interopRequireDefault(_renditionMixin);\n\t\n\tvar _globalWindow = require('global/window');\n\t\n\tvar _globalWindow2 = _interopRequireDefault(_globalWindow);\n\t\n\tvar _playbackWatcher = require('./playback-watcher');\n\t\n\tvar _playbackWatcher2 = _interopRequireDefault(_playbackWatcher);\n\t\n\tvar _reloadSourceOnError = require('./reload-source-on-error');\n\t\n\tvar _reloadSourceOnError2 = _interopRequireDefault(_reloadSourceOnError);\n\t\n\tvar Hls = {\n\t  PlaylistLoader: _playlistLoader2['default'],\n\t  Playlist: _playlist2['default'],\n\t  Decrypter: _aesDecrypter.Decrypter,\n\t  AsyncStream: _aesDecrypter.AsyncStream,\n\t  decrypt: _aesDecrypter.decrypt,\n\t  utils: _binUtils2['default'],\n\t  xhr: (0, _xhr2['default'])()\n\t};\n\t\n\tObject.defineProperty(Hls, 'GOAL_BUFFER_LENGTH', {\n\t  get: function get() {\n\t    _videoJs2['default'].log.warn('using Hls.GOAL_BUFFER_LENGTH is UNSAFE be sure ' + 'you know what you are doing');\n\t    return _config2['default'].GOAL_BUFFER_LENGTH;\n\t  },\n\t  set: function set(v) {\n\t    _videoJs2['default'].log.warn('using Hls.GOAL_BUFFER_LENGTH is UNSAFE be sure ' + 'you know what you are doing');\n\t    if (typeof v !== 'number' || v <= 0) {\n\t      _videoJs2['default'].log.warn('value passed to Hls.GOAL_BUFFER_LENGTH ' + 'must be a number and greater than 0');\n\t      return;\n\t    }\n\t    _config2['default'].GOAL_BUFFER_LENGTH = v;\n\t  }\n\t});\n\t\n\t// A fudge factor to apply to advertised playlist bitrates to account for\n\t// temporary flucations in client bandwidth\n\tvar BANDWIDTH_VARIANCE = 1.2;\n\t\n\t/**\n\t * Returns the CSS value for the specified property on an element\n\t * using `getComputedStyle`. Firefox has a long-standing issue where\n\t * getComputedStyle() may return null when running in an iframe with\n\t * `display: none`.\n\t *\n\t * @see https://bugzilla.mozilla.org/show_bug.cgi?id=548397\n\t * @param {HTMLElement} el the htmlelement to work on\n\t * @param {string} the proprety to get the style for\n\t */\n\tvar safeGetComputedStyle = function safeGetComputedStyle(el, property) {\n\t  var result = undefined;\n\t\n\t  if (!el) {\n\t    return '';\n\t  }\n\t\n\t  result = _globalWindow2['default'].getComputedStyle(el);\n\t  if (!result) {\n\t    return '';\n\t  }\n\t\n\t  return result[property];\n\t};\n\t\n\t/**\n\t * Chooses the appropriate media playlist based on the current\n\t * bandwidth estimate and the player size.\n\t *\n\t * @return {Playlist} the highest bitrate playlist less than the currently detected\n\t * bandwidth, accounting for some amount of bandwidth variance\n\t */\n\tHls.STANDARD_PLAYLIST_SELECTOR = function () {\n\t  var effectiveBitrate = undefined;\n\t  var sortedPlaylists = this.playlists.master.playlists.slice();\n\t  var bandwidthPlaylists = [];\n\t  var now = +new Date();\n\t  var i = undefined;\n\t  var variant = undefined;\n\t  var bandwidthBestVariant = undefined;\n\t  var resolutionPlusOne = undefined;\n\t  var resolutionPlusOneAttribute = undefined;\n\t  var resolutionBestVariant = undefined;\n\t  var width = undefined;\n\t  var height = undefined;\n\t\n\t  sortedPlaylists.sort(Hls.comparePlaylistBandwidth);\n\t\n\t  // filter out any playlists that have been excluded due to\n\t  // incompatible configurations or playback errors\n\t  sortedPlaylists = sortedPlaylists.filter(function (localVariant) {\n\t    if (typeof localVariant.excludeUntil !== 'undefined') {\n\t      return now >= localVariant.excludeUntil;\n\t    }\n\t    return true;\n\t  });\n\t\n\t  // filter out any variant that has greater effective bitrate\n\t  // than the current estimated bandwidth\n\t  i = sortedPlaylists.length;\n\t  while (i--) {\n\t    variant = sortedPlaylists[i];\n\t\n\t    // ignore playlists without bandwidth information\n\t    if (!variant.attributes || !variant.attributes.BANDWIDTH) {\n\t      continue;\n\t    }\n\t\n\t    effectiveBitrate = variant.attributes.BANDWIDTH * BANDWIDTH_VARIANCE;\n\t\n\t    if (effectiveBitrate < this.systemBandwidth) {\n\t      bandwidthPlaylists.push(variant);\n\t\n\t      // since the playlists are sorted in ascending order by\n\t      // bandwidth, the first viable variant is the best\n\t      if (!bandwidthBestVariant) {\n\t        bandwidthBestVariant = variant;\n\t      }\n\t    }\n\t  }\n\t\n\t  i = bandwidthPlaylists.length;\n\t\n\t  // sort variants by resolution\n\t  bandwidthPlaylists.sort(Hls.comparePlaylistResolution);\n\t\n\t  // forget our old variant from above,\n\t  // or we might choose that in high-bandwidth scenarios\n\t  // (this could be the lowest bitrate rendition as  we go through all of them above)\n\t  variant = null;\n\t\n\t  width = parseInt(safeGetComputedStyle(this.tech_.el(), 'width'), 10);\n\t  height = parseInt(safeGetComputedStyle(this.tech_.el(), 'height'), 10);\n\t\n\t  // iterate through the bandwidth-filtered playlists and find\n\t  // best rendition by player dimension\n\t  while (i--) {\n\t    variant = bandwidthPlaylists[i];\n\t\n\t    // ignore playlists without resolution information\n\t    if (!variant.attributes || !variant.attributes.RESOLUTION || !variant.attributes.RESOLUTION.width || !variant.attributes.RESOLUTION.height) {\n\t      continue;\n\t    }\n\t\n\t    // since the playlists are sorted, the first variant that has\n\t    // dimensions less than or equal to the player size is the best\n\t    var variantResolution = variant.attributes.RESOLUTION;\n\t\n\t    if (variantResolution.width === width && variantResolution.height === height) {\n\t      // if we have the exact resolution as the player use it\n\t      resolutionPlusOne = null;\n\t      resolutionBestVariant = variant;\n\t      break;\n\t    } else if (variantResolution.width < width && variantResolution.height < height) {\n\t      // if both dimensions are less than the player use the\n\t      // previous (next-largest) variant\n\t      break;\n\t    } else if (!resolutionPlusOne || variantResolution.width < resolutionPlusOneAttribute.width && variantResolution.height < resolutionPlusOneAttribute.height) {\n\t      // If we still haven't found a good match keep a\n\t      // reference to the previous variant for the next loop\n\t      // iteration\n\t\n\t      // By only saving variants if they are smaller than the\n\t      // previously saved variant, we ensure that we also pick\n\t      // the highest bandwidth variant that is just-larger-than\n\t      // the video player\n\t      resolutionPlusOne = variant;\n\t      resolutionPlusOneAttribute = resolutionPlusOne.attributes.RESOLUTION;\n\t    }\n\t  }\n\t\n\t  // fallback chain of variants\n\t  return resolutionPlusOne || resolutionBestVariant || bandwidthBestVariant || sortedPlaylists[0];\n\t};\n\t\n\t// HLS is a source handler, not a tech. Make sure attempts to use it\n\t// as one do not cause exceptions.\n\tHls.canPlaySource = function () {\n\t  return _videoJs2['default'].log.warn('HLS is no longer a tech. Please remove it from ' + 'your player\\'s techOrder.');\n\t};\n\t\n\t/**\n\t * Whether the browser has built-in HLS support.\n\t */\n\tHls.supportsNativeHls = (function () {\n\t  var video = _globalDocument2['default'].createElement('video');\n\t\n\t  // native HLS is definitely not supported if HTML5 video isn't\n\t  if (!_videoJs2['default'].getComponent('Html5').isSupported()) {\n\t    return false;\n\t  }\n\t\n\t  // HLS manifests can go by many mime-types\n\t  var canPlay = [\n\t  // Apple santioned\n\t  'application/vnd.apple.mpegurl',\n\t  // Apple sanctioned for backwards compatibility\n\t  'audio/mpegurl',\n\t  // Very common\n\t  'audio/x-mpegurl',\n\t  // Very common\n\t  'application/x-mpegurl',\n\t  // Included for completeness\n\t  'video/x-mpegurl', 'video/mpegurl', 'application/mpegurl'];\n\t\n\t  return canPlay.some(function (canItPlay) {\n\t    return (/maybe|probably/i.test(video.canPlayType(canItPlay))\n\t    );\n\t  });\n\t})();\n\t\n\t/**\n\t * HLS is a source handler, not a tech. Make sure attempts to use it\n\t * as one do not cause exceptions.\n\t */\n\tHls.isSupported = function () {\n\t  return _videoJs2['default'].log.warn('HLS is no longer a tech. Please remove it from ' + 'your player\\'s techOrder.');\n\t};\n\t\n\tvar USER_AGENT = _globalWindow2['default'].navigator && _globalWindow2['default'].navigator.userAgent || '';\n\t\n\t/**\n\t * Determines whether the browser supports a change in the audio configuration\n\t * during playback. Currently only Firefox 48 and below do not support this.\n\t * window.isSecureContext is a propterty that was added to window in firefox 49,\n\t * so we can use it to detect Firefox 49+.\n\t *\n\t * @return {Boolean} Whether the browser supports audio config change during playback\n\t */\n\tHls.supportsAudioInfoChange_ = function () {\n\t  if (_videoJs2['default'].browser.IS_FIREFOX) {\n\t    var firefoxVersionMap = /Firefox\\/([\\d.]+)/i.exec(USER_AGENT);\n\t    var version = parseInt(firefoxVersionMap[1], 10);\n\t\n\t    return version >= 49;\n\t  }\n\t  return true;\n\t};\n\t\n\tvar Component = _videoJs2['default'].getComponent('Component');\n\t\n\t/**\n\t * The Hls Handler object, where we orchestrate all of the parts\n\t * of HLS to interact with video.js\n\t *\n\t * @class HlsHandler\n\t * @extends videojs.Component\n\t * @param {Object} source the soruce object\n\t * @param {Tech} tech the parent tech object\n\t * @param {Object} options optional and required options\n\t */\n\t\n\tvar HlsHandler = (function (_Component) {\n\t  _inherits(HlsHandler, _Component);\n\t\n\t  function HlsHandler(source, tech, options) {\n\t    var _this = this;\n\t\n\t    _classCallCheck(this, HlsHandler);\n\t\n\t    _get(Object.getPrototypeOf(HlsHandler.prototype), 'constructor', this).call(this, tech);\n\t\n\t    // tech.player() is deprecated but setup a reference to HLS for\n\t    // backwards-compatibility\n\t    if (tech.options_ && tech.options_.playerId) {\n\t      var _player = (0, _videoJs2['default'])(tech.options_.playerId);\n\t\n\t      if (!_player.hasOwnProperty('hls')) {\n\t        Object.defineProperty(_player, 'hls', {\n\t          get: function get() {\n\t            _videoJs2['default'].log.warn('player.hls is deprecated. Use player.tech_.hls instead.');\n\t            return _this;\n\t          }\n\t        });\n\t      }\n\t    }\n\t\n\t    this.tech_ = tech;\n\t    this.source_ = source;\n\t    this.stats = {};\n\t    this.ignoreNextSeekingEvent_ = false;\n\t\n\t    // handle global & Source Handler level options\n\t    this.options_ = _videoJs2['default'].mergeOptions(_videoJs2['default'].options.hls || {}, options.hls);\n\t    this.setOptions_();\n\t\n\t    // listen for fullscreenchange events for this player so that we\n\t    // can adjust our quality selection quickly\n\t    this.on(_globalDocument2['default'], ['fullscreenchange', 'webkitfullscreenchange', 'mozfullscreenchange', 'MSFullscreenChange'], function (event) {\n\t      var fullscreenElement = _globalDocument2['default'].fullscreenElement || _globalDocument2['default'].webkitFullscreenElement || _globalDocument2['default'].mozFullScreenElement || _globalDocument2['default'].msFullscreenElement;\n\t\n\t      if (fullscreenElement && fullscreenElement.contains(_this.tech_.el())) {\n\t        _this.masterPlaylistController_.fastQualityChange_();\n\t      }\n\t    });\n\t\n\t    this.on(this.tech_, 'seeking', function () {\n\t      if (this.ignoreNextSeekingEvent_) {\n\t        this.ignoreNextSeekingEvent_ = false;\n\t        return;\n\t      }\n\t\n\t      this.setCurrentTime(this.tech_.currentTime());\n\t    });\n\t    this.on(this.tech_, 'error', function () {\n\t      if (this.masterPlaylistController_) {\n\t        this.masterPlaylistController_.pauseLoading();\n\t      }\n\t    });\n\t\n\t    this.audioTrackChange_ = function () {\n\t      _this.masterPlaylistController_.setupAudio();\n\t    };\n\t\n\t    this.on(this.tech_, 'play', this.play);\n\t  }\n\t\n\t  /**\n\t   * The Source Handler object, which informs video.js what additional\n\t   * MIME types are supported and sets up playback. It is registered\n\t   * automatically to the appropriate tech based on the capabilities of\n\t   * the browser it is running in. It is not necessary to use or modify\n\t   * this object in normal usage.\n\t   */\n\t\n\t  _createClass(HlsHandler, [{\n\t    key: 'setOptions_',\n\t    value: function setOptions_() {\n\t      var _this2 = this;\n\t\n\t      // defaults\n\t      this.options_.withCredentials = this.options_.withCredentials || false;\n\t\n\t      // start playlist selection at a reasonable bandwidth for\n\t      // broadband internet\n\t      // 0.5 MB/s\n\t      if (typeof this.options_.bandwidth !== 'number') {\n\t        this.options_.bandwidth = 4194304;\n\t      }\n\t\n\t      // grab options passed to player.src\n\t      ['withCredentials', 'bandwidth'].forEach(function (option) {\n\t        if (typeof _this2.source_[option] !== 'undefined') {\n\t          _this2.options_[option] = _this2.source_[option];\n\t        }\n\t      });\n\t\n\t      this.bandwidth = this.options_.bandwidth;\n\t    }\n\t\n\t    /**\n\t     * called when player.src gets called, handle a new source\n\t     *\n\t     * @param {Object} src the source object to handle\n\t     */\n\t  }, {\n\t    key: 'src',\n\t    value: function src(_src) {\n\t      var _this3 = this;\n\t\n\t      // do nothing if the src is falsey\n\t      if (!_src) {\n\t        return;\n\t      }\n\t      this.setOptions_();\n\t      // add master playlist controller options\n\t      this.options_.url = this.source_.src;\n\t      this.options_.tech = this.tech_;\n\t      this.options_.externHls = Hls;\n\t      this.masterPlaylistController_ = new _masterPlaylistController.MasterPlaylistController(this.options_);\n\t      this.playbackWatcher_ = new _playbackWatcher2['default'](_videoJs2['default'].mergeOptions(this.options_, {\n\t        seekable: function seekable() {\n\t          return _this3.seekable();\n\t        }\n\t      }));\n\t\n\t      // `this` in selectPlaylist should be the HlsHandler for backwards\n\t      // compatibility with < v2\n\t      this.masterPlaylistController_.selectPlaylist = this.selectPlaylist ? this.selectPlaylist.bind(this) : Hls.STANDARD_PLAYLIST_SELECTOR.bind(this);\n\t\n\t      // re-expose some internal objects for backwards compatibility with < v2\n\t      this.playlists = this.masterPlaylistController_.masterPlaylistLoader_;\n\t      this.mediaSource = this.masterPlaylistController_.mediaSource;\n\t\n\t      // Proxy assignment of some properties to the master playlist\n\t      // controller. Using a custom property for backwards compatibility\n\t      // with < v2\n\t      Object.defineProperties(this, {\n\t        selectPlaylist: {\n\t          get: function get() {\n\t            return this.masterPlaylistController_.selectPlaylist;\n\t          },\n\t          set: function set(selectPlaylist) {\n\t            this.masterPlaylistController_.selectPlaylist = selectPlaylist.bind(this);\n\t          }\n\t        },\n\t        throughput: {\n\t          get: function get() {\n\t            return this.masterPlaylistController_.mainSegmentLoader_.throughput.rate;\n\t          },\n\t          set: function set(throughput) {\n\t            this.masterPlaylistController_.mainSegmentLoader_.throughput.rate = throughput;\n\t            // By setting `count` to 1 the throughput value becomes the starting value\n\t            // for the cumulative average\n\t            this.masterPlaylistController_.mainSegmentLoader_.throughput.count = 1;\n\t          }\n\t        },\n\t        bandwidth: {\n\t          get: function get() {\n\t            return this.masterPlaylistController_.mainSegmentLoader_.bandwidth;\n\t          },\n\t          set: function set(bandwidth) {\n\t            this.masterPlaylistController_.mainSegmentLoader_.bandwidth = bandwidth;\n\t            // setting the bandwidth manually resets the throughput counter\n\t            // `count` is set to zero that current value of `rate` isn't included\n\t            // in the cumulative average\n\t            this.masterPlaylistController_.mainSegmentLoader_.throughput = { rate: 0, count: 0 };\n\t          }\n\t        },\n\t        /**\n\t         * `systemBandwidth` is a combination of two serial processes bit-rates. The first\n\t         * is the network bitrate provided by `bandwidth` and the second is the bitrate of\n\t         * the entire process after that - decryption, transmuxing, and appending - provided\n\t         * by `throughput`.\n\t         *\n\t         * Since the two process are serial, the overall system bandwidth is given by:\n\t         *   sysBandwidth = 1 / (1 / bandwidth + 1 / throughput)\n\t         */\n\t        systemBandwidth: {\n\t          get: function get() {\n\t            var invBandwidth = 1 / (this.bandwidth || 1);\n\t            var invThroughput = undefined;\n\t\n\t            if (this.throughput > 0) {\n\t              invThroughput = 1 / this.throughput;\n\t            } else {\n\t              invThroughput = 0;\n\t            }\n\t\n\t            var systemBitrate = Math.floor(1 / (invBandwidth + invThroughput));\n\t\n\t            return systemBitrate;\n\t          },\n\t          set: function set() {\n\t            _videoJs2['default'].log.error('The \"systemBandwidth\" property is read-only');\n\t          }\n\t        }\n\t      });\n\t\n\t      Object.defineProperties(this.stats, {\n\t        bandwidth: {\n\t          get: function get() {\n\t            return _this3.bandwidth || 0;\n\t          },\n\t          enumerable: true\n\t        },\n\t        mediaRequests: {\n\t          get: function get() {\n\t            return _this3.masterPlaylistController_.mediaRequests_() || 0;\n\t          },\n\t          enumerable: true\n\t        },\n\t        mediaTransferDuration: {\n\t          get: function get() {\n\t            return _this3.masterPlaylistController_.mediaTransferDuration_() || 0;\n\t          },\n\t          enumerable: true\n\t        },\n\t        mediaBytesTransferred: {\n\t          get: function get() {\n\t            return _this3.masterPlaylistController_.mediaBytesTransferred_() || 0;\n\t          },\n\t          enumerable: true\n\t        },\n\t        mediaSecondsLoaded: {\n\t          get: function get() {\n\t            return _this3.masterPlaylistController_.mediaSecondsLoaded_() || 0;\n\t          },\n\t          enumerable: true\n\t        }\n\t      });\n\t\n\t      this.tech_.one('canplay', this.masterPlaylistController_.setupFirstPlay.bind(this.masterPlaylistController_));\n\t\n\t      this.masterPlaylistController_.on('sourceopen', function () {\n\t        _this3.tech_.audioTracks().addEventListener('change', _this3.audioTrackChange_);\n\t      });\n\t\n\t      this.masterPlaylistController_.on('selectedinitialmedia', function () {\n\t        // Add the manual rendition mix-in to HlsHandler\n\t        (0, _renditionMixin2['default'])(_this3);\n\t      });\n\t\n\t      this.masterPlaylistController_.on('audioupdate', function () {\n\t        // clear current audioTracks\n\t        _this3.tech_.clearTracks('audio');\n\t        _this3.masterPlaylistController_.activeAudioGroup().forEach(function (audioTrack) {\n\t          _this3.tech_.audioTracks().addTrack(audioTrack);\n\t        });\n\t      });\n\t\n\t      // the bandwidth of the primary segment loader is our best\n\t      // estimate of overall bandwidth\n\t      this.on(this.masterPlaylistController_, 'progress', function () {\n\t        this.tech_.trigger('progress');\n\t      });\n\t\n\t      // In the live case, we need to ignore the very first `seeking` event since\n\t      // that will be the result of the seek-to-live behavior\n\t      this.on(this.masterPlaylistController_, 'firstplay', function () {\n\t        this.ignoreNextSeekingEvent_ = true;\n\t      });\n\t\n\t      // do nothing if the tech has been disposed already\n\t      // this can occur if someone sets the src in player.ready(), for instance\n\t      if (!this.tech_.el()) {\n\t        return;\n\t      }\n\t\n\t      this.tech_.src(_videoJs2['default'].URL.createObjectURL(this.masterPlaylistController_.mediaSource));\n\t    }\n\t\n\t    /**\n\t     * a helper for grabbing the active audio group from MasterPlaylistController\n\t     *\n\t     * @private\n\t     */\n\t  }, {\n\t    key: 'activeAudioGroup_',\n\t    value: function activeAudioGroup_() {\n\t      return this.masterPlaylistController_.activeAudioGroup();\n\t    }\n\t\n\t    /**\n\t     * Begin playing the video.\n\t     */\n\t  }, {\n\t    key: 'play',\n\t    value: function play() {\n\t      this.masterPlaylistController_.play();\n\t    }\n\t\n\t    /**\n\t     * a wrapper around the function in MasterPlaylistController\n\t     */\n\t  }, {\n\t    key: 'setCurrentTime',\n\t    value: function setCurrentTime(currentTime) {\n\t      this.masterPlaylistController_.setCurrentTime(currentTime);\n\t    }\n\t\n\t    /**\n\t     * a wrapper around the function in MasterPlaylistController\n\t     */\n\t  }, {\n\t    key: 'duration',\n\t    value: function duration() {\n\t      return this.masterPlaylistController_.duration();\n\t    }\n\t\n\t    /**\n\t     * a wrapper around the function in MasterPlaylistController\n\t     */\n\t  }, {\n\t    key: 'seekable',\n\t    value: function seekable() {\n\t      return this.masterPlaylistController_.seekable();\n\t    }\n\t\n\t    /**\n\t    * Abort all outstanding work and cleanup.\n\t    */\n\t  }, {\n\t    key: 'dispose',\n\t    value: function dispose() {\n\t      if (this.playbackWatcher_) {\n\t        this.playbackWatcher_.dispose();\n\t      }\n\t      if (this.masterPlaylistController_) {\n\t        this.masterPlaylistController_.dispose();\n\t      }\n\t      this.tech_.audioTracks().removeEventListener('change', this.audioTrackChange_);\n\t      _get(Object.getPrototypeOf(HlsHandler.prototype), 'dispose', this).call(this);\n\t    }\n\t  }]);\n\t\n\t  return HlsHandler;\n\t})(Component);\n\t\n\tvar HlsSourceHandler = function HlsSourceHandler(mode) {\n\t  return {\n\t    canHandleSource: function canHandleSource(srcObj) {\n\t      // this forces video.js to skip this tech/mode if its not the one we have been\n\t      // overriden to use, by returing that we cannot handle the source.\n\t      if (_videoJs2['default'].options.hls && _videoJs2['default'].options.hls.mode && _videoJs2['default'].options.hls.mode !== mode) {\n\t        return false;\n\t      }\n\t      return HlsSourceHandler.canPlayType(srcObj.type);\n\t    },\n\t    handleSource: function handleSource(source, tech, options) {\n\t      if (mode === 'flash') {\n\t        // We need to trigger this asynchronously to give others the chance\n\t        // to bind to the event when a source is set at player creation\n\t        tech.setTimeout(function () {\n\t          tech.trigger('loadstart');\n\t        }, 1);\n\t      }\n\t\n\t      var settings = _videoJs2['default'].mergeOptions(options, { hls: { mode: mode } });\n\t\n\t      tech.hls = new HlsHandler(source, tech, settings);\n\t\n\t      tech.hls.xhr = (0, _xhr2['default'])();\n\t      // Use a global `before` function if specified on videojs.Hls.xhr\n\t      // but still allow for a per-player override\n\t      if (_videoJs2['default'].Hls.xhr.beforeRequest) {\n\t        tech.hls.xhr.beforeRequest = _videoJs2['default'].Hls.xhr.beforeRequest;\n\t      }\n\t\n\t      tech.hls.src(source.src);\n\t      return tech.hls;\n\t    },\n\t    canPlayType: function canPlayType(type) {\n\t      if (HlsSourceHandler.canPlayType(type)) {\n\t        return 'maybe';\n\t      }\n\t      return '';\n\t    }\n\t  };\n\t};\n\t\n\t/**\n\t * A comparator function to sort two playlist object by bandwidth.\n\t *\n\t * @param {Object} left a media playlist object\n\t * @param {Object} right a media playlist object\n\t * @return {Number} Greater than zero if the bandwidth attribute of\n\t * left is greater than the corresponding attribute of right. Less\n\t * than zero if the bandwidth of right is greater than left and\n\t * exactly zero if the two are equal.\n\t */\n\tHls.comparePlaylistBandwidth = function (left, right) {\n\t  var leftBandwidth = undefined;\n\t  var rightBandwidth = undefined;\n\t\n\t  if (left.attributes && left.attributes.BANDWIDTH) {\n\t    leftBandwidth = left.attributes.BANDWIDTH;\n\t  }\n\t  leftBandwidth = leftBandwidth || _globalWindow2['default'].Number.MAX_VALUE;\n\t  if (right.attributes && right.attributes.BANDWIDTH) {\n\t    rightBandwidth = right.attributes.BANDWIDTH;\n\t  }\n\t  rightBandwidth = rightBandwidth || _globalWindow2['default'].Number.MAX_VALUE;\n\t\n\t  return leftBandwidth - rightBandwidth;\n\t};\n\t\n\t/**\n\t * A comparator function to sort two playlist object by resolution (width).\n\t * @param {Object} left a media playlist object\n\t * @param {Object} right a media playlist object\n\t * @return {Number} Greater than zero if the resolution.width attribute of\n\t * left is greater than the corresponding attribute of right. Less\n\t * than zero if the resolution.width of right is greater than left and\n\t * exactly zero if the two are equal.\n\t */\n\tHls.comparePlaylistResolution = function (left, right) {\n\t  var leftWidth = undefined;\n\t  var rightWidth = undefined;\n\t\n\t  if (left.attributes && left.attributes.RESOLUTION && left.attributes.RESOLUTION.width) {\n\t    leftWidth = left.attributes.RESOLUTION.width;\n\t  }\n\t\n\t  leftWidth = leftWidth || _globalWindow2['default'].Number.MAX_VALUE;\n\t\n\t  if (right.attributes && right.attributes.RESOLUTION && right.attributes.RESOLUTION.width) {\n\t    rightWidth = right.attributes.RESOLUTION.width;\n\t  }\n\t\n\t  rightWidth = rightWidth || _globalWindow2['default'].Number.MAX_VALUE;\n\t\n\t  // NOTE - Fallback to bandwidth sort as appropriate in cases where multiple renditions\n\t  // have the same media dimensions/ resolution\n\t  if (leftWidth === rightWidth && left.attributes.BANDWIDTH && right.attributes.BANDWIDTH) {\n\t    return left.attributes.BANDWIDTH - right.attributes.BANDWIDTH;\n\t  }\n\t  return leftWidth - rightWidth;\n\t};\n\t\n\tHlsSourceHandler.canPlayType = function (type) {\n\t  var mpegurlRE = /^(audio|video|application)\\/(x-|vnd\\.apple\\.)?mpegurl/i;\n\t\n\t  // favor native HLS support if it's available\n\t  if (!_videoJs2['default'].options.hls.overrideNative && Hls.supportsNativeHls) {\n\t    return false;\n\t  }\n\t  return mpegurlRE.test(type);\n\t};\n\t\n\tif (typeof _videoJs2['default'].MediaSource === 'undefined' || typeof _videoJs2['default'].URL === 'undefined') {\n\t  _videoJs2['default'].MediaSource = _videojsContribMediaSources.MediaSource;\n\t  _videoJs2['default'].URL = _videojsContribMediaSources.URL;\n\t}\n\t\n\t// register source handlers with the appropriate techs\n\tif (_videojsContribMediaSources.MediaSource.supportsNativeMediaSources()) {\n\t  _videoJs2['default'].getComponent('Html5').registerSourceHandler(HlsSourceHandler('html5'), 0);\n\t}\n\tif (_globalWindow2['default'].Uint8Array) {\n\t  _videoJs2['default'].getComponent('Flash').registerSourceHandler(HlsSourceHandler('flash'));\n\t}\n\t\n\t_videoJs2['default'].HlsHandler = HlsHandler;\n\t_videoJs2['default'].HlsSourceHandler = HlsSourceHandler;\n\t_videoJs2['default'].Hls = Hls;\n\t_videoJs2['default'].m3u8 = _m3u8Parser2['default'];\n\t_videoJs2['default'].registerComponent('Hls', Hls);\n\t_videoJs2['default'].options.hls = _videoJs2['default'].options.hls || {};\n\t_videoJs2['default'].plugin('reloadSourceOnError', _reloadSourceOnError2['default']);\n\t\n\tmodule.exports = {\n\t  Hls: Hls,\n\t  HlsHandler: HlsHandler,\n\t  HlsSourceHandler: HlsSourceHandler\n\t};\n\t}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n\t},{\"./bin-utils\":2,\"./config\":3,\"./master-playlist-controller\":4,\"./playback-watcher\":5,\"./playlist\":7,\"./playlist-loader\":6,\"./reload-source-on-error\":9,\"./rendition-mixin\":10,\"./xhr\":16,\"aes-decrypter\":20,\"global/document\":26,\"global/window\":27,\"m3u8-parser\":64,\"videojs-contrib-media-sources\":101}]},{},[104])(104)\n\t});\n\t/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }())))\n\n/***/ },\n/* 114 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/*! videojs-resolution-switcher - 2015-7-26\n\t * Copyright (c) 2016 Kasper Moskwiak\n\t * Modified by Pierre Kraft\n\t * Licensed under the Apache-2.0 license. */\n\t\n\t(function() {\n\t  /* jshint eqnull: true*/\n\t  /* global require */\n\t  'use strict';\n\t  var videojs = null;\n\t  if(typeof window.videojs === 'undefined' && \"function\" === 'function') {\n\t    videojs = __webpack_require__(3);\n\t  } else {\n\t    videojs = window.videojs;\n\t  }\n\t\n\t  (function(window, videojs) {\n\t\n\t\n\t    var defaults = {},\n\t        videoJsResolutionSwitcher,\n\t        currentResolution = {}, // stores current resolution\n\t        menuItemsHolder = {}; // stores menuItems\n\t\n\t    function setSourcesSanitized(player, sources, label, customSourcePicker) {\n\t      currentResolution = {\n\t        label: label,\n\t        sources: sources\n\t      };\n\t      if(typeof customSourcePicker === 'function'){\n\t        return customSourcePicker(player, sources, label);\n\t      }\n\t      return player.src(sources.map(function(src) {\n\t        return {src: src.src, type: src.type, res: src.res};\n\t      }));\n\t    }\n\t\n\t  /*\n\t   * Resolution menu item\n\t   */\n\t  var MenuItem = videojs.getComponent('MenuItem');\n\t  var ResolutionMenuItem = videojs.extend(MenuItem, {\n\t    constructor: function(player, options, onClickListener, label){\n\t      this.onClickListener = onClickListener;\n\t      this.label = label;\n\t      // Sets this.player_, this.options_ and initializes the component\n\t      MenuItem.call(this, player, options);\n\t      this.src = options.src;\n\t\n\t      this.on('click', this.onClick);\n\t      this.on('touchstart', this.onClick);\n\t\n\t      if (options.initialySelected) {\n\t        this.showAsLabel();\n\t        this.selected(true);\n\t\n\t        this.addClass('vjs-selected');\n\t      }\n\t    },\n\t    showAsLabel: function() {\n\t      // Change menu button label to the label of this item if the menu button label is provided\n\t      if(this.label) {\n\t        this.label.innerHTML = this.options_.label;\n\t      }\n\t    },\n\t    onClick: function(customSourcePicker){\n\t      this.onClickListener(this);\n\t      // Remember player state\n\t      var currentTime = this.player_.currentTime();\n\t      var isPaused = this.player_.paused();\n\t      this.showAsLabel();\n\t\n\t      // add .current class\n\t      this.addClass('vjs-selected');\n\t\n\t      // Hide bigPlayButton\n\t      if(!isPaused){\n\t        this.player_.bigPlayButton.hide();\n\t      }\n\t      if(typeof customSourcePicker !== 'function' &&\n\t        typeof this.options_.customSourcePicker === 'function'){\n\t        customSourcePicker = this.options_.customSourcePicker;\n\t      }\n\t      // Change player source and wait for loadeddata event, then play video\n\t      // loadedmetadata doesn't work right now for flash.\n\t      // Probably because of https://github.com/videojs/video-js-swf/issues/124\n\t      // If player preload is 'none' and then loadeddata not fired. So, we need timeupdate event for seek handle (timeupdate doesn't work properly with flash)\n\t      var handleSeekEvent = 'loadeddata';\n\t      if(this.player_.techName_ !== 'Youtube' && this.player_.preload() === 'none' && this.player_.techName_ !== 'Flash') {\n\t        handleSeekEvent = 'timeupdate';\n\t      }\n\t      // videojs-contrib-ads support\n\t      // Change the src of the video without triggering the ad workflow to restart\n\t      if (this.player_.ads) {\n\t        // this variable should be updated before modifying the player's source\n\t        this.player_.ads.contentSrc = this.src[0].src;\n\t      }\n\t      // Continue playing after changing source (Safari issue)\n\t      this.player_.autoplay(true);\n\t      setSourcesSanitized(this.player_, this.src, this.options_.label, customSourcePicker).one(handleSeekEvent, function() {\n\t        this.player_.currentTime(currentTime);\n\t        this.player_.handleTechSeeked_();\n\t        if(!isPaused){\n\t          // Start playing and hide loadingSpinner (flash issue ?)\n\t          this.player_.play().handleTechSeeked_();\n\t        }\n\t        this.player_.trigger('resolutionchange');\n\t        });\n\t      }\n\t    });\n\t\n\t\n\t    /*\n\t     * Resolution menu button\n\t     */\n\t     var MenuButton = videojs.getComponent('MenuButton');\n\t     var ResolutionMenuButton = videojs.extend(MenuButton, {\n\t       constructor: function(player, options, settings, label){\n\t        this.sources = options.sources;\n\t        this.label = label;\n\t        this.label.innerHTML = options.initialySelectedLabel;\n\t        // Sets this.player_, this.options_ and initializes the component\n\t        MenuButton.call(this, player, options, settings);\n\t        this.controlText('Quality');\n\t\n\t        if(settings.dynamicLabel){\n\t          this.el().appendChild(label);\n\t        }else{\n\t          var staticLabel = document.createElement('span');\n\t          videojs.addClass(staticLabel, 'vjs-resolution-button-staticlabel');\n\t          this.el().appendChild(staticLabel);\n\t        }\n\t       },\n\t       createItems: function(){\n\t         var menuItems = [];\n\t         var labels = (this.sources && this.sources.label) || {};\n\t         var onClickUnselectOthers = function(clickedItem) {\n\t          menuItems.map(function(item) {\n\t            item.selected(item === clickedItem);\n\t            item.removeClass('vjs-selected');\n\t          });\n\t         };\n\t\n\t         for (var key in labels) {\n\t           if (labels.hasOwnProperty(key)) {\n\t            menuItems.push(new ResolutionMenuItem(\n\t              this.player_,\n\t              {\n\t                label: key,\n\t                src: labels[key],\n\t                initialySelected: key === this.options_.initialySelectedLabel,\n\t                customSourcePicker: this.options_.customSourcePicker\n\t              },\n\t              onClickUnselectOthers,\n\t              this.label));\n\t             // Store menu item for API calls\n\t             menuItemsHolder[key] = menuItems[menuItems.length - 1];\n\t            }\n\t         }\n\t         return menuItems;\n\t       }\n\t     });\n\t\n\t    /**\n\t     * Initialize the plugin.\n\t     * @param {object} [options] configuration for the plugin\n\t     */\n\t    videoJsResolutionSwitcher = function(options) {\n\t      var settings = videojs.mergeOptions(defaults, options),\n\t          player = this,\n\t          label = document.createElement('span'),\n\t          groupedSrc = {};\n\t\n\t      videojs.addClass(label, 'vjs-resolution-button-label');\n\t\n\t      /**\n\t       * Updates player sources or returns current source URL\n\t       * @param   {Array}  [src] array of sources [{src: '', type: '', label: '', res: ''}]\n\t       * @returns {Object|String|Array} videojs player object if used as setter or current source URL, object, or array of sources\n\t       */\n\t      player.updateSrc = function(src, _options){\n\t        //Return current src if src is not given\n\t        if(!src){ return player.src(); }\n\t        // Dispose old resolution menu button before adding new sources\n\t        if(player.controlBar.resolutionSwitcher){\n\t          player.controlBar.resolutionSwitcher.dispose();\n\t          delete player.controlBar.resolutionSwitcher;\n\t        }\n\t\n\t        if(_options && _options.hls){\n\t          player.src(src);\n\t          return initResolutionForHLS(player);\n\t        }\n\t\n\t        //Sort sources\n\t        src = src.sort(compareResolutions);\n\t        groupedSrc = bucketSources(src);\n\t        var choosen = chooseSrc(groupedSrc, src);\n\t        var menuButton = new ResolutionMenuButton(player, { sources: groupedSrc, initialySelectedLabel: choosen.label , initialySelectedRes: choosen.res , customSourcePicker: settings.customSourcePicker}, settings, label);\n\t        videojs.addClass(menuButton.el(), 'vjs-resolution-button');\n\t        player.controlBar.resolutionSwitcher = player.controlBar.el_.insertBefore(menuButton.el_, player.controlBar.getChild('fullscreenToggle').el_);\n\t        player.controlBar.resolutionSwitcher.dispose = function(){\n\t          this.parentNode.removeChild(this);\n\t        };\n\t        return setSourcesSanitized(player, choosen.sources, choosen.label);\n\t      };\n\t\n\t      /**\n\t       * Returns current resolution or sets one when label is specified\n\t       * @param {String}   [label]         label name\n\t       * @param {Function} [customSourcePicker] custom function to choose source. Takes 3 arguments: player, sources, label. Must return player object.\n\t       * @returns {Object}   current resolution object {label: '', sources: []} if used as getter or player object if used as setter\n\t       */\n\t      player.currentResolution = function(label, customSourcePicker){\n\t        if(label == null) { return currentResolution; }\n\t        if(menuItemsHolder[label] != null){\n\t          menuItemsHolder[label].onClick(customSourcePicker);\n\t        }\n\t        return player;\n\t      };\n\t\n\t      /**\n\t       * Returns grouped sources by label, resolution and type\n\t       * @returns {Object} grouped sources: { label: { key: [] }, res: { key: [] }, type: { key: [] } }\n\t       */\n\t      player.getGroupedSrc = function(){\n\t        return groupedSrc;\n\t      };\n\t\n\t      /**\n\t       * Method used for sorting list of sources\n\t       * @param   {Object} a - source object with res property\n\t       * @param   {Object} b - source object with res property\n\t       * @returns {Number} result of comparation\n\t       */\n\t      function compareResolutions(a, b){\n\t        if(!a.res || !b.res){ return 0; }\n\t        return (+b.res)-(+a.res);\n\t      }\n\t\n\t      /**\n\t       * Group sources by label, resolution and type\n\t       * @param   {Array}  src Array of sources\n\t       * @returns {Object} grouped sources: { label: { key: [] }, res: { key: [] }, type: { key: [] } }\n\t       */\n\t      function bucketSources(src){\n\t        var resolutions = {\n\t          label: {},\n\t          res: {},\n\t          type: {}\n\t        };\n\t        src.map(function(source) {\n\t          initResolutionKey(resolutions, 'label', source);\n\t          initResolutionKey(resolutions, 'res', source);\n\t          initResolutionKey(resolutions, 'type', source);\n\t\n\t          appendSourceToKey(resolutions, 'label', source);\n\t          appendSourceToKey(resolutions, 'res', source);\n\t          appendSourceToKey(resolutions, 'type', source);\n\t        });\n\t        return resolutions;\n\t      }\n\t\n\t      function initResolutionKey(resolutions, key, source) {\n\t        if(resolutions[key][source[key]] == null) {\n\t          resolutions[key][source[key]] = [];\n\t        }\n\t      }\n\t\n\t      function appendSourceToKey(resolutions, key, source) {\n\t        resolutions[key][source[key]].push(source);\n\t      }\n\t\n\t      /**\n\t       * Choose src if option.default is specified\n\t       * @param   {Object} groupedSrc {res: { key: [] }}\n\t       * @param   {Array}  src Array of sources sorted by resolution used to find high and low res\n\t       * @returns {Object} {res: string, sources: []}\n\t       */\n\t      function chooseSrc(groupedSrc, src){\n\t        var selectedRes = settings['default']; // use array access as default is a reserved keyword\n\t        var selectedLabel = '';\n\t        if (selectedRes === 'high') {\n\t          selectedRes = src[0].res;\n\t          selectedLabel = src[0].label;\n\t        } else if (selectedRes === 'low' || selectedRes == null || !groupedSrc.res[selectedRes]) {\n\t          // Select low-res if default is low or not set\n\t          selectedRes = src[src.length - 1].res;\n\t          selectedLabel = src[src.length -1].label;\n\t        } else if (groupedSrc.res[selectedRes]) {\n\t          selectedLabel = groupedSrc.res[selectedRes][0].label;\n\t        }\n\t\n\t        return {res: selectedRes, label: selectedLabel, sources: groupedSrc.res[selectedRes]};\n\t      }\n\t\n\t      function initResolutionForYt(player){\n\t        // Init resolution\n\t        player.tech_.ytPlayer.setPlaybackQuality('default');\n\t\n\t        // Capture events\n\t        player.tech_.ytPlayer.addEventListener('onPlaybackQualityChange', function(){\n\t          player.trigger('resolutionchange');\n\t        });\n\t\n\t        // We must wait for play event\n\t        player.one('play', function(){\n\t          var qualities = player.tech_.ytPlayer.getAvailableQualityLevels();\n\t          // Map youtube qualities names\n\t          var _yts = {\n\t            highres: {res: 1080, label: '1080', yt: 'highres'},\n\t            hd1080: {res: 1080, label: '1080', yt: 'hd1080'},\n\t            hd720: {res: 720, label: '720', yt: 'hd720'},\n\t            large: {res: 480, label: '480', yt: 'large'},\n\t            medium: {res: 360, label: '360', yt: 'medium'},\n\t            small: {res: 240, label: '240', yt: 'small'},\n\t            tiny: {res: 144, label: '144', yt: 'tiny'},\n\t            auto: {res: 0, label: 'auto', yt: 'default'}\n\t          };\n\t\n\t          var _sources = [];\n\t\n\t          qualities.map(function(q){\n\t            _sources.push({\n\t              src: player.src().src,\n\t              type: player.src().type,\n\t              label: _yts[q].label,\n\t              res: _yts[q].res,\n\t              _yt: _yts[q].yt\n\t            });\n\t          });\n\t\n\t          groupedSrc = bucketSources(_sources);\n\t\n\t          // Overwrite defualt sourcePicer function\n\t          var _customSourcePicker = function(_player, _sources, _label){\n\t            player.tech_.ytPlayer.setPlaybackQuality(_sources[0]._yt);\n\t            return player;\n\t          };\n\t\n\t          var choosen = {label: 'auto', res: 0, sources: groupedSrc.label.auto};\n\t          var menuButton = new ResolutionMenuButton(player, {\n\t            sources: groupedSrc,\n\t            initialySelectedLabel: choosen.label,\n\t            initialySelectedRes: choosen.res,\n\t            customSourcePicker: _customSourcePicker\n\t          }, settings, label);\n\t\n\t          menuButton.el().classList.add('vjs-resolution-button');\n\t          player.controlBar.resolutionSwitcher = player.controlBar.addChild(menuButton);\n\t        });\n\t      }\n\t\n\t      function initResolutionForHLS(player){\n\t        var hls = player.tech_.hls;\n\t        if(!hls) { return; }\n\t        // Capture events\n\t        player.on('mediachange', function(){\n\t          player.trigger('resolutionchange');\n\t        });\n\t\n\t        player.one('loadedmetadata', function(){\n\t          var playlists = hls.playlists.master.playlists;\n\t\n\t          var _sources = [{ src: 'auto', type: 'application/x-mpegURL', label: 'auto', res: 'auto'}];\n\t\n\t          playlists.map(function(value){\n\t            _sources.push({\n\t              src: value.uri,\n\t              type: 'application/x-mpegURL',\n\t              label: value.attributes.NAME || value.attributes.RESOLUTION.height,\n\t              res: value.attributes.RESOLUTION.height\n\t            });\n\t          });\n\t\n\t          groupedSrc = bucketSources(_sources);\n\t\n\t          var selectPlaylist =  function (selectedResolution){\n\t            var _selectPlaylist;\n\t\n\t            if(selectedResolution === 'auto'){\n\t              _selectPlaylist = videojs.HlsHandler.prototype.selectPlaylist;\n\t              return _selectPlaylist;\n\t            }\n\t\n\t            _selectPlaylist = function (){\n\t              return hls.playlists.master.playlists.filter(function (playlist) {\n\t                return playlist.attributes.RESOLUTION.height === selectedResolution;\n\t              })[0];\n\t            };\n\t            return _selectPlaylist;\n\t          };\n\t\n\t          // Overwrite defualt sourcePicer function\n\t          var _customSourcePicker = function(_player, _sources, _label){\n\t            var selectedRes = _sources[0].res;\n\t            hls.selectPlaylist = selectPlaylist(selectedRes);\n\t            return player;\n\t          };\n\t\n\t          var currentPlaylist = hls.playlists.media();\n\t          var choosen = {\n\t            label: 'auto',\n\t            res: currentPlaylist.attributes.RESOLUTION.height,\n\t            sources: currentPlaylist\n\t          };\n\t\n\t          var menuButton = new ResolutionMenuButton(player, {\n\t            sources: groupedSrc,\n\t            initialySelectedLabel: choosen.label,\n\t            initialySelectedRes: choosen.res,\n\t            customSourcePicker: _customSourcePicker\n\t          }, settings, label);\n\t\n\t          menuButton.el().classList.add('vjs-resolution-button');\n\t          player.controlBar.resolutionSwitcher = player.controlBar.addChild(menuButton);\n\t        });\n\t      }\n\t\n\t      player.ready(function(){\n\t        if(player.options_.sources.length > 1){\n\t          // tech: Html5 and Flash\n\t          // Create resolution switcher for videos form <source> tag inside <video>\n\t          player.updateSrc(player.options_.sources);\n\t        }\n\t\n\t        if(player.tech_.hls && player.options_.sources.length){\n\t          // HLS support\n\t          initResolutionForHLS(player);\n\t        }\n\t\n\t        if(player.techName_ === 'Youtube'){\n\t          // tech: YouTube\n\t          initResolutionForYt(player);\n\t        }\n\t      });\n\t\n\t    };\n\t\n\t    // register the plugin\n\t    videojs.plugin('videoJsResolutionSwitcher', videoJsResolutionSwitcher);\n\t  })(window, videojs);\n\t})();\n\n\n/***/ },\n/* 115 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tvar google = window.google;\n\t\n\t/**\n\t * Creates a new player and places it to container with the specified id.\n\t *\n\t * @example\n\t * // Create a video player\n\t * var player = wjplayer({\n\t *  containerId: 'player-container',\n\t *   sources: [{\n\t *     src: '//vjs.zencdn.net/v/oceans.mp4',\n\t *     type: 'video/mp4'\n\t *   }]\n\t * );\n\t *\n\t * // Specify resolution and label of each source\n\t * var player = wjplayer({\n\t *  containerId: 'player-container',\n\t *  defaultQuality: 'high',\n\t *  // sourcesWithRes array will be passed to videojs-resolution-switcher\n\t *  sourcesWithRes: [\n\t *  {\n\t *    src: 'path-to-video-low-quality.m3u8',\n\t *    type: 'application/x-mpegURL',\n\t *    res: 360,\n\t *    label: 'SD'\n\t *  },\n\t *  {\n\t *    src: 'path-to-video-high-quality.m3u8',\n\t *    type: 'application/x-mpegURL',\n\t *    res: 720,\n\t *    label: 'HD'\n\t *  }]\n\t * });\n\t *\n\t * // Create an audio player\n\t *  var audioPlayer = wjplayer({\n\t *    containerId: 'player-container',\n\t *    playerType: 'audio',\n\t *    sources: [{\n\t *      src: '//vjs.zencdn.net/v/oceans.mp3',\n\t *      type: 'video/mp3'\n\t *    }]\n\t *  });\n\t *\n\t *  // Insert ads\n\t *  var player = wjplayer({\n\t *    containerId: 'player-container',\n\t *    sources: [{\n\t *      src: '//vjs.zencdn.net/v/oceans.mp4',\n\t *      type: 'video/mp4'\n\t *    }],\n\t *    ads: {\n\t *      adTagUrl: '//example.com/vmap.xml'\n\t *    }\n\t *  });\n\t *\n\t * @param {Object} options\n\t *   Configuration options.\n\t *\n\t * @param {String} options.containerId\n\t *   REQUIRED id of the container\n\t *   where player shoud be inserted (appendChild() will be used)\n\t *\n\t * @param {Array} options.sources\n\t *   REQUIRED IF `sourcesWithRes` IS NOT PROVIDED\n\t *   Array of sources to pass to player.src()\n\t *   @see http://docs.videojs.com/docs/api/player.html#Methodssrc\n\t *\n\t * @param {Array} options.sourcesWithRes\n\t *   REQUIRED IF `sources` IS NOT PROVIDED\n\t *   Array of sources to pass to player.updateSrc()\n\t *   @see https://github.com/kmoskwiak/videojs-resolution-switcher#updatesrcsource\n\t *\n\t * @param {String} options.playerId\n\t *   id to assign to the player element.\n\t *   Defaults to \"player\"\n\t *\n\t * @param {String} options.playerType\n\t *   \"video\" or \"audio\"\n\t *   Defaults to \"video\"\n\t *\n\t * @param {String|Number} options.defaultQuality\n\t *   \"low\", \"high\" or Number\n\t *   @see https://github.com/kmoskwiak/videojs-resolution-switcher#avalible-options\n\t *\n\t * @param {String} options.pathToSwf\n\t *   Path to flash player file (will be passed to videojs as videojs.options.flash.swf)\n\t *\n\t * @param {String} options.locale\n\t *  If specified, will be set as player and ads locale.\n\t *  This may be any ISO 639-1 (two-letter) code.\n\t *\n\t * @param {Boolean} options.autoplay\n\t *   Defaults to false\n\t *\n\t * @param {Boolean} options.controls\n\t *   Defaults to true\n\t *\n\t * @param {Boolean} options.loop\n\t *   The loop attribute causes the video to start over as soon as it ends.\n\t *   Defaults to false\n\t *\n\t * @param {String} options.preload\n\t *   Defaults to \"metadata\"\n\t *\n\t * @param {String} options.poster\n\t *   The width attribute sets the display width of the video (in pixels).\n\t *   This will take effect only if `options.classes` param is set\n\t *   (`vjs-fill` class, used by defaults, sets player width and height to 100%).\n\t *\n\t * @param {Number} options.width\n\t *   The height attribute sets the display height of the video (in pixels).\n\t *\n\t * @param {Number} options.height\n\t *   Player height\n\t *\n\t * @param {Object} options.videojs\n\t *   Any additilnal ptions to pass to videojs.\n\t *   @see  http://docs.videojs.com/docs/guides/options.html\n\t *\n\t * @param {Boolean} options.muted\n\t *   Indicates whether the player should be muted by default.\n\t *   Defaults to false\n\t *\n\t * @param {String} options.skin\n\t *   Skin name.\n\t *   Defaults to \"default\"\n\t *\n\t * @param {Array} options.classes\n\t *   CSS classnames to assign to the player in addition to `video-js`.\n\t *   By default, the following classes are used:\n\t *   `['vjs-default-skin',\n\t *   'vjs-fill',\n\t *   'vjs-big-play-centered']`\n\t *\n\t * @param {Boolean} options.stretch\n\t *   Indicates whether video should stretch to fit the container.\n\t *   Defaults to false\n\t *\n\t * @param {Boolean|Object} options.downloadButton\n\t *   Indicates whether a download button should be shown in control bar.\n\t * @param {String} options.downloadButton.text\n\t *   Button title.\n\t *   Defaults to \"Download\"\n\t *\n\t * @param {String} options.volumeStyle\n\t *   \"horizontal\" or \"vertical\".\n\t *   Defaults to \"vertical\"\n\t *\n\t * @param {Boolean|Object} options.panorama\n\t *   Used for pamoramic (360-degree) videos.\n\t *   Pass true or options object for videojs-panorama plugin\n\t *   @see https://github.com/yanwsh/videojs-panorama\n\t *   Defaults to false\n\t *\n\t * @param {String} options.crossorigin\n\t *   Used with videojs-panorama plugin.\n\t *   Pass \"anonymous\" to avoid cross domain issue\n\t *   (will work on Chrome and Firefox, not Safari)\n\t *   @see https://github.com/yanwsh/videojs-panorama#cross-domian-issue\n\t *\n\t * @param {Object} options.ads\n\t *   Settings for videojs-ima plugin.\n\t *   @see https://github.com/googleads/videojs-ima#additional-settings\n\t * @param {String} options.ads.adTagUrl\n\t *   Tag url. The only requried setting here.\n\t * @param {String} options.ads.adLabel\n\t *   Replaces the \"Advertisement\" text in the ad label.\n\t * @param {Boolean} options.ads.showControlsForJSAds\n\t *   Defaults to false\n\t *\n\t * @param {Object} options.share\n\t *   Will be passed to videojs-social plugin.\n\t *   @see https://github.com/Go-Promo/videojs-social for details.\n\t * @param {String} options.share.url\n\t *   This is the URL that points to your custom web page\n\t *   which has your video and the meta tags for sharing.\n\t * @param {String} options.share.embedCode\n\t *   Iframe embed code for sharing the video.\n\t *\n\t * @return {Object} the player object.\n\t */\n\tfunction wjplayer(options) {\n\t  return new WJPlayer(options);\n\t}\n\t\n\tvar WJPlayer = function () {\n\t  function WJPlayer(options) {\n\t    _classCallCheck(this, WJPlayer);\n\t\n\t    if (!((typeof options === 'undefined' ? 'undefined' : _typeof(options)) === 'object' && options.containerId)) {\n\t      throw new Error('options.containerId isn\\'t specified');\n\t    }\n\t\n\t    this.defaults = {\n\t      playerId: 'player',\n\t      playerType: 'video',\n\t      sources: [],\n\t      sourcesWithRes: [],\n\t      pathToSwf: '',\n\t      poster: '',\n\t      autoplay: false,\n\t      controls: true,\n\t      loop: false,\n\t      muted: false,\n\t      preload: 'metadata',\n\t      volumeStyle: 'vertical',\n\t      stretch: false,\n\t      skin: 'default',\n\t      classes: [],\n\t      enableResolutionSwitcher: false\n\t    };\n\t\n\t    this.browser = {\n\t      IS_IOS: /iP(hone|ad|od)/i.test(navigator.userAgent),\n\t      IS_ANDROID: /Android/.test(navigator.userAgent)\n\t    };\n\t    this.browser.IS_MOBILE = this.browser.IS_IOS || this.browser.IS_ANDROID;\n\t\n\t    this.options = videojs.mergeOptions(this.defaults, options);\n\t\n\t    // will be passed to videojs\n\t    this.options.videojs = videojs.mergeOptions({\n\t      controls: this.options.controls,\n\t      preload: this.options.preload,\n\t      loop: this.options.loop,\n\t      poster: this.options.poster,\n\t      language: this.options.locale,\n\t      html5: {\n\t        hlsjsConfig: {}\n\t      },\n\t      plugins: {},\n\t      controlBar: {}\n\t    }, this.options.videojs);\n\t\n\t    this.options.classes = ['video-js'].concat(Array.isArray(options.classes) ? options.classes : ['vjs-fill', 'vjs-big-play-centered']);\n\t\n\t    if (this.options.volumeStyle === 'vertical') {\n\t      this.options.videojs.controlBar.volumeMenuButton = {\n\t        inline: false,\n\t        vertical: true\n\t      };\n\t    }\n\t\n\t    if (this.options.playerType === 'video' && videojs.Hls && (!this.browser.IS_MOBILE || this.options.sourcesWithRes.length)) {\n\t      this.options.enableResolutionSwitcher = true;\n\t      // will be passed to videoJsResolutionSwitcher plugin\n\t      this.options.videojs.plugins.videoJsResolutionSwitcher = {\n\t        default: this.options.defaultQuality,\n\t        dynamicLabel: true\n\t      };\n\t    }\n\t\n\t    if (this.options.ads && this.options.ads.adTagUrl && !this.browser.IS_IOS) {\n\t      // will be passed to ima plugin\n\t      this.options.ads = videojs.mergeOptions({\n\t        id: this.options.playerId,\n\t        locale: this.options.locale,\n\t        showControlsForJSAds: false\n\t      }, this.options.ads);\n\t    } else {\n\t      this.options.ads = {};\n\t    }\n\t\n\t    this.init();\n\t\n\t    return this.player;\n\t  }\n\t\n\t  _createClass(WJPlayer, [{\n\t    key: 'init',\n\t    value: function init() {\n\t      var _this = this;\n\t\n\t      this.createPlayer();\n\t\n\t      if (this.options.pathToSwf) {\n\t        videojs.options.flash.swf = this.options.pathToSwf;\n\t      }\n\t\n\t      if (this.options.share) {\n\t        videojs.addLanguage('ru', {\n\t          'Share Video': 'Поделиться',\n\t          'Direct Link': 'Прямая ссылка',\n\t          'Embed Code': 'Код для встраивания плеера'\n\t        });\n\t      }\n\t\n\t      // Init player\n\t      this.player = videojs(this.options.playerId, this.options.videojs, function () {\n\t        if (!!_this.options.panorama && _this.player.panorama) {\n\t          _this.player.panorama(_typeof(_this.options.panorama) === 'object' ? _this.options.panorama : {});\n\t          window.addEventListener('resize', function () {\n\t            var canvas = _this.player.getChild('Canvas');\n\t            return canvas.handleResize();\n\t          });\n\t        }\n\t\n\t        // Init resolution switcher plugin\n\t        if (_this.options.enableResolutionSwitcher && _this.options.sourcesWithRes.length) {\n\t          _this.player.updateSrc(_this.options.sourcesWithRes);\n\t        }\n\t\n\t        // Init download button plugin\n\t        if (_this.options.downloadButton && _this.player.downloadButton) {\n\t          _this.player.downloadButton(_this.options.downloadButton);\n\t        }\n\t\n\t        // Init share plugin\n\t        if (_this.options.share) {\n\t          _this.player.social(_this.options.share);\n\t        }\n\t\n\t        if (_this.options.loop) {\n\t          _this.player.loadingSpinner.hide();\n\t        }\n\t\n\t        // Start playback\n\t        if (_this.options.autoplay && !_this.browser.IS_MOBILE) {\n\t          _this.play();\n\t        } else if (_this.placeholder) {\n\t          _this.placeholder.addEventListener('click', _this.play.bind(_this));\n\t          // not always works\n\t          // var startEvent = this.browser.IS_MOBILE ? 'touchstart' : 'click';\n\t          // this.player.one(startEvent, this.play.bind(this));\n\t        } else {\n\t          _this.initAds();\n\t        }\n\t      });\n\t      if (typeof this.player.qualityPickerPlugin === 'function') {\n\t        this.player.qualityPickerPlugin({});\n\t      }\n\t    }\n\t  }, {\n\t    key: 'createPlayer',\n\t    value: function createPlayer() {\n\t      this.container = document.getElementById(this.options.containerId);\n\t\n\t      var classes = this.options.classes;\n\t      classes.push('vjs-' + this.options.skin + '-skin');\n\t\n\t      if (this.options.stretch) {\n\t        classes.push('vjs-stretch');\n\t      }\n\t\n\t      if (this.options.ads && this.browser.IS_MOBILE) {\n\t        this.placeholder = document.createElement('div');\n\t        this.placeholder.id = 'player-placeholder';\n\t        this.container.appendChild(this.placeholder);\n\t      }\n\t\n\t      var dumbPlayer = document.createElement(this.options.playerType);\n\t      dumbPlayer.id = this.options.playerId;\n\t      dumbPlayer.className = classes.join(' ');\n\t\n\t      if (this.options.crossorigin) {\n\t        dumbPlayer.setAttribute('crossorigin', this.options.crossorigin);\n\t      }\n\t\n\t      if (this.options.muted) {\n\t        dumbPlayer.setAttribute('muted', '');\n\t      }\n\t\n\t      this.options.sources.forEach(function (source) {\n\t        var contentSrc = document.createElement('source');\n\t        contentSrc.setAttribute('src', source.src);\n\t        contentSrc.setAttribute('type', source.type);\n\t        dumbPlayer.appendChild(contentSrc);\n\t      });\n\t\n\t      this.container.appendChild(dumbPlayer);\n\t    }\n\t  }, {\n\t    key: 'play',\n\t    value: function play() {\n\t      this.initAds();\n\t      this.player.play();\n\t      this.options.autoplay && this.player.autoplay(true);\n\t\n\t      if (this.placeholder) {\n\t        this.container.removeChild(this.placeholder);\n\t      }\n\t    }\n\t  }, {\n\t    key: 'initAds',\n\t    value: function initAds() {\n\t      var _this2 = this;\n\t\n\t      if (!this.options.ads || !this.options.ads.adTagUrl || !this.player.ima) {\n\t        return;\n\t      }\n\t\n\t      this.player.ima(this.options.ads, this.adsManagerLoadedCallback.bind(this));\n\t      this.player.ima.initializeAdDisplayContainer();\n\t      this.player.ima.requestAds();\n\t      this.imaContainer = document.getElementById(this.options.ads.id + '_ima-ad-container');\n\t      this.imaContainer.style.display = 'none';\n\t\n\t      if (!this.placeholder) {\n\t        this.imaContainer.addEventListener('click', function () {\n\t          _this2.player.play();\n\t        });\n\t      }\n\t    }\n\t  }, {\n\t    key: 'adsManagerLoadedCallback',\n\t    value: function adsManagerLoadedCallback() {\n\t      var _this3 = this;\n\t\n\t      this.player.ima.addEventListener(google.ima.AdEvent.Type.ALL_ADS_COMPLETED, function () {\n\t        _this3.imaContainer.style.display = 'none';\n\t        _this3.player.removeClass('vjs-ad-playing');\n\t      });\n\t\n\t      this.player.ima.startFromReadyCallback();\n\t    }\n\t  }]);\n\t\n\t  return WJPlayer;\n\t}();\n\t\n\texports.default = wjplayer;\n\tmodule.exports = exports['default'];\n\n/***/ }\n/******/ ])\n});\n;\n\n\n/** WEBPACK FOOTER **\n ** wjplayer.min.js\n **/"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap 65c58f65818e124ab300\n **/","import '../bundle';\nimport 'videojs-contrib-hls/dist/videojs-contrib-hls';\nimport 'videojs-resolution-switcher';\nimport wjplayer from '../wjplayer';\nexport default wjplayer;\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/contrib-hls/index.js\n **/","import 'expose-loader?videojs!video.js';\nimport 'videojs-contrib-ads/src/videojs.ads';\nimport 'videojs-ima';\nimport 'videojs-ga/dist/videojs.ga.js';\nimport 'videojs-social';\nimport 'videojs-download-button';\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/bundle.js\n **/","module.exports = global[\"videojs\"] = require(\"-!/Users/mkhazov/projects/wjplayer/node_modules/video.js/es5/video.js\");\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/expose-loader?videojs!./~/video.js/es5/video.js\n ** module id = 2\n ** module chunks = 0 1\n **/","'use strict';\n\nexports.__esModule = true;\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; /**\n                                                                                                                                                                                                                                                                               * @file video.js\n                                                                                                                                                                                                                                                                               * @module videojs\n                                                                                                                                                                                                                                                                               */\n\n/* global define */\n\n// Include the built-in techs\n\n\nvar _window = require('global/window');\n\nvar _window2 = _interopRequireDefault(_window);\n\nvar _document = require('global/document');\n\nvar _document2 = _interopRequireDefault(_document);\n\nvar _setup = require('./setup');\n\nvar setup = _interopRequireWildcard(_setup);\n\nvar _stylesheet = require('./utils/stylesheet.js');\n\nvar stylesheet = _interopRequireWildcard(_stylesheet);\n\nvar _component = require('./component');\n\nvar _component2 = _interopRequireDefault(_component);\n\nvar _eventTarget = require('./event-target');\n\nvar _eventTarget2 = _interopRequireDefault(_eventTarget);\n\nvar _events = require('./utils/events.js');\n\nvar Events = _interopRequireWildcard(_events);\n\nvar _player = require('./player');\n\nvar _player2 = _interopRequireDefault(_player);\n\nvar _plugins = require('./plugins.js');\n\nvar _plugins2 = _interopRequireDefault(_plugins);\n\nvar _mergeOptions2 = require('./utils/merge-options.js');\n\nvar _mergeOptions3 = _interopRequireDefault(_mergeOptions2);\n\nvar _fn = require('./utils/fn.js');\n\nvar Fn = _interopRequireWildcard(_fn);\n\nvar _textTrack = require('./tracks/text-track.js');\n\nvar _textTrack2 = _interopRequireDefault(_textTrack);\n\nvar _audioTrack = require('./tracks/audio-track.js');\n\nvar _audioTrack2 = _interopRequireDefault(_audioTrack);\n\nvar _videoTrack = require('./tracks/video-track.js');\n\nvar _videoTrack2 = _interopRequireDefault(_videoTrack);\n\nvar _timeRanges = require('./utils/time-ranges.js');\n\nvar _formatTime = require('./utils/format-time.js');\n\nvar _formatTime2 = _interopRequireDefault(_formatTime);\n\nvar _log = require('./utils/log.js');\n\nvar _log2 = _interopRequireDefault(_log);\n\nvar _dom = require('./utils/dom.js');\n\nvar Dom = _interopRequireWildcard(_dom);\n\nvar _browser = require('./utils/browser.js');\n\nvar browser = _interopRequireWildcard(_browser);\n\nvar _url = require('./utils/url.js');\n\nvar Url = _interopRequireWildcard(_url);\n\nvar _obj = require('./utils/obj');\n\nvar _computedStyle = require('./utils/computed-style.js');\n\nvar _computedStyle2 = _interopRequireDefault(_computedStyle);\n\nvar _extend = require('./extend.js');\n\nvar _extend2 = _interopRequireDefault(_extend);\n\nvar _xhr = require('xhr');\n\nvar _xhr2 = _interopRequireDefault(_xhr);\n\nvar _tech = require('./tech/tech.js');\n\nvar _tech2 = _interopRequireDefault(_tech);\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj['default'] = obj; return newObj; } }\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\n// HTML5 Element Shim for IE8\nif (typeof HTMLVideoElement === 'undefined' && _window2['default'].document && _window2['default'].document.createElement) {\n  _document2['default'].createElement('video');\n  _document2['default'].createElement('audio');\n  _document2['default'].createElement('track');\n}\n\n/**\n * Doubles as the main function for users to create a player instance and also\n * the main library object.\n * The `videojs` function can be used to initialize or retrieve a player.\n * ```js\n *   var myPlayer = videojs('my_video_id');\n * ```\n *\n * @param {string|Element} id\n *        Video element or video element ID\n *\n * @param {Object} [options]\n *        Optional options object for config/settings\n *\n * @param {Component~ReadyCallback} [ready]\n *        Optional ready callback\n *\n * @return {Player}\n *         A player instance\n *\n * @mixes videojs\n */\nfunction videojs(id, options, ready) {\n  var tag = void 0;\n\n  options = options || {};\n\n  // Allow for element or ID to be passed in\n  // String ID\n  if (typeof id === 'string') {\n\n    // Adjust for jQuery ID syntax\n    if (id.indexOf('#') === 0) {\n      id = id.slice(1);\n    }\n\n    // If a player instance has already been created for this ID return it.\n    if (videojs.getPlayers()[id]) {\n\n      // If options or ready funtion are passed, warn\n      if (options) {\n        _log2['default'].warn('Player \"' + id + '\" is already initialised. Options will not be applied.');\n      }\n\n      if (ready) {\n        videojs.getPlayers()[id].ready(ready);\n      }\n\n      return videojs.getPlayers()[id];\n    }\n\n    // Otherwise get element for ID\n    tag = Dom.getEl(id);\n\n    // ID is a media element\n  } else {\n    tag = id;\n  }\n\n  // Check for a useable element\n  // re: nodeName, could be a box div also\n  if (!tag || !tag.nodeName) {\n    throw new TypeError('The element or ID supplied is not valid. (videojs)');\n  }\n\n  // Element may have a player attr referring to an already created player instance.\n  // If so return that otherwise set up a new player below\n  if (tag.player || _player2['default'].players[tag.playerId]) {\n    return tag.player || _player2['default'].players[tag.playerId];\n  }\n\n  videojs.hooks('beforesetup').forEach(function (hookFunction) {\n    var opts = hookFunction(tag, (0, _mergeOptions3['default'])(options));\n\n    if (!(0, _obj.isObject)(opts) || Array.isArray(opts)) {\n      videojs.log.error('please return an object in beforesetup hooks');\n      return;\n    }\n\n    options = (0, _mergeOptions3['default'])(options, opts);\n  });\n\n  var PlayerComponent = _component2['default'].getComponent('Player');\n  // If not, set up a new player\n  var player = new PlayerComponent(tag, options, ready);\n\n  videojs.hooks('setup').forEach(function (hookFunction) {\n    return hookFunction(player);\n  });\n\n  return player;\n}\n\n/**\n * An Object that contains lifecycle hooks as keys which point to an array\n * of functions that are run when a lifecycle is triggered\n */\nvideojs.hooks_ = {};\n\n/**\n * Get a list of hooks for a specific lifecycle\n *\n * @param {string} type\n *        the lifecyle to get hooks from\n *\n * @param {Function} [fn]\n *        Optionally add a hook to the lifecycle that your are getting.\n *\n * @return {Array}\n *         an array of hooks, or an empty array if there are none.\n */\nvideojs.hooks = function (type, fn) {\n  videojs.hooks_[type] = videojs.hooks_[type] || [];\n  if (fn) {\n    videojs.hooks_[type] = videojs.hooks_[type].concat(fn);\n  }\n  return videojs.hooks_[type];\n};\n\n/**\n * Add a function hook to a specific videojs lifecycle.\n *\n * @param {string} type\n *        the lifecycle to hook the function to.\n *\n * @param {Function|Function[]}\n *        The function or array of functions to attach.\n */\nvideojs.hook = function (type, fn) {\n  videojs.hooks(type, fn);\n};\n\n/**\n * Remove a hook from a specific videojs lifecycle.\n *\n * @param {string} type\n *        the lifecycle that the function hooked to\n *\n * @param {Function} fn\n *        The hooked function to remove\n *\n * @return {boolean}\n *         The function that was removed or undef\n */\nvideojs.removeHook = function (type, fn) {\n  var index = videojs.hooks(type).indexOf(fn);\n\n  if (index <= -1) {\n    return false;\n  }\n\n  videojs.hooks_[type] = videojs.hooks_[type].slice();\n  videojs.hooks_[type].splice(index, 1);\n\n  return true;\n};\n\n// Add default styles\nif (_window2['default'].VIDEOJS_NO_DYNAMIC_STYLE !== true) {\n  var style = Dom.$('.vjs-styles-defaults');\n\n  if (!style) {\n    style = stylesheet.createStyleElement('vjs-styles-defaults');\n    var head = Dom.$('head');\n\n    if (head) {\n      head.insertBefore(style, head.firstChild);\n    }\n    stylesheet.setTextContent(style, '\\n      .video-js {\\n        width: 300px;\\n        height: 150px;\\n      }\\n\\n      .vjs-fluid {\\n        padding-top: 56.25%\\n      }\\n    ');\n  }\n}\n\n// Run Auto-load players\n// You have to wait at least once in case this script is loaded after your\n// video in the DOM (weird behavior only with minified version)\nsetup.autoSetupTimeout(1, videojs);\n\n/**\n * Current software version. Follows semver.\n *\n * @type {string}\n */\nvideojs.VERSION = '5.14.1';\n\n/**\n * The global options object. These are the settings that take effect\n * if no overrides are specified when the player is created.\n *\n * ```js\n *     videojs.options.autoplay = true\n *     // -> all players will autoplay by default\n * ```\n *\n * @type {Object}\n */\nvideojs.options = _player2['default'].prototype.options_;\n\n/**\n * Get an object with the currently created players, keyed by player ID\n *\n * @return {Object}\n *         The created players\n */\nvideojs.getPlayers = function () {\n  return _player2['default'].players;\n};\n\n/**\n * Expose players object.\n *\n * @memberOf videojs\n * @property {Object} players\n */\nvideojs.players = _player2['default'].players;\n\n/**\n * Get a component class object by name\n * ```js\n *     var VjsButton = videojs.getComponent('Button');\n *     // Create a new instance of the component\n *     var myButton = new VjsButton(myPlayer);\n * ```\n *\n * @borrows Component.getComponent as videojs.getComponent\n */\nvideojs.getComponent = _component2['default'].getComponent;\n\n/**\n * Register a component so it can referred to by name\n * Used when adding to other\n * components, either through addChild\n * `component.addChild('myComponent')`\n * or through default children options\n * `{ children: ['myComponent'] }`.\n * ```js\n *   // Get a component to subclass\n *   var VjsButton = videojs.getComponent('Button');\n *   // Subclass the component (see 'extend' doc for more info)\n *   var MySpecialButton = videojs.extend(VjsButton, {});\n *   // Register the new component\n *   VjsButton.registerComponent('MySepcialButton', MySepcialButton);\n *   // (optionally) add the new component as a default player child\n *   myPlayer.addChild('MySepcialButton');\n * ```\n * > NOTE: You could also just initialize the component before adding.\n * `component.addChild(new MyComponent());`\n *\n * @param {string} name\n *        The class name of the component\n *\n * @param {Component} comp\n *        The component class\n *\n * @return {Component}\n *         The newly registered component\n */\nvideojs.registerComponent = function (name, comp) {\n  if (_tech2['default'].isTech(comp)) {\n    _log2['default'].warn('The ' + name + ' tech was registered as a component. It should instead be registered using videojs.registerTech(name, tech)');\n  }\n\n  _component2['default'].registerComponent.call(_component2['default'], name, comp);\n};\n\n/**\n * Get a Tech class object by name\n * ```js\n *   var Html5 = videojs.getTech('Html5');\n *   // Create a new instance of the component\n *   var html5 = new Html5(options);\n * ```\n *\n * @borrows Tech.getTech as videojs.getTech\n */\nvideojs.getTech = _tech2['default'].getTech;\n\n/**\n * Register a Tech so it can referred to by name.\n * This is used in the tech order for the player.\n *\n * ```js\n *     // get the Html5 Tech\n *     var Html5 = videojs.getTech('Html5');\n *     var MyTech = videojs.extend(Html5, {});\n *     // Register the new Tech\n *     VjsButton.registerTech('Tech', MyTech);\n *     var player = videojs('myplayer', {\n *       techOrder: ['myTech', 'html5']\n *     });\n * ```\n *\n * @borrows Tech.registerTech as videojs.registerTech\n */\nvideojs.registerTech = _tech2['default'].registerTech;\n\n/**\n * A suite of browser and device tests from {@link browser}.\n *\n * @type {Object}\n * @private\n */\nvideojs.browser = browser;\n\n/**\n * Whether or not the browser supports touch events. Included for backward\n * compatibility with 4.x, but deprecated. Use `videojs.browser.TOUCH_ENABLED`\n * instead going forward.\n *\n * @deprecated since version 5.0\n * @type {boolean}\n */\nvideojs.TOUCH_ENABLED = browser.TOUCH_ENABLED;\n\n/**\n * Subclass an existing class\n * Mimics ES6 subclassing with the `extend` keyword\n * ```js\n *     // Create a basic javascript 'class'\n *     function MyClass(name) {\n *       // Set a property at initialization\n *       this.myName = name;\n *     }\n *     // Create an instance method\n *     MyClass.prototype.sayMyName = function() {\n *       alert(this.myName);\n *     };\n *     // Subclass the exisitng class and change the name\n *     // when initializing\n *     var MySubClass = videojs.extend(MyClass, {\n *       constructor: function(name) {\n *         // Call the super class constructor for the subclass\n *         MyClass.call(this, name)\n *       }\n *     });\n *     // Create an instance of the new sub class\n *     var myInstance = new MySubClass('John');\n *     myInstance.sayMyName(); // -> should alert \"John\"\n * ```\n *\n * @borrows extend:extendFn as videojs.extend\n */\nvideojs.extend = _extend2['default'];\n\n/**\n * Merge two options objects recursively\n * Performs a deep merge like lodash.merge but **only merges plain objects**\n * (not arrays, elements, anything else)\n * Other values will be copied directly from the second object.\n * ```js\n *     var defaultOptions = {\n *       foo: true,\n *       bar: {\n *         a: true,\n *         b: [1,2,3]\n *       }\n *     };\n *     var newOptions = {\n *       foo: false,\n *       bar: {\n *         b: [4,5,6]\n *       }\n *     };\n *     var result = videojs.mergeOptions(defaultOptions, newOptions);\n *     // result.foo = false;\n *     // result.bar.a = true;\n *     // result.bar.b = [4,5,6];\n * ```\n *\n * @borrows merge-options:mergeOptions as videojs.mergeOptions\n */\nvideojs.mergeOptions = _mergeOptions3['default'];\n\n/**\n * Change the context (this) of a function\n *\n * ``` js\n *     videojs.bind(newContext, function() {\n *       this === newContext\n *     });\n * ```\n *\n * > NOTE: as of v5.0 we require an ES5 shim, so you should use the native\n * `function() {}.bind(newContext);` instead of this.\n *\n * @borrows fn:bind as videojs.bind\n */\nvideojs.bind = Fn.bind;\n\n/**\n * Create a Video.js player plugin.\n * Plugins are only initialized when options for the plugin are included\n * in the player options, or the plugin function on the player instance is\n * called.\n * **See the plugin guide in the docs for a more detailed example**\n * ```js\n *     // Make a plugin that alerts when the player plays\n *     videojs.plugin('myPlugin', function(myPluginOptions) {\n *       myPluginOptions = myPluginOptions || {};\n *\n *       var player = this;\n *       var alertText = myPluginOptions.text || 'Player is playing!'\n *\n *       player.on('play', function() {\n *         alert(alertText);\n *       });\n *     });\n *     // USAGE EXAMPLES\n *     // EXAMPLE 1: New player with plugin options, call plugin immediately\n *     var player1 = videojs('idOne', {\n *       myPlugin: {\n *         text: 'Custom text!'\n *       }\n *     });\n *     // Click play\n *     // --> Should alert 'Custom text!'\n *     // EXAMPLE 3: New player, initialize plugin later\n *     var player3 = videojs('idThree');\n *     // Click play\n *     // --> NO ALERT\n *     // Click pause\n *     // Initialize plugin using the plugin function on the player instance\n *     player3.myPlugin({\n *       text: 'Plugin added later!'\n *     });\n *     // Click play\n *     // --> Should alert 'Plugin added later!'\n * ```\n *\n * @borrows plugin:plugin as videojs.plugin\n */\nvideojs.plugin = _plugins2['default'];\n\n/**\n * Adding languages so that they're available to all players.\n * ```js\n *   videojs.addLanguage('es', { 'Hello': 'Hola' });\n * ```\n *\n * @param {string} code\n *        The language code or dictionary property\n *\n * @param {Object} data\n *        The data values to be translated\n *\n * @return {Object}\n *         The resulting language dictionary object\n */\nvideojs.addLanguage = function (code, data) {\n  var _mergeOptions;\n\n  code = ('' + code).toLowerCase();\n\n  videojs.options.languages = (0, _mergeOptions3['default'])(videojs.options.languages, (_mergeOptions = {}, _mergeOptions[code] = data, _mergeOptions));\n\n  return videojs.options.languages[code];\n};\n\n/**\n * Log messages\n *\n * @borrows log:log as videojs.log\n */\nvideojs.log = _log2['default'];\n\n/**\n * Creates an emulated TimeRange object.\n *\n * @borrows time-ranges:createTimeRanges as videojs.createTimeRange\n */\n/**\n * @borrows time-ranges:createTimeRanges as videojs.createTimeRanges\n */\nvideojs.createTimeRange = videojs.createTimeRanges = _timeRanges.createTimeRanges;\n\n/**\n * Format seconds as a time string, H:MM:SS or M:SS\n * Supplying a guide (in seconds) will force a number of leading zeros\n * to cover the length of the guide\n *\n * @borrows format-time:formatTime as videojs.formatTime\n */\nvideojs.formatTime = _formatTime2['default'];\n\n/**\n * Resolve and parse the elements of a URL\n *\n * @borrows url:parseUrl as videojs.parseUrl\n */\nvideojs.parseUrl = Url.parseUrl;\n\n/**\n * Returns whether the url passed is a cross domain request or not.\n *\n * @borrows url:isCrossOrigin as videojs.isCrossOrigin\n */\nvideojs.isCrossOrigin = Url.isCrossOrigin;\n\n/**\n * Event target class.\n *\n * @borrows EventTarget as videojs.EventTarget\n */\nvideojs.EventTarget = _eventTarget2['default'];\n\n/**\n * Add an event listener to element\n * It stores the handler function in a separate cache object\n * and adds a generic handler to the element's event,\n * along with a unique id (guid) to the element.\n *\n * @borrows events:on as videojs.on\n */\nvideojs.on = Events.on;\n\n/**\n * Trigger a listener only once for an event\n *\n * @borrows events:one as videojs.one\n */\nvideojs.one = Events.one;\n\n/**\n * Removes event listeners from an element\n *\n * @borrows events:off as videojs.off\n */\nvideojs.off = Events.off;\n\n/**\n * Trigger an event for an element\n *\n * @borrows events:trigger as videojs.trigger\n */\nvideojs.trigger = Events.trigger;\n\n/**\n * A cross-browser XMLHttpRequest wrapper. Here's a simple example:\n *\n * ```js\n *     videojs.xhr({\n *       body: someJSONString,\n *       uri: \"/foo\",\n *       headers: {\n *         \"Content-Type\": \"application/json\"\n *       }\n *     }, function (err, resp, body) {\n *       // check resp.statusCode\n *     });\n * ```\n *\n * @param {Object} options\n *        settings for the request.\n *\n * @return {XMLHttpRequest|XDomainRequest}\n *         The request object.\n *\n * @see https://github.com/Raynos/xhr\n */\nvideojs.xhr = _xhr2['default'];\n\n/**\n * TextTrack class\n *\n * @borrows TextTrack as videojs.TextTrack\n */\nvideojs.TextTrack = _textTrack2['default'];\n\n/**\n * export the AudioTrack class so that source handlers can create\n * AudioTracks and then add them to the players AudioTrackList\n *\n * @borrows AudioTrack as videojs.AudioTrack\n */\nvideojs.AudioTrack = _audioTrack2['default'];\n\n/**\n * export the VideoTrack class so that source handlers can create\n * VideoTracks and then add them to the players VideoTrackList\n *\n * @borrows VideoTrack as videojs.VideoTrack\n */\nvideojs.VideoTrack = _videoTrack2['default'];\n\n/**\n * Determines, via duck typing, whether or not a value is a DOM element.\n *\n * @borrows dom:isEl as videojs.isEl\n */\nvideojs.isEl = Dom.isEl;\n\n/**\n * Determines, via duck typing, whether or not a value is a text node.\n *\n * @borrows dom:isTextNode as videojs.isTextNode\n */\nvideojs.isTextNode = Dom.isTextNode;\n\n/**\n * Creates an element and applies properties.\n *\n * @borrows dom:createEl as videojs.createEl\n */\nvideojs.createEl = Dom.createEl;\n\n/**\n * Check if an element has a CSS class\n *\n * @borrows dom:hasElClass as videojs.hasClass\n */\nvideojs.hasClass = Dom.hasElClass;\n\n/**\n * Add a CSS class name to an element\n *\n * @borrows dom:addElClass as videojs.addClass\n */\nvideojs.addClass = Dom.addElClass;\n\n/**\n * Remove a CSS class name from an element\n *\n * @borrows dom:removeElClass as videojs.removeClass\n */\nvideojs.removeClass = Dom.removeElClass;\n\n/**\n * Adds or removes a CSS class name on an element depending on an optional\n * condition or the presence/absence of the class name.\n *\n * @borrows dom:toggleElClass as videojs.toggleClass\n */\nvideojs.toggleClass = Dom.toggleElClass;\n\n/**\n * Apply attributes to an HTML element.\n *\n * @borrows dom:setElAttributes as videojs.setAttribute\n */\nvideojs.setAttributes = Dom.setElAttributes;\n\n/**\n * Get an element's attribute values, as defined on the HTML tag\n * Attributes are not the same as properties. They're defined on the tag\n * or with setAttribute (which shouldn't be used with HTML)\n * This will return true or false for boolean attributes.\n *\n * @borrows dom:getElAttributes as videojs.getAttributes\n */\nvideojs.getAttributes = Dom.getElAttributes;\n\n/**\n * Empties the contents of an element.\n *\n * @borrows dom:emptyEl as videojs.emptyEl\n */\nvideojs.emptyEl = Dom.emptyEl;\n\n/**\n * Normalizes and appends content to an element.\n *\n * The content for an element can be passed in multiple types and\n * combinations, whose behavior is as follows:\n *\n * - String\n *   Normalized into a text node.\n *\n * - Element, TextNode\n *   Passed through.\n *\n * - Array\n *   A one-dimensional array of strings, elements, nodes, or functions (which\n *   return single strings, elements, or nodes).\n *\n * - Function\n *   If the sole argument, is expected to produce a string, element,\n *   node, or array.\n *\n * @borrows dom:appendContents as videojs.appendContet\n */\nvideojs.appendContent = Dom.appendContent;\n\n/**\n * Normalizes and inserts content into an element; this is identical to\n * `appendContent()`, except it empties the element first.\n *\n * The content for an element can be passed in multiple types and\n * combinations, whose behavior is as follows:\n *\n * - String\n *   Normalized into a text node.\n *\n * - Element, TextNode\n *   Passed through.\n *\n * - Array\n *   A one-dimensional array of strings, elements, nodes, or functions (which\n *   return single strings, elements, or nodes).\n *\n * - Function\n *   If the sole argument, is expected to produce a string, element,\n *   node, or array.\n *\n * @borrows dom:insertContent as videojs.insertContent\n */\nvideojs.insertContent = Dom.insertContent;\n\n/**\n * A safe getComputedStyle with an IE8 fallback.\n *\n * This is because in Firefox, if the player is loaded in an iframe with `display:none`,\n * then `getComputedStyle` returns `null`, so, we do a null-check to make sure\n * that the player doesn't break in these cases.\n * See https://bugzilla.mozilla.org/show_bug.cgi?id=548397 for more details.\n *\n * @borrows computed-style:computedStyle as videojs.computedStyle\n */\nvideojs.computedStyle = _computedStyle2['default'];\n\n/*\n * Custom Universal Module Definition (UMD)\n *\n * Video.js will never be a non-browser lib so we can simplify UMD a bunch and\n * still support requirejs and browserify. This also needs to be closure\n * compiler compatible, so string keys are used.\n */\nif (typeof define === 'function' && define.amd) {\n  define('videojs', [], function () {\n    return videojs;\n  });\n\n  // checking that module is an object too because of umdjs/umd#35\n} else if ((typeof exports === 'undefined' ? 'undefined' : _typeof(exports)) === 'object' && (typeof module === 'undefined' ? 'undefined' : _typeof(module)) === 'object') {\n  module.exports = videojs;\n}\n\nexports['default'] = videojs;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/video.js/es5/video.js\n ** module id = 3\n ** module chunks = 0 1\n **/","if (typeof window !== \"undefined\") {\n    module.exports = window;\n} else if (typeof global !== \"undefined\") {\n    module.exports = global;\n} else if (typeof self !== \"undefined\"){\n    module.exports = self;\n} else {\n    module.exports = {};\n}\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/global/window.js\n ** module id = 4\n ** module chunks = 0 1\n **/","var topLevel = typeof global !== 'undefined' ? global :\n    typeof window !== 'undefined' ? window : {}\nvar minDoc = require('min-document');\n\nif (typeof document !== 'undefined') {\n    module.exports = document;\n} else {\n    var doccy = topLevel['__GLOBAL_DOCUMENT_CACHE@4'];\n\n    if (!doccy) {\n        doccy = topLevel['__GLOBAL_DOCUMENT_CACHE@4'] = minDoc;\n    }\n\n    module.exports = doccy;\n}\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/global/document.js\n ** module id = 5\n ** module chunks = 0 1\n **/","'use strict';\n\nexports.__esModule = true;\nexports.hasLoaded = exports.autoSetupTimeout = exports.autoSetup = undefined;\n\nvar _events = require('./utils/events.js');\n\nvar Events = _interopRequireWildcard(_events);\n\nvar _document = require('global/document');\n\nvar _document2 = _interopRequireDefault(_document);\n\nvar _window = require('global/window');\n\nvar _window2 = _interopRequireDefault(_window);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj['default'] = obj; return newObj; } }\n\nvar _windowLoaded = false; /**\n                            * Functions for setting up a player without user insteraction based on the data-setup\n                            * `attribute` of the video tag.\n                            *\n                            * @file setup.js\n                            * @module setup\n                            */\n\nvar videojs = void 0;\n\n/**\n * Set up any tags that have a data-setup `attribute` when the player is started.\n */\nvar autoSetup = function autoSetup() {\n  // One day, when we stop supporting IE8, go back to this, but in the meantime...*hack hack hack*\n  // var vids = Array.prototype.slice.call(document.getElementsByTagName('video'));\n  // var audios = Array.prototype.slice.call(document.getElementsByTagName('audio'));\n  // var mediaEls = vids.concat(audios);\n\n  // Because IE8 doesn't support calling slice on a node list, we need to loop\n  // through each list of elements to build up a new, combined list of elements.\n  var vids = _document2['default'].getElementsByTagName('video');\n  var audios = _document2['default'].getElementsByTagName('audio');\n  var mediaEls = [];\n\n  if (vids && vids.length > 0) {\n    for (var i = 0, e = vids.length; i < e; i++) {\n      mediaEls.push(vids[i]);\n    }\n  }\n\n  if (audios && audios.length > 0) {\n    for (var _i = 0, _e = audios.length; _i < _e; _i++) {\n      mediaEls.push(audios[_i]);\n    }\n  }\n\n  // Check if any media elements exist\n  if (mediaEls && mediaEls.length > 0) {\n\n    for (var _i2 = 0, _e2 = mediaEls.length; _i2 < _e2; _i2++) {\n      var mediaEl = mediaEls[_i2];\n\n      // Check if element exists, has getAttribute func.\n      // IE seems to consider typeof el.getAttribute == 'object' instead of\n      // 'function' like expected, at least when loading the player immediately.\n      if (mediaEl && mediaEl.getAttribute) {\n\n        // Make sure this player hasn't already been set up.\n        if (mediaEl.player === undefined) {\n          var options = mediaEl.getAttribute('data-setup');\n\n          // Check if data-setup attr exists.\n          // We only auto-setup if they've added the data-setup attr.\n          if (options !== null) {\n            // Create new video.js instance.\n            videojs(mediaEl);\n          }\n        }\n\n        // If getAttribute isn't defined, we need to wait for the DOM.\n      } else {\n        autoSetupTimeout(1);\n        break;\n      }\n    }\n\n    // No videos were found, so keep looping unless page is finished loading.\n  } else if (!_windowLoaded) {\n    autoSetupTimeout(1);\n  }\n};\n\n/**\n * Wait until the page is loaded before running autoSetup. This will be called in\n * autoSetup if `hasLoaded` returns false.\n */\nfunction autoSetupTimeout(wait, vjs) {\n  if (vjs) {\n    videojs = vjs;\n  }\n\n  setTimeout(autoSetup, wait);\n}\n\nif (_document2['default'].readyState === 'complete') {\n  _windowLoaded = true;\n} else {\n  /**\n   * Listen for the load event on window, and set _windowLoaded to true.\n   *\n   * @listens load\n   */\n  Events.one(_window2['default'], 'load', function () {\n    _windowLoaded = true;\n  });\n}\n\n/**\n * check if the document has been loaded\n */\nvar hasLoaded = function hasLoaded() {\n  return _windowLoaded;\n};\n\nexports.autoSetup = autoSetup;\nexports.autoSetupTimeout = autoSetupTimeout;\nexports.hasLoaded = hasLoaded;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/video.js/es5/setup.js\n ** module id = 7\n ** module chunks = 0 1\n **/","'use strict';\n\nexports.__esModule = true;\nexports.fixEvent = fixEvent;\nexports.on = on;\nexports.off = off;\nexports.trigger = trigger;\nexports.one = one;\n\nvar _dom = require('./dom.js');\n\nvar Dom = _interopRequireWildcard(_dom);\n\nvar _guid = require('./guid.js');\n\nvar Guid = _interopRequireWildcard(_guid);\n\nvar _log = require('./log.js');\n\nvar _log2 = _interopRequireDefault(_log);\n\nvar _window = require('global/window');\n\nvar _window2 = _interopRequireDefault(_window);\n\nvar _document = require('global/document');\n\nvar _document2 = _interopRequireDefault(_document);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj['default'] = obj; return newObj; } }\n\n/**\n * Clean up the listener cache and dispatchers\n *\n * @param {Element|Object} elem\n *        Element to clean up\n *\n * @param {string} type\n *        Type of event to clean up\n */\nfunction _cleanUpEvents(elem, type) {\n  var data = Dom.getElData(elem);\n\n  // Remove the events of a particular type if there are none left\n  if (data.handlers[type].length === 0) {\n    delete data.handlers[type];\n    // data.handlers[type] = null;\n    // Setting to null was causing an error with data.handlers\n\n    // Remove the meta-handler from the element\n    if (elem.removeEventListener) {\n      elem.removeEventListener(type, data.dispatcher, false);\n    } else if (elem.detachEvent) {\n      elem.detachEvent('on' + type, data.dispatcher);\n    }\n  }\n\n  // Remove the events object if there are no types left\n  if (Object.getOwnPropertyNames(data.handlers).length <= 0) {\n    delete data.handlers;\n    delete data.dispatcher;\n    delete data.disabled;\n  }\n\n  // Finally remove the element data if there is no data left\n  if (Object.getOwnPropertyNames(data).length === 0) {\n    Dom.removeElData(elem);\n  }\n}\n\n/**\n * Loops through an array of event types and calls the requested method for each type.\n *\n * @param {Function} fn\n *        The event method we want to use.\n *\n * @param {Element|Object} elem\n *        Element or object to bind listeners to\n *\n * @param {string} type\n *        Type of event to bind to.\n *\n * @param {EventTarget~EventListener} callback\n *        Event listener.\n */\n/**\n * @file events.js\n * @module events\n *\n * Event System (John Resig - Secrets of a JS Ninja http://jsninja.com/)\n * (Original book version wasn't completely usable, so fixed some things and made Closure Compiler compatible)\n * This should work very similarly to jQuery's events, however it's based off the book version which isn't as\n * robust as jquery's, so there's probably some differences.\n */\n\nfunction _handleMultipleEvents(fn, elem, types, callback) {\n  types.forEach(function (type) {\n    // Call the event method for each one of the types\n    fn(elem, type, callback);\n  });\n}\n\n/**\n * Fix a native event to have standard property values\n *\n * @param {Object} event\n *        Event object to fix.\n *\n * @return {Object}\n *         Fixed event object.\n */\nfunction fixEvent(event) {\n\n  function returnTrue() {\n    return true;\n  }\n\n  function returnFalse() {\n    return false;\n  }\n\n  // Test if fixing up is needed\n  // Used to check if !event.stopPropagation instead of isPropagationStopped\n  // But native events return true for stopPropagation, but don't have\n  // other expected methods like isPropagationStopped. Seems to be a problem\n  // with the Javascript Ninja code. So we're just overriding all events now.\n  if (!event || !event.isPropagationStopped) {\n    (function () {\n      var old = event || _window2['default'].event;\n\n      event = {};\n      // Clone the old object so that we can modify the values event = {};\n      // IE8 Doesn't like when you mess with native event properties\n      // Firefox returns false for event.hasOwnProperty('type') and other props\n      //  which makes copying more difficult.\n      // TODO: Probably best to create a whitelist of event props\n      for (var key in old) {\n        // Safari 6.0.3 warns you if you try to copy deprecated layerX/Y\n        // Chrome warns you if you try to copy deprecated keyboardEvent.keyLocation\n        // and webkitMovementX/Y\n        if (key !== 'layerX' && key !== 'layerY' && key !== 'keyLocation' && key !== 'webkitMovementX' && key !== 'webkitMovementY') {\n          // Chrome 32+ warns if you try to copy deprecated returnValue, but\n          // we still want to if preventDefault isn't supported (IE8).\n          if (!(key === 'returnValue' && old.preventDefault)) {\n            event[key] = old[key];\n          }\n        }\n      }\n\n      // The event occurred on this element\n      if (!event.target) {\n        event.target = event.srcElement || _document2['default'];\n      }\n\n      // Handle which other element the event is related to\n      if (!event.relatedTarget) {\n        event.relatedTarget = event.fromElement === event.target ? event.toElement : event.fromElement;\n      }\n\n      // Stop the default browser action\n      event.preventDefault = function () {\n        if (old.preventDefault) {\n          old.preventDefault();\n        }\n        event.returnValue = false;\n        old.returnValue = false;\n        event.defaultPrevented = true;\n      };\n\n      event.defaultPrevented = false;\n\n      // Stop the event from bubbling\n      event.stopPropagation = function () {\n        if (old.stopPropagation) {\n          old.stopPropagation();\n        }\n        event.cancelBubble = true;\n        old.cancelBubble = true;\n        event.isPropagationStopped = returnTrue;\n      };\n\n      event.isPropagationStopped = returnFalse;\n\n      // Stop the event from bubbling and executing other handlers\n      event.stopImmediatePropagation = function () {\n        if (old.stopImmediatePropagation) {\n          old.stopImmediatePropagation();\n        }\n        event.isImmediatePropagationStopped = returnTrue;\n        event.stopPropagation();\n      };\n\n      event.isImmediatePropagationStopped = returnFalse;\n\n      // Handle mouse position\n      if (event.clientX !== null && event.clientX !== undefined) {\n        var doc = _document2['default'].documentElement;\n        var body = _document2['default'].body;\n\n        event.pageX = event.clientX + (doc && doc.scrollLeft || body && body.scrollLeft || 0) - (doc && doc.clientLeft || body && body.clientLeft || 0);\n        event.pageY = event.clientY + (doc && doc.scrollTop || body && body.scrollTop || 0) - (doc && doc.clientTop || body && body.clientTop || 0);\n      }\n\n      // Handle key presses\n      event.which = event.charCode || event.keyCode;\n\n      // Fix button for mouse clicks:\n      // 0 == left; 1 == middle; 2 == right\n      if (event.button !== null && event.button !== undefined) {\n\n        // The following is disabled because it does not pass videojs-standard\n        // and... yikes.\n        /* eslint-disable */\n        event.button = event.button & 1 ? 0 : event.button & 4 ? 1 : event.button & 2 ? 2 : 0;\n        /* eslint-enable */\n      }\n    })();\n  }\n\n  // Returns fixed-up instance\n  return event;\n}\n\n/**\n * Add an event listener to element\n * It stores the handler function in a separate cache object\n * and adds a generic handler to the element's event,\n * along with a unique id (guid) to the element.\n *\n * @param {Element|Object} elem\n *        Element or object to bind listeners to\n *\n * @param {string|string[]} type\n *        Type of event to bind to.\n *\n * @param {EventTarget~EventListener} fn\n *        Event listener.\n */\nfunction on(elem, type, fn) {\n  if (Array.isArray(type)) {\n    return _handleMultipleEvents(on, elem, type, fn);\n  }\n\n  var data = Dom.getElData(elem);\n\n  // We need a place to store all our handler data\n  if (!data.handlers) {\n    data.handlers = {};\n  }\n\n  if (!data.handlers[type]) {\n    data.handlers[type] = [];\n  }\n\n  if (!fn.guid) {\n    fn.guid = Guid.newGUID();\n  }\n\n  data.handlers[type].push(fn);\n\n  if (!data.dispatcher) {\n    data.disabled = false;\n\n    data.dispatcher = function (event, hash) {\n\n      if (data.disabled) {\n        return;\n      }\n\n      event = fixEvent(event);\n\n      var handlers = data.handlers[event.type];\n\n      if (handlers) {\n        // Copy handlers so if handlers are added/removed during the process it doesn't throw everything off.\n        var handlersCopy = handlers.slice(0);\n\n        for (var m = 0, n = handlersCopy.length; m < n; m++) {\n          if (event.isImmediatePropagationStopped()) {\n            break;\n          } else {\n            try {\n              handlersCopy[m].call(elem, event, hash);\n            } catch (e) {\n              _log2['default'].error(e);\n            }\n          }\n        }\n      }\n    };\n  }\n\n  if (data.handlers[type].length === 1) {\n    if (elem.addEventListener) {\n      elem.addEventListener(type, data.dispatcher, false);\n    } else if (elem.attachEvent) {\n      elem.attachEvent('on' + type, data.dispatcher);\n    }\n  }\n}\n\n/**\n * Removes event listeners from an element\n *\n * @param {Element|Object} elem\n *        Object to remove listeners from.\n *\n * @param {string|string[]} [type]\n *        Type of listener to remove. Don't include to remove all events from element.\n *\n * @param {EventTarget~EventListener} [fn]\n *        Specific listener to remove. Don't include to remove listeners for an event\n *        type.\n */\nfunction off(elem, type, fn) {\n  // Don't want to add a cache object through getElData if not needed\n  if (!Dom.hasElData(elem)) {\n    return;\n  }\n\n  var data = Dom.getElData(elem);\n\n  // If no events exist, nothing to unbind\n  if (!data.handlers) {\n    return;\n  }\n\n  if (Array.isArray(type)) {\n    return _handleMultipleEvents(off, elem, type, fn);\n  }\n\n  // Utility function\n  var removeType = function removeType(t) {\n    data.handlers[t] = [];\n    _cleanUpEvents(elem, t);\n  };\n\n  // Are we removing all bound events?\n  if (!type) {\n    for (var t in data.handlers) {\n      removeType(t);\n    }\n    return;\n  }\n\n  var handlers = data.handlers[type];\n\n  // If no handlers exist, nothing to unbind\n  if (!handlers) {\n    return;\n  }\n\n  // If no listener was provided, remove all listeners for type\n  if (!fn) {\n    removeType(type);\n    return;\n  }\n\n  // We're only removing a single handler\n  if (fn.guid) {\n    for (var n = 0; n < handlers.length; n++) {\n      if (handlers[n].guid === fn.guid) {\n        handlers.splice(n--, 1);\n      }\n    }\n  }\n\n  _cleanUpEvents(elem, type);\n}\n\n/**\n * Trigger an event for an element\n *\n * @param {Element|Object} elem\n *        Element to trigger an event on\n *\n * @param {EventTarget~Event|string} event\n *        A string (the type) or an event object with a type attribute\n *\n * @param {Object} [hash]\n *        data hash to pass along with the event\n *\n * @return {boolean|undefined}\n *         - Returns the opposite of `defaultPrevented` if default was prevented\n *         - Otherwise returns undefined\n */\nfunction trigger(elem, event, hash) {\n  // Fetches element data and a reference to the parent (for bubbling).\n  // Don't want to add a data object to cache for every parent,\n  // so checking hasElData first.\n  var elemData = Dom.hasElData(elem) ? Dom.getElData(elem) : {};\n  var parent = elem.parentNode || elem.ownerDocument;\n  // type = event.type || event,\n  // handler;\n\n  // If an event name was passed as a string, creates an event out of it\n  if (typeof event === 'string') {\n    event = { type: event, target: elem };\n  }\n  // Normalizes the event properties.\n  event = fixEvent(event);\n\n  // If the passed element has a dispatcher, executes the established handlers.\n  if (elemData.dispatcher) {\n    elemData.dispatcher.call(elem, event, hash);\n  }\n\n  // Unless explicitly stopped or the event does not bubble (e.g. media events)\n  // recursively calls this function to bubble the event up the DOM.\n  if (parent && !event.isPropagationStopped() && event.bubbles === true) {\n    trigger.call(null, parent, event, hash);\n\n    // If at the top of the DOM, triggers the default action unless disabled.\n  } else if (!parent && !event.defaultPrevented) {\n    var targetData = Dom.getElData(event.target);\n\n    // Checks if the target has a default action for this event.\n    if (event.target[event.type]) {\n      // Temporarily disables event dispatching on the target as we have already executed the handler.\n      targetData.disabled = true;\n      // Executes the default action.\n      if (typeof event.target[event.type] === 'function') {\n        event.target[event.type]();\n      }\n      // Re-enables event dispatching.\n      targetData.disabled = false;\n    }\n  }\n\n  // Inform the triggerer if the default was prevented by returning false\n  return !event.defaultPrevented;\n}\n\n/**\n * Trigger a listener only once for an event\n *\n * @param {Element|Object} elem\n *        Element or object to bind to.\n *\n * @param {string|string[]} type\n *        Name/type of event\n *\n * @param {Event~EventListener} fn\n *        Event Listener function\n */\nfunction one(elem, type, fn) {\n  if (Array.isArray(type)) {\n    return _handleMultipleEvents(one, elem, type, fn);\n  }\n  var func = function func() {\n    off(elem, type, func);\n    fn.apply(this, arguments);\n  };\n\n  // copy the guid to the new function so it can removed using the original function's ID\n  func.guid = fn.guid = fn.guid || Guid.newGUID();\n  on(elem, type, func);\n}\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/video.js/es5/utils/events.js\n ** module id = 8\n ** module chunks = 0 1\n **/","'use strict';\n\nexports.__esModule = true;\nexports.$$ = exports.$ = undefined;\n\nvar _templateObject = _taggedTemplateLiteralLoose(['Setting attributes in the second argument of createEl()\\n                has been deprecated. Use the third argument instead.\\n                createEl(type, properties, attributes). Attempting to set ', ' to ', '.'], ['Setting attributes in the second argument of createEl()\\n                has been deprecated. Use the third argument instead.\\n                createEl(type, properties, attributes). Attempting to set ', ' to ', '.']);\n\nexports.isEl = isEl;\nexports.getEl = getEl;\nexports.createEl = createEl;\nexports.textContent = textContent;\nexports.insertElFirst = insertElFirst;\nexports.getElData = getElData;\nexports.hasElData = hasElData;\nexports.removeElData = removeElData;\nexports.hasElClass = hasElClass;\nexports.addElClass = addElClass;\nexports.removeElClass = removeElClass;\nexports.toggleElClass = toggleElClass;\nexports.setElAttributes = setElAttributes;\nexports.getElAttributes = getElAttributes;\nexports.getAttribute = getAttribute;\nexports.setAttribute = setAttribute;\nexports.removeAttribute = removeAttribute;\nexports.blockTextSelection = blockTextSelection;\nexports.unblockTextSelection = unblockTextSelection;\nexports.findElPosition = findElPosition;\nexports.getPointerPosition = getPointerPosition;\nexports.isTextNode = isTextNode;\nexports.emptyEl = emptyEl;\nexports.normalizeContent = normalizeContent;\nexports.appendContent = appendContent;\nexports.insertContent = insertContent;\n\nvar _document = require('global/document');\n\nvar _document2 = _interopRequireDefault(_document);\n\nvar _window = require('global/window');\n\nvar _window2 = _interopRequireDefault(_window);\n\nvar _guid = require('./guid.js');\n\nvar Guid = _interopRequireWildcard(_guid);\n\nvar _log = require('./log.js');\n\nvar _log2 = _interopRequireDefault(_log);\n\nvar _tsml = require('tsml');\n\nvar _tsml2 = _interopRequireDefault(_tsml);\n\nvar _obj = require('./obj');\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj['default'] = obj; return newObj; } }\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nfunction _taggedTemplateLiteralLoose(strings, raw) { strings.raw = raw; return strings; } /**\n                                                                                           * @file dom.js\n                                                                                           * @module dom\n                                                                                           */\n\n\n/**\n * Detect if a value is a string with any non-whitespace characters.\n *\n * @param {string} str\n *        The string to check\n *\n * @return {boolean}\n *         - True if the string is non-blank\n *         - False otherwise\n *\n */\nfunction isNonBlankString(str) {\n  return typeof str === 'string' && /\\S/.test(str);\n}\n\n/**\n * Throws an error if the passed string has whitespace. This is used by\n * class methods to be relatively consistent with the classList API.\n *\n * @param {string} str\n *         The string to check for whitespace.\n *\n * @throws {Error}\n *         Throws an error if there is whitespace in the string.\n *\n */\nfunction throwIfWhitespace(str) {\n  if (/\\s/.test(str)) {\n    throw new Error('class has illegal whitespace characters');\n  }\n}\n\n/**\n * Produce a regular expression for matching a className within an elements className.\n *\n * @param {string} className\n *         The className to generate the RegExp for.\n *\n * @return {RegExp}\n *         The RegExp that will check for a specific `className` in an elements\n *         className.\n */\nfunction classRegExp(className) {\n  return new RegExp('(^|\\\\s)' + className + '($|\\\\s)');\n}\n\n/**\n * Determines, via duck typing, whether or not a value is a DOM element.\n *\n * @param {Mixed} value\n *        The thing to check\n *\n * @return {boolean}\n *         - True if it is a DOM element\n *         - False otherwise\n */\nfunction isEl(value) {\n  return (0, _obj.isObject)(value) && value.nodeType === 1;\n}\n\n/**\n * Creates functions to query the DOM using a given method.\n *\n * @param {string} method\n *         The method to create the query with.\n *\n * @return {Function}\n *         The query method\n */\nfunction createQuerier(method) {\n  return function (selector, context) {\n    if (!isNonBlankString(selector)) {\n      return _document2['default'][method](null);\n    }\n    if (isNonBlankString(context)) {\n      context = _document2['default'].querySelector(context);\n    }\n\n    var ctx = isEl(context) ? context : _document2['default'];\n\n    return ctx[method] && ctx[method](selector);\n  };\n}\n\n/**\n * Shorthand for document.getElementById()\n * Also allows for CSS (jQuery) ID syntax. But nothing other than IDs.\n *\n * @param {string} id\n *         The id of the element to get\n *\n * @return {Element|null}\n *         Element with supplied ID or null if there wasn't one.\n */\nfunction getEl(id) {\n  if (id.indexOf('#') === 0) {\n    id = id.slice(1);\n  }\n\n  return _document2['default'].getElementById(id);\n}\n\n/**\n * Creates an element and applies properties.\n *\n * @param {string} [tagName='div']\n *         Name of tag to be created.\n *\n * @param {Object} [properties={}]\n *         Element properties to be applied.\n *\n * @param {Object} [attributes={}]\n *         Element attributes to be applied.\n *\n * @param {String|Element|TextNode|Array|Function} [content]\n *         Contents for the element (see: {@link dom:normalizeContent})\n *\n * @return {Element}\n *         The element that was created.\n */\nfunction createEl() {\n  var tagName = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'div';\n  var properties = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  var attributes = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  var content = arguments[3];\n\n  var el = _document2['default'].createElement(tagName);\n\n  Object.getOwnPropertyNames(properties).forEach(function (propName) {\n    var val = properties[propName];\n\n    // See #2176\n    // We originally were accepting both properties and attributes in the\n    // same object, but that doesn't work so well.\n    if (propName.indexOf('aria-') !== -1 || propName === 'role' || propName === 'type') {\n      _log2['default'].warn((0, _tsml2['default'])(_templateObject, propName, val));\n      el.setAttribute(propName, val);\n\n      // Handle textContent since it's not supported everywhere and we have a\n      // method for it.\n    } else if (propName === 'textContent') {\n      textContent(el, val);\n    } else {\n      el[propName] = val;\n    }\n  });\n\n  Object.getOwnPropertyNames(attributes).forEach(function (attrName) {\n    el.setAttribute(attrName, attributes[attrName]);\n  });\n\n  if (content) {\n    appendContent(el, content);\n  }\n\n  return el;\n}\n\n/**\n * Injects text into an element, replacing any existing contents entirely.\n *\n * @param {Element} el\n *        The element to add text content into\n *\n * @param {string} text\n *        The text content to add.\n *\n * @return {Element}\n *         The element with added text content.\n */\nfunction textContent(el, text) {\n  if (typeof el.textContent === 'undefined') {\n    el.innerText = text;\n  } else {\n    el.textContent = text;\n  }\n  return el;\n}\n\n/**\n * Insert an element as the first child node of another\n *\n * @param {Element} child\n *        Element to insert\n *\n * @param {Element} parent\n *        Element to insert child into\n *\n */\nfunction insertElFirst(child, parent) {\n  if (parent.firstChild) {\n    parent.insertBefore(child, parent.firstChild);\n  } else {\n    parent.appendChild(child);\n  }\n}\n\n/**\n * Element Data Store. Allows for binding data to an element without putting it directly on the element.\n * Ex. Event listeners are stored here.\n * (also from jsninja.com, slightly modified and updated for closure compiler)\n *\n * @type {Object}\n * @private\n */\nvar elData = {};\n\n/*\n * Unique attribute name to store an element's guid in\n *\n * @type {string}\n * @constant\n * @private\n */\nvar elIdAttr = 'vdata' + new Date().getTime();\n\n/**\n * Returns the cache object where data for an element is stored\n *\n * @param {Element} el\n *        Element to store data for.\n *\n * @return {Object}\n *         The cache object for that el that was passed in.\n */\nfunction getElData(el) {\n  var id = el[elIdAttr];\n\n  if (!id) {\n    id = el[elIdAttr] = Guid.newGUID();\n  }\n\n  if (!elData[id]) {\n    elData[id] = {};\n  }\n\n  return elData[id];\n}\n\n/**\n * Returns whether or not an element has cached data\n *\n * @param {Element} el\n *        Check if this element has cached data.\n *\n * @return {boolean}\n *         - True if the DOM element has cached data.\n *         - False otherwise.\n */\nfunction hasElData(el) {\n  var id = el[elIdAttr];\n\n  if (!id) {\n    return false;\n  }\n\n  return !!Object.getOwnPropertyNames(elData[id]).length;\n}\n\n/**\n * Delete data for the element from the cache and the guid attr from getElementById\n *\n * @param {Element} el\n *        Remove cached data for this element.\n */\nfunction removeElData(el) {\n  var id = el[elIdAttr];\n\n  if (!id) {\n    return;\n  }\n\n  // Remove all stored data\n  delete elData[id];\n\n  // Remove the elIdAttr property from the DOM node\n  try {\n    delete el[elIdAttr];\n  } catch (e) {\n    if (el.removeAttribute) {\n      el.removeAttribute(elIdAttr);\n    } else {\n      // IE doesn't appear to support removeAttribute on the document element\n      el[elIdAttr] = null;\n    }\n  }\n}\n\n/**\n * Check if an element has a CSS class\n *\n * @param {Element} element\n *        Element to check\n *\n * @param {string} classToCheck\n *        Class name to check for\n *\n * @return {boolean}\n *         - True if the element had the class\n *         - False otherwise.\n *\n * @throws {Error}\n *         Throws an error if `classToCheck` has white space.\n */\nfunction hasElClass(element, classToCheck) {\n  throwIfWhitespace(classToCheck);\n  if (element.classList) {\n    return element.classList.contains(classToCheck);\n  }\n  return classRegExp(classToCheck).test(element.className);\n}\n\n/**\n * Add a CSS class name to an element\n *\n * @param {Element} element\n *        Element to add class name to.\n *\n * @param {string} classToAdd\n *        Class name to add.\n *\n * @return {Element}\n *         The dom element with the added class name.\n */\nfunction addElClass(element, classToAdd) {\n  if (element.classList) {\n    element.classList.add(classToAdd);\n\n    // Don't need to `throwIfWhitespace` here because `hasElClass` will do it\n    // in the case of classList not being supported.\n  } else if (!hasElClass(element, classToAdd)) {\n    element.className = (element.className + ' ' + classToAdd).trim();\n  }\n\n  return element;\n}\n\n/**\n * Remove a CSS class name from an element\n *\n * @param {Element} element\n *        Element to remove a class name from.\n *\n * @param {string} classToRemove\n *        Class name to remove\n *\n * @return {Element}\n *         The dom element with class name removed.\n */\nfunction removeElClass(element, classToRemove) {\n  if (element.classList) {\n    element.classList.remove(classToRemove);\n  } else {\n    throwIfWhitespace(classToRemove);\n    element.className = element.className.split(/\\s+/).filter(function (c) {\n      return c !== classToRemove;\n    }).join(' ');\n  }\n\n  return element;\n}\n\n/**\n * The callback definition for toggleElClass.\n *\n * @callback Dom~PredicateCallback\n * @param {Element} element\n *        The DOM element of the Component.\n *\n * @param {string} classToToggle\n *        The `className` that wants to be toggled\n *\n * @return {boolean|undefined}\n *         - If true the `classToToggle` will get added to `element`.\n *         - If false the `classToToggle` will get removed from `element`.\n *         - If undefined this callback will be ignored\n */\n\n/**\n * Adds or removes a CSS class name on an element depending on an optional\n * condition or the presence/absence of the class name.\n *\n * @param {Element} element\n *        The element to toggle a class name on.\n *\n * @param {string} classToToggle\n *        The class that should be toggled\n *\n * @param {boolean|PredicateCallback} [predicate]\n *        See the return value for {@link Dom~PredicateCallback}\n *\n * @return {Element}\n *         The element with a class that has been toggled.\n */\nfunction toggleElClass(element, classToToggle, predicate) {\n\n  // This CANNOT use `classList` internally because IE does not support the\n  // second parameter to the `classList.toggle()` method! Which is fine because\n  // `classList` will be used by the add/remove functions.\n  var has = hasElClass(element, classToToggle);\n\n  if (typeof predicate === 'function') {\n    predicate = predicate(element, classToToggle);\n  }\n\n  if (typeof predicate !== 'boolean') {\n    predicate = !has;\n  }\n\n  // If the necessary class operation matches the current state of the\n  // element, no action is required.\n  if (predicate === has) {\n    return;\n  }\n\n  if (predicate) {\n    addElClass(element, classToToggle);\n  } else {\n    removeElClass(element, classToToggle);\n  }\n\n  return element;\n}\n\n/**\n * Apply attributes to an HTML element.\n *\n * @param {Element} el\n *        Element to add attributes to.\n *\n * @param {Object} [attributes]\n *        Attributes to be applied.\n */\nfunction setElAttributes(el, attributes) {\n  Object.getOwnPropertyNames(attributes).forEach(function (attrName) {\n    var attrValue = attributes[attrName];\n\n    if (attrValue === null || typeof attrValue === 'undefined' || attrValue === false) {\n      el.removeAttribute(attrName);\n    } else {\n      el.setAttribute(attrName, attrValue === true ? '' : attrValue);\n    }\n  });\n}\n\n/**\n * Get an element's attribute values, as defined on the HTML tag\n * Attributes are not the same as properties. They're defined on the tag\n * or with setAttribute (which shouldn't be used with HTML)\n * This will return true or false for boolean attributes.\n *\n * @param {Element} tag\n *        Element from which to get tag attributes.\n *\n * @return {Object}\n *         All attributes of the element.\n */\nfunction getElAttributes(tag) {\n  var obj = {};\n\n  // known boolean attributes\n  // we can check for matching boolean properties, but older browsers\n  // won't know about HTML5 boolean attributes that we still read from\n  var knownBooleans = ',' + 'autoplay,controls,loop,muted,default' + ',';\n\n  if (tag && tag.attributes && tag.attributes.length > 0) {\n    var attrs = tag.attributes;\n\n    for (var i = attrs.length - 1; i >= 0; i--) {\n      var attrName = attrs[i].name;\n      var attrVal = attrs[i].value;\n\n      // check for known booleans\n      // the matching element property will return a value for typeof\n      if (typeof tag[attrName] === 'boolean' || knownBooleans.indexOf(',' + attrName + ',') !== -1) {\n        // the value of an included boolean attribute is typically an empty\n        // string ('') which would equal false if we just check for a false value.\n        // we also don't want support bad code like autoplay='false'\n        attrVal = attrVal !== null ? true : false;\n      }\n\n      obj[attrName] = attrVal;\n    }\n  }\n\n  return obj;\n}\n\n/**\n * Get the value of an element's attribute\n *\n * @param {Element} el\n *        A DOM element\n *\n * @param {string} attribute\n *        Attribute to get the value of\n *\n * @return {string}\n *         value of the attribute\n */\nfunction getAttribute(el, attribute) {\n  return el.getAttribute(attribute);\n}\n\n/**\n * Set the value of an element's attribute\n *\n * @param {Element} el\n *        A DOM element\n *\n * @param {string} attribute\n *        Attribute to set\n *\n * @param {string} value\n *        Value to set the attribute to\n */\nfunction setAttribute(el, attribute, value) {\n  el.setAttribute(attribute, value);\n}\n\n/**\n * Remove an element's attribute\n *\n * @param {Element} el\n *        A DOM element\n *\n * @param {string} attribute\n *        Attribute to remove\n */\nfunction removeAttribute(el, attribute) {\n  el.removeAttribute(attribute);\n}\n\n/**\n * Attempt to block the ability to select text while dragging controls\n */\nfunction blockTextSelection() {\n  _document2['default'].body.focus();\n  _document2['default'].onselectstart = function () {\n    return false;\n  };\n}\n\n/**\n * Turn off text selection blocking\n */\nfunction unblockTextSelection() {\n  _document2['default'].onselectstart = function () {\n    return true;\n  };\n}\n\n/**\n * The postion of a DOM element on the page.\n *\n * @typedef {Object} Dom~Position\n *\n * @property {number} left\n *           Pixels to the left\n *\n * @property {number} top\n *           Pixels on top\n */\n\n/**\n * Offset Left.\n * getBoundingClientRect technique from\n * John Resig\n *\n * @see http://ejohn.org/blog/getboundingclientrect-is-awesome/\n *\n * @param {Element} el\n *        Element from which to get offset\n *\n * @return {Dom~Position}\n *         The position of the element that was passed in.\n */\nfunction findElPosition(el) {\n  var box = void 0;\n\n  if (el.getBoundingClientRect && el.parentNode) {\n    box = el.getBoundingClientRect();\n  }\n\n  if (!box) {\n    return {\n      left: 0,\n      top: 0\n    };\n  }\n\n  var docEl = _document2['default'].documentElement;\n  var body = _document2['default'].body;\n\n  var clientLeft = docEl.clientLeft || body.clientLeft || 0;\n  var scrollLeft = _window2['default'].pageXOffset || body.scrollLeft;\n  var left = box.left + scrollLeft - clientLeft;\n\n  var clientTop = docEl.clientTop || body.clientTop || 0;\n  var scrollTop = _window2['default'].pageYOffset || body.scrollTop;\n  var top = box.top + scrollTop - clientTop;\n\n  // Android sometimes returns slightly off decimal values, so need to round\n  return {\n    left: Math.round(left),\n    top: Math.round(top)\n  };\n}\n\n/**\n * x and y coordinates for a dom element or mouse pointer\n *\n * @typedef {Object} Dom~Coordinates\n *\n * @property {number} x\n *           x coordinate in pixels\n *\n * @property {number} y\n *           y coordinate in pixels\n */\n\n/**\n * Get pointer position in element\n * Returns an object with x and y coordinates.\n * The base on the coordinates are the bottom left of the element.\n *\n * @param {Element} el\n *        Element on which to get the pointer position on\n *\n * @param {EventTarget~Event} event\n *        Event object\n *\n * @return {Dom~Coordinates}\n *         A Coordinates object corresponding to the mouse position.\n *\n */\nfunction getPointerPosition(el, event) {\n  var position = {};\n  var box = findElPosition(el);\n  var boxW = el.offsetWidth;\n  var boxH = el.offsetHeight;\n\n  var boxY = box.top;\n  var boxX = box.left;\n  var pageY = event.pageY;\n  var pageX = event.pageX;\n\n  if (event.changedTouches) {\n    pageX = event.changedTouches[0].pageX;\n    pageY = event.changedTouches[0].pageY;\n  }\n\n  position.y = Math.max(0, Math.min(1, (boxY - pageY + boxH) / boxH));\n  position.x = Math.max(0, Math.min(1, (pageX - boxX) / boxW));\n\n  return position;\n}\n\n/**\n * Determines, via duck typing, whether or not a value is a text node.\n *\n * @param {Mixed} value\n *        Check if this value is a text node.\n *\n * @return {boolean}\n *         - True if it is a text node\n *         - False otherwise\n */\nfunction isTextNode(value) {\n  return (0, _obj.isObject)(value) && value.nodeType === 3;\n}\n\n/**\n * Empties the contents of an element.\n *\n * @param {Element} el\n *        The element to empty children from\n *\n * @return {Element}\n *         The element with no children\n */\nfunction emptyEl(el) {\n  while (el.firstChild) {\n    el.removeChild(el.firstChild);\n  }\n  return el;\n}\n\n/**\n * Normalizes content for eventual insertion into the DOM.\n *\n * This allows a wide range of content definition methods, but protects\n * from falling into the trap of simply writing to `innerHTML`, which is\n * an XSS concern.\n *\n * The content for an element can be passed in multiple types and\n * combinations, whose behavior is as follows:\n *\n * @param {String|Element|TextNode|Array|Function} content\n *        - String: Normalized into a text node.\n *        - Element/TextNode: Passed through.\n *        - Array: A one-dimensional array of strings, elements, nodes, or functions\n *          (which return single strings, elements, or nodes).\n *        - Function: If the sole argument, is expected to produce a string, element,\n *          node, or array as defined above.\n *\n * @return {Array}\n *         All of the content that was passed in normalized.\n */\nfunction normalizeContent(content) {\n\n  // First, invoke content if it is a function. If it produces an array,\n  // that needs to happen before normalization.\n  if (typeof content === 'function') {\n    content = content();\n  }\n\n  // Next up, normalize to an array, so one or many items can be normalized,\n  // filtered, and returned.\n  return (Array.isArray(content) ? content : [content]).map(function (value) {\n\n    // First, invoke value if it is a function to produce a new value,\n    // which will be subsequently normalized to a Node of some kind.\n    if (typeof value === 'function') {\n      value = value();\n    }\n\n    if (isEl(value) || isTextNode(value)) {\n      return value;\n    }\n\n    if (typeof value === 'string' && /\\S/.test(value)) {\n      return _document2['default'].createTextNode(value);\n    }\n  }).filter(function (value) {\n    return value;\n  });\n}\n\n/**\n * Normalizes and appends content to an element.\n *\n * @param {Element} el\n *        Element to append normalized content to.\n *\n *\n * @param {String|Element|TextNode|Array|Function} content\n *        See the `content` argument of {@link dom:normalizeContent}\n *\n * @return {Element}\n *         The element with appended normalized content.\n */\nfunction appendContent(el, content) {\n  normalizeContent(content).forEach(function (node) {\n    return el.appendChild(node);\n  });\n  return el;\n}\n\n/**\n * Normalizes and inserts content into an element; this is identical to\n * `appendContent()`, except it empties the element first.\n *\n * @param {Element} el\n *        Element to insert normalized content into.\n *\n * @param {String|Element|TextNode|Array|Function} content\n *        See the `content` argument of {@link dom:normalizeContent}\n *\n * @return {Element}\n *         The element with inserted normalized content.\n *\n */\nfunction insertContent(el, content) {\n  return appendContent(emptyEl(el), content);\n}\n\n/**\n * Finds a single DOM element matching `selector` within the optional\n * `context` of another DOM element (defaulting to `document`).\n *\n * @param {string} selector\n *        A valid CSS selector, which will be passed to `querySelector`.\n *\n * @param {Element|String} [context=document]\n *        A DOM element within which to query. Can also be a selector\n *        string in which case the first matching element will be used\n *        as context. If missing (or no element matches selector), falls\n *        back to `document`.\n *\n * @return {Element|null}\n *         The element that was found or null.\n */\nvar $ = exports.$ = createQuerier('querySelector');\n\n/**\n * Finds a all DOM elements matching `selector` within the optional\n * `context` of another DOM element (defaulting to `document`).\n *\n * @param {string} selector\n *           A valid CSS selector, which will be passed to `querySelectorAll`.\n *\n * @param {Element|String} [context=document]\n *           A DOM element within which to query. Can also be a selector\n *           string in which case the first matching element will be used\n *           as context. If missing (or no element matches selector), falls\n *           back to `document`.\n *\n * @return {NodeList}\n *         A element list of elements that were found. Will be empty if none were found.\n *\n */\nvar $$ = exports.$$ = createQuerier('querySelectorAll');\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/video.js/es5/utils/dom.js\n ** module id = 9\n ** module chunks = 0 1\n **/","\"use strict\";\n\nexports.__esModule = true;\nexports.newGUID = newGUID;\n/**\n * @file guid.js\n * @module guid\n */\n\n/**\n * Unique ID for an element or function\n * @type {Number}\n */\nvar _guid = 1;\n\n/**\n * Get a unique auto-incrementing ID by number that has not been returned before.\n *\n * @return {number}\n *         A new unique ID.\n */\nfunction newGUID() {\n  return _guid++;\n}\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/video.js/es5/utils/guid.js\n ** module id = 10\n ** module chunks = 0 1\n **/","'use strict';\n\nexports.__esModule = true;\nexports.logByType = undefined;\n\nvar _window = require('global/window');\n\nvar _window2 = _interopRequireDefault(_window);\n\nvar _browser = require('./browser');\n\nvar _obj = require('./obj');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nvar log = void 0;\n\n/**\n * Log messages to the console and history based on the type of message\n *\n * @param  {string} type\n *         The name of the console method to use.\n *\n * @param  {Array} args\n *         The arguments to be passed to the matching console method.\n *\n * @param  {boolean} [stringify]\n *         By default, only old IEs should get console argument stringification,\n *         but this is exposed as a parameter to facilitate testing.\n */\n/**\n * @file log.js\n * @module log\n */\nvar logByType = exports.logByType = function logByType(type, args) {\n  var stringify = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : !!_browser.IE_VERSION && _browser.IE_VERSION < 11;\n\n\n  if (type !== 'log') {\n\n    // add the type to the front of the message when it's not \"log\"\n    args.unshift(type.toUpperCase() + ':');\n  }\n\n  // add to history\n  log.history.push(args);\n\n  // add console prefix after adding to history\n  args.unshift('VIDEOJS:');\n\n  // If there's no console then don't try to output messages, but they will\n  // still be stored in `log.history`.\n  //\n  // Was setting these once outside of this function, but containing them\n  // in the function makes it easier to test cases where console doesn't exist\n  // when the module is executed.\n  var fn = _window2['default'].console && _window2['default'].console[type];\n\n  // Bail out if there's no console.\n  if (!fn) {\n    return;\n  }\n\n  // IEs previous to 11 log objects uselessly as \"[object Object]\"; so, JSONify\n  // objects and arrays for those less-capable browsers.\n  if (stringify) {\n    args = args.map(function (a) {\n      if ((0, _obj.isObject)(a) || Array.isArray(a)) {\n        try {\n          return JSON.stringify(a);\n        } catch (x) {\n          return String(a);\n        }\n      }\n\n      // Cast to string before joining, so we get null and undefined explicitly\n      // included in output (as we would in a modern console).\n      return String(a);\n    }).join(' ');\n  }\n\n  // Old IE versions do not allow .apply() for console methods (they are\n  // reported as objects rather than functions).\n  if (!fn.apply) {\n    fn(args);\n  } else {\n    fn[Array.isArray(args) ? 'apply' : 'call'](_window2['default'].console, args);\n  }\n};\n\n/**\n * Log plain debug messages\n *\n * @param {Mixed[]} args\n *        One or more messages or objects that should be logged.\n */\nlog = function log() {\n  for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n    args[_key] = arguments[_key];\n  }\n\n  logByType('log', args);\n};\n\n/**\n * Keep a history of log messages\n *\n * @type {Array}\n */\nlog.history = [];\n\n/**\n * Log error messages\n *\n * @param {Mixed[]} args\n *        One or more messages or objects that should be logged as an error\n */\nlog.error = function () {\n  for (var _len2 = arguments.length, args = Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n    args[_key2] = arguments[_key2];\n  }\n\n  return logByType('error', args);\n};\n\n/**\n * Log warning messages\n *\n * @param {Mixed[]} args\n *        One or more messages or objects that should be logged as a warning.\n */\nlog.warn = function () {\n  for (var _len3 = arguments.length, args = Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n    args[_key3] = arguments[_key3];\n  }\n\n  return logByType('warn', args);\n};\n\nexports['default'] = log;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/video.js/es5/utils/log.js\n ** module id = 11\n ** module chunks = 0 1\n **/","'use strict';\n\nexports.__esModule = true;\nexports.BACKGROUND_SIZE_SUPPORTED = exports.TOUCH_ENABLED = exports.IS_ANY_SAFARI = exports.IS_SAFARI = exports.IE_VERSION = exports.IS_IE8 = exports.IS_CHROME = exports.IS_EDGE = exports.IS_FIREFOX = exports.IS_NATIVE_ANDROID = exports.IS_OLD_ANDROID = exports.ANDROID_VERSION = exports.IS_ANDROID = exports.IOS_VERSION = exports.IS_IOS = exports.IS_IPOD = exports.IS_IPHONE = exports.IS_IPAD = undefined;\n\nvar _document = require('global/document');\n\nvar _document2 = _interopRequireDefault(_document);\n\nvar _window = require('global/window');\n\nvar _window2 = _interopRequireDefault(_window);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\n/**\n * @file browser.js\n * @module browser\n */\nvar USER_AGENT = _window2['default'].navigator && _window2['default'].navigator.userAgent || '';\nvar webkitVersionMap = /AppleWebKit\\/([\\d.]+)/i.exec(USER_AGENT);\nvar appleWebkitVersion = webkitVersionMap ? parseFloat(webkitVersionMap.pop()) : null;\n\n/*\n * Device is an iPhone\n *\n * @type {Boolean}\n * @constant\n * @private\n */\nvar IS_IPAD = exports.IS_IPAD = /iPad/i.test(USER_AGENT);\n\n// The Facebook app's UIWebView identifies as both an iPhone and iPad, so\n// to identify iPhones, we need to exclude iPads.\n// http://artsy.github.io/blog/2012/10/18/the-perils-of-ios-user-agent-sniffing/\nvar IS_IPHONE = exports.IS_IPHONE = /iPhone/i.test(USER_AGENT) && !IS_IPAD;\nvar IS_IPOD = exports.IS_IPOD = /iPod/i.test(USER_AGENT);\nvar IS_IOS = exports.IS_IOS = IS_IPHONE || IS_IPAD || IS_IPOD;\n\nvar IOS_VERSION = exports.IOS_VERSION = function () {\n  var match = USER_AGENT.match(/OS (\\d+)_/i);\n\n  if (match && match[1]) {\n    return match[1];\n  }\n  return null;\n}();\n\nvar IS_ANDROID = exports.IS_ANDROID = /Android/i.test(USER_AGENT);\nvar ANDROID_VERSION = exports.ANDROID_VERSION = function () {\n  // This matches Android Major.Minor.Patch versions\n  // ANDROID_VERSION is Major.Minor as a Number, if Minor isn't available, then only Major is returned\n  var match = USER_AGENT.match(/Android (\\d+)(?:\\.(\\d+))?(?:\\.(\\d+))*/i);\n\n  if (!match) {\n    return null;\n  }\n\n  var major = match[1] && parseFloat(match[1]);\n  var minor = match[2] && parseFloat(match[2]);\n\n  if (major && minor) {\n    return parseFloat(match[1] + '.' + match[2]);\n  } else if (major) {\n    return major;\n  }\n  return null;\n}();\n\n// Old Android is defined as Version older than 2.3, and requiring a webkit version of the android browser\nvar IS_OLD_ANDROID = exports.IS_OLD_ANDROID = IS_ANDROID && /webkit/i.test(USER_AGENT) && ANDROID_VERSION < 2.3;\nvar IS_NATIVE_ANDROID = exports.IS_NATIVE_ANDROID = IS_ANDROID && ANDROID_VERSION < 5 && appleWebkitVersion < 537;\n\nvar IS_FIREFOX = exports.IS_FIREFOX = /Firefox/i.test(USER_AGENT);\nvar IS_EDGE = exports.IS_EDGE = /Edge/i.test(USER_AGENT);\nvar IS_CHROME = exports.IS_CHROME = !IS_EDGE && /Chrome/i.test(USER_AGENT);\nvar IS_IE8 = exports.IS_IE8 = /MSIE\\s8\\.0/.test(USER_AGENT);\nvar IE_VERSION = exports.IE_VERSION = function (result) {\n  return result && parseFloat(result[1]);\n}(/MSIE\\s(\\d+)\\.\\d/.exec(USER_AGENT));\n\nvar IS_SAFARI = exports.IS_SAFARI = /Safari/i.test(USER_AGENT) && !IS_CHROME && !IS_ANDROID && !IS_EDGE;\nvar IS_ANY_SAFARI = exports.IS_ANY_SAFARI = IS_SAFARI || IS_IOS;\n\nvar TOUCH_ENABLED = exports.TOUCH_ENABLED = !!('ontouchstart' in _window2['default'] || _window2['default'].DocumentTouch && _document2['default'] instanceof _window2['default'].DocumentTouch);\nvar BACKGROUND_SIZE_SUPPORTED = exports.BACKGROUND_SIZE_SUPPORTED = 'backgroundSize' in _document2['default'].createElement('video').style;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/video.js/es5/utils/browser.js\n ** module id = 12\n ** module chunks = 0 1\n **/","'use strict';\n\nexports.__esModule = true;\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nexports.each = each;\nexports.reduce = reduce;\nexports.assign = assign;\nexports.isObject = isObject;\nexports.isPlain = isPlain;\n/**\n * @file obj.js\n * @module obj\n */\n\n/**\n * @callback obj:EachCallback\n *\n * @param {Mixed} value\n *        The current key for the object that is being iterated over.\n *\n * @param {string} key\n *        The current key-value for object that is being iterated over\n */\n\n/**\n * @callback obj:ReduceCallback\n *\n * @param {Mixed} accum\n *        The value that is accumulating over the reduce loop.\n *\n * @param {Mixed} value\n *        The current key for the object that is being iterated over.\n *\n * @param {string} key\n *        The current key-value for object that is being iterated over\n *\n * @return {Mixed}\n *         The new accumulated value.\n */\nvar toString = Object.prototype.toString;\n\n/**\n * Array-like iteration for objects.\n *\n * @param {Object} object\n *        The object to iterate over\n *\n * @param {obj:EachCallback} fn\n *        The callback function which is called for each key in the object.\n */\nfunction each(object, fn) {\n  Object.keys(object).forEach(function (key) {\n    return fn(object[key], key);\n  });\n}\n\n/**\n * Array-like reduce for objects.\n *\n * @param {Object} object\n *        The Object that you want to reduce.\n *\n * @param {Function} fn\n *         A callback function which is called for each key in the object. It\n *         receives the accumulated value and the per-iteration value and key\n *         as arguments.\n *\n * @param {Mixed} [initial = 0]\n *        Starting value\n *\n * @return {Mixed}\n *         The final accumulated value.\n */\nfunction reduce(object, fn) {\n  var initial = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;\n\n  return Object.keys(object).reduce(function (accum, key) {\n    return fn(accum, object[key], key);\n  }, initial);\n}\n\n/**\n * Object.assign-style object shallow merge/extend.\n *\n * @param  {Object} target\n * @param  {Object} ...sources\n * @return {Object}\n */\nfunction assign(target) {\n  for (var _len = arguments.length, sources = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    sources[_key - 1] = arguments[_key];\n  }\n\n  if (Object.assign) {\n    return Object.assign.apply(Object, [target].concat(sources));\n  }\n\n  sources.forEach(function (source) {\n    if (!source) {\n      return;\n    }\n\n    each(source, function (value, key) {\n      target[key] = value;\n    });\n  });\n\n  return target;\n}\n\n/**\n * Returns whether a value is an object of any kind - including DOM nodes,\n * arrays, regular expressions, etc. Not functions, though.\n *\n * This avoids the gotcha where using `typeof` on a `null` value\n * results in `'object'`.\n *\n * @param  {Object} value\n * @return {Boolean}\n */\nfunction isObject(value) {\n  return !!value && (typeof value === 'undefined' ? 'undefined' : _typeof(value)) === 'object';\n}\n\n/**\n * Returns whether an object appears to be a \"plain\" object - that is, a\n * direct instance of `Object`.\n *\n * @param  {Object} value\n * @return {Boolean}\n */\nfunction isPlain(value) {\n  return isObject(value) && toString.call(value) === '[object Object]' && value.constructor === Object;\n}\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/video.js/es5/utils/obj.js\n ** module id = 13\n ** module chunks = 0 1\n **/","function clean (s) {\n  return s.replace(/\\n\\r?\\s*/g, '')\n}\n\n\nmodule.exports = function tsml (sa) {\n  var s = ''\n    , i = 0\n\n  for (; i < arguments.length; i++)\n    s += clean(sa[i]) + (arguments[i + 1] || '')\n\n  return s\n}\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/tsml/tsml.js\n ** module id = 14\n ** module chunks = 0 1\n **/","'use strict';\n\nexports.__esModule = true;\nexports.setTextContent = exports.createStyleElement = undefined;\n\nvar _document = require('global/document');\n\nvar _document2 = _interopRequireDefault(_document);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\n/**\n * Create a DOM syle element given a className for it.\n *\n * @param {string} className\n *        The className to add to the created style element.\n *\n * @return {Element}\n *         The element that was created.\n */\nvar createStyleElement = exports.createStyleElement = function createStyleElement(className) {\n  var style = _document2['default'].createElement('style');\n\n  style.className = className;\n\n  return style;\n};\n\n/**\n * Add text to a DOM element.\n *\n * @param {Element} el\n *        The Element to add text content to.\n *\n * @param {string} content\n *        The text to add to the element.\n */\n/**\n * @file stylesheet.js\n * @module stylesheet\n */\nvar setTextContent = exports.setTextContent = function setTextContent(el, content) {\n  if (el.styleSheet) {\n    el.styleSheet.cssText = content;\n  } else {\n    el.textContent = content;\n  }\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/video.js/es5/utils/stylesheet.js\n ** module id = 15\n ** module chunks = 0 1\n **/","'use strict';\n\nexports.__esModule = true;\n\nvar _window = require('global/window');\n\nvar _window2 = _interopRequireDefault(_window);\n\nvar _dom = require('./utils/dom.js');\n\nvar Dom = _interopRequireWildcard(_dom);\n\nvar _fn = require('./utils/fn.js');\n\nvar Fn = _interopRequireWildcard(_fn);\n\nvar _guid = require('./utils/guid.js');\n\nvar Guid = _interopRequireWildcard(_guid);\n\nvar _events = require('./utils/events.js');\n\nvar Events = _interopRequireWildcard(_events);\n\nvar _log = require('./utils/log.js');\n\nvar _log2 = _interopRequireDefault(_log);\n\nvar _toTitleCase = require('./utils/to-title-case.js');\n\nvar _toTitleCase2 = _interopRequireDefault(_toTitleCase);\n\nvar _mergeOptions = require('./utils/merge-options.js');\n\nvar _mergeOptions2 = _interopRequireDefault(_mergeOptions);\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj['default'] = obj; return newObj; } }\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } } /**\n                                                                                                                                                           * Player Component - Base class for all UI objects\n                                                                                                                                                           *\n                                                                                                                                                           * @file component.js\n                                                                                                                                                           */\n\n\n/**\n * Base class for all UI Components.\n * Components are UI objects which represent both a javascript object and an element\n * in the DOM. They can be children of other components, and can have\n * children themselves.\n *\n * Creating a button component.\n * ``` js\n *   // adding a button to the player\n *   var player = videojs('some-video-id');\n *   var Component = videojs.getComponent('Component');\n *   var button = new Component(player);\n *\n *   console.log(button.el());\n * ```\n *\n * Above code will log this html.\n * ```html\n *   <div class=\"video-js\">\n *     <div class=\"vjs-button\">Button</div>\n *   </div>\n * ```\n *\n * Adding a button to the player\n * ``` js\n *   // adding a button to the player\n *   var player = videojs('some-video-id');\n *   var button = player.addChild('button');\n *\n *   console.log(button.el());\n *   // will have the same html result as the previous example\n * ```\n *\n * Components can also use methods from {@link EventTarget}\n */\nvar Component = function () {\n\n  /**\n   * A callback that is called when a component is ready. Does not have any\n   * paramters and any callback value will be ignored.\n   *\n   * @callback Component~ReadyCallback\n   * @this Component\n   */\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *         The key/value store of player options.\n   *\n   * @param {Component~ReadyCallback} [ready]\n   *        Function that gets called when the `Component` is ready.\n   */\n  function Component(player, options, ready) {\n    _classCallCheck(this, Component);\n\n    // The component might be the player itself and we can't pass `this` to super\n    if (!player && this.play) {\n      this.player_ = player = this; // eslint-disable-line\n    } else {\n      this.player_ = player;\n    }\n\n    // Make a copy of prototype.options_ to protect against overriding defaults\n    this.options_ = (0, _mergeOptions2['default'])({}, this.options_);\n\n    // Updated options with supplied options\n    options = this.options_ = (0, _mergeOptions2['default'])(this.options_, options);\n\n    // Get ID from options or options element if one is supplied\n    this.id_ = options.id || options.el && options.el.id;\n\n    // If there was no ID from the options, generate one\n    if (!this.id_) {\n      // Don't require the player ID function in the case of mock players\n      var id = player && player.id && player.id() || 'no_player';\n\n      this.id_ = id + '_component_' + Guid.newGUID();\n    }\n\n    this.name_ = options.name || null;\n\n    // Create element if one wasn't provided in options\n    if (options.el) {\n      this.el_ = options.el;\n    } else if (options.createEl !== false) {\n      this.el_ = this.createEl();\n    }\n\n    this.children_ = [];\n    this.childIndex_ = {};\n    this.childNameIndex_ = {};\n\n    // Add any child components in options\n    if (options.initChildren !== false) {\n      this.initChildren();\n    }\n\n    this.ready(ready);\n    // Don't want to trigger ready here or it will before init is actually\n    // finished for all children that run this constructor\n\n    if (options.reportTouchActivity !== false) {\n      this.enableTouchActivity();\n    }\n  }\n\n  /**\n   * Dispose of the `Component` and all child components.\n   *\n   * @fires Component#dispose\n   */\n\n\n  Component.prototype.dispose = function dispose() {\n\n    /**\n     * Triggered when a `Component` is disposed.\n     *\n     * @event Component#dispose\n     * @type {EventTarget~Event}\n     *\n     * @property {boolean} [bubbles=false]\n     *           set to false so that the close event does not\n     *           bubble up\n     */\n    this.trigger({ type: 'dispose', bubbles: false });\n\n    // Dispose all children.\n    if (this.children_) {\n      for (var i = this.children_.length - 1; i >= 0; i--) {\n        if (this.children_[i].dispose) {\n          this.children_[i].dispose();\n        }\n      }\n    }\n\n    // Delete child references\n    this.children_ = null;\n    this.childIndex_ = null;\n    this.childNameIndex_ = null;\n\n    // Remove all event listeners.\n    this.off();\n\n    // Remove element from DOM\n    if (this.el_.parentNode) {\n      this.el_.parentNode.removeChild(this.el_);\n    }\n\n    Dom.removeElData(this.el_);\n    this.el_ = null;\n  };\n\n  /**\n   * Return the {@link Player} that the `Component` has attached to.\n   *\n   * @return {Player}\n   *         The player that this `Component` has attached to.\n   */\n\n\n  Component.prototype.player = function player() {\n    return this.player_;\n  };\n\n  /**\n   * Deep merge of options objects with new options.\n   * > Note: When both `obj` and `options` contain properties whose values are objects.\n   *         The two properties get merged using {@link module:mergeOptions}\n   *\n   * Example\n   * ```js\n   *   var player = videojs('some-vid-id');\n   *   var Component = videojs.getComponent('Component');\n   *   var component = new Component(player, {\n   *     optionSet: {\n   *       childOne: {foo: 'bar', asdf: 'fdsa'},\n   *       childTwo: {},\n   *       childThree: {}\n   *     }\n   *   });\n   *\n   *   const newOptions = {\n   *     optionSet: {\n   *       childOne: {foo: 'baz', abc: '123'}\n   *       childTwo: null,\n   *       childFour: {}\n   *     }\n   *   };\n   *\n   *   console.log(component.options(newOptions));\n   * ```\n   *\n   * Result\n   * ```js\n   *   {\n   *     optionSet: {\n   *       childOne: {foo: 'baz', asdf: 'fdsa', abc: '123' },\n   *       childTwo: null,\n   *       childThree: {},\n   *       childFour: {}\n   *     }\n   *   }\n   * ```\n   *\n   * @param {Object} obj\n   *        The object that contains new options.\n   *\n   * @return {Object}\n   *         A new object of `this.options_` and `obj` merged together.\n   *\n   * @deprecated since version 5\n   */\n\n\n  Component.prototype.options = function options(obj) {\n    _log2['default'].warn('this.options() has been deprecated and will be moved to the constructor in 6.0');\n\n    if (!obj) {\n      return this.options_;\n    }\n\n    this.options_ = (0, _mergeOptions2['default'])(this.options_, obj);\n    return this.options_;\n  };\n\n  /**\n   * Get the `Component`s DOM element\n   *\n   * @return {Element}\n   *         The DOM element for this `Component`.\n   */\n\n\n  Component.prototype.el = function el() {\n    return this.el_;\n  };\n\n  /**\n   * Create the `Component`s DOM element.\n   *\n   * @param {string} [tagName]\n   *        Element's DOM node type. e.g. 'div'\n   *\n   * @param {Object} [properties]\n   *        An object of properties that should be set.\n   *\n   * @param {Object} [attributes]\n   *        An object of attributes that should be set.\n   *\n   * @return {Element}\n   *         The element that gets created.\n   */\n\n\n  Component.prototype.createEl = function createEl(tagName, properties, attributes) {\n    return Dom.createEl(tagName, properties, attributes);\n  };\n\n  /**\n   * Localize a string given the string in english.\n   *\n   * @param {string} string\n   *        The string to localize.\n   *\n   * @return {string}\n   *         The localized string or if no localization exists the english string.\n   */\n\n\n  Component.prototype.localize = function localize(string) {\n    var code = this.player_.language && this.player_.language();\n    var languages = this.player_.languages && this.player_.languages();\n\n    if (!code || !languages) {\n      return string;\n    }\n\n    var language = languages[code];\n\n    if (language && language[string]) {\n      return language[string];\n    }\n\n    var primaryCode = code.split('-')[0];\n    var primaryLang = languages[primaryCode];\n\n    if (primaryLang && primaryLang[string]) {\n      return primaryLang[string];\n    }\n\n    return string;\n  };\n\n  /**\n   * Return the `Component`s DOM element. This is where children get inserted.\n   * This will usually be the the same as the element returned in {@link Component#el}.\n   *\n   * @return {Element}\n   *         The content element for this `Component`.\n   */\n\n\n  Component.prototype.contentEl = function contentEl() {\n    return this.contentEl_ || this.el_;\n  };\n\n  /**\n   * Get this `Component`s ID\n   *\n   * @return {string}\n   *         The id of this `Component`\n   */\n\n\n  Component.prototype.id = function id() {\n    return this.id_;\n  };\n\n  /**\n   * Get the `Component`s name. The name gets used to reference the `Component`\n   * and is set during registration.\n   *\n   * @return {string}\n   *         The name of this `Component`.\n   */\n\n\n  Component.prototype.name = function name() {\n    return this.name_;\n  };\n\n  /**\n   * Get an array of all child components\n   *\n   * @return {Array}\n   *         The children\n   */\n\n\n  Component.prototype.children = function children() {\n    return this.children_;\n  };\n\n  /**\n   * Returns the child `Component` with the given `id`.\n   *\n   * @param {string} id\n   *        The id of the child `Component` to get.\n   *\n   * @return {Component|undefined}\n   *         The child `Component` with the given `id` or undefined.\n   */\n\n\n  Component.prototype.getChildById = function getChildById(id) {\n    return this.childIndex_[id];\n  };\n\n  /**\n   * Returns the child `Component` with the given `name`.\n   *\n   * @param {string} name\n   *        The name of the child `Component` to get.\n   *\n   * @return {Component|undefined}\n   *         The child `Component` with the given `name` or undefined.\n   */\n\n\n  Component.prototype.getChild = function getChild(name) {\n    if (!name) {\n      return;\n    }\n\n    name = (0, _toTitleCase2['default'])(name);\n\n    return this.childNameIndex_[name];\n  };\n\n  /**\n   * Add a child `Component` inside the current `Component`.\n   *\n   * Example:\n   * ```js\n   *   var player = videojs('some-vid-id');\n   *   var Component = videojs.getComponent('Component');\n   *   var myComponent = new Component(player);\n   *\n   *   console.log(myComponent.el());\n   *   // -> <div class='my-component'></div>\n   *   console.log(myComponent.children());\n   *   // [empty array]\n   *\n   *   var myButton = myComponent.addChild('MyButton');\n   *\n   *   console.log(myComponent.el());\n   *   // -> <div class='my-component'><div class=\"my-button\">myButton<div></div>\n   *   console.log(myComponent.children());\n   *   // -> myButton === myComponent.children()[0];\n   * ```\n   *\n   * Pass in options for child constructors and options for children of the child.\n   * ```js\n   *   var player = videojs('some-vid-id');\n   *   var Component = videojs.getComponent('Component');\n   *   var myComponent = new Component(player);\n   *   var myButton = myComponent.addChild('MyButton', {\n   *     text: 'Press Me',\n   *     buttonChildExample: {\n   *       buttonChildOption: true\n   *     }\n   *   });\n   * ```\n   *\n   * @param {string|Component} child\n   *        The name or instance of a child to add.\n   *\n   * @param {Object} [options={}]\n   *        The key/value store of options that will get passed to children of\n   *        the child.\n   *\n   * @param {number} [index=this.children_.length]\n   *        The index to attempt to add a child into.\n   *\n   * @return {Component}\n   *         The `Component` that gets added as a child. When using a string the\n   *         `Component` will get created by this process.\n   */\n\n\n  Component.prototype.addChild = function addChild(child) {\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    var index = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : this.children_.length;\n\n    var component = void 0;\n    var componentName = void 0;\n\n    // If child is a string, create component with options\n    if (typeof child === 'string') {\n      componentName = (0, _toTitleCase2['default'])(child);\n\n      // Options can also be specified as a boolean,\n      // so convert to an empty object if false.\n      if (!options) {\n        options = {};\n      }\n\n      // Same as above, but true is deprecated so show a warning.\n      if (options === true) {\n        _log2['default'].warn('Initializing a child component with `true` is deprecated.' + 'Children should be defined in an array when possible, ' + 'but if necessary use an object instead of `true`.');\n        options = {};\n      }\n\n      var componentClassName = options.componentClass || componentName;\n\n      // Set name through options\n      options.name = componentName;\n\n      // Create a new object & element for this controls set\n      // If there's no .player_, this is a player\n      var ComponentClass = Component.getComponent(componentClassName);\n\n      if (!ComponentClass) {\n        throw new Error('Component ' + componentClassName + ' does not exist');\n      }\n\n      // data stored directly on the videojs object may be\n      // misidentified as a component to retain\n      // backwards-compatibility with 4.x. check to make sure the\n      // component class can be instantiated.\n      if (typeof ComponentClass !== 'function') {\n        return null;\n      }\n\n      component = new ComponentClass(this.player_ || this, options);\n\n      // child is a component instance\n    } else {\n      component = child;\n    }\n\n    this.children_.splice(index, 0, component);\n\n    if (typeof component.id === 'function') {\n      this.childIndex_[component.id()] = component;\n    }\n\n    // If a name wasn't used to create the component, check if we can use the\n    // name function of the component\n    componentName = componentName || component.name && component.name();\n\n    if (componentName) {\n      this.childNameIndex_[componentName] = component;\n    }\n\n    // Add the UI object's element to the container div (box)\n    // Having an element is not required\n    if (typeof component.el === 'function' && component.el()) {\n      var childNodes = this.contentEl().children;\n      var refNode = childNodes[index] || null;\n\n      this.contentEl().insertBefore(component.el(), refNode);\n    }\n\n    // Return so it can stored on parent object if desired.\n    return component;\n  };\n\n  /**\n   * Remove a child `Component` from this `Component`s list of children. Also removes\n   * the child `Component`s element from this `Component`s element.\n   *\n   * @param {Component} component\n   *        The child `Component` to remove.\n   */\n\n\n  Component.prototype.removeChild = function removeChild(component) {\n    if (typeof component === 'string') {\n      component = this.getChild(component);\n    }\n\n    if (!component || !this.children_) {\n      return;\n    }\n\n    var childFound = false;\n\n    for (var i = this.children_.length - 1; i >= 0; i--) {\n      if (this.children_[i] === component) {\n        childFound = true;\n        this.children_.splice(i, 1);\n        break;\n      }\n    }\n\n    if (!childFound) {\n      return;\n    }\n\n    this.childIndex_[component.id()] = null;\n    this.childNameIndex_[component.name()] = null;\n\n    var compEl = component.el();\n\n    if (compEl && compEl.parentNode === this.contentEl()) {\n      this.contentEl().removeChild(component.el());\n    }\n  };\n\n  /**\n   * Add and initialize default child `Component`s based upon options.\n   *\n   * Example.\n   * ```js\n   *   var MyComponent = videojs.extend(videojs.getComponent('Component'));\n   *   // when an instance of MyComponent is created, all children in options\n   *   // will be added to the instance by their name strings and options\n   *   MyComponent.prototype.options_ = {\n   *     children: [\n   *       'myChildComponent'\n   *     ],\n   *     myChildComponent: {\n   *       myChildOption: true\n   *     }\n   *   };\n   *\n   *   // Or when creating the component\n   *   var player = videojs('some-player-id');\n   *   var myComp = new MyComponent(player, {\n   *     children: [\n   *       'myChildComponent'\n   *     ],\n   *     myChildComponent: {\n   *       myChildOption: true\n   *     }\n   *   });\n   * ```\n   *\n   * The children option can also be an array of child options objects\n   * (that also include a 'name' key). This will get used if you have two child\n   * components of the same type that need different options.\n   * ```js\n   *   // MyComponent is from the above example\n   *   var myComp = new MyComponent(player, {\n   *     children: ['button', {\n   *       name: 'button',\n   *       someOtherOption: true\n   *     }, {\n   *       name: 'button',\n   *       someOtherOption: false\n   *     }]\n   *   });\n   * ```\n   */\n\n\n  Component.prototype.initChildren = function initChildren() {\n    var _this = this;\n\n    var children = this.options_.children;\n\n    if (children) {\n      (function () {\n        // `this` is `parent`\n        var parentOptions = _this.options_;\n\n        var handleAdd = function handleAdd(child) {\n          var name = child.name;\n          var opts = child.opts;\n\n          // Allow options for children to be set at the parent options\n          // e.g. videojs(id, { controlBar: false });\n          // instead of videojs(id, { children: { controlBar: false });\n          if (parentOptions[name] !== undefined) {\n            opts = parentOptions[name];\n          }\n\n          // Allow for disabling default components\n          // e.g. options['children']['posterImage'] = false\n          if (opts === false) {\n            return;\n          }\n\n          // Allow options to be passed as a simple boolean if no configuration\n          // is necessary.\n          if (opts === true) {\n            opts = {};\n          }\n\n          // We also want to pass the original player options\n          // to each component as well so they don't need to\n          // reach back into the player for options later.\n          opts.playerOptions = _this.options_.playerOptions;\n\n          // Create and add the child component.\n          // Add a direct reference to the child by name on the parent instance.\n          // If two of the same component are used, different names should be supplied\n          // for each\n          var newChild = _this.addChild(name, opts);\n\n          if (newChild) {\n            _this[name] = newChild;\n          }\n        };\n\n        // Allow for an array of children details to passed in the options\n        var workingChildren = void 0;\n        var Tech = Component.getComponent('Tech');\n\n        if (Array.isArray(children)) {\n          workingChildren = children;\n        } else {\n          workingChildren = Object.keys(children);\n        }\n\n        workingChildren\n        // children that are in this.options_ but also in workingChildren  would\n        // give us extra children we do not want. So, we want to filter them out.\n        .concat(Object.keys(_this.options_).filter(function (child) {\n          return !workingChildren.some(function (wchild) {\n            if (typeof wchild === 'string') {\n              return child === wchild;\n            }\n            return child === wchild.name;\n          });\n        })).map(function (child) {\n          var name = void 0;\n          var opts = void 0;\n\n          if (typeof child === 'string') {\n            name = child;\n            opts = children[name] || _this.options_[name] || {};\n          } else {\n            name = child.name;\n            opts = child;\n          }\n\n          return { name: name, opts: opts };\n        }).filter(function (child) {\n          // we have to make sure that child.name isn't in the techOrder since\n          // techs are registerd as Components but can't aren't compatible\n          // See https://github.com/videojs/video.js/issues/2772\n          var c = Component.getComponent(child.opts.componentClass || (0, _toTitleCase2['default'])(child.name));\n\n          return c && !Tech.isTech(c);\n        }).forEach(handleAdd);\n      })();\n    }\n  };\n\n  /**\n   * Builds the default DOM class name. Should be overriden by sub-components.\n   *\n   * @return {string}\n   *         The DOM class name for this object.\n   *\n   * @abstract\n   */\n\n\n  Component.prototype.buildCSSClass = function buildCSSClass() {\n    // Child classes can include a function that does:\n    // return 'CLASS NAME' + this._super();\n    return '';\n  };\n\n  /**\n   * Add an `event listener` to this `Component`s element.\n   *\n   * ```js\n   *   var player = videojs('some-player-id');\n   *   var Component = videojs.getComponent('Component');\n   *   var myComponent = new Component(player);\n   *   var myFunc = function() {\n   *     var myComponent = this;\n   *     console.log('myFunc called');\n   *   };\n   *\n   *   myComponent.on('eventType', myFunc);\n   *   myComponent.trigger('eventType');\n   *   // logs 'myFunc called'\n   * ```\n   *\n   * The context of `myFunc` will be `myComponent` unless it is bound. You can add\n   * a listener to another element or component.\n   * ```js\n   *   var otherComponent = new Component(player);\n   *\n   *   // myComponent/myFunc is from the above example\n   *   myComponent.on(otherComponent.el(), 'eventName', myFunc);\n   *   myComponent.on(otherComponent, 'eventName', myFunc);\n   *\n   *   otherComponent.trigger('eventName');\n   *   // logs 'myFunc called' twice\n   * ```\n   *\n   * The benefit of using this over the following:\n   * - `VjsEvents.on(otherElement, 'eventName', myFunc)`\n   * - `otherComponent.on('eventName', myFunc)`\n   * Is that the listeners will get cleaned up when either component gets disposed.\n   * It will also bind `myComponent` as the context of `myFunc`.\n   * > NOTE: If you remove the element from the DOM that has used `on` you need to\n   *             clean up references using:\n   *\n   *             `myComponent.trigger(el, 'dispose')`\n   *\n   *             This will also allow the browser to garbage collect it. In special\n   *             cases such as with `window` and `document`, which are both permanent,\n   *             this is not necessary.\n   *\n   * @param {string|Component|string[]} [first]\n   *        The event name, and array of event names, or another `Component`.\n   *\n   * @param {EventTarget~EventListener|string|string[]} [second]\n   *        The listener function, an event name, or an Array of events names.\n   *\n   * @param {EventTarget~EventListener} [third]\n   *        The event handler if `first` is a `Component` and `second` is an event name\n   *        or an Array of event names.\n   *\n   * @return {Component}\n   *         Returns itself; method can be chained.\n   *\n   * @listens Component#dispose\n   */\n\n\n  Component.prototype.on = function on(first, second, third) {\n    var _this2 = this;\n\n    if (typeof first === 'string' || Array.isArray(first)) {\n      Events.on(this.el_, first, Fn.bind(this, second));\n\n      // Targeting another component or element\n    } else {\n      (function () {\n        var target = first;\n        var type = second;\n        var fn = Fn.bind(_this2, third);\n\n        // When this component is disposed, remove the listener from the other component\n        var removeOnDispose = function removeOnDispose() {\n          return _this2.off(target, type, fn);\n        };\n\n        // Use the same function ID so we can remove it later it using the ID\n        // of the original listener\n        removeOnDispose.guid = fn.guid;\n        _this2.on('dispose', removeOnDispose);\n\n        // If the other component is disposed first we need to clean the reference\n        // to the other component in this component's removeOnDispose listener\n        // Otherwise we create a memory leak.\n        var cleanRemover = function cleanRemover() {\n          return _this2.off('dispose', removeOnDispose);\n        };\n\n        // Add the same function ID so we can easily remove it later\n        cleanRemover.guid = fn.guid;\n\n        // Check if this is a DOM node\n        if (first.nodeName) {\n          // Add the listener to the other element\n          Events.on(target, type, fn);\n          Events.on(target, 'dispose', cleanRemover);\n\n          // Should be a component\n          // Not using `instanceof Component` because it makes mock players difficult\n        } else if (typeof first.on === 'function') {\n          // Add the listener to the other component\n          target.on(type, fn);\n          target.on('dispose', cleanRemover);\n        }\n      })();\n    }\n\n    return this;\n  };\n\n  /**\n   * Remove an event listener from this `Component`s element.\n   * ```js\n   *   var player = videojs('some-player-id');\n   *   var Component = videojs.getComponent('Component');\n   *   var myComponent = new Component(player);\n   *   var myFunc = function() {\n   *     var myComponent = this;\n   *     console.log('myFunc called');\n   *   };\n   *   myComponent.on('eventType', myFunc);\n   *   myComponent.trigger('eventType');\n   *   // logs 'myFunc called'\n   *\n   *   myComponent.off('eventType', myFunc);\n   *   myComponent.trigger('eventType');\n   *   // does nothing\n   * ```\n   *\n   * If myFunc gets excluded, ALL listeners for the event type will get removed. If\n   * eventType gets excluded, ALL listeners will get removed from the component.\n   * You can use `off` to remove listeners that get added to other elements or\n   * components using:\n   *\n   *  `myComponent.on(otherComponent...`\n   *\n   * In this case both the event type and listener function are **REQUIRED**.\n   *\n   * ```js\n   *   var otherComponent = new Component(player);\n   *\n   *   // myComponent/myFunc is from the above example\n   *   myComponent.on(otherComponent.el(), 'eventName', myFunc);\n   *   myComponent.on(otherComponent, 'eventName', myFunc);\n   *\n   *   otherComponent.trigger('eventName');\n   *   // logs 'myFunc called' twice\n   *   myComponent.off(ootherComponent.el(), 'eventName', myFunc);\n   *   myComponent.off(otherComponent, 'eventName', myFunc);\n   *   otherComponent.trigger('eventName');\n   *   // does nothing\n   * ```\n   *\n   * @param {string|Component|string[]} [first]\n   *        The event name, and array of event names, or another `Component`.\n   *\n   * @param {EventTarget~EventListener|string|string[]} [second]\n   *        The listener function, an event name, or an Array of events names.\n   *\n   * @param {EventTarget~EventListener} [third]\n   *        The event handler if `first` is a `Component` and `second` is an event name\n   *        or an Array of event names.\n   *\n   * @return {Component}\n   *         Returns itself; method can be chained.\n   */\n\n\n  Component.prototype.off = function off(first, second, third) {\n    if (!first || typeof first === 'string' || Array.isArray(first)) {\n      Events.off(this.el_, first, second);\n    } else {\n      var target = first;\n      var type = second;\n      // Ensure there's at least a guid, even if the function hasn't been used\n      var fn = Fn.bind(this, third);\n\n      // Remove the dispose listener on this component,\n      // which was given the same guid as the event listener\n      this.off('dispose', fn);\n\n      if (first.nodeName) {\n        // Remove the listener\n        Events.off(target, type, fn);\n        // Remove the listener for cleaning the dispose listener\n        Events.off(target, 'dispose', fn);\n      } else {\n        target.off(type, fn);\n        target.off('dispose', fn);\n      }\n    }\n\n    return this;\n  };\n\n  /**\n   * Add an event listener that gets triggered only once and then gets removed.\n   * ```js\n   *   var player = videojs('some-player-id');\n   *   var Component = videojs.getComponent('Component');\n   *   var myComponent = new Component(player);\n   *   var myFunc = function() {\n   *     var myComponent = this;\n   *     console.log('myFunc called');\n   *   };\n   *   myComponent.one('eventName', myFunc);\n   *   myComponent.trigger('eventName');\n   *   // logs 'myFunc called'\n   *\n   *   myComponent.trigger('eventName');\n   *   // does nothing\n   *\n   * ```\n   *\n   * You can also add a listener to another element or component that will get\n   * triggered only once.\n   * ```js\n   *   var otherComponent = new Component(player);\n   *\n   *   // myComponent/myFunc is from the above example\n   *   myComponent.one(otherComponent.el(), 'eventName', myFunc);\n   *   myComponent.one(otherComponent, 'eventName', myFunc);\n   *\n   *   otherComponent.trigger('eventName');\n   *   // logs 'myFunc called' twice\n   *\n   *   otherComponent.trigger('eventName');\n   *   // does nothing\n   * ```\n   *\n   * @param {string|Component|string[]} [first]\n   *        The event name, and array of event names, or another `Component`.\n   *\n   * @param {EventTarget~EventListener|string|string[]} [second]\n   *        The listener function, an event name, or an Array of events names.\n   *\n   * @param {EventTarget~EventListener} [third]\n   *        The event handler if `first` is a `Component` and `second` is an event name\n   *        or an Array of event names.\n   *\n   * @return {Component}\n   *         Returns itself; method can be chained.\n   */\n\n\n  Component.prototype.one = function one(first, second, third) {\n    var _this3 = this,\n        _arguments = arguments;\n\n    if (typeof first === 'string' || Array.isArray(first)) {\n      Events.one(this.el_, first, Fn.bind(this, second));\n    } else {\n      (function () {\n        var target = first;\n        var type = second;\n        var fn = Fn.bind(_this3, third);\n\n        var newFunc = function newFunc() {\n          _this3.off(target, type, newFunc);\n          fn.apply(null, _arguments);\n        };\n\n        // Keep the same function ID so we can remove it later\n        newFunc.guid = fn.guid;\n\n        _this3.on(target, type, newFunc);\n      })();\n    }\n\n    return this;\n  };\n\n  /**\n   * Trigger an event on an element.\n   *\n   * ```js\n   *   var player = videojs('some-player-id');\n   *   var Component = videojs.getComponent('Component');\n   *   var myComponent = new Component(player);\n   *   var myFunc = function(data) {\n   *     var myComponent = this;\n   *     console.log('myFunc called');\n   *     console.log(data);\n   *   };\n   *   myComponent.one('eventName', myFunc);\n   *   myComponent.trigger('eventName');\n   *   // logs 'myFunc called' and 'undefined'\n   *\n   *   myComponent.trigger({'type':'eventName'});\n   *   // logs 'myFunc called' and 'undefined'\n   *\n   *   myComponent.trigger('eventName', {data: 'some data'});\n   *   // logs 'myFunc called' and \"{data: 'some data'}\"\n   *\n   *   myComponent.trigger({'type':'eventName'}, {data: 'some data'});\n   *   // logs 'myFunc called' and \"{data: 'some data'}\"\n   * ```\n   *\n   * @param {EventTarget~Event|Object|string} event\n   *        The event name, and Event, or an event-like object with a type attribute\n   *        set to the event name.\n   *\n   * @param {Object} [hash]\n   *        Data hash to pass along with the event\n   *\n   * @return {Component}\n   *         Returns itself; method can be chained.\n   */\n\n\n  Component.prototype.trigger = function trigger(event, hash) {\n    Events.trigger(this.el_, event, hash);\n    return this;\n  };\n\n  /**\n   * Bind a listener to the component's ready state. If the ready event has already\n   * happened it will trigger the function immediately.\n   *\n   * @param  {Component~ReadyCallback} fn\n   *         A function to call when ready is triggered.\n   *\n   * @param  {boolean} [sync=false]\n   *         Execute the listener synchronously if `Component` is ready.\n   *\n   * @return {Component}\n   *         Returns itself; method can be chained.\n   */\n\n\n  Component.prototype.ready = function ready(fn) {\n    var sync = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n\n    if (fn) {\n      if (this.isReady_) {\n        if (sync) {\n          fn.call(this);\n        } else {\n          // Call the function asynchronously by default for consistency\n          this.setTimeout(fn, 1);\n        }\n      } else {\n        this.readyQueue_ = this.readyQueue_ || [];\n        this.readyQueue_.push(fn);\n      }\n    }\n    return this;\n  };\n\n  /**\n   * Trigger all the ready listeners for this `Component`.\n   *\n   * @fires Component#ready\n   */\n\n\n  Component.prototype.triggerReady = function triggerReady() {\n    this.isReady_ = true;\n\n    // Ensure ready is triggerd asynchronously\n    this.setTimeout(function () {\n      var readyQueue = this.readyQueue_;\n\n      // Reset Ready Queue\n      this.readyQueue_ = [];\n\n      if (readyQueue && readyQueue.length > 0) {\n        readyQueue.forEach(function (fn) {\n          fn.call(this);\n        }, this);\n      }\n\n      // Allow for using event listeners also\n      /**\n       * Triggered when a `Component` is ready.\n       *\n       * @event Component#ready\n       * @type {EventTarget~Event}\n       */\n      this.trigger('ready');\n    }, 1);\n  };\n\n  /**\n   * Find a single DOM element matching a `selector`. This can be within the `Component`s\n   * `contentEl()` or another custom context.\n   *\n   * @param {string} selector\n   *        A valid CSS selector, which will be passed to `querySelector`.\n   *\n   * @param {Element|string} [context=this.contentEl()]\n   *        A DOM element within which to query. Can also be a selector string in\n   *        which case the first matching element will get used as context. If\n   *        missing `this.contentEl()` gets used. If  `this.contentEl()` returns\n   *        nothing it falls back to `document`.\n   *\n   * @return {Element|null}\n   *         the dom element that was found, or null\n   *\n   * @see [Information on CSS Selectors](https://developer.mozilla.org/en-US/docs/Web/Guide/CSS/Getting_Started/Selectors)\n   */\n\n\n  Component.prototype.$ = function $(selector, context) {\n    return Dom.$(selector, context || this.contentEl());\n  };\n\n  /**\n   * Finds all DOM element matching a `selector`. This can be within the `Component`s\n   * `contentEl()` or another custom context.\n   *\n   * @param {string} selector\n   *        A valid CSS selector, which will be passed to `querySelectorAll`.\n   *\n   * @param {Element|string} [context=this.contentEl()]\n   *        A DOM element within which to query. Can also be a selector string in\n   *        which case the first matching element will get used as context. If\n   *        missing `this.contentEl()` gets used. If  `this.contentEl()` returns\n   *        nothing it falls back to `document`.\n   *\n   * @return {NodeList}\n   *         a list of dom elements that were found\n   *\n   * @see [Information on CSS Selectors](https://developer.mozilla.org/en-US/docs/Web/Guide/CSS/Getting_Started/Selectors)\n   */\n\n\n  Component.prototype.$$ = function $$(selector, context) {\n    return Dom.$$(selector, context || this.contentEl());\n  };\n\n  /**\n   * Check if a component's element has a CSS class name.\n   *\n   * @param {string} classToCheck\n   *        CSS class name to check.\n   *\n   * @return {boolean}\n   *         - True if the `Component` has the class.\n   *         - False if the `Component` does not have the class`\n   */\n\n\n  Component.prototype.hasClass = function hasClass(classToCheck) {\n    return Dom.hasElClass(this.el_, classToCheck);\n  };\n\n  /**\n   * Add a CSS class name to the `Component`s element.\n   *\n   * @param {string} classToAdd\n   *        CSS class name to add\n   *\n   * @return {Component}\n   *         Returns itself; method can be chained.\n   */\n\n\n  Component.prototype.addClass = function addClass(classToAdd) {\n    Dom.addElClass(this.el_, classToAdd);\n    return this;\n  };\n\n  /**\n   * Remove a CSS class name from the `Component`s element.\n   *\n   * @param {string} classToRemove\n   *        CSS class name to remove\n   *\n   * @return {Component}\n   *         Returns itself; method can be chained.\n   */\n\n\n  Component.prototype.removeClass = function removeClass(classToRemove) {\n    Dom.removeElClass(this.el_, classToRemove);\n    return this;\n  };\n\n  /**\n   * Add or remove a CSS class name from the component's element.\n   * - `classToToggle` gets added when {@link Component#hasClass} would return false.\n   * - `classToToggle` gets removed when {@link Component#hasClass} would return true.\n   *\n   * @param  {string} classToToggle\n   *         The class to add or remove based on (@link Component#hasClass}\n   *\n   * @param  {boolean|Dom~predicate} [predicate]\n   *         An {@link Dom~predicate} function or a boolean\n   *\n   * @return {Component}\n   *         Returns itself; method can be chained.\n   */\n\n\n  Component.prototype.toggleClass = function toggleClass(classToToggle, predicate) {\n    Dom.toggleElClass(this.el_, classToToggle, predicate);\n    return this;\n  };\n\n  /**\n   * Show the `Component`s element if it is hidden by removing the\n   * 'vjs-hidden' class name from it.\n   *\n   * @return {Component}\n   *         Returns itself; method can be chained.\n   */\n\n\n  Component.prototype.show = function show() {\n    this.removeClass('vjs-hidden');\n    return this;\n  };\n\n  /**\n   * Hide the `Component`s element if it is currently showing by adding the\n   * 'vjs-hidden` class name to it.\n   *\n   * @return {Component}\n   *         Returns itself; method can be chained.\n   */\n\n\n  Component.prototype.hide = function hide() {\n    this.addClass('vjs-hidden');\n    return this;\n  };\n\n  /**\n   * Lock a `Component`s element in its visible state by adding the 'vjs-lock-showing'\n   * class name to it. Used during fadeIn/fadeOut.\n   *\n   * @return {Component}\n   *         Returns itself; method can be chained.\n   *\n   * @private\n   */\n\n\n  Component.prototype.lockShowing = function lockShowing() {\n    this.addClass('vjs-lock-showing');\n    return this;\n  };\n\n  /**\n   * Unlock a `Component`s element from its visible state by removing the 'vjs-lock-showing'\n   * class name from it. Used during fadeIn/fadeOut.\n   *\n   * @return {Component}\n   *         Returns itself; method can be chained.\n   *\n   * @private\n   */\n\n\n  Component.prototype.unlockShowing = function unlockShowing() {\n    this.removeClass('vjs-lock-showing');\n    return this;\n  };\n\n  /**\n   * Get the value of an attribute on the `Component`s element.\n   *\n   * @param {string} attribute\n   *        Name of the attribute to get the value from.\n   *\n   * @return {string|null}\n   *         - The value of the attribute that was asked for.\n   *         - Can be an empty string on some browsers if the attribute does not exist\n   *           or has no value\n   *         - Most browsers will return null if the attibute does not exist or has\n   *           no value.\n   *\n   * @see [DOM API]{@link https://developer.mozilla.org/en-US/docs/Web/API/Element/getAttribute}\n   */\n\n\n  Component.prototype.getAttribute = function getAttribute(attribute) {\n    return Dom.getAttribute(this.el_, attribute);\n  };\n\n  /**\n   * Set the value of an attribute on the `Component`'s element\n   *\n   * @param {string} attribute\n   *        Name of the attribute to set.\n   *\n   * @param {string} value\n   *        Value to set the attribute to.\n   *\n   * @return {Component}\n   *         Returns itself; method can be chained.\n   *\n   * @see [DOM API]{@link https://developer.mozilla.org/en-US/docs/Web/API/Element/setAttribute}\n   */\n\n\n  Component.prototype.setAttribute = function setAttribute(attribute, value) {\n    Dom.setAttribute(this.el_, attribute, value);\n    return this;\n  };\n\n  /**\n   * Remove an attribute from the `Component`s element.\n   *\n   * @param {string} attribute\n   *        Name of the attribute to remove.\n   *\n   * @return {Component}\n   *         Returns itself; method can be chained.\n   *\n   * @see [DOM API]{@link https://developer.mozilla.org/en-US/docs/Web/API/Element/removeAttribute}\n   */\n\n\n  Component.prototype.removeAttribute = function removeAttribute(attribute) {\n    Dom.removeAttribute(this.el_, attribute);\n    return this;\n  };\n\n  /**\n   * Get or set the width of the component based upon the CSS styles.\n   * See {@link Component#dimension} for more detailed information.\n   *\n   * @param {number|string} [num]\n   *        The width that you want to set postfixed with '%', 'px' or nothing.\n   *\n   * @param {boolean} [skipListeners]\n   *        Skip the resize event trigger\n   *\n   * @return {Component|number|string}\n   *         - The width when getting, zero if there is no width. Can be a string\n   *           postpixed with '%' or 'px'.\n   *         - Returns itself when setting; method can be chained.\n   */\n\n\n  Component.prototype.width = function width(num, skipListeners) {\n    return this.dimension('width', num, skipListeners);\n  };\n\n  /**\n   * Get or set the height of the component based upon the CSS styles.\n   * See {@link Component#dimension} for more detailed information.\n   *\n   * @param {number|string} [num]\n   *        The height that you want to set postfixed with '%', 'px' or nothing.\n   *\n   * @param {boolean} [skipListeners]\n   *        Skip the resize event trigger\n   *\n   * @return {Component|number|string}\n   *         - The width when getting, zero if there is no width. Can be a string\n   *           postpixed with '%' or 'px'.\n   *         - Returns itself when setting; method can be chained.\n   */\n\n\n  Component.prototype.height = function height(num, skipListeners) {\n    return this.dimension('height', num, skipListeners);\n  };\n\n  /**\n   * Set both the width and height of the `Component` element at the same time.\n   *\n   * @param  {number|string} width\n   *         Width to set the `Component`s element to.\n   *\n   * @param  {number|string} height\n   *         Height to set the `Component`s element to.\n   *\n   * @return {Component}\n   *         Returns itself; method can be chained.\n   */\n\n\n  Component.prototype.dimensions = function dimensions(width, height) {\n    // Skip resize listeners on width for optimization\n    return this.width(width, true).height(height);\n  };\n\n  /**\n   * Get or set width or height of the `Component` element. This is the shared code\n   * for the {@link Component#width} and {@link Component#height}.\n   *\n   * Things to know:\n   * - If the width or height in an number this will return the number postfixed with 'px'.\n   * - If the width/height is a percent this will return the percent postfixed with '%'\n   * - Hidden elements have a width of 0 with `window.getComputedStyle`. This function\n   *   defaults to the `Component`s `style.width` and falls back to `window.getComputedStyle`.\n   *   See [this]{@link http://www.foliotek.com/devblog/getting-the-width-of-a-hidden-element-with-jquery-using-width/}\n   *   for more information\n   * - If you want the computed style of the component, use {@link Component#currentWidth}\n   *   and {@link {Component#currentHeight}\n   *\n   * @fires Component#resize\n   *\n   * @param {string} widthOrHeight\n   8        'width' or 'height'\n   *\n   * @param  {number|string} [num]\n   8         New dimension\n   *\n   * @param  {boolean} [skipListeners]\n   *         Skip resize event trigger\n   *\n   * @return {Component}\n   *         - the dimension when getting or 0 if unset\n   *         - Returns itself when setting; method can be chained.\n   */\n\n\n  Component.prototype.dimension = function dimension(widthOrHeight, num, skipListeners) {\n    if (num !== undefined) {\n      // Set to zero if null or literally NaN (NaN !== NaN)\n      if (num === null || num !== num) {\n        num = 0;\n      }\n\n      // Check if using css width/height (% or px) and adjust\n      if (('' + num).indexOf('%') !== -1 || ('' + num).indexOf('px') !== -1) {\n        this.el_.style[widthOrHeight] = num;\n      } else if (num === 'auto') {\n        this.el_.style[widthOrHeight] = '';\n      } else {\n        this.el_.style[widthOrHeight] = num + 'px';\n      }\n\n      // skipListeners allows us to avoid triggering the resize event when setting both width and height\n      if (!skipListeners) {\n        /**\n         * Triggered when a component is resized.\n         *\n         * @event Component#resize\n         * @type {EventTarget~Event}\n         */\n        this.trigger('resize');\n      }\n\n      // Return component\n      return this;\n    }\n\n    // Not setting a value, so getting it\n    // Make sure element exists\n    if (!this.el_) {\n      return 0;\n    }\n\n    // Get dimension value from style\n    var val = this.el_.style[widthOrHeight];\n    var pxIndex = val.indexOf('px');\n\n    if (pxIndex !== -1) {\n      // Return the pixel value with no 'px'\n      return parseInt(val.slice(0, pxIndex), 10);\n    }\n\n    // No px so using % or no style was set, so falling back to offsetWidth/height\n    // If component has display:none, offset will return 0\n    // TODO: handle display:none and no dimension style using px\n    return parseInt(this.el_['offset' + (0, _toTitleCase2['default'])(widthOrHeight)], 10);\n  };\n\n  /**\n   * Get the width or the height of the `Component` elements computed style. Uses\n   * `window.getComputedStyle`.\n   *\n   * @param {string} widthOrHeight\n   *        A string containing 'width' or 'height'. Whichever one you want to get.\n   *\n   * @return {number}\n   *         The dimension that gets asked for or 0 if nothing was set\n   *         for that dimension.\n   */\n\n\n  Component.prototype.currentDimension = function currentDimension(widthOrHeight) {\n    var computedWidthOrHeight = 0;\n\n    if (widthOrHeight !== 'width' && widthOrHeight !== 'height') {\n      throw new Error('currentDimension only accepts width or height value');\n    }\n\n    if (typeof _window2['default'].getComputedStyle === 'function') {\n      var computedStyle = _window2['default'].getComputedStyle(this.el_);\n\n      computedWidthOrHeight = computedStyle.getPropertyValue(widthOrHeight) || computedStyle[widthOrHeight];\n    }\n\n    // remove 'px' from variable and parse as integer\n    computedWidthOrHeight = parseFloat(computedWidthOrHeight);\n\n    // if the computed value is still 0, it's possible that the browser is lying\n    // and we want to check the offset values.\n    // This code also runs on IE8 and wherever getComputedStyle doesn't exist.\n    if (computedWidthOrHeight === 0) {\n      var rule = 'offset' + (0, _toTitleCase2['default'])(widthOrHeight);\n\n      computedWidthOrHeight = this.el_[rule];\n    }\n\n    return computedWidthOrHeight;\n  };\n\n  /**\n   * An object that contains width and height values of the `Component`s\n   * computed style. Uses `window.getComputedStyle`.\n   *\n   * @typedef {Object} Component~DimensionObject\n   *\n   * @property {number} width\n   *           The width of the `Component`s computed style.\n   *\n   * @property {number} height\n   *           The height of the `Component`s computed style.\n   */\n\n  /**\n   * Get an object that contains width and height values of the `Component`s\n   * computed style.\n   *\n   * @return {Component~DimensionObject}\n   *         The dimensions of the components element\n   */\n\n\n  Component.prototype.currentDimensions = function currentDimensions() {\n    return {\n      width: this.currentDimension('width'),\n      height: this.currentDimension('height')\n    };\n  };\n\n  /**\n   * Get the width of the `Component`s computed style. Uses `window.getComputedStyle`.\n   *\n   * @return {number} width\n   *           The width of the `Component`s computed style.\n   */\n\n\n  Component.prototype.currentWidth = function currentWidth() {\n    return this.currentDimension('width');\n  };\n\n  /**\n   * Get the height of the `Component`s computed style. Uses `window.getComputedStyle`.\n   *\n   * @return {number} height\n   *           The height of the `Component`s computed style.\n   */\n\n\n  Component.prototype.currentHeight = function currentHeight() {\n    return this.currentDimension('height');\n  };\n\n  /**\n   * Emit a 'tap' events when touch event support gets detected. This gets used to\n   * support toggling the controls through a tap on the video. They get enabled\n   * because every sub-component would have extra overhead otherwise.\n   *\n   * @private\n   * @fires Component#tap\n   * @listens Component#touchstart\n   * @listens Component#touchmove\n   * @listens Component#touchleave\n   * @listens Component#touchcancel\n   * @listens Component#touchend\n    */\n\n\n  Component.prototype.emitTapEvents = function emitTapEvents() {\n    // Track the start time so we can determine how long the touch lasted\n    var touchStart = 0;\n    var firstTouch = null;\n\n    // Maximum movement allowed during a touch event to still be considered a tap\n    // Other popular libs use anywhere from 2 (hammer.js) to 15,\n    // so 10 seems like a nice, round number.\n    var tapMovementThreshold = 10;\n\n    // The maximum length a touch can be while still being considered a tap\n    var touchTimeThreshold = 200;\n\n    var couldBeTap = void 0;\n\n    this.on('touchstart', function (event) {\n      // If more than one finger, don't consider treating this as a click\n      if (event.touches.length === 1) {\n        // Copy pageX/pageY from the object\n        firstTouch = {\n          pageX: event.touches[0].pageX,\n          pageY: event.touches[0].pageY\n        };\n        // Record start time so we can detect a tap vs. \"touch and hold\"\n        touchStart = new Date().getTime();\n        // Reset couldBeTap tracking\n        couldBeTap = true;\n      }\n    });\n\n    this.on('touchmove', function (event) {\n      // If more than one finger, don't consider treating this as a click\n      if (event.touches.length > 1) {\n        couldBeTap = false;\n      } else if (firstTouch) {\n        // Some devices will throw touchmoves for all but the slightest of taps.\n        // So, if we moved only a small distance, this could still be a tap\n        var xdiff = event.touches[0].pageX - firstTouch.pageX;\n        var ydiff = event.touches[0].pageY - firstTouch.pageY;\n        var touchDistance = Math.sqrt(xdiff * xdiff + ydiff * ydiff);\n\n        if (touchDistance > tapMovementThreshold) {\n          couldBeTap = false;\n        }\n      }\n    });\n\n    var noTap = function noTap() {\n      couldBeTap = false;\n    };\n\n    // TODO: Listen to the original target. http://youtu.be/DujfpXOKUp8?t=13m8s\n    this.on('touchleave', noTap);\n    this.on('touchcancel', noTap);\n\n    // When the touch ends, measure how long it took and trigger the appropriate\n    // event\n    this.on('touchend', function (event) {\n      firstTouch = null;\n      // Proceed only if the touchmove/leave/cancel event didn't happen\n      if (couldBeTap === true) {\n        // Measure how long the touch lasted\n        var touchTime = new Date().getTime() - touchStart;\n\n        // Make sure the touch was less than the threshold to be considered a tap\n        if (touchTime < touchTimeThreshold) {\n          // Don't let browser turn this into a click\n          event.preventDefault();\n          /**\n           * Triggered when a `Component` is tapped.\n           *\n           * @event Component#tap\n           * @type {EventTarget~Event}\n           */\n          this.trigger('tap');\n          // It may be good to copy the touchend event object and change the\n          // type to tap, if the other event properties aren't exact after\n          // Events.fixEvent runs (e.g. event.target)\n        }\n      }\n    });\n  };\n\n  /**\n   * This function reports user activity whenever touch events happen. This can get\n   * turned off by any sub-components that wants touch events to act another way.\n   *\n   * Report user touch activity when touch events occur. User activity gets used to\n   * determine when controls should show/hide. It is simple when it comes to mouse\n   * events, because any mouse event should show the controls. So we capture mouse\n   * events that bubble up to the player and report activity when that happens.\n   * With touch events it isn't as easy as `touchstart` and `touchend` toggle player\n   * controls. So touch events can't help us at the player level either.\n   *\n   * User activity gets checked asynchronously. So what could happen is a tap event\n   * on the video turns the controls off. Then the `touchend` event bubbles up to\n   * the player. Which, if it reported user activity, would turn the controls right\n   * back on. We also don't want to completely block touch events from bubbling up.\n   * Furthermore a `touchmove` event and anything other than a tap, should not turn\n   * controls back on.\n   *\n   * @listens Component#touchstart\n   * @listens Component#touchmove\n   * @listens Component#touchend\n   * @listens Component#touchcancel\n   */\n\n\n  Component.prototype.enableTouchActivity = function enableTouchActivity() {\n    // Don't continue if the root player doesn't support reporting user activity\n    if (!this.player() || !this.player().reportUserActivity) {\n      return;\n    }\n\n    // listener for reporting that the user is active\n    var report = Fn.bind(this.player(), this.player().reportUserActivity);\n\n    var touchHolding = void 0;\n\n    this.on('touchstart', function () {\n      report();\n      // For as long as the they are touching the device or have their mouse down,\n      // we consider them active even if they're not moving their finger or mouse.\n      // So we want to continue to update that they are active\n      this.clearInterval(touchHolding);\n      // report at the same interval as activityCheck\n      touchHolding = this.setInterval(report, 250);\n    });\n\n    var touchEnd = function touchEnd(event) {\n      report();\n      // stop the interval that maintains activity if the touch is holding\n      this.clearInterval(touchHolding);\n    };\n\n    this.on('touchmove', report);\n    this.on('touchend', touchEnd);\n    this.on('touchcancel', touchEnd);\n  };\n\n  /**\n   * A callback that has no parameters and is bound into `Component`s context.\n   *\n   * @callback Component~GenericCallback\n   * @this Component\n   */\n\n  /**\n   * Creates a function that runs after an `x` millisecond timeout. This function is a\n   * wrapper around `window.setTimeout`. There are a few reasons to use this one\n   * instead though:\n   * 1. It gets cleared via  {@link Component#clearTimeout} when\n   *    {@link Component#dispose} gets called.\n   * 2. The function callback will gets turned into a {@link Component~GenericCallback}\n   *\n   * > Note: You can use `window.clearTimeout` on the id returned by this function. This\n   *         will cause its dispose listener not to get cleaned up! Please use\n   *         {@link Component#clearTimeout} or {@link Component#dispose}.\n   *\n   * @param {Component~GenericCallback} fn\n   *        The function that will be run after `timeout`.\n   *\n   * @param {number} timeout\n   *        Timeout in milliseconds to delay before executing the specified function.\n   *\n   * @return {number}\n   *         Returns a timeout ID that gets used to identify the timeout. It can also\n   *         get used in {@link Component#clearTimeout} to clear the timeout that\n   *         was set.\n   *\n   * @listens Component#dispose\n   * @see [Similar to]{@link https://developer.mozilla.org/en-US/docs/Web/API/WindowTimers/setTimeout}\n   */\n\n\n  Component.prototype.setTimeout = function setTimeout(fn, timeout) {\n    fn = Fn.bind(this, fn);\n\n    var timeoutId = _window2['default'].setTimeout(fn, timeout);\n    var disposeFn = function disposeFn() {\n      this.clearTimeout(timeoutId);\n    };\n\n    disposeFn.guid = 'vjs-timeout-' + timeoutId;\n\n    this.on('dispose', disposeFn);\n\n    return timeoutId;\n  };\n\n  /**\n   * Clears a timeout that gets created via `window.setTimeout` or\n   * {@link Component#setTimeout}. If you set a timeout via {@link Component#setTimeout}\n   * use this function instead of `window.clearTimout`. If you don't your dispose\n   * listener will not get cleaned up until {@link Component#dispose}!\n   *\n   * @param {number} timeoutId\n   *        The id of the timeout to clear. The return value of\n   *        {@link Component#setTimeout} or `window.setTimeout`.\n   *\n   * @return {number}\n   *         Returns the timeout id that was cleared.\n   *\n   * @see [Similar to]{@link https://developer.mozilla.org/en-US/docs/Web/API/WindowTimers/clearTimeout}\n   */\n\n\n  Component.prototype.clearTimeout = function clearTimeout(timeoutId) {\n    _window2['default'].clearTimeout(timeoutId);\n\n    var disposeFn = function disposeFn() {};\n\n    disposeFn.guid = 'vjs-timeout-' + timeoutId;\n\n    this.off('dispose', disposeFn);\n\n    return timeoutId;\n  };\n\n  /**\n   * Creates a function that gets run every `x` milliseconds. This function is a wrapper\n   * around `window.setInterval`. There are a few reasons to use this one instead though.\n   * 1. It gets cleared via  {@link Component#clearInterval} when\n   *    {@link Component#dispose} gets called.\n   * 2. The function callback will be a {@link Component~GenericCallback}\n   *\n   * @param {Component~GenericCallback} fn\n   *        The function to run every `x` seconds.\n   *\n   * @param {number} interval\n   *        Execute the specified function every `x` milliseconds.\n   *\n   * @return {number}\n   *         Returns an id that can be used to identify the interval. It can also be be used in\n   *         {@link Component#clearInterval} to clear the interval.\n   *\n   * @listens Component#dispose\n   * @see [Similar to]{@link https://developer.mozilla.org/en-US/docs/Web/API/WindowTimers/setInterval}\n   */\n\n\n  Component.prototype.setInterval = function setInterval(fn, interval) {\n    fn = Fn.bind(this, fn);\n\n    var intervalId = _window2['default'].setInterval(fn, interval);\n\n    var disposeFn = function disposeFn() {\n      this.clearInterval(intervalId);\n    };\n\n    disposeFn.guid = 'vjs-interval-' + intervalId;\n\n    this.on('dispose', disposeFn);\n\n    return intervalId;\n  };\n\n  /**\n   * Clears an interval that gets created via `window.setInterval` or\n   * {@link Component#setInterval}. If you set an inteval via {@link Component#setInterval}\n   * use this function instead of `window.clearInterval`. If you don't your dispose\n   * listener will not get cleaned up until {@link Component#dispose}!\n   *\n   * @param {number} intervalId\n   *        The id of the interval to clear. The return value of\n   *        {@link Component#setInterval} or `window.setInterval`.\n   *\n   * @return {number}\n   *         Returns the interval id that was cleared.\n   *\n   * @see [Similar to]{@link https://developer.mozilla.org/en-US/docs/Web/API/WindowTimers/clearInterval}\n   */\n\n\n  Component.prototype.clearInterval = function clearInterval(intervalId) {\n    _window2['default'].clearInterval(intervalId);\n\n    var disposeFn = function disposeFn() {};\n\n    disposeFn.guid = 'vjs-interval-' + intervalId;\n\n    this.off('dispose', disposeFn);\n\n    return intervalId;\n  };\n\n  /**\n   * Register a `Component` with `videojs` given the name and the component.\n   *\n   * > NOTE: {@link Tech}s should not be registered as a `Component`. {@link Tech}s\n   *         should be registered using {@link Tech.registerTech} or\n   *         {@link videojs:videojs.registerTech}.\n   *\n   * > NOTE: This function can also be seen on videojs as\n   *         {@link videojs:videojs.registerComponent}.\n   *\n   * @param {string} name\n   *        The name of the `Component` to register.\n   *\n   * @param {Component} comp\n   *        The `Component` class to register.\n   *\n   * @return {Component}\n   *         The `Component` that was registered.\n   */\n\n\n  Component.registerComponent = function registerComponent(name, comp) {\n    if (!name) {\n      return;\n    }\n\n    name = (0, _toTitleCase2['default'])(name);\n\n    if (!Component.components_) {\n      Component.components_ = {};\n    }\n\n    if (name === 'Player' && Component.components_[name]) {\n      (function () {\n        var Player = Component.components_[name];\n\n        // If we have players that were disposed, then their name will still be\n        // in Players.players. So, we must loop through and verify that the value\n        // for each item is not null. This allows registration of the Player component\n        // after all players have been disposed or before any were created.\n        if (Player.players && Object.keys(Player.players).length > 0 && Object.keys(Player.players).map(function (playerName) {\n          return Player.players[playerName];\n        }).every(Boolean)) {\n          throw new Error('Can not register Player component after player has been created');\n        }\n      })();\n    }\n\n    Component.components_[name] = comp;\n\n    return comp;\n  };\n\n  /**\n   * Get a `Component` based on the name it was registered with.\n   *\n   * @param {string} name\n   *        The Name of the component to get.\n   *\n   * @return {Component}\n   *         The `Component` that got registered under the given name.\n   *\n   * @deprecated In `videojs` 6 this will not return `Component`s that were not\n   *             registered using {@link Component.registerComponent}. Currently we\n   *             check the global `videojs` object for a `Component` name and\n   *             return that if it exists.\n   */\n\n\n  Component.getComponent = function getComponent(name) {\n    if (!name) {\n      return;\n    }\n\n    name = (0, _toTitleCase2['default'])(name);\n\n    if (Component.components_ && Component.components_[name]) {\n      return Component.components_[name];\n    }\n\n    if (_window2['default'] && _window2['default'].videojs && _window2['default'].videojs[name]) {\n      _log2['default'].warn('The ' + name + ' component was added to the videojs object when it should be registered using videojs.registerComponent(name, component)');\n\n      return _window2['default'].videojs[name];\n    }\n  };\n\n  /**\n   * Sets up the constructor using the supplied init method or uses the init of the\n   * parent object.\n   *\n   * @param {Object} [props={}]\n   *        An object of properties.\n   *\n   * @return {Object}\n   *         the extended object.\n   *\n   * @deprecated since version 5\n   */\n\n\n  Component.extend = function extend(props) {\n    props = props || {};\n\n    _log2['default'].warn('Component.extend({}) has been deprecated, ' + ' use videojs.extend(Component, {}) instead');\n\n    // Set up the constructor using the supplied init method\n    // or using the init of the parent object\n    // Make sure to check the unobfuscated version for external libs\n    var init = props.init || props.init || this.prototype.init || this.prototype.init || function () {};\n    // In Resig's simple class inheritance (previously used) the constructor\n    //  is a function that calls `this.init.apply(arguments)`\n    // However that would prevent us from using `ParentObject.call(this);`\n    //  in a Child constructor because the `this` in `this.init`\n    //  would still refer to the Child and cause an infinite loop.\n    // We would instead have to do\n    //    `ParentObject.prototype.init.apply(this, arguments);`\n    //  Bleh. We're not creating a _super() function, so it's good to keep\n    //  the parent constructor reference simple.\n    var subObj = function subObj() {\n      init.apply(this, arguments);\n    };\n\n    // Inherit from this object's prototype\n    subObj.prototype = Object.create(this.prototype);\n    // Reset the constructor property for subObj otherwise\n    // instances of subObj would have the constructor of the parent Object\n    subObj.prototype.constructor = subObj;\n\n    // Make the class extendable\n    subObj.extend = Component.extend;\n\n    // Extend subObj's prototype with functions and other properties from props\n    for (var name in props) {\n      if (props.hasOwnProperty(name)) {\n        subObj.prototype[name] = props[name];\n      }\n    }\n\n    return subObj;\n  };\n\n  return Component;\n}();\n\nComponent.registerComponent('Component', Component);\nexports['default'] = Component;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/video.js/es5/component.js\n ** module id = 16\n ** module chunks = 0 1\n **/","'use strict';\n\nexports.__esModule = true;\nexports.throttle = exports.bind = undefined;\n\nvar _guid = require('./guid.js');\n\n/**\n * Bind (a.k.a proxy or Context). A simple method for changing the context of a function\n * It also stores a unique id on the function so it can be easily removed from events.\n *\n * @param {Mixed} context\n *        The object to bind as scope.\n *\n * @param {Function} fn\n *        The function to be bound to a scope.\n *\n * @param {number} [uid]\n *        An optional unique ID for the function to be set\n *\n * @return {Function}\n *         The new function that will be bound into the context given\n */\nvar bind = exports.bind = function bind(context, fn, uid) {\n  // Make sure the function has a unique ID\n  if (!fn.guid) {\n    fn.guid = (0, _guid.newGUID)();\n  }\n\n  // Create the new function that changes the context\n  var bound = function bound() {\n    return fn.apply(context, arguments);\n  };\n\n  // Allow for the ability to individualize this function\n  // Needed in the case where multiple objects might share the same prototype\n  // IF both items add an event listener with the same function, then you try to remove just one\n  // it will remove both because they both have the same guid.\n  // when using this, you need to use the bind method when you remove the listener as well.\n  // currently used in text tracks\n  bound.guid = uid ? uid + '_' + fn.guid : fn.guid;\n\n  return bound;\n};\n\n/**\n * Wraps the given function, `fn`, with a new function that only invokes `fn`\n * at most once per every `wait` milliseconds.\n *\n * @param  {Function} fn\n *         The function to be throttled.\n *\n * @param  {Number}   wait\n *         The number of milliseconds by which to throttle.\n *\n * @return {Function}\n */\n/**\n * @file fn.js\n * @module fn\n */\nvar throttle = exports.throttle = function throttle(fn, wait) {\n  var last = Date.now();\n\n  var throttled = function throttled() {\n    var now = Date.now();\n\n    if (now - last >= wait) {\n      fn.apply(undefined, arguments);\n      last = now;\n    }\n  };\n\n  return throttled;\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/video.js/es5/utils/fn.js\n ** module id = 17\n ** module chunks = 0 1\n **/","'use strict';\n\nexports.__esModule = true;\n/**\n * @file to-title-case.js\n * @module to-title-case\n */\n\n/**\n * Uppercase the first letter of a string.\n *\n * @param {string} string\n *        String to be uppercased\n *\n * @return {string}\n *         The string with an uppercased first letter\n */\nfunction toTitleCase(string) {\n  if (typeof string !== 'string') {\n    return string;\n  }\n\n  return string.charAt(0).toUpperCase() + string.slice(1);\n}\n\nexports['default'] = toTitleCase;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/video.js/es5/utils/to-title-case.js\n ** module id = 18\n ** module chunks = 0 1\n **/","'use strict';\n\nexports.__esModule = true;\nexports['default'] = mergeOptions;\n\nvar _obj = require('./obj');\n\n/**\n * Deep-merge one or more options objects, recursively merging **only** plain\n * object properties.\n *\n * @param   {Object[]} sources\n *          One or more objects to merge into a new object.\n *\n * @returns {Object}\n *          A new object that is the merged result of all sources.\n */\nfunction mergeOptions() {\n  var result = {};\n\n  for (var _len = arguments.length, sources = Array(_len), _key = 0; _key < _len; _key++) {\n    sources[_key] = arguments[_key];\n  }\n\n  sources.forEach(function (source) {\n    if (!source) {\n      return;\n    }\n\n    (0, _obj.each)(source, function (value, key) {\n      if (!(0, _obj.isPlain)(value)) {\n        result[key] = value;\n        return;\n      }\n\n      if (!(0, _obj.isPlain)(result[key])) {\n        result[key] = {};\n      }\n\n      result[key] = mergeOptions(result[key], value);\n    });\n  });\n\n  return result;\n} /**\n   * @file merge-options.js\n   * @module merge-options\n   */\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/video.js/es5/utils/merge-options.js\n ** module id = 19\n ** module chunks = 0 1\n **/","'use strict';\n\nexports.__esModule = true;\n\nvar _events = require('./utils/events.js');\n\nvar Events = _interopRequireWildcard(_events);\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj['default'] = obj; return newObj; } }\n\n/**\n * `EventTarget` is a class that can have the same API as the DOM `EventTarget`. It\n * adds shorthand functions that wrap around lengthy functions. For example:\n * the `on` function is a wrapper around `addEventListener`.\n *\n * @see [EventTarget Spec]{@link https://www.w3.org/TR/DOM-Level-2-Events/events.html#Events-EventTarget}\n * @class EventTarget\n */\nvar EventTarget = function EventTarget() {};\n\n/**\n * A Custom DOM event.\n *\n * @typedef {Object} EventTarget~Event\n * @see [Properties]{@link https://developer.mozilla.org/en-US/docs/Web/API/CustomEvent}\n */\n\n/**\n * All event listeners should follow the following format.\n *\n * @callback EventTarget~EventListener\n * @this {EventTarget}\n *\n * @param {EventTarget~Event} event\n *        the event that triggered this function\n *\n * @param {Object} [hash]\n *        hash of data sent during the event\n */\n\n/**\n * An object containing event names as keys and booleans as values.\n *\n * > NOTE: If an event name is set to a true value here {@link EventTarget#trigger}\n *         will have extra functionality. See that function for more information.\n *\n * @property EventTarget.prototype.allowedEvents_\n * @private\n */\n/**\n * @file src/js/event-target.js\n */\nEventTarget.prototype.allowedEvents_ = {};\n\n/**\n * Adds an `event listener` to an instance of an `EventTarget`. An `event listener` is a\n * function that will get called when an event with a certain name gets triggered.\n *\n * ```js\n *   var foo = new EventTarget();\n *   var handleBar = function() {\n *     console.log('bar was triggered');\n *   };\n *\n *   foo.on('bar', handleBar);\n *\n *   // This causes any `event listeners` for the `bar` event to get called\n *   // see {@link EventTarget#trigger} for more information\n *   foo.trigger('bar');\n *   // logs 'bar was triggered'\n * ```\n *\n * @param {string|string[]} type\n *        An event name or an array of event names.\n *\n * @param {EventTarget~EventListener} fn\n *        The function to call with `EventTarget`s\n */\nEventTarget.prototype.on = function (type, fn) {\n  // Remove the addEventListener alias before calling Events.on\n  // so we don't get into an infinite type loop\n  var ael = this.addEventListener;\n\n  this.addEventListener = function () {};\n  Events.on(this, type, fn);\n  this.addEventListener = ael;\n};\n\n/**\n * An alias of {@link EventTarget#on}. Allows `EventTarget` to mimic\n * the standard DOM API.\n *\n * @function\n * @see {@link EventTarget#on}\n */\nEventTarget.prototype.addEventListener = EventTarget.prototype.on;\n\n/**\n * Removes an `event listener` for a specific event from an instance of `EventTarget`.\n * This makes it so that the `event listener` will no longer get called when the\n * named event happens.\n *\n * ```js\n *   var foo = new EventTarget();\n *   var handleBar = function() {\n *     console.log('bar was triggered');\n *   };\n *\n *   // adds an `event listener` for the `bar` event\n *   // see {@link EventTarget#on} for more info\n *   foo.on('bar', handleBar);\n *\n *   // runs all `event listeners` for the `bar` event\n *   // see {@link EventTarget#trigger} for more info\n *   foo.trigger('bar');\n *   // logs 'bar was triggered'\n *\n *   foo.off('bar', handleBar);\n *   foo.trigger('bar');\n *   // does nothing\n * ```\n *\n * @param {string|string[]} type\n *        An event name or an array of event names.\n *\n * @param {EventTarget~EventListener} fn\n *        The function to remove.\n */\nEventTarget.prototype.off = function (type, fn) {\n  Events.off(this, type, fn);\n};\n\n/**\n * An alias of {@link EventTarget#off}. Allows `EventTarget` to mimic\n * the standard DOM API.\n *\n * @function\n * @see {@link EventTarget#off}\n */\nEventTarget.prototype.removeEventListener = EventTarget.prototype.off;\n\n/**\n * This function will add an `event listener` that gets triggered only once. After the\n * first trigger it will get removed. This is like adding an `event listener`\n * with {@link EventTarget#on} that calls {@link EventTarget#off} on itself.\n *\n * Using {@link EventTarget#on} and {@link EventTarget#off} to mimic {@link EventTarget#one}\n * ```js\n *   var foo = new EventTarget();\n *   var handleBar = function() {\n *     console.log('bar was triggered');\n *     // after the first trigger remove this handler\n *     foo.off('bar', handleBar);\n *   };\n *\n *   foo.on('bar', handleBar);\n *   foo.trigger('bar');\n *   // logs 'bar was triggered'\n *\n *   foo.trigger('bar');\n *   // does nothing\n * ```\n *\n * Using {@link EventTarget#one}\n * ```js\n *   var foo = new EventTarget();\n *   var handleBar = function() {\n *     console.log('bar was triggered');\n *   };\n *\n *   // removed after the first trigger\n *   foo.one('bar', handleBar);\n *   foo.trigger('bar');\n *   // logs 'bar was triggered'\n *\n *   foo.trigger('bar');\n *   // does nothing\n * ```\n *\n * @param {string|string[]} type\n *        An event name or an array of event names.\n *\n * @param {EventTarget~EventListener} fn\n *        The function to be called once for each event name.\n */\nEventTarget.prototype.one = function (type, fn) {\n  // Remove the addEventListener alialing Events.on\n  // so we don't get into an infinite type loop\n  var ael = this.addEventListener;\n\n  this.addEventListener = function () {};\n  Events.one(this, type, fn);\n  this.addEventListener = ael;\n};\n\n/**\n * This function causes an event to happen. This will then cause any `event listeners`\n * that are waiting for that event, to get called. If there are no `event listeners`\n * for an event then nothing will happen.\n *\n * If the name of the `Event` that is being triggered is in `EventTarget.allowedEvents_`.\n * Trigger will also call the `on` + `uppercaseEventName` function.\n *\n * Example:\n * 'click' is in `EventTarget.allowedEvents_`, so, trigger will attempt to call\n * `onClick` if it exists.\n *\n * ```js\n *   var foo = new EventTarget();\n *   var handleBar = function() {\n *     console.log('bar was triggered');\n *   };\n *\n *   foo.on('bar', handleBar);\n *   foo.trigger('bar');\n *   // logs 'bar was triggered'\n *\n *   foo.trigger('bar');\n *   // logs 'bar was triggered'\n *\n *   foo.trigger('foo');\n *   // does nothing\n * ```\n *\n * @param {string|EventTarget~Event|Object} event\n *        The name of the event, an `Event`, or an object with a key of type set to\n *        an event name.\n */\nEventTarget.prototype.trigger = function (event) {\n  var type = event.type || event;\n\n  if (typeof event === 'string') {\n    event = { type: type };\n  }\n  event = Events.fixEvent(event);\n\n  if (this.allowedEvents_[type] && this['on' + type]) {\n    this['on' + type](event);\n  }\n\n  Events.trigger(this, event);\n};\n\n/**\n * An alias of {@link EventTarget#trigger}. Allows `EventTarget` to mimic\n * the standard DOM API.\n *\n * @function\n * @see {@link EventTarget#trigger}\n */\nEventTarget.prototype.dispatchEvent = EventTarget.prototype.trigger;\n\nexports['default'] = EventTarget;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/video.js/es5/event-target.js\n ** module id = 20\n ** module chunks = 0 1\n **/","'use strict';exports.__esModule=true;var _component=require('./component.js');var _component2=_interopRequireDefault(_component);var _document=require('global/document');var _document2=_interopRequireDefault(_document);var _window=require('global/window');var _window2=_interopRequireDefault(_window);var _events=require('./utils/events.js');var Events=_interopRequireWildcard(_events);var _dom=require('./utils/dom.js');var Dom=_interopRequireWildcard(_dom);var _fn=require('./utils/fn.js');var Fn=_interopRequireWildcard(_fn);var _guid=require('./utils/guid.js');var Guid=_interopRequireWildcard(_guid);var _browser=require('./utils/browser.js');var browser=_interopRequireWildcard(_browser);var _log=require('./utils/log.js');var _log2=_interopRequireDefault(_log);var _toTitleCase=require('./utils/to-title-case.js');var _toTitleCase2=_interopRequireDefault(_toTitleCase);var _timeRanges=require('./utils/time-ranges.js');var _buffer=require('./utils/buffer.js');var _stylesheet=require('./utils/stylesheet.js');var stylesheet=_interopRequireWildcard(_stylesheet);var _fullscreenApi=require('./fullscreen-api.js');var _fullscreenApi2=_interopRequireDefault(_fullscreenApi);var _mediaError=require('./media-error.js');var _mediaError2=_interopRequireDefault(_mediaError);var _tuple=require('safe-json-parse/tuple');var _tuple2=_interopRequireDefault(_tuple);var _obj=require('./utils/obj');var _mergeOptions=require('./utils/merge-options.js');var _mergeOptions2=_interopRequireDefault(_mergeOptions);var _textTrackListConverter=require('./tracks/text-track-list-converter.js');var _textTrackListConverter2=_interopRequireDefault(_textTrackListConverter);var _modalDialog=require('./modal-dialog');var _modalDialog2=_interopRequireDefault(_modalDialog);var _tech=require('./tech/tech.js');var _tech2=_interopRequireDefault(_tech);var _audioTrackList=require('./tracks/audio-track-list.js');var _audioTrackList2=_interopRequireDefault(_audioTrackList);var _videoTrackList=require('./tracks/video-track-list.js');var _videoTrackList2=_interopRequireDefault(_videoTrackList);require('./tech/loader.js');require('./tech/flash.js');require('./poster-image.js');require('./tracks/text-track-display.js');require('./loading-spinner.js');require('./big-play-button.js');require('./close-button.js');require('./control-bar/control-bar.js');require('./error-display.js');require('./tracks/text-track-settings.js');require('./tech/html5.js');function _interopRequireWildcard(obj){if(obj&&obj.__esModule){return obj;}else{var newObj={};if(obj!=null){for(var key in obj){if(Object.prototype.hasOwnProperty.call(obj,key))newObj[key]=obj[key];}}newObj['default']=obj;return newObj;}}function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{'default':obj};}function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError(\"Cannot call a class as a function\");}}function _possibleConstructorReturn(self,call){if(!self){throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");}return call&&(typeof call===\"object\"||typeof call===\"function\")?call:self;}function _inherits(subClass,superClass){if(typeof superClass!==\"function\"&&superClass!==null){throw new TypeError(\"Super expression must either be null or a function, not \"+typeof superClass);}subClass.prototype=Object.create(superClass&&superClass.prototype,{constructor:{value:subClass,enumerable:false,writable:true,configurable:true}});if(superClass)Object.setPrototypeOf?Object.setPrototypeOf(subClass,superClass):subClass.__proto__=superClass;}/**\n * @file player.js\n */// Subclasses Component\n// The following imports are used only to ensure that the corresponding modules\n// are always included in the video.js package. Importing the modules will\n// execute them and they will register themselves with video.js.\n// Import Html5 tech, at least for disposing the original video tag.\n// The following tech events are simply re-triggered\n// on the player when they happen\nvar TECH_EVENTS_RETRIGGER=[/**\n   * Fired while the user agent is downloading media data.\n   *\n   * @event Player#progress\n   * @type {EventTarget~Event}\n   *//**\n   * Retrigger the `progress` event that was triggered by the {@link Tech}.\n   *\n   * @private\n   * @method Player.prototype.handleTechProgress_\n   * @fires Player#progress\n   * @listens Tech#progress\n   */'progress',/**\n   * Fires when the loading of an audio/video is aborted.\n   *\n   * @event Player#abort\n   * @type {EventTarget~Event}\n   *//**\n   * Retrigger the `abort` event that was triggered by the {@link Tech}.\n   *\n   * @private\n   * @method Player.prototype.handleTechAbort_\n   * @fires Player#abort\n   * @listens Tech#abort\n   */'abort',/**\n   * Fires when the browser is intentionally not getting media data.\n   *\n   * @event Player#suspend\n   * @type {EventTarget~Event}\n   *//**\n   * Retrigger the `suspend` event that was triggered by the {@link Tech}.\n   *\n   * @private\n   * @method Player.prototype.handleTechSuspend_\n   * @fires Player#suspend\n   * @listens Tech#suspend\n   */'suspend',/**\n   * Fires when the current playlist is empty.\n   *\n   * @event Player#emptied\n   * @type {EventTarget~Event}\n   *//**\n   * Retrigger the `emptied` event that was triggered by the {@link Tech}.\n   *\n   * @private\n   * @method Player.prototype.handleTechEmptied_\n   * @fires Player#emptied\n   * @listens Tech#emptied\n   */'emptied',/**\n   * Fires when the browser is trying to get media data, but data is not available.\n   *\n   * @event Player#stalled\n   * @type {EventTarget~Event}\n   *//**\n   * Retrigger the `stalled` event that was triggered by the {@link Tech}.\n   *\n   * @private\n   * @method Player.prototype.handleTechStalled_\n   * @fires Player#stalled\n   * @listens Tech#stalled\n   */'stalled',/**\n   * Fires when the browser has loaded meta data for the audio/video.\n   *\n   * @event Player#loadedmetadata\n   * @type {EventTarget~Event}\n   *//**\n   * Retrigger the `stalled` event that was triggered by the {@link Tech}.\n   *\n   * @private\n   * @method Player.prototype.handleTechLoadedmetadata_\n   * @fires Player#loadedmetadata\n   * @listens Tech#loadedmetadata\n   */'loadedmetadata',/**\n   * Fires when the browser has loaded the current frame of the audio/video.\n   *\n   * @event player#loadeddata\n   * @type {event}\n   *//**\n   * Retrigger the `loadeddata` event that was triggered by the {@link Tech}.\n   *\n   * @private\n   * @method Player.prototype.handleTechLoaddeddata_\n   * @fires Player#loadeddata\n   * @listens Tech#loadeddata\n   */'loadeddata',/**\n   * Fires when the current playback position has changed.\n   *\n   * @event player#timeupdate\n   * @type {event}\n   *//**\n   * Retrigger the `timeupdate` event that was triggered by the {@link Tech}.\n   *\n   * @private\n   * @method Player.prototype.handleTechTimeUpdate_\n   * @fires Player#timeupdate\n   * @listens Tech#timeupdate\n   */'timeupdate',/**\n   * Fires when the playing speed of the audio/video is changed\n   *\n   * @event player#ratechange\n   * @type {event}\n   *//**\n   * Retrigger the `ratechange` event that was triggered by the {@link Tech}.\n   *\n   * @private\n   * @method Player.prototype.handleTechRatechange_\n   * @fires Player#ratechange\n   * @listens Tech#ratechange\n   */'ratechange',/**\n   * Fires when the volume has been changed\n   *\n   * @event player#volumechange\n   * @type {event}\n   *//**\n   * Retrigger the `volumechange` event that was triggered by the {@link Tech}.\n   *\n   * @private\n   * @method Player.prototype.handleTechVolumechange_\n   * @fires Player#volumechange\n   * @listens Tech#volumechange\n   */'volumechange',/**\n   * Fires when the text track has been changed\n   *\n   * @event player#texttrackchange\n   * @type {event}\n   *//**\n   * Retrigger the `texttrackchange` event that was triggered by the {@link Tech}.\n   *\n   * @private\n   * @method Player.prototype.handleTechTexttrackchange_\n   * @fires Player#texttrackchange\n   * @listens Tech#texttrackchange\n   */'texttrackchange'];/**\n * An instance of the `Player` class is created when any of the Video.js setup methods\n * are used to initialize a video.\n * ```js\n *   var myPlayer = videojs('example_video_1');\n * ```\n *\n * In the following example, the `data-setup` attribute tells the Video.js library to\n * create a player instance when the library is ready.\n * ```html\n *   <video id=\"example_video_1\" data-setup='{}' controls>\n *     <source src=\"my-source.mp4\" type=\"video/mp4\">\n *   </video>\n * ```\n *\n * After an instance has been created it can be accessed globally in two ways:\n * 1. By calling `videojs('example_video_1');`\n * 2. By using it directly via  `videojs.players.example_video_1;`\n *\n * @extends Component\n */var Player=function(_Component){_inherits(Player,_Component);/**\n   * Create an instance of this class.\n   *\n   * @param {Element} tag\n   *        The original video DOM element used for configuring options.\n   *\n   * @param {Object} [options]\n   *        Object of option names and values.\n   *\n   * @param {Component~ReadyCallback} [ready]\n   *        Ready callback function.\n   */function Player(tag,options,ready){_classCallCheck(this,Player);// Make sure tag ID exists\ntag.id=tag.id||'vjs_video_'+Guid.newGUID();// Set Options\n// The options argument overrides options set in the video tag\n// which overrides globally set options.\n// This latter part coincides with the load order\n// (tag must exist before Player)\noptions=(0,_obj.assign)(Player.getTagSettings(tag),options);// Delay the initialization of children because we need to set up\n// player properties first, and can't use `this` before `super()`\noptions.initChildren=false;// Same with creating the element\noptions.createEl=false;// we don't want the player to report touch activity on itself\n// see enableTouchActivity in Component\noptions.reportTouchActivity=false;// If language is not set, get the closest lang attribute\nif(!options.language){if(typeof tag.closest==='function'){var closest=tag.closest('[lang]');if(closest){options.language=closest.getAttribute('lang');}}else{var element=tag;while(element&&element.nodeType===1){if(Dom.getElAttributes(element).hasOwnProperty('lang')){options.language=element.getAttribute('lang');break;}element=element.parentNode;}}}// Run base component initializing with new options\n// if the global option object was accidentally blown away by\n// someone, bail early with an informative error\nvar _this=_possibleConstructorReturn(this,_Component.call(this,null,options,ready));if(!_this.options_||!_this.options_.techOrder||!_this.options_.techOrder.length){throw new Error('No techOrder specified. Did you overwrite '+'videojs.options instead of just changing the '+'properties you want to override?');}// Store the original tag used to set options\n_this.tag=tag;// Store the tag attributes used to restore html5 element\n_this.tagAttributes=tag&&Dom.getElAttributes(tag);// Update current language\n_this.language(_this.options_.language);// Update Supported Languages\nif(options.languages){(function(){// Normalise player option languages to lowercase\nvar languagesToLower={};Object.getOwnPropertyNames(options.languages).forEach(function(name){languagesToLower[name.toLowerCase()]=options.languages[name];});_this.languages_=languagesToLower;})();}else{_this.languages_=Player.prototype.options_.languages;}// Cache for video property values.\n_this.cache_={};// Set poster\n_this.poster_=options.poster||'';// Set controls\n_this.controls_=!!options.controls;// Original tag settings stored in options\n// now remove immediately so native controls don't flash.\n// May be turned back on by HTML5 tech if nativeControlsForTouch is true\ntag.controls=false;/*\n     * Store the internal state of scrubbing\n     *\n     * @private\n     * @return {Boolean} True if the user is scrubbing\n     */_this.scrubbing_=false;_this.el_=_this.createEl();// We also want to pass the original player options to each component and plugin\n// as well so they don't need to reach back into the player for options later.\n// We also need to do another copy of this.options_ so we don't end up with\n// an infinite loop.\nvar playerOptionsCopy=(0,_mergeOptions2['default'])(_this.options_);// Load plugins\nif(options.plugins){(function(){var plugins=options.plugins;Object.getOwnPropertyNames(plugins).forEach(function(name){if(typeof this[name]==='function'){this[name](plugins[name]);}else{_log2['default'].error('Unable to find plugin:',name);}},_this);})();}_this.options_.playerOptions=playerOptionsCopy;_this.initChildren();// Set isAudio based on whether or not an audio tag was used\n_this.isAudio(tag.nodeName.toLowerCase()==='audio');// Update controls className. Can't do this when the controls are initially\n// set because the element doesn't exist yet.\nif(_this.controls()){_this.addClass('vjs-controls-enabled');}else{_this.addClass('vjs-controls-disabled');}// Set ARIA label and region role depending on player type\n_this.el_.setAttribute('role','region');if(_this.isAudio()){_this.el_.setAttribute('aria-label','audio player');}else{_this.el_.setAttribute('aria-label','video player');}if(_this.isAudio()){_this.addClass('vjs-audio');}if(_this.flexNotSupported_()){_this.addClass('vjs-no-flex');}// TODO: Make this smarter. Toggle user state between touching/mousing\n// using events, since devices can have both touch and mouse events.\n// if (browser.TOUCH_ENABLED) {\n//   this.addClass('vjs-touch-enabled');\n// }\n// iOS Safari has broken hover handling\nif(!browser.IS_IOS){_this.addClass('vjs-workinghover');}// Make player easily findable by ID\nPlayer.players[_this.id_]=_this;// When the player is first initialized, trigger activity so components\n// like the control bar show themselves if needed\n_this.userActive(true);_this.reportUserActivity();_this.listenForUserActivity_();_this.on('fullscreenchange',_this.handleFullscreenChange_);_this.on('stageclick',_this.handleStageClick_);return _this;}/**\n   * Destroys the video player and does any necessary cleanup.\n   *\n   * ```js\n   *   var myPlayer = videojs('some-player-id');\n   *\n   *   myPlayer.src(\"http://www.example.com/path/to/video.mp4\");\n   *   myPlayer.ready(function() {\n   *     myPlayer.dispose();\n   *   });\n   * ```\n   * This is especially helpful if you are dynamically adding and removing videos\n   * to/from the DOM.\n   *\n   * @fires Player#dispose\n   */Player.prototype.dispose=function dispose(){/**\n     * Called when the player is being disposed of.\n     *\n     * @event Player#dispose\n     * @type {EventTarget~Event}\n     */this.trigger('dispose');// prevent dispose from being called twice\nthis.off('dispose');if(this.styleEl_&&this.styleEl_.parentNode){this.styleEl_.parentNode.removeChild(this.styleEl_);}// Kill reference to this player\nPlayer.players[this.id_]=null;if(this.tag&&this.tag.player){this.tag.player=null;}if(this.el_&&this.el_.player){this.el_.player=null;}if(this.tech_){this.tech_.dispose();}_Component.prototype.dispose.call(this);};/**\n   * Create the `Player`'s DOM element.\n   *\n   * @return {Element}\n   *         The DOM element that gets created.\n   */Player.prototype.createEl=function createEl(){var el=this.el_=_Component.prototype.createEl.call(this,'div');var tag=this.tag;// Remove width/height attrs from tag so CSS can make it 100% width/height\ntag.removeAttribute('width');tag.removeAttribute('height');// Copy over all the attributes from the tag, including ID and class\n// ID will now reference player box, not the video tag\nvar attrs=Dom.getElAttributes(tag);Object.getOwnPropertyNames(attrs).forEach(function(attr){// workaround so we don't totally break IE7\n// http://stackoverflow.com/questions/3653444/css-styles-not-applied-on-dynamic-elements-in-internet-explorer-7\nif(attr==='class'){el.className=attrs[attr];}else{el.setAttribute(attr,attrs[attr]);}});// Update tag id/class for use as HTML5 playback tech\n// Might think we should do this after embedding in container so .vjs-tech class\n// doesn't flash 100% width/height, but class only applies with .video-js parent\ntag.playerId=tag.id;tag.id+='_html5_api';tag.className='vjs-tech';// Make player findable on elements\ntag.player=el.player=this;// Default state of video is paused\nthis.addClass('vjs-paused');// Add a style element in the player that we'll use to set the width/height\n// of the player in a way that's still overrideable by CSS, just like the\n// video element\nif(_window2['default'].VIDEOJS_NO_DYNAMIC_STYLE!==true){this.styleEl_=stylesheet.createStyleElement('vjs-styles-dimensions');var defaultsStyleEl=Dom.$('.vjs-styles-defaults');var head=Dom.$('head');head.insertBefore(this.styleEl_,defaultsStyleEl?defaultsStyleEl.nextSibling:head.firstChild);}// Pass in the width/height/aspectRatio options which will update the style el\nthis.width(this.options_.width);this.height(this.options_.height);this.fluid(this.options_.fluid);this.aspectRatio(this.options_.aspectRatio);// Hide any links within the video/audio tag, because IE doesn't hide them completely.\nvar links=tag.getElementsByTagName('a');for(var i=0;i<links.length;i++){var linkEl=links.item(i);Dom.addElClass(linkEl,'vjs-hidden');linkEl.setAttribute('hidden','hidden');}// insertElFirst seems to cause the networkState to flicker from 3 to 2, so\n// keep track of the original for later so we can know if the source originally failed\ntag.initNetworkState_=tag.networkState;// Wrap video tag in div (el/box) container\nif(tag.parentNode){tag.parentNode.insertBefore(el,tag);}// insert the tag as the first child of the player element\n// then manually add it to the children array so that this.addChild\n// will work properly for other components\n//\n// Breaks iPhone, fixed in HTML5 setup.\nDom.insertElFirst(tag,el);this.children_.unshift(tag);this.el_=el;return el;};/**\n   * A getter/setter for the `Player`'s width.\n   *\n   * @param {number} [value]\n   *        The value to set the `Player's width to.\n   *\n   * @return {number}\n   *         The current width of the `Player`.\n   */Player.prototype.width=function width(value){return this.dimension('width',value);};/**\n   * A getter/setter for the `Player`'s height.\n   *\n   * @param {number} [value]\n   *        The value to set the `Player's heigth to.\n   *\n   * @return {number}\n   *         The current heigth of the `Player`.\n   */Player.prototype.height=function height(value){return this.dimension('height',value);};/**\n   * A getter/setter for the `Player`'s width & height.\n   *\n   * @param {string} dimension\n   *        This string can be:\n   *        - 'width'\n   *        - 'height'\n   *\n   * @param {number} [value]\n   *        Value for dimension specified in the first argument.\n   *\n   * @return {Player|number}\n   *         - Returns itself when setting; method can be chained.\n   *         - The dimension arguments value when getting (width/height).\n   */Player.prototype.dimension=function dimension(_dimension,value){var privDimension=_dimension+'_';if(value===undefined){return this[privDimension]||0;}if(value===''){// If an empty string is given, reset the dimension to be automatic\nthis[privDimension]=undefined;}else{var parsedVal=parseFloat(value);if(isNaN(parsedVal)){_log2['default'].error('Improper value \"'+value+'\" supplied for for '+_dimension);return this;}this[privDimension]=parsedVal;}this.updateStyleEl_();return this;};/**\n   * A getter/setter/toggler for the vjs-fluid `className` on the `Player`.\n   *\n   * @param {boolean} [bool]\n   *        - A value of true adds the class.\n   *        - A value of false removes the class.\n   *        - No value will toggle the fluid class.\n   *\n   * @return {boolean|undefined}\n   *         - The value of fluid when getting.\n   *         - `undefined` when setting.\n   */Player.prototype.fluid=function fluid(bool){if(bool===undefined){return!!this.fluid_;}this.fluid_=!!bool;if(bool){this.addClass('vjs-fluid');}else{this.removeClass('vjs-fluid');}this.updateStyleEl_();};/**\n   * Get/Set the aspect ratio\n   *\n   * @param {string} [ratio]\n   *        Aspect ratio for player\n   *\n   * @return {string|undefined}\n   *         returns the current aspect ratio when getting\n   *//**\n   * A getter/setter for the `Player`'s aspect ratio.\n   *\n   * @param {string} [ratio]\n   *        The value to set the `Player's aspect ratio to.\n   *\n   * @return {string|undefined}\n   *         - The current aspect ratio of the `Player` when getting.\n   *         - undefined when setting\n   */Player.prototype.aspectRatio=function aspectRatio(ratio){if(ratio===undefined){return this.aspectRatio_;}// Check for width:height format\nif(!/^\\d+\\:\\d+$/.test(ratio)){throw new Error('Improper value supplied for aspect ratio. The format should be width:height, for example 16:9.');}this.aspectRatio_=ratio;// We're assuming if you set an aspect ratio you want fluid mode,\n// because in fixed mode you could calculate width and height yourself.\nthis.fluid(true);this.updateStyleEl_();};/**\n   * Update styles of the `Player` element (height, width and aspect ratio).\n   *\n   * @private\n   * @listens Tech#loadedmetadata\n   */Player.prototype.updateStyleEl_=function updateStyleEl_(){if(_window2['default'].VIDEOJS_NO_DYNAMIC_STYLE===true){var _width=typeof this.width_==='number'?this.width_:this.options_.width;var _height=typeof this.height_==='number'?this.height_:this.options_.height;var techEl=this.tech_&&this.tech_.el();if(techEl){if(_width>=0){techEl.width=_width;}if(_height>=0){techEl.height=_height;}}return;}var width=void 0;var height=void 0;var aspectRatio=void 0;var idClass=void 0;// The aspect ratio is either used directly or to calculate width and height.\nif(this.aspectRatio_!==undefined&&this.aspectRatio_!=='auto'){// Use any aspectRatio that's been specifically set\naspectRatio=this.aspectRatio_;}else if(this.videoWidth()>0){// Otherwise try to get the aspect ratio from the video metadata\naspectRatio=this.videoWidth()+':'+this.videoHeight();}else{// Or use a default. The video element's is 2:1, but 16:9 is more common.\naspectRatio='16:9';}// Get the ratio as a decimal we can use to calculate dimensions\nvar ratioParts=aspectRatio.split(':');var ratioMultiplier=ratioParts[1]/ratioParts[0];if(this.width_!==undefined){// Use any width that's been specifically set\nwidth=this.width_;}else if(this.height_!==undefined){// Or calulate the width from the aspect ratio if a height has been set\nwidth=this.height_/ratioMultiplier;}else{// Or use the video's metadata, or use the video el's default of 300\nwidth=this.videoWidth()||300;}if(this.height_!==undefined){// Use any height that's been specifically set\nheight=this.height_;}else{// Otherwise calculate the height from the ratio and the width\nheight=width*ratioMultiplier;}// Ensure the CSS class is valid by starting with an alpha character\nif(/^[^a-zA-Z]/.test(this.id())){idClass='dimensions-'+this.id();}else{idClass=this.id()+'-dimensions';}// Ensure the right class is still on the player for the style element\nthis.addClass(idClass);stylesheet.setTextContent(this.styleEl_,'\\n      .'+idClass+' {\\n        width: '+width+'px;\\n        height: '+height+'px;\\n      }\\n\\n      .'+idClass+'.vjs-fluid {\\n        padding-top: '+ratioMultiplier*100+'%;\\n      }\\n    ');};/**\n   * Load/Create an instance of playback {@link Tech} including element\n   * and API methods. Then append the `Tech` element in `Player` as a child.\n   *\n   * @param {string} techName\n   *        name of the playback technology\n   *\n   * @param {string} source\n   *        video source\n   *\n   * @private\n   */Player.prototype.loadTech_=function loadTech_(techName,source){var _this2=this;// Pause and remove current playback technology\nif(this.tech_){this.unloadTech_();}// get rid of the HTML5 video tag as soon as we are using another tech\nif(techName!=='Html5'&&this.tag){_tech2['default'].getTech('Html5').disposeMediaElement(this.tag);this.tag.player=null;this.tag=null;}this.techName_=techName;// Turn off API access because we're loading a new tech that might load asynchronously\nthis.isReady_=false;// Grab tech-specific options from player options and add source and parent element to use.\nvar techOptions=(0,_obj.assign)({source:source,'nativeControlsForTouch':this.options_.nativeControlsForTouch,'playerId':this.id(),'techId':this.id()+'_'+techName+'_api','videoTracks':this.videoTracks_,'textTracks':this.textTracks_,'audioTracks':this.audioTracks_,'autoplay':this.options_.autoplay,'preload':this.options_.preload,'loop':this.options_.loop,'muted':this.options_.muted,'poster':this.poster(),'language':this.language(),'vtt.js':this.options_['vtt.js']},this.options_[techName.toLowerCase()]);if(this.tag){techOptions.tag=this.tag;}if(source){this.currentType_=source.type;if(source.src===this.cache_.src&&this.cache_.currentTime>0){techOptions.startTime=this.cache_.currentTime;}this.cache_.sources=null;this.cache_.source=source;this.cache_.src=source.src;}// Initialize tech instance\nvar TechComponent=_tech2['default'].getTech(techName);// Support old behavior of techs being registered as components.\n// Remove once that deprecated behavior is removed.\nif(!TechComponent){TechComponent=_component2['default'].getComponent(techName);}this.tech_=new TechComponent(techOptions);// player.triggerReady is always async, so don't need this to be async\nthis.tech_.ready(Fn.bind(this,this.handleTechReady_),true);_textTrackListConverter2['default'].jsonToTextTracks(this.textTracksJson_||[],this.tech_);// Listen to all HTML5-defined events and trigger them on the player\nTECH_EVENTS_RETRIGGER.forEach(function(event){_this2.on(_this2.tech_,event,_this2['handleTech'+(0,_toTitleCase2['default'])(event)+'_']);});this.on(this.tech_,'loadstart',this.handleTechLoadStart_);this.on(this.tech_,'waiting',this.handleTechWaiting_);this.on(this.tech_,'canplay',this.handleTechCanPlay_);this.on(this.tech_,'canplaythrough',this.handleTechCanPlayThrough_);this.on(this.tech_,'playing',this.handleTechPlaying_);this.on(this.tech_,'ended',this.handleTechEnded_);this.on(this.tech_,'seeking',this.handleTechSeeking_);this.on(this.tech_,'seeked',this.handleTechSeeked_);this.on(this.tech_,'play',this.handleTechPlay_);this.on(this.tech_,'firstplay',this.handleTechFirstPlay_);this.on(this.tech_,'pause',this.handleTechPause_);this.on(this.tech_,'durationchange',this.handleTechDurationChange_);this.on(this.tech_,'fullscreenchange',this.handleTechFullscreenChange_);this.on(this.tech_,'error',this.handleTechError_);this.on(this.tech_,'loadedmetadata',this.updateStyleEl_);this.on(this.tech_,'posterchange',this.handleTechPosterChange_);this.on(this.tech_,'textdata',this.handleTechTextData_);this.usingNativeControls(this.techGet_('controls'));if(this.controls()&&!this.usingNativeControls()){this.addTechControlsListeners_();}// Add the tech element in the DOM if it was not already there\n// Make sure to not insert the original video element if using Html5\nif(this.tech_.el().parentNode!==this.el()&&(techName!=='Html5'||!this.tag)){Dom.insertElFirst(this.tech_.el(),this.el());}// Get rid of the original video tag reference after the first tech is loaded\nif(this.tag){this.tag.player=null;this.tag=null;}};/**\n   * Unload and dispose of the current playback {@link Tech}.\n   *\n   * @private\n   */Player.prototype.unloadTech_=function unloadTech_(){// Save the current text tracks so that we can reuse the same text tracks with the next tech\nthis.videoTracks_=this.videoTracks();this.textTracks_=this.textTracks();this.audioTracks_=this.audioTracks();this.textTracksJson_=_textTrackListConverter2['default'].textTracksToJson(this.tech_);this.isReady_=false;this.tech_.dispose();this.tech_=false;};/**\n   * Return a reference to the current {@link Tech}, but only if given an object with the\n   * `IWillNotUseThisInPlugins` property having a true value. This is try and prevent misuse\n   * of techs by plugins.\n   *\n   * ```js\n   *   var myPlayer = videojs('some-player-id');\n   *\n   *   myPlayer.src(\"http://www.example.com/path/to/video.mp4\");\n   *   myPlayer.ready(function() {\n   *      // function call throws an error if we\n   *       // dont add {IWillNotUseThisInPlugins: true}\n   *      var tech = myPlayer.tech({IWillNotUseThisInPlugins: true});\n   *   });\n   * ```\n   *\n   * @param {Object} safety\n   *        An object that must contain `{IWillNotUseThisInPlugins: true}`\n   *\n   * @param {boolean} safety.IWillNotUseThisInPlugins\n   *        Must be set to true or else this function will throw an error.\n   *\n   * @return {Tech}\n   *         The Tech\n   */Player.prototype.tech=function tech(safety){if(safety&&safety.IWillNotUseThisInPlugins){return this.tech_;}var errorText='\\n      Please make sure that you are not using this inside of a plugin.\\n      To disable this alert and error, please pass in an object with\\n      `IWillNotUseThisInPlugins` to the `tech` method. See\\n      https://github.com/videojs/video.js/issues/2617 for more info.\\n    ';_window2['default'].alert(errorText);throw new Error(errorText);};/**\n   * Set up click and touch listeners for the playback element\n   *\n   * - On desktops: a click on the video itself will toggle playback\n   * - On mobile devices: a click on the video toggles controls\n   *   which is done by toggling the user state between active and\n   *   inactive\n   * - A tap can signal that a user has become active or has become inactive\n   *   e.g. a quick tap on an iPhone movie should reveal the controls. Another\n   *   quick tap should hide them again (signaling the user is in an inactive\n   *   viewing state)\n   * - In addition to this, we still want the user to be considered inactive after\n   *   a few seconds of inactivity.\n   *\n   * > Note: the only part of iOS interaction we can't mimic with this setup\n   * is a touch and hold on the video element counting as activity in order to\n   * keep the controls showing, but that shouldn't be an issue. A touch and hold\n   * on any controls will still keep the user active\n   *\n   * @private\n   */Player.prototype.addTechControlsListeners_=function addTechControlsListeners_(){// Make sure to remove all the previous listeners in case we are called multiple times.\nthis.removeTechControlsListeners_();// Some browsers (Chrome & IE) don't trigger a click on a flash swf, but do\n// trigger mousedown/up.\n// http://stackoverflow.com/questions/1444562/javascript-onclick-event-over-flash-object\n// Any touch events are set to block the mousedown event from happening\nthis.on(this.tech_,'mousedown',this.handleTechClick_);// If the controls were hidden we don't want that to change without a tap event\n// so we'll check if the controls were already showing before reporting user\n// activity\nthis.on(this.tech_,'touchstart',this.handleTechTouchStart_);this.on(this.tech_,'touchmove',this.handleTechTouchMove_);this.on(this.tech_,'touchend',this.handleTechTouchEnd_);// The tap listener needs to come after the touchend listener because the tap\n// listener cancels out any reportedUserActivity when setting userActive(false)\nthis.on(this.tech_,'tap',this.handleTechTap_);};/**\n   * Remove the listeners used for click and tap controls. This is needed for\n   * toggling to controls disabled, where a tap/touch should do nothing.\n   *\n   * @private\n   */Player.prototype.removeTechControlsListeners_=function removeTechControlsListeners_(){// We don't want to just use `this.off()` because there might be other needed\n// listeners added by techs that extend this.\nthis.off(this.tech_,'tap',this.handleTechTap_);this.off(this.tech_,'touchstart',this.handleTechTouchStart_);this.off(this.tech_,'touchmove',this.handleTechTouchMove_);this.off(this.tech_,'touchend',this.handleTechTouchEnd_);this.off(this.tech_,'mousedown',this.handleTechClick_);};/**\n   * Player waits for the tech to be ready\n   *\n   * @private\n   */Player.prototype.handleTechReady_=function handleTechReady_(){this.triggerReady();// Keep the same volume as before\nif(this.cache_.volume){this.techCall_('setVolume',this.cache_.volume);}// Look if the tech found a higher resolution poster while loading\nthis.handleTechPosterChange_();// Update the duration if available\nthis.handleTechDurationChange_();// Chrome and Safari both have issues with autoplay.\n// In Safari (5.1.1), when we move the video element into the container div, autoplay doesn't work.\n// In Chrome (15), if you have autoplay + a poster + no controls, the video gets hidden (but audio plays)\n// This fixes both issues. Need to wait for API, so it updates displays correctly\nif((this.src()||this.currentSrc())&&this.tag&&this.options_.autoplay&&this.paused()){try{// Chrome Fix. Fixed in Chrome v16.\ndelete this.tag.poster;}catch(e){(0,_log2['default'])('deleting tag.poster throws in some browsers',e);}this.play();}};/**\n   * Retrigger the `loadstart` event that was triggered by the {@link Tech}. This\n   * function will also trigger {@link Player#firstplay} if it is the first loadstart\n   * for a video.\n   *\n   * @fires Player#loadstart\n   * @fires Player#firstplay\n   * @listens Tech#loadstart\n   * @private\n   */Player.prototype.handleTechLoadStart_=function handleTechLoadStart_(){// TODO: Update to use `emptied` event instead. See #1277.\nthis.removeClass('vjs-ended');// reset the error state\nthis.error(null);// If it's already playing we want to trigger a firstplay event now.\n// The firstplay event relies on both the play and loadstart events\n// which can happen in any order for a new source\nif(!this.paused()){/**\n       * Fired when the user agent begins looking for media data\n       *\n       * @event Player#loadstart\n       * @type {EventTarget~Event}\n       */this.trigger('loadstart');this.trigger('firstplay');}else{// reset the hasStarted state\nthis.hasStarted(false);this.trigger('loadstart');}};/**\n   * Add/remove the vjs-has-started class\n   *\n   * @fires Player#firstplay\n   *\n   * @param {boolean} hasStarted\n   *        - true: adds the class\n   *        - false: remove the class\n   *\n   * @return {boolean}\n   *         the boolean value of hasStarted\n   */Player.prototype.hasStarted=function hasStarted(_hasStarted){if(_hasStarted!==undefined){// only update if this is a new value\nif(this.hasStarted_!==_hasStarted){this.hasStarted_=_hasStarted;if(_hasStarted){this.addClass('vjs-has-started');// trigger the firstplay event if this newly has played\nthis.trigger('firstplay');}else{this.removeClass('vjs-has-started');}}return this;}return!!this.hasStarted_;};/**\n   * Fired whenever the media begins or resumes playback\n   *\n   * @see [Spec]{@link https://html.spec.whatwg.org/multipage/embedded-content.html#dom-media-play}\n   * @fires Player#play\n   * @listens Tech#play\n   * @private\n   */Player.prototype.handleTechPlay_=function handleTechPlay_(){this.removeClass('vjs-ended');this.removeClass('vjs-paused');this.addClass('vjs-playing');// hide the poster when the user hits play\nthis.hasStarted(true);/**\n     * Triggered whenever an {@link Tech#play} event happens. Indicates that\n     * playback has started or resumed.\n     *\n     * @event Player#play\n     * @type {EventTarget~Event}\n     */this.trigger('play');};/**\n   * Retrigger the `waiting` event that was triggered by the {@link Tech}.\n   *\n   * @fires Player#waiting\n   * @listens Tech#waiting\n   * @private\n   */Player.prototype.handleTechWaiting_=function handleTechWaiting_(){var _this3=this;this.addClass('vjs-waiting');/**\n     * A readyState change on the DOM element has caused playback to stop.\n     *\n     * @event Player#waiting\n     * @type {EventTarget~Event}\n     */this.trigger('waiting');this.one('timeupdate',function(){return _this3.removeClass('vjs-waiting');});};/**\n   * Retrigger the `canplay` event that was triggered by the {@link Tech}.\n   * > Note: This is not consistent between browsers. See #1351\n   *\n   * @fires Player#canplay\n   * @listens Tech#canplay\n   * @private\n   */Player.prototype.handleTechCanPlay_=function handleTechCanPlay_(){this.removeClass('vjs-waiting');/**\n     * The media has a readyState of HAVE_FUTURE_DATA or greater.\n     *\n     * @event Player#canplay\n     * @type {EventTarget~Event}\n     */this.trigger('canplay');};/**\n   * Retrigger the `canplaythrough` event that was triggered by the {@link Tech}.\n   *\n   * @fires Player#canplaythrough\n   * @listens Tech#canplaythrough\n   * @private\n   */Player.prototype.handleTechCanPlayThrough_=function handleTechCanPlayThrough_(){this.removeClass('vjs-waiting');/**\n     * The media has a readyState of HAVE_ENOUGH_DATA or greater. This means that the\n     * entire media file can be played without buffering.\n     *\n     * @event Player#canplaythrough\n     * @type {EventTarget~Event}\n     */this.trigger('canplaythrough');};/**\n   * Retrigger the `playing` event that was triggered by the {@link Tech}.\n   *\n   * @fires Player#playing\n   * @listens Tech#playing\n   * @private\n   */Player.prototype.handleTechPlaying_=function handleTechPlaying_(){this.removeClass('vjs-waiting');/**\n     * The media is no longer blocked from playback, and has started playing.\n     *\n     * @event Player#playing\n     * @type {EventTarget~Event}\n     */this.trigger('playing');};/**\n   * Retrigger the `seeking` event that was triggered by the {@link Tech}.\n   *\n   * @fires Player#seeking\n   * @listens Tech#seeking\n   * @private\n   */Player.prototype.handleTechSeeking_=function handleTechSeeking_(){this.addClass('vjs-seeking');/**\n     * Fired whenever the player is jumping to a new time\n     *\n     * @event Player#seeking\n     * @type {EventTarget~Event}\n     */this.trigger('seeking');};/**\n   * Retrigger the `seeked` event that was triggered by the {@link Tech}.\n   *\n   * @fires Player#seeked\n   * @listens Tech#seeked\n   * @private\n   */Player.prototype.handleTechSeeked_=function handleTechSeeked_(){this.removeClass('vjs-seeking');/**\n     * Fired when the player has finished jumping to a new time\n     *\n     * @event Player#seeked\n     * @type {EventTarget~Event}\n     */this.trigger('seeked');};/**\n   * Retrigger the `firstplay` event that was triggered by the {@link Tech}.\n   *\n   * @fires Player#firstplay\n   * @listens Tech#firstplay\n   * @private\n   */Player.prototype.handleTechFirstPlay_=function handleTechFirstPlay_(){// If the first starttime attribute is specified\n// then we will start at the given offset in seconds\nif(this.options_.starttime){this.currentTime(this.options_.starttime);}this.addClass('vjs-has-started');/**\n     * Fired the first time a video is played. Not part of the HLS spec, and this is\n     * probably not the best implementation yet, so use sparingly. If you don't have a\n     * reason to prevent playback, use `myPlayer.one('play');` instead.\n     *\n     * @event Player#firstplay\n     * @type {EventTarget~Event}\n     */this.trigger('firstplay');};/**\n   * Retrigger the `pause` event that was triggered by the {@link Tech}.\n   *\n   * @fires Player#pause\n   * @listens Tech#pause\n   * @private\n   */Player.prototype.handleTechPause_=function handleTechPause_(){this.removeClass('vjs-playing');this.addClass('vjs-paused');/**\n     * Fired whenever the media has been paused\n     *\n     * @event Player#pause\n     * @type {EventTarget~Event}\n     */this.trigger('pause');};/**\n   * Retrigger the `ended` event that was triggered by the {@link Tech}.\n   *\n   * @fires Player#ended\n   * @listens Tech#ended\n   * @private\n   */Player.prototype.handleTechEnded_=function handleTechEnded_(){this.addClass('vjs-ended');if(this.options_.loop){this.currentTime(0);this.play();}else if(!this.paused()){this.pause();}/**\n     * Fired when the end of the media resource is reached (currentTime == duration)\n     *\n     * @event Player#ended\n     * @type {EventTarget~Event}\n     */this.trigger('ended');};/**\n   * Fired when the duration of the media resource is first known or changed\n   *\n   * @listens Tech#durationchange\n   * @private\n   */Player.prototype.handleTechDurationChange_=function handleTechDurationChange_(){this.duration(this.techGet_('duration'));};/**\n   * Handle a click on the media element to play/pause\n   *\n   * @param {EventTarget~Event} event\n   *        the event that caused this function to trigger\n   *\n   * @listens Tech#mousedown\n   * @private\n   */Player.prototype.handleTechClick_=function handleTechClick_(event){// We're using mousedown to detect clicks thanks to Flash, but mousedown\n// will also be triggered with right-clicks, so we need to prevent that\nif(event.button!==0){return;}// When controls are disabled a click should not toggle playback because\n// the click is considered a control\nif(this.controls()){if(this.paused()){this.play();}else{this.pause();}}};/**\n   * Handle a tap on the media element. It will toggle the user\n   * activity state, which hides and shows the controls.\n   *\n   * @listens Tech#tap\n   * @private\n   */Player.prototype.handleTechTap_=function handleTechTap_(){this.userActive(!this.userActive());};/**\n   * Handle touch to start\n   *\n   * @listens Tech#touchstart\n   * @private\n   */Player.prototype.handleTechTouchStart_=function handleTechTouchStart_(){this.userWasActive=this.userActive();};/**\n   * Handle touch to move\n   *\n   * @listens Tech#touchmove\n   * @private\n   */Player.prototype.handleTechTouchMove_=function handleTechTouchMove_(){if(this.userWasActive){this.reportUserActivity();}};/**\n   * Handle touch to end\n   *\n   * @param {EventTarget~Event} event\n   *        the touchend event that triggered\n   *        this function\n   *\n   * @listens Tech#touchend\n   * @private\n   */Player.prototype.handleTechTouchEnd_=function handleTechTouchEnd_(event){// Stop the mouse events from also happening\nevent.preventDefault();};/**\n   * Fired when the player switches in or out of fullscreen mode\n   *\n   * @private\n   * @listens Player#fullscreenchange\n   */Player.prototype.handleFullscreenChange_=function handleFullscreenChange_(){if(this.isFullscreen()){this.addClass('vjs-fullscreen');}else{this.removeClass('vjs-fullscreen');}};/**\n   * native click events on the SWF aren't triggered on IE11, Win8.1RT\n   * use stageclick events triggered from inside the SWF instead\n   *\n   * @private\n   * @listens stageclick\n   */Player.prototype.handleStageClick_=function handleStageClick_(){this.reportUserActivity();};/**\n   * Handle Tech Fullscreen Change\n   *\n   * @param {EventTarget~Event} event\n   *        the fullscreenchange event that triggered this function\n   *\n   * @param {Object} data\n   *        the data that was sent with the event\n   *\n   * @private\n   * @listens Tech#fullscreenchange\n   * @fires Player#fullscreenchange\n   */Player.prototype.handleTechFullscreenChange_=function handleTechFullscreenChange_(event,data){if(data){this.isFullscreen(data.isFullscreen);}/**\n     * Fired when going in and out of fullscreen.\n     *\n     * @event Player#fullscreenchange\n     * @type {EventTarget~Event}\n     */this.trigger('fullscreenchange');};/**\n   * Fires when an error occurred during the loading of an audio/video.\n   *\n   * @private\n   * @listens Tech#error\n   */Player.prototype.handleTechError_=function handleTechError_(){var error=this.tech_.error();this.error(error);};/**\n   * Retrigger the `textdata` event that was triggered by the {@link Tech}.\n   *\n   * @fires Player#textdata\n   * @listens Tech#textdata\n   * @private\n   */Player.prototype.handleTechTextData_=function handleTechTextData_(){var data=null;if(arguments.length>1){data=arguments[1];}/**\n     * Fires when we get a textdata event from tech\n     *\n     * @event Player#textdata\n     * @type {EventTarget~Event}\n     */this.trigger('textdata',data);};/**\n   * Get object for cached values.\n   *\n   * @return {Object}\n   *         get the current object cache\n   */Player.prototype.getCache=function getCache(){return this.cache_;};/**\n   * Pass values to the playback tech\n   *\n   * @param {string} [method]\n   *        the method to call\n   *\n   * @param {Object} arg\n   *        the argument to pass\n   *\n   * @private\n   */Player.prototype.techCall_=function techCall_(method,arg){// If it's not ready yet, call method when it is\nif(this.tech_&&!this.tech_.isReady_){this.tech_.ready(function(){this[method](arg);},true);// Otherwise call method now\n}else{try{if(this.tech_){this.tech_[method](arg);}}catch(e){(0,_log2['default'])(e);throw e;}}};/**\n   * Get calls can't wait for the tech, and sometimes don't need to.\n   *\n   * @param {string} method\n   *        Tech method\n   *\n   * @return {Function|undefined}\n   *         the method or undefined\n   *\n   * @private\n   */Player.prototype.techGet_=function techGet_(method){if(this.tech_&&this.tech_.isReady_){// Flash likes to die and reload when you hide or reposition it.\n// In these cases the object methods go away and we get errors.\n// When that happens we'll catch the errors and inform tech that it's not ready any more.\ntry{return this.tech_[method]();}catch(e){// When building additional tech libs, an expected method may not be defined yet\nif(this.tech_[method]===undefined){(0,_log2['default'])('Video.js: '+method+' method not defined for '+this.techName_+' playback technology.',e);// When a method isn't available on the object it throws a TypeError\n}else if(e.name==='TypeError'){(0,_log2['default'])('Video.js: '+method+' unavailable on '+this.techName_+' playback technology element.',e);this.tech_.isReady_=false;}else{(0,_log2['default'])(e);}throw e;}}return;};/**\n   * start media playback\n   * ```js\n   *   var myPlayer = videojs('some-player-id');\n   *\n   *   myPlayer.src(\"http://www.example.com/path/to/video.mp4\");\n   *   myPlayer.ready(function() {\n   *     myPlayer.play();\n   *   });\n   * ```\n   *\n   * @return {Player}\n   *         A reference to the player object this function was called on\n   */Player.prototype.play=function play(){// Only calls the tech's play if we already have a src loaded\nif(this.src()||this.currentSrc()){this.techCall_('play');}else{this.tech_.one('loadstart',function(){this.play();});}return this;};/**\n   * Pause the video playback\n   *\n   * ```js\n   *   var myPlayer = videojs('some-player-id');\n   *\n   *   myPlayer.src(\"http://www.example.com/path/to/video.mp4\");\n   *   myPlayer.ready(function() {\n   *     myPlayer.play();\n   *     myPlayer.pause();\n   *   });\n   * ```\n   *\n   * @return {Player}\n   *         A reference to the player object this function was called on\n   */Player.prototype.pause=function pause(){this.techCall_('pause');return this;};/**\n   * Check if the player is paused or has yet to play\n   *\n   * ```js\n   *   var myPlayer = videojs('some-player-id');\n   *\n   *   myPlayer.src(\"http://www.example.com/path/to/video.mp4\");\n   *\n   *   myPlayer.ready(function() {\n   *     // true\n   *     console.log(myPlayer.paused());\n   *     // false\n   *     console.log(!myPlayer.paused());\n   *\n   *     myPlayer.play();\n   *     // false\n   *     console.log(myPlayer.paused());\n   *     // true\n   *     console.log(!myPlayer.paused());\n   *\n   *     myPlayer.pause();\n   *     // true\n   *     console.log(myPlayer.paused());\n   *     // false\n   *     console.log(!myPlayer.paused());\n   *   });\n   *\n   * ```\n   *\n   * @return {boolean}\n   *         - false: if the media is currently playing\n   *         - true: if media is not currently playing\n   */Player.prototype.paused=function paused(){// The initial state of paused should be true (in Safari it's actually false)\nreturn this.techGet_('paused')===false?false:true;};/**\n   * Returns whether or not the user is \"scrubbing\". Scrubbing is\n   * when the user has clicked the progress bar handle and is\n   * dragging it along the progress bar.\n   *\n   * @param {boolean} [isScrubbing]\n   *        wether the user is or is not scrubbing\n   *\n   * @return {boolean|Player}\n   *         A instance of the player that called this function when setting,\n   *         and the value of scrubbing when getting\n   */Player.prototype.scrubbing=function scrubbing(isScrubbing){if(isScrubbing!==undefined){this.scrubbing_=!!isScrubbing;if(isScrubbing){this.addClass('vjs-scrubbing');}else{this.removeClass('vjs-scrubbing');}return this;}return this.scrubbing_;};/**\n   * Get or set the current time (in seconds)\n   *\n   * ```js\n   *   var myPlayer = videojs('some-player-id');\n   *\n   *   myPlayer.src(\"http://www.example.com/path/to/video.mp4\");\n   *   myPlayer.ready(function() {\n   *     // set current time to 2 minutes into the video\n   *     myPlayer.currentTime(120);\n   *\n   *     // get the current time, should be 120 seconds\n   *     var whereYouAt = myPlayer.currentTime();\n   *   });\n   * ```\n   *\n   * @param {number|string} [seconds]\n   *        The time to seek to in seconds\n   *\n   * @return {Player|number}\n   *         - the current time in seconds when getting\n   *         - a reference to the current player object when\n   *           getting\n   */Player.prototype.currentTime=function currentTime(seconds){if(seconds!==undefined){this.techCall_('setCurrentTime',seconds);return this;}// cache last currentTime and return. default to 0 seconds\n//\n// Caching the currentTime is meant to prevent a massive amount of reads on the tech's\n// currentTime when scrubbing, but may not provide much performance benefit afterall.\n// Should be tested. Also something has to read the actual current time or the cache will\n// never get updated.\nthis.cache_.currentTime=this.techGet_('currentTime')||0;return this.cache_.currentTime;};/**\n   * Normally gets the length in time of the video in seconds;\n   * in all but the rarest use cases an argument will NOT be passed to the method\n   *\n   * ```js\n   *   var myPlayer = videojs('some-player-id');\n   *\n   *   myPlayer.src(\"http://www.example.com/path/to/video.mp4\");\n   *   myPlayer.ready(function() {\n   *     var lengthOfVideo = myPlayer.duration();\n   *   });\n   * ```\n   * > **NOTE**: The video must have started loading before the duration can be\n   * known, and in the case of Flash, may not be known until the video starts\n   * playing.\n   *\n   * @fires Player#durationchange\n   *\n   * @param {number} [seconds]\n   *        The duration of the video to set in seconds\n   *\n   * @return {number|Player}\n   *         - The duration of the video in seconds when getting\n   *         - A reference to the player that called this function\n   *           when setting\n   */Player.prototype.duration=function duration(seconds){if(seconds===undefined){return this.cache_.duration||0;}seconds=parseFloat(seconds)||0;// Standardize on Inifity for signaling video is live\nif(seconds<0){seconds=Infinity;}if(seconds!==this.cache_.duration){// Cache the last set value for optimized scrubbing (esp. Flash)\nthis.cache_.duration=seconds;if(seconds===Infinity){this.addClass('vjs-live');}else{this.removeClass('vjs-live');}/**\n       * @event Player#durationchange\n       * @type {EventTarget~Event}\n       */this.trigger('durationchange');}return this;};/**\n   * Calculates how much time is left in the video. Not part\n   * of the native video API.\n   *\n   * ```js\n   *   var myPlayer = videojs('some-player-id');\n   *   myPlayer.src(\"http://www.example.com/path/to/video.mp4\");\n   *   myPlayer.ready(function() {\n   *      myPlayer.currentTime(10);\n   *\n   *      // should be 10 seconds less than duration\n   *      console.log(myPlayer.remainingTime());\n   *   });\n   * ```\n   *\n   * @return {number}\n   *         The time remaining in seconds\n   */Player.prototype.remainingTime=function remainingTime(){return this.duration()-this.currentTime();};//\n// Kind of like an array of portions of the video that have been downloaded.\n/**\n   * Get a TimeRange object with an array of the times of the video\n   * that have been downloaded. If you just want the percent of the\n   * video that's been downloaded, use bufferedPercent.\n   *\n   * ```js\n   *   var myPlayer = videojs('some-player-id');\n   *\n   *   myPlayer.src(\"http://www.example.com/path/to/video.mp4\");\n   *   myPlayer.ready(function() {\n   *     var bufferedTimeRange = myPlayer.buffered();\n   *\n   *     // number of different ranges of time have been buffered.\n   *     // Usually 1\n   *     var numberOfRanges = bufferedTimeRange.length,\n   *\n   *     // Time in seconds when the first range starts.\n   *     // Usually 0\n   *     var firstRangeStart = bufferedTimeRange.start(0),\n   *\n   *     // Time in seconds when the first range ends\n   *     var firstRangeEnd = bufferedTimeRange.end(0),\n   *\n   *     // Length in seconds of the first time range\n   *     var firstRangeLength = firstRangeEnd - firstRangeStart;\n   *   });\n   * ```\n   *\n   * @see [Buffered Spec]{@link http://dev.w3.org/html5/spec/video.html#dom-media-buffered}\n   *\n   * @return {TimeRange}\n   *         A mock TimeRange object (following HTML spec)\n   */Player.prototype.buffered=function buffered(){var buffered=this.techGet_('buffered');if(!buffered||!buffered.length){buffered=(0,_timeRanges.createTimeRange)(0,0);}return buffered;};/**\n   * Get the percent (as a decimal) of the video that's been downloaded.\n   * This method is not a part of the native HTML video API.\n   *\n   * ```js\n   *   var myPlayer = videojs('some-player-id');\n   *\n   *   myPlayer.src(\"http://www.example.com/path/to/video.mp4\");\n   *   myPlayer.ready(function() {\n   *     // example 0.11 aka 11%\n   *     var howMuchIsDownloaded = myPlayer.bufferedPercent();\n   *   });\n   * ```\n   *\n   * @return {number}\n   *         A decimal between 0 and 1 representing the percent\n   *         that is bufferred 0 being 0% and 1 being 100%\n   */Player.prototype.bufferedPercent=function bufferedPercent(){return(0,_buffer.bufferedPercent)(this.buffered(),this.duration());};/**\n   * Get the ending time of the last buffered time range\n   * This is used in the progress bar to encapsulate all time ranges.\n   *\n   * @return {number}\n   *         The end of the last buffered time range\n   */Player.prototype.bufferedEnd=function bufferedEnd(){var buffered=this.buffered();var duration=this.duration();var end=buffered.end(buffered.length-1);if(end>duration){end=duration;}return end;};/**\n   * Get or set the current volume of the media\n   *\n   * ```js\n   *   var myPlayer = videojs('some-player-id');\n   *\n   *   myPlayer.src(\"http://www.example.com/path/to/video.mp4\");\n   *   myPlayer.ready(function() {\n   *     // get\n   *     var howLoudIsIt = myPlayer.volume();\n   *     // set\n   *     myPlayer.volume(0.5); // Set volume to half\n   *   });\n   * ```\n   *\n   * @param  {number} [percentAsDecimal]\n   *         The new volume as a decimal percent:\n   *         - 0 is muted/0%/off\n   *         - 1.0 is 100%/full\n   *         - 0.5 is half volume or 50%\n   *\n   * @return {Player|number}\n   *         a reference to the calling player when setting and the\n   *         current volume as a percent when getting\n   */Player.prototype.volume=function volume(percentAsDecimal){var vol=void 0;if(percentAsDecimal!==undefined){// Force value to between 0 and 1\nvol=Math.max(0,Math.min(1,parseFloat(percentAsDecimal)));this.cache_.volume=vol;this.techCall_('setVolume',vol);return this;}// Default to 1 when returning current volume.\nvol=parseFloat(this.techGet_('volume'));return isNaN(vol)?1:vol;};/**\n   * Get the current muted state, or turn mute on or off\n   * ```js\n   *   var myPlayer = videojs('some-player-id');\n   *\n   *   myPlayer.src(\"http://www.example.com/path/to/video.mp4\");\n   *   myPlayer.ready(function() {\n   *     // get, should be false\n   *     console.log(myPlayer.muted());\n   *     // set to true\n   *     myPlayer.muted(true);\n   *     // get should be true\n   *     console.log(myPlayer.muted());\n   *   });\n   * ```\n   *\n   * @param {boolean} [muted]\n   *        - true to mute\n   *        - false to unmute\n   *\n   * @return {boolean|Player}\n   *         - true if mute is on and getting\n   *         - false if mute is off and getting\n   *         - A reference to the current player when setting\n   */Player.prototype.muted=function muted(_muted){if(_muted!==undefined){this.techCall_('setMuted',_muted);return this;}return this.techGet_('muted')||false;};/**\n   * Check if current tech can support native fullscreen\n   * (e.g. with built in controls like iOS, so not our flash swf)\n   *\n   * @return {boolean}\n   *         if native fullscreen is supported\n   */Player.prototype.supportsFullScreen=function supportsFullScreen(){return this.techGet_('supportsFullScreen')||false;};/**\n   * Check if the player is in fullscreen mode or tell the player that it\n   * is or is not in fullscreen mode.\n   *\n   * ```js\n   *   var myPlayer = videojs('some-player-id');\n   *\n   *   myPlayer.src(\"http://www.example.com/path/to/video.mp4\");\n   *   myPlayer.ready(function() {\n   *     // get, should be false\n   *     console.log(myPlayer.isFullscreen());\n   *\n   *     // set, tell the player it's in fullscreen\n   *     myPlayer.isFullscreen(true);\n   *\n   *     // get, should be true\n   *     console.log(myPlayer.isFullscreen());\n   *   });\n   * ```\n   * > NOTE: As of the latest HTML5 spec, isFullscreen is no longer an official\n   * property and instead document.fullscreenElement is used. But isFullscreen is\n   * still a valuable property for internal player workings.\n   *\n   * @param  {boolean} [isFS]\n   *         Set the players current fullscreen state\n   *\n   * @return {boolean|Player}\n   *         - true if fullscreen is on and getting\n   *         - false if fullscreen is off and getting\n   *         - A reference to the current player when setting\n   */Player.prototype.isFullscreen=function isFullscreen(isFS){if(isFS!==undefined){this.isFullscreen_=!!isFS;return this;}return!!this.isFullscreen_;};/**\n   * Increase the size of the video to full screen\n   * ```js\n   *   var myPlayer = videojs('some-player-id');\n   *\n   *   myPlayer.src(\"http://www.example.com/path/to/video.mp4\");\n   *   myPlayer.ready(function() {\n   *     myPlayer.requestFullscreen();\n   *   });\n   * ```\n   * In some browsers, full screen is not supported natively, so it enters\n   * \"full window mode\", where the video fills the browser window.\n   * In browsers and devices that support native full screen, sometimes the\n   * browser's default controls will be shown, and not the Video.js custom skin.\n   * This includes most mobile devices (iOS, Android) and older versions of\n   * Safari.\n   *\n   * @fires Player#fullscreenchange\n   * @return {Player}\n   *         A reference to the current player\n   */Player.prototype.requestFullscreen=function requestFullscreen(){var fsApi=_fullscreenApi2['default'];this.isFullscreen(true);if(fsApi.requestFullscreen){// the browser supports going fullscreen at the element level so we can\n// take the controls fullscreen as well as the video\n// Trigger fullscreenchange event after change\n// We have to specifically add this each time, and remove\n// when canceling fullscreen. Otherwise if there's multiple\n// players on a page, they would all be reacting to the same fullscreen\n// events\nEvents.on(_document2['default'],fsApi.fullscreenchange,Fn.bind(this,function documentFullscreenChange(e){this.isFullscreen(_document2['default'][fsApi.fullscreenElement]);// If cancelling fullscreen, remove event listener.\nif(this.isFullscreen()===false){Events.off(_document2['default'],fsApi.fullscreenchange,documentFullscreenChange);}/**\n         * @event Player#fullscreenchange\n         * @type {EventTarget~Event}\n         */this.trigger('fullscreenchange');}));this.el_[fsApi.requestFullscreen]();}else if(this.tech_.supportsFullScreen()){// we can't take the video.js controls fullscreen but we can go fullscreen\n// with native controls\nthis.techCall_('enterFullScreen');}else{// fullscreen isn't supported so we'll just stretch the video element to\n// fill the viewport\nthis.enterFullWindow();/**\n       * @event Player#fullscreenchange\n       * @type {EventTarget~Event}\n       */this.trigger('fullscreenchange');}return this;};/**\n   * Return the video to its normal size after having been in full screen mode\n   *\n   * ```js\n   *   var myPlayer = videojs('some-player-id');\n   *\n   *   myPlayer.src(\"http://www.example.com/path/to/video.mp4\");\n   *   myPlayer.ready(function() {\n   *     myPlayer.requestFullscreen();\n   *     myPlayer.exitFullscreen();\n   *   });\n   * ```\n   *\n   * @fires Player#fullscreenchange\n   *\n   * @return {Player}\n   *         A reference to the current player\n   */Player.prototype.exitFullscreen=function exitFullscreen(){var fsApi=_fullscreenApi2['default'];this.isFullscreen(false);// Check for browser element fullscreen support\nif(fsApi.requestFullscreen){_document2['default'][fsApi.exitFullscreen]();}else if(this.tech_.supportsFullScreen()){this.techCall_('exitFullScreen');}else{this.exitFullWindow();/**\n       * @event Player#fullscreenchange\n       * @type {EventTarget~Event}\n       */this.trigger('fullscreenchange');}return this;};/**\n   * When fullscreen isn't supported we can stretch the\n   * video container to as wide as the browser will let us.\n   *\n   * @fires Player#enterFullWindow\n   */Player.prototype.enterFullWindow=function enterFullWindow(){this.isFullWindow=true;// Storing original doc overflow value to return to when fullscreen is off\nthis.docOrigOverflow=_document2['default'].documentElement.style.overflow;// Add listener for esc key to exit fullscreen\nEvents.on(_document2['default'],'keydown',Fn.bind(this,this.fullWindowOnEscKey));// Hide any scroll bars\n_document2['default'].documentElement.style.overflow='hidden';// Apply fullscreen styles\nDom.addElClass(_document2['default'].body,'vjs-full-window');/**\n     * @event Player#enterFullWindow\n     * @type {EventTarget~Event}\n     */this.trigger('enterFullWindow');};/**\n   * Check for call to either exit full window or\n   * full screen on ESC key\n   *\n   * @param {string} event\n   *        Event to check for key press\n   */Player.prototype.fullWindowOnEscKey=function fullWindowOnEscKey(event){if(event.keyCode===27){if(this.isFullscreen()===true){this.exitFullscreen();}else{this.exitFullWindow();}}};/**\n   * Exit full window\n   *\n   * @fires Player#exitFullWindow\n   */Player.prototype.exitFullWindow=function exitFullWindow(){this.isFullWindow=false;Events.off(_document2['default'],'keydown',this.fullWindowOnEscKey);// Unhide scroll bars.\n_document2['default'].documentElement.style.overflow=this.docOrigOverflow;// Remove fullscreen styles\nDom.removeElClass(_document2['default'].body,'vjs-full-window');// Resize the box, controller, and poster to original sizes\n// this.positionAll();\n/**\n     * @event Player#exitFullWindow\n     * @type {EventTarget~Event}\n     */this.trigger('exitFullWindow');};/**\n   * Check whether the player can play a given mimetype\n   *\n   * @see https://www.w3.org/TR/2011/WD-html5-20110113/video.html#dom-navigator-canplaytype\n   *\n   * @param {string} type\n   *        The mimetype to check\n   *\n   * @return {string}\n   *         'probably', 'maybe', or '' (empty string)\n   */Player.prototype.canPlayType=function canPlayType(type){var can=void 0;// Loop through each playback technology in the options order\nfor(var i=0,j=this.options_.techOrder;i<j.length;i++){var techName=(0,_toTitleCase2['default'])(j[i]);var tech=_tech2['default'].getTech(techName);// Support old behavior of techs being registered as components.\n// Remove once that deprecated behavior is removed.\nif(!tech){tech=_component2['default'].getComponent(techName);}// Check if the current tech is defined before continuing\nif(!tech){_log2['default'].error('The \"'+techName+'\" tech is undefined. Skipped browser support check for that tech.');continue;}// Check if the browser supports this technology\nif(tech.isSupported()){can=tech.canPlayType(type);if(can){return can;}}}return'';};/**\n   * Select source based on tech-order or source-order\n   * Uses source-order selection if `options.sourceOrder` is truthy. Otherwise,\n   * defaults to tech-order selection\n   *\n   * @param {Array} sources\n   *        The sources for a media asset\n   *\n   * @return {Object|boolean}\n   *         Object of source and tech order or false\n   */Player.prototype.selectSource=function selectSource(sources){var _this4=this;// Get only the techs specified in `techOrder` that exist and are supported by the\n// current platform\nvar techs=this.options_.techOrder.map(_toTitleCase2['default']).map(function(techName){// `Component.getComponent(...)` is for support of old behavior of techs\n// being registered as components.\n// Remove once that deprecated behavior is removed.\nreturn[techName,_tech2['default'].getTech(techName)||_component2['default'].getComponent(techName)];}).filter(function(_ref){var techName=_ref[0],tech=_ref[1];// Check if the current tech is defined before continuing\nif(tech){// Check if the browser supports this technology\nreturn tech.isSupported();}_log2['default'].error('The \"'+techName+'\" tech is undefined. Skipped browser support check for that tech.');return false;});// Iterate over each `innerArray` element once per `outerArray` element and execute\n// `tester` with both. If `tester` returns a non-falsy value, exit early and return\n// that value.\nvar findFirstPassingTechSourcePair=function findFirstPassingTechSourcePair(outerArray,innerArray,tester){var found=void 0;outerArray.some(function(outerChoice){return innerArray.some(function(innerChoice){found=tester(outerChoice,innerChoice);if(found){return true;}});});return found;};var foundSourceAndTech=void 0;var flip=function flip(fn){return function(a,b){return fn(b,a);};};var finder=function finder(_ref2,source){var techName=_ref2[0],tech=_ref2[1];if(tech.canPlaySource(source,_this4.options_[techName.toLowerCase()])){return{source:source,tech:techName};}};// Depending on the truthiness of `options.sourceOrder`, we swap the order of techs and sources\n// to select from them based on their priority.\nif(this.options_.sourceOrder){// Source-first ordering\nfoundSourceAndTech=findFirstPassingTechSourcePair(sources,techs,flip(finder));}else{// Tech-first ordering\nfoundSourceAndTech=findFirstPassingTechSourcePair(techs,sources,finder);}return foundSourceAndTech||false;};/**\n   * The source function updates the video source\n   * There are three types of variables you can pass as the argument.\n   * **URL string**: A URL to the the video file. Use this method if you are sure\n   * the current playback technology (HTML5/Flash) can support the source you\n   * provide. Currently only MP4 files can be used in both HTML5 and Flash.\n   *\n   * ```js\n   *   var myPlayer = videojs('some-player-id');\n   *\n   *   myPlayer.src(\"http://www.example.com/path/to/video.mp4\");\n   * ```\n   *\n   * **Source Object (or element):* * A javascript object containing information\n   * about the source file. Use this method if you want the player to determine if\n   * it can support the file using the type information.\n   *\n   * ```js\n   *   var myPlayer = videojs('some-player-id');\n   *\n   *   myPlayer.src({type: \"video/mp4\", src: \"http://www.example.com/path/to/video.mp4\"});\n   * ```\n   *\n   * **Array of Source Objects:* * To provide multiple versions of the source so\n   * that it can be played using HTML5 across browsers you can use an array of\n   * source objects. Video.js will detect which version is supported and load that\n   * file.\n   *\n   * ```js\n   *   var myPlayer = videojs('some-player-id');\n   *\n   *   myPlayer.src([\n   *     {type: \"video/mp4\", src: \"http://www.example.com/path/to/video.mp4\"},\n   *     {type: \"video/webm\", src: \"http://www.example.com/path/to/video.webm\"},\n   *     {type: \"video/ogg\", src: \"http://www.example.com/path/to/video.ogv\"}\n   *   ]);\n   * ```\n   *\n   * @param {Tech~SourceObject|Tech~SourceObject[]} [source]\n   *        One SourceObject or an array of SourceObjects\n   *\n   * @return {string|Player}\n   *         - The current video source when getting\n   *         - The player when setting\n   */Player.prototype.src=function src(source){if(source===undefined){return this.techGet_('src');}var currentTech=_tech2['default'].getTech(this.techName_);// Support old behavior of techs being registered as components.\n// Remove once that deprecated behavior is removed.\nif(!currentTech){currentTech=_component2['default'].getComponent(this.techName_);}// case: Array of source objects to choose from and pick the best to play\nif(Array.isArray(source)){this.sourceList_(source);// case: URL String (http://myvideo...)\n}else if(typeof source==='string'){// create a source object from the string\nthis.src({src:source});// case: Source object { src: '', type: '' ... }\n}else if(source instanceof Object){// check if the source has a type and the loaded tech cannot play the source\n// if there's no type we'll just try the current tech\nif(source.type&&!currentTech.canPlaySource(source,this.options_[this.techName_.toLowerCase()])){// create a source list with the current source and send through\n// the tech loop to check for a compatible technology\nthis.sourceList_([source]);}else{this.cache_.sources=null;this.cache_.source=source;this.cache_.src=source.src;this.currentType_=source.type||'';// wait until the tech is ready to set the source\nthis.ready(function(){// The setSource tech method was added with source handlers\n// so older techs won't support it\n// We need to check the direct prototype for the case where subclasses\n// of the tech do not support source handlers\nif(currentTech.prototype.hasOwnProperty('setSource')){this.techCall_('setSource',source);}else{this.techCall_('src',source.src);}if(this.options_.preload==='auto'){this.load();}if(this.options_.autoplay){this.play();}// Set the source synchronously if possible (#2326)\n},true);}}return this;};/**\n   * Handle an array of source objects\n   *\n   * @param  {Tech~SourceObject[]} sources\n   *         Array of source objects\n   *\n   * @private\n   */Player.prototype.sourceList_=function sourceList_(sources){var sourceTech=this.selectSource(sources);if(sourceTech){if(sourceTech.tech===this.techName_){// if this technology is already loaded, set the source\nthis.src(sourceTech.source);}else{// load this technology with the chosen source\nthis.loadTech_(sourceTech.tech,sourceTech.source);}this.cache_.sources=sources;}else{// We need to wrap this in a timeout to give folks a chance to add error event handlers\nthis.setTimeout(function(){this.error({code:4,message:this.localize(this.options_.notSupportedMessage)});},0);// we could not find an appropriate tech, but let's still notify the delegate that this is it\n// this needs a better comment about why this is needed\nthis.triggerReady();}};/**\n   * Begin loading the src data.\n   *\n   * @return {Player}\n   *         A reference to the player\n   */Player.prototype.load=function load(){this.techCall_('load');return this;};/**\n   * Reset the player. Loads the first tech in the techOrder,\n   * and calls `reset` on the tech`.\n   *\n   * @return {Player}\n   *         A reference to the player\n   */Player.prototype.reset=function reset(){this.loadTech_((0,_toTitleCase2['default'])(this.options_.techOrder[0]),null);this.techCall_('reset');return this;};/**\n   * Returns all of the current source objects.\n   *\n   * @return {Tech~SourceObject[]}\n   *         The current source objects\n   */Player.prototype.currentSources=function currentSources(){var source=this.currentSource();var sources=[];// assume `{}` or `{ src }`\nif(Object.keys(source).length!==0){sources.push(source);}return this.cache_.sources||sources;};/**\n   * Returns the current source object.\n   *\n   * @return {Tech~SourceObject}\n   *         The current source object\n   */Player.prototype.currentSource=function currentSource(){var source={};var src=this.currentSrc();if(src){source.src=src;}return this.cache_.source||source;};/**\n   * Returns the fully qualified URL of the current source value e.g. http://mysite.com/video.mp4\n   * Can be used in conjuction with `currentType` to assist in rebuilding the current source object.\n   *\n   * @return {string}\n   *         The current source\n   */Player.prototype.currentSrc=function currentSrc(){return this.techGet_('currentSrc')||this.cache_.src||'';};/**\n   * Get the current source type e.g. video/mp4\n   * This can allow you rebuild the current source object so that you could load the same\n   * source and tech later\n   *\n   * @return {string}\n   *         The source MIME type\n   */Player.prototype.currentType=function currentType(){return this.currentType_||'';};/**\n   * Get or set the preload attribute\n   *\n   * @param {boolean} [value]\n   *        - true means that we should preload\n   *        - false maens that we should not preload\n   *\n   * @return {string|Player}\n   *         - the preload attribute value when getting\n   *         - the player when setting\n   */Player.prototype.preload=function preload(value){if(value!==undefined){this.techCall_('setPreload',value);this.options_.preload=value;return this;}return this.techGet_('preload');};/**\n   * Get or set the autoplay attribute.\n   *\n   * @param {boolean} [value]\n   *        - true means that we should autoplay\n   *        - false maens that we should not autoplay\n   *\n   * @return {string|Player}\n   *         - the current value of autoplay\n   *         - the player when setting\n   */Player.prototype.autoplay=function autoplay(value){if(value!==undefined){this.techCall_('setAutoplay',value);this.options_.autoplay=value;return this;}return this.techGet_('autoplay',value);};/**\n   * Get or set the loop attribute on the video element.\n   *\n   * @param {boolean} [value]\n   *        - true means that we should loop the video\n   *        - false means that we should not loop the video\n   *\n   * @return {string|Player}\n   *         - the current value of loop when getting\n   *         - the player when setting\n   */Player.prototype.loop=function loop(value){if(value!==undefined){this.techCall_('setLoop',value);this.options_.loop=value;return this;}return this.techGet_('loop');};/**\n   * Get or set the poster image source url\n   *\n   * EXAMPLE\n   * ```js\n   *   var myPlayer = videojs('example_video_1');\n   *\n   *   // set\n   *   myPlayer.poster('http://example.com/myImage.jpg');\n   *\n   *   // get\n   *   console.log(myPlayer.poster());\n   *   // 'http://example.com/myImage.jpg'\n   * ```\n   *\n   * @fires Player#posterchange\n   *\n   * @param {string} [src]\n   *        Poster image source URL\n   *\n   * @return {string|Player}\n   *         - the current value of poster when getting\n   *         - the player when setting\n   */Player.prototype.poster=function poster(src){if(src===undefined){return this.poster_;}// The correct way to remove a poster is to set as an empty string\n// other falsey values will throw errors\nif(!src){src='';}// update the internal poster variable\nthis.poster_=src;// update the tech's poster\nthis.techCall_('setPoster',src);// alert components that the poster has been set\n/**\n     * This event fires when the poster image is changed on the player.\n     *\n     * @event Player#posterchange\n     * @type {EventTarget~Event}\n     */this.trigger('posterchange');return this;};/**\n   * Some techs (e.g. YouTube) can provide a poster source in an\n   * asynchronous way. We want the poster component to use this\n   * poster source so that it covers up the tech's controls.\n   * (YouTube's play button). However we only want to use this\n   * soruce if the player user hasn't set a poster through\n   * the normal APIs.\n   *\n   * @fires Player#posterchange\n   * @listens Tech#posterchange\n   * @private\n   */Player.prototype.handleTechPosterChange_=function handleTechPosterChange_(){if(!this.poster_&&this.tech_&&this.tech_.poster){this.poster_=this.tech_.poster()||'';// Let components know the poster has changed\nthis.trigger('posterchange');}};/**\n   * Get or set whether or not the controls are showing.\n   *\n   * @fires Player#controlsenabled\n   *\n   * @param {boolean} [bool]\n   *        - true to turn controls on\n   *        - false to turn controls off\n   *\n   * @return {boolean|Player}\n   *         - the current value of controls when getting\n   *         - the player when setting\n   */Player.prototype.controls=function controls(bool){if(bool!==undefined){bool=!!bool;// Don't trigger a change event unless it actually changed\nif(this.controls_!==bool){this.controls_=bool;if(this.usingNativeControls()){this.techCall_('setControls',bool);}if(bool){this.removeClass('vjs-controls-disabled');this.addClass('vjs-controls-enabled');/**\n           * @event Player#controlsenabled\n           * @type {EventTarget~Event}\n           */this.trigger('controlsenabled');if(!this.usingNativeControls()){this.addTechControlsListeners_();}}else{this.removeClass('vjs-controls-enabled');this.addClass('vjs-controls-disabled');/**\n           * @event Player#controlsdisabled\n           * @type {EventTarget~Event}\n           */this.trigger('controlsdisabled');if(!this.usingNativeControls()){this.removeTechControlsListeners_();}}}return this;}return!!this.controls_;};/**\n   * Toggle native controls on/off. Native controls are the controls built into\n   * devices (e.g. default iPhone controls), Flash, or other techs\n   * (e.g. Vimeo Controls)\n   * **This should only be set by the current tech, because only the tech knows\n   * if it can support native controls**\n   *\n   * @fires Player#usingnativecontrols\n   * @fires Player#usingcustomcontrols\n   *\n   * @param {boolean} [bool]\n   *        - true to turn native controls on\n   *        - false to turn native controls off\n   *\n   * @return {boolean|Player}\n   *         - the current value of native controls when getting\n   *         - the player when setting\n   */Player.prototype.usingNativeControls=function usingNativeControls(bool){if(bool!==undefined){bool=!!bool;// Don't trigger a change event unless it actually changed\nif(this.usingNativeControls_!==bool){this.usingNativeControls_=bool;if(bool){this.addClass('vjs-using-native-controls');/**\n           * player is using the native device controls\n           *\n           * @event Player#usingnativecontrols\n           * @type {EventTarget~Event}\n           */this.trigger('usingnativecontrols');}else{this.removeClass('vjs-using-native-controls');/**\n           * player is using the custom HTML controls\n           *\n           * @event Player#usingcustomcontrols\n           * @type {EventTarget~Event}\n           */this.trigger('usingcustomcontrols');}}return this;}return!!this.usingNativeControls_;};/**\n   * Set or get the current MediaError\n   *\n   * @fires Player#error\n   *\n   * @param  {MediaError|string|number} [err]\n   *         A MediaError or a string/number to be turned\n   *         into a MediaError\n   *\n   * @return {MediaError|null|Player}\n   *         - The current MediaError when getting (or null)\n   *         - The player when setting\n   */Player.prototype.error=function error(err){if(err===undefined){return this.error_||null;}// restoring to default\nif(err===null){this.error_=err;this.removeClass('vjs-error');if(this.errorDisplay){this.errorDisplay.close();}return this;}this.error_=new _mediaError2['default'](err);// add the vjs-error classname to the player\nthis.addClass('vjs-error');// log the name of the error type and any message\n// ie8 just logs \"[object object]\" if you just log the error object\n_log2['default'].error('(CODE:'+this.error_.code+' '+_mediaError2['default'].errorTypes[this.error_.code]+')',this.error_.message,this.error_);/**\n     * @event Player#error\n     * @type {EventTarget~Event}\n     */this.trigger('error');return this;};/**\n   * Report user activity\n   *\n   * @param {Object} event\n   *        Event object\n   */Player.prototype.reportUserActivity=function reportUserActivity(event){this.userActivity_=true;};/**\n   * Get/set if user is active\n   *\n   * @fires Player#useractive\n   * @fires Player#userinactive\n   *\n   * @param {boolean} [bool]\n   *        - true if the user is active\n   *        - false if the user is inactive\n   * @return {boolean|Player}\n   *         - the current value of userActive when getting\n   *         - the player when setting\n   */Player.prototype.userActive=function userActive(bool){if(bool!==undefined){bool=!!bool;if(bool!==this.userActive_){this.userActive_=bool;if(bool){// If the user was inactive and is now active we want to reset the\n// inactivity timer\nthis.userActivity_=true;this.removeClass('vjs-user-inactive');this.addClass('vjs-user-active');/**\n           * @event Player#useractive\n           * @type {EventTarget~Event}\n           */this.trigger('useractive');}else{// We're switching the state to inactive manually, so erase any other\n// activity\nthis.userActivity_=false;// Chrome/Safari/IE have bugs where when you change the cursor it can\n// trigger a mousemove event. This causes an issue when you're hiding\n// the cursor when the user is inactive, and a mousemove signals user\n// activity. Making it impossible to go into inactive mode. Specifically\n// this happens in fullscreen when we really need to hide the cursor.\n//\n// When this gets resolved in ALL browsers it can be removed\n// https://code.google.com/p/chromium/issues/detail?id=103041\nif(this.tech_){this.tech_.one('mousemove',function(e){e.stopPropagation();e.preventDefault();});}this.removeClass('vjs-user-active');this.addClass('vjs-user-inactive');/**\n           * @event Player#userinactive\n           * @type {EventTarget~Event}\n           */this.trigger('userinactive');}}return this;}return this.userActive_;};/**\n   * Listen for user activity based on timeout value\n   *\n   * @private\n   */Player.prototype.listenForUserActivity_=function listenForUserActivity_(){var mouseInProgress=void 0;var lastMoveX=void 0;var lastMoveY=void 0;var handleActivity=Fn.bind(this,this.reportUserActivity);var handleMouseMove=function handleMouseMove(e){// #1068 - Prevent mousemove spamming\n// Chrome Bug: https://code.google.com/p/chromium/issues/detail?id=366970\nif(e.screenX!==lastMoveX||e.screenY!==lastMoveY){lastMoveX=e.screenX;lastMoveY=e.screenY;handleActivity();}};var handleMouseDown=function handleMouseDown(){handleActivity();// For as long as the they are touching the device or have their mouse down,\n// we consider them active even if they're not moving their finger or mouse.\n// So we want to continue to update that they are active\nthis.clearInterval(mouseInProgress);// Setting userActivity=true now and setting the interval to the same time\n// as the activityCheck interval (250) should ensure we never miss the\n// next activityCheck\nmouseInProgress=this.setInterval(handleActivity,250);};var handleMouseUp=function handleMouseUp(event){handleActivity();// Stop the interval that maintains activity if the mouse/touch is down\nthis.clearInterval(mouseInProgress);};// Any mouse movement will be considered user activity\nthis.on('mousedown',handleMouseDown);this.on('mousemove',handleMouseMove);this.on('mouseup',handleMouseUp);// Listen for keyboard navigation\n// Shouldn't need to use inProgress interval because of key repeat\nthis.on('keydown',handleActivity);this.on('keyup',handleActivity);// Run an interval every 250 milliseconds instead of stuffing everything into\n// the mousemove/touchmove function itself, to prevent performance degradation.\n// `this.reportUserActivity` simply sets this.userActivity_ to true, which\n// then gets picked up by this loop\n// http://ejohn.org/blog/learning-from-twitter/\nvar inactivityTimeout=void 0;this.setInterval(function(){// Check to see if mouse/touch activity has happened\nif(this.userActivity_){// Reset the activity tracker\nthis.userActivity_=false;// If the user state was inactive, set the state to active\nthis.userActive(true);// Clear any existing inactivity timeout to start the timer over\nthis.clearTimeout(inactivityTimeout);var timeout=this.options_.inactivityTimeout;if(timeout>0){// In <timeout> milliseconds, if no more activity has occurred the\n// user will be considered inactive\ninactivityTimeout=this.setTimeout(function(){// Protect against the case where the inactivityTimeout can trigger just\n// before the next user activity is picked up by the activity check loop\n// causing a flicker\nif(!this.userActivity_){this.userActive(false);}},timeout);}}},250);};/**\n   * Gets or sets the current playback rate. A playback rate of\n   * 1.0 represents normal speed and 0.5 would indicate half-speed\n   * playback, for instance.\n   *\n   * @see https://html.spec.whatwg.org/multipage/embedded-content.html#dom-media-playbackrate\n   *\n   * @param {number} [rate]\n   *       New playback rate to set.\n   *\n   * @return {number|Player}\n   *         - The current playback rate when getting or 1.0\n   *         - the player when setting\n   */Player.prototype.playbackRate=function playbackRate(rate){if(rate!==undefined){this.techCall_('setPlaybackRate',rate);return this;}if(this.tech_&&this.tech_.featuresPlaybackRate){return this.techGet_('playbackRate');}return 1.0;};/**\n   * Gets or sets the audio flag\n   *\n   * @param {boolean} bool\n   *        - true signals that this is an audio player\n   *        - false signals that this is not an audio player\n   *\n   * @return {Player|boolean}\n   *         - the current value of isAudio when getting\n   *         - the player if setting\n   */Player.prototype.isAudio=function isAudio(bool){if(bool!==undefined){this.isAudio_=!!bool;return this;}return!!this.isAudio_;};/**\n   * Get the {@link VideoTrackList}\n   *\n   * @see https://html.spec.whatwg.org/multipage/embedded-content.html#videotracklist\n   *\n   * @return {VideoTrackList}\n   *         the current video track list\n   */Player.prototype.videoTracks=function videoTracks(){// if we have not yet loadTech_, we create videoTracks_\n// these will be passed to the tech during loading\nif(!this.tech_){this.videoTracks_=this.videoTracks_||new _videoTrackList2['default']();return this.videoTracks_;}return this.tech_.videoTracks();};/**\n   * Get the {@link AudioTrackList}\n   *\n   * @see https://html.spec.whatwg.org/multipage/embedded-content.html#audiotracklist\n   *\n   * @return {AudioTrackList}\n   *         the current audio track list\n   */Player.prototype.audioTracks=function audioTracks(){// if we have not yet loadTech_, we create videoTracks_\n// these will be passed to the tech during loading\nif(!this.tech_){this.audioTracks_=this.audioTracks_||new _audioTrackList2['default']();return this.audioTracks_;}return this.tech_.audioTracks();};/**\n   * Get the {@link TextTrackList}\n   *\n   * Text tracks are tracks of timed text events.\n   * - Captions: text displayed over the video\n   *             for the hearing impaired\n   * - Subtitles: text displayed over the video for\n   *              those who don't understand language in the video\n   * - Chapters: text displayed in a menu allowing the user to jump\n   *             to particular points (chapters) in the video\n   * - Descriptions: (not yet implemented) audio descriptions that are read back to\n   *                 the user by a screen reading device\n   *\n   * @see http://www.w3.org/html/wg/drafts/html/master/embedded-content-0.html#dom-media-texttracks\n   *\n   * @return {TextTrackList|undefined}\n   *         The current TextTrackList or undefined if\n   *         or undefined if we don't have a tech\n   */Player.prototype.textTracks=function textTracks(){// cannot use techGet_ directly because it checks to see whether the tech is ready.\n// Flash is unlikely to be ready in time but textTracks should still work.\nif(this.tech_){return this.tech_.textTracks();}};/**\n   * Get the \"remote\" {@link TextTrackList}. Remote Text Tracks\n   * are tracks that were added to the HTML video element and can\n   * be removed, whereas normal texttracks cannot be removed.\n   *\n   *\n   * @return {TextTrackList|undefined}\n   *         The current remote text track list or undefined\n   *         if we don't have a tech\n   */Player.prototype.remoteTextTracks=function remoteTextTracks(){if(this.tech_){return this.tech_.remoteTextTracks();}};/**\n   * Get the \"remote\" {@link HTMLTrackElementList}.\n   * This gives the user all of the DOM elements that match up\n   * with the remote {@link TextTrackList}.\n   *\n   * @return {HTMLTrackElementList}\n   *         The current remote text track list elements\n   *         or undefined if we don't have a tech\n   */Player.prototype.remoteTextTrackEls=function remoteTextTrackEls(){if(this.tech_){return this.tech_.remoteTextTrackEls();}};/**\n   * A helper method for adding a {@link TextTrack} to our\n   * {@link TextTrackList}.\n   *\n   * In addition to the W3C settings we allow adding additional info through options.\n   *\n   * @see http://www.w3.org/html/wg/drafts/html/master/embedded-content-0.html#dom-media-addtexttrack\n   *\n   * @param {string} [kind]\n   *        the kind of TextTrack you are adding\n   *\n   * @param {string} [label]\n   *        the label to give the TextTrack label\n   *\n   * @param {string} [language]\n   *        the language to set on the TextTrack\n   *\n   * @return {TextTrack|undefined}\n   *         the TextTrack that was added or undefined\n   *         if there is no tech\n   */Player.prototype.addTextTrack=function addTextTrack(kind,label,language){if(this.tech_){return this.tech_.addTextTrack(kind,label,language);}};/**\n   * Create a remote {@link TextTrack} and an {@link HTMLTrackElement}. It will\n   * automatically removed from the video element whenever the source changes, unless\n   * manualCleanup is set to false.\n   *\n   * @param {Object} options\n   *        Options to pass to {@link HTMLTrackElement} during creation. See\n   *        {@link HTMLTrackElement} for object properties that you should use.\n   *\n   * @param {boolean} [manualCleanup=true] if set to false, the TextTrack will be\n   *\n   * @return {HTMLTrackElement}\n   *         the HTMLTrackElement that was created and added\n   *         to the HTMLTrackElementList and the remote\n   *         TextTrackList\n   *\n   * @deprecated The default value of the \"manualCleanup\" parameter will default\n   *             to \"false\" in upcoming versions of Video.js\n   */Player.prototype.addRemoteTextTrack=function addRemoteTextTrack(options,manualCleanup){if(this.tech_){return this.tech_.addRemoteTextTrack(options,manualCleanup);}};/**\n   * Remove a remote {@link TextTrack} from the respective\n   * {@link TextTrackList} and {@link HTMLTrackElementList}.\n   *\n   * @param {Object} track\n   *        Remote {@link TextTrack} to remove\n   *\n   * @return {undefined}\n   *         does not return anything\n   */Player.prototype.removeRemoteTextTrack=function removeRemoteTextTrack(){var _ref3=arguments.length>0&&arguments[0]!==undefined?arguments[0]:{},_ref3$track=_ref3.track,track=_ref3$track===undefined?arguments[0]:_ref3$track;// destructure the input into an object with a track argument, defaulting to arguments[0]\n// default the whole argument to an empty object if nothing was passed in\nif(this.tech_){return this.tech_.removeRemoteTextTrack(track);}};/**\n   * Get video width\n   *\n   * @return {number}\n   *         current video width\n   */Player.prototype.videoWidth=function videoWidth(){return this.tech_&&this.tech_.videoWidth&&this.tech_.videoWidth()||0;};/**\n   * Get video height\n   *\n   * @return {number}\n   *         current video height\n   */Player.prototype.videoHeight=function videoHeight(){return this.tech_&&this.tech_.videoHeight&&this.tech_.videoHeight()||0;};// Methods to add support for\n// initialTime: function() { return this.techCall_('initialTime'); },\n// startOffsetTime: function() { return this.techCall_('startOffsetTime'); },\n// played: function() { return this.techCall_('played'); },\n// defaultPlaybackRate: function() { return this.techCall_('defaultPlaybackRate'); },\n// defaultMuted: function() { return this.techCall_('defaultMuted'); }\n/**\n   * The player's language code\n   * NOTE: The language should be set in the player options if you want the\n   * the controls to be built with a specific language. Changing the lanugage\n   * later will not update controls text.\n   *\n   * @param {string} [code]\n   *        the language code to set the player to\n   *\n   * @return {string|Player}\n   *         - The current language code when getting\n   *         - A reference to the player when setting\n   */Player.prototype.language=function language(code){if(code===undefined){return this.language_;}this.language_=String(code).toLowerCase();return this;};/**\n   * Get the player's language dictionary\n   * Merge every time, because a newly added plugin might call videojs.addLanguage() at any time\n   * Languages specified directly in the player options have precedence\n   *\n   * @return {Array}\n   *         An array of of supported languages\n   */Player.prototype.languages=function languages(){return(0,_mergeOptions2['default'])(Player.prototype.options_.languages,this.languages_);};/**\n   * returns a JavaScript object reperesenting the current track\n   * information. **DOES not return it as JSON**\n   *\n   * @return {Object}\n   *         Object representing the current of track info\n   */Player.prototype.toJSON=function toJSON(){var options=(0,_mergeOptions2['default'])(this.options_);var tracks=options.tracks;options.tracks=[];for(var i=0;i<tracks.length;i++){var track=tracks[i];// deep merge tracks and null out player so no circular references\ntrack=(0,_mergeOptions2['default'])(track);track.player=undefined;options.tracks[i]=track;}return options;};/**\n   * Creates a simple modal dialog (an instance of the {@link ModalDialog}\n   * component) that immediately overlays the player with arbitrary\n   * content and removes itself when closed.\n   *\n   * @param {string|Function|Element|Array|null} content\n   *        Same as {@link ModalDialog#content}'s param of the same name.\n   *        The most straight-forward usage is to provide a string or DOM\n   *        element.\n   *\n   * @param {Object} [options]\n   *        Extra options which will be passed on to the {@link ModalDialog}.\n   *\n   * @return {ModalDialog}\n   *         the {@link ModalDialog} that was created\n   */Player.prototype.createModal=function createModal(content,options){var _this5=this;options=options||{};options.content=content||'';var modal=new _modalDialog2['default'](this,options);this.addChild(modal);modal.on('dispose',function(){_this5.removeChild(modal);});return modal.open();};/**\n   * Gets tag settings\n   *\n   * @param {Element} tag\n   *        The player tag\n   *\n   * @return {Object}\n   *         An object containing all of the settings\n   *         for a player tag\n   */Player.getTagSettings=function getTagSettings(tag){var baseOptions={sources:[],tracks:[]};var tagOptions=Dom.getElAttributes(tag);var dataSetup=tagOptions['data-setup'];if(Dom.hasElClass(tag,'vjs-fluid')){tagOptions.fluid=true;}// Check if data-setup attr exists.\nif(dataSetup!==null){// Parse options JSON\n// If empty string, make it a parsable json object.\nvar _safeParseTuple=(0,_tuple2['default'])(dataSetup||'{}'),err=_safeParseTuple[0],data=_safeParseTuple[1];if(err){_log2['default'].error(err);}(0,_obj.assign)(tagOptions,data);}(0,_obj.assign)(baseOptions,tagOptions);// Get tag children settings\nif(tag.hasChildNodes()){var children=tag.childNodes;for(var i=0,j=children.length;i<j;i++){var child=children[i];// Change case needed: http://ejohn.org/blog/nodename-case-sensitivity/\nvar childName=child.nodeName.toLowerCase();if(childName==='source'){baseOptions.sources.push(Dom.getElAttributes(child));}else if(childName==='track'){baseOptions.tracks.push(Dom.getElAttributes(child));}}}return baseOptions;};/**\n   * Determine wether or not flexbox is supported\n   *\n   * @return {boolean}\n   *         - true if flexbox is supported\n   *         - false if flexbox is not supported\n   */Player.prototype.flexNotSupported_=function flexNotSupported_(){var elem=_document2['default'].createElement('i');// Note: We don't actually use flexBasis (or flexOrder), but it's one of the more\n// common flex features that we can rely on when checking for flex support.\nreturn!('flexBasis'in elem.style||'webkitFlexBasis'in elem.style||'mozFlexBasis'in elem.style||'msFlexBasis'in elem.style||// IE10-specific (2012 flex spec)\n'msFlexOrder'in elem.style);};return Player;}(_component2['default']);/**\n * Global player list\n *\n * @type {Object}\n */Player.players={};var navigator=_window2['default'].navigator;/*\n * Player instance options, surfaced using options\n * options = Player.prototype.options_\n * Make changes in options, not here.\n *\n * @type {Object}\n * @private\n */Player.prototype.options_={// Default order of fallback technology\ntechOrder:['html5','flash'],// techOrder: ['flash','html5'],\nhtml5:{},flash:{},// defaultVolume: 0.85,\ndefaultVolume:0.00,// default inactivity timeout\ninactivityTimeout:2000,// default playback rates\nplaybackRates:[],// Add playback rate selection by adding rates\n// 'playbackRates': [0.5, 1, 1.5, 2],\n// Included control sets\nchildren:['mediaLoader','posterImage','textTrackDisplay','loadingSpinner','bigPlayButton','controlBar','errorDisplay','textTrackSettings'],language:navigator&&(navigator.languages&&navigator.languages[0]||navigator.userLanguage||navigator.language)||'en',// locales and their language translations\nlanguages:{},// Default message to show when a video cannot be played.\nnotSupportedMessage:'No compatible source was found for this media.'};[/**\n   * Returns whether or not the player is in the \"ended\" state.\n   *\n   * @return {Boolean} True if the player is in the ended state, false if not.\n   * @method Player.prototype.ended\n   */'ended',/**\n   * Returns whether or not the player is in the \"seeking\" state.\n   *\n   * @return {Boolean} True if the player is in the seeking state, false if not.\n   * @method Player.prototype.seeking\n   */'seeking',/**\n   * Returns the TimeRanges of the media that are currently available\n   * for seeking to.\n   *\n   * @return {TimeRanges} the seekable intervals of the media timeline\n   * @method Player.prototype.seekable\n   */'seekable',/**\n   * Returns the current state of network activity for the element, from\n   * the codes in the list below.\n   * - NETWORK_EMPTY (numeric value 0)\n   *   The element has not yet been initialised. All attributes are in\n   *   their initial states.\n   * - NETWORK_IDLE (numeric value 1)\n   *   The element's resource selection algorithm is active and has\n   *   selected a resource, but it is not actually using the network at\n   *   this time.\n   * - NETWORK_LOADING (numeric value 2)\n   *   The user agent is actively trying to download data.\n   * - NETWORK_NO_SOURCE (numeric value 3)\n   *   The element's resource selection algorithm is active, but it has\n   *   not yet found a resource to use.\n   *\n   * @see https://html.spec.whatwg.org/multipage/embedded-content.html#network-states\n   * @return {number} the current network activity state\n   * @method Player.prototype.networkState\n   */'networkState',/**\n   * Returns a value that expresses the current state of the element\n   * with respect to rendering the current playback position, from the\n   * codes in the list below.\n   * - HAVE_NOTHING (numeric value 0)\n   *   No information regarding the media resource is available.\n   * - HAVE_METADATA (numeric value 1)\n   *   Enough of the resource has been obtained that the duration of the\n   *   resource is available.\n   * - HAVE_CURRENT_DATA (numeric value 2)\n   *   Data for the immediate current playback position is available.\n   * - HAVE_FUTURE_DATA (numeric value 3)\n   *   Data for the immediate current playback position is available, as\n   *   well as enough data for the user agent to advance the current\n   *   playback position in the direction of playback.\n   * - HAVE_ENOUGH_DATA (numeric value 4)\n   *   The user agent estimates that enough data is available for\n   *   playback to proceed uninterrupted.\n   *\n   * @see https://html.spec.whatwg.org/multipage/embedded-content.html#dom-media-readystate\n   * @return {number} the current playback rendering state\n   * @method Player.prototype.readyState\n   */'readyState'].forEach(function(fn){Player.prototype[fn]=function(){return this.techGet_(fn);};});TECH_EVENTS_RETRIGGER.forEach(function(event){Player.prototype['handleTech'+(0,_toTitleCase2['default'])(event)+'_']=function(){return this.trigger(event);};});/**\n * Fired when the player has initial duration and dimension information\n *\n * @event Player#loadedmetadata\n * @type {EventTarget~Event}\n *//**\n * Fired when the player has downloaded data at the current playback position\n *\n * @event Player#loadeddata\n * @type {EventTarget~Event}\n *//**\n * Fired when the current playback position has changed *\n * During playback this is fired every 15-250 milliseconds, depending on the\n * playback technology in use.\n *\n * @event Player#timeupdate\n * @type {EventTarget~Event}\n *//**\n * Fired when the volume changes\n *\n * @event Player#volumechange\n * @type {EventTarget~Event}\n */_component2['default'].registerComponent('Player',Player);exports['default']=Player;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/video.js/es5/player.js\n ** module id = 21\n ** module chunks = 0 1\n **/","'use strict';\n\nexports.__esModule = true;\nexports.createTimeRange = undefined;\nexports.createTimeRanges = createTimeRanges;\n\nvar _log = require('./log.js');\n\nvar _log2 = _interopRequireDefault(_log);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\n/**\n * Returns the time for the specified index at the start or end\n * of a TimeRange object.\n *\n * @function time-ranges:indexFunction\n *\n * @param {number} [index=0]\n *        The range number to return the time for.\n *\n * @return {number}\n *         The time that offset at the specified index.\n *\n * @depricated index must be set to a value, in the future this will throw an error.\n */\n\n/**\n * An object that contains ranges of time for various reasons.\n *\n * @typedef {Object} TimeRange\n *\n * @property {number} length\n *           The number of time ranges represented by this Object\n *\n * @property {time-ranges:indexFunction} start\n *           Returns the time offset at which a specified time range begins.\n *\n * @property {time-ranges:indexFunction} end\n *           Returns the time offset at which a specified time range begins.\n *\n * @see https://developer.mozilla.org/en-US/docs/Web/API/TimeRanges\n */\n\n/**\n * Check if any of the time ranges are over the maximum index.\n *\n * @param {string} fnName\n *        The function name to use for logging\n *\n * @param {number} index\n *        The index to check\n *\n * @param {number} maxIndex\n *        The maximum possible index\n *\n * @throws {Error} if the timeRanges provided are over the maxIndex\n */\nfunction rangeCheck(fnName, index, maxIndex) {\n  if (index < 0 || index > maxIndex) {\n    throw new Error('Failed to execute \\'' + fnName + '\\' on \\'TimeRanges\\': The index provided (' + index + ') is greater than or equal to the maximum bound (' + maxIndex + ').');\n  }\n}\n\n/**\n * Check if any of the time ranges are over the maximum index.\n *\n * @param {string} fnName\n *        The function name to use for logging\n *\n * @param {string} valueIndex\n *        The proprety that should be used to get the time. should be 'start' or 'end'\n *\n * @param {Array} ranges\n *        An array of time ranges\n *\n * @param {Array} [rangeIndex=0]\n *        The index to start the search at\n *\n * @return {number}\n *         The time that offset at the specified index.\n *\n *\n * @depricated rangeIndex must be set to a value, in the future this will throw an error.\n * @throws {Error} if rangeIndex is more than the length of ranges\n */\n/**\n * @file time-ranges.js\n * @module time-ranges\n */\nfunction getRange(fnName, valueIndex, ranges, rangeIndex) {\n  if (rangeIndex === undefined) {\n    _log2['default'].warn('DEPRECATED: Function \\'' + fnName + '\\' on \\'TimeRanges\\' called without an index argument.');\n    rangeIndex = 0;\n  }\n  rangeCheck(fnName, rangeIndex, ranges.length - 1);\n  return ranges[rangeIndex][valueIndex];\n}\n\n/**\n * Create a time range object givent ranges of time.\n *\n * @param {Array} [ranges]\n *        An array of time ranges.\n */\nfunction createTimeRangesObj(ranges) {\n  if (ranges === undefined || ranges.length === 0) {\n    return {\n      length: 0,\n      start: function start() {\n        throw new Error('This TimeRanges object is empty');\n      },\n      end: function end() {\n        throw new Error('This TimeRanges object is empty');\n      }\n    };\n  }\n  return {\n    length: ranges.length,\n    start: getRange.bind(null, 'start', 0, ranges),\n    end: getRange.bind(null, 'end', 1, ranges)\n  };\n}\n\n/**\n * Should create a fake `TimeRange` object which mimics an HTML5 time range instance.\n *\n * @param {number|Array} start\n *        The start of a single range or an array of ranges\n *\n * @param {number} end\n *        The end of a single range.\n *\n * @private\n */\nfunction createTimeRanges(start, end) {\n  if (Array.isArray(start)) {\n    return createTimeRangesObj(start);\n  } else if (start === undefined || end === undefined) {\n    return createTimeRangesObj();\n  }\n  return createTimeRangesObj([[start, end]]);\n}\n\nexports.createTimeRange = createTimeRanges;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/video.js/es5/utils/time-ranges.js\n ** module id = 22\n ** module chunks = 0 1\n **/","'use strict';\n\nexports.__esModule = true;\nexports.bufferedPercent = bufferedPercent;\n\nvar _timeRanges = require('./time-ranges.js');\n\n/**\n * Compute the percentage of the media that has been buffered.\n *\n * @param {TimeRange} buffered\n *        The current `TimeRange` object representing buffered time ranges\n *\n * @param {number} duration\n *        Total duration of the media\n *\n * @return {number}\n *         Percent buffered of the total duration in decimal form.\n */\nfunction bufferedPercent(buffered, duration) {\n  var bufferedDuration = 0;\n  var start = void 0;\n  var end = void 0;\n\n  if (!duration) {\n    return 0;\n  }\n\n  if (!buffered || !buffered.length) {\n    buffered = (0, _timeRanges.createTimeRange)(0, 0);\n  }\n\n  for (var i = 0; i < buffered.length; i++) {\n    start = buffered.start(i);\n    end = buffered.end(i);\n\n    // buffered end can be bigger than duration by a very small fraction\n    if (end > duration) {\n      end = duration;\n    }\n\n    bufferedDuration += end - start;\n  }\n\n  return bufferedDuration / duration;\n} /**\n   * @file buffer.js\n   * @module buffer\n   */\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/video.js/es5/utils/buffer.js\n ** module id = 23\n ** module chunks = 0 1\n **/","'use strict';\n\nexports.__esModule = true;\n\nvar _document = require('global/document');\n\nvar _document2 = _interopRequireDefault(_document);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\n/**\n * Store the browser-specific methods for the fullscreen API.\n *\n * @type {Object}\n * @see [Specification]{@link https://fullscreen.spec.whatwg.org}\n * @see [Map Approach From Screenfull.js]{@link https://github.com/sindresorhus/screenfull.js}\n */\nvar FullscreenApi = {};\n\n// browser API methods\n/**\n * @file fullscreen-api.js\n * @module fullscreen-api\n * @private\n */\nvar apiMap = [['requestFullscreen', 'exitFullscreen', 'fullscreenElement', 'fullscreenEnabled', 'fullscreenchange', 'fullscreenerror'],\n// WebKit\n['webkitRequestFullscreen', 'webkitExitFullscreen', 'webkitFullscreenElement', 'webkitFullscreenEnabled', 'webkitfullscreenchange', 'webkitfullscreenerror'],\n// Old WebKit (Safari 5.1)\n['webkitRequestFullScreen', 'webkitCancelFullScreen', 'webkitCurrentFullScreenElement', 'webkitCancelFullScreen', 'webkitfullscreenchange', 'webkitfullscreenerror'],\n// Mozilla\n['mozRequestFullScreen', 'mozCancelFullScreen', 'mozFullScreenElement', 'mozFullScreenEnabled', 'mozfullscreenchange', 'mozfullscreenerror'],\n// Microsoft\n['msRequestFullscreen', 'msExitFullscreen', 'msFullscreenElement', 'msFullscreenEnabled', 'MSFullscreenChange', 'MSFullscreenError']];\n\nvar specApi = apiMap[0];\nvar browserApi = void 0;\n\n// determine the supported set of functions\nfor (var i = 0; i < apiMap.length; i++) {\n  // check for exitFullscreen function\n  if (apiMap[i][1] in _document2['default']) {\n    browserApi = apiMap[i];\n    break;\n  }\n}\n\n// map the browser API names to the spec API names\nif (browserApi) {\n  for (var _i = 0; _i < browserApi.length; _i++) {\n    FullscreenApi[specApi[_i]] = browserApi[_i];\n  }\n}\n\nexports['default'] = FullscreenApi;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/video.js/es5/fullscreen-api.js\n ** module id = 24\n ** module chunks = 0 1\n **/","'use strict';\n\nexports.__esModule = true;\n\nvar _obj = require('./utils/obj');\n\n/**\n * A Custom `MediaError` class which mimics the standard HTML5 `MediaError` class.\n *\n * @param {number|string|Object|MediaError} value\n *        This can be of multiple types:\n *        - number: should be a standard error code\n *        - string: an error message (the code will be 0)\n *        - Object: arbitrary properties\n *        - `MediaError` (native): used to populate a video.js `MediaError` object\n *        - `MediaError` (video.js): will return itself if it's already a\n *          video.js `MediaError` object.\n *\n * @see [MediaError Spec]{@link https://dev.w3.org/html5/spec-author-view/video.html#mediaerror}\n * @see [Encrypted MediaError Spec]{@link https://www.w3.org/TR/2013/WD-encrypted-media-20130510/#error-codes}\n *\n * @class MediaError\n */\nfunction MediaError(value) {\n\n  // Allow redundant calls to this constructor to avoid having `instanceof`\n  // checks peppered around the code.\n  if (value instanceof MediaError) {\n    return value;\n  }\n\n  if (typeof value === 'number') {\n    this.code = value;\n  } else if (typeof value === 'string') {\n    // default code is zero, so this is a custom error\n    this.message = value;\n  } else if ((0, _obj.isObject)(value)) {\n\n    // We assign the `code` property manually because native `MediaError` objects\n    // do not expose it as an own/enumerable property of the object.\n    if (typeof value.code === 'number') {\n      this.code = value.code;\n    }\n\n    (0, _obj.assign)(this, value);\n  }\n\n  if (!this.message) {\n    this.message = MediaError.defaultMessages[this.code] || '';\n  }\n}\n\n/**\n * The error code that refers two one of the defined `MediaError` types\n *\n * @type {Number}\n */\n/**\n * @file media-error.js\n */\nMediaError.prototype.code = 0;\n\n/**\n * An optional message that to show with the error. Message is not part of the HTML5\n * video spec but allows for more informative custom errors.\n *\n * @type {String}\n */\nMediaError.prototype.message = '';\n\n/**\n * An optional status code that can be set by plugins to allow even more detail about\n * the error. For example a plugin might provide a specific HTTP status code and an\n * error message for that code. Then when the plugin gets that error this class will\n * know how to display an error message for it. This allows a custom message to show\n * up on the `Player` error overlay.\n *\n * @type {Array}\n */\nMediaError.prototype.status = null;\n\n/**\n * Errors indexed by the W3C standard. The order **CANNOT CHANGE**! See the\n * specification listed under {@link MediaError} for more information.\n *\n * @enum {array}\n * @readonly\n * @property {string} 0 - MEDIA_ERR_CUSTOM\n * @property {string} 1 - MEDIA_ERR_CUSTOM\n * @property {string} 2 - MEDIA_ERR_ABORTED\n * @property {string} 3 - MEDIA_ERR_NETWORK\n * @property {string} 4 - MEDIA_ERR_SRC_NOT_SUPPORTED\n * @property {string} 5 - MEDIA_ERR_ENCRYPTED\n */\nMediaError.errorTypes = ['MEDIA_ERR_CUSTOM', 'MEDIA_ERR_ABORTED', 'MEDIA_ERR_NETWORK', 'MEDIA_ERR_DECODE', 'MEDIA_ERR_SRC_NOT_SUPPORTED', 'MEDIA_ERR_ENCRYPTED'];\n\n/**\n * The default `MediaError` messages based on the {@link MediaError.errorTypes}.\n *\n * @type {Array}\n * @constant\n */\nMediaError.defaultMessages = {\n  1: 'You aborted the media playback',\n  2: 'A network error caused the media download to fail part-way.',\n  3: 'The media playback was aborted due to a corruption problem or because the media used features your browser did not support.',\n  4: 'The media could not be loaded, either because the server or network failed or because the format is not supported.',\n  5: 'The media is encrypted and we do not have the keys to decrypt it.'\n};\n\n// Add types as properties on MediaError\n// e.g. MediaError.MEDIA_ERR_SRC_NOT_SUPPORTED = 4;\nfor (var errNum = 0; errNum < MediaError.errorTypes.length; errNum++) {\n  MediaError[MediaError.errorTypes[errNum]] = errNum;\n  // values should be accessible on both the class and instance\n  MediaError.prototype[MediaError.errorTypes[errNum]] = errNum;\n}\n\n// jsdocs for instance/static members added above\n// instance methods use `#` and static methods use `.`\n/**\n * W3C error code for any custom error.\n *\n * @member MediaError#MEDIA_ERR_CUSTOM\n * @constant {number}\n * @default 0\n */\n/**\n * W3C error code for any custom error.\n *\n * @member MediaError.MEDIA_ERR_CUSTOM\n * @constant {number}\n * @default 0\n */\n\n/**\n * W3C error code for media error aborted.\n *\n * @member MediaError#MEDIA_ERR_ABORTED\n * @constant {number}\n * @default 1\n */\n/**\n * W3C error code for media error aborted.\n *\n * @member MediaError.MEDIA_ERR_ABORTED\n * @constant {number}\n * @default 1\n */\n\n/**\n * W3C error code for any network error.\n *\n * @member MediaError#MEDIA_ERR_NETWORK\n * @constant {number}\n * @default 2\n */\n/**\n * W3C error code for any network error.\n *\n * @member MediaError.MEDIA_ERR_NETWORK\n * @constant {number}\n * @default 2\n */\n\n/**\n * W3C error code for any decoding error.\n *\n * @member MediaError#MEDIA_ERR_DECODE\n * @constant {number}\n * @default 3\n */\n/**\n * W3C error code for any decoding error.\n *\n * @member MediaError.MEDIA_ERR_DECODE\n * @constant {number}\n * @default 3\n */\n\n/**\n * W3C error code for any time that a source is not supported.\n *\n * @member MediaError#MEDIA_ERR_SRC_NOT_SUPPORTED\n * @constant {number}\n * @default 4\n */\n/**\n * W3C error code for any time that a source is not supported.\n *\n * @member MediaError.MEDIA_ERR_SRC_NOT_SUPPORTED\n * @constant {number}\n * @default 4\n */\n\n/**\n * W3C error code for any time that a source is encrypted.\n *\n * @member MediaError#MEDIA_ERR_ENCRYPTED\n * @constant {number}\n * @default 5\n */\n/**\n * W3C error code for any time that a source is encrypted.\n *\n * @member MediaError.MEDIA_ERR_ENCRYPTED\n * @constant {number}\n * @default 5\n */\n\nexports['default'] = MediaError;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/video.js/es5/media-error.js\n ** module id = 25\n ** module chunks = 0 1\n **/","module.exports = SafeParseTuple\n\nfunction SafeParseTuple(obj, reviver) {\n    var json\n    var error = null\n\n    try {\n        json = JSON.parse(obj, reviver)\n    } catch (err) {\n        error = err\n    }\n\n    return [error, json]\n}\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/safe-json-parse/tuple.js\n ** module id = 26\n ** module chunks = 0 1\n **/","'use strict';\n\nexports.__esModule = true;\n/**\n * Utilities for capturing text track state and re-creating tracks\n * based on a capture.\n *\n * @file text-track-list-converter.js\n * @module text-track-list-converter\n */\n\n/**\n * Examine a single {@link TextTrack} and return a JSON-compatible javascript object that\n * represents the {@link TextTrack}'s state.\n *\n * @param {TextTrack} track\n *        The text track to query.\n *\n * @return {Object}\n *         A serializable javascript representation of the TextTrack.\n * @private\n */\nvar trackToJson_ = function trackToJson_(track) {\n  var ret = ['kind', 'label', 'language', 'id', 'inBandMetadataTrackDispatchType', 'mode', 'src'].reduce(function (acc, prop, i) {\n\n    if (track[prop]) {\n      acc[prop] = track[prop];\n    }\n\n    return acc;\n  }, {\n    cues: track.cues && Array.prototype.map.call(track.cues, function (cue) {\n      return {\n        startTime: cue.startTime,\n        endTime: cue.endTime,\n        text: cue.text,\n        id: cue.id\n      };\n    })\n  });\n\n  return ret;\n};\n\n/**\n * Examine a {@link Tech} and return a JSON-compatible javascript array that represents the\n * state of all {@link TextTrack}s currently configured. The return array is compatible with\n * {@link text-track-list-converter:jsonToTextTracks}.\n *\n * @param {Tech} tech\n *        The tech object to query\n *\n * @return {Array}\n *         A serializable javascript representation of the {@link Tech}s\n *         {@link TextTrackList}.\n */\nvar textTracksToJson = function textTracksToJson(tech) {\n\n  var trackEls = tech.$$('track');\n\n  var trackObjs = Array.prototype.map.call(trackEls, function (t) {\n    return t.track;\n  });\n  var tracks = Array.prototype.map.call(trackEls, function (trackEl) {\n    var json = trackToJson_(trackEl.track);\n\n    if (trackEl.src) {\n      json.src = trackEl.src;\n    }\n    return json;\n  });\n\n  return tracks.concat(Array.prototype.filter.call(tech.textTracks(), function (track) {\n    return trackObjs.indexOf(track) === -1;\n  }).map(trackToJson_));\n};\n\n/**\n * Create a set of remote {@link TextTrack}s on a {@link Tech} based on an array of javascript\n * object {@link TextTrack} representations.\n *\n * @param {Array} json\n *        An array of `TextTrack` representation objects, like those that would be\n *        produced by `textTracksToJson`.\n *\n * @param {Tech} tech\n *        The `Tech` to create the `TextTrack`s on.\n */\nvar jsonToTextTracks = function jsonToTextTracks(json, tech) {\n  json.forEach(function (track) {\n    var addedTrack = tech.addRemoteTextTrack(track).track;\n\n    if (!track.src && track.cues) {\n      track.cues.forEach(function (cue) {\n        return addedTrack.addCue(cue);\n      });\n    }\n  });\n\n  return tech.textTracks();\n};\n\nexports['default'] = { textTracksToJson: textTracksToJson, jsonToTextTracks: jsonToTextTracks, trackToJson_: trackToJson_ };\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/video.js/es5/tracks/text-track-list-converter.js\n ** module id = 27\n ** module chunks = 0 1\n **/","'use strict';\n\nexports.__esModule = true;\n\nvar _dom = require('./utils/dom');\n\nvar Dom = _interopRequireWildcard(_dom);\n\nvar _fn = require('./utils/fn');\n\nvar Fn = _interopRequireWildcard(_fn);\n\nvar _component = require('./component');\n\nvar _component2 = _interopRequireDefault(_component);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj['default'] = obj; return newObj; } }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /**\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * @file modal-dialog.js\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                */\n\n\nvar MODAL_CLASS_NAME = 'vjs-modal-dialog';\nvar ESC = 27;\n\n/**\n * The `ModalDialog` displays over the video and its controls, which blocks\n * interaction with the player until it is closed.\n *\n * Modal dialogs include a \"Close\" button and will close when that button\n * is activated - or when ESC is pressed anywhere.\n *\n * @extends Component\n */\n\nvar ModalDialog = function (_Component) {\n  _inherits(ModalDialog, _Component);\n\n  /**\n   * Create an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   *\n   * @param {Mixed} [options.content=undefined]\n   *        Provide customized content for this modal.\n   *\n   * @param {string} [options.description]\n   *        A text description for the modal, primarily for accessibility.\n   *\n   * @param {boolean} [options.fillAlways=false]\n   *        Normally, modals are automatically filled only the first time\n   *        they open. This tells the modal to refresh its content\n   *        every time it opens.\n   *\n   * @param {string} [options.label]\n   *        A text label for the modal, primarily for accessibility.\n   *\n   * @param {boolean} [options.temporary=true]\n   *        If `true`, the modal can only be opened once; it will be\n   *        disposed as soon as it's closed.\n   *\n   * @param {boolean} [options.uncloseable=false]\n   *        If `true`, the user will not be able to close the modal\n   *        through the UI in the normal ways. Programmatic closing is\n   *        still possible.\n   */\n  function ModalDialog(player, options) {\n    _classCallCheck(this, ModalDialog);\n\n    var _this = _possibleConstructorReturn(this, _Component.call(this, player, options));\n\n    _this.opened_ = _this.hasBeenOpened_ = _this.hasBeenFilled_ = false;\n\n    _this.closeable(!_this.options_.uncloseable);\n    _this.content(_this.options_.content);\n\n    // Make sure the contentEl is defined AFTER any children are initialized\n    // because we only want the contents of the modal in the contentEl\n    // (not the UI elements like the close button).\n    _this.contentEl_ = Dom.createEl('div', {\n      className: MODAL_CLASS_NAME + '-content'\n    }, {\n      role: 'document'\n    });\n\n    _this.descEl_ = Dom.createEl('p', {\n      className: MODAL_CLASS_NAME + '-description vjs-offscreen',\n      id: _this.el().getAttribute('aria-describedby')\n    });\n\n    Dom.textContent(_this.descEl_, _this.description());\n    _this.el_.appendChild(_this.descEl_);\n    _this.el_.appendChild(_this.contentEl_);\n    return _this;\n  }\n\n  /**\n   * Create the `ModalDialog`'s DOM element\n   *\n   * @return {Element}\n   *         The DOM element that gets created.\n   */\n\n\n  ModalDialog.prototype.createEl = function createEl() {\n    return _Component.prototype.createEl.call(this, 'div', {\n      className: this.buildCSSClass(),\n      tabIndex: -1\n    }, {\n      'aria-describedby': this.id() + '_description',\n      'aria-hidden': 'true',\n      'aria-label': this.label(),\n      'role': 'dialog'\n    });\n  };\n\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n\n\n  ModalDialog.prototype.buildCSSClass = function buildCSSClass() {\n    return MODAL_CLASS_NAME + ' vjs-hidden ' + _Component.prototype.buildCSSClass.call(this);\n  };\n\n  /**\n   * Handles `keydown` events on the document, looking for ESC, which closes\n   * the modal.\n   *\n   * @param {EventTarget~Event} e\n   *        The keypress that triggered this event.\n   *\n   * @listens keydown\n   */\n\n\n  ModalDialog.prototype.handleKeyPress = function handleKeyPress(e) {\n    if (e.which === ESC && this.closeable()) {\n      this.close();\n    }\n  };\n\n  /**\n   * Returns the label string for this modal. Primarily used for accessibility.\n   *\n   * @return {string}\n   *         the localized or raw label of this modal.\n   */\n\n\n  ModalDialog.prototype.label = function label() {\n    return this.options_.label || this.localize('Modal Window');\n  };\n\n  /**\n   * Returns the description string for this modal. Primarily used for\n   * accessibility.\n   *\n   * @return {string}\n   *         The localized or raw description of this modal.\n   */\n\n\n  ModalDialog.prototype.description = function description() {\n    var desc = this.options_.description || this.localize('This is a modal window.');\n\n    // Append a universal closeability message if the modal is closeable.\n    if (this.closeable()) {\n      desc += ' ' + this.localize('This modal can be closed by pressing the Escape key or activating the close button.');\n    }\n\n    return desc;\n  };\n\n  /**\n   * Opens the modal.\n   *\n   * @fires ModalDialog#beforemodalopen\n   * @fires ModalDialog#modalopen\n   *\n   * @return {ModalDialog}\n   *         Returns itself; method can be chained.\n   */\n\n\n  ModalDialog.prototype.open = function open() {\n    if (!this.opened_) {\n      var player = this.player();\n\n      /**\n       * Fired just before a `ModalDialog` is opened.\n       *\n       * @event ModalDialog#beforemodalopen\n       * @type {EventTarget~Event}\n       */\n      this.trigger('beforemodalopen');\n      this.opened_ = true;\n\n      // Fill content if the modal has never opened before and\n      // never been filled.\n      if (this.options_.fillAlways || !this.hasBeenOpened_ && !this.hasBeenFilled_) {\n        this.fill();\n      }\n\n      // If the player was playing, pause it and take note of its previously\n      // playing state.\n      this.wasPlaying_ = !player.paused();\n\n      if (this.wasPlaying_) {\n        player.pause();\n      }\n\n      if (this.closeable()) {\n        this.on(this.el_.ownerDocument, 'keydown', Fn.bind(this, this.handleKeyPress));\n      }\n\n      player.controls(false);\n      this.show();\n      this.el().setAttribute('aria-hidden', 'false');\n\n      /**\n       * Fired just after a `ModalDialog` is opened.\n       *\n       * @event ModalDialog#modalopen\n       * @type {EventTarget~Event}\n       */\n      this.trigger('modalopen');\n      this.hasBeenOpened_ = true;\n    }\n    return this;\n  };\n\n  /**\n   * If the `ModalDialog` is currently open or closed.\n   *\n   * @param  {boolean} [value]\n   *         If given, it will open (`true`) or close (`false`) the modal.\n   *\n   * @return {boolean}\n   *         the current open state of the modaldialog\n   */\n\n\n  ModalDialog.prototype.opened = function opened(value) {\n    if (typeof value === 'boolean') {\n      this[value ? 'open' : 'close']();\n    }\n    return this.opened_;\n  };\n\n  /**\n   * Closes the modal, does nothing if the `ModalDialog` is\n   * not open.\n   *\n   * @fires ModalDialog#beforemodalclose\n   * @fires ModalDialog#modalclose\n   *\n   * @return {ModalDialog}\n   *         Returns itself; method can be chained.\n   */\n\n\n  ModalDialog.prototype.close = function close() {\n    if (this.opened_) {\n      var player = this.player();\n\n      /**\n       * Fired just before a `ModalDialog` is closed.\n       *\n       * @event ModalDialog#beforemodalclose\n       * @type {EventTarget~Event}\n       */\n      this.trigger('beforemodalclose');\n      this.opened_ = false;\n\n      if (this.wasPlaying_) {\n        player.play();\n      }\n\n      if (this.closeable()) {\n        this.off(this.el_.ownerDocument, 'keydown', Fn.bind(this, this.handleKeyPress));\n      }\n\n      player.controls(true);\n      this.hide();\n      this.el().setAttribute('aria-hidden', 'true');\n\n      /**\n       * Fired just after a `ModalDialog` is closed.\n       *\n       * @event ModalDialog#modalclose\n       * @type {EventTarget~Event}\n       */\n      this.trigger('modalclose');\n\n      if (this.options_.temporary) {\n        this.dispose();\n      }\n    }\n    return this;\n  };\n\n  /**\n   * Check to see if the `ModalDialog` is closeable via the UI.\n   *\n   * @param  {boolean} [value]\n   *         If given as a boolean, it will set the `closeable` option.\n   *\n   * @return {boolean}\n   *         Returns the final value of the closable option.\n   */\n\n\n  ModalDialog.prototype.closeable = function closeable(value) {\n    if (typeof value === 'boolean') {\n      var closeable = this.closeable_ = !!value;\n      var close = this.getChild('closeButton');\n\n      // If this is being made closeable and has no close button, add one.\n      if (closeable && !close) {\n\n        // The close button should be a child of the modal - not its\n        // content element, so temporarily change the content element.\n        var temp = this.contentEl_;\n\n        this.contentEl_ = this.el_;\n        close = this.addChild('closeButton', { controlText: 'Close Modal Dialog' });\n        this.contentEl_ = temp;\n        this.on(close, 'close', this.close);\n      }\n\n      // If this is being made uncloseable and has a close button, remove it.\n      if (!closeable && close) {\n        this.off(close, 'close', this.close);\n        this.removeChild(close);\n        close.dispose();\n      }\n    }\n    return this.closeable_;\n  };\n\n  /**\n   * Fill the modal's content element with the modal's \"content\" option.\n   * The content element will be emptied before this change takes place.\n   *\n   * @return {ModalDialog}\n   *         Returns itself; method can be chained.\n   */\n\n\n  ModalDialog.prototype.fill = function fill() {\n    return this.fillWith(this.content());\n  };\n\n  /**\n   * Fill the modal's content element with arbitrary content.\n   * The content element will be emptied before this change takes place.\n   *\n   * @fires ModalDialog#beforemodalfill\n   * @fires ModalDialog#modalfill\n   *\n   * @param  {Mixed} [content]\n   *         The same rules apply to this as apply to the `content` option.\n   *\n   * @return {ModalDialog}\n   *         Returns itself; method can be chained.\n   */\n\n\n  ModalDialog.prototype.fillWith = function fillWith(content) {\n    var contentEl = this.contentEl();\n    var parentEl = contentEl.parentNode;\n    var nextSiblingEl = contentEl.nextSibling;\n\n    /**\n     * Fired just before a `ModalDialog` is filled with content.\n     *\n     * @event ModalDialog#beforemodalfill\n     * @type {EventTarget~Event}\n     */\n    this.trigger('beforemodalfill');\n    this.hasBeenFilled_ = true;\n\n    // Detach the content element from the DOM before performing\n    // manipulation to avoid modifying the live DOM multiple times.\n    parentEl.removeChild(contentEl);\n    this.empty();\n    Dom.insertContent(contentEl, content);\n    /**\n     * Fired just after a `ModalDialog` is filled with content.\n     *\n     * @event ModalDialog#modalfill\n     * @type {EventTarget~Event}\n     */\n    this.trigger('modalfill');\n\n    // Re-inject the re-filled content element.\n    if (nextSiblingEl) {\n      parentEl.insertBefore(contentEl, nextSiblingEl);\n    } else {\n      parentEl.appendChild(contentEl);\n    }\n\n    return this;\n  };\n\n  /**\n   * Empties the content element. This happens anytime the modal is filled.\n   *\n   * @fires ModalDialog#beforemodalempty\n   * @fires ModalDialog#modalempty\n   *\n   * @return {ModalDialog}\n   *         Returns itself; method can be chained.\n   */\n\n\n  ModalDialog.prototype.empty = function empty() {\n    /**\n     * Fired just before a `ModalDialog` is emptied.\n     *\n     * @event ModalDialog#beforemodalempty\n     * @type {EventTarget~Event}\n     */\n    this.trigger('beforemodalempty');\n    Dom.emptyEl(this.contentEl());\n\n    /**\n     * Fired just after a `ModalDialog` is emptied.\n     *\n     * @event ModalDialog#modalempty\n     * @type {EventTarget~Event}\n     */\n    this.trigger('modalempty');\n    return this;\n  };\n\n  /**\n   * Gets or sets the modal content, which gets normalized before being\n   * rendered into the DOM.\n   *\n   * This does not update the DOM or fill the modal, but it is called during\n   * that process.\n   *\n   * @param  {Mixed} [value]\n   *         If defined, sets the internal content value to be used on the\n   *         next call(s) to `fill`. This value is normalized before being\n   *         inserted. To \"clear\" the internal content value, pass `null`.\n   *\n   * @return {Mixed}\n   *         The current content of the modal dialog\n   */\n\n\n  ModalDialog.prototype.content = function content(value) {\n    if (typeof value !== 'undefined') {\n      this.content_ = value;\n    }\n    return this.content_;\n  };\n\n  return ModalDialog;\n}(_component2['default']);\n\n/**\n * Default options for `ModalDialog` default options.\n *\n * @type {Object}\n * @private\n */\n\n\nModalDialog.prototype.options_ = {\n  temporary: true\n};\n\n_component2['default'].registerComponent('ModalDialog', ModalDialog);\nexports['default'] = ModalDialog;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/video.js/es5/modal-dialog.js\n ** module id = 28\n ** module chunks = 0 1\n **/","'use strict';\n\nexports.__esModule = true;\n\nvar _component = require('../component');\n\nvar _component2 = _interopRequireDefault(_component);\n\nvar _htmlTrackElement = require('../tracks/html-track-element');\n\nvar _htmlTrackElement2 = _interopRequireDefault(_htmlTrackElement);\n\nvar _htmlTrackElementList = require('../tracks/html-track-element-list');\n\nvar _htmlTrackElementList2 = _interopRequireDefault(_htmlTrackElementList);\n\nvar _mergeOptions = require('../utils/merge-options.js');\n\nvar _mergeOptions2 = _interopRequireDefault(_mergeOptions);\n\nvar _textTrack = require('../tracks/text-track');\n\nvar _textTrack2 = _interopRequireDefault(_textTrack);\n\nvar _textTrackList = require('../tracks/text-track-list');\n\nvar _textTrackList2 = _interopRequireDefault(_textTrackList);\n\nvar _videoTrackList = require('../tracks/video-track-list');\n\nvar _videoTrackList2 = _interopRequireDefault(_videoTrackList);\n\nvar _audioTrackList = require('../tracks/audio-track-list');\n\nvar _audioTrackList2 = _interopRequireDefault(_audioTrackList);\n\nvar _fn = require('../utils/fn.js');\n\nvar Fn = _interopRequireWildcard(_fn);\n\nvar _log = require('../utils/log.js');\n\nvar _log2 = _interopRequireDefault(_log);\n\nvar _timeRanges = require('../utils/time-ranges.js');\n\nvar _buffer = require('../utils/buffer.js');\n\nvar _mediaError = require('../media-error.js');\n\nvar _mediaError2 = _interopRequireDefault(_mediaError);\n\nvar _window = require('global/window');\n\nvar _window2 = _interopRequireDefault(_window);\n\nvar _document = require('global/document');\n\nvar _document2 = _interopRequireDefault(_document);\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj['default'] = obj; return newObj; } }\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /**\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * @file tech.js\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                */\n\n/**\n * An Object containing a structure like: `{src: 'url', type: 'mimetype'}` or string\n * that just contains the src url alone.\n *\n * ``` js\n *   var SourceObject = {\n *     src: 'http://example.com/some-video.mp4',\n *     type: 'video/mp4'\n *   };\n *   var SourceString = 'http://example.com/some-video.mp4';\n * ```\n *\n * @typedef {Object|string} Tech~SourceObject\n *\n * @property {string} src\n *           The url to the source\n *\n * @property {string} type\n *           The mime type of the source\n */\n\n/**\n * A function used by {@link Tech} to create a new {@link TextTrack}.\n *\n * @param {Tech} self\n *        An instance of the Tech class.\n *\n * @param {string} kind\n *        `TextTrack` kind (subtitles, captions, descriptions, chapters, or metadata)\n *\n * @param {string} [label]\n *        Label to identify the text track\n *\n * @param {string} [language]\n *        Two letter language abbreviation\n *\n * @param {Object} [options={}]\n *        An object with additional text track options\n *\n * @return {TextTrack}\n *          The text track that was created.\n */\nfunction createTrackHelper(self, kind, label, language) {\n  var options = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : {};\n\n  var tracks = self.textTracks();\n\n  options.kind = kind;\n\n  if (label) {\n    options.label = label;\n  }\n  if (language) {\n    options.language = language;\n  }\n  options.tech = self;\n\n  var track = new _textTrack2['default'](options);\n\n  tracks.addTrack_(track);\n\n  return track;\n}\n\n/**\n * This is the base class for media playback technology controllers, such as\n * {@link Flash} and {@link HTML5}\n *\n * @extends Component\n */\n\nvar Tech = function (_Component) {\n  _inherits(Tech, _Component);\n\n  /**\n   * Create an instance of this Tech.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   *\n   * @param {Component~ReadyCallback} ready\n   *        Callback function to call when the `HTML5` Tech is ready.\n   */\n  function Tech() {\n    var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    var ready = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : function () {};\n\n    _classCallCheck(this, Tech);\n\n    // we don't want the tech to report user activity automatically.\n    // This is done manually in addControlsListeners\n    options.reportTouchActivity = false;\n\n    // keep track of whether the current source has played at all to\n    // implement a very limited played()\n    var _this = _possibleConstructorReturn(this, _Component.call(this, null, options, ready));\n\n    _this.hasStarted_ = false;\n    _this.on('playing', function () {\n      this.hasStarted_ = true;\n    });\n    _this.on('loadstart', function () {\n      this.hasStarted_ = false;\n    });\n\n    _this.textTracks_ = options.textTracks;\n    _this.videoTracks_ = options.videoTracks;\n    _this.audioTracks_ = options.audioTracks;\n\n    // Manually track progress in cases where the browser/flash player doesn't report it.\n    if (!_this.featuresProgressEvents) {\n      _this.manualProgressOn();\n    }\n\n    // Manually track timeupdates in cases where the browser/flash player doesn't report it.\n    if (!_this.featuresTimeupdateEvents) {\n      _this.manualTimeUpdatesOn();\n    }\n\n    ['Text', 'Audio', 'Video'].forEach(function (track) {\n      if (options['native' + track + 'Tracks'] === false) {\n        _this['featuresNative' + track + 'Tracks'] = false;\n      }\n    });\n\n    if (options.nativeCaptions === false) {\n      _this.featuresNativeTextTracks = false;\n    }\n\n    if (!_this.featuresNativeTextTracks) {\n      _this.emulateTextTracks();\n    }\n\n    _this.autoRemoteTextTracks_ = new _textTrackList2['default']();\n\n    _this.initTextTrackListeners();\n    _this.initTrackListeners();\n\n    // Turn on component tap events\n    _this.emitTapEvents();\n    return _this;\n  }\n\n  /* Fallbacks for unsupported event types\n  ================================================================================ */\n\n  /**\n   * Polyfill the `progress` event for browsers that don't support it natively.\n   *\n   * @see {@link Tech#trackProgress}\n   */\n\n\n  Tech.prototype.manualProgressOn = function manualProgressOn() {\n    this.on('durationchange', this.onDurationChange);\n\n    this.manualProgress = true;\n\n    // Trigger progress watching when a source begins loading\n    this.one('ready', this.trackProgress);\n  };\n\n  /**\n   * Turn off the polyfill for `progress` events that was created in\n   * {@link Tech#manualProgressOn}\n   */\n\n\n  Tech.prototype.manualProgressOff = function manualProgressOff() {\n    this.manualProgress = false;\n    this.stopTrackingProgress();\n\n    this.off('durationchange', this.onDurationChange);\n  };\n\n  /**\n   * This is used to trigger a `progress` event when the buffered percent changes. It\n   * sets an interval function that will be called every 500 milliseconds to check if the\n   * buffer end percent has changed.\n   *\n   * > This function is called by {@link Tech#manualProgressOn}\n   *\n   * @param {EventTarget~Event} event\n   *        The `ready` event that caused this to run.\n   *\n   * @listens Tech#ready\n   * @fires Tech#progress\n   */\n\n\n  Tech.prototype.trackProgress = function trackProgress(event) {\n    this.stopTrackingProgress();\n    this.progressInterval = this.setInterval(Fn.bind(this, function () {\n      // Don't trigger unless buffered amount is greater than last time\n\n      var numBufferedPercent = this.bufferedPercent();\n\n      if (this.bufferedPercent_ !== numBufferedPercent) {\n        /**\n         * See {@link Player#progress}\n         *\n         * @event Tech#progress\n         * @type {EventTarget~Event}\n         */\n        this.trigger('progress');\n      }\n\n      this.bufferedPercent_ = numBufferedPercent;\n\n      if (numBufferedPercent === 1) {\n        this.stopTrackingProgress();\n      }\n    }), 500);\n  };\n\n  /**\n   * Update our internal duration on a `durationchange` event by calling\n   * {@link Tech#duration}.\n   *\n   * @param {EventTarget~Event} event\n   *        The `durationchange` event that caused this to run.\n   *\n   * @listens Tech#durationchange\n   */\n\n\n  Tech.prototype.onDurationChange = function onDurationChange(event) {\n    this.duration_ = this.duration();\n  };\n\n  /**\n   * Get and create a `TimeRange` object for buffering.\n   *\n   * @return {TimeRange}\n   *         The time range object that was created.\n   */\n\n\n  Tech.prototype.buffered = function buffered() {\n    return (0, _timeRanges.createTimeRange)(0, 0);\n  };\n\n  /**\n   * Get the percentage of the current video that is currently buffered.\n   *\n   * @return {number}\n   *         A number from 0 to 1 that represents the decimal percentage of the\n   *         video that is buffered.\n   *\n   */\n\n\n  Tech.prototype.bufferedPercent = function bufferedPercent() {\n    return (0, _buffer.bufferedPercent)(this.buffered(), this.duration_);\n  };\n\n  /**\n   * Turn off the polyfill for `progress` events that was created in\n   * {@link Tech#manualProgressOn}\n   * Stop manually tracking progress events by clearing the interval that was set in\n   * {@link Tech#trackProgress}.\n   */\n\n\n  Tech.prototype.stopTrackingProgress = function stopTrackingProgress() {\n    this.clearInterval(this.progressInterval);\n  };\n\n  /**\n   * Polyfill the `timeupdate` event for browsers that don't support it.\n   *\n   * @see {@link Tech#trackCurrentTime}\n   */\n\n\n  Tech.prototype.manualTimeUpdatesOn = function manualTimeUpdatesOn() {\n    this.manualTimeUpdates = true;\n\n    this.on('play', this.trackCurrentTime);\n    this.on('pause', this.stopTrackingCurrentTime);\n  };\n\n  /**\n   * Turn off the polyfill for `timeupdate` events that was created in\n   * {@link Tech#manualTimeUpdatesOn}\n   */\n\n\n  Tech.prototype.manualTimeUpdatesOff = function manualTimeUpdatesOff() {\n    this.manualTimeUpdates = false;\n    this.stopTrackingCurrentTime();\n    this.off('play', this.trackCurrentTime);\n    this.off('pause', this.stopTrackingCurrentTime);\n  };\n\n  /**\n   * Sets up an interval function to track current time and trigger `timeupdate` every\n   * 250 milliseconds.\n   *\n   * @listens Tech#play\n   * @triggers Tech#timeupdate\n   */\n\n\n  Tech.prototype.trackCurrentTime = function trackCurrentTime() {\n    if (this.currentTimeInterval) {\n      this.stopTrackingCurrentTime();\n    }\n    this.currentTimeInterval = this.setInterval(function () {\n      /**\n       * Triggered at an interval of 250ms to indicated that time is passing in the video.\n       *\n       * @event Tech#timeupdate\n       * @type {EventTarget~Event}\n       */\n      this.trigger({ type: 'timeupdate', target: this, manuallyTriggered: true });\n\n      // 42 = 24 fps // 250 is what Webkit uses // FF uses 15\n    }, 250);\n  };\n\n  /**\n   * Stop the interval function created in {@link Tech#trackCurrentTime} so that the\n   * `timeupdate` event is no longer triggered.\n   *\n   * @listens {Tech#pause}\n   */\n\n\n  Tech.prototype.stopTrackingCurrentTime = function stopTrackingCurrentTime() {\n    this.clearInterval(this.currentTimeInterval);\n\n    // #1002 - if the video ends right before the next timeupdate would happen,\n    // the progress bar won't make it all the way to the end\n    this.trigger({ type: 'timeupdate', target: this, manuallyTriggered: true });\n  };\n\n  /**\n   * Turn off all event polyfills, clear the `Tech`s {@link AudioTrackList},\n   * {@link VideoTrackList}, and {@link TextTrackList}, and dispose of this Tech.\n   *\n   * @fires Component#dispose\n   */\n\n\n  Tech.prototype.dispose = function dispose() {\n\n    // clear out all tracks because we can't reuse them between techs\n    this.clearTracks(['audio', 'video', 'text']);\n\n    // Turn off any manual progress or timeupdate tracking\n    if (this.manualProgress) {\n      this.manualProgressOff();\n    }\n\n    if (this.manualTimeUpdates) {\n      this.manualTimeUpdatesOff();\n    }\n\n    _Component.prototype.dispose.call(this);\n  };\n\n  /**\n   * Clear out a single `TrackList` or an array of `TrackLists` given their names.\n   *\n   * > Note: Techs without source handlers should call this between sources for `video`\n   *         & `audio` tracks. You don't want to use them between tracks!\n   *\n   * @param {string[]|string} types\n   *        TrackList names to clear, valid names are `video`, `audio`, and\n   *        `text`.\n   */\n\n\n  Tech.prototype.clearTracks = function clearTracks(types) {\n    var _this2 = this;\n\n    types = [].concat(types);\n    // clear out all tracks because we can't reuse them between techs\n    types.forEach(function (type) {\n      var list = _this2[type + 'Tracks']() || [];\n      var i = list.length;\n\n      while (i--) {\n        var track = list[i];\n\n        if (type === 'text') {\n          _this2.removeRemoteTextTrack(track);\n        }\n        list.removeTrack_(track);\n      }\n    });\n  };\n\n  /**\n   * Remove any TextTracks added via addRemoteTextTrack that are\n   * flagged for automatic garbage collection\n   */\n\n\n  Tech.prototype.cleanupAutoTextTracks = function cleanupAutoTextTracks() {\n    var list = this.autoRemoteTextTracks_ || [];\n    var i = list.length;\n\n    while (i--) {\n      var track = list[i];\n\n      this.removeRemoteTextTrack(track);\n    }\n  };\n\n  /**\n   * Reset the tech, which will removes all sources and reset the internal readyState.\n   *\n   * @abstract\n   */\n\n\n  Tech.prototype.reset = function reset() {};\n\n  /**\n   * Get or set an error on the Tech.\n   *\n   * @param {MediaError} [err]\n   *        Error to set on the Tech\n   *\n   * @return {MediaError|null}\n   *         The current error object on the tech, or null if there isn't one.\n   */\n\n\n  Tech.prototype.error = function error(err) {\n    if (err !== undefined) {\n      this.error_ = new _mediaError2['default'](err);\n      this.trigger('error');\n    }\n    return this.error_;\n  };\n\n  /**\n   * Returns the `TimeRange`s that have been played through for the current source.\n   *\n   * > NOTE: This implementation is incomplete. It does not track the played `TimeRange`.\n   *         It only checks wether the source has played at all or not.\n   *\n   * @return {TimeRange}\n   *         - A single time range if this video has played\n   *         - An empty set of ranges if not.\n   */\n\n\n  Tech.prototype.played = function played() {\n    if (this.hasStarted_) {\n      return (0, _timeRanges.createTimeRange)(0, 0);\n    }\n    return (0, _timeRanges.createTimeRange)();\n  };\n\n  /**\n   * Causes a manual time update to occur if {@link Tech#manualTimeUpdatesOn} was\n   * previously called.\n   *\n   * @fires Tech#timeupdate\n   */\n\n\n  Tech.prototype.setCurrentTime = function setCurrentTime() {\n    // improve the accuracy of manual timeupdates\n    if (this.manualTimeUpdates) {\n      /**\n       * A manual `timeupdate` event.\n       *\n       * @event Tech#timeupdate\n       * @type {EventTarget~Event}\n       */\n      this.trigger({ type: 'timeupdate', target: this, manuallyTriggered: true });\n    }\n  };\n\n  /**\n   * Turn on listeners for {@link TextTrackList} events. This adds\n   * {@link EventTarget~EventListeners} for `texttrackchange`, `addtrack` and\n   * `removetrack`.\n   *\n   * @fires Tech#texttrackchange\n   */\n\n\n  Tech.prototype.initTextTrackListeners = function initTextTrackListeners() {\n    var textTrackListChanges = Fn.bind(this, function () {\n      /**\n       * Triggered when tracks are added or removed on the Tech {@link TextTrackList}\n       *\n       * @event Tech#texttrackchange\n       * @type {EventTarget~Event}\n       */\n      this.trigger('texttrackchange');\n    });\n\n    var tracks = this.textTracks();\n\n    if (!tracks) {\n      return;\n    }\n\n    tracks.addEventListener('removetrack', textTrackListChanges);\n    tracks.addEventListener('addtrack', textTrackListChanges);\n\n    this.on('dispose', Fn.bind(this, function () {\n      tracks.removeEventListener('removetrack', textTrackListChanges);\n      tracks.removeEventListener('addtrack', textTrackListChanges);\n    }));\n  };\n\n  /**\n   * Turn on listeners for {@link VideoTrackList} and {@link {AudioTrackList} events.\n   * This adds {@link EventTarget~EventListeners} for `addtrack`, and  `removetrack`.\n   *\n   * @fires Tech#audiotrackchange\n   * @fires Tech#videotrackchange\n   */\n\n\n  Tech.prototype.initTrackListeners = function initTrackListeners() {\n    var _this3 = this;\n\n    var trackTypes = ['video', 'audio'];\n\n    trackTypes.forEach(function (type) {\n      /**\n       * Triggered when tracks are added or removed on the Tech {@link AudioTrackList}\n       *\n       * @event Tech#audiotrackchange\n       * @type {EventTarget~Event}\n       */\n\n      /**\n       * Triggered when tracks are added or removed on the Tech {@link VideoTrackList}\n       *\n       * @event Tech#videotrackchange\n       * @type {EventTarget~Event}\n       */\n      var trackListChanges = function trackListChanges() {\n        _this3.trigger(type + 'trackchange');\n      };\n\n      var tracks = _this3[type + 'Tracks']();\n\n      tracks.addEventListener('removetrack', trackListChanges);\n      tracks.addEventListener('addtrack', trackListChanges);\n\n      _this3.on('dispose', function () {\n        tracks.removeEventListener('removetrack', trackListChanges);\n        tracks.removeEventListener('addtrack', trackListChanges);\n      });\n    });\n  };\n\n  /**\n   * Emulate TextTracks using vtt.js if necessary\n   *\n   * @fires Tech#vttjsloaded\n   * @fires Tech#vttjserror\n   * @fires Tech#texttrackchange\n   */\n\n\n  Tech.prototype.addWebVttScript_ = function addWebVttScript_() {\n    var _this4 = this;\n\n    if (!_window2['default'].WebVTT && this.el().parentNode !== null && this.el().parentNode !== undefined) {\n      (function () {\n        var script = _document2['default'].createElement('script');\n\n        script.src = _this4.options_['vtt.js'] || '../node_modules/videojs-vtt.js/dist/vtt.js';\n        script.onload = function () {\n          /**\n           * Fired when vtt.js is loaded.\n           *\n           * @event Tech#vttjsloaded\n           * @type {EventTarget~Event}\n           */\n          _this4.trigger('vttjsloaded');\n        };\n        script.onerror = function () {\n          /**\n           * Fired when vtt.js was not loaded due to an error\n           *\n           * @event Tech#vttjsloaded\n           * @type {EventTarget~Event}\n           */\n          _this4.trigger('vttjserror');\n        };\n        _this4.on('dispose', function () {\n          script.onload = null;\n          script.onerror = null;\n        });\n        // but have not loaded yet and we set it to true before the inject so that\n        // we don't overwrite the injected window.WebVTT if it loads right away\n        _window2['default'].WebVTT = true;\n        _this4.el().parentNode.appendChild(script);\n      })();\n    }\n  };\n\n  /**\n   * Emulate texttracks\n   *\n   * @method emulateTextTracks\n   */\n\n\n  Tech.prototype.emulateTextTracks = function emulateTextTracks() {\n    var _this5 = this;\n\n    var tracks = this.textTracks();\n\n    if (!tracks) {\n      return;\n    }\n\n    this.remoteTextTracks().on('addtrack', function (e) {\n      _this5.textTracks().addTrack_(e.track);\n    });\n\n    this.remoteTextTracks().on('removetrack', function (e) {\n      _this5.textTracks().removeTrack_(e.track);\n    });\n\n    // Initially, Tech.el_ is a child of a dummy-div wait until the Component system\n    // signals that the Tech is ready at which point Tech.el_ is part of the DOM\n    // before inserting the WebVTT script\n    this.on('ready', this.addWebVttScript_);\n\n    var updateDisplay = function updateDisplay() {\n      return _this5.trigger('texttrackchange');\n    };\n    var textTracksChanges = function textTracksChanges() {\n      updateDisplay();\n\n      for (var i = 0; i < tracks.length; i++) {\n        var track = tracks[i];\n\n        track.removeEventListener('cuechange', updateDisplay);\n        if (track.mode === 'showing') {\n          track.addEventListener('cuechange', updateDisplay);\n        }\n      }\n    };\n\n    textTracksChanges();\n    tracks.addEventListener('change', textTracksChanges);\n\n    this.on('dispose', function () {\n      tracks.removeEventListener('change', textTracksChanges);\n    });\n  };\n\n  /**\n   * Get the `Tech`s {@link VideoTrackList}.\n   *\n   * @return {VideoTrackList}\n   *          The video track list that the Tech is currently using.\n   */\n\n\n  Tech.prototype.videoTracks = function videoTracks() {\n    this.videoTracks_ = this.videoTracks_ || new _videoTrackList2['default']();\n    return this.videoTracks_;\n  };\n\n  /**\n   * Get the `Tech`s {@link AudioTrackList}.\n   *\n   * @return {AudioTrackList}\n   *          The audio track list that the Tech is currently using.\n   */\n\n\n  Tech.prototype.audioTracks = function audioTracks() {\n    this.audioTracks_ = this.audioTracks_ || new _audioTrackList2['default']();\n    return this.audioTracks_;\n  };\n\n  /**\n   * Get the `Tech`s {@link TextTrackList}.\n   *\n   * @return {TextTrackList}\n   *          The text track list that the Tech is currently using.\n   */\n\n\n  Tech.prototype.textTracks = function textTracks() {\n    this.textTracks_ = this.textTracks_ || new _textTrackList2['default']();\n    return this.textTracks_;\n  };\n\n  /**\n   * Get the `Tech`s remote {@link TextTrackList}, which is created from elements\n   * that were added to the DOM.\n   *\n   * @return {TextTrackList}\n   *          The remote text track list that the Tech is currently using.\n   */\n\n\n  Tech.prototype.remoteTextTracks = function remoteTextTracks() {\n    this.remoteTextTracks_ = this.remoteTextTracks_ || new _textTrackList2['default']();\n    return this.remoteTextTracks_;\n  };\n\n  /**\n   * Get The `Tech`s  {HTMLTrackElementList}, which are the elements in the DOM that are\n   * being used as TextTracks.\n   *\n   * @return {HTMLTrackElementList}\n   *          The current HTML track elements that exist for the tech.\n   */\n\n\n  Tech.prototype.remoteTextTrackEls = function remoteTextTrackEls() {\n    this.remoteTextTrackEls_ = this.remoteTextTrackEls_ || new _htmlTrackElementList2['default']();\n    return this.remoteTextTrackEls_;\n  };\n\n  /**\n   * Create and returns a remote {@link TextTrack} object.\n   *\n   * @param {string} kind\n   *        `TextTrack` kind (subtitles, captions, descriptions, chapters, or metadata)\n   *\n   * @param {string} [label]\n   *        Label to identify the text track\n   *\n   * @param {string} [language]\n   *        Two letter language abbreviation\n   *\n   * @return {TextTrack}\n   *         The TextTrack that gets created.\n   */\n\n\n  Tech.prototype.addTextTrack = function addTextTrack(kind, label, language) {\n    if (!kind) {\n      throw new Error('TextTrack kind is required but was not provided');\n    }\n\n    return createTrackHelper(this, kind, label, language);\n  };\n\n  /**\n   * Create an emulated TextTrack for use by addRemoteTextTrack\n   *\n   * This is intended to be overridden by classes that inherit from\n   * Tech in order to create native or custom TextTracks.\n   *\n   * @param {Object} options\n   *        The object should contain the options to initialize the TextTrack with.\n   *\n   * @param {string} [options.kind]\n   *        `TextTrack` kind (subtitles, captions, descriptions, chapters, or metadata).\n   *\n   * @param {string} [options.label].\n   *        Label to identify the text track\n   *\n   * @param {string} [options.language]\n   *        Two letter language abbreviation.\n   *\n   * @return {HTMLTrackElement}\n   *         The track element that gets created.\n   */\n\n\n  Tech.prototype.createRemoteTextTrack = function createRemoteTextTrack(options) {\n    var track = (0, _mergeOptions2['default'])(options, {\n      tech: this\n    });\n\n    return new _htmlTrackElement2['default'](track);\n  };\n\n  /**\n   * Creates a remote text track object and returns an html track element.\n   *\n   * > Note: This can be an emulated {@link HTMLTrackElement} or a native one.\n   *\n   * @param {Object} options\n   *        See {@link Tech#createRemoteTextTrack} for more detailed properties.\n   *\n   * @param {boolean} [manualCleanup=true]\n   *        - When false: the TextTrack will be automatically removed from the video\n   *          element whenever the source changes\n   *        - When True: The TextTrack will have to be cleaned up manually\n   *\n   * @return {HTMLTrackElement}\n   *         An Html Track Element.\n   *\n   * @deprecated The default functionality for this function will be equivalent\n   *             to \"manualCleanup=false\" in the future. The manualCleanup parameter will\n   *             also be removed.\n   */\n\n\n  Tech.prototype.addRemoteTextTrack = function addRemoteTextTrack() {\n    var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    var manualCleanup = arguments[1];\n\n    var htmlTrackElement = this.createRemoteTextTrack(options);\n\n    if (manualCleanup !== true && manualCleanup !== false) {\n      // deprecation warning\n      _log2['default'].warn('Calling addRemoteTextTrack without explicitly setting the \"manualCleanup\" parameter to `true` is deprecated and default to `false` in future version of video.js');\n      manualCleanup = true;\n    }\n\n    // store HTMLTrackElement and TextTrack to remote list\n    this.remoteTextTrackEls().addTrackElement_(htmlTrackElement);\n    this.remoteTextTracks().addTrack_(htmlTrackElement.track);\n\n    if (manualCleanup !== true) {\n      // create the TextTrackList if it doesn't exist\n      this.autoRemoteTextTracks_.addTrack_(htmlTrackElement.track);\n    }\n\n    return htmlTrackElement;\n  };\n\n  /**\n   * Remove a remote text track from the remote `TextTrackList`.\n   *\n   * @param {TextTrack} track\n   *        `TextTrack` to remove from the `TextTrackList`\n   */\n\n\n  Tech.prototype.removeRemoteTextTrack = function removeRemoteTextTrack(track) {\n    var trackElement = this.remoteTextTrackEls().getTrackElementByTrack_(track);\n\n    // remove HTMLTrackElement and TextTrack from remote list\n    this.remoteTextTrackEls().removeTrackElement_(trackElement);\n    this.remoteTextTracks().removeTrack_(track);\n    this.autoRemoteTextTracks_.removeTrack_(track);\n  };\n\n  /**\n   * A method to set a poster from a `Tech`.\n   *\n   * @abstract\n   */\n\n\n  Tech.prototype.setPoster = function setPoster() {};\n\n  /*\n   * Check if the tech can support the given mime-type.\n   *\n   * The base tech does not support any type, but source handlers might\n   * overwrite this.\n   *\n   * @param  {string} type\n   *         The mimetype to check for support\n   *\n   * @return {string}\n   *         'probably', 'maybe', or empty string\n   *\n   * @see [Spec]{@link https://developer.mozilla.org/en-US/docs/Web/API/HTMLMediaElement/canPlayType}\n   *\n   * @abstract\n   */\n\n\n  Tech.prototype.canPlayType = function canPlayType() {\n    return '';\n  };\n\n  /*\n   * Return whether the argument is a Tech or not.\n   * Can be passed either a Class like `Html5` or a instance like `player.tech_`\n   *\n   * @param {Object} component\n   *        The item to check\n   *\n   * @return {boolean}\n   *         Whether it is a tech or not\n   *         - True if it is a tech\n   *         - False if it is not\n   */\n\n\n  Tech.isTech = function isTech(component) {\n    return component.prototype instanceof Tech || component instanceof Tech || component === Tech;\n  };\n\n  /**\n   * Registers a `Tech` into a shared list for videojs.\n   *\n   * @param {string} name\n   *        Name of the `Tech` to register.\n   *\n   * @param {Object} tech\n   *        The `Tech` class to register.\n   */\n\n\n  Tech.registerTech = function registerTech(name, tech) {\n    if (!Tech.techs_) {\n      Tech.techs_ = {};\n    }\n\n    if (!Tech.isTech(tech)) {\n      throw new Error('Tech ' + name + ' must be a Tech');\n    }\n\n    Tech.techs_[name] = tech;\n    return tech;\n  };\n\n  /**\n   * Get a `Tech` from the shared list by name.\n   *\n   * @param {string} name\n   *        Name of the component to get\n   *\n   * @return {Tech|undefined}\n   *         The `Tech` or undefined if there was no tech with the name requsted.\n   */\n\n\n  Tech.getTech = function getTech(name) {\n    if (Tech.techs_ && Tech.techs_[name]) {\n      return Tech.techs_[name];\n    }\n\n    if (_window2['default'] && _window2['default'].videojs && _window2['default'].videojs[name]) {\n      _log2['default'].warn('The ' + name + ' tech was added to the videojs object when it should be registered using videojs.registerTech(name, tech)');\n      return _window2['default'].videojs[name];\n    }\n  };\n\n  return Tech;\n}(_component2['default']);\n\n/**\n * List of associated text tracks.\n *\n * @type {TextTrackList}\n * @private\n */\n\n\nTech.prototype.textTracks_; // eslint-disable-line\n\n/**\n * List of associated audio tracks.\n *\n * @type {AudioTrackList}\n * @private\n */\nTech.prototype.audioTracks_; // eslint-disable-line\n\n/**\n * List of associated video tracks.\n *\n * @type {VideoTrackList}\n * @private\n */\nTech.prototype.videoTracks_; // eslint-disable-line\n\n/**\n * Boolean indicating wether the `Tech` supports volume control.\n *\n * @type {boolean}\n * @default\n */\nTech.prototype.featuresVolumeControl = true;\n\n/**\n * Boolean indicating wether the `Tech` support fullscreen resize control.\n * Resizing plugins using request fullscreen reloads the plugin\n *\n * @type {boolean}\n * @default\n */\nTech.prototype.featuresFullscreenResize = false;\n\n/**\n * Boolean indicating wether the `Tech` supports changing the speed at which the video\n * plays. Examples:\n *   - Set player to play 2x (twice) as fast\n *   - Set player to play 0.5x (half) as fast\n *\n * @type {boolean}\n * @default\n */\nTech.prototype.featuresPlaybackRate = false;\n\n/**\n * Boolean indicating wether the `Tech` supports the `progress` event. This is currently\n * not triggered by video-js-swf. This will be used to determine if\n * {@link Tech#manualProgressOn} should be called.\n *\n * @type {boolean}\n * @default\n */\nTech.prototype.featuresProgressEvents = false;\n\n/**\n * Boolean indicating wether the `Tech` supports the `timeupdate` event. This is currently\n * not triggered by video-js-swf. This will be used to determine if\n * {@link Tech#manualTimeUpdates} should be called.\n *\n * @type {boolean}\n * @default\n */\nTech.prototype.featuresTimeupdateEvents = false;\n\n/**\n * Boolean indicating wether the `Tech` supports the native `TextTrack`s.\n * This will help us integrate with native `TextTrack`s if the browser supports them.\n *\n * @type {boolean}\n * @default\n */\nTech.prototype.featuresNativeTextTracks = false;\n\n/**\n * A functional mixin for techs that want to use the Source Handler pattern.\n * Source handlers are scripts for handling specific formats.\n * The source handler pattern is used for adaptive formats (HLS, DASH) that\n * manually load video data and feed it into a Source Buffer (Media Source Extensions)\n *\n * ```js\n *   Tech.withSourceHandlers.call(MyTech);\n * ```\n *\n * @param {Tech} _Tech\n *        The tech to add source handler functions to.\n *\n * @mixes Tech~SourceHandlerAdditions\n */\nTech.withSourceHandlers = function (_Tech) {\n\n  /**\n   * Register a source handler\n   *\n   * @param {Function} handler\n   *        The source handler class\n   *\n   * @param {number} [index]\n   *        Register it at the following index\n   */\n  _Tech.registerSourceHandler = function (handler, index) {\n    var handlers = _Tech.sourceHandlers;\n\n    if (!handlers) {\n      handlers = _Tech.sourceHandlers = [];\n    }\n\n    if (index === undefined) {\n      // add to the end of the list\n      index = handlers.length;\n    }\n\n    handlers.splice(index, 0, handler);\n  };\n\n  /**\n   * Check if the tech can support the given type. Also checks the\n   * Techs sourceHandlers.\n   *\n   * @param {string} type\n   *         The mimetype to check.\n   *\n   * @return {string}\n   *         'probably', 'maybe', or '' (empty string)\n   */\n  _Tech.canPlayType = function (type) {\n    var handlers = _Tech.sourceHandlers || [];\n    var can = void 0;\n\n    for (var i = 0; i < handlers.length; i++) {\n      can = handlers[i].canPlayType(type);\n\n      if (can) {\n        return can;\n      }\n    }\n\n    return '';\n  };\n\n  /**\n   * Returns the first source handler that supports the source.\n   *\n   * TODO: Answer question: should 'probably' be prioritized over 'maybe'\n   *\n   * @param {Tech~SourceObject} source\n   *        The source object\n   *\n   * @param {Object} options\n   *        The options passed to the tech\n   *\n   * @return {SourceHandler|null}\n   *          The first source handler that supports the source or null if\n   *          no SourceHandler supports the source\n   */\n  _Tech.selectSourceHandler = function (source, options) {\n    var handlers = _Tech.sourceHandlers || [];\n    var can = void 0;\n\n    for (var i = 0; i < handlers.length; i++) {\n      can = handlers[i].canHandleSource(source, options);\n\n      if (can) {\n        return handlers[i];\n      }\n    }\n\n    return null;\n  };\n\n  /**\n   * Check if the tech can support the given source.\n   *\n   * @param {Tech~SourceObject} srcObj\n   *        The source object\n   *\n   * @param {Object} options\n   *        The options passed to the tech\n   *\n   * @return {string}\n   *         'probably', 'maybe', or '' (empty string)\n   */\n  _Tech.canPlaySource = function (srcObj, options) {\n    var sh = _Tech.selectSourceHandler(srcObj, options);\n\n    if (sh) {\n      return sh.canHandleSource(srcObj, options);\n    }\n\n    return '';\n  };\n\n  /**\n   * When using a source handler, prefer its implementation of\n   * any function normally provided by the tech.\n   */\n  var deferrable = ['seekable', 'duration'];\n\n  /**\n   * A wrapper around {@link Tech#seekable} that will call a `SourceHandler`s seekable\n   * function if it exists, with a fallback to the Techs seekable function.\n   *\n   * @method _Tech.seekable\n   */\n\n  /**\n   * A wrapper around {@link Tech#duration} that will call a `SourceHandler`s duration\n   * function if it exists, otherwise it will fallback to the techs duration function.\n   *\n   * @method _Tech.duration\n   */\n\n  deferrable.forEach(function (fnName) {\n    var originalFn = this[fnName];\n\n    if (typeof originalFn !== 'function') {\n      return;\n    }\n\n    this[fnName] = function () {\n      if (this.sourceHandler_ && this.sourceHandler_[fnName]) {\n        return this.sourceHandler_[fnName].apply(this.sourceHandler_, arguments);\n      }\n      return originalFn.apply(this, arguments);\n    };\n  }, _Tech.prototype);\n\n  /**\n   * Create a function for setting the source using a source object\n   * and source handlers.\n   * Should never be called unless a source handler was found.\n   *\n   * @param {Tech~SourceObject} source\n   *        A source object with src and type keys\n   *\n   * @return {Tech}\n   *         Returns itself; this method is chainable\n   */\n  _Tech.prototype.setSource = function (source) {\n    var sh = _Tech.selectSourceHandler(source, this.options_);\n\n    if (!sh) {\n      // Fall back to a native source hander when unsupported sources are\n      // deliberately set\n      if (_Tech.nativeSourceHandler) {\n        sh = _Tech.nativeSourceHandler;\n      } else {\n        _log2['default'].error('No source hander found for the current source.');\n      }\n    }\n\n    // Dispose any existing source handler\n    this.disposeSourceHandler();\n    this.off('dispose', this.disposeSourceHandler);\n\n    if (sh !== _Tech.nativeSourceHandler) {\n      this.currentSource_ = source;\n\n      // Catch if someone replaced the src without calling setSource.\n      // If they do, set currentSource_ to null and dispose our source handler.\n      this.off(this.el_, 'loadstart', _Tech.prototype.firstLoadStartListener_);\n      this.off(this.el_, 'loadstart', _Tech.prototype.successiveLoadStartListener_);\n      this.one(this.el_, 'loadstart', _Tech.prototype.firstLoadStartListener_);\n    }\n\n    this.sourceHandler_ = sh.handleSource(source, this, this.options_);\n    this.on('dispose', this.disposeSourceHandler);\n\n    return this;\n  };\n\n  /**\n   * Called once for the first loadstart of a video.\n   *\n   * @listens Tech#loadstart\n   */\n  _Tech.prototype.firstLoadStartListener_ = function () {\n    this.one(this.el_, 'loadstart', _Tech.prototype.successiveLoadStartListener_);\n  };\n\n  // On successive loadstarts when setSource has not been called again\n  /**\n   * Called after the first loadstart for a video occurs.\n   *\n   * @listens Tech#loadstart\n   */\n  _Tech.prototype.successiveLoadStartListener_ = function () {\n    this.disposeSourceHandler();\n    this.one(this.el_, 'loadstart', _Tech.prototype.successiveLoadStartListener_);\n  };\n\n  /**\n   * Clean up any existing SourceHandlers and listeners when the Tech is disposed.\n   *\n   * @listens Tech#dispose\n   */\n  _Tech.prototype.disposeSourceHandler = function () {\n    // if we have a source and get another one\n    // then we are loading something new\n    // than clear all of our current tracks\n    if (this.currentSource_) {\n      this.clearTracks(['audio', 'video']);\n      this.currentSource_ = null;\n    }\n\n    // always clean up auto-text tracks\n    this.cleanupAutoTextTracks();\n\n    if (this.sourceHandler_) {\n      this.off(this.el_, 'loadstart', _Tech.prototype.firstLoadStartListener_);\n      this.off(this.el_, 'loadstart', _Tech.prototype.successiveLoadStartListener_);\n\n      if (this.sourceHandler_.dispose) {\n        this.sourceHandler_.dispose();\n      }\n\n      this.sourceHandler_ = null;\n    }\n  };\n};\n\n_component2['default'].registerComponent('Tech', Tech);\n// Old name for Tech\n// @deprecated\n_component2['default'].registerComponent('MediaTechController', Tech);\nTech.registerTech('Tech', Tech);\nexports['default'] = Tech;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/video.js/es5/tech/tech.js\n ** module id = 29\n ** module chunks = 0 1\n **/","'use strict';\n\nexports.__esModule = true;\n\nvar _browser = require('../utils/browser.js');\n\nvar browser = _interopRequireWildcard(_browser);\n\nvar _document = require('global/document');\n\nvar _document2 = _interopRequireDefault(_document);\n\nvar _eventTarget = require('../event-target');\n\nvar _eventTarget2 = _interopRequireDefault(_eventTarget);\n\nvar _textTrack = require('../tracks/text-track');\n\nvar _textTrack2 = _interopRequireDefault(_textTrack);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj['default'] = obj; return newObj; } }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /**\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * @file html-track-element.js\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                */\n\n/**\n * @typedef {HTMLTrackElement~ReadyState}\n * @enum {number}\n */\nvar NONE = 0;\nvar LOADING = 1;\nvar LOADED = 2;\nvar ERROR = 3;\n\n/**\n * A single track represented in the DOM.\n *\n * @see [Spec]{@link https://html.spec.whatwg.org/multipage/embedded-content.html#htmltrackelement}\n * @extends EventTarget\n */\n\nvar HTMLTrackElement = function (_EventTarget) {\n  _inherits(HTMLTrackElement, _EventTarget);\n\n  /**\n   * Create an instance of this class.\n   *\n   * @param {Object} options={}\n   *        Object of option names and values\n   *\n   * @param {Tech} options.tech\n   *        A reference to the tech that owns this HTMLTrackElement.\n   *\n   * @param {TextTrack~Kind} [options.kind='subtitles']\n   *        A valid text track kind.\n   *\n   * @param {TextTrack~Mode} [options.mode='disabled']\n   *        A valid text track mode.\n   *\n   * @param {string} [options.id='vjs_track_' + Guid.newGUID()]\n   *        A unique id for this TextTrack.\n   *\n   * @param {string} [options.label='']\n   *        The menu label for this track.\n   *\n   * @param {string} [options.language='']\n   *        A valid two character language code.\n   *\n   * @param {string} [options.srclang='']\n   *        A valid two character language code. An alternative, but deprioritized\n   *        vesion of `options.language`\n   *\n   * @param {string} [options.src]\n   *        A url to TextTrack cues.\n   *\n   * @param {boolean} [options.default]\n   *        If this track should default to on or off.\n   */\n  function HTMLTrackElement() {\n    var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n    _classCallCheck(this, HTMLTrackElement);\n\n    var _this = _possibleConstructorReturn(this, _EventTarget.call(this));\n\n    var readyState = void 0;\n    var trackElement = _this; // eslint-disable-line\n\n    if (browser.IS_IE8) {\n      trackElement = _document2['default'].createElement('custom');\n\n      for (var prop in HTMLTrackElement.prototype) {\n        if (prop !== 'constructor') {\n          trackElement[prop] = HTMLTrackElement.prototype[prop];\n        }\n      }\n    }\n\n    var track = new _textTrack2['default'](options);\n\n    trackElement.kind = track.kind;\n    trackElement.src = track.src;\n    trackElement.srclang = track.language;\n    trackElement.label = track.label;\n    trackElement['default'] = track['default'];\n\n    /**\n     * @member {HTMLTrackElement~ReadyState} readyState\n     *         The current ready state of the track element.\n     */\n    Object.defineProperty(trackElement, 'readyState', {\n      get: function get() {\n        return readyState;\n      }\n    });\n\n    /**\n     * @member {TextTrack} track\n     *         The underlying TextTrack object.\n     */\n    Object.defineProperty(trackElement, 'track', {\n      get: function get() {\n        return track;\n      }\n    });\n\n    readyState = NONE;\n\n    /**\n     * @listens TextTrack#loadeddata\n     * @fires HTMLTrackElement#load\n     */\n    track.addEventListener('loadeddata', function () {\n      readyState = LOADED;\n\n      trackElement.trigger({\n        type: 'load',\n        target: trackElement\n      });\n    });\n\n    if (browser.IS_IE8) {\n      var _ret;\n\n      return _ret = trackElement, _possibleConstructorReturn(_this, _ret);\n    }\n    return _this;\n  }\n\n  return HTMLTrackElement;\n}(_eventTarget2['default']);\n\nHTMLTrackElement.prototype.allowedEvents_ = {\n  load: 'load'\n};\n\nHTMLTrackElement.NONE = NONE;\nHTMLTrackElement.LOADING = LOADING;\nHTMLTrackElement.LOADED = LOADED;\nHTMLTrackElement.ERROR = ERROR;\n\nexports['default'] = HTMLTrackElement;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/video.js/es5/tracks/html-track-element.js\n ** module id = 30\n ** module chunks = 0 1\n **/","'use strict';\n\nexports.__esModule = true;\n\nvar _textTrackCueList = require('./text-track-cue-list');\n\nvar _textTrackCueList2 = _interopRequireDefault(_textTrackCueList);\n\nvar _fn = require('../utils/fn.js');\n\nvar Fn = _interopRequireWildcard(_fn);\n\nvar _trackEnums = require('./track-enums');\n\nvar _log = require('../utils/log.js');\n\nvar _log2 = _interopRequireDefault(_log);\n\nvar _window = require('global/window');\n\nvar _window2 = _interopRequireDefault(_window);\n\nvar _track = require('./track.js');\n\nvar _track2 = _interopRequireDefault(_track);\n\nvar _url = require('../utils/url.js');\n\nvar _xhr = require('xhr');\n\nvar _xhr2 = _interopRequireDefault(_xhr);\n\nvar _mergeOptions = require('../utils/merge-options');\n\nvar _mergeOptions2 = _interopRequireDefault(_mergeOptions);\n\nvar _browser = require('../utils/browser.js');\n\nvar browser = _interopRequireWildcard(_browser);\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj['default'] = obj; return newObj; } }\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /**\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * @file text-track.js\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                */\n\n\n/**\n * Takes a webvtt file contents and parses it into cues\n *\n * @param {string} srcContent\n *        webVTT file contents\n *\n * @param {TextTrack} track\n *        TextTrack to add cues to. Cues come from the srcContent.\n *\n * @private\n */\nvar parseCues = function parseCues(srcContent, track) {\n  var parser = new _window2['default'].WebVTT.Parser(_window2['default'], _window2['default'].vttjs, _window2['default'].WebVTT.StringDecoder());\n  var errors = [];\n\n  parser.oncue = function (cue) {\n    track.addCue(cue);\n  };\n\n  parser.onparsingerror = function (error) {\n    errors.push(error);\n  };\n\n  parser.onflush = function () {\n    track.trigger({\n      type: 'loadeddata',\n      target: track\n    });\n  };\n\n  parser.parse(srcContent);\n  if (errors.length > 0) {\n    if (_window2['default'].console && _window2['default'].console.groupCollapsed) {\n      _window2['default'].console.groupCollapsed('Text Track parsing errors for ' + track.src);\n    }\n    errors.forEach(function (error) {\n      return _log2['default'].error(error);\n    });\n    if (_window2['default'].console && _window2['default'].console.groupEnd) {\n      _window2['default'].console.groupEnd();\n    }\n  }\n\n  parser.flush();\n};\n\n/**\n * Load a `TextTrack` from a specifed url.\n *\n * @param {string} src\n *        Url to load track from.\n *\n * @param {TextTrack} track\n *        Track to add cues to. Comes from the content at the end of `url`.\n *\n * @private\n */\nvar loadTrack = function loadTrack(src, track) {\n  var opts = {\n    uri: src\n  };\n  var crossOrigin = (0, _url.isCrossOrigin)(src);\n\n  if (crossOrigin) {\n    opts.cors = crossOrigin;\n  }\n\n  (0, _xhr2['default'])(opts, Fn.bind(this, function (err, response, responseBody) {\n    if (err) {\n      return _log2['default'].error(err, response);\n    }\n\n    track.loaded_ = true;\n\n    // Make sure that vttjs has loaded, otherwise, wait till it finished loading\n    // NOTE: this is only used for the alt/video.novtt.js build\n    if (typeof _window2['default'].WebVTT !== 'function') {\n      if (track.tech_) {\n        (function () {\n          var loadHandler = function loadHandler() {\n            return parseCues(responseBody, track);\n          };\n\n          track.tech_.on('vttjsloaded', loadHandler);\n          track.tech_.on('vttjserror', function () {\n            _log2['default'].error('vttjs failed to load, stopping trying to process ' + track.src);\n            track.tech_.off('vttjsloaded', loadHandler);\n          });\n        })();\n      }\n    } else {\n      parseCues(responseBody, track);\n    }\n  }));\n};\n\n/**\n * A representation of a single `TextTrack`.\n *\n * @see [Spec]{@link https://html.spec.whatwg.org/multipage/embedded-content.html#texttrack}\n * @extends Track\n */\n\nvar TextTrack = function (_Track) {\n  _inherits(TextTrack, _Track);\n\n  /**\n   * Create an instance of this class.\n   *\n   * @param {Object} options={}\n   *        Object of option names and values\n   *\n   * @param {Tech} options.tech\n   *        A reference to the tech that owns this TextTrack.\n   *\n   * @param {TextTrack~Kind} [options.kind='subtitles']\n   *        A valid text track kind.\n   *\n   * @param {TextTrack~Mode} [options.mode='disabled']\n   *        A valid text track mode.\n   *\n   * @param {string} [options.id='vjs_track_' + Guid.newGUID()]\n   *        A unique id for this TextTrack.\n   *\n   * @param {string} [options.label='']\n   *        The menu label for this track.\n   *\n   * @param {string} [options.language='']\n   *        A valid two character language code.\n   *\n   * @param {string} [options.srclang='']\n   *        A valid two character language code. An alternative, but deprioritized\n   *        vesion of `options.language`\n   *\n   * @param {string} [options.src]\n   *        A url to TextTrack cues.\n   *\n   * @param {boolean} [options.default]\n   *        If this track should default to on or off.\n   */\n  function TextTrack() {\n    var _this, _ret2;\n\n    var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n    _classCallCheck(this, TextTrack);\n\n    if (!options.tech) {\n      throw new Error('A tech was not provided.');\n    }\n\n    var settings = (0, _mergeOptions2['default'])(options, {\n      kind: _trackEnums.TextTrackKind[options.kind] || 'subtitles',\n      language: options.language || options.srclang || ''\n    });\n    var mode = _trackEnums.TextTrackMode[settings.mode] || 'disabled';\n    var default_ = settings['default'];\n\n    if (settings.kind === 'metadata' || settings.kind === 'chapters') {\n      mode = 'hidden';\n    }\n    // on IE8 this will be a document element\n    // for every other browser this will be a normal object\n    var tt = (_this = _possibleConstructorReturn(this, _Track.call(this, settings)), _this);\n\n    tt.tech_ = settings.tech;\n\n    if (browser.IS_IE8) {\n      for (var prop in TextTrack.prototype) {\n        if (prop !== 'constructor') {\n          tt[prop] = TextTrack.prototype[prop];\n        }\n      }\n    }\n\n    tt.cues_ = [];\n    tt.activeCues_ = [];\n\n    var cues = new _textTrackCueList2['default'](tt.cues_);\n    var activeCues = new _textTrackCueList2['default'](tt.activeCues_);\n    var changed = false;\n    var timeupdateHandler = Fn.bind(tt, function () {\n\n      // Accessing this.activeCues for the side-effects of updating itself\n      // due to it's nature as a getter function. Do not remove or cues will\n      // stop updating!\n      /* eslint-disable no-unused-expressions */\n      this.activeCues;\n      /* eslint-enable no-unused-expressions */\n      if (changed) {\n        this.trigger('cuechange');\n        changed = false;\n      }\n    });\n\n    if (mode !== 'disabled') {\n      tt.tech_.on('timeupdate', timeupdateHandler);\n    }\n\n    /**\n     * @member {boolean} default\n     *         If this track was set to be on or off by default. Cannot be changed after\n     *         creation.\n     *\n     * @readonly\n     */\n    Object.defineProperty(tt, 'default', {\n      get: function get() {\n        return default_;\n      },\n      set: function set() {}\n    });\n\n    /**\n     * @member {string} mode\n     *         Set the mode of this TextTrack to a valid {@link TextTrack~Mode}. Will\n     *         not be set if setting to an invalid mode.\n     *\n     * @fires TextTrack#modechange\n     */\n    Object.defineProperty(tt, 'mode', {\n      get: function get() {\n        return mode;\n      },\n      set: function set(newMode) {\n        if (!_trackEnums.TextTrackMode[newMode]) {\n          return;\n        }\n        mode = newMode;\n        if (mode === 'showing') {\n          this.tech_.on('timeupdate', timeupdateHandler);\n        }\n        /**\n         * An event that fires when mode changes on this track. This allows\n         * the TextTrackList that holds this track to act accordingly.\n         *\n         * > Note: This is not part of the spec!\n         *\n         * @event TextTrack#modechange\n         * @type {EventTarget~Event}\n         */\n        this.trigger('modechange');\n      }\n    });\n\n    /**\n     * @member {TextTrackCueList} cues\n     *         The text track cue list for this TextTrack.\n     */\n    Object.defineProperty(tt, 'cues', {\n      get: function get() {\n        if (!this.loaded_) {\n          return null;\n        }\n\n        return cues;\n      },\n      set: function set() {}\n    });\n\n    /**\n     * @member {TextTrackCueList} activeCues\n     *         The list text track cues that are currently active for this TextTrack.\n     */\n    Object.defineProperty(tt, 'activeCues', {\n      get: function get() {\n        if (!this.loaded_) {\n          return null;\n        }\n\n        // nothing to do\n        if (this.cues.length === 0) {\n          return activeCues;\n        }\n\n        var ct = this.tech_.currentTime();\n        var active = [];\n\n        for (var i = 0, l = this.cues.length; i < l; i++) {\n          var cue = this.cues[i];\n\n          if (cue.startTime <= ct && cue.endTime >= ct) {\n            active.push(cue);\n          } else if (cue.startTime === cue.endTime && cue.startTime <= ct && cue.startTime + 0.5 >= ct) {\n            active.push(cue);\n          }\n        }\n\n        changed = false;\n\n        if (active.length !== this.activeCues_.length) {\n          changed = true;\n        } else {\n          for (var _i = 0; _i < active.length; _i++) {\n            if (this.activeCues_.indexOf(active[_i]) === -1) {\n              changed = true;\n            }\n          }\n        }\n\n        this.activeCues_ = active;\n        activeCues.setCues_(this.activeCues_);\n\n        return activeCues;\n      },\n      set: function set() {}\n    });\n\n    if (settings.src) {\n      tt.src = settings.src;\n      loadTrack(settings.src, tt);\n    } else {\n      tt.loaded_ = true;\n    }\n\n    return _ret2 = tt, _possibleConstructorReturn(_this, _ret2);\n  }\n\n  /**\n   * Add a cue to the internal list of cues.\n   *\n   * @param {TextTrack~Cue} cue\n   *        The cue to add to our internal list\n   */\n\n\n  TextTrack.prototype.addCue = function addCue(cue) {\n    var tracks = this.tech_.textTracks();\n\n    if (tracks) {\n      for (var i = 0; i < tracks.length; i++) {\n        if (tracks[i] !== this) {\n          tracks[i].removeCue(cue);\n        }\n      }\n    }\n\n    this.cues_.push(cue);\n    this.cues.setCues_(this.cues_);\n  };\n\n  /**\n   * Remove a cue from our internal list\n   *\n   * @param {TextTrack~Cue} removeCue\n   *        The cue to remove from our internal list\n   */\n\n\n  TextTrack.prototype.removeCue = function removeCue(_removeCue) {\n    var removed = false;\n\n    for (var i = 0, l = this.cues_.length; i < l; i++) {\n      var cue = this.cues_[i];\n\n      if (cue === _removeCue) {\n        this.cues_.splice(i, 1);\n        removed = true;\n      }\n    }\n\n    if (removed) {\n      this.cues.setCues_(this.cues_);\n    }\n  };\n\n  return TextTrack;\n}(_track2['default']);\n\n/**\n * cuechange - One or more cues in the track have become active or stopped being active.\n */\n\n\nTextTrack.prototype.allowedEvents_ = {\n  cuechange: 'cuechange'\n};\n\nexports['default'] = TextTrack;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/video.js/es5/tracks/text-track.js\n ** module id = 31\n ** module chunks = 0 1\n **/","'use strict';\n\nexports.__esModule = true;\n\nvar _browser = require('../utils/browser.js');\n\nvar browser = _interopRequireWildcard(_browser);\n\nvar _document = require('global/document');\n\nvar _document2 = _interopRequireDefault(_document);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj['default'] = obj; return newObj; } }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } } /**\n                                                                                                                                                           * @file text-track-cue-list.js\n                                                                                                                                                           */\n\n\n/**\n * @typedef {Object} TextTrackCue\n *\n * @property {string} id\n *           The unique id for this text track cue\n *\n * @property {number} startTime\n *           The start time for this text track cue\n *\n * @property {number} endTime\n *           The end time for this text track cue\n *\n * @property {boolean} pauseOnExit\n *           Pause when the end time is reached if true.\n *\n * @see [Spec]{@link https://html.spec.whatwg.org/multipage/embedded-content.html#texttrackcue}\n */\n\n/**\n * A List of TextTrackCues.\n *\n * @see [Spec]{@link https://html.spec.whatwg.org/multipage/embedded-content.html#texttrackcuelist}\n */\nvar TextTrackCueList = function () {\n\n  /**\n   * Create an instance of this class..\n   *\n   * @param {Array} cues\n   *        A list of cues to be initialized with\n   */\n  function TextTrackCueList(cues) {\n    _classCallCheck(this, TextTrackCueList);\n\n    var list = this; // eslint-disable-line\n\n    if (browser.IS_IE8) {\n      list = _document2['default'].createElement('custom');\n\n      for (var prop in TextTrackCueList.prototype) {\n        if (prop !== 'constructor') {\n          list[prop] = TextTrackCueList.prototype[prop];\n        }\n      }\n    }\n\n    TextTrackCueList.prototype.setCues_.call(list, cues);\n\n    /**\n     * @member {number} length\n     *         The current number of `TextTrackCue`s in the TextTrackCueList.\n     */\n    Object.defineProperty(list, 'length', {\n      get: function get() {\n        return this.length_;\n      }\n    });\n\n    if (browser.IS_IE8) {\n      return list;\n    }\n  }\n\n  /**\n   * A setter for cues in this list. Creates getters\n   * an an index for the cues.\n   *\n   * @param {Array} cues\n   *        An array of cues to set\n   *\n   * @private\n   */\n\n\n  TextTrackCueList.prototype.setCues_ = function setCues_(cues) {\n    var oldLength = this.length || 0;\n    var i = 0;\n    var l = cues.length;\n\n    this.cues_ = cues;\n    this.length_ = cues.length;\n\n    var defineProp = function defineProp(index) {\n      if (!('' + index in this)) {\n        Object.defineProperty(this, '' + index, {\n          get: function get() {\n            return this.cues_[index];\n          }\n        });\n      }\n    };\n\n    if (oldLength < l) {\n      i = oldLength;\n\n      for (; i < l; i++) {\n        defineProp.call(this, i);\n      }\n    }\n  };\n\n  /**\n   * Get a `TextTrackCue` that is currently in the `TextTrackCueList` by id.\n   *\n   * @param {string} id\n   *        The id of the cue that should be searched for.\n   *\n   * @return {TextTrackCue|null}\n   *         A single cue or null if none was found.\n   */\n\n\n  TextTrackCueList.prototype.getCueById = function getCueById(id) {\n    var result = null;\n\n    for (var i = 0, l = this.length; i < l; i++) {\n      var cue = this[i];\n\n      if (cue.id === id) {\n        result = cue;\n        break;\n      }\n    }\n\n    return result;\n  };\n\n  return TextTrackCueList;\n}();\n\nexports['default'] = TextTrackCueList;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/video.js/es5/tracks/text-track-cue-list.js\n ** module id = 32\n ** module chunks = 0 1\n **/","'use strict';\n\nexports.__esModule = true;\n/**\n * @file track-kinds.js\n */\n\n/**\n * All possible `VideoTrackKind`s\n *\n * @see https://html.spec.whatwg.org/multipage/embedded-content.html#dom-videotrack-kind\n * @typedef VideoTrack~Kind\n * @enum\n */\nvar VideoTrackKind = exports.VideoTrackKind = {\n  alternative: 'alternative',\n  captions: 'captions',\n  main: 'main',\n  sign: 'sign',\n  subtitles: 'subtitles',\n  commentary: 'commentary'\n};\n\n/**\n * All possible `AudioTrackKind`s\n *\n * @see https://html.spec.whatwg.org/multipage/embedded-content.html#dom-audiotrack-kind\n * @typedef AudioTrack~Kind\n * @enum\n */\nvar AudioTrackKind = exports.AudioTrackKind = {\n  'alternative': 'alternative',\n  'descriptions': 'descriptions',\n  'main': 'main',\n  'main-desc': 'main-desc',\n  'translation': 'translation',\n  'commentary': 'commentary'\n};\n\n/**\n * All possible `TextTrackKind`s\n *\n * @see https://html.spec.whatwg.org/multipage/embedded-content.html#dom-texttrack-kind\n * @typedef TextTrack~Kind\n * @enum\n */\nvar TextTrackKind = exports.TextTrackKind = {\n  subtitles: 'subtitles',\n  captions: 'captions',\n  descriptions: 'descriptions',\n  chapters: 'chapters',\n  metadata: 'metadata'\n};\n\n/**\n * All possible `TextTrackMode`s\n *\n * @see https://html.spec.whatwg.org/multipage/embedded-content.html#texttrackmode\n * @typedef TextTrack~Mode\n * @enum\n */\nvar TextTrackMode = exports.TextTrackMode = {\n  disabled: 'disabled',\n  hidden: 'hidden',\n  showing: 'showing'\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/video.js/es5/tracks/track-enums.js\n ** module id = 33\n ** module chunks = 0 1\n **/","'use strict';\n\nexports.__esModule = true;\n\nvar _browser = require('../utils/browser.js');\n\nvar browser = _interopRequireWildcard(_browser);\n\nvar _document = require('global/document');\n\nvar _document2 = _interopRequireDefault(_document);\n\nvar _guid = require('../utils/guid.js');\n\nvar Guid = _interopRequireWildcard(_guid);\n\nvar _eventTarget = require('../event-target');\n\nvar _eventTarget2 = _interopRequireDefault(_eventTarget);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj['default'] = obj; return newObj; } }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /**\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * @file track.js\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                */\n\n\n/**\n * A Track class that contains all of the common functionality for {@link AudioTrack},\n * {@link VideoTrack}, and {@link TextTrack}.\n *\n * > Note: This class should not be used directly\n *\n * @see {@link https://html.spec.whatwg.org/multipage/embedded-content.html}\n * @extends EventTarget\n * @abstract\n */\nvar Track = function (_EventTarget) {\n  _inherits(Track, _EventTarget);\n\n  /**\n   * Create an instance of this class.\n   *\n   * @param {Object} [options={}]\n   *        Object of option names and values\n   *\n   * @param {string} [options.kind='']\n   *        A valid kind for the track type you are creating.\n   *\n   * @param {string} [options.id='vjs_track_' + Guid.newGUID()]\n   *        A unique id for this AudioTrack.\n   *\n   * @param {string} [options.label='']\n   *        The menu label for this track.\n   *\n   * @param {string} [options.language='']\n   *        A valid two character language code.\n   *\n   * @abstract\n   */\n  function Track() {\n    var _ret;\n\n    var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n    _classCallCheck(this, Track);\n\n    var _this = _possibleConstructorReturn(this, _EventTarget.call(this));\n\n    var track = _this; // eslint-disable-line\n\n    if (browser.IS_IE8) {\n      track = _document2['default'].createElement('custom');\n      for (var prop in Track.prototype) {\n        if (prop !== 'constructor') {\n          track[prop] = Track.prototype[prop];\n        }\n      }\n    }\n\n    var trackProps = {\n      id: options.id || 'vjs_track_' + Guid.newGUID(),\n      kind: options.kind || '',\n      label: options.label || '',\n      language: options.language || ''\n    };\n\n    /**\n     * @member {string} id\n     *         The id of this track. Cannot be changed after creation.\n     *\n     * @readonly\n     */\n\n    /**\n     * @member {string} kind\n     *         The kind of track that this is. Cannot be changed after creation.\n     *\n     * @readonly\n     */\n\n    /**\n     * @member {string} label\n     *         The label of this track. Cannot be changed after creation.\n     *\n     * @readonly\n     */\n\n    /**\n     * @member {string} language\n     *         The two letter language code for this track. Cannot be changed after\n     *         creation.\n     *\n     * @readonly\n     */\n\n    var _loop = function _loop(key) {\n      Object.defineProperty(track, key, {\n        get: function get() {\n          return trackProps[key];\n        },\n        set: function set() {}\n      });\n    };\n\n    for (var key in trackProps) {\n      _loop(key);\n    }\n\n    return _ret = track, _possibleConstructorReturn(_this, _ret);\n  }\n\n  return Track;\n}(_eventTarget2['default']);\n\nexports['default'] = Track;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/video.js/es5/tracks/track.js\n ** module id = 34\n ** module chunks = 0 1\n **/","'use strict';\n\nexports.__esModule = true;\nexports.isCrossOrigin = exports.getFileExtension = exports.getAbsoluteURL = exports.parseUrl = undefined;\n\nvar _document = require('global/document');\n\nvar _document2 = _interopRequireDefault(_document);\n\nvar _window = require('global/window');\n\nvar _window2 = _interopRequireDefault(_window);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\n/**\n * @typedef {Object} url:URLObject\n *\n * @property {string} protocol\n *           The protocol of the url that was parsed.\n *\n * @property {string} hostname\n *           The hostname of the url that was parsed.\n *\n * @property {string} port\n *           The port of the url that was parsed.\n *\n * @property {string} pathname\n *           The pathname of the url that was parsed.\n *\n * @property {string} search\n *           The search query of the url that was parsed.\n *\n * @property {string} hash\n *           The hash of the url that was parsed.\n *\n * @property {string} host\n *           The host of the url that was parsed.\n */\n\n/**\n * Resolve and parse the elements of a URL.\n *\n * @param  {String} url\n *         The url to parse\n *\n * @return {url:URLObject}\n *         An object of url details\n */\n/**\n * @file url.js\n * @module url\n */\nvar parseUrl = exports.parseUrl = function parseUrl(url) {\n  var props = ['protocol', 'hostname', 'port', 'pathname', 'search', 'hash', 'host'];\n\n  // add the url to an anchor and let the browser parse the URL\n  var a = _document2['default'].createElement('a');\n\n  a.href = url;\n\n  // IE8 (and 9?) Fix\n  // ie8 doesn't parse the URL correctly until the anchor is actually\n  // added to the body, and an innerHTML is needed to trigger the parsing\n  var addToBody = a.host === '' && a.protocol !== 'file:';\n  var div = void 0;\n\n  if (addToBody) {\n    div = _document2['default'].createElement('div');\n    div.innerHTML = '<a href=\"' + url + '\"></a>';\n    a = div.firstChild;\n    // prevent the div from affecting layout\n    div.setAttribute('style', 'display:none; position:absolute;');\n    _document2['default'].body.appendChild(div);\n  }\n\n  // Copy the specific URL properties to a new object\n  // This is also needed for IE8 because the anchor loses its\n  // properties when it's removed from the dom\n  var details = {};\n\n  for (var i = 0; i < props.length; i++) {\n    details[props[i]] = a[props[i]];\n  }\n\n  // IE9 adds the port to the host property unlike everyone else. If\n  // a port identifier is added for standard ports, strip it.\n  if (details.protocol === 'http:') {\n    details.host = details.host.replace(/:80$/, '');\n  }\n\n  if (details.protocol === 'https:') {\n    details.host = details.host.replace(/:443$/, '');\n  }\n\n  if (addToBody) {\n    _document2['default'].body.removeChild(div);\n  }\n\n  return details;\n};\n\n/**\n * Get absolute version of relative URL. Used to tell flash correct URL.\n *\n *\n * @param  {string} url\n *         URL to make absolute\n *\n * @return {string}\n *         Absolute URL\n *\n * @see http://stackoverflow.com/questions/470832/getting-an-absolute-url-from-a-relative-one-ie6-issue\n */\nvar getAbsoluteURL = exports.getAbsoluteURL = function getAbsoluteURL(url) {\n  // Check if absolute URL\n  if (!url.match(/^https?:\\/\\//)) {\n    // Convert to absolute URL. Flash hosted off-site needs an absolute URL.\n    var div = _document2['default'].createElement('div');\n\n    div.innerHTML = '<a href=\"' + url + '\">x</a>';\n    url = div.firstChild.href;\n  }\n\n  return url;\n};\n\n/**\n * Returns the extension of the passed file name. It will return an empty string\n * if passed an invalid path.\n *\n * @param {string} path\n *        The fileName path like '/path/to/file.mp4'\n *\n * @returns {string}\n *          The extension in lower case or an empty string if no\n *          extension could be found.\n */\nvar getFileExtension = exports.getFileExtension = function getFileExtension(path) {\n  if (typeof path === 'string') {\n    var splitPathRe = /^(\\/?)([\\s\\S]*?)((?:\\.{1,2}|[^\\/]+?)(\\.([^\\.\\/\\?]+)))(?:[\\/]*|[\\?].*)$/i;\n    var pathParts = splitPathRe.exec(path);\n\n    if (pathParts) {\n      return pathParts.pop().toLowerCase();\n    }\n  }\n\n  return '';\n};\n\n/**\n * Returns whether the url passed is a cross domain request or not.\n *\n * @param {string} url\n *        The url to check.\n *\n * @return {boolean}\n *         Whether it is a cross domain request or not.\n */\nvar isCrossOrigin = exports.isCrossOrigin = function isCrossOrigin(url) {\n  var winLoc = _window2['default'].location;\n  var urlInfo = parseUrl(url);\n\n  // IE8 protocol relative urls will return ':' for protocol\n  var srcProtocol = urlInfo.protocol === ':' ? winLoc.protocol : urlInfo.protocol;\n\n  // Check if url is for another domain/origin\n  // IE8 doesn't know location.origin, so we won't rely on it here\n  var crossOrigin = srcProtocol + urlInfo.host !== winLoc.protocol + winLoc.host;\n\n  return crossOrigin;\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/video.js/es5/utils/url.js\n ** module id = 35\n ** module chunks = 0 1\n **/","\"use strict\";\nvar window = require(\"global/window\")\nvar once = require(\"once\")\nvar isFunction = require(\"is-function\")\nvar parseHeaders = require(\"parse-headers\")\nvar xtend = require(\"xtend\")\n\nmodule.exports = createXHR\ncreateXHR.XMLHttpRequest = window.XMLHttpRequest || noop\ncreateXHR.XDomainRequest = \"withCredentials\" in (new createXHR.XMLHttpRequest()) ? createXHR.XMLHttpRequest : window.XDomainRequest\n\nforEachArray([\"get\", \"put\", \"post\", \"patch\", \"head\", \"delete\"], function(method) {\n    createXHR[method === \"delete\" ? \"del\" : method] = function(uri, options, callback) {\n        options = initParams(uri, options, callback)\n        options.method = method.toUpperCase()\n        return _createXHR(options)\n    }\n})\n\nfunction forEachArray(array, iterator) {\n    for (var i = 0; i < array.length; i++) {\n        iterator(array[i])\n    }\n}\n\nfunction isEmpty(obj){\n    for(var i in obj){\n        if(obj.hasOwnProperty(i)) return false\n    }\n    return true\n}\n\nfunction initParams(uri, options, callback) {\n    var params = uri\n\n    if (isFunction(options)) {\n        callback = options\n        if (typeof uri === \"string\") {\n            params = {uri:uri}\n        }\n    } else {\n        params = xtend(options, {uri: uri})\n    }\n\n    params.callback = callback\n    return params\n}\n\nfunction createXHR(uri, options, callback) {\n    options = initParams(uri, options, callback)\n    return _createXHR(options)\n}\n\nfunction _createXHR(options) {\n    var callback = options.callback\n    if(typeof callback === \"undefined\"){\n        throw new Error(\"callback argument missing\")\n    }\n    callback = once(callback)\n\n    function readystatechange() {\n        if (xhr.readyState === 4) {\n            loadFunc()\n        }\n    }\n\n    function getBody() {\n        // Chrome with requestType=blob throws errors arround when even testing access to responseText\n        var body = undefined\n\n        if (xhr.response) {\n            body = xhr.response\n        } else if (xhr.responseType === \"text\" || !xhr.responseType) {\n            body = xhr.responseText || xhr.responseXML\n        }\n\n        if (isJson) {\n            try {\n                body = JSON.parse(body)\n            } catch (e) {}\n        }\n\n        return body\n    }\n\n    var failureResponse = {\n                body: undefined,\n                headers: {},\n                statusCode: 0,\n                method: method,\n                url: uri,\n                rawRequest: xhr\n            }\n\n    function errorFunc(evt) {\n        clearTimeout(timeoutTimer)\n        if(!(evt instanceof Error)){\n            evt = new Error(\"\" + (evt || \"Unknown XMLHttpRequest Error\") )\n        }\n        evt.statusCode = 0\n        callback(evt, failureResponse)\n    }\n\n    // will load the data & process the response in a special response object\n    function loadFunc() {\n        if (aborted) return\n        var status\n        clearTimeout(timeoutTimer)\n        if(options.useXDR && xhr.status===undefined) {\n            //IE8 CORS GET successful response doesn't have a status field, but body is fine\n            status = 200\n        } else {\n            status = (xhr.status === 1223 ? 204 : xhr.status)\n        }\n        var response = failureResponse\n        var err = null\n\n        if (status !== 0){\n            response = {\n                body: getBody(),\n                statusCode: status,\n                method: method,\n                headers: {},\n                url: uri,\n                rawRequest: xhr\n            }\n            if(xhr.getAllResponseHeaders){ //remember xhr can in fact be XDR for CORS in IE\n                response.headers = parseHeaders(xhr.getAllResponseHeaders())\n            }\n        } else {\n            err = new Error(\"Internal XMLHttpRequest Error\")\n        }\n        callback(err, response, response.body)\n\n    }\n\n    var xhr = options.xhr || null\n\n    if (!xhr) {\n        if (options.cors || options.useXDR) {\n            xhr = new createXHR.XDomainRequest()\n        }else{\n            xhr = new createXHR.XMLHttpRequest()\n        }\n    }\n\n    var key\n    var aborted\n    var uri = xhr.url = options.uri || options.url\n    var method = xhr.method = options.method || \"GET\"\n    var body = options.body || options.data || null\n    var headers = xhr.headers = options.headers || {}\n    var sync = !!options.sync\n    var isJson = false\n    var timeoutTimer\n\n    if (\"json\" in options) {\n        isJson = true\n        headers[\"accept\"] || headers[\"Accept\"] || (headers[\"Accept\"] = \"application/json\") //Don't override existing accept header declared by user\n        if (method !== \"GET\" && method !== \"HEAD\") {\n            headers[\"content-type\"] || headers[\"Content-Type\"] || (headers[\"Content-Type\"] = \"application/json\") //Don't override existing accept header declared by user\n            body = JSON.stringify(options.json)\n        }\n    }\n\n    xhr.onreadystatechange = readystatechange\n    xhr.onload = loadFunc\n    xhr.onerror = errorFunc\n    // IE9 must have onprogress be set to a unique function.\n    xhr.onprogress = function () {\n        // IE must die\n    }\n    xhr.ontimeout = errorFunc\n    xhr.open(method, uri, !sync, options.username, options.password)\n    //has to be after open\n    if(!sync) {\n        xhr.withCredentials = !!options.withCredentials\n    }\n    // Cannot set timeout with sync request\n    // not setting timeout on the xhr object, because of old webkits etc. not handling that correctly\n    // both npm's request and jquery 1.x use this kind of timeout, so this is being consistent\n    if (!sync && options.timeout > 0 ) {\n        timeoutTimer = setTimeout(function(){\n            aborted=true//IE9 may still call readystatechange\n            xhr.abort(\"timeout\")\n            var e = new Error(\"XMLHttpRequest timeout\")\n            e.code = \"ETIMEDOUT\"\n            errorFunc(e)\n        }, options.timeout )\n    }\n\n    if (xhr.setRequestHeader) {\n        for(key in headers){\n            if(headers.hasOwnProperty(key)){\n                xhr.setRequestHeader(key, headers[key])\n            }\n        }\n    } else if (options.headers && !isEmpty(options.headers)) {\n        throw new Error(\"Headers cannot be set on an XDomainRequest object\")\n    }\n\n    if (\"responseType\" in options) {\n        xhr.responseType = options.responseType\n    }\n\n    if (\"beforeSend\" in options &&\n        typeof options.beforeSend === \"function\"\n    ) {\n        options.beforeSend(xhr)\n    }\n\n    xhr.send(body)\n\n    return xhr\n\n\n}\n\nfunction noop() {}\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/xhr/index.js\n ** module id = 36\n ** module chunks = 0 1\n **/","module.exports = once\n\nonce.proto = once(function () {\n  Object.defineProperty(Function.prototype, 'once', {\n    value: function () {\n      return once(this)\n    },\n    configurable: true\n  })\n})\n\nfunction once (fn) {\n  var called = false\n  return function () {\n    if (called) return\n    called = true\n    return fn.apply(this, arguments)\n  }\n}\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/xhr/~/once/once.js\n ** module id = 37\n ** module chunks = 0 1\n **/","module.exports = isFunction\n\nvar toString = Object.prototype.toString\n\nfunction isFunction (fn) {\n  var string = toString.call(fn)\n  return string === '[object Function]' ||\n    (typeof fn === 'function' && string !== '[object RegExp]') ||\n    (typeof window !== 'undefined' &&\n     // IE8 and below\n     (fn === window.setTimeout ||\n      fn === window.alert ||\n      fn === window.confirm ||\n      fn === window.prompt))\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/is-function/index.js\n ** module id = 38\n ** module chunks = 0 1\n **/","var trim = require('trim')\n  , forEach = require('for-each')\n  , isArray = function(arg) {\n      return Object.prototype.toString.call(arg) === '[object Array]';\n    }\n\nmodule.exports = function (headers) {\n  if (!headers)\n    return {}\n\n  var result = {}\n\n  forEach(\n      trim(headers).split('\\n')\n    , function (row) {\n        var index = row.indexOf(':')\n          , key = trim(row.slice(0, index)).toLowerCase()\n          , value = trim(row.slice(index + 1))\n\n        if (typeof(result[key]) === 'undefined') {\n          result[key] = value\n        } else if (isArray(result[key])) {\n          result[key].push(value)\n        } else {\n          result[key] = [ result[key], value ]\n        }\n      }\n  )\n\n  return result\n}\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/parse-headers/parse-headers.js\n ** module id = 39\n ** module chunks = 0 1\n **/","\nexports = module.exports = trim;\n\nfunction trim(str){\n  return str.replace(/^\\s*|\\s*$/g, '');\n}\n\nexports.left = function(str){\n  return str.replace(/^\\s*/, '');\n};\n\nexports.right = function(str){\n  return str.replace(/\\s*$/, '');\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/trim/index.js\n ** module id = 40\n ** module chunks = 0 1\n **/","var isFunction = require('is-function')\n\nmodule.exports = forEach\n\nvar toString = Object.prototype.toString\nvar hasOwnProperty = Object.prototype.hasOwnProperty\n\nfunction forEach(list, iterator, context) {\n    if (!isFunction(iterator)) {\n        throw new TypeError('iterator must be a function')\n    }\n\n    if (arguments.length < 3) {\n        context = this\n    }\n    \n    if (toString.call(list) === '[object Array]')\n        forEachArray(list, iterator, context)\n    else if (typeof list === 'string')\n        forEachString(list, iterator, context)\n    else\n        forEachObject(list, iterator, context)\n}\n\nfunction forEachArray(array, iterator, context) {\n    for (var i = 0, len = array.length; i < len; i++) {\n        if (hasOwnProperty.call(array, i)) {\n            iterator.call(context, array[i], i, array)\n        }\n    }\n}\n\nfunction forEachString(string, iterator, context) {\n    for (var i = 0, len = string.length; i < len; i++) {\n        // no such thing as a sparse string.\n        iterator.call(context, string.charAt(i), i, string)\n    }\n}\n\nfunction forEachObject(object, iterator, context) {\n    for (var k in object) {\n        if (hasOwnProperty.call(object, k)) {\n            iterator.call(context, object[k], k, object)\n        }\n    }\n}\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/for-each/index.js\n ** module id = 41\n ** module chunks = 0 1\n **/","module.exports = extend\n\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\n\nfunction extend() {\n    var target = {}\n\n    for (var i = 0; i < arguments.length; i++) {\n        var source = arguments[i]\n\n        for (var key in source) {\n            if (hasOwnProperty.call(source, key)) {\n                target[key] = source[key]\n            }\n        }\n    }\n\n    return target\n}\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/xtend/immutable.js\n ** module id = 42\n ** module chunks = 0 1\n **/","'use strict';\n\nexports.__esModule = true;\n\nvar _browser = require('../utils/browser.js');\n\nvar browser = _interopRequireWildcard(_browser);\n\nvar _document = require('global/document');\n\nvar _document2 = _interopRequireDefault(_document);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj['default'] = obj; return newObj; } }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } } /**\n                                                                                                                                                           * @file html-track-element-list.js\n                                                                                                                                                           */\n\n/**\n * The current list of {@link HtmlTrackElement}s.\n */\nvar HtmlTrackElementList = function () {\n\n  /**\n   * Create an instance of this class.\n   *\n   * @param {HtmlTrackElement[]} [tracks=[]]\n   *        A list of `HtmlTrackElement` to instantiate the list with.\n   */\n  function HtmlTrackElementList() {\n    var trackElements = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n\n    _classCallCheck(this, HtmlTrackElementList);\n\n    var list = this; // eslint-disable-line\n\n    if (browser.IS_IE8) {\n      list = _document2['default'].createElement('custom');\n\n      for (var prop in HtmlTrackElementList.prototype) {\n        if (prop !== 'constructor') {\n          list[prop] = HtmlTrackElementList.prototype[prop];\n        }\n      }\n    }\n\n    list.trackElements_ = [];\n\n    /**\n     * @member {number} length\n     *         The current number of `Track`s in the this Trackist.\n     */\n    Object.defineProperty(list, 'length', {\n      get: function get() {\n        return this.trackElements_.length;\n      }\n    });\n\n    for (var i = 0, length = trackElements.length; i < length; i++) {\n      list.addTrackElement_(trackElements[i]);\n    }\n\n    if (browser.IS_IE8) {\n      return list;\n    }\n  }\n\n  /**\n   * Add an {@link HtmlTrackElement} to the `HtmlTrackElementList`\n   *\n   * @param {HtmlTrackElement} trackElement\n   *        The track element to add to the list.\n   *\n   * @private\n   */\n\n\n  HtmlTrackElementList.prototype.addTrackElement_ = function addTrackElement_(trackElement) {\n    var index = this.trackElements_.length;\n\n    if (!('' + index in this)) {\n      Object.defineProperty(this, index, {\n        get: function get() {\n          return this.trackElements_[index];\n        }\n      });\n    }\n\n    // Do not add duplicate elements\n    if (this.trackElements_.indexOf(trackElement) === -1) {\n      this.trackElements_.push(trackElement);\n    }\n  };\n\n  /**\n   * Get an {@link HtmlTrackElement} from the `HtmlTrackElementList` given an\n   * {@link TextTrack}.\n   *\n   * @param {TextTrack} track\n   *        The track associated with a track element.\n   *\n   * @return {HtmlTrackElement|undefined}\n   *         The track element that was found or undefined.\n   *\n   * @private\n   */\n\n\n  HtmlTrackElementList.prototype.getTrackElementByTrack_ = function getTrackElementByTrack_(track) {\n    var trackElement_ = void 0;\n\n    for (var i = 0, length = this.trackElements_.length; i < length; i++) {\n      if (track === this.trackElements_[i].track) {\n        trackElement_ = this.trackElements_[i];\n\n        break;\n      }\n    }\n\n    return trackElement_;\n  };\n\n  /**\n   * Remove a {@link HtmlTrackElement} from the `HtmlTrackElementList`\n   *\n   * @param {HtmlTrackElement} trackElement\n   *        The track element to remove from the list.\n   *\n   * @private\n   */\n\n\n  HtmlTrackElementList.prototype.removeTrackElement_ = function removeTrackElement_(trackElement) {\n    for (var i = 0, length = this.trackElements_.length; i < length; i++) {\n      if (trackElement === this.trackElements_[i]) {\n        this.trackElements_.splice(i, 1);\n\n        break;\n      }\n    }\n  };\n\n  return HtmlTrackElementList;\n}();\n\nexports['default'] = HtmlTrackElementList;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/video.js/es5/tracks/html-track-element-list.js\n ** module id = 43\n ** module chunks = 0 1\n **/","'use strict';\n\nexports.__esModule = true;\n\nvar _trackList = require('./track-list');\n\nvar _trackList2 = _interopRequireDefault(_trackList);\n\nvar _fn = require('../utils/fn.js');\n\nvar Fn = _interopRequireWildcard(_fn);\n\nvar _browser = require('../utils/browser.js');\n\nvar browser = _interopRequireWildcard(_browser);\n\nvar _document = require('global/document');\n\nvar _document2 = _interopRequireDefault(_document);\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj['default'] = obj; return newObj; } }\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /**\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * @file text-track-list.js\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                */\n\n\n/**\n * The current list of {@link TextTrack} for a media file.\n *\n * @see [Spec]{@link https://html.spec.whatwg.org/multipage/embedded-content.html#texttracklist}\n * @extends TrackList\n */\nvar TextTrackList = function (_TrackList) {\n  _inherits(TextTrackList, _TrackList);\n\n  /**\n   * Create an instance of this class.\n   *\n   * @param {TextTrack[]} [tracks=[]]\n   *        A list of `TextTrack` to instantiate the list with.\n   */\n  function TextTrackList() {\n    var _this, _ret;\n\n    var tracks = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n\n    _classCallCheck(this, TextTrackList);\n\n    var list = void 0;\n\n    // IE8 forces us to implement inheritance ourselves\n    // as it does not support Object.defineProperty properly\n    if (browser.IS_IE8) {\n      list = _document2['default'].createElement('custom');\n      for (var prop in _trackList2['default'].prototype) {\n        if (prop !== 'constructor') {\n          list[prop] = _trackList2['default'].prototype[prop];\n        }\n      }\n      for (var _prop in TextTrackList.prototype) {\n        if (_prop !== 'constructor') {\n          list[_prop] = TextTrackList.prototype[_prop];\n        }\n      }\n    }\n\n    list = (_this = _possibleConstructorReturn(this, _TrackList.call(this, tracks, list)), _this);\n    return _ret = list, _possibleConstructorReturn(_this, _ret);\n  }\n\n  /**\n   * Add a {@link TextTrack} to the `TextTrackList`\n   *\n   * @param {TextTrack} track\n   *        The text track to add to the list.\n   *\n   * @fires TrackList#addtrack\n   * @private\n   */\n\n\n  TextTrackList.prototype.addTrack_ = function addTrack_(track) {\n    _TrackList.prototype.addTrack_.call(this, track);\n\n    /**\n     * @listens TextTrack#modechange\n     * @fires TrackList#change\n     */\n    track.addEventListener('modechange', Fn.bind(this, function () {\n      this.trigger('change');\n    }));\n  };\n\n  return TextTrackList;\n}(_trackList2['default']);\n\nexports['default'] = TextTrackList;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/video.js/es5/tracks/text-track-list.js\n ** module id = 44\n ** module chunks = 0 1\n **/","'use strict';\n\nexports.__esModule = true;\n\nvar _eventTarget = require('../event-target');\n\nvar _eventTarget2 = _interopRequireDefault(_eventTarget);\n\nvar _browser = require('../utils/browser.js');\n\nvar browser = _interopRequireWildcard(_browser);\n\nvar _document = require('global/document');\n\nvar _document2 = _interopRequireDefault(_document);\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj['default'] = obj; return newObj; } }\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /**\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * @file track-list.js\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                */\n\n\n/**\n * Common functionaliy between {@link TextTrackList}, {@link AudioTrackList}, and\n * {@link VideoTrackList}\n *\n * @extends EventTarget\n */\nvar TrackList = function (_EventTarget) {\n  _inherits(TrackList, _EventTarget);\n\n  /**\n   * Create an instance of this class\n   *\n   * @param {Track[]} tracks\n   *        A list of tracks to initialize the list with.\n   *\n   * @param {Object} [list]\n   *        The child object with inheritance done manually for ie8.\n   *\n   * @abstract\n   */\n  function TrackList() {\n    var tracks = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n\n    var _ret;\n\n    var list = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n\n    _classCallCheck(this, TrackList);\n\n    var _this = _possibleConstructorReturn(this, _EventTarget.call(this));\n\n    if (!list) {\n      list = _this; // eslint-disable-line\n      if (browser.IS_IE8) {\n        list = _document2['default'].createElement('custom');\n        for (var prop in TrackList.prototype) {\n          if (prop !== 'constructor') {\n            list[prop] = TrackList.prototype[prop];\n          }\n        }\n      }\n    }\n\n    list.tracks_ = [];\n\n    /**\n     * @member {number} length\n     *         The current number of `Track`s in the this Trackist.\n     */\n    Object.defineProperty(list, 'length', {\n      get: function get() {\n        return this.tracks_.length;\n      }\n    });\n\n    for (var i = 0; i < tracks.length; i++) {\n      list.addTrack_(tracks[i]);\n    }\n\n    // must return the object, as for ie8 it will not be this\n    // but a reference to a document object\n    return _ret = list, _possibleConstructorReturn(_this, _ret);\n  }\n\n  /**\n   * Add a {@link Track} to the `TrackList`\n   *\n   * @param {Track} track\n   *        The audio, video, or text track to add to the list.\n   *\n   * @fires TrackList#addtrack\n   * @private\n   */\n\n\n  TrackList.prototype.addTrack_ = function addTrack_(track) {\n    var index = this.tracks_.length;\n\n    if (!('' + index in this)) {\n      Object.defineProperty(this, index, {\n        get: function get() {\n          return this.tracks_[index];\n        }\n      });\n    }\n\n    // Do not add duplicate tracks\n    if (this.tracks_.indexOf(track) === -1) {\n      this.tracks_.push(track);\n      /**\n       * Triggered when a track is added to a track list.\n       *\n       * @event TrackList#addtrack\n       * @type {EventTarget~Event}\n       * @property {Track} track\n       *           A reference to track that was added.\n       */\n      this.trigger({\n        track: track,\n        type: 'addtrack'\n      });\n    }\n  };\n\n  /**\n   * Remove a {@link Track} from the `TrackList`\n   *\n   * @param {Track} track\n   *        The audio, video, or text track to remove from the list.\n   *\n   * @fires TrackList#removetrack\n   * @private\n   */\n\n\n  TrackList.prototype.removeTrack_ = function removeTrack_(rtrack) {\n    var track = void 0;\n\n    for (var i = 0, l = this.length; i < l; i++) {\n      if (this[i] === rtrack) {\n        track = this[i];\n        if (track.off) {\n          track.off();\n        }\n\n        this.tracks_.splice(i, 1);\n\n        break;\n      }\n    }\n\n    if (!track) {\n      return;\n    }\n\n    /**\n     * Triggered when a track is removed from track list.\n     *\n     * @event TrackList#removetrack\n     * @type {EventTarget~Event}\n     * @property {Track} track\n     *           A reference to track that was removed.\n     */\n    this.trigger({\n      track: track,\n      type: 'removetrack'\n    });\n  };\n\n  /**\n   * Get a Track from the TrackList by a tracks id\n   *\n   * @param {String} id - the id of the track to get\n   * @method getTrackById\n   * @return {Track}\n   * @private\n   */\n\n\n  TrackList.prototype.getTrackById = function getTrackById(id) {\n    var result = null;\n\n    for (var i = 0, l = this.length; i < l; i++) {\n      var track = this[i];\n\n      if (track.id === id) {\n        result = track;\n        break;\n      }\n    }\n\n    return result;\n  };\n\n  return TrackList;\n}(_eventTarget2['default']);\n\n/**\n * Triggered when a different track is selected/enabled.\n *\n * @event TrackList#change\n * @type {EventTarget~Event}\n */\n\n/**\n * Events that can be called with on + eventName. See {@link EventHandler}.\n *\n * @property\n * @private\n */\n\n\nTrackList.prototype.allowedEvents_ = {\n  change: 'change',\n  addtrack: 'addtrack',\n  removetrack: 'removetrack'\n};\n\n// emulate attribute EventHandler support to allow for feature detection\nfor (var event in TrackList.prototype.allowedEvents_) {\n  TrackList.prototype['on' + event] = null;\n}\n\nexports['default'] = TrackList;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/video.js/es5/tracks/track-list.js\n ** module id = 45\n ** module chunks = 0 1\n **/","'use strict';\n\nexports.__esModule = true;\n\nvar _trackList = require('./track-list');\n\nvar _trackList2 = _interopRequireDefault(_trackList);\n\nvar _browser = require('../utils/browser.js');\n\nvar browser = _interopRequireWildcard(_browser);\n\nvar _document = require('global/document');\n\nvar _document2 = _interopRequireDefault(_document);\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj['default'] = obj; return newObj; } }\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /**\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * @file video-track-list.js\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                */\n\n\n/**\n * Un-select all other {@link VideoTrack}s that are selected.\n *\n * @param {VideoTrackList} list\n *        list to work on\n *\n * @param {VideoTrack} track\n *        The track to skip\n *\n * @private\n */\nvar disableOthers = function disableOthers(list, track) {\n  for (var i = 0; i < list.length; i++) {\n    if (track.id === list[i].id) {\n      continue;\n    }\n    // another video track is enabled, disable it\n    list[i].selected = false;\n  }\n};\n\n/**\n * The current list of {@link VideoTrack} for a video.\n *\n * @see [Spec]{@link https://html.spec.whatwg.org/multipage/embedded-content.html#videotracklist}\n * @extends TrackList\n */\n\nvar VideoTrackList = function (_TrackList) {\n  _inherits(VideoTrackList, _TrackList);\n\n  /**\n   * Create an instance of this class.\n   *\n   * @param {VideoTrack[]} [tracks=[]]\n   *        A list of `VideoTrack` to instantiate the list with.\n   */\n  function VideoTrackList() {\n    var _this, _ret;\n\n    var tracks = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n\n    _classCallCheck(this, VideoTrackList);\n\n    var list = void 0;\n\n    // make sure only 1 track is enabled\n    // sorted from last index to first index\n    for (var i = tracks.length - 1; i >= 0; i--) {\n      if (tracks[i].selected) {\n        disableOthers(tracks, tracks[i]);\n        break;\n      }\n    }\n\n    // IE8 forces us to implement inheritance ourselves\n    // as it does not support Object.defineProperty properly\n    if (browser.IS_IE8) {\n      list = _document2['default'].createElement('custom');\n      for (var prop in _trackList2['default'].prototype) {\n        if (prop !== 'constructor') {\n          list[prop] = _trackList2['default'].prototype[prop];\n        }\n      }\n      for (var _prop in VideoTrackList.prototype) {\n        if (_prop !== 'constructor') {\n          list[_prop] = VideoTrackList.prototype[_prop];\n        }\n      }\n    }\n\n    list = (_this = _possibleConstructorReturn(this, _TrackList.call(this, tracks, list)), _this);\n    list.changing_ = false;\n\n    /**\n     * @member {number} VideoTrackList#selectedIndex\n     *         The current index of the selected {@link VideoTrack`}.\n     */\n    Object.defineProperty(list, 'selectedIndex', {\n      get: function get() {\n        for (var _i = 0; _i < this.length; _i++) {\n          if (this[_i].selected) {\n            return _i;\n          }\n        }\n        return -1;\n      },\n      set: function set() {}\n    });\n\n    return _ret = list, _possibleConstructorReturn(_this, _ret);\n  }\n\n  /**\n   * Add a {@link VideoTrack} to the `VideoTrackList`.\n   *\n   * @param {VideoTrack} track\n   *        The VideoTrack to add to the list\n   *\n   * @fires TrackList#addtrack\n   * @private\n   */\n\n\n  VideoTrackList.prototype.addTrack_ = function addTrack_(track) {\n    var _this2 = this;\n\n    if (track.selected) {\n      disableOthers(this, track);\n    }\n\n    _TrackList.prototype.addTrack_.call(this, track);\n    // native tracks don't have this\n    if (!track.addEventListener) {\n      return;\n    }\n\n    /**\n     * @listens VideoTrack#selectedchange\n     * @fires TrackList#change\n     */\n    track.addEventListener('selectedchange', function () {\n      if (_this2.changing_) {\n        return;\n      }\n      _this2.changing_ = true;\n      disableOthers(_this2, track);\n      _this2.changing_ = false;\n      _this2.trigger('change');\n    });\n  };\n\n  /**\n   * Add a {@link VideoTrack} to the `VideoTrackList`.\n   *\n   * @param {VideoTrack} track\n   *        The VideoTrack to add to the list\n   *\n   * @fires TrackList#addtrack\n   */\n\n\n  VideoTrackList.prototype.addTrack = function addTrack(track) {\n    this.addTrack_(track);\n  };\n\n  /**\n   * Remove a {@link VideoTrack} to the `VideoTrackList`.\n   *\n   * @param {VideoTrack} track\n   *        The VideoTrack to remove from the list.\n   *\n   * @fires TrackList#removetrack\n   */\n\n\n  VideoTrackList.prototype.removeTrack = function removeTrack(track) {\n    _TrackList.prototype.removeTrack_.call(this, track);\n  };\n\n  return VideoTrackList;\n}(_trackList2['default']);\n\nexports['default'] = VideoTrackList;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/video.js/es5/tracks/video-track-list.js\n ** module id = 46\n ** module chunks = 0 1\n **/","'use strict';\n\nexports.__esModule = true;\n\nvar _trackList = require('./track-list');\n\nvar _trackList2 = _interopRequireDefault(_trackList);\n\nvar _browser = require('../utils/browser.js');\n\nvar browser = _interopRequireWildcard(_browser);\n\nvar _document = require('global/document');\n\nvar _document2 = _interopRequireDefault(_document);\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj['default'] = obj; return newObj; } }\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /**\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * @file audio-track-list.js\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                */\n\n\n/**\n * Anywhere we call this function we diverge from the spec\n * as we only support one enabled audiotrack at a time\n *\n * @param {AudioTrackList} list\n *        list to work on\n *\n * @param {AudioTrack} track\n *        The track to skip\n *\n * @private\n */\nvar disableOthers = function disableOthers(list, track) {\n  for (var i = 0; i < list.length; i++) {\n    if (track.id === list[i].id) {\n      continue;\n    }\n    // another audio track is enabled, disable it\n    list[i].enabled = false;\n  }\n};\n\n/**\n * The current list of {@link AudioTrack} for a media file.\n *\n * @see [Spec]{@link https://html.spec.whatwg.org/multipage/embedded-content.html#audiotracklist}\n * @extends TrackList\n */\n\nvar AudioTrackList = function (_TrackList) {\n  _inherits(AudioTrackList, _TrackList);\n\n  /**\n   * Create an instance of this class.\n   *\n   * @param {AudioTrack[]} [tracks=[]]\n   *        A list of `AudioTrack` to instantiate the list with.\n   */\n  function AudioTrackList() {\n    var _this, _ret;\n\n    var tracks = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n\n    _classCallCheck(this, AudioTrackList);\n\n    var list = void 0;\n\n    // make sure only 1 track is enabled\n    // sorted from last index to first index\n    for (var i = tracks.length - 1; i >= 0; i--) {\n      if (tracks[i].enabled) {\n        disableOthers(tracks, tracks[i]);\n        break;\n      }\n    }\n\n    // IE8 forces us to implement inheritance ourselves\n    // as it does not support Object.defineProperty properly\n    if (browser.IS_IE8) {\n      list = _document2['default'].createElement('custom');\n      for (var prop in _trackList2['default'].prototype) {\n        if (prop !== 'constructor') {\n          list[prop] = _trackList2['default'].prototype[prop];\n        }\n      }\n      for (var _prop in AudioTrackList.prototype) {\n        if (_prop !== 'constructor') {\n          list[_prop] = AudioTrackList.prototype[_prop];\n        }\n      }\n    }\n\n    list = (_this = _possibleConstructorReturn(this, _TrackList.call(this, tracks, list)), _this);\n    list.changing_ = false;\n\n    return _ret = list, _possibleConstructorReturn(_this, _ret);\n  }\n\n  /**\n   * Add an {@link AudioTrack} to the `AudioTrackList`.\n   *\n   * @param {AudioTrack} track\n   *        The AudioTrack to add to the list\n   *\n   * @fires Track#addtrack\n   * @private\n   */\n\n\n  AudioTrackList.prototype.addTrack_ = function addTrack_(track) {\n    var _this2 = this;\n\n    if (track.enabled) {\n      disableOthers(this, track);\n    }\n\n    _TrackList.prototype.addTrack_.call(this, track);\n    // native tracks don't have this\n    if (!track.addEventListener) {\n      return;\n    }\n\n    /**\n     * @listens AudioTrack#enabledchange\n     * @fires TrackList#change\n     */\n    track.addEventListener('enabledchange', function () {\n      // when we are disabling other tracks (since we don't support\n      // more than one track at a time) we will set changing_\n      // to true so that we don't trigger additional change events\n      if (_this2.changing_) {\n        return;\n      }\n      _this2.changing_ = true;\n      disableOthers(_this2, track);\n      _this2.changing_ = false;\n      _this2.trigger('change');\n    });\n  };\n\n  /**\n   * Add an {@link AudioTrack} to the `AudioTrackList`.\n   *\n   * @param {AudioTrack} track\n   *        The AudioTrack to add to the list\n   *\n   * @fires Track#addtrack\n   */\n\n\n  AudioTrackList.prototype.addTrack = function addTrack(track) {\n    this.addTrack_(track);\n  };\n\n  /**\n   * Remove an {@link AudioTrack} from the `AudioTrackList`.\n   *\n   * @param {AudioTrack} track\n   *        The AudioTrack to remove from the list\n   *\n   * @fires Track#removetrack\n   */\n\n\n  AudioTrackList.prototype.removeTrack = function removeTrack(track) {\n    _TrackList.prototype.removeTrack_.call(this, track);\n  };\n\n  return AudioTrackList;\n}(_trackList2['default']);\n\nexports['default'] = AudioTrackList;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/video.js/es5/tracks/audio-track-list.js\n ** module id = 47\n ** module chunks = 0 1\n **/","'use strict';\n\nexports.__esModule = true;\n\nvar _component = require('../component.js');\n\nvar _component2 = _interopRequireDefault(_component);\n\nvar _tech = require('./tech.js');\n\nvar _tech2 = _interopRequireDefault(_tech);\n\nvar _toTitleCase = require('../utils/to-title-case.js');\n\nvar _toTitleCase2 = _interopRequireDefault(_toTitleCase);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /**\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * @file loader.js\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                */\n\n\n/**\n * The `MediaLoader` is the `Component` that decides which playback technology to load\n * when a player is initialized.\n *\n * @extends Component\n */\nvar MediaLoader = function (_Component) {\n  _inherits(MediaLoader, _Component);\n\n  /**\n   * Create an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should attach to.\n   *\n   * @param {Object} [options]\n   *        The key/value stroe of player options.\n   *\n   * @param {Component~ReadyCallback} [ready]\n   *        The function that is run when this component is ready.\n   */\n  function MediaLoader(player, options, ready) {\n    _classCallCheck(this, MediaLoader);\n\n    // If there are no sources when the player is initialized,\n    // load the first supported playback technology.\n\n    var _this = _possibleConstructorReturn(this, _Component.call(this, player, options, ready));\n\n    if (!options.playerOptions.sources || options.playerOptions.sources.length === 0) {\n      for (var i = 0, j = options.playerOptions.techOrder; i < j.length; i++) {\n        var techName = (0, _toTitleCase2['default'])(j[i]);\n        var tech = _tech2['default'].getTech(techName);\n\n        // Support old behavior of techs being registered as components.\n        // Remove once that deprecated behavior is removed.\n        if (!techName) {\n          tech = _component2['default'].getComponent(techName);\n        }\n\n        // Check if the browser supports this technology\n        if (tech && tech.isSupported()) {\n          player.loadTech_(techName);\n          break;\n        }\n      }\n    } else {\n      // Loop through playback technologies (HTML5, Flash) and check for support.\n      // Then load the best source.\n      // A few assumptions here:\n      //   All playback technologies respect preload false.\n      player.src(options.playerOptions.sources);\n    }\n    return _this;\n  }\n\n  return MediaLoader;\n}(_component2['default']);\n\n_component2['default'].registerComponent('MediaLoader', MediaLoader);\nexports['default'] = MediaLoader;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/video.js/es5/tech/loader.js\n ** module id = 48\n ** module chunks = 0 1\n **/","'use strict';\n\nexports.__esModule = true;\n\nvar _tech = require('./tech');\n\nvar _tech2 = _interopRequireDefault(_tech);\n\nvar _dom = require('../utils/dom.js');\n\nvar Dom = _interopRequireWildcard(_dom);\n\nvar _url = require('../utils/url.js');\n\nvar Url = _interopRequireWildcard(_url);\n\nvar _timeRanges = require('../utils/time-ranges.js');\n\nvar _flashRtmp = require('./flash-rtmp');\n\nvar _flashRtmp2 = _interopRequireDefault(_flashRtmp);\n\nvar _component = require('../component');\n\nvar _component2 = _interopRequireDefault(_component);\n\nvar _window = require('global/window');\n\nvar _window2 = _interopRequireDefault(_window);\n\nvar _obj = require('../utils/obj');\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj['default'] = obj; return newObj; } }\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /**\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * @file flash.js\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * VideoJS-SWF - Custom Flash Player with HTML5-ish API\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * https://github.com/zencoder/video-js-swf\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * Not using setupTriggers. Using global onEvent func to distribute events\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                */\n\nvar navigator = _window2['default'].navigator;\n\n/**\n * Flash Media Controller - Wrapper for Flash Media API\n *\n * @mixes FlashRtmpDecorator\n * @mixes Tech~SouceHandlerAdditions\n * @extends Tech\n */\n\nvar Flash = function (_Tech) {\n  _inherits(Flash, _Tech);\n\n  /**\n   * Create an instance of this Tech.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   *\n   * @param {Component~ReadyCallback} ready\n   *        Callback function to call when the `Flash` Tech is ready.\n   */\n  function Flash(options, ready) {\n    _classCallCheck(this, Flash);\n\n    // Set the source when ready\n    var _this = _possibleConstructorReturn(this, _Tech.call(this, options, ready));\n\n    if (options.source) {\n      _this.ready(function () {\n        this.setSource(options.source);\n      }, true);\n    }\n\n    // Having issues with Flash reloading on certain page actions (hide/resize/fullscreen) in certain browsers\n    // This allows resetting the playhead when we catch the reload\n    if (options.startTime) {\n      _this.ready(function () {\n        this.load();\n        this.play();\n        this.currentTime(options.startTime);\n      }, true);\n    }\n\n    // Add global window functions that the swf expects\n    // A 4.x workflow we weren't able to solve for in 5.0\n    // because of the need to hard code these functions\n    // into the swf for security reasons\n    _window2['default'].videojs = _window2['default'].videojs || {};\n    _window2['default'].videojs.Flash = _window2['default'].videojs.Flash || {};\n    _window2['default'].videojs.Flash.onReady = Flash.onReady;\n    _window2['default'].videojs.Flash.onEvent = Flash.onEvent;\n    _window2['default'].videojs.Flash.onError = Flash.onError;\n\n    _this.on('seeked', function () {\n      this.lastSeekTarget_ = undefined;\n    });\n\n    return _this;\n  }\n\n  /**\n   * Create the `Flash` Tech's DOM element.\n   *\n   * @return {Element}\n   *         The element that gets created.\n   */\n\n\n  Flash.prototype.createEl = function createEl() {\n    var options = this.options_;\n\n    // If video.js is hosted locally you should also set the location\n    // for the hosted swf, which should be relative to the page (not video.js)\n    // Otherwise this adds a CDN url.\n    // The CDN also auto-adds a swf URL for that specific version.\n    if (!options.swf) {\n      var ver = '5.1.0';\n\n      options.swf = '//vjs.zencdn.net/swf/' + ver + '/video-js.swf';\n    }\n\n    // Generate ID for swf object\n    var objId = options.techId;\n\n    // Merge default flashvars with ones passed in to init\n    var flashVars = (0, _obj.assign)({\n\n      // SWF Callback Functions\n      readyFunction: 'videojs.Flash.onReady',\n      eventProxyFunction: 'videojs.Flash.onEvent',\n      errorEventProxyFunction: 'videojs.Flash.onError',\n\n      // Player Settings\n      autoplay: options.autoplay,\n      preload: options.preload,\n      loop: options.loop,\n      muted: options.muted\n\n    }, options.flashVars);\n\n    // Merge default parames with ones passed in\n    var params = (0, _obj.assign)({\n      // Opaque is needed to overlay controls, but can affect playback performance\n      wmode: 'opaque',\n      // Using bgcolor prevents a white flash when the object is loading\n      bgcolor: '#000000'\n    }, options.params);\n\n    // Merge default attributes with ones passed in\n    var attributes = (0, _obj.assign)({\n      // Both ID and Name needed or swf to identify itself\n      id: objId,\n      name: objId,\n      'class': 'vjs-tech'\n    }, options.attributes);\n\n    this.el_ = Flash.embed(options.swf, flashVars, params, attributes);\n    this.el_.tech = this;\n\n    return this.el_;\n  };\n\n  /**\n   * Called by {@link Player#play} to play using the `Flash` `Tech`.\n   */\n\n\n  Flash.prototype.play = function play() {\n    if (this.ended()) {\n      this.setCurrentTime(0);\n    }\n    this.el_.vjs_play();\n  };\n\n  /**\n   * Called by {@link Player#pause} to pause using the `Flash` `Tech`.\n   */\n\n\n  Flash.prototype.pause = function pause() {\n    this.el_.vjs_pause();\n  };\n\n  /**\n   * A getter/setter for the `Flash` Tech's source object.\n   * > Note: Please use {@link Flash#setSource}\n   *\n   * @param {Tech~SourceObject} [src]\n   *        The source object you want to set on the `Flash` techs.\n   *\n   * @return {Tech~SourceObject|undefined}\n   *         - The current source object when a source is not passed in.\n   *         - undefined when setting\n   *\n   * @deprecated Since version 5.\n   */\n\n\n  Flash.prototype.src = function src(_src) {\n    if (_src === undefined) {\n      return this.currentSrc();\n    }\n\n    // Setting src through `src` not `setSrc` will be deprecated\n    return this.setSrc(_src);\n  };\n\n  /**\n   * A getter/setter for the `Flash` Tech's source object.\n   *\n   * @param {Tech~SourceObject} [src]\n   *        The source object you want to set on the `Flash` techs.\n   *\n   * @return {Tech~SourceObject|undefined}\n   *         - The current source object when a source is not passed in.\n   *         - undefined when setting\n   */\n\n\n  Flash.prototype.setSrc = function setSrc(src) {\n    var _this2 = this;\n\n    // Make sure source URL is absolute.\n    src = Url.getAbsoluteURL(src);\n    this.el_.vjs_src(src);\n\n    // Currently the SWF doesn't autoplay if you load a source later.\n    // e.g. Load player w/ no source, wait 2s, set src.\n    if (this.autoplay()) {\n      this.setTimeout(function () {\n        return _this2.play();\n      }, 0);\n    }\n  };\n\n  /**\n   * Indicates whether the media is currently seeking to a new position or not.\n   *\n   * @return {boolean}\n   *         - True if seeking to a new position\n   *         - False otherwise\n   */\n\n\n  Flash.prototype.seeking = function seeking() {\n    return this.lastSeekTarget_ !== undefined;\n  };\n\n  /**\n   * Returns the current time in seconds that the media is at in playback.\n   *\n   * @param {number} time\n   *        Current playtime of the media in seconds.\n   */\n\n\n  Flash.prototype.setCurrentTime = function setCurrentTime(time) {\n    var seekable = this.seekable();\n\n    if (seekable.length) {\n      // clamp to the current seekable range\n      time = time > seekable.start(0) ? time : seekable.start(0);\n      time = time < seekable.end(seekable.length - 1) ? time : seekable.end(seekable.length - 1);\n\n      this.lastSeekTarget_ = time;\n      this.trigger('seeking');\n      this.el_.vjs_setProperty('currentTime', time);\n      _Tech.prototype.setCurrentTime.call(this);\n    }\n  };\n\n  /**\n   * Get the current playback time in seconds\n   *\n   * @return {number}\n   *         The current time of playback in seconds.\n   */\n\n\n  Flash.prototype.currentTime = function currentTime() {\n    // when seeking make the reported time keep up with the requested time\n    // by reading the time we're seeking to\n    if (this.seeking()) {\n      return this.lastSeekTarget_ || 0;\n    }\n    return this.el_.vjs_getProperty('currentTime');\n  };\n\n  /**\n   * Get the current source\n   *\n   * @method currentSrc\n   * @return {Tech~SourceObject}\n   *         The current source\n   */\n\n\n  Flash.prototype.currentSrc = function currentSrc() {\n    if (this.currentSource_) {\n      return this.currentSource_.src;\n    }\n    return this.el_.vjs_getProperty('currentSrc');\n  };\n\n  /**\n   * Get the total duration of the current media.\n   *\n   * @return {number}\n   8          The total duration of the current media.\n   */\n\n\n  Flash.prototype.duration = function duration() {\n    if (this.readyState() === 0) {\n      return NaN;\n    }\n    var duration = this.el_.vjs_getProperty('duration');\n\n    return duration >= 0 ? duration : Infinity;\n  };\n\n  /**\n   * Load media into Tech.\n   */\n\n\n  Flash.prototype.load = function load() {\n    this.el_.vjs_load();\n  };\n\n  /**\n   * Get the poster image that was set on the tech.\n   */\n\n\n  Flash.prototype.poster = function poster() {\n    this.el_.vjs_getProperty('poster');\n  };\n\n  /**\n   * Poster images are not handled by the Flash tech so make this is a no-op.\n   */\n\n\n  Flash.prototype.setPoster = function setPoster() {};\n\n  /**\n   * Determine the time ranges that can be seeked to in the media.\n   *\n   * @return {TimeRange}\n   *         Returns the time ranges that can be seeked to.\n   */\n\n\n  Flash.prototype.seekable = function seekable() {\n    var duration = this.duration();\n\n    if (duration === 0) {\n      return (0, _timeRanges.createTimeRange)();\n    }\n    return (0, _timeRanges.createTimeRange)(0, duration);\n  };\n\n  /**\n   * Get and create a `TimeRange` object for buffering.\n   *\n   * @return {TimeRange}\n   *         The time range object that was created.\n   */\n\n\n  Flash.prototype.buffered = function buffered() {\n    var ranges = this.el_.vjs_getProperty('buffered');\n\n    if (ranges.length === 0) {\n      return (0, _timeRanges.createTimeRange)();\n    }\n    return (0, _timeRanges.createTimeRange)(ranges[0][0], ranges[0][1]);\n  };\n\n  /**\n   * Get fullscreen support -\n   *\n   * Flash does not allow fullscreen through javascript\n   * so this always returns false.\n   *\n   * @return {boolean}\n   *         The Flash tech does not support fullscreen, so it will always return false.\n   */\n\n\n  Flash.prototype.supportsFullScreen = function supportsFullScreen() {\n    // Flash does not allow fullscreen through javascript\n    return false;\n  };\n\n  /**\n   * Flash does not allow fullscreen through javascript\n   * so this always returns false.\n   *\n   * @return {boolean}\n   *         The Flash tech does not support fullscreen, so it will always return false.\n   */\n\n\n  Flash.prototype.enterFullScreen = function enterFullScreen() {\n    return false;\n  };\n\n  return Flash;\n}(_tech2['default']);\n\n// Create setters and getters for attributes\n\n\nvar _api = Flash.prototype;\nvar _readWrite = 'rtmpConnection,rtmpStream,preload,defaultPlaybackRate,playbackRate,autoplay,loop,mediaGroup,controller,controls,volume,muted,defaultMuted'.split(',');\nvar _readOnly = 'networkState,readyState,initialTime,startOffsetTime,paused,ended,videoWidth,videoHeight'.split(',');\n\nfunction _createSetter(attr) {\n  var attrUpper = attr.charAt(0).toUpperCase() + attr.slice(1);\n\n  _api['set' + attrUpper] = function (val) {\n    return this.el_.vjs_setProperty(attr, val);\n  };\n}\n\nfunction _createGetter(attr) {\n  _api[attr] = function () {\n    return this.el_.vjs_getProperty(attr);\n  };\n}\n\n// Create getter and setters for all read/write attributes\nfor (var i = 0; i < _readWrite.length; i++) {\n  _createGetter(_readWrite[i]);\n  _createSetter(_readWrite[i]);\n}\n\n// Create getters for read-only attributes\nfor (var _i = 0; _i < _readOnly.length; _i++) {\n  _createGetter(_readOnly[_i]);\n}\n\n/** ------------------------------ Getters ------------------------------ **/\n/**\n * Get the value of `rtmpConnection` from the swf.\n *\n * @method Flash.prototype.rtmpConnection\n * @return {string}\n *         The current value of `rtmpConnection` on the swf.\n */\n\n/**\n * Get the value of `rtmpStream` from the swf.\n *\n * @method Flash.prototype.rtmpStream\n * @return {string}\n *         The current value of `rtmpStream` on the swf.\n */\n\n/**\n * Get the value of `preload` from the swf. `preload` indicates\n * what should download before the media is interacted with. It can have the following\n * values:\n * - none: nothing should be downloaded\n * - metadata: poster and the first few frames of the media may be downloaded to get\n *   media dimensions and other metadata\n * - auto: allow the media and metadata for the media to be downloaded before\n *    interaction\n *\n * @method Flash.prototype.preload\n * @return {string}\n *         The value of `preload` from the swf. Will be 'none', 'metadata',\n *         or 'auto'.\n */\n\n/**\n * Get the value of `defaultPlaybackRate` from the swf.\n *\n * @method Flash.prototype.defaultPlaybackRate\n * @return {number}\n *         The current value of `defaultPlaybackRate` on the swf.\n */\n\n/**\n * Get the value of `playbackRate` from the swf. `playbackRate` indicates\n * the rate at which the media is currently playing back. Examples:\n *   - if playbackRate is set to 2, media will play twice as fast.\n *   - if playbackRate is set to 0.5, media will play half as fast.\n *\n * @method Flash.prototype.playbackRate\n * @return {number}\n *         The value of `playbackRate` from the swf. A number indicating\n *         the current playback speed of the media, where 1 is normal speed.\n */\n\n/**\n * Get the value of `autoplay` from the swf. `autoplay` indicates\n * that the media should start to play as soon as the page is ready.\n *\n * @method Flash.prototype.autoplay\n * @return {boolean}\n *         - The value of `autoplay` from the swf.\n *         - True indicates that the media ashould start as soon as the page loads.\n *         - False indicates that the media should not start as soon as the page loads.\n */\n\n/**\n * Get the value of `loop` from the swf. `loop` indicates\n * that the media should return to the start of the media and continue playing once\n * it reaches the end.\n *\n * @method Flash.prototype.loop\n * @return {boolean}\n *         - The value of `loop` from the swf.\n *         - True indicates that playback should seek back to start once\n *           the end of a media is reached.\n *         - False indicates that playback should not loop back to the start when the\n *           end of the media is reached.\n */\n\n/**\n * Get the value of `mediaGroup` from the swf.\n *\n * @method Flash.prototype.mediaGroup\n * @return {string}\n *         The current value of `mediaGroup` on the swf.\n */\n\n/**\n * Get the value of `controller` from the swf.\n *\n * @method Flash.prototype.controller\n * @return {string}\n *         The current value of `controller` on the swf.\n */\n\n/**\n * Get the value of `controls` from the swf. `controls` indicates\n * whether the native flash controls should be shown or hidden.\n *\n * @method Html5.prototype.controls\n * @return {boolean}\n *         - The value of `controls` from the swf.\n *         - True indicates that native controls should be showing.\n *         - False indicates that native controls should be hidden.\n */\n\n/**\n * Get the value of the `volume` from the swf. `volume` indicates the current\n * audio level as a percentage in decimal form. This means that 1 is 100%, 0.5 is 50%, and\n * so on.\n *\n * @method Flash.prototype.volume\n * @return {number}\n *         The volume percent as a decimal. Value will be between 0-1.\n */\n\n/**\n * Get the value of the `muted` from the swf. `muted` indicates the current\n * audio level should be silent.\n *\n * @method Flash.prototype.muted\n * @return {boolean}\n *         - True if the audio should be set to silent\n *         - False otherwise\n */\n\n/**\n * Get the value of `defaultMuted` from the swf. `defaultMuted` indicates\n * whether the media should start muted or not. Only changes the default state of the\n * media. `muted` and `defaultMuted` can have different values. `muted` indicates the\n * current state.\n *\n * @method Flash.prototype.defaultMuted\n * @return {boolean}\n *         - The value of `defaultMuted` from the swf.\n *         - True indicates that the media should start muted.\n *         - False indicates that the media should not start muted.\n */\n\n/**\n * Get the value of `networkState` from the swf. `networkState` indicates\n * the current network state. It returns an enumeration from the following list:\n * - 0: NETWORK_EMPTY\n * - 1: NEWORK_IDLE\n * - 2: NETWORK_LOADING\n * - 3: NETWORK_NO_SOURCE\n *\n * @method Flash.prototype.networkState\n * @return {number}\n *         The value of `networkState` from the swf. This will be a number\n *         from the list in the description.\n */\n\n/**\n * Get the value of `readyState` from the swf. `readyState` indicates\n * the current state of the media element. It returns an enumeration from the\n * following list:\n * - 0: HAVE_NOTHING\n * - 1: HAVE_METADATA\n * - 2: HAVE_CURRENT_DATA\n * - 3: HAVE_FUTURE_DATA\n * - 4: HAVE_ENOUGH_DATA\n *\n * @method Flash.prototype.readyState\n * @return {number}\n *         The value of `readyState` from the swf. This will be a number\n *         from the list in the description.\n */\n\n/**\n * Get the value of `readyState` from the swf. `readyState` indicates\n * the current state of the media element. It returns an enumeration from the\n * following list:\n * - 0: HAVE_NOTHING\n * - 1: HAVE_METADATA\n * - 2: HAVE_CURRENT_DATA\n * - 3: HAVE_FUTURE_DATA\n * - 4: HAVE_ENOUGH_DATA\n *\n * @method Flash.prototype.readyState\n * @return {number}\n *         The value of `readyState` from the swf. This will be a number\n *         from the list in the description.\n */\n\n/**\n * Get the value of `initialTime` from the swf.\n *\n * @method Flash.prototype.initialTime\n * @return {number}\n *         The `initialTime` proprety on the swf.\n */\n\n/**\n * Get the value of `startOffsetTime` from the swf.\n *\n * @method Flash.prototype.startOffsetTime\n * @return {number}\n *         The `startOffsetTime` proprety on the swf.\n */\n\n/**\n * Get the value of `paused` from the swf. `paused` indicates whether the swf\n * is current paused or not.\n *\n * @method Flash.prototype.paused\n * @return {boolean}\n *         The value of `paused` from the swf.\n */\n\n/**\n * Get the value of `ended` from the swf. `ended` indicates whether\n * the media has reached the end or not.\n *\n * @method Flash.prototype.ended\n * @return {boolean}\n *         - True indicates that the media has ended.\n *         - False indicates that the media has not ended.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-ended}\n */\n\n/**\n * Get the value of `videoWidth` from the swf. `videoWidth` indicates\n * the current width of the media in css pixels.\n *\n * @method Flash.prototype.videoWidth\n * @return {number}\n *         The value of `videoWidth` from the swf. This will be a number\n *         in css pixels.\n */\n\n/**\n * Get the value of `videoHeight` from the swf. `videoHeigth` indicates\n * the current height of the media in css pixels.\n *\n * @method Flassh.prototype.videoHeight\n * @return {number}\n *         The value of `videoHeight` from the swf. This will be a number\n *         in css pixels.\n */\n/** ------------------------------ Setters ------------------------------ **/\n\n/**\n * Set the value of `rtmpConnection` on the swf.\n *\n * @method Flash.prototype.setRtmpConnection\n * @param {string} rtmpConnection\n *        New value to set the `rtmpConnection` property to.\n */\n\n/**\n * Set the value of `rtmpStream` on the swf.\n *\n * @method Flash.prototype.setRtmpStream\n * @param {string} rtmpStream\n *        New value to set the `rtmpStream` property to.\n */\n\n/**\n * Set the value of `preload` on the swf. `preload` indicates\n * what should download before the media is interacted with. It can have the following\n * values:\n * - none: nothing should be downloaded\n * - metadata: poster and the first few frames of the media may be downloaded to get\n *   media dimensions and other metadata\n * - auto: allow the media and metadata for the media to be downloaded before\n *    interaction\n *\n * @method Flash.prototype.setPreload\n * @param {string} preload\n *        The value of `preload` to set on the swf. Should be 'none', 'metadata',\n *        or 'auto'.\n */\n\n/**\n * Set the value of `defaultPlaybackRate` on the swf.\n *\n * @method Flash.prototype.setDefaultPlaybackRate\n * @param {number} defaultPlaybackRate\n *        New value to set the `defaultPlaybackRate` property to.\n */\n\n/**\n * Set the value of `playbackRate` on the swf. `playbackRate` indicates\n * the rate at which the media is currently playing back. Examples:\n *   - if playbackRate is set to 2, media will play twice as fast.\n *   - if playbackRate is set to 0.5, media will play half as fast.\n *\n * @method Flash.prototype.setPlaybackRate\n * @param {number} playbackRate\n *        New value of `playbackRate` on the swf. A number indicating\n *        the current playback speed of the media, where 1 is normal speed.\n */\n\n/**\n * Set the value of `autoplay` on the swf. `autoplay` indicates\n * that the media should start to play as soon as the page is ready.\n *\n * @method Flash.prototype.setAutoplay\n * @param {boolean} autoplay\n *        - The value of `autoplay` from the swf.\n *        - True indicates that the media ashould start as soon as the page loads.\n *        - False indicates that the media should not start as soon as the page loads.\n */\n\n/**\n * Set the value of `loop` on the swf. `loop` indicates\n * that the media should return to the start of the media and continue playing once\n * it reaches the end.\n *\n * @method Flash.prototype.setLoop\n * @param {boolean} loop\n *        - True indicates that playback should seek back to start once\n *          the end of a media is reached.\n *        - False indicates that playback should not loop back to the start when the\n *          end of the media is reached.\n */\n\n/**\n * Set the value of `mediaGroup` on the swf.\n *\n * @method Flash.prototype.setMediaGroup\n * @param {string} mediaGroup\n *        New value of `mediaGroup` to set on the swf.\n */\n\n/**\n * Set the value of `controller` on the swf.\n *\n * @method Flash.prototype.setController\n * @param {string} controller\n *        New value the current value of `controller` on the swf.\n */\n\n/**\n * Get the value of `controls` from the swf. `controls` indicates\n * whether the native flash controls should be shown or hidden.\n *\n * @method Flash.prototype.controls\n * @return {boolean}\n *         - The value of `controls` from the swf.\n *         - True indicates that native controls should be showing.\n *         - False indicates that native controls should be hidden.\n */\n\n/**\n * Set the value of the `volume` on the swf. `volume` indicates the current\n * audio level as a percentage in decimal form. This means that 1 is 100%, 0.5 is 50%, and\n * so on.\n *\n * @method Flash.prototype.setVolume\n * @param {number} percentAsDecimal\n *         The volume percent as a decimal. Value will be between 0-1.\n */\n\n/**\n * Set the value of the `muted` on the swf. `muted` indicates that the current\n * audio level should be silent.\n *\n * @method Flash.prototype.setMuted\n * @param {boolean} muted\n *         - True if the audio should be set to silent\n *         - False otherwise\n */\n\n/**\n * Set the value of `defaultMuted` on the swf. `defaultMuted` indicates\n * whether the media should start muted or not. Only changes the default state of the\n * media. `muted` and `defaultMuted` can have different values. `muted` indicates the\n * current state.\n *\n * @method Flash.prototype.setDefaultMuted\n * @param {boolean} defaultMuted\n *         - True indicates that the media should start muted.\n *         - False indicates that the media should not start muted.\n */\n\n/* Flash Support Testing -------------------------------------------------------- */\n\n/**\n * Check if the Flash tech is currently supported.\n *\n * @return {boolean}\n *          - True if the flash tech is supported.\n *          - False otherwise.\n */\nFlash.isSupported = function () {\n  return Flash.version()[0] >= 10;\n  // return swfobject.hasFlashPlayerVersion('10');\n};\n\n// Add Source Handler pattern functions to this tech\n_tech2['default'].withSourceHandlers(Flash);\n\n/*\n * Native source handler for flash,  simply passes the source to the swf element.\n *\n * @property {Tech~SourceObject} source\n *           The source object\n *\n * @property {Flash} tech\n *           The instance of the Flash tech\n */\nFlash.nativeSourceHandler = {};\n\n/**\n * Check if the Flash can play the given mime type.\n *\n * @param {string} type\n *        The mimetype to check\n *\n * @return {string}\n *         'maybe', or '' (empty string)\n */\nFlash.nativeSourceHandler.canPlayType = function (type) {\n  if (type in Flash.formats) {\n    return 'maybe';\n  }\n\n  return '';\n};\n\n/**\n * Check if the media element can handle a source natively.\n *\n * @param {Tech~SourceObject} source\n *         The source object\n *\n * @param {Object} [options]\n *         Options to be passed to the tech.\n *\n * @return {string}\n *         'maybe', or '' (empty string).\n */\nFlash.nativeSourceHandler.canHandleSource = function (source, options) {\n  var type = void 0;\n\n  function guessMimeType(src) {\n    var ext = Url.getFileExtension(src);\n\n    if (ext) {\n      return 'video/' + ext;\n    }\n    return '';\n  }\n\n  if (!source.type) {\n    type = guessMimeType(source.src);\n  } else {\n    // Strip code information from the type because we don't get that specific\n    type = source.type.replace(/;.*/, '').toLowerCase();\n  }\n\n  return Flash.nativeSourceHandler.canPlayType(type);\n};\n\n/**\n * Pass the source to the swf.\n *\n * @param {Tech~SourceObject} source\n *        The source object\n *\n * @param {Flash} tech\n *        The instance of the Flash tech\n *\n * @param {Object} [options]\n *        The options to pass to the source\n */\nFlash.nativeSourceHandler.handleSource = function (source, tech, options) {\n  tech.setSrc(source.src);\n};\n\n/**\n * noop for native source handler dispose, as cleanup will happen automatically.\n */\nFlash.nativeSourceHandler.dispose = function () {};\n\n// Register the native source handler\nFlash.registerSourceHandler(Flash.nativeSourceHandler);\n\n/**\n * Flash supported mime types.\n *\n * @constant {Object}\n */\nFlash.formats = {\n  'video/flv': 'FLV',\n  'video/x-flv': 'FLV',\n  'video/mp4': 'MP4',\n  'video/m4v': 'MP4'\n};\n\n/**\n * Called when the the swf is \"ready\", and makes sure that the swf is really\n * ready using {@link Flash#checkReady}\n */\nFlash.onReady = function (currSwf) {\n  var el = Dom.getEl(currSwf);\n  var tech = el && el.tech;\n\n  // if there is no el then the tech has been disposed\n  // and the tech element was removed from the player div\n  if (tech && tech.el()) {\n    // check that the flash object is really ready\n    Flash.checkReady(tech);\n  }\n};\n\n/**\n * The SWF isn't always ready when it says it is. Sometimes the API functions still\n * need to be added to the object. If it's not ready, we set a timeout to check again\n * shortly.\n *\n * @param {Flash} tech\n *        The instance of the flash tech to check.\n */\nFlash.checkReady = function (tech) {\n  // stop worrying if the tech has been disposed\n  if (!tech.el()) {\n    return;\n  }\n\n  // check if API property exists\n  if (tech.el().vjs_getProperty) {\n    // tell tech it's ready\n    tech.triggerReady();\n  } else {\n    // wait longer\n    this.setTimeout(function () {\n      Flash.checkReady(tech);\n    }, 50);\n  }\n};\n\n/**\n * Trigger events from the swf on the Flash Tech.\n *\n * @param {number} swfID\n *        The id of the swf that had the event\n *\n * @param {string} eventName\n *        The name of the event to trigger\n */\nFlash.onEvent = function (swfID, eventName) {\n  var tech = Dom.getEl(swfID).tech;\n  var args = Array.prototype.slice.call(arguments, 2);\n\n  // dispatch Flash events asynchronously for two reasons:\n  // - Flash swallows any exceptions generated by javascript it\n  //   invokes\n  // - Flash is suspended until the javascript returns which may cause\n  //   playback performance issues\n  tech.setTimeout(function () {\n    tech.trigger(eventName, args);\n  }, 1);\n};\n\n/**\n * Log errors from the swf on the Flash tech.\n *\n * @param {number} swfID\n *        The id of the swf that had an error.\n *\n * @param {string} The error string\n *        The error to set on the Flash Tech.\n *\n * @return {MediaError|undefined}\n *          - Returns a MediaError when err is 'srcnotfound'\n *          - Returns undefined otherwise.\n */\nFlash.onError = function (swfID, err) {\n  var tech = Dom.getEl(swfID).tech;\n\n  // trigger MEDIA_ERR_SRC_NOT_SUPPORTED\n  if (err === 'srcnotfound') {\n    return tech.error(4);\n  }\n\n  // trigger a custom error\n  tech.error('FLASH: ' + err);\n};\n\n/**\n * Get the current version of Flash that is in use on the page.\n *\n * @return {Array}\n *          an array of versions that are available.\n */\nFlash.version = function () {\n  var version = '0,0,0';\n\n  // IE\n  try {\n    version = new _window2['default'].ActiveXObject('ShockwaveFlash.ShockwaveFlash').GetVariable('$version').replace(/\\D+/g, ',').match(/^,?(.+),?$/)[1];\n\n    // other browsers\n  } catch (e) {\n    try {\n      if (navigator.mimeTypes['application/x-shockwave-flash'].enabledPlugin) {\n        version = (navigator.plugins['Shockwave Flash 2.0'] || navigator.plugins['Shockwave Flash']).description.replace(/\\D+/g, ',').match(/^,?(.+),?$/)[1];\n      }\n    } catch (err) {\n      // satisfy linter\n    }\n  }\n  return version.split(',');\n};\n\n/**\n * Only use for non-iframe embeds.\n *\n * @param {Object} swf\n *        The videojs-swf object.\n *\n * @param {Object} flashVars\n *        Names and values to use as flash option variables.\n *\n * @param {Object} params\n *        Style parameters to set on the object.\n *\n * @param {Object} attributes\n *        Attributes to set on the element.\n *\n * @return {Element}\n *          The embeded Flash DOM element.\n */\nFlash.embed = function (swf, flashVars, params, attributes) {\n  var code = Flash.getEmbedCode(swf, flashVars, params, attributes);\n\n  // Get element by embedding code and retrieving created element\n  var obj = Dom.createEl('div', { innerHTML: code }).childNodes[0];\n\n  return obj;\n};\n\n/**\n * Only use for non-iframe embeds.\n *\n * @param {Object} swf\n *        The videojs-swf object.\n *\n * @param {Object} flashVars\n *        Names and values to use as flash option variables.\n *\n * @param {Object} params\n *        Style parameters to set on the object.\n *\n * @param {Object} attributes\n *        Attributes to set on the element.\n *\n * @return {Element}\n *          The embeded Flash DOM element.\n */\nFlash.getEmbedCode = function (swf, flashVars, params, attributes) {\n  var objTag = '<object type=\"application/x-shockwave-flash\" ';\n  var flashVarsString = '';\n  var paramsString = '';\n  var attrsString = '';\n\n  // Convert flash vars to string\n  if (flashVars) {\n    Object.getOwnPropertyNames(flashVars).forEach(function (key) {\n      flashVarsString += key + '=' + flashVars[key] + '&amp;';\n    });\n  }\n\n  // Add swf, flashVars, and other default params\n  params = (0, _obj.assign)({\n    movie: swf,\n    flashvars: flashVarsString,\n    // Required to talk to swf\n    allowScriptAccess: 'always',\n    // All should be default, but having security issues.\n    allowNetworking: 'all'\n  }, params);\n\n  // Create param tags string\n  Object.getOwnPropertyNames(params).forEach(function (key) {\n    paramsString += '<param name=\"' + key + '\" value=\"' + params[key] + '\" />';\n  });\n\n  attributes = (0, _obj.assign)({\n    // Add swf to attributes (need both for IE and Others to work)\n    data: swf,\n\n    // Default to 100% width/height\n    width: '100%',\n    height: '100%'\n\n  }, attributes);\n\n  // Create Attributes string\n  Object.getOwnPropertyNames(attributes).forEach(function (key) {\n    attrsString += key + '=\"' + attributes[key] + '\" ';\n  });\n\n  return '' + objTag + attrsString + '>' + paramsString + '</object>';\n};\n\n// Run Flash through the RTMP decorator\n(0, _flashRtmp2['default'])(Flash);\n\n_component2['default'].registerComponent('Flash', Flash);\n_tech2['default'].registerTech('Flash', Flash);\nexports['default'] = Flash;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/video.js/es5/tech/flash.js\n ** module id = 49\n ** module chunks = 0 1\n **/","'use strict';\n\nexports.__esModule = true;\n/**\n * @file flash-rtmp.js\n * @module flash-rtmp\n */\n\n/**\n * Add RTMP properties to the {@link Flash} Tech.\n *\n * @param {Flash} Flash\n *        The flash tech class.\n *\n * @mixin FlashRtmpDecorator\n */\nfunction FlashRtmpDecorator(Flash) {\n  Flash.streamingFormats = {\n    'rtmp/mp4': 'MP4',\n    'rtmp/flv': 'FLV'\n  };\n\n  /**\n   * Join connection and stream with an ampersand.\n   *\n   * @param {string} connection\n   *        The connection string.\n   *\n   * @param {string} stream\n   *        The stream string.\n   */\n  Flash.streamFromParts = function (connection, stream) {\n    return connection + '&' + stream;\n  };\n\n  /**\n   * The flash parts object that contains connection and stream info.\n   *\n   * @typedef {Object} Flash~PartsObject\n   *\n   * @property {string} connection\n   *           The connection string of a source, defaults to an empty string.\n   *\n   * @property {string} stream\n   *           The stream string of the source, defaults to an empty string.\n   */\n\n  /**\n   * Convert a source url into a stream and connection parts.\n   *\n   * @param {string} src\n   *        the source url\n   *\n   * @return {Flash~PartsObject}\n   *         The parts object that contains a connection and a stream\n   */\n  Flash.streamToParts = function (src) {\n    var parts = {\n      connection: '',\n      stream: ''\n    };\n\n    if (!src) {\n      return parts;\n    }\n\n    // Look for the normal URL separator we expect, '&'.\n    // If found, we split the URL into two pieces around the\n    // first '&'.\n    var connEnd = src.search(/&(?!\\w+=)/);\n    var streamBegin = void 0;\n\n    if (connEnd !== -1) {\n      streamBegin = connEnd + 1;\n    } else {\n      // If there's not a '&', we use the last '/' as the delimiter.\n      connEnd = streamBegin = src.lastIndexOf('/') + 1;\n      if (connEnd === 0) {\n        // really, there's not a '/'?\n        connEnd = streamBegin = src.length;\n      }\n    }\n\n    parts.connection = src.substring(0, connEnd);\n    parts.stream = src.substring(streamBegin, src.length);\n\n    return parts;\n  };\n\n  /**\n   * Check if the source type is a streaming type.\n   *\n   * @param {string} srcType\n   *        The mime type to check.\n   *\n   * @return {boolean}\n   *          - True if the source type is a streaming type.\n   *          - False if the source type is not a streaming type.\n   */\n  Flash.isStreamingType = function (srcType) {\n    return srcType in Flash.streamingFormats;\n  };\n\n  // RTMP has four variations, any string starting\n  // with one of these protocols should be valid\n\n  /**\n   * Regular expression used to check if the source is an rtmp source.\n   *\n   * @property\n   * @type {RegExp}\n   */\n  Flash.RTMP_RE = /^rtmp[set]?:\\/\\//i;\n\n  /**\n   * Check if the source itself is a streaming type.\n   *\n   * @param {string} src\n   *        The url to the source.\n   *\n   * @return {boolean}\n   *          - True if the source url indicates that the source is streaming.\n   *          - False if the shource url indicates that the source url is not streaming.\n   */\n  Flash.isStreamingSrc = function (src) {\n    return Flash.RTMP_RE.test(src);\n  };\n\n  /**\n   * A source handler for RTMP urls\n   * @type {Object}\n   */\n  Flash.rtmpSourceHandler = {};\n\n  /**\n   * Check if Flash can play the given mime type.\n   *\n   * @param {string} type\n   *        The mime type to check\n   *\n   * @return {string}\n   *         'maybe', or '' (empty string)\n   */\n  Flash.rtmpSourceHandler.canPlayType = function (type) {\n    if (Flash.isStreamingType(type)) {\n      return 'maybe';\n    }\n\n    return '';\n  };\n\n  /**\n   * Check if Flash can handle the source natively\n   *\n   * @param {Object} source\n   *        The source object\n   *\n   * @param {Object} [options]\n   *        The options passed to the tech\n   *\n   * @return {string}\n   *         'maybe', or '' (empty string)\n   */\n  Flash.rtmpSourceHandler.canHandleSource = function (source, options) {\n    var can = Flash.rtmpSourceHandler.canPlayType(source.type);\n\n    if (can) {\n      return can;\n    }\n\n    if (Flash.isStreamingSrc(source.src)) {\n      return 'maybe';\n    }\n\n    return '';\n  };\n\n  /**\n   * Pass the source to the flash object.\n   *\n   * @param {Object} source\n   *        The source object\n   *\n   * @param {Flash} tech\n   *        The instance of the Flash tech\n   *\n   * @param {Object} [options]\n   *        The options to pass to the source\n   */\n  Flash.rtmpSourceHandler.handleSource = function (source, tech, options) {\n    var srcParts = Flash.streamToParts(source.src);\n\n    tech.setRtmpConnection(srcParts.connection);\n    tech.setRtmpStream(srcParts.stream);\n  };\n\n  // Register the native source handler\n  Flash.registerSourceHandler(Flash.rtmpSourceHandler);\n\n  return Flash;\n}\n\nexports['default'] = FlashRtmpDecorator;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/video.js/es5/tech/flash-rtmp.js\n ** module id = 50\n ** module chunks = 0 1\n **/","'use strict';\n\nexports.__esModule = true;\n\nvar _clickableComponent = require('./clickable-component.js');\n\nvar _clickableComponent2 = _interopRequireDefault(_clickableComponent);\n\nvar _component = require('./component.js');\n\nvar _component2 = _interopRequireDefault(_component);\n\nvar _fn = require('./utils/fn.js');\n\nvar Fn = _interopRequireWildcard(_fn);\n\nvar _dom = require('./utils/dom.js');\n\nvar Dom = _interopRequireWildcard(_dom);\n\nvar _browser = require('./utils/browser.js');\n\nvar browser = _interopRequireWildcard(_browser);\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj['default'] = obj; return newObj; } }\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /**\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * @file poster-image.js\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                */\n\n\n/**\n * A `ClickableComponent` that handles showing the poster image for the player.\n *\n * @extends ClickableComponent\n */\nvar PosterImage = function (_ClickableComponent) {\n  _inherits(PosterImage, _ClickableComponent);\n\n  /**\n   * Create an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should attach to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function PosterImage(player, options) {\n    _classCallCheck(this, PosterImage);\n\n    var _this = _possibleConstructorReturn(this, _ClickableComponent.call(this, player, options));\n\n    _this.update();\n    player.on('posterchange', Fn.bind(_this, _this.update));\n    return _this;\n  }\n\n  /**\n   * Clean up and dispose of the `PosterImage`.\n   */\n\n\n  PosterImage.prototype.dispose = function dispose() {\n    this.player().off('posterchange', this.update);\n    _ClickableComponent.prototype.dispose.call(this);\n  };\n\n  /**\n   * Create the `PosterImage`s DOM element.\n   *\n   * @return {Element}\n   *         The element that gets created.\n   */\n\n\n  PosterImage.prototype.createEl = function createEl() {\n    var el = Dom.createEl('div', {\n      className: 'vjs-poster',\n\n      // Don't want poster to be tabbable.\n      tabIndex: -1\n    });\n\n    // To ensure the poster image resizes while maintaining its original aspect\n    // ratio, use a div with `background-size` when available. For browsers that\n    // do not support `background-size` (e.g. IE8), fall back on using a regular\n    // img element.\n    if (!browser.BACKGROUND_SIZE_SUPPORTED) {\n      this.fallbackImg_ = Dom.createEl('img');\n      el.appendChild(this.fallbackImg_);\n    }\n\n    return el;\n  };\n\n  /**\n   * An {@link EventTarget~EventListener} for {@link Player#posterchange} events.\n   *\n   * @listens Player#posterchange\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `Player#posterchange` event that triggered this function.\n   */\n\n\n  PosterImage.prototype.update = function update(event) {\n    var url = this.player().poster();\n\n    this.setSrc(url);\n\n    // If there's no poster source we should display:none on this component\n    // so it's not still clickable or right-clickable\n    if (url) {\n      this.show();\n    } else {\n      this.hide();\n    }\n  };\n\n  /**\n   * Set the source of the `PosterImage` depending on the display method.\n   *\n   * @param {String} url\n   *        The URL to the source for the `PosterImage`.\n   */\n\n\n  PosterImage.prototype.setSrc = function setSrc(url) {\n    if (this.fallbackImg_) {\n      this.fallbackImg_.src = url;\n    } else {\n      var backgroundImage = '';\n\n      // Any falsey values should stay as an empty string, otherwise\n      // this will throw an extra error\n      if (url) {\n        backgroundImage = 'url(\"' + url + '\")';\n      }\n\n      this.el_.style.backgroundImage = backgroundImage;\n    }\n  };\n\n  /**\n   * An {@link EventTarget~EventListener} for clicks on the `PosterImage`. See\n   * {@link ClickableComponent#handleClick} for instances where this will be triggered.\n   *\n   * @listens tap\n   * @listens click\n   * @listens keydown\n   *\n   * @param {EventTarget~Event} event\n   +        The `click`, `tap` or `keydown` event that caused this function to be called.\n   */\n\n\n  PosterImage.prototype.handleClick = function handleClick(event) {\n    // We don't want a click to trigger playback when controls are disabled\n    // but CSS should be hiding the poster to prevent that from happening\n    if (this.player_.paused()) {\n      this.player_.play();\n    } else {\n      this.player_.pause();\n    }\n  };\n\n  return PosterImage;\n}(_clickableComponent2['default']);\n\n_component2['default'].registerComponent('PosterImage', PosterImage);\nexports['default'] = PosterImage;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/video.js/es5/poster-image.js\n ** module id = 51\n ** module chunks = 0 1\n **/","'use strict';\n\nexports.__esModule = true;\n\nvar _component = require('./component');\n\nvar _component2 = _interopRequireDefault(_component);\n\nvar _dom = require('./utils/dom.js');\n\nvar Dom = _interopRequireWildcard(_dom);\n\nvar _events = require('./utils/events.js');\n\nvar Events = _interopRequireWildcard(_events);\n\nvar _fn = require('./utils/fn.js');\n\nvar Fn = _interopRequireWildcard(_fn);\n\nvar _log = require('./utils/log.js');\n\nvar _log2 = _interopRequireDefault(_log);\n\nvar _document = require('global/document');\n\nvar _document2 = _interopRequireDefault(_document);\n\nvar _obj = require('./utils/obj');\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj['default'] = obj; return newObj; } }\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /**\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * @file button.js\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                */\n\n\n/**\n * Clickable Component which is clickable or keyboard actionable,\n * but is not a native HTML button.\n *\n * @extends Component\n */\nvar ClickableComponent = function (_Component) {\n  _inherits(ClickableComponent, _Component);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param  {Player} player\n   *         The `Player` that this class should be attached to.\n   *\n   * @param  {Object} [options]\n   *         The key/value store of player options.\n   */\n  function ClickableComponent(player, options) {\n    _classCallCheck(this, ClickableComponent);\n\n    var _this = _possibleConstructorReturn(this, _Component.call(this, player, options));\n\n    _this.emitTapEvents();\n\n    _this.enable();\n    return _this;\n  }\n\n  /**\n   * Create the `Component`s DOM element.\n   *\n   * @param {string} [tag=div]\n   *        The element's node type.\n   *\n   * @param {Object} [props={}]\n   *        An object of properties that should be set on the element.\n   *\n   * @param {Object} [attributes={}]\n   *        An object of attributes that should be set on the element.\n   *\n   * @return {Element}\n   *         The element that gets created.\n   */\n\n\n  ClickableComponent.prototype.createEl = function createEl() {\n    var tag = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'div';\n    var props = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    var attributes = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n\n    props = (0, _obj.assign)({\n      className: this.buildCSSClass(),\n      tabIndex: 0\n    }, props);\n\n    if (tag === 'button') {\n      _log2['default'].error('Creating a ClickableComponent with an HTML element of ' + tag + ' is not supported; use a Button instead.');\n    }\n\n    // Add ARIA attributes for clickable element which is not a native HTML button\n    attributes = (0, _obj.assign)({\n      'role': 'button',\n\n      // let the screen reader user know that the text of the element may change\n      'aria-live': 'polite'\n    }, attributes);\n\n    this.tabIndex_ = props.tabIndex;\n\n    var el = _Component.prototype.createEl.call(this, tag, props, attributes);\n\n    this.createControlTextEl(el);\n\n    return el;\n  };\n\n  /**\n   * Create a control text element on this `Component`\n   *\n   * @param {Element} [el]\n   *        Parent element for the control text.\n   *\n   * @return {Element}\n   *         The control text element that gets created.\n   */\n\n\n  ClickableComponent.prototype.createControlTextEl = function createControlTextEl(el) {\n    this.controlTextEl_ = Dom.createEl('span', {\n      className: 'vjs-control-text'\n    });\n\n    if (el) {\n      el.appendChild(this.controlTextEl_);\n    }\n\n    this.controlText(this.controlText_, el);\n\n    return this.controlTextEl_;\n  };\n\n  /**\n   * Get or set the localize text to use for the controls on the `Component`.\n   *\n   * @param {string} [text]\n   *        Control text for element.\n   *\n   * @param {Element} [el=this.el()]\n   *        Element to set the title on.\n   *\n   * @return {string|ClickableComponent}\n   *         - The control text when getting\n   *         - Returns itself when setting; method can be chained.\n   */\n\n\n  ClickableComponent.prototype.controlText = function controlText(text) {\n    var el = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.el();\n\n    if (!text) {\n      return this.controlText_ || 'Need Text';\n    }\n\n    var localizedText = this.localize(text);\n\n    this.controlText_ = text;\n    this.controlTextEl_.innerHTML = localizedText;\n    el.setAttribute('title', localizedText);\n\n    return this;\n  };\n\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n\n\n  ClickableComponent.prototype.buildCSSClass = function buildCSSClass() {\n    return 'vjs-control vjs-button ' + _Component.prototype.buildCSSClass.call(this);\n  };\n\n  /**\n   * Enable this `Component`s element.\n   *\n   * @return {ClickableComponent}\n   *         Returns itself; method can be chained.\n   */\n\n\n  ClickableComponent.prototype.enable = function enable() {\n    this.removeClass('vjs-disabled');\n    this.el_.setAttribute('aria-disabled', 'false');\n    if (typeof this.tabIndex_ !== 'undefined') {\n      this.el_.setAttribute('tabIndex', this.tabIndex_);\n    }\n    this.on('tap', this.handleClick);\n    this.on('click', this.handleClick);\n    this.on('focus', this.handleFocus);\n    this.on('blur', this.handleBlur);\n    return this;\n  };\n\n  /**\n   * Disable this `Component`s element.\n   *\n   * @return {ClickableComponent}\n   *         Returns itself; method can be chained.\n   */\n\n\n  ClickableComponent.prototype.disable = function disable() {\n    this.addClass('vjs-disabled');\n    this.el_.setAttribute('aria-disabled', 'true');\n    if (typeof this.tabIndex_ !== 'undefined') {\n      this.el_.removeAttribute('tabIndex');\n    }\n    this.off('tap', this.handleClick);\n    this.off('click', this.handleClick);\n    this.off('focus', this.handleFocus);\n    this.off('blur', this.handleBlur);\n    return this;\n  };\n\n  /**\n   * This gets called when a `ClickableComponent` gets:\n   * - Clicked (via the `click` event, listening starts in the constructor)\n   * - Tapped (via the `tap` event, listening starts in the constructor)\n   * - The following things happen in order:\n   *   1. {@link ClickableComponent#handleFocus} is called via a `focus` event on the\n   *      `ClickableComponent`.\n   *   2. {@link ClickableComponent#handleFocus} adds a listener for `keydown` on using\n   *      {@link ClickableComponent#handleKeyPress}.\n   *   3. `ClickableComponent` has not had a `blur` event (`blur` means that focus was lost). The user presses\n   *      the space or enter key.\n   *   4. {@link ClickableComponent#handleKeyPress} calls this function with the `keydown`\n   *      event as a parameter.\n   *\n   * @param {EventTarget~Event} event\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   * @abstract\n   */\n\n\n  ClickableComponent.prototype.handleClick = function handleClick(event) {};\n\n  /**\n   * This gets called when a `ClickableComponent` gains focus via a `focus` event.\n   * Turns on listening for `keydown` events. When they happen it\n   * calls `this.handleKeyPress`.\n   *\n   * @param {EventTarget~Event} event\n   *        The `focus` event that caused this function to be called.\n   *\n   * @listens focus\n   */\n\n\n  ClickableComponent.prototype.handleFocus = function handleFocus(event) {\n    Events.on(_document2['default'], 'keydown', Fn.bind(this, this.handleKeyPress));\n  };\n\n  /**\n   * Called when this ClickableComponent has focus and a key gets pressed down. By\n   * default it will call `this.handleClick` when the key is space or enter.\n   *\n   * @param {EventTarget~Event} event\n   *        The `keydown` event that caused this function to be called.\n   *\n   * @listens keydown\n   */\n\n\n  ClickableComponent.prototype.handleKeyPress = function handleKeyPress(event) {\n\n    // Support Space (32) or Enter (13) key operation to fire a click event\n    if (event.which === 32 || event.which === 13) {\n      event.preventDefault();\n      this.handleClick(event);\n    } else if (_Component.prototype.handleKeyPress) {\n\n      // Pass keypress handling up for unsupported keys\n      _Component.prototype.handleKeyPress.call(this, event);\n    }\n  };\n\n  /**\n   * Called when a `ClickableComponent` loses focus. Turns off the listener for\n   * `keydown` events. Which Stops `this.handleKeyPress` from getting called.\n   *\n   * @param {EventTarget~Event} event\n   *        The `blur` event that caused this function to be called.\n   *\n   * @listens blur\n   */\n\n\n  ClickableComponent.prototype.handleBlur = function handleBlur(event) {\n    Events.off(_document2['default'], 'keydown', Fn.bind(this, this.handleKeyPress));\n  };\n\n  return ClickableComponent;\n}(_component2['default']);\n\n_component2['default'].registerComponent('ClickableComponent', ClickableComponent);\nexports['default'] = ClickableComponent;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/video.js/es5/clickable-component.js\n ** module id = 52\n ** module chunks = 0 1\n **/","'use strict';\n\nexports.__esModule = true;\n\nvar _component = require('../component');\n\nvar _component2 = _interopRequireDefault(_component);\n\nvar _fn = require('../utils/fn.js');\n\nvar Fn = _interopRequireWildcard(_fn);\n\nvar _window = require('global/window');\n\nvar _window2 = _interopRequireDefault(_window);\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj['default'] = obj; return newObj; } }\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /**\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * @file text-track-display.js\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                */\n\n\nvar darkGray = '#222';\nvar lightGray = '#ccc';\nvar fontMap = {\n  monospace: 'monospace',\n  sansSerif: 'sans-serif',\n  serif: 'serif',\n  monospaceSansSerif: '\"Andale Mono\", \"Lucida Console\", monospace',\n  monospaceSerif: '\"Courier New\", monospace',\n  proportionalSansSerif: 'sans-serif',\n  proportionalSerif: 'serif',\n  casual: '\"Comic Sans MS\", Impact, fantasy',\n  script: '\"Monotype Corsiva\", cursive',\n  smallcaps: '\"Andale Mono\", \"Lucida Console\", monospace, sans-serif'\n};\n\n/**\n * Construct an rgba color from a given hex color code.\n *\n * @param {number} color\n *        Hex number for color, like #f0e.\n *\n * @param {number} opacity\n *        Value for opacity, 0.0 - 1.0.\n *\n * @return {string}\n *         The rgba color that was created, like 'rgba(255, 0, 0, 0.3)'.\n *\n * @private\n */\nfunction constructColor(color, opacity) {\n  return 'rgba(' +\n  // color looks like \"#f0e\"\n  parseInt(color[1] + color[1], 16) + ',' + parseInt(color[2] + color[2], 16) + ',' + parseInt(color[3] + color[3], 16) + ',' + opacity + ')';\n}\n\n/**\n * Try to update the style of a DOM element. Some style changes will throw an error,\n * particularly in IE8. Those should be noops.\n *\n * @param {Element} el\n *        The DOM element to be styled.\n *\n * @param {string} style\n *        The CSS property on the element that should be styled.\n *\n * @param {string} rule\n *        The style rule that should be applied to the property.\n */\nfunction tryUpdateStyle(el, style, rule) {\n  try {\n    el.style[style] = rule;\n  } catch (e) {\n\n    // Satisfies linter.\n    return;\n  }\n}\n\n/**\n * The component for displaying text track cues.\n *\n * @extends Component\n */\n\nvar TextTrackDisplay = function (_Component) {\n  _inherits(TextTrackDisplay, _Component);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   *\n   * @param {Component~ReadyCallback} [ready]\n   *        The function to call when `TextTrackDisplay` is ready.\n   */\n  function TextTrackDisplay(player, options, ready) {\n    _classCallCheck(this, TextTrackDisplay);\n\n    var _this = _possibleConstructorReturn(this, _Component.call(this, player, options, ready));\n\n    player.on('loadstart', Fn.bind(_this, _this.toggleDisplay));\n    player.on('texttrackchange', Fn.bind(_this, _this.updateDisplay));\n\n    // This used to be called during player init, but was causing an error\n    // if a track should show by default and the display hadn't loaded yet.\n    // Should probably be moved to an external track loader when we support\n    // tracks that don't need a display.\n    player.ready(Fn.bind(_this, function () {\n      if (player.tech_ && player.tech_.featuresNativeTextTracks) {\n        this.hide();\n        return;\n      }\n\n      player.on('fullscreenchange', Fn.bind(this, this.updateDisplay));\n\n      var tracks = this.options_.playerOptions.tracks || [];\n\n      for (var i = 0; i < tracks.length; i++) {\n        this.player_.addRemoteTextTrack(tracks[i]);\n      }\n\n      var modes = { captions: 1, subtitles: 1 };\n      var trackList = this.player_.textTracks();\n      var firstDesc = void 0;\n      var firstCaptions = void 0;\n\n      if (trackList) {\n        for (var _i = 0; _i < trackList.length; _i++) {\n          var track = trackList[_i];\n\n          if (track['default']) {\n            if (track.kind === 'descriptions' && !firstDesc) {\n              firstDesc = track;\n            } else if (track.kind in modes && !firstCaptions) {\n              firstCaptions = track;\n            }\n          }\n        }\n\n        // We want to show the first default track but captions and subtitles\n        // take precedence over descriptions.\n        // So, display the first default captions or subtitles track\n        // and otherwise the first default descriptions track.\n        if (firstCaptions) {\n          firstCaptions.mode = 'showing';\n        } else if (firstDesc) {\n          firstDesc.mode = 'showing';\n        }\n      }\n    }));\n    return _this;\n  }\n\n  /**\n   * Turn display of {@link TextTrack}'s from the current state into the other state.\n   * There are only two states:\n   * - 'shown'\n   * - 'hidden'\n   *\n   * @listens Player#loadstart\n   */\n\n\n  TextTrackDisplay.prototype.toggleDisplay = function toggleDisplay() {\n    if (this.player_.tech_ && this.player_.tech_.featuresNativeTextTracks) {\n      this.hide();\n    } else {\n      this.show();\n    }\n  };\n\n  /**\n   * Create the {@link Component}'s DOM element.\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n\n\n  TextTrackDisplay.prototype.createEl = function createEl() {\n    return _Component.prototype.createEl.call(this, 'div', {\n      className: 'vjs-text-track-display'\n    }, {\n      'aria-live': 'off',\n      'aria-atomic': 'true'\n    });\n  };\n\n  /**\n   * Clear all displayed {@link TextTrack}s.\n   */\n\n\n  TextTrackDisplay.prototype.clearDisplay = function clearDisplay() {\n    if (typeof _window2['default'].WebVTT === 'function') {\n      _window2['default'].WebVTT.processCues(_window2['default'], [], this.el_);\n    }\n  };\n\n  /**\n   * Update the displayed TextTrack when a either a {@link Player#texttrackchange} or\n   * a {@link Player#fullscreenchange} is fired.\n   *\n   * @listens Player#texttrackchange\n   * @listens Player#fullscreenchange\n   */\n\n\n  TextTrackDisplay.prototype.updateDisplay = function updateDisplay() {\n    var tracks = this.player_.textTracks();\n\n    this.clearDisplay();\n\n    if (!tracks) {\n      return;\n    }\n\n    // Track display prioritization model: if multiple tracks are 'showing',\n    //  display the first 'subtitles' or 'captions' track which is 'showing',\n    //  otherwise display the first 'descriptions' track which is 'showing'\n\n    var descriptionsTrack = null;\n    var captionsSubtitlesTrack = null;\n\n    var i = tracks.length;\n\n    while (i--) {\n      var track = tracks[i];\n\n      if (track.mode === 'showing') {\n        if (track.kind === 'descriptions') {\n          descriptionsTrack = track;\n        } else {\n          captionsSubtitlesTrack = track;\n        }\n      }\n    }\n\n    if (captionsSubtitlesTrack) {\n      if (this.getAttribute('aria-live') !== 'off') {\n        this.setAttribute('aria-live', 'off');\n      }\n      this.updateForTrack(captionsSubtitlesTrack);\n    } else if (descriptionsTrack) {\n      if (this.getAttribute('aria-live') !== 'assertive') {\n        this.setAttribute('aria-live', 'assertive');\n      }\n      this.updateForTrack(descriptionsTrack);\n    }\n  };\n\n  /**\n   * Add an {@link Texttrack} to to the {@link Tech}s {@link TextTrackList}.\n   *\n   * @param {TextTrack} track\n   *        Text track object to be added to the list.\n   */\n\n\n  TextTrackDisplay.prototype.updateForTrack = function updateForTrack(track) {\n    if (typeof _window2['default'].WebVTT !== 'function' || !track.activeCues) {\n      return;\n    }\n\n    var overrides = this.player_.textTrackSettings.getValues();\n    var cues = [];\n\n    for (var _i2 = 0; _i2 < track.activeCues.length; _i2++) {\n      cues.push(track.activeCues[_i2]);\n    }\n\n    _window2['default'].WebVTT.processCues(_window2['default'], cues, this.el_);\n\n    var i = cues.length;\n\n    while (i--) {\n      var cue = cues[i];\n\n      if (!cue) {\n        continue;\n      }\n\n      var cueDiv = cue.displayState;\n\n      if (overrides.color) {\n        cueDiv.firstChild.style.color = overrides.color;\n      }\n      if (overrides.textOpacity) {\n        tryUpdateStyle(cueDiv.firstChild, 'color', constructColor(overrides.color || '#fff', overrides.textOpacity));\n      }\n      if (overrides.backgroundColor) {\n        cueDiv.firstChild.style.backgroundColor = overrides.backgroundColor;\n      }\n      if (overrides.backgroundOpacity) {\n        tryUpdateStyle(cueDiv.firstChild, 'backgroundColor', constructColor(overrides.backgroundColor || '#000', overrides.backgroundOpacity));\n      }\n      if (overrides.windowColor) {\n        if (overrides.windowOpacity) {\n          tryUpdateStyle(cueDiv, 'backgroundColor', constructColor(overrides.windowColor, overrides.windowOpacity));\n        } else {\n          cueDiv.style.backgroundColor = overrides.windowColor;\n        }\n      }\n      if (overrides.edgeStyle) {\n        if (overrides.edgeStyle === 'dropshadow') {\n          cueDiv.firstChild.style.textShadow = '2px 2px 3px ' + darkGray + ', 2px 2px 4px ' + darkGray + ', 2px 2px 5px ' + darkGray;\n        } else if (overrides.edgeStyle === 'raised') {\n          cueDiv.firstChild.style.textShadow = '1px 1px ' + darkGray + ', 2px 2px ' + darkGray + ', 3px 3px ' + darkGray;\n        } else if (overrides.edgeStyle === 'depressed') {\n          cueDiv.firstChild.style.textShadow = '1px 1px ' + lightGray + ', 0 1px ' + lightGray + ', -1px -1px ' + darkGray + ', 0 -1px ' + darkGray;\n        } else if (overrides.edgeStyle === 'uniform') {\n          cueDiv.firstChild.style.textShadow = '0 0 4px ' + darkGray + ', 0 0 4px ' + darkGray + ', 0 0 4px ' + darkGray + ', 0 0 4px ' + darkGray;\n        }\n      }\n      if (overrides.fontPercent && overrides.fontPercent !== 1) {\n        var fontSize = _window2['default'].parseFloat(cueDiv.style.fontSize);\n\n        cueDiv.style.fontSize = fontSize * overrides.fontPercent + 'px';\n        cueDiv.style.height = 'auto';\n        cueDiv.style.top = 'auto';\n        cueDiv.style.bottom = '2px';\n      }\n      if (overrides.fontFamily && overrides.fontFamily !== 'default') {\n        if (overrides.fontFamily === 'small-caps') {\n          cueDiv.firstChild.style.fontVariant = 'small-caps';\n        } else {\n          cueDiv.firstChild.style.fontFamily = fontMap[overrides.fontFamily];\n        }\n      }\n    }\n  };\n\n  return TextTrackDisplay;\n}(_component2['default']);\n\n_component2['default'].registerComponent('TextTrackDisplay', TextTrackDisplay);\nexports['default'] = TextTrackDisplay;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/video.js/es5/tracks/text-track-display.js\n ** module id = 53\n ** module chunks = 0 1\n **/","'use strict';\n\nexports.__esModule = true;\n\nvar _component = require('./component');\n\nvar _component2 = _interopRequireDefault(_component);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /**\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * @file loading-spinner.js\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                */\n\n\n/**\n * A loading spinner for use during waiting/loading events.\n *\n * @extends Component\n */\nvar LoadingSpinner = function (_Component) {\n  _inherits(LoadingSpinner, _Component);\n\n  function LoadingSpinner() {\n    _classCallCheck(this, LoadingSpinner);\n\n    return _possibleConstructorReturn(this, _Component.apply(this, arguments));\n  }\n\n  /**\n   * Create the `LoadingSpinner`s DOM element.\n   *\n   * @return {Element}\n   *         The dom element that gets created.\n   */\n  LoadingSpinner.prototype.createEl = function createEl() {\n    return _Component.prototype.createEl.call(this, 'div', {\n      className: 'vjs-loading-spinner',\n      dir: 'ltr'\n    });\n  };\n\n  return LoadingSpinner;\n}(_component2['default']);\n\n_component2['default'].registerComponent('LoadingSpinner', LoadingSpinner);\nexports['default'] = LoadingSpinner;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/video.js/es5/loading-spinner.js\n ** module id = 54\n ** module chunks = 0 1\n **/","'use strict';\n\nexports.__esModule = true;\n\nvar _button = require('./button.js');\n\nvar _button2 = _interopRequireDefault(_button);\n\nvar _component = require('./component.js');\n\nvar _component2 = _interopRequireDefault(_component);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /**\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * @file big-play-button.js\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                */\n\n\n/**\n * The initial play button that shows before the video has played. The hiding of the\n * `BigPlayButton` get done via CSS and `Player` states.\n *\n * @extends Button\n */\nvar BigPlayButton = function (_Button) {\n  _inherits(BigPlayButton, _Button);\n\n  function BigPlayButton() {\n    _classCallCheck(this, BigPlayButton);\n\n    return _possibleConstructorReturn(this, _Button.apply(this, arguments));\n  }\n\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object. Always returns 'vjs-big-play-button'.\n   */\n  BigPlayButton.prototype.buildCSSClass = function buildCSSClass() {\n    return 'vjs-big-play-button';\n  };\n\n  /**\n   * This gets called when a `BigPlayButton` \"clicked\". See {@link ClickableComponent}\n   * for more detailed information on what a click can be.\n   *\n   * @param {EventTarget~Event} event\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   */\n\n\n  BigPlayButton.prototype.handleClick = function handleClick(event) {\n    this.player_.play();\n  };\n\n  return BigPlayButton;\n}(_button2['default']);\n\n/**\n * The text that should display over the `BigPlayButton`s controls. Added to for localization.\n *\n * @type {string}\n * @private\n */\n\n\nBigPlayButton.prototype.controlText_ = 'Play Video';\n\n_component2['default'].registerComponent('BigPlayButton', BigPlayButton);\nexports['default'] = BigPlayButton;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/video.js/es5/big-play-button.js\n ** module id = 55\n ** module chunks = 0 1\n **/","'use strict';\n\nexports.__esModule = true;\n\nvar _clickableComponent = require('./clickable-component.js');\n\nvar _clickableComponent2 = _interopRequireDefault(_clickableComponent);\n\nvar _component = require('./component');\n\nvar _component2 = _interopRequireDefault(_component);\n\nvar _log = require('./utils/log.js');\n\nvar _log2 = _interopRequireDefault(_log);\n\nvar _obj = require('./utils/obj');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /**\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * @file button.js\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                */\n\n\n/**\n * Base class for all buttons.\n *\n * @extends ClickableComponent\n */\nvar Button = function (_ClickableComponent) {\n  _inherits(Button, _ClickableComponent);\n\n  function Button() {\n    _classCallCheck(this, Button);\n\n    return _possibleConstructorReturn(this, _ClickableComponent.apply(this, arguments));\n  }\n\n  /**\n   * Create the `Button`s DOM element.\n   *\n   * @param {string} [tag=button]\n   *        Element's node type. e.g. 'button'\n   *\n   * @param {Object} [props={}]\n   *        An object of properties that should be set on the element.\n   *\n   * @param {Object} [attributes={}]\n   *        An object of attributes that should be set on the element.\n   *\n   * @return {Element}\n   *         The element that gets created.\n   */\n  Button.prototype.createEl = function createEl() {\n    var tag = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'button';\n    var props = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    var attributes = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n\n    props = (0, _obj.assign)({\n      className: this.buildCSSClass()\n    }, props);\n\n    if (tag !== 'button') {\n      _log2['default'].warn('Creating a Button with an HTML element of ' + tag + ' is deprecated; use ClickableComponent instead.');\n\n      // Add properties for clickable element which is not a native HTML button\n      props = (0, _obj.assign)({\n        tabIndex: 0\n      }, props);\n\n      // Add ARIA attributes for clickable element which is not a native HTML button\n      attributes = (0, _obj.assign)({\n        role: 'button'\n      }, attributes);\n    }\n\n    // Add attributes for button element\n    attributes = (0, _obj.assign)({\n\n      // Necessary since the default button type is \"submit\"\n      'type': 'button',\n\n      // let the screen reader user know that the text of the button may change\n      'aria-live': 'polite'\n    }, attributes);\n\n    var el = _component2['default'].prototype.createEl.call(this, tag, props, attributes);\n\n    this.createControlTextEl(el);\n\n    return el;\n  };\n\n  /**\n   * Add a child `Component` inside of this `Button`.\n   *\n   * @param {string|Component} child\n   *        The name or instance of a child to add.\n   *\n   * @param {Object} [options={}]\n   *        The key/value store of options that will get passed to children of\n   *        the child.\n   *\n   * @return {Component}\n   *         The `Component` that gets added as a child. When using a string the\n   *         `Component` will get created by this process.\n   *\n   * @deprecated since version 5\n   */\n\n\n  Button.prototype.addChild = function addChild(child) {\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n    var className = this.constructor.name;\n\n    _log2['default'].warn('Adding an actionable (user controllable) child to a Button (' + className + ') is not supported; use a ClickableComponent instead.');\n\n    // Avoid the error message generated by ClickableComponent's addChild method\n    return _component2['default'].prototype.addChild.call(this, child, options);\n  };\n\n  /**\n   * Enable the `Button` element so that it can be activated or clicked. Use this with\n   * {@link Button#disable}.\n   *\n   * @return {Component}\n   *         Returns itself; method is chainable.\n   */\n\n\n  Button.prototype.enable = function enable() {\n    _ClickableComponent.prototype.enable.call(this);\n    this.el_.removeAttribute('disabled');\n  };\n\n  /**\n   * Enable the `Button` element so that it cannot be activated or clicked. Use this with\n   * {@link Button#enable}.\n   *\n   * @return {Component}\n   *         Returns itself; method is chainable.\n   */\n\n\n  Button.prototype.disable = function disable() {\n    _ClickableComponent.prototype.disable.call(this);\n    this.el_.setAttribute('disabled', 'disabled');\n  };\n\n  /**\n   * This gets called when a `Button` has focus and `keydown` is triggered via a key\n   * press.\n   *\n   * @param {EventTarget~Event} event\n   *        The event that caused this function to get called.\n   *\n   * @listens keydown\n   */\n\n\n  Button.prototype.handleKeyPress = function handleKeyPress(event) {\n\n    // Ignore Space (32) or Enter (13) key operation, which is handled by the browser for a button.\n    if (event.which === 32 || event.which === 13) {\n      return;\n    }\n\n    // Pass keypress handling up for unsupported keys\n    _ClickableComponent.prototype.handleKeyPress.call(this, event);\n  };\n\n  return Button;\n}(_clickableComponent2['default']);\n\n_component2['default'].registerComponent('Button', Button);\nexports['default'] = Button;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/video.js/es5/button.js\n ** module id = 56\n ** module chunks = 0 1\n **/","'use strict';\n\nexports.__esModule = true;\n\nvar _button = require('./button');\n\nvar _button2 = _interopRequireDefault(_button);\n\nvar _component = require('./component');\n\nvar _component2 = _interopRequireDefault(_component);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /**\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * @file close-button.js\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                */\n\n\n/**\n * The `CloseButton` is a `{@link Button}` that fires a `close` event when\n * it gets clicked.\n *\n * @extends Button\n */\nvar CloseButton = function (_Button) {\n  _inherits(CloseButton, _Button);\n\n  /**\n   * Creates an instance of the this class.\n   *\n   * @param  {Player} player\n   *         The `Player` that this class should be attached to.\n   *\n   * @param  {Object} [options]\n   *         The key/value store of player options.\n   */\n  function CloseButton(player, options) {\n    _classCallCheck(this, CloseButton);\n\n    var _this = _possibleConstructorReturn(this, _Button.call(this, player, options));\n\n    _this.controlText(options && options.controlText || _this.localize('Close'));\n    return _this;\n  }\n\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n\n\n  CloseButton.prototype.buildCSSClass = function buildCSSClass() {\n    return 'vjs-close-button ' + _Button.prototype.buildCSSClass.call(this);\n  };\n\n  /**\n   * This gets called when a `CloseButton` gets clicked. See\n   * {@link ClickableComponent#handleClick} for more information on when this will be\n   * triggered\n   *\n   * @param {EventTarget~Event} event\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   * @fires CloseButton#close\n   */\n\n\n  CloseButton.prototype.handleClick = function handleClick(event) {\n\n    /**\n     * Triggered when the a `CloseButton` is clicked.\n     *\n     * @event CloseButton#close\n     * @type {EventTarget~Event}\n     *\n     * @property {boolean} [bubbles=false]\n     *           set to false so that the close event does not\n     *           bubble up to parents if there is no listener\n     */\n    this.trigger({ type: 'close', bubbles: false });\n  };\n\n  return CloseButton;\n}(_button2['default']);\n\n_component2['default'].registerComponent('CloseButton', CloseButton);\nexports['default'] = CloseButton;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/video.js/es5/close-button.js\n ** module id = 57\n ** module chunks = 0 1\n **/","'use strict';\n\nexports.__esModule = true;\n\nvar _component = require('../component.js');\n\nvar _component2 = _interopRequireDefault(_component);\n\nrequire('./play-toggle.js');\n\nrequire('./time-controls/current-time-display.js');\n\nrequire('./time-controls/duration-display.js');\n\nrequire('./time-controls/time-divider.js');\n\nrequire('./time-controls/remaining-time-display.js');\n\nrequire('./live-display.js');\n\nrequire('./progress-control/progress-control.js');\n\nrequire('./fullscreen-toggle.js');\n\nrequire('./volume-control/volume-control.js');\n\nrequire('./volume-menu-button.js');\n\nrequire('./mute-toggle.js');\n\nrequire('./text-track-controls/chapters-button.js');\n\nrequire('./text-track-controls/descriptions-button.js');\n\nrequire('./text-track-controls/subtitles-button.js');\n\nrequire('./text-track-controls/captions-button.js');\n\nrequire('./audio-track-controls/audio-track-button.js');\n\nrequire('./playback-rate-menu/playback-rate-menu-button.js');\n\nrequire('./spacer-controls/custom-control-spacer.js');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /**\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * @file control-bar.js\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                */\n\n\n// Required children\n\n\n/**\n * Container of main controls.\n *\n * @extends Component\n */\nvar ControlBar = function (_Component) {\n  _inherits(ControlBar, _Component);\n\n  function ControlBar() {\n    _classCallCheck(this, ControlBar);\n\n    return _possibleConstructorReturn(this, _Component.apply(this, arguments));\n  }\n\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n  ControlBar.prototype.createEl = function createEl() {\n    return _Component.prototype.createEl.call(this, 'div', {\n      className: 'vjs-control-bar',\n      dir: 'ltr'\n    }, {\n      // The control bar is a group, so it can contain menuitems\n      role: 'group'\n    });\n  };\n\n  return ControlBar;\n}(_component2['default']);\n\n/**\n * Default options for `ControlBar`\n *\n * @type {Object}\n * @private\n */\n\n\nControlBar.prototype.options_ = {\n  children: ['playToggle', 'volumeMenuButton', 'currentTimeDisplay', 'timeDivider', 'durationDisplay', 'progressControl', 'liveDisplay', 'remainingTimeDisplay', 'customControlSpacer', 'playbackRateMenuButton', 'chaptersButton', 'descriptionsButton', 'subtitlesButton', 'captionsButton', 'audioTrackButton', 'fullscreenToggle']\n};\n\n_component2['default'].registerComponent('ControlBar', ControlBar);\nexports['default'] = ControlBar;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/video.js/es5/control-bar/control-bar.js\n ** module id = 58\n ** module chunks = 0 1\n **/","'use strict';\n\nexports.__esModule = true;\n\nvar _button = require('../button.js');\n\nvar _button2 = _interopRequireDefault(_button);\n\nvar _component = require('../component.js');\n\nvar _component2 = _interopRequireDefault(_component);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /**\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * @file play-toggle.js\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                */\n\n\n/**\n * Button to toggle between play and pause.\n *\n * @extends Button\n */\nvar PlayToggle = function (_Button) {\n  _inherits(PlayToggle, _Button);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function PlayToggle(player, options) {\n    _classCallCheck(this, PlayToggle);\n\n    var _this = _possibleConstructorReturn(this, _Button.call(this, player, options));\n\n    _this.on(player, 'play', _this.handlePlay);\n    _this.on(player, 'pause', _this.handlePause);\n    return _this;\n  }\n\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n\n\n  PlayToggle.prototype.buildCSSClass = function buildCSSClass() {\n    return 'vjs-play-control ' + _Button.prototype.buildCSSClass.call(this);\n  };\n\n  /**\n   * This gets called when an `PlayToggle` is \"clicked\". See\n   * {@link ClickableComponent} for more detailed information on what a click can be.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   */\n\n\n  PlayToggle.prototype.handleClick = function handleClick(event) {\n    if (this.player_.paused()) {\n      this.player_.play();\n    } else {\n      this.player_.pause();\n    }\n  };\n\n  /**\n   * Add the vjs-playing class to the element so it can change appearance.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The event that caused this function to run.\n   *\n   * @listens Player#play\n   */\n\n\n  PlayToggle.prototype.handlePlay = function handlePlay(event) {\n    this.removeClass('vjs-paused');\n    this.addClass('vjs-playing');\n    // change the button text to \"Pause\"\n    this.controlText('Pause');\n  };\n\n  /**\n   * Add the vjs-paused class to the element so it can change appearance.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The event that caused this function to run.\n   *\n   * @listens Player#pause\n   */\n\n\n  PlayToggle.prototype.handlePause = function handlePause(event) {\n    this.removeClass('vjs-playing');\n    this.addClass('vjs-paused');\n    // change the button text to \"Play\"\n    this.controlText('Play');\n  };\n\n  return PlayToggle;\n}(_button2['default']);\n\n/**\n * The text that should display over the `PlayToggle`s controls. Added for localization.\n *\n * @type {string}\n * @private\n */\n\n\nPlayToggle.prototype.controlText_ = 'Play';\n\n_component2['default'].registerComponent('PlayToggle', PlayToggle);\nexports['default'] = PlayToggle;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/video.js/es5/control-bar/play-toggle.js\n ** module id = 59\n ** module chunks = 0 1\n **/","'use strict';\n\nexports.__esModule = true;\n\nvar _component = require('../../component.js');\n\nvar _component2 = _interopRequireDefault(_component);\n\nvar _dom = require('../../utils/dom.js');\n\nvar Dom = _interopRequireWildcard(_dom);\n\nvar _formatTime = require('../../utils/format-time.js');\n\nvar _formatTime2 = _interopRequireDefault(_formatTime);\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj['default'] = obj; return newObj; } }\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /**\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * @file current-time-display.js\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                */\n\n\n/**\n * Displays the current time\n *\n * @extends Component\n */\nvar CurrentTimeDisplay = function (_Component) {\n  _inherits(CurrentTimeDisplay, _Component);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function CurrentTimeDisplay(player, options) {\n    _classCallCheck(this, CurrentTimeDisplay);\n\n    var _this = _possibleConstructorReturn(this, _Component.call(this, player, options));\n\n    _this.on(player, 'timeupdate', _this.updateContent);\n    return _this;\n  }\n\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n\n\n  CurrentTimeDisplay.prototype.createEl = function createEl() {\n    var el = _Component.prototype.createEl.call(this, 'div', {\n      className: 'vjs-current-time vjs-time-control vjs-control'\n    });\n\n    this.contentEl_ = Dom.createEl('div', {\n      className: 'vjs-current-time-display',\n      // label the current time for screen reader users\n      innerHTML: '<span class=\"vjs-control-text\">Current Time </span>' + '0:00'\n    }, {\n      // tell screen readers not to automatically read the time as it changes\n      'aria-live': 'off'\n    });\n\n    el.appendChild(this.contentEl_);\n    return el;\n  };\n\n  /**\n   * Update current time display\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `timeupdate` event that caused this function to run.\n   *\n   * @listens Player#timeupdate\n   */\n\n\n  CurrentTimeDisplay.prototype.updateContent = function updateContent(event) {\n    // Allows for smooth scrubbing, when player can't keep up.\n    var time = this.player_.scrubbing() ? this.player_.getCache().currentTime : this.player_.currentTime();\n    var localizedText = this.localize('Current Time');\n    var formattedTime = (0, _formatTime2['default'])(time, this.player_.duration());\n\n    if (formattedTime !== this.formattedTime_) {\n      this.formattedTime_ = formattedTime;\n      this.contentEl_.innerHTML = '<span class=\"vjs-control-text\">' + localizedText + '</span> ' + formattedTime;\n    }\n  };\n\n  return CurrentTimeDisplay;\n}(_component2['default']);\n\n_component2['default'].registerComponent('CurrentTimeDisplay', CurrentTimeDisplay);\nexports['default'] = CurrentTimeDisplay;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/video.js/es5/control-bar/time-controls/current-time-display.js\n ** module id = 60\n ** module chunks = 0 1\n **/","'use strict';\n\nexports.__esModule = true;\n/**\n * @file format-time.js\n * @module Format-time\n */\n\n/**\n * Format seconds as a time string, H:MM:SS or M:SS. Supplying a guide (in seconds)\n * will force a number of leading zeros to cover the length of the guide.\n *\n * @param {number} seconds\n *        Number of seconds to be turned into a string\n *\n * @param {number} guide\n *        Number (in seconds) to model the string after\n *\n * @return {string}\n *         Time formatted as H:MM:SS or M:SS\n */\nfunction formatTime(seconds) {\n  var guide = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : seconds;\n\n  seconds = seconds < 0 ? 0 : seconds;\n  var s = Math.floor(seconds % 60);\n  var m = Math.floor(seconds / 60 % 60);\n  var h = Math.floor(seconds / 3600);\n  var gm = Math.floor(guide / 60 % 60);\n  var gh = Math.floor(guide / 3600);\n\n  // handle invalid times\n  if (isNaN(seconds) || seconds === Infinity) {\n    // '-' is false for all relational operators (e.g. <, >=) so this setting\n    // will add the minimum number of fields specified by the guide\n    h = m = s = '-';\n  }\n\n  // Check if we need to show hours\n  h = h > 0 || gh > 0 ? h + ':' : '';\n\n  // If hours are showing, we may need to add a leading zero.\n  // Always show at least one digit of minutes.\n  m = ((h || gm >= 10) && m < 10 ? '0' + m : m) + ':';\n\n  // Check if leading zero is need for seconds\n  s = s < 10 ? '0' + s : s;\n\n  return h + m + s;\n}\n\nexports['default'] = formatTime;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/video.js/es5/utils/format-time.js\n ** module id = 61\n ** module chunks = 0 1\n **/","'use strict';\n\nexports.__esModule = true;\n\nvar _component = require('../../component.js');\n\nvar _component2 = _interopRequireDefault(_component);\n\nvar _dom = require('../../utils/dom.js');\n\nvar Dom = _interopRequireWildcard(_dom);\n\nvar _formatTime = require('../../utils/format-time.js');\n\nvar _formatTime2 = _interopRequireDefault(_formatTime);\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj['default'] = obj; return newObj; } }\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /**\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * @file duration-display.js\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                */\n\n\n/**\n * Displays the duration\n *\n * @extends Component\n */\nvar DurationDisplay = function (_Component) {\n  _inherits(DurationDisplay, _Component);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function DurationDisplay(player, options) {\n    _classCallCheck(this, DurationDisplay);\n\n    var _this = _possibleConstructorReturn(this, _Component.call(this, player, options));\n\n    _this.on(player, 'durationchange', _this.updateContent);\n\n    // Also listen for timeupdate and loadedmetadata because removing those\n    // listeners could have broken dependent applications/libraries. These\n    // can likely be removed for 6.0.\n    _this.on(player, 'timeupdate', _this.updateContent);\n    _this.on(player, 'loadedmetadata', _this.updateContent);\n    return _this;\n  }\n\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n\n\n  DurationDisplay.prototype.createEl = function createEl() {\n    var el = _Component.prototype.createEl.call(this, 'div', {\n      className: 'vjs-duration vjs-time-control vjs-control'\n    });\n\n    this.contentEl_ = Dom.createEl('div', {\n      className: 'vjs-duration-display',\n      // label the duration time for screen reader users\n      innerHTML: '<span class=\"vjs-control-text\">' + this.localize('Duration Time') + '</span> 0:00'\n    }, {\n      // tell screen readers not to automatically read the time as it changes\n      'aria-live': 'off'\n    });\n\n    el.appendChild(this.contentEl_);\n    return el;\n  };\n\n  /**\n   * Update duration time display.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `durationchange`, `timeupdate`, or `loadedmetadata` event that caused\n   *        this function to be called.\n   *\n   * @listens Player#durationchange\n   * @listens Player#timeupdate\n   * @listens Player#loadedmetadata\n   */\n\n\n  DurationDisplay.prototype.updateContent = function updateContent(event) {\n    var duration = this.player_.duration();\n\n    if (duration && this.duration_ !== duration) {\n      this.duration_ = duration;\n      var localizedText = this.localize('Duration Time');\n      var formattedTime = (0, _formatTime2['default'])(duration);\n\n      // label the duration time for screen reader users\n      this.contentEl_.innerHTML = '<span class=\"vjs-control-text\">' + localizedText + '</span> ' + formattedTime;\n    }\n  };\n\n  return DurationDisplay;\n}(_component2['default']);\n\n_component2['default'].registerComponent('DurationDisplay', DurationDisplay);\nexports['default'] = DurationDisplay;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/video.js/es5/control-bar/time-controls/duration-display.js\n ** module id = 62\n ** module chunks = 0 1\n **/","'use strict';\n\nexports.__esModule = true;\n\nvar _component = require('../../component.js');\n\nvar _component2 = _interopRequireDefault(_component);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /**\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * @file time-divider.js\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                */\n\n\n/**\n * The separator between the current time and duration.\n * Can be hidden if it's not needed in the design.\n *\n * @extends Component\n */\nvar TimeDivider = function (_Component) {\n  _inherits(TimeDivider, _Component);\n\n  function TimeDivider() {\n    _classCallCheck(this, TimeDivider);\n\n    return _possibleConstructorReturn(this, _Component.apply(this, arguments));\n  }\n\n  /**\n   * Create the component's DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n  TimeDivider.prototype.createEl = function createEl() {\n    return _Component.prototype.createEl.call(this, 'div', {\n      className: 'vjs-time-control vjs-time-divider',\n      innerHTML: '<div><span>/</span></div>'\n    });\n  };\n\n  return TimeDivider;\n}(_component2['default']);\n\n_component2['default'].registerComponent('TimeDivider', TimeDivider);\nexports['default'] = TimeDivider;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/video.js/es5/control-bar/time-controls/time-divider.js\n ** module id = 63\n ** module chunks = 0 1\n **/","'use strict';\n\nexports.__esModule = true;\n\nvar _component = require('../../component.js');\n\nvar _component2 = _interopRequireDefault(_component);\n\nvar _dom = require('../../utils/dom.js');\n\nvar Dom = _interopRequireWildcard(_dom);\n\nvar _formatTime = require('../../utils/format-time.js');\n\nvar _formatTime2 = _interopRequireDefault(_formatTime);\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj['default'] = obj; return newObj; } }\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /**\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * @file remaining-time-display.js\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                */\n\n\n/**\n * Displays the time left in the video\n *\n * @extends Component\n */\nvar RemainingTimeDisplay = function (_Component) {\n  _inherits(RemainingTimeDisplay, _Component);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function RemainingTimeDisplay(player, options) {\n    _classCallCheck(this, RemainingTimeDisplay);\n\n    var _this = _possibleConstructorReturn(this, _Component.call(this, player, options));\n\n    _this.on(player, 'timeupdate', _this.updateContent);\n    _this.on(player, 'durationchange', _this.updateContent);\n    return _this;\n  }\n\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n\n\n  RemainingTimeDisplay.prototype.createEl = function createEl() {\n    var el = _Component.prototype.createEl.call(this, 'div', {\n      className: 'vjs-remaining-time vjs-time-control vjs-control'\n    });\n\n    this.contentEl_ = Dom.createEl('div', {\n      className: 'vjs-remaining-time-display',\n      // label the remaining time for screen reader users\n      innerHTML: '<span class=\"vjs-control-text\">' + this.localize('Remaining Time') + '</span> -0:00'\n    }, {\n      // tell screen readers not to automatically read the time as it changes\n      'aria-live': 'off'\n    });\n\n    el.appendChild(this.contentEl_);\n    return el;\n  };\n\n  /**\n   * Update remaining time display.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `timeupdate` or `durationchange` event that caused this to run.\n   *\n   * @listens Player#timeupdate\n   * @listens Player#durationchange\n   */\n\n\n  RemainingTimeDisplay.prototype.updateContent = function updateContent(event) {\n    if (this.player_.duration()) {\n      var localizedText = this.localize('Remaining Time');\n      var formattedTime = (0, _formatTime2['default'])(this.player_.remainingTime());\n\n      if (formattedTime !== this.formattedTime_) {\n        this.formattedTime_ = formattedTime;\n        this.contentEl_.innerHTML = '<span class=\"vjs-control-text\">' + localizedText + '</span> -' + formattedTime;\n      }\n    }\n\n    // Allows for smooth scrubbing, when player can't keep up.\n    // var time = (this.player_.scrubbing()) ? this.player_.getCache().currentTime : this.player_.currentTime();\n    // this.contentEl_.innerHTML = vjs.formatTime(time, this.player_.duration());\n  };\n\n  return RemainingTimeDisplay;\n}(_component2['default']);\n\n_component2['default'].registerComponent('RemainingTimeDisplay', RemainingTimeDisplay);\nexports['default'] = RemainingTimeDisplay;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/video.js/es5/control-bar/time-controls/remaining-time-display.js\n ** module id = 64\n ** module chunks = 0 1\n **/","'use strict';\n\nexports.__esModule = true;\n\nvar _component = require('../component');\n\nvar _component2 = _interopRequireDefault(_component);\n\nvar _dom = require('../utils/dom.js');\n\nvar Dom = _interopRequireWildcard(_dom);\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj['default'] = obj; return newObj; } }\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /**\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * @file live-display.js\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                */\n\n\n// TODO - Future make it click to snap to live\n\n/**\n * Displays the live indicator when duration is Infinity.\n *\n * @extends Component\n */\nvar LiveDisplay = function (_Component) {\n  _inherits(LiveDisplay, _Component);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function LiveDisplay(player, options) {\n    _classCallCheck(this, LiveDisplay);\n\n    var _this = _possibleConstructorReturn(this, _Component.call(this, player, options));\n\n    _this.updateShowing();\n    _this.on(_this.player(), 'durationchange', _this.updateShowing);\n    return _this;\n  }\n\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n\n\n  LiveDisplay.prototype.createEl = function createEl() {\n    var el = _Component.prototype.createEl.call(this, 'div', {\n      className: 'vjs-live-control vjs-control'\n    });\n\n    this.contentEl_ = Dom.createEl('div', {\n      className: 'vjs-live-display',\n      innerHTML: '<span class=\"vjs-control-text\">' + this.localize('Stream Type') + '</span>' + this.localize('LIVE')\n    }, {\n      'aria-live': 'off'\n    });\n\n    el.appendChild(this.contentEl_);\n    return el;\n  };\n\n  /**\n   * Check the duration to see if the LiveDisplay should be showing or not. Then show/hide\n   * it accordingly\n   *\n   * @param {EventTarget~Event} [event]\n   *        The {@link Player#durationchange} event that caused this function to run.\n   *\n   * @listens Player#durationchange\n   */\n\n\n  LiveDisplay.prototype.updateShowing = function updateShowing(event) {\n    if (this.player().duration() === Infinity) {\n      this.show();\n    } else {\n      this.hide();\n    }\n  };\n\n  return LiveDisplay;\n}(_component2['default']);\n\n_component2['default'].registerComponent('LiveDisplay', LiveDisplay);\nexports['default'] = LiveDisplay;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/video.js/es5/control-bar/live-display.js\n ** module id = 65\n ** module chunks = 0 1\n **/","'use strict';\n\nexports.__esModule = true;\n\nvar _component = require('../../component.js');\n\nvar _component2 = _interopRequireDefault(_component);\n\nrequire('./seek-bar.js');\n\nrequire('./mouse-time-display.js');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /**\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * @file progress-control.js\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                */\n\n\n/**\n * The Progress Control component contains the seek bar, load progress,\n * and play progress.\n *\n * @extends Component\n */\nvar ProgressControl = function (_Component) {\n  _inherits(ProgressControl, _Component);\n\n  function ProgressControl() {\n    _classCallCheck(this, ProgressControl);\n\n    return _possibleConstructorReturn(this, _Component.apply(this, arguments));\n  }\n\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n  ProgressControl.prototype.createEl = function createEl() {\n    return _Component.prototype.createEl.call(this, 'div', {\n      className: 'vjs-progress-control vjs-control'\n    });\n  };\n\n  return ProgressControl;\n}(_component2['default']);\n\n/**\n * Default options for `ProgressControl`\n *\n * @type {Object}\n * @private\n */\n\n\nProgressControl.prototype.options_ = {\n  children: ['seekBar']\n};\n\n_component2['default'].registerComponent('ProgressControl', ProgressControl);\nexports['default'] = ProgressControl;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/video.js/es5/control-bar/progress-control/progress-control.js\n ** module id = 66\n ** module chunks = 0 1\n **/","'use strict';\n\nexports.__esModule = true;\n\nvar _slider = require('../../slider/slider.js');\n\nvar _slider2 = _interopRequireDefault(_slider);\n\nvar _component = require('../../component.js');\n\nvar _component2 = _interopRequireDefault(_component);\n\nvar _fn = require('../../utils/fn.js');\n\nvar Fn = _interopRequireWildcard(_fn);\n\nvar _formatTime = require('../../utils/format-time.js');\n\nvar _formatTime2 = _interopRequireDefault(_formatTime);\n\nvar _computedStyle = require('../../utils/computed-style.js');\n\nvar _computedStyle2 = _interopRequireDefault(_computedStyle);\n\nrequire('./load-progress-bar.js');\n\nrequire('./play-progress-bar.js');\n\nrequire('./tooltip-progress-bar.js');\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj['default'] = obj; return newObj; } }\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /**\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * @file seek-bar.js\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                */\n\n\n/**\n * Seek Bar and holder for the progress bars\n *\n * @extends Slider\n */\nvar SeekBar = function (_Slider) {\n  _inherits(SeekBar, _Slider);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function SeekBar(player, options) {\n    _classCallCheck(this, SeekBar);\n\n    var _this = _possibleConstructorReturn(this, _Slider.call(this, player, options));\n\n    _this.on(player, 'timeupdate', _this.updateProgress);\n    _this.on(player, 'ended', _this.updateProgress);\n    player.ready(Fn.bind(_this, _this.updateProgress));\n\n    if (options.playerOptions && options.playerOptions.controlBar && options.playerOptions.controlBar.progressControl && options.playerOptions.controlBar.progressControl.keepTooltipsInside) {\n      _this.keepTooltipsInside = options.playerOptions.controlBar.progressControl.keepTooltipsInside;\n    }\n\n    if (_this.keepTooltipsInside) {\n      _this.tooltipProgressBar = _this.addChild('TooltipProgressBar');\n    }\n    return _this;\n  }\n\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n\n\n  SeekBar.prototype.createEl = function createEl() {\n    return _Slider.prototype.createEl.call(this, 'div', {\n      className: 'vjs-progress-holder'\n    }, {\n      'aria-label': 'progress bar'\n    });\n  };\n\n  /**\n   * Update the seek bars tooltip and width.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `timeupdate` or `ended` event that caused this to run.\n   *\n   * @listens Player#timeupdate\n   * @listens Player#ended\n   */\n\n\n  SeekBar.prototype.updateProgress = function updateProgress(event) {\n    this.updateAriaAttributes(this.el_);\n\n    if (this.keepTooltipsInside) {\n      this.updateAriaAttributes(this.tooltipProgressBar.el_);\n      this.tooltipProgressBar.el_.style.width = this.bar.el_.style.width;\n\n      var playerWidth = parseFloat((0, _computedStyle2['default'])(this.player().el(), 'width'));\n      var tooltipWidth = parseFloat((0, _computedStyle2['default'])(this.tooltipProgressBar.tooltip, 'width'));\n      var tooltipStyle = this.tooltipProgressBar.el().style;\n\n      tooltipStyle.maxWidth = Math.floor(playerWidth - tooltipWidth / 2) + 'px';\n      tooltipStyle.minWidth = Math.ceil(tooltipWidth / 2) + 'px';\n      tooltipStyle.right = '-' + tooltipWidth / 2 + 'px';\n    }\n  };\n\n  /**\n   * Update ARIA accessibility attributes\n   *\n   * @param {Element} el\n   *        The element to update with aria accessibility attributes.\n   */\n\n\n  SeekBar.prototype.updateAriaAttributes = function updateAriaAttributes(el) {\n    // Allows for smooth scrubbing, when player can't keep up.\n    var time = this.player_.scrubbing() ? this.player_.getCache().currentTime : this.player_.currentTime();\n\n    // machine readable value of progress bar (percentage complete)\n    el.setAttribute('aria-valuenow', (this.getPercent() * 100).toFixed(2));\n    // human readable value of progress bar (time complete)\n    el.setAttribute('aria-valuetext', (0, _formatTime2['default'])(time, this.player_.duration()));\n  };\n\n  /**\n   * Get percentage of video played\n   *\n    * @return {Number} Percentage played\n   */\n\n\n  SeekBar.prototype.getPercent = function getPercent() {\n    var percent = this.player_.currentTime() / this.player_.duration();\n\n    return percent >= 1 ? 1 : percent;\n  };\n\n  /**\n   * Handle mouse down on seek bar\n   *\n   * @param {EventTarget~Event} event\n   *        The `mousedown` event that caused this to run.\n   *\n   * @listens mousedown\n   */\n\n\n  SeekBar.prototype.handleMouseDown = function handleMouseDown(event) {\n    _Slider.prototype.handleMouseDown.call(this, event);\n\n    this.player_.scrubbing(true);\n\n    this.videoWasPlaying = !this.player_.paused();\n    this.player_.pause();\n  };\n\n  /**\n   * Handle mouse move on seek bar\n   *\n   * @param {EventTarget~Event} event\n   *        The `mousemove` event that caused this to run.\n   *\n   * @listens mousemove\n   */\n\n\n  SeekBar.prototype.handleMouseMove = function handleMouseMove(event) {\n    var newTime = this.calculateDistance(event) * this.player_.duration();\n\n    // Don't let video end while scrubbing.\n    if (newTime === this.player_.duration()) {\n      newTime = newTime - 0.1;\n    }\n\n    // Set new time (tell player to seek to new time)\n    this.player_.currentTime(newTime);\n  };\n\n  /**\n   * Handle mouse up on seek bar\n   *\n   * @param {EventTarget~Event} event\n   *        The `mouseup` event that caused this to run.\n   *\n   * @listens mouseup\n   */\n\n\n  SeekBar.prototype.handleMouseUp = function handleMouseUp(event) {\n    _Slider.prototype.handleMouseUp.call(this, event);\n\n    this.player_.scrubbing(false);\n    if (this.videoWasPlaying) {\n      this.player_.play();\n    }\n  };\n\n  /**\n   * Move more quickly fast forward for keyboard-only users\n   */\n\n\n  SeekBar.prototype.stepForward = function stepForward() {\n    // more quickly fast forward for keyboard-only users\n    this.player_.currentTime(this.player_.currentTime() + 5);\n  };\n\n  /**\n   * Move more quickly rewind for keyboard-only users\n   */\n\n\n  SeekBar.prototype.stepBack = function stepBack() {\n    // more quickly rewind for keyboard-only users\n    this.player_.currentTime(this.player_.currentTime() - 5);\n  };\n\n  return SeekBar;\n}(_slider2['default']);\n\n/**\n * Default options for the `SeekBar`\n *\n * @type {Object}\n * @private\n */\n\n\nSeekBar.prototype.options_ = {\n  children: ['loadProgressBar', 'mouseTimeDisplay', 'playProgressBar'],\n  barName: 'playProgressBar'\n};\n\n/**\n * Call the update event for this Slider when this event happens on the player.\n *\n * @type {string}\n */\nSeekBar.prototype.playerEvent = 'timeupdate';\n\n_component2['default'].registerComponent('SeekBar', SeekBar);\nexports['default'] = SeekBar;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/video.js/es5/control-bar/progress-control/seek-bar.js\n ** module id = 67\n ** module chunks = 0 1\n **/","'use strict';\n\nexports.__esModule = true;\n\nvar _component = require('../component.js');\n\nvar _component2 = _interopRequireDefault(_component);\n\nvar _dom = require('../utils/dom.js');\n\nvar Dom = _interopRequireWildcard(_dom);\n\nvar _obj = require('../utils/obj');\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj['default'] = obj; return newObj; } }\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /**\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * @file slider.js\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                */\n\n\n/**\n * The base functionality for a slider. Can be vertical or horizontal.\n * For instance the volume bar or the seek bar on a video is a slider.\n *\n * @extends Component\n */\nvar Slider = function (_Component) {\n  _inherits(Slider, _Component);\n\n  /**\n   * Create an instance of this class\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function Slider(player, options) {\n    _classCallCheck(this, Slider);\n\n    // Set property names to bar to match with the child Slider class is looking for\n    var _this = _possibleConstructorReturn(this, _Component.call(this, player, options));\n\n    _this.bar = _this.getChild(_this.options_.barName);\n\n    // Set a horizontal or vertical class on the slider depending on the slider type\n    _this.vertical(!!_this.options_.vertical);\n\n    _this.on('mousedown', _this.handleMouseDown);\n    _this.on('touchstart', _this.handleMouseDown);\n    _this.on('focus', _this.handleFocus);\n    _this.on('blur', _this.handleBlur);\n    _this.on('click', _this.handleClick);\n\n    _this.on(player, 'controlsvisible', _this.update);\n    _this.on(player, _this.playerEvent, _this.update);\n    return _this;\n  }\n\n  /**\n   * Create the `Button`s DOM element.\n   *\n   * @param {string} type\n   *        Type of element to create.\n   *\n   * @param {Object} [props={}]\n   *        List of properties in Object form.\n   *\n   * @param {Object} [attributes={}]\n   *        list of attributes in Object form.\n   *\n   * @return {Element}\n   *         The element that gets created.\n   */\n\n\n  Slider.prototype.createEl = function createEl(type) {\n    var props = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    var attributes = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n\n    // Add the slider element class to all sub classes\n    props.className = props.className + ' vjs-slider';\n    props = (0, _obj.assign)({\n      tabIndex: 0\n    }, props);\n\n    attributes = (0, _obj.assign)({\n      'role': 'slider',\n      'aria-valuenow': 0,\n      'aria-valuemin': 0,\n      'aria-valuemax': 100,\n      'tabIndex': 0\n    }, attributes);\n\n    return _Component.prototype.createEl.call(this, type, props, attributes);\n  };\n\n  /**\n   * Handle `mousedown` or `touchstart` events on the `Slider`.\n   *\n   * @param {EventTarget~Event} event\n   *        `mousedown` or `touchstart` event that triggered this function\n   *\n   * @listens mousedown\n   * @listens touchstart\n   * @fires Slider#slideractive\n   */\n\n\n  Slider.prototype.handleMouseDown = function handleMouseDown(event) {\n    var doc = this.bar.el_.ownerDocument;\n\n    event.preventDefault();\n    Dom.blockTextSelection();\n\n    this.addClass('vjs-sliding');\n    /**\n     * Triggered when the slider is in an active state\n     *\n     * @event Slider#slideractive\n     * @type {EventTarget~Event}\n     */\n    this.trigger('slideractive');\n\n    this.on(doc, 'mousemove', this.handleMouseMove);\n    this.on(doc, 'mouseup', this.handleMouseUp);\n    this.on(doc, 'touchmove', this.handleMouseMove);\n    this.on(doc, 'touchend', this.handleMouseUp);\n\n    this.handleMouseMove(event);\n  };\n\n  /**\n   * Handle the `mousemove`, `touchmove`, and `mousedown` events on this `Slider`.\n   * The `mousemove` and `touchmove` events will only only trigger this function during\n   * `mousedown` and `touchstart`. This is due to {@link Slider#handleMouseDown} and\n   * {@link Slider#handleMouseUp}.\n   *\n   * @param {EventTarget~Event} event\n   *        `mousedown`, `mousemove`, `touchstart`, or `touchmove` event that triggered\n   *        this function\n   *\n   * @listens mousemove\n   * @listens touchmove\n   */\n\n\n  Slider.prototype.handleMouseMove = function handleMouseMove(event) {};\n\n  /**\n   * Handle `mouseup` or `touchend` events on the `Slider`.\n   *\n   * @param {EventTarget~Event} event\n   *        `mouseup` or `touchend` event that triggered this function.\n   *\n   * @listens touchend\n   * @listens mouseup\n   * @fires Slider#sliderinactive\n   */\n\n\n  Slider.prototype.handleMouseUp = function handleMouseUp() {\n    var doc = this.bar.el_.ownerDocument;\n\n    Dom.unblockTextSelection();\n\n    this.removeClass('vjs-sliding');\n    /**\n     * Triggered when the slider is no longer in an active state.\n     *\n     * @event Slider#sliderinactive\n     * @type {EventTarget~Event}\n     */\n    this.trigger('sliderinactive');\n\n    this.off(doc, 'mousemove', this.handleMouseMove);\n    this.off(doc, 'mouseup', this.handleMouseUp);\n    this.off(doc, 'touchmove', this.handleMouseMove);\n    this.off(doc, 'touchend', this.handleMouseUp);\n\n    this.update();\n  };\n\n  /**\n   * Update the progress bar of the `Slider`.\n   */\n\n\n  Slider.prototype.update = function update() {\n    // In VolumeBar init we have a setTimeout for update that pops and update to the end of the\n    // execution stack. The player is destroyed before then update will cause an error\n    if (!this.el_) {\n      return;\n    }\n\n    // If scrubbing, we could use a cached value to make the handle keep up with the user's mouse.\n    // On HTML5 browsers scrubbing is really smooth, but some flash players are slow, so we might want to utilize this later.\n    // var progress =  (this.player_.scrubbing()) ? this.player_.getCache().currentTime / this.player_.duration() : this.player_.currentTime() / this.player_.duration();\n    var progress = this.getPercent();\n    var bar = this.bar;\n\n    // If there's no bar...\n    if (!bar) {\n      return;\n    }\n\n    // Protect against no duration and other division issues\n    if (typeof progress !== 'number' || progress !== progress || progress < 0 || progress === Infinity) {\n      progress = 0;\n    }\n\n    // Convert to a percentage for setting\n    var percentage = (progress * 100).toFixed(2) + '%';\n\n    // Set the new bar width or height\n    if (this.vertical()) {\n      bar.el().style.height = percentage;\n    } else {\n      bar.el().style.width = percentage;\n    }\n  };\n\n  /**\n   * Calculate distance for slider\n   *\n   * @param {EventTarget~Event} event\n   *        The event that caused this function to run.\n   *\n   * @return {number}\n   *         The current position of the Slider.\n   *         - postition.x for vertical `Slider`s\n   *         - postition.y for horizontal `Slider`s\n   */\n\n\n  Slider.prototype.calculateDistance = function calculateDistance(event) {\n    var position = Dom.getPointerPosition(this.el_, event);\n\n    if (this.vertical()) {\n      return position.y;\n    }\n    return position.x;\n  };\n\n  /**\n   * Handle a `focus` event on this `Slider`.\n   *\n   * @param {EventTarget~Event} event\n   *        The `focus` event that caused this function to run.\n   *\n   * @listens focus\n   */\n\n\n  Slider.prototype.handleFocus = function handleFocus() {\n    this.on(this.bar.el_.ownerDocument, 'keydown', this.handleKeyPress);\n  };\n\n  /**\n   * Handle a `keydown` event on the `Slider`. Watches for left, rigth, up, and down\n   * arrow keys. This function will only be called when the slider has focus. See\n   * {@link Slider#handleFocus} and {@link Slider#handleBlur}.\n   *\n   * @param {EventTarget~Event} event\n   *        the `keydown` event that caused this function to run.\n   *\n   * @listens keydown\n   */\n\n\n  Slider.prototype.handleKeyPress = function handleKeyPress(event) {\n    // Left and Down Arrows\n    if (event.which === 37 || event.which === 40) {\n      event.preventDefault();\n      this.stepBack();\n\n      // Up and Right Arrows\n    } else if (event.which === 38 || event.which === 39) {\n      event.preventDefault();\n      this.stepForward();\n    }\n  };\n\n  /**\n   * Handle a `blur` event on this `Slider`.\n   *\n   * @param {EventTarget~Event} event\n   *        The `blur` event that caused this function to run.\n   *\n   * @listens blur\n   */\n\n  Slider.prototype.handleBlur = function handleBlur() {\n    this.off(this.bar.el_.ownerDocument, 'keydown', this.handleKeyPress);\n  };\n\n  /**\n   * Listener for click events on slider, used to prevent clicks\n   *   from bubbling up to parent elements like button menus.\n   *\n   * @param {Object} event\n   *        Event that caused this object to run\n   */\n\n\n  Slider.prototype.handleClick = function handleClick(event) {\n    event.stopImmediatePropagation();\n    event.preventDefault();\n  };\n\n  /**\n   * Get/set if slider is horizontal for vertical\n   *\n   * @param {boolean} [bool]\n   *        - true if slider is vertical,\n   *        - false is horizontal\n   *\n   * @return {boolean|Slider}\n   *         - true if slider is vertical, and getting\n   *         - false is horizontal, and getting\n   *         - a reference to this object when setting\n   */\n\n\n  Slider.prototype.vertical = function vertical(bool) {\n    if (bool === undefined) {\n      return this.vertical_ || false;\n    }\n\n    this.vertical_ = !!bool;\n\n    if (this.vertical_) {\n      this.addClass('vjs-slider-vertical');\n    } else {\n      this.addClass('vjs-slider-horizontal');\n    }\n\n    return this;\n  };\n\n  return Slider;\n}(_component2['default']);\n\n_component2['default'].registerComponent('Slider', Slider);\nexports['default'] = Slider;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/video.js/es5/slider/slider.js\n ** module id = 68\n ** module chunks = 0 1\n **/","'use strict';\n\nexports.__esModule = true;\nexports['default'] = computedStyle;\n\nvar _window = require('global/window');\n\nvar _window2 = _interopRequireDefault(_window);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\n/**\n * A safe getComputedStyle with an IE8 fallback.\n *\n * This is needed because in Firefox, if the player is loaded in an iframe with\n * `display:none`, then `getComputedStyle` returns `null`, so, we do a null-check to\n * make sure  that the player doesn't break in these cases.\n *\n * @param {Element} el\n *        The element you want the computed style of\n *\n * @param {string} prop\n *        The property name you want\n *\n * @see https://bugzilla.mozilla.org/show_bug.cgi?id=548397\n */\nfunction computedStyle(el, prop) {\n  if (!el || !prop) {\n    return '';\n  }\n\n  if (typeof _window2['default'].getComputedStyle === 'function') {\n    var cs = _window2['default'].getComputedStyle(el);\n\n    return cs ? cs[prop] : '';\n  }\n\n  return el.currentStyle[prop] || '';\n} /**\n   * @file computed-style.js\n   * @module computed-style\n   */\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/video.js/es5/utils/computed-style.js\n ** module id = 69\n ** module chunks = 0 1\n **/","'use strict';\n\nexports.__esModule = true;\n\nvar _component = require('../../component.js');\n\nvar _component2 = _interopRequireDefault(_component);\n\nvar _dom = require('../../utils/dom.js');\n\nvar Dom = _interopRequireWildcard(_dom);\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj['default'] = obj; return newObj; } }\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /**\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * @file load-progress-bar.js\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                */\n\n\n/**\n * Shows loading progress\n *\n * @extends Component\n */\nvar LoadProgressBar = function (_Component) {\n  _inherits(LoadProgressBar, _Component);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function LoadProgressBar(player, options) {\n    _classCallCheck(this, LoadProgressBar);\n\n    var _this = _possibleConstructorReturn(this, _Component.call(this, player, options));\n\n    _this.partEls_ = [];\n    _this.on(player, 'progress', _this.update);\n    return _this;\n  }\n\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n\n\n  LoadProgressBar.prototype.createEl = function createEl() {\n    return _Component.prototype.createEl.call(this, 'div', {\n      className: 'vjs-load-progress',\n      innerHTML: '<span class=\"vjs-control-text\"><span>' + this.localize('Loaded') + '</span>: 0%</span>'\n    });\n  };\n\n  /**\n   * Update progress bar\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `progress` event that caused this function to run.\n   *\n   * @listens Player#progress\n   */\n\n\n  LoadProgressBar.prototype.update = function update(event) {\n    var buffered = this.player_.buffered();\n    var duration = this.player_.duration();\n    var bufferedEnd = this.player_.bufferedEnd();\n    var children = this.partEls_;\n\n    // get the percent width of a time compared to the total end\n    var percentify = function percentify(time, end) {\n      // no NaN\n      var percent = time / end || 0;\n\n      return (percent >= 1 ? 1 : percent) * 100 + '%';\n    };\n\n    // update the width of the progress bar\n    this.el_.style.width = percentify(bufferedEnd, duration);\n\n    // add child elements to represent the individual buffered time ranges\n    for (var i = 0; i < buffered.length; i++) {\n      var start = buffered.start(i);\n      var end = buffered.end(i);\n      var part = children[i];\n\n      if (!part) {\n        part = this.el_.appendChild(Dom.createEl());\n        children[i] = part;\n      }\n\n      // set the percent based on the width of the progress bar (bufferedEnd)\n      part.style.left = percentify(start, bufferedEnd);\n      part.style.width = percentify(end - start, bufferedEnd);\n    }\n\n    // remove unused buffered range elements\n    for (var _i = children.length; _i > buffered.length; _i--) {\n      this.el_.removeChild(children[_i - 1]);\n    }\n    children.length = buffered.length;\n  };\n\n  return LoadProgressBar;\n}(_component2['default']);\n\n_component2['default'].registerComponent('LoadProgressBar', LoadProgressBar);\nexports['default'] = LoadProgressBar;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/video.js/es5/control-bar/progress-control/load-progress-bar.js\n ** module id = 70\n ** module chunks = 0 1\n **/","'use strict';\n\nexports.__esModule = true;\n\nvar _component = require('../../component.js');\n\nvar _component2 = _interopRequireDefault(_component);\n\nvar _fn = require('../../utils/fn.js');\n\nvar Fn = _interopRequireWildcard(_fn);\n\nvar _formatTime = require('../../utils/format-time.js');\n\nvar _formatTime2 = _interopRequireDefault(_formatTime);\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj['default'] = obj; return newObj; } }\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /**\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * @file play-progress-bar.js\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                */\n\n\n/**\n * Shows play progress\n *\n * @extends Component\n */\nvar PlayProgressBar = function (_Component) {\n  _inherits(PlayProgressBar, _Component);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function PlayProgressBar(player, options) {\n    _classCallCheck(this, PlayProgressBar);\n\n    var _this = _possibleConstructorReturn(this, _Component.call(this, player, options));\n\n    _this.updateDataAttr();\n    _this.on(player, 'timeupdate', _this.updateDataAttr);\n    player.ready(Fn.bind(_this, _this.updateDataAttr));\n\n    if (options.playerOptions && options.playerOptions.controlBar && options.playerOptions.controlBar.progressControl && options.playerOptions.controlBar.progressControl.keepTooltipsInside) {\n      _this.keepTooltipsInside = options.playerOptions.controlBar.progressControl.keepTooltipsInside;\n    }\n\n    if (_this.keepTooltipsInside) {\n      _this.addClass('vjs-keep-tooltips-inside');\n    }\n    return _this;\n  }\n\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n\n\n  PlayProgressBar.prototype.createEl = function createEl() {\n    return _Component.prototype.createEl.call(this, 'div', {\n      className: 'vjs-play-progress vjs-slider-bar',\n      innerHTML: '<span class=\"vjs-control-text\"><span>' + this.localize('Progress') + '</span>: 0%</span>'\n    });\n  };\n\n  /**\n   * Update the data-current-time attribute on the `PlayProgressBar`.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `timeupdate` event that caused this to run.\n   *\n   * @listens Player#timeupdate\n   */\n\n\n  PlayProgressBar.prototype.updateDataAttr = function updateDataAttr(event) {\n    var time = this.player_.scrubbing() ? this.player_.getCache().currentTime : this.player_.currentTime();\n\n    this.el_.setAttribute('data-current-time', (0, _formatTime2['default'])(time, this.player_.duration()));\n  };\n\n  return PlayProgressBar;\n}(_component2['default']);\n\n_component2['default'].registerComponent('PlayProgressBar', PlayProgressBar);\nexports['default'] = PlayProgressBar;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/video.js/es5/control-bar/progress-control/play-progress-bar.js\n ** module id = 71\n ** module chunks = 0 1\n **/","'use strict';\n\nexports.__esModule = true;\n\nvar _component = require('../../component.js');\n\nvar _component2 = _interopRequireDefault(_component);\n\nvar _fn = require('../../utils/fn.js');\n\nvar Fn = _interopRequireWildcard(_fn);\n\nvar _formatTime = require('../../utils/format-time.js');\n\nvar _formatTime2 = _interopRequireDefault(_formatTime);\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj['default'] = obj; return newObj; } }\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /**\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * @file play-progress-bar.js\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                */\n\n\n/**\n * Shows play progress\n *\n * @extends Component\n */\nvar TooltipProgressBar = function (_Component) {\n  _inherits(TooltipProgressBar, _Component);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function TooltipProgressBar(player, options) {\n    _classCallCheck(this, TooltipProgressBar);\n\n    var _this = _possibleConstructorReturn(this, _Component.call(this, player, options));\n\n    _this.updateDataAttr();\n    _this.on(player, 'timeupdate', _this.updateDataAttr);\n    player.ready(Fn.bind(_this, _this.updateDataAttr));\n    return _this;\n  }\n\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n\n\n  TooltipProgressBar.prototype.createEl = function createEl() {\n    var el = _Component.prototype.createEl.call(this, 'div', {\n      className: 'vjs-tooltip-progress-bar vjs-slider-bar',\n      innerHTML: '<div class=\"vjs-time-tooltip\"></div>\\n        <span class=\"vjs-control-text\"><span>' + this.localize('Progress') + '</span>: 0%</span>'\n    });\n\n    this.tooltip = el.querySelector('.vjs-time-tooltip');\n\n    return el;\n  };\n\n  /**\n   * Updatet the data-current-time attribute for TooltipProgressBar\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `timeupdate` event that caused this function to run.\n   *\n   * @listens Player#timeupdate\n   */\n\n\n  TooltipProgressBar.prototype.updateDataAttr = function updateDataAttr(event) {\n    var time = this.player_.scrubbing() ? this.player_.getCache().currentTime : this.player_.currentTime();\n    var formattedTime = (0, _formatTime2['default'])(time, this.player_.duration());\n\n    this.el_.setAttribute('data-current-time', formattedTime);\n    this.tooltip.innerHTML = formattedTime;\n  };\n\n  return TooltipProgressBar;\n}(_component2['default']);\n\n_component2['default'].registerComponent('TooltipProgressBar', TooltipProgressBar);\nexports['default'] = TooltipProgressBar;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/video.js/es5/control-bar/progress-control/tooltip-progress-bar.js\n ** module id = 72\n ** module chunks = 0 1\n **/","'use strict';\n\nexports.__esModule = true;\n\nvar _component = require('../../component.js');\n\nvar _component2 = _interopRequireDefault(_component);\n\nvar _dom = require('../../utils/dom.js');\n\nvar Dom = _interopRequireWildcard(_dom);\n\nvar _fn = require('../../utils/fn.js');\n\nvar Fn = _interopRequireWildcard(_fn);\n\nvar _formatTime = require('../../utils/format-time.js');\n\nvar _formatTime2 = _interopRequireDefault(_formatTime);\n\nvar _computedStyle = require('../../utils/computed-style.js');\n\nvar _computedStyle2 = _interopRequireDefault(_computedStyle);\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj['default'] = obj; return newObj; } }\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /**\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * @file mouse-time-display.js\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                */\n\n\n/**\n * The Mouse Time Display component shows the time you will seek to\n * when hovering over the progress bar\n *\n * @extends Component\n */\nvar MouseTimeDisplay = function (_Component) {\n  _inherits(MouseTimeDisplay, _Component);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function MouseTimeDisplay(player, options) {\n    _classCallCheck(this, MouseTimeDisplay);\n\n    var _this = _possibleConstructorReturn(this, _Component.call(this, player, options));\n\n    if (options.playerOptions && options.playerOptions.controlBar && options.playerOptions.controlBar.progressControl && options.playerOptions.controlBar.progressControl.keepTooltipsInside) {\n      _this.keepTooltipsInside = options.playerOptions.controlBar.progressControl.keepTooltipsInside;\n    }\n\n    if (_this.keepTooltipsInside) {\n      _this.tooltip = Dom.createEl('div', { className: 'vjs-time-tooltip' });\n      _this.el().appendChild(_this.tooltip);\n      _this.addClass('vjs-keep-tooltips-inside');\n    }\n\n    _this.update(0, 0);\n\n    player.on('ready', function () {\n      _this.on(player.controlBar.progressControl.el(), 'mousemove', Fn.throttle(Fn.bind(_this, _this.handleMouseMove), 25));\n    });\n    return _this;\n  }\n\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n\n\n  MouseTimeDisplay.prototype.createEl = function createEl() {\n    return _Component.prototype.createEl.call(this, 'div', {\n      className: 'vjs-mouse-display'\n    });\n  };\n\n  /**\n   * Handle the mouse move event on the `MouseTimeDisplay`.\n   *\n   * @param {EventTarget~Event} event\n   *        The `mousemove` event that caused this to event to run.\n   *\n   * @listen mousemove\n   */\n\n\n  MouseTimeDisplay.prototype.handleMouseMove = function handleMouseMove(event) {\n    var duration = this.player_.duration();\n    var newTime = this.calculateDistance(event) * duration;\n    var position = event.pageX - Dom.findElPosition(this.el().parentNode).left;\n\n    this.update(newTime, position);\n  };\n\n  /**\n   * Update the time and posistion of the `MouseTimeDisplay`.\n   *\n   * @param {number} newTime\n   *        Time to change the `MouseTimeDisplay` to.\n   *\n   * @param {nubmer} position\n   *        Postion from the left of the in pixels.\n   */\n\n\n  MouseTimeDisplay.prototype.update = function update(newTime, position) {\n    var time = (0, _formatTime2['default'])(newTime, this.player_.duration());\n\n    this.el().style.left = position + 'px';\n    this.el().setAttribute('data-current-time', time);\n\n    if (this.keepTooltipsInside) {\n      var clampedPosition = this.clampPosition_(position);\n      var difference = position - clampedPosition + 1;\n      var tooltipWidth = parseFloat((0, _computedStyle2['default'])(this.tooltip, 'width'));\n      var tooltipWidthHalf = tooltipWidth / 2;\n\n      this.tooltip.innerHTML = time;\n      this.tooltip.style.right = '-' + (tooltipWidthHalf - difference) + 'px';\n    }\n  };\n\n  /**\n   * Get the mouse pointers x coordinate in pixels.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `mousemove` event that was passed to this function by\n   *        {@link MouseTimeDisplay#handleMouseMove}\n   *\n   * @return {number}\n   *         THe x position in pixels of the mouse pointer.\n   */\n\n\n  MouseTimeDisplay.prototype.calculateDistance = function calculateDistance(event) {\n    return Dom.getPointerPosition(this.el().parentNode, event).x;\n  };\n\n  /**\n   * This takes in a horizontal position for the bar and returns a clamped position.\n   * Clamped position means that it will keep the position greater than half the width\n   * of the tooltip and smaller than the player width minus half the width o the tooltip.\n   * It will only clamp the position if `keepTooltipsInside` option is set.\n   *\n   * @param {number} position\n   *        The position the bar wants to be\n   *\n   * @return {number}\n   *         The (potentially) new clamped position.\n   *\n   * @private\n   */\n\n\n  MouseTimeDisplay.prototype.clampPosition_ = function clampPosition_(position) {\n    if (!this.keepTooltipsInside) {\n      return position;\n    }\n\n    var playerWidth = parseFloat((0, _computedStyle2['default'])(this.player().el(), 'width'));\n    var tooltipWidth = parseFloat((0, _computedStyle2['default'])(this.tooltip, 'width'));\n    var tooltipWidthHalf = tooltipWidth / 2;\n    var actualPosition = position;\n\n    if (position < tooltipWidthHalf) {\n      actualPosition = Math.ceil(tooltipWidthHalf);\n    } else if (position > playerWidth - tooltipWidthHalf) {\n      actualPosition = Math.floor(playerWidth - tooltipWidthHalf);\n    }\n\n    return actualPosition;\n  };\n\n  return MouseTimeDisplay;\n}(_component2['default']);\n\n_component2['default'].registerComponent('MouseTimeDisplay', MouseTimeDisplay);\nexports['default'] = MouseTimeDisplay;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/video.js/es5/control-bar/progress-control/mouse-time-display.js\n ** module id = 73\n ** module chunks = 0 1\n **/","'use strict';\n\nexports.__esModule = true;\n\nvar _button = require('../button.js');\n\nvar _button2 = _interopRequireDefault(_button);\n\nvar _component = require('../component.js');\n\nvar _component2 = _interopRequireDefault(_component);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /**\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * @file fullscreen-toggle.js\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                */\n\n\n/**\n * Toggle fullscreen video\n *\n * @extends Button\n */\nvar FullscreenToggle = function (_Button) {\n  _inherits(FullscreenToggle, _Button);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function FullscreenToggle(player, options) {\n    _classCallCheck(this, FullscreenToggle);\n\n    var _this = _possibleConstructorReturn(this, _Button.call(this, player, options));\n\n    _this.on(player, 'fullscreenchange', _this.handleFullscreenChange);\n    return _this;\n  }\n\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n\n\n  FullscreenToggle.prototype.buildCSSClass = function buildCSSClass() {\n    return 'vjs-fullscreen-control ' + _Button.prototype.buildCSSClass.call(this);\n  };\n\n  /**\n   * Handles fullscreenchange on the player and change control text accordingly.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The {@link Player#fullscreenchange} event that caused this function to be\n   *        called.\n   *\n   * @listens Player#fullscreenchange\n   */\n\n\n  FullscreenToggle.prototype.handleFullscreenChange = function handleFullscreenChange(event) {\n    if (this.player_.isFullscreen()) {\n      this.controlText('Non-Fullscreen');\n    } else {\n      this.controlText('Fullscreen');\n    }\n  };\n\n  /**\n   * This gets called when an `FullscreenToggle` is \"clicked\". See\n   * {@link ClickableComponent} for more detailed information on what a click can be.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   */\n\n\n  FullscreenToggle.prototype.handleClick = function handleClick(event) {\n    if (!this.player_.isFullscreen()) {\n      this.player_.requestFullscreen();\n    } else {\n      this.player_.exitFullscreen();\n    }\n  };\n\n  return FullscreenToggle;\n}(_button2['default']);\n\n/**\n * The text that should display over the `FullscreenToggle`s controls. Added for localization.\n *\n * @type {string}\n * @private\n */\n\n\nFullscreenToggle.prototype.controlText_ = 'Fullscreen';\n\n_component2['default'].registerComponent('FullscreenToggle', FullscreenToggle);\nexports['default'] = FullscreenToggle;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/video.js/es5/control-bar/fullscreen-toggle.js\n ** module id = 74\n ** module chunks = 0 1\n **/","'use strict';\n\nexports.__esModule = true;\n\nvar _component = require('../../component.js');\n\nvar _component2 = _interopRequireDefault(_component);\n\nrequire('./volume-bar.js');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /**\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * @file volume-control.js\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                */\n\n\n// Required children\n\n\n/**\n * The component for controlling the volume level\n *\n * @extends Component\n */\nvar VolumeControl = function (_Component) {\n  _inherits(VolumeControl, _Component);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options={}]\n   *        The key/value store of player options.\n   */\n  function VolumeControl(player, options) {\n    _classCallCheck(this, VolumeControl);\n\n    // hide volume controls when they're not supported by the current tech\n    var _this = _possibleConstructorReturn(this, _Component.call(this, player, options));\n\n    if (player.tech_ && player.tech_.featuresVolumeControl === false) {\n      _this.addClass('vjs-hidden');\n    }\n    _this.on(player, 'loadstart', function () {\n      if (player.tech_.featuresVolumeControl === false) {\n        this.addClass('vjs-hidden');\n      } else {\n        this.removeClass('vjs-hidden');\n      }\n    });\n    return _this;\n  }\n\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n\n\n  VolumeControl.prototype.createEl = function createEl() {\n    return _Component.prototype.createEl.call(this, 'div', {\n      className: 'vjs-volume-control vjs-control'\n    });\n  };\n\n  return VolumeControl;\n}(_component2['default']);\n\n/**\n * Default options for the `VolumeControl`\n *\n * @type {Object}\n * @private\n */\n\n\nVolumeControl.prototype.options_ = {\n  children: ['volumeBar']\n};\n\n_component2['default'].registerComponent('VolumeControl', VolumeControl);\nexports['default'] = VolumeControl;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/video.js/es5/control-bar/volume-control/volume-control.js\n ** module id = 75\n ** module chunks = 0 1\n **/","'use strict';\n\nexports.__esModule = true;\n\nvar _slider = require('../../slider/slider.js');\n\nvar _slider2 = _interopRequireDefault(_slider);\n\nvar _component = require('../../component.js');\n\nvar _component2 = _interopRequireDefault(_component);\n\nvar _fn = require('../../utils/fn.js');\n\nvar Fn = _interopRequireWildcard(_fn);\n\nrequire('./volume-level.js');\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj['default'] = obj; return newObj; } }\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /**\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * @file volume-bar.js\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                */\n\n\n// Required children\n\n\n/**\n * The bar that contains the volume level and can be clicked on to adjust the level\n *\n * @extends Slider\n */\nvar VolumeBar = function (_Slider) {\n  _inherits(VolumeBar, _Slider);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function VolumeBar(player, options) {\n    _classCallCheck(this, VolumeBar);\n\n    var _this = _possibleConstructorReturn(this, _Slider.call(this, player, options));\n\n    _this.on(player, 'volumechange', _this.updateARIAAttributes);\n    player.ready(Fn.bind(_this, _this.updateARIAAttributes));\n    return _this;\n  }\n\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n\n\n  VolumeBar.prototype.createEl = function createEl() {\n    return _Slider.prototype.createEl.call(this, 'div', {\n      className: 'vjs-volume-bar vjs-slider-bar'\n    }, {\n      'aria-label': 'volume level'\n    });\n  };\n\n  /**\n   * Handle movement events on the {@link VolumeMenuButton}.\n   *\n   * @param {EventTarget~Event} event\n   *        The event that caused this function to run.\n   *\n   * @listens mousemove\n   */\n\n\n  VolumeBar.prototype.handleMouseMove = function handleMouseMove(event) {\n    this.checkMuted();\n    this.player_.volume(this.calculateDistance(event));\n  };\n\n  /**\n   * If the player is muted unmute it.\n   */\n\n\n  VolumeBar.prototype.checkMuted = function checkMuted() {\n    if (this.player_.muted()) {\n      this.player_.muted(false);\n    }\n  };\n\n  /**\n   * Get percent of volume level\n   *\n   * @return {number}\n   *         Volume level percent as a decimal number.\n   */\n\n\n  VolumeBar.prototype.getPercent = function getPercent() {\n    if (this.player_.muted()) {\n      return 0;\n    }\n    return this.player_.volume();\n  };\n\n  /**\n   * Increase volume level for keyboard users\n   */\n\n\n  VolumeBar.prototype.stepForward = function stepForward() {\n    this.checkMuted();\n    this.player_.volume(this.player_.volume() + 0.1);\n  };\n\n  /**\n   * Decrease volume level for keyboard users\n   */\n\n\n  VolumeBar.prototype.stepBack = function stepBack() {\n    this.checkMuted();\n    this.player_.volume(this.player_.volume() - 0.1);\n  };\n\n  /**\n   * Update ARIA accessibility attributes\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `volumechange` event that caused this function to run.\n   *\n   * @listens Player#volumechange\n   */\n\n\n  VolumeBar.prototype.updateARIAAttributes = function updateARIAAttributes(event) {\n    // Current value of volume bar as a percentage\n    var volume = (this.player_.volume() * 100).toFixed(2);\n\n    this.el_.setAttribute('aria-valuenow', volume);\n    this.el_.setAttribute('aria-valuetext', volume + '%');\n  };\n\n  return VolumeBar;\n}(_slider2['default']);\n\n/**\n * Default options for the `VolumeBar`\n *\n * @type {Object}\n * @private\n */\n\n\nVolumeBar.prototype.options_ = {\n  children: ['volumeLevel'],\n  barName: 'volumeLevel'\n};\n\n/**\n * Call the update event for this Slider when this event happens on the player.\n *\n * @type {string}\n */\nVolumeBar.prototype.playerEvent = 'volumechange';\n\n_component2['default'].registerComponent('VolumeBar', VolumeBar);\nexports['default'] = VolumeBar;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/video.js/es5/control-bar/volume-control/volume-bar.js\n ** module id = 76\n ** module chunks = 0 1\n **/","'use strict';\n\nexports.__esModule = true;\n\nvar _component = require('../../component.js');\n\nvar _component2 = _interopRequireDefault(_component);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /**\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * @file volume-level.js\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                */\n\n\n/**\n * Shows volume level\n *\n * @extends Component\n */\nvar VolumeLevel = function (_Component) {\n  _inherits(VolumeLevel, _Component);\n\n  function VolumeLevel() {\n    _classCallCheck(this, VolumeLevel);\n\n    return _possibleConstructorReturn(this, _Component.apply(this, arguments));\n  }\n\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n  VolumeLevel.prototype.createEl = function createEl() {\n    return _Component.prototype.createEl.call(this, 'div', {\n      className: 'vjs-volume-level',\n      innerHTML: '<span class=\"vjs-control-text\"></span>'\n    });\n  };\n\n  return VolumeLevel;\n}(_component2['default']);\n\n_component2['default'].registerComponent('VolumeLevel', VolumeLevel);\nexports['default'] = VolumeLevel;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/video.js/es5/control-bar/volume-control/volume-level.js\n ** module id = 77\n ** module chunks = 0 1\n **/","'use strict';\n\nexports.__esModule = true;\n\nvar _fn = require('../utils/fn.js');\n\nvar Fn = _interopRequireWildcard(_fn);\n\nvar _component = require('../component.js');\n\nvar _component2 = _interopRequireDefault(_component);\n\nvar _popup = require('../popup/popup.js');\n\nvar _popup2 = _interopRequireDefault(_popup);\n\nvar _popupButton = require('../popup/popup-button.js');\n\nvar _popupButton2 = _interopRequireDefault(_popupButton);\n\nvar _muteToggle = require('./mute-toggle.js');\n\nvar _muteToggle2 = _interopRequireDefault(_muteToggle);\n\nvar _volumeBar = require('./volume-control/volume-bar.js');\n\nvar _volumeBar2 = _interopRequireDefault(_volumeBar);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj['default'] = obj; return newObj; } }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /**\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * @file volume-menu-button.js\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                */\n\n\n/**\n * Button for volume popup\n *\n * @extends PopupButton\n */\nvar VolumeMenuButton = function (_PopupButton) {\n  _inherits(VolumeMenuButton, _PopupButton);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options={}]\n   *        The key/value store of player options.\n   */\n  function VolumeMenuButton(player) {\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n    _classCallCheck(this, VolumeMenuButton);\n\n    // Default to inline\n    if (options.inline === undefined) {\n      options.inline = true;\n    }\n\n    // If the vertical option isn't passed at all, default to true.\n    if (options.vertical === undefined) {\n      // If an inline volumeMenuButton is used, we should default to using\n      // a horizontal slider for obvious reasons.\n      if (options.inline) {\n        options.vertical = false;\n      } else {\n        options.vertical = true;\n      }\n    }\n\n    // The vertical option needs to be set on the volumeBar as well,\n    // since that will need to be passed along to the VolumeBar constructor\n    options.volumeBar = options.volumeBar || {};\n    options.volumeBar.vertical = !!options.vertical;\n\n    // Same listeners as MuteToggle\n    var _this = _possibleConstructorReturn(this, _PopupButton.call(this, player, options));\n\n    _this.on(player, 'volumechange', _this.volumeUpdate);\n    _this.on(player, 'loadstart', _this.volumeUpdate);\n\n    // hide mute toggle if the current tech doesn't support volume control\n    function updateVisibility() {\n      if (player.tech_ && player.tech_.featuresVolumeControl === false) {\n        this.addClass('vjs-hidden');\n      } else {\n        this.removeClass('vjs-hidden');\n      }\n    }\n\n    updateVisibility.call(_this);\n    _this.on(player, 'loadstart', updateVisibility);\n\n    _this.on(_this.volumeBar, ['slideractive', 'focus'], function () {\n      this.addClass('vjs-slider-active');\n    });\n\n    _this.on(_this.volumeBar, ['sliderinactive', 'blur'], function () {\n      this.removeClass('vjs-slider-active');\n    });\n\n    _this.on(_this.volumeBar, ['focus'], function () {\n      this.addClass('vjs-lock-showing');\n    });\n\n    _this.on(_this.volumeBar, ['blur'], function () {\n      this.removeClass('vjs-lock-showing');\n    });\n    return _this;\n  }\n\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n\n\n  VolumeMenuButton.prototype.buildCSSClass = function buildCSSClass() {\n    var orientationClass = '';\n\n    if (this.options_.vertical) {\n      orientationClass = 'vjs-volume-menu-button-vertical';\n    } else {\n      orientationClass = 'vjs-volume-menu-button-horizontal';\n    }\n\n    return 'vjs-volume-menu-button ' + _PopupButton.prototype.buildCSSClass.call(this) + ' ' + orientationClass;\n  };\n\n  /**\n   * Create the VolumeMenuButton popup\n   */\n\n\n  VolumeMenuButton.prototype.createPopup = function createPopup() {\n    var popup = new _popup2['default'](this.player_, {\n      contentElType: 'div'\n    });\n\n    var vb = new _volumeBar2['default'](this.player_, this.options_.volumeBar);\n\n    popup.addChild(vb);\n\n    this.menuContent = popup;\n    this.volumeBar = vb;\n\n    this.attachVolumeBarEvents();\n\n    return popup;\n  };\n\n  /**\n   * This gets called when an `VolumeMenuButton` is \"clicked\". See\n   * {@link ClickableComponent} for more detailed information on what a click can be.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   */\n\n\n  VolumeMenuButton.prototype.handleClick = function handleClick(event) {\n    _muteToggle2['default'].prototype.handleClick.call(this);\n    _PopupButton.prototype.handleClick.call(this);\n  };\n\n  /**\n   * Add events listeners to the created `VolumeBar`.\n   */\n\n\n  VolumeMenuButton.prototype.attachVolumeBarEvents = function attachVolumeBarEvents() {\n    this.menuContent.on(['mousedown', 'touchdown'], Fn.bind(this, this.handleMouseDown));\n  };\n\n  /**\n   * Handle the `mousedown` and `touchdown` events on the `VolumeBar`\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `mousedown` or `touchdown` event that caused this to run.\n   *\n   * @listens mousedown\n   * @listens touchdown\n   */\n\n\n  VolumeMenuButton.prototype.handleMouseDown = function handleMouseDown(event) {\n    this.on(['mousemove', 'touchmove'], Fn.bind(this.volumeBar, this.volumeBar.handleMouseMove));\n    this.on(this.el_.ownerDocument, ['mouseup', 'touchend'], this.handleMouseUp);\n  };\n\n  /**\n   * Handle the `mouseup` and `touchend` events on the `VolumeBar`\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `mouseup` or `touchend` event that caused this to run.\n   *\n   * @listens mouseup\n   * @listens touchend\n   */\n\n\n  VolumeMenuButton.prototype.handleMouseUp = function handleMouseUp(event) {\n    this.off(['mousemove', 'touchmove'], Fn.bind(this.volumeBar, this.volumeBar.handleMouseMove));\n  };\n\n  return VolumeMenuButton;\n}(_popupButton2['default']);\n\n/**\n * @borrows MuteToggle#update as VolumeMenuButton#volumeUpdate\n */\n\n\nVolumeMenuButton.prototype.volumeUpdate = _muteToggle2['default'].prototype.update;\n\n/**\n * The text that should display over the `VolumeMenuButton`s controls. Added for localization.\n *\n * @type {string}\n * @private\n */\nVolumeMenuButton.prototype.controlText_ = 'Mute';\n\n_component2['default'].registerComponent('VolumeMenuButton', VolumeMenuButton);\nexports['default'] = VolumeMenuButton;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/video.js/es5/control-bar/volume-menu-button.js\n ** module id = 78\n ** module chunks = 0 1\n **/","'use strict';\n\nexports.__esModule = true;\n\nvar _component = require('../component.js');\n\nvar _component2 = _interopRequireDefault(_component);\n\nvar _dom = require('../utils/dom.js');\n\nvar Dom = _interopRequireWildcard(_dom);\n\nvar _fn = require('../utils/fn.js');\n\nvar Fn = _interopRequireWildcard(_fn);\n\nvar _events = require('../utils/events.js');\n\nvar Events = _interopRequireWildcard(_events);\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj['default'] = obj; return newObj; } }\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /**\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * @file popup.js\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                */\n\n\n/**\n * The Popup component is used to build pop up controls.\n *\n * @extends Component\n */\nvar Popup = function (_Component) {\n  _inherits(Popup, _Component);\n\n  function Popup() {\n    _classCallCheck(this, Popup);\n\n    return _possibleConstructorReturn(this, _Component.apply(this, arguments));\n  }\n\n  /**\n   * Add a popup item to the popup\n   *\n   * @param {Object|string} component\n   *        Component or component type to add\n   *\n   */\n  Popup.prototype.addItem = function addItem(component) {\n    this.addChild(component);\n    component.on('click', Fn.bind(this, function () {\n      this.unlockShowing();\n    }));\n  };\n\n  /**\n   * Create the `PopupButton`s DOM element.\n   *\n   * @return {Element}\n   *         The element that gets created.\n   */\n\n\n  Popup.prototype.createEl = function createEl() {\n    var contentElType = this.options_.contentElType || 'ul';\n\n    this.contentEl_ = Dom.createEl(contentElType, {\n      className: 'vjs-menu-content'\n    });\n\n    var el = _Component.prototype.createEl.call(this, 'div', {\n      append: this.contentEl_,\n      className: 'vjs-menu'\n    });\n\n    el.appendChild(this.contentEl_);\n\n    // Prevent clicks from bubbling up. Needed for Popup Buttons,\n    // where a click on the parent is significant\n    Events.on(el, 'click', function (event) {\n      event.preventDefault();\n      event.stopImmediatePropagation();\n    });\n\n    return el;\n  };\n\n  return Popup;\n}(_component2['default']);\n\n_component2['default'].registerComponent('Popup', Popup);\nexports['default'] = Popup;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/video.js/es5/popup/popup.js\n ** module id = 79\n ** module chunks = 0 1\n **/","'use strict';\n\nexports.__esModule = true;\n\nvar _clickableComponent = require('../clickable-component.js');\n\nvar _clickableComponent2 = _interopRequireDefault(_clickableComponent);\n\nvar _component = require('../component.js');\n\nvar _component2 = _interopRequireDefault(_component);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /**\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * @file popup-button.js\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                */\n\n\n/**\n * A button class for use with {@link Popup} controls\n *\n * @extends ClickableComponent\n */\nvar PopupButton = function (_ClickableComponent) {\n  _inherits(PopupButton, _ClickableComponent);\n\n  /**\n   * Create an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function PopupButton(player) {\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n    _classCallCheck(this, PopupButton);\n\n    var _this = _possibleConstructorReturn(this, _ClickableComponent.call(this, player, options));\n\n    _this.update();\n    return _this;\n  }\n\n  /**\n   * Update the `Popup` that this button is attached to.\n   */\n\n\n  PopupButton.prototype.update = function update() {\n    var popup = this.createPopup();\n\n    if (this.popup) {\n      this.removeChild(this.popup);\n    }\n\n    this.popup = popup;\n    this.addChild(popup);\n\n    if (this.items && this.items.length === 0) {\n      this.hide();\n    } else if (this.items && this.items.length > 1) {\n      this.show();\n    }\n  };\n\n  /**\n   * Create a `Popup`. - Override with specific functionality for component\n   *\n   * @abstract\n   */\n\n\n  PopupButton.prototype.createPopup = function createPopup() {};\n\n  /**\n   * Create the `PopupButton`s DOM element.\n   *\n   * @return {Element}\n   *         The element that gets created.\n   */\n\n\n  PopupButton.prototype.createEl = function createEl() {\n    return _ClickableComponent.prototype.createEl.call(this, 'div', {\n      className: this.buildCSSClass()\n    });\n  };\n\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n\n\n  PopupButton.prototype.buildCSSClass = function buildCSSClass() {\n    var menuButtonClass = 'vjs-menu-button';\n\n    // If the inline option is passed, we want to use different styles altogether.\n    if (this.options_.inline === true) {\n      menuButtonClass += '-inline';\n    } else {\n      menuButtonClass += '-popup';\n    }\n\n    return 'vjs-menu-button ' + menuButtonClass + ' ' + _ClickableComponent.prototype.buildCSSClass.call(this);\n  };\n\n  return PopupButton;\n}(_clickableComponent2['default']);\n\n_component2['default'].registerComponent('PopupButton', PopupButton);\nexports['default'] = PopupButton;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/video.js/es5/popup/popup-button.js\n ** module id = 80\n ** module chunks = 0 1\n **/","'use strict';\n\nexports.__esModule = true;\n\nvar _button = require('../button');\n\nvar _button2 = _interopRequireDefault(_button);\n\nvar _component = require('../component');\n\nvar _component2 = _interopRequireDefault(_component);\n\nvar _dom = require('../utils/dom.js');\n\nvar Dom = _interopRequireWildcard(_dom);\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj['default'] = obj; return newObj; } }\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /**\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * @file mute-toggle.js\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                */\n\n\n/**\n * A button component for muting the audio.\n *\n * @extends Button\n */\nvar MuteToggle = function (_Button) {\n  _inherits(MuteToggle, _Button);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function MuteToggle(player, options) {\n    _classCallCheck(this, MuteToggle);\n\n    var _this = _possibleConstructorReturn(this, _Button.call(this, player, options));\n\n    _this.on(player, 'volumechange', _this.update);\n\n    // hide mute toggle if the current tech doesn't support volume control\n    if (player.tech_ && player.tech_.featuresVolumeControl === false) {\n      _this.addClass('vjs-hidden');\n    }\n\n    _this.on(player, 'loadstart', function () {\n      // We need to update the button to account for a default muted state.\n      this.update();\n\n      if (player.tech_.featuresVolumeControl === false) {\n        this.addClass('vjs-hidden');\n      } else {\n        this.removeClass('vjs-hidden');\n      }\n    });\n    return _this;\n  }\n\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n\n\n  MuteToggle.prototype.buildCSSClass = function buildCSSClass() {\n    return 'vjs-mute-control ' + _Button.prototype.buildCSSClass.call(this);\n  };\n\n  /**\n   * This gets called when an `MuteToggle` is \"clicked\". See\n   * {@link ClickableComponent} for more detailed information on what a click can be.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   */\n\n\n  MuteToggle.prototype.handleClick = function handleClick(event) {\n    this.player_.muted(this.player_.muted() ? false : true);\n  };\n\n  /**\n   * Update the state of volume.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The {@link Player#loadstart} event if this function was called through an\n   *        event.\n   *\n   * @listens Player#loadstart\n   */\n\n\n  MuteToggle.prototype.update = function update(event) {\n    var vol = this.player_.volume();\n    var level = 3;\n\n    if (vol === 0 || this.player_.muted()) {\n      level = 0;\n    } else if (vol < 0.33) {\n      level = 1;\n    } else if (vol < 0.67) {\n      level = 2;\n    }\n\n    // Don't rewrite the button text if the actual text doesn't change.\n    // This causes unnecessary and confusing information for screen reader users.\n    // This check is needed because this function gets called every time the volume level is changed.\n    var toMute = this.player_.muted() ? 'Unmute' : 'Mute';\n\n    if (this.controlText() !== toMute) {\n      this.controlText(toMute);\n    }\n\n    // TODO improve muted icon classes\n    for (var i = 0; i < 4; i++) {\n      Dom.removeElClass(this.el_, 'vjs-vol-' + i);\n    }\n    Dom.addElClass(this.el_, 'vjs-vol-' + level);\n  };\n\n  return MuteToggle;\n}(_button2['default']);\n\n/**\n * The text that should display over the `MuteToggle`s controls. Added for localization.\n *\n * @type {string}\n * @private\n */\n\n\nMuteToggle.prototype.controlText_ = 'Mute';\n\n_component2['default'].registerComponent('MuteToggle', MuteToggle);\nexports['default'] = MuteToggle;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/video.js/es5/control-bar/mute-toggle.js\n ** module id = 81\n ** module chunks = 0 1\n **/","'use strict';\n\nexports.__esModule = true;\n\nvar _textTrackButton = require('./text-track-button.js');\n\nvar _textTrackButton2 = _interopRequireDefault(_textTrackButton);\n\nvar _component = require('../../component.js');\n\nvar _component2 = _interopRequireDefault(_component);\n\nvar _chaptersTrackMenuItem = require('./chapters-track-menu-item.js');\n\nvar _chaptersTrackMenuItem2 = _interopRequireDefault(_chaptersTrackMenuItem);\n\nvar _toTitleCase = require('../../utils/to-title-case.js');\n\nvar _toTitleCase2 = _interopRequireDefault(_toTitleCase);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /**\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * @file chapters-button.js\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                */\n\n\n/**\n * The button component for toggling and selecting chapters\n * Chapters act much differently than other text tracks\n * Cues are navigation vs. other tracks of alternative languages\n *\n * @extends TextTrackButton\n */\nvar ChaptersButton = function (_TextTrackButton) {\n  _inherits(ChaptersButton, _TextTrackButton);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   *\n   * @param {Component~ReadyCallback} [ready]\n   *        The function to call when this function is ready.\n   */\n  function ChaptersButton(player, options, ready) {\n    _classCallCheck(this, ChaptersButton);\n\n    var _this = _possibleConstructorReturn(this, _TextTrackButton.call(this, player, options, ready));\n\n    _this.el_.setAttribute('aria-label', 'Chapters Menu');\n    return _this;\n  }\n\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n\n\n  ChaptersButton.prototype.buildCSSClass = function buildCSSClass() {\n    return 'vjs-chapters-button ' + _TextTrackButton.prototype.buildCSSClass.call(this);\n  };\n\n  /**\n   * Update the menu based on the current state of its items.\n   *\n   * @param {EventTarget~Event} [event]\n   *        An event that triggered this function to run.\n   *\n   * @listens TextTrackList#addtrack\n   * @listens TextTrackList#removetrack\n   * @listens TextTrackList#change\n   */\n\n\n  ChaptersButton.prototype.update = function update(event) {\n    if (!this.track_ || event && (event.type === 'addtrack' || event.type === 'removetrack')) {\n      this.setTrack(this.findChaptersTrack());\n    }\n    _TextTrackButton.prototype.update.call(this);\n  };\n\n  /**\n   * Set the currently selected track for the chapters button.\n   *\n   * @param {TextTrack} track\n   *        The new track to select. Nothing will change if this is the currently selected\n   *        track.\n   */\n\n\n  ChaptersButton.prototype.setTrack = function setTrack(track) {\n    if (this.track_ === track) {\n      return;\n    }\n\n    if (!this.updateHandler_) {\n      this.updateHandler_ = this.update.bind(this);\n    }\n\n    // here this.track_ refers to the old track instance\n    if (this.track_) {\n      var remoteTextTrackEl = this.player_.remoteTextTrackEls().getTrackElementByTrack_(this.track_);\n\n      if (remoteTextTrackEl) {\n        remoteTextTrackEl.removeEventListener('load', this.updateHandler_);\n      }\n\n      this.track_ = null;\n    }\n\n    this.track_ = track;\n\n    // here this.track_ refers to the new track instance\n    if (this.track_) {\n      this.track_.mode = 'hidden';\n\n      var _remoteTextTrackEl = this.player_.remoteTextTrackEls().getTrackElementByTrack_(this.track_);\n\n      if (_remoteTextTrackEl) {\n        _remoteTextTrackEl.addEventListener('load', this.updateHandler_);\n      }\n    }\n  };\n\n  /**\n   * Find the track object that is currently in use by this ChaptersButton\n   *\n   * @return {TextTrack|undefined}\n   *         The current track or undefined if none was found.\n   */\n\n\n  ChaptersButton.prototype.findChaptersTrack = function findChaptersTrack() {\n    var tracks = this.player_.textTracks() || [];\n\n    for (var i = tracks.length - 1; i >= 0; i--) {\n      // We will always choose the last track as our chaptersTrack\n      var track = tracks[i];\n\n      if (track.kind === this.kind_) {\n        return track;\n      }\n    }\n  };\n\n  /**\n   * Get the caption for the ChaptersButton based on the track label. This will also\n   * use the current tracks localized kind as a fallback if a label does not exist.\n   *\n   * @return {string}\n   *         The tracks current label or the localized track kind.\n   */\n\n\n  ChaptersButton.prototype.getMenuCaption = function getMenuCaption() {\n    if (this.track_ && this.track_.label) {\n      return this.track_.label;\n    }\n    return this.localize((0, _toTitleCase2['default'])(this.kind_));\n  };\n\n  /**\n   * Create menu from chapter track\n   *\n   * @return {Menu}\n   *         New menu for the chapter buttons\n   */\n\n\n  ChaptersButton.prototype.createMenu = function createMenu() {\n    this.options_.title = this.getMenuCaption();\n    return _TextTrackButton.prototype.createMenu.call(this);\n  };\n\n  /**\n   * Create a menu item for each text track\n   *\n   * @return {TextTrackMenuItem[]}\n   *         Array of menu items\n   */\n\n\n  ChaptersButton.prototype.createItems = function createItems() {\n    var items = [];\n\n    if (!this.track_) {\n      return items;\n    }\n\n    var cues = this.track_.cues;\n\n    if (!cues) {\n      return items;\n    }\n\n    for (var i = 0, l = cues.length; i < l; i++) {\n      var cue = cues[i];\n      var mi = new _chaptersTrackMenuItem2['default'](this.player_, { track: this.track_, cue: cue });\n\n      items.push(mi);\n    }\n\n    return items;\n  };\n\n  return ChaptersButton;\n}(_textTrackButton2['default']);\n\n/**\n * `kind` of TextTrack to look for to associate it with this menu.\n *\n * @type {string}\n * @private\n */\n\n\nChaptersButton.prototype.kind_ = 'chapters';\n\n/**\n * The text that should display over the `ChaptersButton`s controls. Added for localization.\n *\n * @type {string}\n * @private\n */\nChaptersButton.prototype.controlText_ = 'Chapters';\n\n_component2['default'].registerComponent('ChaptersButton', ChaptersButton);\nexports['default'] = ChaptersButton;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/video.js/es5/control-bar/text-track-controls/chapters-button.js\n ** module id = 82\n ** module chunks = 0 1\n **/","'use strict';\n\nexports.__esModule = true;\n\nvar _trackButton = require('../track-button.js');\n\nvar _trackButton2 = _interopRequireDefault(_trackButton);\n\nvar _component = require('../../component.js');\n\nvar _component2 = _interopRequireDefault(_component);\n\nvar _textTrackMenuItem = require('./text-track-menu-item.js');\n\nvar _textTrackMenuItem2 = _interopRequireDefault(_textTrackMenuItem);\n\nvar _offTextTrackMenuItem = require('./off-text-track-menu-item.js');\n\nvar _offTextTrackMenuItem2 = _interopRequireDefault(_offTextTrackMenuItem);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /**\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * @file text-track-button.js\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                */\n\n\n/**\n * The base class for buttons that toggle specific text track types (e.g. subtitles)\n *\n * @extends MenuButton\n */\nvar TextTrackButton = function (_TrackButton) {\n  _inherits(TextTrackButton, _TrackButton);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options={}]\n   *        The key/value store of player options.\n   */\n  function TextTrackButton(player) {\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n    _classCallCheck(this, TextTrackButton);\n\n    options.tracks = player.textTracks();\n\n    return _possibleConstructorReturn(this, _TrackButton.call(this, player, options));\n  }\n\n  /**\n   * Create a menu item for each text track\n   *\n   * @param {TextTrackMenuItem[]} [items=[]]\n   *        Existing array of items to use during creation\n   *\n   * @return {TextTrackMenuItem[]}\n   *         Array of menu items that were created\n   */\n\n\n  TextTrackButton.prototype.createItems = function createItems() {\n    var items = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n\n    // Add an OFF menu item to turn all tracks off\n    items.push(new _offTextTrackMenuItem2['default'](this.player_, { kind: this.kind_ }));\n\n    var tracks = this.player_.textTracks();\n\n    if (!tracks) {\n      return items;\n    }\n\n    for (var i = 0; i < tracks.length; i++) {\n      var track = tracks[i];\n\n      // only add tracks that are of the appropriate kind and have a label\n      if (track.kind === this.kind_) {\n        items.push(new _textTrackMenuItem2['default'](this.player_, {\n          track: track,\n          // MenuItem is selectable\n          selectable: true\n        }));\n      }\n    }\n\n    return items;\n  };\n\n  return TextTrackButton;\n}(_trackButton2['default']);\n\n_component2['default'].registerComponent('TextTrackButton', TextTrackButton);\nexports['default'] = TextTrackButton;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/video.js/es5/control-bar/text-track-controls/text-track-button.js\n ** module id = 83\n ** module chunks = 0 1\n **/","'use strict';\n\nexports.__esModule = true;\n\nvar _menuButton = require('../menu/menu-button.js');\n\nvar _menuButton2 = _interopRequireDefault(_menuButton);\n\nvar _component = require('../component.js');\n\nvar _component2 = _interopRequireDefault(_component);\n\nvar _fn = require('../utils/fn.js');\n\nvar Fn = _interopRequireWildcard(_fn);\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj['default'] = obj; return newObj; } }\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /**\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * @file track-button.js\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                */\n\n\n/**\n * The base class for buttons that toggle specific  track types (e.g. subtitles).\n *\n * @extends MenuButton\n */\nvar TrackButton = function (_MenuButton) {\n  _inherits(TrackButton, _MenuButton);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function TrackButton(player, options) {\n    _classCallCheck(this, TrackButton);\n\n    var tracks = options.tracks;\n\n    var _this = _possibleConstructorReturn(this, _MenuButton.call(this, player, options));\n\n    if (_this.items.length <= 1) {\n      _this.hide();\n    }\n\n    if (!tracks) {\n      return _possibleConstructorReturn(_this);\n    }\n\n    var updateHandler = Fn.bind(_this, _this.update);\n\n    tracks.addEventListener('removetrack', updateHandler);\n    tracks.addEventListener('addtrack', updateHandler);\n\n    _this.player_.on('dispose', function () {\n      tracks.removeEventListener('removetrack', updateHandler);\n      tracks.removeEventListener('addtrack', updateHandler);\n    });\n    return _this;\n  }\n\n  return TrackButton;\n}(_menuButton2['default']);\n\n_component2['default'].registerComponent('TrackButton', TrackButton);\nexports['default'] = TrackButton;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/video.js/es5/control-bar/track-button.js\n ** module id = 84\n ** module chunks = 0 1\n **/","'use strict';\n\nexports.__esModule = true;\n\nvar _clickableComponent = require('../clickable-component.js');\n\nvar _clickableComponent2 = _interopRequireDefault(_clickableComponent);\n\nvar _component = require('../component.js');\n\nvar _component2 = _interopRequireDefault(_component);\n\nvar _menu = require('./menu.js');\n\nvar _menu2 = _interopRequireDefault(_menu);\n\nvar _dom = require('../utils/dom.js');\n\nvar Dom = _interopRequireWildcard(_dom);\n\nvar _fn = require('../utils/fn.js');\n\nvar Fn = _interopRequireWildcard(_fn);\n\nvar _toTitleCase = require('../utils/to-title-case.js');\n\nvar _toTitleCase2 = _interopRequireDefault(_toTitleCase);\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj['default'] = obj; return newObj; } }\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /**\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * @file menu-button.js\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                */\n\n\n/**\n * A `MenuButton` class for any popup {@link Menu}.\n *\n * @extends ClickableComponent\n */\nvar MenuButton = function (_ClickableComponent) {\n  _inherits(MenuButton, _ClickableComponent);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options={}]\n   *        The key/value store of player options.\n   */\n  function MenuButton(player) {\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n    _classCallCheck(this, MenuButton);\n\n    var _this = _possibleConstructorReturn(this, _ClickableComponent.call(this, player, options));\n\n    _this.update();\n\n    _this.enabled_ = true;\n\n    _this.el_.setAttribute('aria-haspopup', 'true');\n    _this.el_.setAttribute('role', 'menuitem');\n    _this.on('keydown', _this.handleSubmenuKeyPress);\n    return _this;\n  }\n\n  /**\n   * Update the menu based on the current state of its items.\n   */\n\n\n  MenuButton.prototype.update = function update() {\n    var menu = this.createMenu();\n\n    if (this.menu) {\n      this.removeChild(this.menu);\n    }\n\n    this.menu = menu;\n    this.addChild(menu);\n\n    /**\n     * Track the state of the menu button\n     *\n     * @type {Boolean}\n     * @private\n     */\n    this.buttonPressed_ = false;\n    this.el_.setAttribute('aria-expanded', 'false');\n\n    if (this.items && this.items.length === 0) {\n      this.hide();\n    } else if (this.items && this.items.length > 1) {\n      this.show();\n    }\n  };\n\n  /**\n   * Create the menu and add all items to it.\n   *\n   * @return {Menu}\n   *         The constructed menu\n   */\n\n\n  MenuButton.prototype.createMenu = function createMenu() {\n    var menu = new _menu2['default'](this.player_);\n\n    // Add a title list item to the top\n    if (this.options_.title) {\n      var title = Dom.createEl('li', {\n        className: 'vjs-menu-title',\n        innerHTML: (0, _toTitleCase2['default'])(this.options_.title),\n        tabIndex: -1\n      });\n\n      menu.children_.unshift(title);\n      Dom.insertElFirst(title, menu.contentEl());\n    }\n\n    this.items = this.createItems();\n\n    if (this.items) {\n      // Add menu items to the menu\n      for (var i = 0; i < this.items.length; i++) {\n        menu.addItem(this.items[i]);\n      }\n    }\n\n    return menu;\n  };\n\n  /**\n   * Create the list of menu items. Specific to each subclass.\n   *\n   * @abstract\n   */\n\n\n  MenuButton.prototype.createItems = function createItems() {};\n\n  /**\n   * Create the `MenuButtons`s DOM element.\n   *\n   * @return {Element}\n   *         The element that gets created.\n   */\n\n\n  MenuButton.prototype.createEl = function createEl() {\n    return _ClickableComponent.prototype.createEl.call(this, 'div', {\n      className: this.buildCSSClass()\n    });\n  };\n\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n\n\n  MenuButton.prototype.buildCSSClass = function buildCSSClass() {\n    var menuButtonClass = 'vjs-menu-button';\n\n    // If the inline option is passed, we want to use different styles altogether.\n    if (this.options_.inline === true) {\n      menuButtonClass += '-inline';\n    } else {\n      menuButtonClass += '-popup';\n    }\n\n    return 'vjs-menu-button ' + menuButtonClass + ' ' + _ClickableComponent.prototype.buildCSSClass.call(this);\n  };\n\n  /**\n   * Handle a click on a `MenuButton`.\n   * See {@link ClickableComponent#handleClick} for instances where this is called.\n   *\n   * @param {EventTarget~Event} event\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   */\n\n\n  MenuButton.prototype.handleClick = function handleClick(event) {\n    // When you click the button it adds focus, which will show the menu.\n    // So we'll remove focus when the mouse leaves the button. Focus is needed\n    // for tab navigation.\n\n    this.one(this.menu.contentEl(), 'mouseleave', Fn.bind(this, function (e) {\n      this.unpressButton();\n      this.el_.blur();\n    }));\n    if (this.buttonPressed_) {\n      this.unpressButton();\n    } else {\n      this.pressButton();\n    }\n  };\n\n  /**\n   * Handle tab, escape, down arrow, and up arrow keys for `MenuButton`. See\n   * {@link ClickableComponent#handleKeyPress} for instances where this is called.\n   *\n   * @param {EventTarget~Event} event\n   *        The `keydown` event that caused this function to be called.\n   *\n   * @listens keydown\n   */\n\n\n  MenuButton.prototype.handleKeyPress = function handleKeyPress(event) {\n\n    // Escape (27) key or Tab (9) key unpress the 'button'\n    if (event.which === 27 || event.which === 9) {\n      if (this.buttonPressed_) {\n        this.unpressButton();\n      }\n      // Don't preventDefault for Tab key - we still want to lose focus\n      if (event.which !== 9) {\n        event.preventDefault();\n      }\n      // Up (38) key or Down (40) key press the 'button'\n    } else if (event.which === 38 || event.which === 40) {\n      if (!this.buttonPressed_) {\n        this.pressButton();\n        event.preventDefault();\n      }\n    } else {\n      _ClickableComponent.prototype.handleKeyPress.call(this, event);\n    }\n  };\n\n  /**\n   * Handle a `keydown` event on a sub-menu. The listener for this is added in\n   * the constructor.\n   *\n   * @param {EventTarget~Event} event\n   *        Key press event\n   *\n   * @listens keydown\n   */\n\n\n  MenuButton.prototype.handleSubmenuKeyPress = function handleSubmenuKeyPress(event) {\n\n    // Escape (27) key or Tab (9) key unpress the 'button'\n    if (event.which === 27 || event.which === 9) {\n      if (this.buttonPressed_) {\n        this.unpressButton();\n      }\n      // Don't preventDefault for Tab key - we still want to lose focus\n      if (event.which !== 9) {\n        event.preventDefault();\n      }\n    }\n  };\n\n  /**\n   * Put the current `MenuButton` into a pressed state.\n   */\n\n\n  MenuButton.prototype.pressButton = function pressButton() {\n    if (this.enabled_) {\n      this.buttonPressed_ = true;\n      this.menu.lockShowing();\n      this.el_.setAttribute('aria-expanded', 'true');\n      // set the focus into the submenu\n      this.menu.focus();\n    }\n  };\n\n  /**\n   * Take the current `MenuButton` out of a pressed state.\n   */\n\n\n  MenuButton.prototype.unpressButton = function unpressButton() {\n    if (this.enabled_) {\n      this.buttonPressed_ = false;\n      this.menu.unlockShowing();\n      this.el_.setAttribute('aria-expanded', 'false');\n      // Set focus back to this menu button\n      this.el_.focus();\n    }\n  };\n\n  /**\n   * Disable the `MenuButton`. Don't allow it to be clicked.\n   *\n   * @return {MenuButton}\n   *         Returns itself; method can be chained.\n   */\n\n\n  MenuButton.prototype.disable = function disable() {\n    // Unpress, but don't force focus on this button\n    this.buttonPressed_ = false;\n    this.menu.unlockShowing();\n    this.el_.setAttribute('aria-expanded', 'false');\n\n    this.enabled_ = false;\n\n    return _ClickableComponent.prototype.disable.call(this);\n  };\n\n  /**\n   * Enable the `MenuButton`. Allow it to be clicked.\n   *\n   * @return {MenuButton}\n   *         Returns itself; method can be chained.\n   */\n\n\n  MenuButton.prototype.enable = function enable() {\n    this.enabled_ = true;\n\n    return _ClickableComponent.prototype.enable.call(this);\n  };\n\n  return MenuButton;\n}(_clickableComponent2['default']);\n\n_component2['default'].registerComponent('MenuButton', MenuButton);\nexports['default'] = MenuButton;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/video.js/es5/menu/menu-button.js\n ** module id = 85\n ** module chunks = 0 1\n **/","'use strict';\n\nexports.__esModule = true;\n\nvar _component = require('../component.js');\n\nvar _component2 = _interopRequireDefault(_component);\n\nvar _dom = require('../utils/dom.js');\n\nvar Dom = _interopRequireWildcard(_dom);\n\nvar _fn = require('../utils/fn.js');\n\nvar Fn = _interopRequireWildcard(_fn);\n\nvar _events = require('../utils/events.js');\n\nvar Events = _interopRequireWildcard(_events);\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj['default'] = obj; return newObj; } }\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /**\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * @file menu.js\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                */\n\n\n/**\n * The Menu component is used to build popup menus, including subtitle and\n * captions selection menus.\n *\n * @extends Component\n */\nvar Menu = function (_Component) {\n  _inherits(Menu, _Component);\n\n  /**\n   * Create an instance of this class.\n   *\n   * @param {Player} player\n   *        the player that this component should attach to\n   *\n   * @param {Object} [options]\n   *        Object of option names and values\n   *\n   */\n  function Menu(player, options) {\n    _classCallCheck(this, Menu);\n\n    var _this = _possibleConstructorReturn(this, _Component.call(this, player, options));\n\n    _this.focusedChild_ = -1;\n\n    _this.on('keydown', _this.handleKeyPress);\n    return _this;\n  }\n\n  /**\n   * Add a {@link MenuItem} to the menu.\n   *\n   * @param {Object|string} component\n   *        The name or instance of the `MenuItem` to add.\n   *\n   */\n\n\n  Menu.prototype.addItem = function addItem(component) {\n    this.addChild(component);\n    component.on('click', Fn.bind(this, function (event) {\n      this.unlockShowing();\n      // TODO: Need to set keyboard focus back to the menuButton\n    }));\n  };\n\n  /**\n   * Create the `Menu`s DOM element.\n   *\n   * @return {Element}\n   *         the element that was created\n   */\n\n\n  Menu.prototype.createEl = function createEl() {\n    var contentElType = this.options_.contentElType || 'ul';\n\n    this.contentEl_ = Dom.createEl(contentElType, {\n      className: 'vjs-menu-content'\n    });\n\n    this.contentEl_.setAttribute('role', 'menu');\n\n    var el = _Component.prototype.createEl.call(this, 'div', {\n      append: this.contentEl_,\n      className: 'vjs-menu'\n    });\n\n    el.setAttribute('role', 'presentation');\n    el.appendChild(this.contentEl_);\n\n    // Prevent clicks from bubbling up. Needed for Menu Buttons,\n    // where a click on the parent is significant\n    Events.on(el, 'click', function (event) {\n      event.preventDefault();\n      event.stopImmediatePropagation();\n    });\n\n    return el;\n  };\n\n  /**\n   * Handle a `keydown` event on this menu. This listener is added in the constructor.\n   *\n   * @param {EventTarget~Event} event\n   *        A `keydown` event that happened on the menu.\n   *\n   * @listens keydown\n   */\n\n\n  Menu.prototype.handleKeyPress = function handleKeyPress(event) {\n    // Left and Down Arrows\n    if (event.which === 37 || event.which === 40) {\n      event.preventDefault();\n      this.stepForward();\n\n      // Up and Right Arrows\n    } else if (event.which === 38 || event.which === 39) {\n      event.preventDefault();\n      this.stepBack();\n    }\n  };\n\n  /**\n   * Move to next (lower) menu item for keyboard users.\n   */\n\n\n  Menu.prototype.stepForward = function stepForward() {\n    var stepChild = 0;\n\n    if (this.focusedChild_ !== undefined) {\n      stepChild = this.focusedChild_ + 1;\n    }\n    this.focus(stepChild);\n  };\n\n  /**\n   * Move to previous (higher) menu item for keyboard users.\n   */\n\n\n  Menu.prototype.stepBack = function stepBack() {\n    var stepChild = 0;\n\n    if (this.focusedChild_ !== undefined) {\n      stepChild = this.focusedChild_ - 1;\n    }\n    this.focus(stepChild);\n  };\n\n  /**\n   * Set focus on a {@link MenuItem} in the `Menu`.\n   *\n   * @param {Object|string} [item=0]\n   *        Index of child item set focus on.\n   */\n\n\n  Menu.prototype.focus = function focus() {\n    var item = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n\n    var children = this.children().slice();\n    var haveTitle = children.length && children[0].className && /vjs-menu-title/.test(children[0].className);\n\n    if (haveTitle) {\n      children.shift();\n    }\n\n    if (children.length > 0) {\n      if (item < 0) {\n        item = 0;\n      } else if (item >= children.length) {\n        item = children.length - 1;\n      }\n\n      this.focusedChild_ = item;\n\n      children[item].el_.focus();\n    }\n  };\n\n  return Menu;\n}(_component2['default']);\n\n_component2['default'].registerComponent('Menu', Menu);\nexports['default'] = Menu;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/video.js/es5/menu/menu.js\n ** module id = 86\n ** module chunks = 0 1\n **/","'use strict';\n\nexports.__esModule = true;\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nvar _menuItem = require('../../menu/menu-item.js');\n\nvar _menuItem2 = _interopRequireDefault(_menuItem);\n\nvar _component = require('../../component.js');\n\nvar _component2 = _interopRequireDefault(_component);\n\nvar _fn = require('../../utils/fn.js');\n\nvar Fn = _interopRequireWildcard(_fn);\n\nvar _window = require('global/window');\n\nvar _window2 = _interopRequireDefault(_window);\n\nvar _document = require('global/document');\n\nvar _document2 = _interopRequireDefault(_document);\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj['default'] = obj; return newObj; } }\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /**\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * @file text-track-menu-item.js\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                */\n\n\n/**\n * The specific menu item type for selecting a language within a text track kind\n *\n * @extends MenuItem\n */\nvar TextTrackMenuItem = function (_MenuItem) {\n  _inherits(TextTrackMenuItem, _MenuItem);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function TextTrackMenuItem(player, options) {\n    _classCallCheck(this, TextTrackMenuItem);\n\n    var track = options.track;\n    var tracks = player.textTracks();\n\n    // Modify options for parent MenuItem class's init.\n    options.label = track.label || track.language || 'Unknown';\n    options.selected = track['default'] || track.mode === 'showing';\n\n    var _this = _possibleConstructorReturn(this, _MenuItem.call(this, player, options));\n\n    _this.track = track;\n\n    if (tracks) {\n      (function () {\n        var changeHandler = Fn.bind(_this, _this.handleTracksChange);\n\n        tracks.addEventListener('change', changeHandler);\n        _this.on('dispose', function () {\n          tracks.removeEventListener('change', changeHandler);\n        });\n      })();\n    }\n\n    // iOS7 doesn't dispatch change events to TextTrackLists when an\n    // associated track's mode changes. Without something like\n    // Object.observe() (also not present on iOS7), it's not\n    // possible to detect changes to the mode attribute and polyfill\n    // the change event. As a poor substitute, we manually dispatch\n    // change events whenever the controls modify the mode.\n    if (tracks && tracks.onchange === undefined) {\n      (function () {\n        var event = void 0;\n\n        _this.on(['tap', 'click'], function () {\n          if (_typeof(_window2['default'].Event) !== 'object') {\n            // Android 2.3 throws an Illegal Constructor error for window.Event\n            try {\n              event = new _window2['default'].Event('change');\n            } catch (err) {\n              // continue regardless of error\n            }\n          }\n\n          if (!event) {\n            event = _document2['default'].createEvent('Event');\n            event.initEvent('change', true, true);\n          }\n\n          tracks.dispatchEvent(event);\n        });\n      })();\n    }\n    return _this;\n  }\n\n  /**\n   * This gets called when an `TextTrackMenuItem` is \"clicked\". See\n   * {@link ClickableComponent} for more detailed information on what a click can be.\n   *\n   * @param {EventTarget~Event} event\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   */\n\n\n  TextTrackMenuItem.prototype.handleClick = function handleClick(event) {\n    var kind = this.track.kind;\n    var tracks = this.player_.textTracks();\n\n    _MenuItem.prototype.handleClick.call(this, event);\n\n    if (!tracks) {\n      return;\n    }\n\n    for (var i = 0; i < tracks.length; i++) {\n      var track = tracks[i];\n\n      if (track.kind !== kind) {\n        continue;\n      }\n\n      if (track === this.track) {\n        track.mode = 'showing';\n      } else {\n        track.mode = 'disabled';\n      }\n    }\n  };\n\n  /**\n   * Handle text track list change\n   *\n   * @param {EventTarget~Event} event\n   *        The `change` event that caused this function to be called.\n   *\n   * @listens TextTrackList#change\n   */\n\n\n  TextTrackMenuItem.prototype.handleTracksChange = function handleTracksChange(event) {\n    this.selected(this.track.mode === 'showing');\n  };\n\n  return TextTrackMenuItem;\n}(_menuItem2['default']);\n\n_component2['default'].registerComponent('TextTrackMenuItem', TextTrackMenuItem);\nexports['default'] = TextTrackMenuItem;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/video.js/es5/control-bar/text-track-controls/text-track-menu-item.js\n ** module id = 87\n ** module chunks = 0 1\n **/","'use strict';\n\nexports.__esModule = true;\n\nvar _clickableComponent = require('../clickable-component.js');\n\nvar _clickableComponent2 = _interopRequireDefault(_clickableComponent);\n\nvar _component = require('../component.js');\n\nvar _component2 = _interopRequireDefault(_component);\n\nvar _obj = require('../utils/obj');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /**\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * @file menu-item.js\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                */\n\n\n/**\n * The component for a menu item. `<li>`\n *\n * @extends ClickableComponent\n */\nvar MenuItem = function (_ClickableComponent) {\n  _inherits(MenuItem, _ClickableComponent);\n\n  /**\n   * Creates an instance of the this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options={}]\n   *        The key/value store of player options.\n   *\n   */\n  function MenuItem(player, options) {\n    _classCallCheck(this, MenuItem);\n\n    var _this = _possibleConstructorReturn(this, _ClickableComponent.call(this, player, options));\n\n    _this.selectable = options.selectable;\n\n    _this.selected(options.selected);\n\n    if (_this.selectable) {\n      // TODO: May need to be either menuitemcheckbox or menuitemradio,\n      //       and may need logical grouping of menu items.\n      _this.el_.setAttribute('role', 'menuitemcheckbox');\n    } else {\n      _this.el_.setAttribute('role', 'menuitem');\n    }\n    return _this;\n  }\n\n  /**\n   * Create the `MenuItem's DOM element\n   *\n   * @param {string} [type=li]\n   *        Element's node type, not actually used, always set to `li`.\n   *\n   * @param {Object} [props={}]\n   *        An object of properties that should be set on the element\n   *\n   * @param {Object} [attrs={}]\n   *        An object of attributes that should be set on the element\n   *\n   * @return {Element}\n   *         The element that gets created.\n   */\n\n\n  MenuItem.prototype.createEl = function createEl(type, props, attrs) {\n    return _ClickableComponent.prototype.createEl.call(this, 'li', (0, _obj.assign)({\n      className: 'vjs-menu-item',\n      innerHTML: this.localize(this.options_.label),\n      tabIndex: -1\n    }, props), attrs);\n  };\n\n  /**\n   * Any click on a `MenuItem` puts int into the selected state.\n   * See {@link ClickableComponent#handleClick} for instances where this is called.\n   *\n   * @param {EventTarget~Event} event\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   */\n\n\n  MenuItem.prototype.handleClick = function handleClick(event) {\n    this.selected(true);\n  };\n\n  /**\n   * Set the state for this menu item as selected or not.\n   *\n   * @param {boolean} selected\n   *        if the menu item is selected or not\n   */\n\n\n  MenuItem.prototype.selected = function selected(_selected) {\n    if (this.selectable) {\n      if (_selected) {\n        this.addClass('vjs-selected');\n        this.el_.setAttribute('aria-checked', 'true');\n        // aria-checked isn't fully supported by browsers/screen readers,\n        // so indicate selected state to screen reader in the control text.\n        this.controlText(', selected');\n      } else {\n        this.removeClass('vjs-selected');\n        this.el_.setAttribute('aria-checked', 'false');\n        // Indicate un-selected state to screen reader\n        // Note that a space clears out the selected state text\n        this.controlText(' ');\n      }\n    }\n  };\n\n  return MenuItem;\n}(_clickableComponent2['default']);\n\n_component2['default'].registerComponent('MenuItem', MenuItem);\nexports['default'] = MenuItem;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/video.js/es5/menu/menu-item.js\n ** module id = 88\n ** module chunks = 0 1\n **/","'use strict';\n\nexports.__esModule = true;\n\nvar _textTrackMenuItem = require('./text-track-menu-item.js');\n\nvar _textTrackMenuItem2 = _interopRequireDefault(_textTrackMenuItem);\n\nvar _component = require('../../component.js');\n\nvar _component2 = _interopRequireDefault(_component);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /**\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * @file off-text-track-menu-item.js\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                */\n\n\n/**\n * A special menu item for turning of a specific type of text track\n *\n * @extends TextTrackMenuItem\n */\nvar OffTextTrackMenuItem = function (_TextTrackMenuItem) {\n  _inherits(OffTextTrackMenuItem, _TextTrackMenuItem);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function OffTextTrackMenuItem(player, options) {\n    _classCallCheck(this, OffTextTrackMenuItem);\n\n    // Create pseudo track info\n    // Requires options['kind']\n    options.track = {\n      player: player,\n      kind: options.kind,\n      label: options.kind + ' off',\n      'default': false,\n      mode: 'disabled'\n    };\n\n    // MenuItem is selectable\n    options.selectable = true;\n\n    var _this = _possibleConstructorReturn(this, _TextTrackMenuItem.call(this, player, options));\n\n    _this.selected(true);\n    return _this;\n  }\n\n  /**\n   * Handle text track change\n   *\n   * @param {EventTarget~Event} event\n   *        The event that caused this function to run\n   */\n\n\n  OffTextTrackMenuItem.prototype.handleTracksChange = function handleTracksChange(event) {\n    var tracks = this.player().textTracks();\n    var selected = true;\n\n    for (var i = 0, l = tracks.length; i < l; i++) {\n      var track = tracks[i];\n\n      if (track.kind === this.track.kind && track.mode === 'showing') {\n        selected = false;\n        break;\n      }\n    }\n\n    this.selected(selected);\n  };\n\n  return OffTextTrackMenuItem;\n}(_textTrackMenuItem2['default']);\n\n_component2['default'].registerComponent('OffTextTrackMenuItem', OffTextTrackMenuItem);\nexports['default'] = OffTextTrackMenuItem;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/video.js/es5/control-bar/text-track-controls/off-text-track-menu-item.js\n ** module id = 89\n ** module chunks = 0 1\n **/","'use strict';\n\nexports.__esModule = true;\n\nvar _menuItem = require('../../menu/menu-item.js');\n\nvar _menuItem2 = _interopRequireDefault(_menuItem);\n\nvar _component = require('../../component.js');\n\nvar _component2 = _interopRequireDefault(_component);\n\nvar _fn = require('../../utils/fn.js');\n\nvar Fn = _interopRequireWildcard(_fn);\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj['default'] = obj; return newObj; } }\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /**\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * @file chapters-track-menu-item.js\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                */\n\n\n/**\n * The chapter track menu item\n *\n * @extends MenuItem\n */\nvar ChaptersTrackMenuItem = function (_MenuItem) {\n  _inherits(ChaptersTrackMenuItem, _MenuItem);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function ChaptersTrackMenuItem(player, options) {\n    _classCallCheck(this, ChaptersTrackMenuItem);\n\n    var track = options.track;\n    var cue = options.cue;\n    var currentTime = player.currentTime();\n\n    // Modify options for parent MenuItem class's init.\n    options.selectable = true;\n    options.label = cue.text;\n    options.selected = cue.startTime <= currentTime && currentTime < cue.endTime;\n\n    var _this = _possibleConstructorReturn(this, _MenuItem.call(this, player, options));\n\n    _this.track = track;\n    _this.cue = cue;\n    track.addEventListener('cuechange', Fn.bind(_this, _this.update));\n    return _this;\n  }\n\n  /**\n   * This gets called when an `ChaptersTrackMenuItem` is \"clicked\". See\n   * {@link ClickableComponent} for more detailed information on what a click can be.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   */\n\n\n  ChaptersTrackMenuItem.prototype.handleClick = function handleClick(event) {\n    _MenuItem.prototype.handleClick.call(this);\n    this.player_.currentTime(this.cue.startTime);\n    this.update(this.cue.startTime);\n  };\n\n  /**\n   * Update chapter menu item\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `cuechange` event that caused this function to run.\n   *\n   * @listens TextTrack#cuechange\n   */\n\n\n  ChaptersTrackMenuItem.prototype.update = function update(event) {\n    var cue = this.cue;\n    var currentTime = this.player_.currentTime();\n\n    // vjs.log(currentTime, cue.startTime);\n    this.selected(cue.startTime <= currentTime && currentTime < cue.endTime);\n  };\n\n  return ChaptersTrackMenuItem;\n}(_menuItem2['default']);\n\n_component2['default'].registerComponent('ChaptersTrackMenuItem', ChaptersTrackMenuItem);\nexports['default'] = ChaptersTrackMenuItem;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/video.js/es5/control-bar/text-track-controls/chapters-track-menu-item.js\n ** module id = 90\n ** module chunks = 0 1\n **/","'use strict';\n\nexports.__esModule = true;\n\nvar _textTrackButton = require('./text-track-button.js');\n\nvar _textTrackButton2 = _interopRequireDefault(_textTrackButton);\n\nvar _component = require('../../component.js');\n\nvar _component2 = _interopRequireDefault(_component);\n\nvar _fn = require('../../utils/fn.js');\n\nvar Fn = _interopRequireWildcard(_fn);\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj['default'] = obj; return newObj; } }\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /**\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * @file descriptions-button.js\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                */\n\n\n/**\n * The button component for toggling and selecting descriptions\n *\n * @extends TextTrackButton\n */\nvar DescriptionsButton = function (_TextTrackButton) {\n  _inherits(DescriptionsButton, _TextTrackButton);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   *\n   * @param {Component~ReadyCallback} [ready]\n   *        The function to call when this component is ready.\n   */\n  function DescriptionsButton(player, options, ready) {\n    _classCallCheck(this, DescriptionsButton);\n\n    var _this = _possibleConstructorReturn(this, _TextTrackButton.call(this, player, options, ready));\n\n    _this.el_.setAttribute('aria-label', 'Descriptions Menu');\n\n    var tracks = player.textTracks();\n\n    if (tracks) {\n      (function () {\n        var changeHandler = Fn.bind(_this, _this.handleTracksChange);\n\n        tracks.addEventListener('change', changeHandler);\n        _this.on('dispose', function () {\n          tracks.removeEventListener('change', changeHandler);\n        });\n      })();\n    }\n    return _this;\n  }\n\n  /**\n   * Handle text track change\n   *\n   * @param {EventTarget~Event} event\n   *        The event that caused this function to run\n   *\n   * @listens TextTrackList#change\n   */\n\n\n  DescriptionsButton.prototype.handleTracksChange = function handleTracksChange(event) {\n    var tracks = this.player().textTracks();\n    var disabled = false;\n\n    // Check whether a track of a different kind is showing\n    for (var i = 0, l = tracks.length; i < l; i++) {\n      var track = tracks[i];\n\n      if (track.kind !== this.kind_ && track.mode === 'showing') {\n        disabled = true;\n        break;\n      }\n    }\n\n    // If another track is showing, disable this menu button\n    if (disabled) {\n      this.disable();\n    } else {\n      this.enable();\n    }\n  };\n\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n\n\n  DescriptionsButton.prototype.buildCSSClass = function buildCSSClass() {\n    return 'vjs-descriptions-button ' + _TextTrackButton.prototype.buildCSSClass.call(this);\n  };\n\n  return DescriptionsButton;\n}(_textTrackButton2['default']);\n\n/**\n * `kind` of TextTrack to look for to associate it with this menu.\n *\n * @type {string}\n * @private\n */\n\n\nDescriptionsButton.prototype.kind_ = 'descriptions';\n\n/**\n * The text that should display over the `DescriptionsButton`s controls. Added for localization.\n *\n * @type {string}\n * @private\n */\nDescriptionsButton.prototype.controlText_ = 'Descriptions';\n\n_component2['default'].registerComponent('DescriptionsButton', DescriptionsButton);\nexports['default'] = DescriptionsButton;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/video.js/es5/control-bar/text-track-controls/descriptions-button.js\n ** module id = 91\n ** module chunks = 0 1\n **/","'use strict';\n\nexports.__esModule = true;\n\nvar _textTrackButton = require('./text-track-button.js');\n\nvar _textTrackButton2 = _interopRequireDefault(_textTrackButton);\n\nvar _component = require('../../component.js');\n\nvar _component2 = _interopRequireDefault(_component);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /**\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * @file subtitles-button.js\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                */\n\n\n/**\n * The button component for toggling and selecting subtitles\n *\n * @extends TextTrackButton\n */\nvar SubtitlesButton = function (_TextTrackButton) {\n  _inherits(SubtitlesButton, _TextTrackButton);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   *\n   * @param {Component~ReadyCallback} [ready]\n   *        The function to call when this component is ready.\n   */\n  function SubtitlesButton(player, options, ready) {\n    _classCallCheck(this, SubtitlesButton);\n\n    var _this = _possibleConstructorReturn(this, _TextTrackButton.call(this, player, options, ready));\n\n    _this.el_.setAttribute('aria-label', 'Subtitles Menu');\n    return _this;\n  }\n\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n\n\n  SubtitlesButton.prototype.buildCSSClass = function buildCSSClass() {\n    return 'vjs-subtitles-button ' + _TextTrackButton.prototype.buildCSSClass.call(this);\n  };\n\n  return SubtitlesButton;\n}(_textTrackButton2['default']);\n\n/**\n * `kind` of TextTrack to look for to associate it with this menu.\n *\n * @type {string}\n * @private\n */\n\n\nSubtitlesButton.prototype.kind_ = 'subtitles';\n\n/**\n * The text that should display over the `SubtitlesButton`s controls. Added for localization.\n *\n * @type {string}\n * @private\n */\nSubtitlesButton.prototype.controlText_ = 'Subtitles';\n\n_component2['default'].registerComponent('SubtitlesButton', SubtitlesButton);\nexports['default'] = SubtitlesButton;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/video.js/es5/control-bar/text-track-controls/subtitles-button.js\n ** module id = 92\n ** module chunks = 0 1\n **/","'use strict';\n\nexports.__esModule = true;\n\nvar _textTrackButton = require('./text-track-button.js');\n\nvar _textTrackButton2 = _interopRequireDefault(_textTrackButton);\n\nvar _component = require('../../component.js');\n\nvar _component2 = _interopRequireDefault(_component);\n\nvar _captionSettingsMenuItem = require('./caption-settings-menu-item.js');\n\nvar _captionSettingsMenuItem2 = _interopRequireDefault(_captionSettingsMenuItem);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /**\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * @file captions-button.js\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                */\n\n\n/**\n * The button component for toggling and selecting captions\n *\n * @extends TextTrackButton\n */\nvar CaptionsButton = function (_TextTrackButton) {\n  _inherits(CaptionsButton, _TextTrackButton);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   *\n   * @param {Component~ReadyCallback} [ready]\n   *        The function to call when this component is ready.\n   */\n  function CaptionsButton(player, options, ready) {\n    _classCallCheck(this, CaptionsButton);\n\n    var _this = _possibleConstructorReturn(this, _TextTrackButton.call(this, player, options, ready));\n\n    _this.el_.setAttribute('aria-label', 'Captions Menu');\n    return _this;\n  }\n\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n\n\n  CaptionsButton.prototype.buildCSSClass = function buildCSSClass() {\n    return 'vjs-captions-button ' + _TextTrackButton.prototype.buildCSSClass.call(this);\n  };\n\n  /**\n   * Update caption menu items\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `addtrack` or `removetrack` event that caused this function to be\n   *        called.\n   *\n   * @listens TextTrackList#addtrack\n   * @listens TextTrackList#removetrack\n   */\n\n\n  CaptionsButton.prototype.update = function update(event) {\n    var threshold = 2;\n\n    _TextTrackButton.prototype.update.call(this);\n\n    // if native, then threshold is 1 because no settings button\n    if (this.player().tech_ && this.player().tech_.featuresNativeTextTracks) {\n      threshold = 1;\n    }\n\n    if (this.items && this.items.length > threshold) {\n      this.show();\n    } else {\n      this.hide();\n    }\n  };\n\n  /**\n   * Create caption menu items\n   *\n   * @return {CaptionSettingsMenuItem[]}\n   *         The array of current menu items.\n   */\n\n\n  CaptionsButton.prototype.createItems = function createItems() {\n    var items = [];\n\n    if (!(this.player().tech_ && this.player().tech_.featuresNativeTextTracks)) {\n      items.push(new _captionSettingsMenuItem2['default'](this.player_, { kind: this.kind_ }));\n    }\n\n    return _TextTrackButton.prototype.createItems.call(this, items);\n  };\n\n  return CaptionsButton;\n}(_textTrackButton2['default']);\n\n/**\n * `kind` of TextTrack to look for to associate it with this menu.\n *\n * @type {string}\n * @private\n */\n\n\nCaptionsButton.prototype.kind_ = 'captions';\n\n/**\n * The text that should display over the `CaptionsButton`s controls. Added for localization.\n *\n * @type {string}\n * @private\n */\nCaptionsButton.prototype.controlText_ = 'Captions';\n\n_component2['default'].registerComponent('CaptionsButton', CaptionsButton);\nexports['default'] = CaptionsButton;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/video.js/es5/control-bar/text-track-controls/captions-button.js\n ** module id = 93\n ** module chunks = 0 1\n **/","'use strict';\n\nexports.__esModule = true;\n\nvar _textTrackMenuItem = require('./text-track-menu-item.js');\n\nvar _textTrackMenuItem2 = _interopRequireDefault(_textTrackMenuItem);\n\nvar _component = require('../../component.js');\n\nvar _component2 = _interopRequireDefault(_component);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /**\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * @file caption-settings-menu-item.js\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                */\n\n\n/**\n * The menu item for caption track settings menu\n *\n * @extends TextTrackMenuItem\n */\nvar CaptionSettingsMenuItem = function (_TextTrackMenuItem) {\n  _inherits(CaptionSettingsMenuItem, _TextTrackMenuItem);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function CaptionSettingsMenuItem(player, options) {\n    _classCallCheck(this, CaptionSettingsMenuItem);\n\n    options.track = {\n      player: player,\n      kind: options.kind,\n      label: options.kind + ' settings',\n      selectable: false,\n      'default': false,\n      mode: 'disabled'\n    };\n\n    // CaptionSettingsMenuItem has no concept of 'selected'\n    options.selectable = false;\n\n    var _this = _possibleConstructorReturn(this, _TextTrackMenuItem.call(this, player, options));\n\n    _this.addClass('vjs-texttrack-settings');\n    _this.controlText(', opens ' + options.kind + ' settings dialog');\n    return _this;\n  }\n\n  /**\n   * This gets called when an `CaptionSettingsMenuItem` is \"clicked\". See\n   * {@link ClickableComponent} for more detailed information on what a click can be.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   */\n\n\n  CaptionSettingsMenuItem.prototype.handleClick = function handleClick(event) {\n    this.player().getChild('textTrackSettings').show();\n    this.player().getChild('textTrackSettings').el_.focus();\n  };\n\n  return CaptionSettingsMenuItem;\n}(_textTrackMenuItem2['default']);\n\n_component2['default'].registerComponent('CaptionSettingsMenuItem', CaptionSettingsMenuItem);\nexports['default'] = CaptionSettingsMenuItem;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/video.js/es5/control-bar/text-track-controls/caption-settings-menu-item.js\n ** module id = 94\n ** module chunks = 0 1\n **/","'use strict';\n\nexports.__esModule = true;\n\nvar _trackButton = require('../track-button.js');\n\nvar _trackButton2 = _interopRequireDefault(_trackButton);\n\nvar _component = require('../../component.js');\n\nvar _component2 = _interopRequireDefault(_component);\n\nvar _audioTrackMenuItem = require('./audio-track-menu-item.js');\n\nvar _audioTrackMenuItem2 = _interopRequireDefault(_audioTrackMenuItem);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /**\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * @file audio-track-button.js\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                */\n\n\n/**\n * The base class for buttons that toggle specific {@link AudioTrack} types.\n *\n * @extends TrackButton\n */\nvar AudioTrackButton = function (_TrackButton) {\n  _inherits(AudioTrackButton, _TrackButton);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options={}]\n   *        The key/value store of player options.\n   */\n  function AudioTrackButton(player) {\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n    _classCallCheck(this, AudioTrackButton);\n\n    options.tracks = player.audioTracks && player.audioTracks();\n\n    var _this = _possibleConstructorReturn(this, _TrackButton.call(this, player, options));\n\n    _this.el_.setAttribute('aria-label', 'Audio Menu');\n    return _this;\n  }\n\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n\n\n  AudioTrackButton.prototype.buildCSSClass = function buildCSSClass() {\n    return 'vjs-audio-button ' + _TrackButton.prototype.buildCSSClass.call(this);\n  };\n\n  /**\n   * Create a menu item for each audio track\n   *\n   * @param {AudioTrackMenuItem[]} [items=[]]\n   *        An array of existing menu items to use.\n   *\n   * @return {AudioTrackMenuItem[]}\n   *         An array of menu items\n   */\n\n\n  AudioTrackButton.prototype.createItems = function createItems() {\n    var items = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n\n    var tracks = this.player_.audioTracks && this.player_.audioTracks();\n\n    if (!tracks) {\n      return items;\n    }\n\n    for (var i = 0; i < tracks.length; i++) {\n      var track = tracks[i];\n\n      items.push(new _audioTrackMenuItem2['default'](this.player_, {\n        track: track,\n        // MenuItem is selectable\n        selectable: true\n      }));\n    }\n\n    return items;\n  };\n\n  return AudioTrackButton;\n}(_trackButton2['default']);\n\n/**\n * The text that should display over the `AudioTrackButton`s controls. Added for localization.\n *\n * @type {string}\n * @private\n */\n\n\nAudioTrackButton.prototype.controlText_ = 'Audio Track';\n_component2['default'].registerComponent('AudioTrackButton', AudioTrackButton);\nexports['default'] = AudioTrackButton;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/video.js/es5/control-bar/audio-track-controls/audio-track-button.js\n ** module id = 95\n ** module chunks = 0 1\n **/","'use strict';\n\nexports.__esModule = true;\n\nvar _menuItem = require('../../menu/menu-item.js');\n\nvar _menuItem2 = _interopRequireDefault(_menuItem);\n\nvar _component = require('../../component.js');\n\nvar _component2 = _interopRequireDefault(_component);\n\nvar _fn = require('../../utils/fn.js');\n\nvar Fn = _interopRequireWildcard(_fn);\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj['default'] = obj; return newObj; } }\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /**\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * @file audio-track-menu-item.js\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                */\n\n\n/**\n * An {@link AudioTrack} {@link MenuItem}\n *\n * @extends MenuItem\n */\nvar AudioTrackMenuItem = function (_MenuItem) {\n  _inherits(AudioTrackMenuItem, _MenuItem);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function AudioTrackMenuItem(player, options) {\n    _classCallCheck(this, AudioTrackMenuItem);\n\n    var track = options.track;\n    var tracks = player.audioTracks();\n\n    // Modify options for parent MenuItem class's init.\n    options.label = track.label || track.language || 'Unknown';\n    options.selected = track.enabled;\n\n    var _this = _possibleConstructorReturn(this, _MenuItem.call(this, player, options));\n\n    _this.track = track;\n\n    if (tracks) {\n      (function () {\n        var changeHandler = Fn.bind(_this, _this.handleTracksChange);\n\n        tracks.addEventListener('change', changeHandler);\n        _this.on('dispose', function () {\n          tracks.removeEventListener('change', changeHandler);\n        });\n      })();\n    }\n    return _this;\n  }\n\n  /**\n   * This gets called when an `AudioTrackMenuItem is \"clicked\". See {@link ClickableComponent}\n   * for more detailed information on what a click can be.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   */\n\n\n  AudioTrackMenuItem.prototype.handleClick = function handleClick(event) {\n    var tracks = this.player_.audioTracks();\n\n    _MenuItem.prototype.handleClick.call(this, event);\n\n    if (!tracks) {\n      return;\n    }\n\n    for (var i = 0; i < tracks.length; i++) {\n      var track = tracks[i];\n\n      track.enabled = track === this.track;\n    }\n  };\n\n  /**\n   * Handle any {@link AudioTrack} change.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The {@link AudioTrackList#change} event that caused this to run.\n   *\n   * @listens AudioTrackList#change\n   */\n\n\n  AudioTrackMenuItem.prototype.handleTracksChange = function handleTracksChange(event) {\n    this.selected(this.track.enabled);\n  };\n\n  return AudioTrackMenuItem;\n}(_menuItem2['default']);\n\n_component2['default'].registerComponent('AudioTrackMenuItem', AudioTrackMenuItem);\nexports['default'] = AudioTrackMenuItem;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/video.js/es5/control-bar/audio-track-controls/audio-track-menu-item.js\n ** module id = 96\n ** module chunks = 0 1\n **/","'use strict';\n\nexports.__esModule = true;\n\nvar _menuButton = require('../../menu/menu-button.js');\n\nvar _menuButton2 = _interopRequireDefault(_menuButton);\n\nvar _menu = require('../../menu/menu.js');\n\nvar _menu2 = _interopRequireDefault(_menu);\n\nvar _playbackRateMenuItem = require('./playback-rate-menu-item.js');\n\nvar _playbackRateMenuItem2 = _interopRequireDefault(_playbackRateMenuItem);\n\nvar _component = require('../../component.js');\n\nvar _component2 = _interopRequireDefault(_component);\n\nvar _dom = require('../../utils/dom.js');\n\nvar Dom = _interopRequireWildcard(_dom);\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj['default'] = obj; return newObj; } }\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /**\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * @file playback-rate-menu-button.js\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                */\n\n\n/**\n * The component for controlling the playback rate.\n *\n * @extends MenuButton\n */\nvar PlaybackRateMenuButton = function (_MenuButton) {\n  _inherits(PlaybackRateMenuButton, _MenuButton);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function PlaybackRateMenuButton(player, options) {\n    _classCallCheck(this, PlaybackRateMenuButton);\n\n    var _this = _possibleConstructorReturn(this, _MenuButton.call(this, player, options));\n\n    _this.updateVisibility();\n    _this.updateLabel();\n\n    _this.on(player, 'loadstart', _this.updateVisibility);\n    _this.on(player, 'ratechange', _this.updateLabel);\n    return _this;\n  }\n\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n\n\n  PlaybackRateMenuButton.prototype.createEl = function createEl() {\n    var el = _MenuButton.prototype.createEl.call(this);\n\n    this.labelEl_ = Dom.createEl('div', {\n      className: 'vjs-playback-rate-value',\n      innerHTML: 1.0\n    });\n\n    el.appendChild(this.labelEl_);\n\n    return el;\n  };\n\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n\n\n  PlaybackRateMenuButton.prototype.buildCSSClass = function buildCSSClass() {\n    return 'vjs-playback-rate ' + _MenuButton.prototype.buildCSSClass.call(this);\n  };\n\n  /**\n   * Create the playback rate menu\n   *\n   * @return {Menu}\n   *         Menu object populated with {@link PlaybackRateMenuItem}s\n   */\n\n\n  PlaybackRateMenuButton.prototype.createMenu = function createMenu() {\n    var menu = new _menu2['default'](this.player());\n    var rates = this.playbackRates();\n\n    if (rates) {\n      for (var i = rates.length - 1; i >= 0; i--) {\n        menu.addChild(new _playbackRateMenuItem2['default'](this.player(), { rate: rates[i] + 'x' }));\n      }\n    }\n\n    return menu;\n  };\n\n  /**\n   * Updates ARIA accessibility attributes\n   */\n\n\n  PlaybackRateMenuButton.prototype.updateARIAAttributes = function updateARIAAttributes() {\n    // Current playback rate\n    this.el().setAttribute('aria-valuenow', this.player().playbackRate());\n  };\n\n  /**\n   * This gets called when an `PlaybackRateMenuButton` is \"clicked\". See\n   * {@link ClickableComponent} for more detailed information on what a click can be.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   */\n\n\n  PlaybackRateMenuButton.prototype.handleClick = function handleClick(event) {\n    // select next rate option\n    var currentRate = this.player().playbackRate();\n    var rates = this.playbackRates();\n\n    // this will select first one if the last one currently selected\n    var newRate = rates[0];\n\n    for (var i = 0; i < rates.length; i++) {\n      if (rates[i] > currentRate) {\n        newRate = rates[i];\n        break;\n      }\n    }\n    this.player().playbackRate(newRate);\n  };\n\n  /**\n   * Get possible playback rates\n   *\n   * @return {Array}\n   *         All possible playback rates\n   */\n\n\n  PlaybackRateMenuButton.prototype.playbackRates = function playbackRates() {\n    return this.options_.playbackRates || this.options_.playerOptions && this.options_.playerOptions.playbackRates;\n  };\n\n  /**\n   * Get whether playback rates is supported by the tech\n   * and an array of playback rates exists\n   *\n   * @return {boolean}\n   *         Whether changing playback rate is supported\n   */\n\n\n  PlaybackRateMenuButton.prototype.playbackRateSupported = function playbackRateSupported() {\n    return this.player().tech_ && this.player().tech_.featuresPlaybackRate && this.playbackRates() && this.playbackRates().length > 0;\n  };\n\n  /**\n   * Hide playback rate controls when they're no playback rate options to select\n   *\n   * @param {EventTarget~Event} [event]\n   *        The event that caused this function to run.\n   *\n   * @listens Player#loadstart\n   */\n\n\n  PlaybackRateMenuButton.prototype.updateVisibility = function updateVisibility(event) {\n    if (this.playbackRateSupported()) {\n      this.removeClass('vjs-hidden');\n    } else {\n      this.addClass('vjs-hidden');\n    }\n  };\n\n  /**\n   * Update button label when rate changed\n   *\n   * @param {EventTarget~Event} [event]\n   *        The event that caused this function to run.\n   *\n   * @listens Player#ratechange\n   */\n\n\n  PlaybackRateMenuButton.prototype.updateLabel = function updateLabel(event) {\n    if (this.playbackRateSupported()) {\n      this.labelEl_.innerHTML = this.player().playbackRate() + 'x';\n    }\n  };\n\n  return PlaybackRateMenuButton;\n}(_menuButton2['default']);\n\n/**\n * The text that should display over the `FullscreenToggle`s controls. Added for localization.\n *\n * @type {string}\n * @private\n */\n\n\nPlaybackRateMenuButton.prototype.controlText_ = 'Playback Rate';\n\n_component2['default'].registerComponent('PlaybackRateMenuButton', PlaybackRateMenuButton);\nexports['default'] = PlaybackRateMenuButton;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/video.js/es5/control-bar/playback-rate-menu/playback-rate-menu-button.js\n ** module id = 97\n ** module chunks = 0 1\n **/","'use strict';\n\nexports.__esModule = true;\n\nvar _menuItem = require('../../menu/menu-item.js');\n\nvar _menuItem2 = _interopRequireDefault(_menuItem);\n\nvar _component = require('../../component.js');\n\nvar _component2 = _interopRequireDefault(_component);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /**\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * @file playback-rate-menu-item.js\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                */\n\n\n/**\n * The specific menu item type for selecting a playback rate.\n *\n * @extends MenuItem\n */\nvar PlaybackRateMenuItem = function (_MenuItem) {\n  _inherits(PlaybackRateMenuItem, _MenuItem);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function PlaybackRateMenuItem(player, options) {\n    _classCallCheck(this, PlaybackRateMenuItem);\n\n    var label = options.rate;\n    var rate = parseFloat(label, 10);\n\n    // Modify options for parent MenuItem class's init.\n    options.label = label;\n    options.selected = rate === 1;\n\n    var _this = _possibleConstructorReturn(this, _MenuItem.call(this, player, options));\n\n    _this.label = label;\n    _this.rate = rate;\n\n    _this.on(player, 'ratechange', _this.update);\n    return _this;\n  }\n\n  /**\n   * This gets called when an `PlaybackRateMenuItem` is \"clicked\". See\n   * {@link ClickableComponent} for more detailed information on what a click can be.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   */\n\n\n  PlaybackRateMenuItem.prototype.handleClick = function handleClick(event) {\n    _MenuItem.prototype.handleClick.call(this);\n    this.player().playbackRate(this.rate);\n  };\n\n  /**\n   * Update the PlaybackRateMenuItem when the playbackrate changes.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `ratechange` event that caused this function to run.\n   *\n   * @listens Player#ratechange\n   */\n\n\n  PlaybackRateMenuItem.prototype.update = function update(event) {\n    this.selected(this.player().playbackRate() === this.rate);\n  };\n\n  return PlaybackRateMenuItem;\n}(_menuItem2['default']);\n\n/**\n * The text that should display over the `PlaybackRateMenuItem`s controls. Added for localization.\n *\n * @type {string}\n * @private\n */\n\n\nPlaybackRateMenuItem.prototype.contentElType = 'button';\n\n_component2['default'].registerComponent('PlaybackRateMenuItem', PlaybackRateMenuItem);\nexports['default'] = PlaybackRateMenuItem;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/video.js/es5/control-bar/playback-rate-menu/playback-rate-menu-item.js\n ** module id = 98\n ** module chunks = 0 1\n **/","'use strict';\n\nexports.__esModule = true;\n\nvar _spacer = require('./spacer.js');\n\nvar _spacer2 = _interopRequireDefault(_spacer);\n\nvar _component = require('../../component.js');\n\nvar _component2 = _interopRequireDefault(_component);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /**\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * @file custom-control-spacer.js\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                */\n\n\n/**\n * Spacer specifically meant to be used as an insertion point for new plugins, etc.\n *\n * @extends Spacer\n */\nvar CustomControlSpacer = function (_Spacer) {\n  _inherits(CustomControlSpacer, _Spacer);\n\n  function CustomControlSpacer() {\n    _classCallCheck(this, CustomControlSpacer);\n\n    return _possibleConstructorReturn(this, _Spacer.apply(this, arguments));\n  }\n\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n  CustomControlSpacer.prototype.buildCSSClass = function buildCSSClass() {\n    return 'vjs-custom-control-spacer ' + _Spacer.prototype.buildCSSClass.call(this);\n  };\n\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n\n\n  CustomControlSpacer.prototype.createEl = function createEl() {\n    var el = _Spacer.prototype.createEl.call(this, {\n      className: this.buildCSSClass()\n    });\n\n    // No-flex/table-cell mode requires there be some content\n    // in the cell to fill the remaining space of the table.\n    el.innerHTML = '&nbsp;';\n    return el;\n  };\n\n  return CustomControlSpacer;\n}(_spacer2['default']);\n\n_component2['default'].registerComponent('CustomControlSpacer', CustomControlSpacer);\nexports['default'] = CustomControlSpacer;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/video.js/es5/control-bar/spacer-controls/custom-control-spacer.js\n ** module id = 99\n ** module chunks = 0 1\n **/","'use strict';\n\nexports.__esModule = true;\n\nvar _component = require('../../component.js');\n\nvar _component2 = _interopRequireDefault(_component);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /**\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * @file spacer.js\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                */\n\n\n/**\n * Just an empty spacer element that can be used as an append point for plugins, etc.\n * Also can be used to create space between elements when necessary.\n *\n * @extends Component\n */\nvar Spacer = function (_Component) {\n  _inherits(Spacer, _Component);\n\n  function Spacer() {\n    _classCallCheck(this, Spacer);\n\n    return _possibleConstructorReturn(this, _Component.apply(this, arguments));\n  }\n\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n  Spacer.prototype.buildCSSClass = function buildCSSClass() {\n    return 'vjs-spacer ' + _Component.prototype.buildCSSClass.call(this);\n  };\n\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n\n\n  Spacer.prototype.createEl = function createEl() {\n    return _Component.prototype.createEl.call(this, 'div', {\n      className: this.buildCSSClass()\n    });\n  };\n\n  return Spacer;\n}(_component2['default']);\n\n_component2['default'].registerComponent('Spacer', Spacer);\n\nexports['default'] = Spacer;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/video.js/es5/control-bar/spacer-controls/spacer.js\n ** module id = 100\n ** module chunks = 0 1\n **/","'use strict';\n\nexports.__esModule = true;\n\nvar _component = require('./component');\n\nvar _component2 = _interopRequireDefault(_component);\n\nvar _modalDialog = require('./modal-dialog');\n\nvar _modalDialog2 = _interopRequireDefault(_modalDialog);\n\nvar _mergeOptions = require('./utils/merge-options');\n\nvar _mergeOptions2 = _interopRequireDefault(_mergeOptions);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /**\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * @file error-display.js\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                */\n\n\n/**\n * A display that indicates an error has occurred. This means that the video\n * is unplayable.\n *\n * @extends ModalDialog\n */\nvar ErrorDisplay = function (_ModalDialog) {\n  _inherits(ErrorDisplay, _ModalDialog);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param  {Player} player\n   *         The `Player` that this class should be attached to.\n   *\n   * @param  {Object} [options]\n   *         The key/value store of player options.\n   */\n  function ErrorDisplay(player, options) {\n    _classCallCheck(this, ErrorDisplay);\n\n    var _this = _possibleConstructorReturn(this, _ModalDialog.call(this, player, options));\n\n    _this.on(player, 'error', _this.open);\n    return _this;\n  }\n\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   *\n   * @deprecated Since version 5.\n   */\n\n\n  ErrorDisplay.prototype.buildCSSClass = function buildCSSClass() {\n    return 'vjs-error-display ' + _ModalDialog.prototype.buildCSSClass.call(this);\n  };\n\n  /**\n   * Gets the localized error message based on the `Player`s error.\n   *\n   * @return {string}\n   *         The `Player`s error message localized or an empty string.\n   */\n\n\n  ErrorDisplay.prototype.content = function content() {\n    var error = this.player().error();\n\n    return error ? this.localize(error.message) : '';\n  };\n\n  return ErrorDisplay;\n}(_modalDialog2['default']);\n\n/**\n * The default options for an `ErrorDisplay`.\n *\n * @private\n */\n\n\nErrorDisplay.prototype.options_ = (0, _mergeOptions2['default'])(_modalDialog2['default'].prototype.options_, {\n  fillAlways: true,\n  temporary: false,\n  uncloseable: true\n});\n\n_component2['default'].registerComponent('ErrorDisplay', ErrorDisplay);\nexports['default'] = ErrorDisplay;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/video.js/es5/error-display.js\n ** module id = 101\n ** module chunks = 0 1\n **/","'use strict';\n\nexports.__esModule = true;\n\nvar _window = require('global/window');\n\nvar _window2 = _interopRequireDefault(_window);\n\nvar _component = require('../component');\n\nvar _component2 = _interopRequireDefault(_component);\n\nvar _dom = require('../utils/dom');\n\nvar _fn = require('../utils/fn');\n\nvar Fn = _interopRequireWildcard(_fn);\n\nvar _obj = require('../utils/obj');\n\nvar Obj = _interopRequireWildcard(_obj);\n\nvar _log = require('../utils/log');\n\nvar _log2 = _interopRequireDefault(_log);\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj['default'] = obj; return newObj; } }\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /**\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * @file text-track-settings.js\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                */\n\n\nvar LOCAL_STORAGE_KEY = 'vjs-text-track-settings';\n\nvar COLOR_BLACK = ['#000', 'Black'];\nvar COLOR_BLUE = ['#00F', 'Blue'];\nvar COLOR_CYAN = ['#0FF', 'Cyan'];\nvar COLOR_GREEN = ['#0F0', 'Green'];\nvar COLOR_MAGENTA = ['#F0F', 'Magenta'];\nvar COLOR_RED = ['#F00', 'Red'];\nvar COLOR_WHITE = ['#FFF', 'White'];\nvar COLOR_YELLOW = ['#FF0', 'Yellow'];\n\nvar OPACITY_OPAQUE = ['1', 'Opaque'];\nvar OPACITY_SEMI = ['0.5', 'Semi-Transparent'];\nvar OPACITY_TRANS = ['0', 'Transparent'];\n\n// Configuration for the various <select> elements in the DOM of this component.\n//\n// Possible keys include:\n//\n// `default`:\n//   The default option index. Only needs to be provided if not zero.\n// `parser`:\n//   A function which is used to parse the value from the selected option in\n//   a customized way.\n// `selector`:\n//   The selector used to find the associated <select> element.\nvar selectConfigs = {\n  backgroundColor: {\n    selector: '.vjs-bg-color > select',\n    id: 'captions-background-color-%s',\n    label: 'Color',\n    options: [COLOR_BLACK, COLOR_WHITE, COLOR_RED, COLOR_GREEN, COLOR_BLUE, COLOR_YELLOW, COLOR_MAGENTA, COLOR_CYAN]\n  },\n\n  backgroundOpacity: {\n    selector: '.vjs-bg-opacity > select',\n    id: 'captions-background-opacity-%s',\n    label: 'Transparency',\n    options: [OPACITY_OPAQUE, OPACITY_SEMI, OPACITY_TRANS]\n  },\n\n  color: {\n    selector: '.vjs-fg-color > select',\n    id: 'captions-foreground-color-%s',\n    label: 'Color',\n    options: [COLOR_WHITE, COLOR_BLACK, COLOR_RED, COLOR_GREEN, COLOR_BLUE, COLOR_YELLOW, COLOR_MAGENTA, COLOR_CYAN]\n  },\n\n  edgeStyle: {\n    selector: '.vjs-edge-style > select',\n    id: '%s',\n    label: 'Text Edge Style',\n    options: [['none', 'None'], ['raised', 'Raised'], ['depressed', 'Depressed'], ['uniform', 'Uniform'], ['dropshadow', 'Dropshadow']]\n  },\n\n  fontFamily: {\n    selector: '.vjs-font-family > select',\n    id: 'captions-font-family-%s',\n    label: 'Font Family',\n    options: [['proportionalSansSerif', 'Proportional Sans-Serif'], ['monospaceSansSerif', 'Monospace Sans-Serif'], ['proportionalSerif', 'Proportional Serif'], ['monospaceSerif', 'Monospace Serif'], ['casual', 'Casual'], ['script', 'Script'], ['small-caps', 'Small Caps']]\n  },\n\n  fontPercent: {\n    selector: '.vjs-font-percent > select',\n    id: 'captions-font-size-%s',\n    label: 'Font Size',\n    options: [['0.50', '50%'], ['0.75', '75%'], ['1.00', '100%'], ['1.25', '125%'], ['1.50', '150%'], ['1.75', '175%'], ['2.00', '200%'], ['3.00', '300%'], ['4.00', '400%']],\n    'default': 2,\n    parser: function parser(v) {\n      return v === '1.00' ? null : Number(v);\n    }\n  },\n\n  textOpacity: {\n    selector: '.vjs-text-opacity > select',\n    id: 'captions-foreground-opacity-%s',\n    label: 'Transparency',\n    options: [OPACITY_OPAQUE, OPACITY_SEMI]\n  },\n\n  // Options for this object are defined below.\n  windowColor: {\n    selector: '.vjs-window-color > select',\n    id: 'captions-window-color-%s',\n    label: 'Color'\n  },\n\n  // Options for this object are defined below.\n  windowOpacity: {\n    selector: '.vjs-window-opacity > select',\n    id: 'captions-window-opacity-%s',\n    label: 'Transparency',\n    options: [OPACITY_TRANS, OPACITY_SEMI, OPACITY_OPAQUE]\n  }\n};\n\nselectConfigs.windowColor.options = selectConfigs.backgroundColor.options;\n\n/**\n * Get the actual value of an option.\n *\n * @param  {string} value\n *         The value to get\n *\n * @param  {Function} [parser]\n *         Optional function to adjust the value.\n *\n * @return {Mixed}\n *         - Will be `undefined` if no value exists\n *         - Will be `undefined` if the given value is \"none\".\n *         - Will be the actual value otherwise.\n *\n * @private\n */\nfunction parseOptionValue(value, parser) {\n  if (parser) {\n    value = parser(value);\n  }\n\n  if (value && value !== 'none') {\n    return value;\n  }\n}\n\n/**\n * Gets the value of the selected <option> element within a <select> element.\n *\n * @param  {Element} el\n *         the element to look in\n *\n * @param  {Function} [parser]\n *         Optional function to adjust the value.\n *\n * @return {Mixed}\n *         - Will be `undefined` if no value exists\n *         - Will be `undefined` if the given value is \"none\".\n *         - Will be the actual value otherwise.\n *\n * @private\n */\nfunction getSelectedOptionValue(el, parser) {\n  var value = el.options[el.options.selectedIndex].value;\n\n  return parseOptionValue(value, parser);\n}\n\n/**\n * Sets the selected <option> element within a <select> element based on a\n * given value.\n *\n * @param {Element} el\n *        The element to look in.\n *\n * @param {string} value\n *        the property to look on.\n *\n * @param {Function} [parser]\n *        Optional function to adjust the value before comparing.\n *\n * @private\n */\nfunction setSelectedOption(el, value, parser) {\n  if (!value) {\n    return;\n  }\n\n  for (var i = 0; i < el.options.length; i++) {\n    if (parseOptionValue(el.options[i].value, parser) === value) {\n      el.selectedIndex = i;\n      break;\n    }\n  }\n}\n\n/**\n * Manipulate Text Tracks settings.\n *\n * @extends Component\n */\n\nvar TextTrackSettings = function (_Component) {\n  _inherits(TextTrackSettings, _Component);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *         The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *         The key/value store of player options.\n   */\n  function TextTrackSettings(player, options) {\n    _classCallCheck(this, TextTrackSettings);\n\n    var _this = _possibleConstructorReturn(this, _Component.call(this, player, options));\n\n    _this.setDefaults();\n    _this.hide();\n\n    _this.updateDisplay = Fn.bind(_this, _this.updateDisplay);\n\n    // Grab `persistTextTrackSettings` from the player options if not passed in child options\n    if (options.persistTextTrackSettings === undefined) {\n      _this.options_.persistTextTrackSettings = _this.options_.playerOptions.persistTextTrackSettings;\n    }\n\n    _this.on(_this.$('.vjs-done-button'), 'click', function () {\n      _this.saveSettings();\n      _this.hide();\n    });\n\n    _this.on(_this.$('.vjs-default-button'), 'click', function () {\n      _this.setDefaults();\n      _this.updateDisplay();\n    });\n\n    Obj.each(selectConfigs, function (config) {\n      _this.on(_this.$(config.selector), 'change', _this.updateDisplay);\n    });\n\n    if (_this.options_.persistTextTrackSettings) {\n      _this.restoreSettings();\n    }\n    return _this;\n  }\n\n  /**\n   * Create a <select> element with configured options.\n   *\n   * @param {string} key\n   *        Configuration key to use during creation.\n   *\n   * @return {Element}\n   *         The DOM element that gets created.\n   * @private\n   */\n\n\n  TextTrackSettings.prototype.createElSelect_ = function createElSelect_(key) {\n    var _this2 = this;\n\n    var config = selectConfigs[key];\n    var id = config.id.replace('%s', this.id_);\n\n    return [(0, _dom.createEl)('label', {\n      className: 'vjs-label',\n      textContent: config.label\n    }, {\n      'for': id\n    }), (0, _dom.createEl)('select', { id: id }, undefined, config.options.map(function (o) {\n      return (0, _dom.createEl)('option', {\n        textContent: _this2.localize(o[1]),\n        value: o[0]\n      });\n    }))];\n  };\n\n  /**\n   * Create foreground color element for the component\n   *\n   * @return {Element}\n   *         The element that was created.\n   *\n   * @private\n   */\n\n\n  TextTrackSettings.prototype.createElFgColor_ = function createElFgColor_() {\n    var legend = (0, _dom.createEl)('legend', {\n      textContent: this.localize('Text')\n    });\n\n    var select = this.createElSelect_('color');\n\n    var opacity = (0, _dom.createEl)('span', {\n      className: 'vjs-text-opacity vjs-opacity'\n    }, undefined, this.createElSelect_('textOpacity'));\n\n    return (0, _dom.createEl)('fieldset', {\n      className: 'vjs-fg-color vjs-tracksetting'\n    }, undefined, [legend].concat(select, opacity));\n  };\n\n  /**\n   * Create background color element for the component\n   *\n   * @return {Element}\n   *         The element that was created\n   *\n   * @private\n   */\n\n\n  TextTrackSettings.prototype.createElBgColor_ = function createElBgColor_() {\n    var legend = (0, _dom.createEl)('legend', {\n      textContent: this.localize('Background')\n    });\n\n    var select = this.createElSelect_('backgroundColor');\n\n    var opacity = (0, _dom.createEl)('span', {\n      className: 'vjs-bg-opacity vjs-opacity'\n    }, undefined, this.createElSelect_('backgroundOpacity'));\n\n    return (0, _dom.createEl)('fieldset', {\n      className: 'vjs-bg-color vjs-tracksetting'\n    }, undefined, [legend].concat(select, opacity));\n  };\n\n  /**\n   * Create window color element for the component\n   *\n   * @return {Element}\n   *         The element that was created\n   *\n   * @private\n   */\n\n\n  TextTrackSettings.prototype.createElWinColor_ = function createElWinColor_() {\n    var legend = (0, _dom.createEl)('legend', {\n      textContent: this.localize('Window')\n    });\n\n    var select = this.createElSelect_('windowColor');\n\n    var opacity = (0, _dom.createEl)('span', {\n      className: 'vjs-window-opacity vjs-opacity'\n    }, undefined, this.createElSelect_('windowOpacity'));\n\n    return (0, _dom.createEl)('fieldset', {\n      className: 'vjs-window-color vjs-tracksetting'\n    }, undefined, [legend].concat(select, opacity));\n  };\n\n  /**\n   * Create color elements for the component\n   *\n   * @return {Element}\n   *         The element that was created\n   *\n   * @private\n   */\n\n\n  TextTrackSettings.prototype.createElColors_ = function createElColors_() {\n    return (0, _dom.createEl)('div', {\n      className: 'vjs-tracksettings-colors'\n    }, undefined, [this.createElFgColor_(), this.createElBgColor_(), this.createElWinColor_()]);\n  };\n\n  /**\n   * Create font elements for the component\n   *\n   * @return {Element}\n   *         The element that was created.\n   *\n   * @private\n   */\n\n\n  TextTrackSettings.prototype.createElFont_ = function createElFont_() {\n    var fontPercent = (0, _dom.createEl)('div', {\n      className: 'vjs-font-percent vjs-tracksetting'\n    }, undefined, this.createElSelect_('fontPercent'));\n\n    var edgeStyle = (0, _dom.createEl)('div', {\n      className: 'vjs-edge-style vjs-tracksetting'\n    }, undefined, this.createElSelect_('edgeStyle'));\n\n    var fontFamily = (0, _dom.createEl)('div', {\n      className: 'vjs-font-family vjs-tracksetting'\n    }, undefined, this.createElSelect_('fontFamily'));\n\n    return (0, _dom.createEl)('div', {\n      className: 'vjs-tracksettings-font'\n    }, undefined, [fontPercent, edgeStyle, fontFamily]);\n  };\n\n  /**\n   * Create controls for the component\n   *\n   * @return {Element}\n   *         The element that was created.\n   *\n   * @private\n   */\n\n\n  TextTrackSettings.prototype.createElControls_ = function createElControls_() {\n    var defaultsButton = (0, _dom.createEl)('button', {\n      className: 'vjs-default-button',\n      textContent: this.localize('Defaults')\n    });\n\n    var doneButton = (0, _dom.createEl)('button', {\n      className: 'vjs-done-button',\n      textContent: 'Done'\n    });\n\n    return (0, _dom.createEl)('div', {\n      className: 'vjs-tracksettings-controls'\n    }, undefined, [defaultsButton, doneButton]);\n  };\n\n  /**\n   * Create the component's DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n\n\n  TextTrackSettings.prototype.createEl = function createEl() {\n    var settings = (0, _dom.createEl)('div', {\n      className: 'vjs-tracksettings'\n    }, undefined, [this.createElColors_(), this.createElFont_(), this.createElControls_()]);\n\n    var heading = (0, _dom.createEl)('div', {\n      className: 'vjs-control-text',\n      id: 'TTsettingsDialogLabel-' + this.id_,\n      textContent: 'Caption Settings Dialog'\n    }, {\n      'aria-level': '1',\n      'role': 'heading'\n    });\n\n    var description = (0, _dom.createEl)('div', {\n      className: 'vjs-control-text',\n      id: 'TTsettingsDialogDescription-' + this.id_,\n      textContent: 'Beginning of dialog window. Escape will cancel and close the window.'\n    });\n\n    var doc = (0, _dom.createEl)('div', undefined, {\n      role: 'document'\n    }, [heading, description, settings]);\n\n    return (0, _dom.createEl)('div', {\n      className: 'vjs-caption-settings vjs-modal-overlay',\n      tabIndex: -1\n    }, {\n      'role': 'dialog',\n      'aria-labelledby': heading.id,\n      'aria-describedby': description.id\n    }, doc);\n  };\n\n  /**\n   * Gets an object of text track settings (or null).\n   *\n   * @return {Object}\n   *         An object with config values parsed from the DOM or localStorage.\n   */\n\n\n  TextTrackSettings.prototype.getValues = function getValues() {\n    var _this3 = this;\n\n    return Obj.reduce(selectConfigs, function (accum, config, key) {\n      var value = getSelectedOptionValue(_this3.$(config.selector), config.parser);\n\n      if (value !== undefined) {\n        accum[key] = value;\n      }\n\n      return accum;\n    }, {});\n  };\n\n  /**\n   * Sets text track settings from an object of values.\n   *\n   * @param {Object} values\n   *        An object with config values parsed from the DOM or localStorage.\n   */\n\n\n  TextTrackSettings.prototype.setValues = function setValues(values) {\n    var _this4 = this;\n\n    Obj.each(selectConfigs, function (config, key) {\n      setSelectedOption(_this4.$(config.selector), values[key], config.parser);\n    });\n  };\n\n  /**\n   * Sets all <select> elements to their default values.\n   */\n\n\n  TextTrackSettings.prototype.setDefaults = function setDefaults() {\n    var _this5 = this;\n\n    Obj.each(selectConfigs, function (config) {\n      var index = config.hasOwnProperty('default') ? config['default'] : 0;\n\n      _this5.$(config.selector).selectedIndex = index;\n    });\n  };\n\n  /**\n   * Restore texttrack settings from localStorage\n   */\n\n\n  TextTrackSettings.prototype.restoreSettings = function restoreSettings() {\n    var values = void 0;\n\n    try {\n      values = JSON.parse(_window2['default'].localStorage.getItem(LOCAL_STORAGE_KEY));\n    } catch (err) {\n      _log2['default'].warn(err);\n    }\n\n    if (values) {\n      this.setValues(values);\n    }\n  };\n\n  /**\n   * Save text track settings to localStorage\n   */\n\n\n  TextTrackSettings.prototype.saveSettings = function saveSettings() {\n    if (!this.options_.persistTextTrackSettings) {\n      return;\n    }\n\n    var values = this.getValues();\n\n    try {\n      if (Object.keys(values).length) {\n        _window2['default'].localStorage.setItem(LOCAL_STORAGE_KEY, JSON.stringify(values));\n      } else {\n        _window2['default'].localStorage.removeItem(LOCAL_STORAGE_KEY);\n      }\n    } catch (err) {\n      _log2['default'].warn(err);\n    }\n  };\n\n  /**\n   * Update display of text track settings\n   */\n\n\n  TextTrackSettings.prototype.updateDisplay = function updateDisplay() {\n    var ttDisplay = this.player_.getChild('textTrackDisplay');\n\n    if (ttDisplay) {\n      ttDisplay.updateDisplay();\n    }\n  };\n\n  return TextTrackSettings;\n}(_component2['default']);\n\n_component2['default'].registerComponent('TextTrackSettings', TextTrackSettings);\n\nexports['default'] = TextTrackSettings;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/video.js/es5/tracks/text-track-settings.js\n ** module id = 102\n ** module chunks = 0 1\n **/","'use strict';\n\nexports.__esModule = true;\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nvar _templateObject = _taggedTemplateLiteralLoose(['Text Tracks are being loaded from another origin but the crossorigin attribute isn\\'t used.\\n            This may prevent text tracks from loading.'], ['Text Tracks are being loaded from another origin but the crossorigin attribute isn\\'t used.\\n            This may prevent text tracks from loading.']);\n\nvar _tech = require('./tech.js');\n\nvar _tech2 = _interopRequireDefault(_tech);\n\nvar _component = require('../component');\n\nvar _component2 = _interopRequireDefault(_component);\n\nvar _dom = require('../utils/dom.js');\n\nvar Dom = _interopRequireWildcard(_dom);\n\nvar _url = require('../utils/url.js');\n\nvar Url = _interopRequireWildcard(_url);\n\nvar _fn = require('../utils/fn.js');\n\nvar Fn = _interopRequireWildcard(_fn);\n\nvar _log = require('../utils/log.js');\n\nvar _log2 = _interopRequireDefault(_log);\n\nvar _tsml = require('tsml');\n\nvar _tsml2 = _interopRequireDefault(_tsml);\n\nvar _browser = require('../utils/browser.js');\n\nvar browser = _interopRequireWildcard(_browser);\n\nvar _document = require('global/document');\n\nvar _document2 = _interopRequireDefault(_document);\n\nvar _window = require('global/window');\n\nvar _window2 = _interopRequireDefault(_window);\n\nvar _obj = require('../utils/obj');\n\nvar _mergeOptions = require('../utils/merge-options.js');\n\nvar _mergeOptions2 = _interopRequireDefault(_mergeOptions);\n\nvar _toTitleCase = require('../utils/to-title-case.js');\n\nvar _toTitleCase2 = _interopRequireDefault(_toTitleCase);\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj['default'] = obj; return newObj; } }\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nfunction _taggedTemplateLiteralLoose(strings, raw) { strings.raw = raw; return strings; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /**\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * @file html5.js\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                */\n\n\n/**\n * HTML5 Media Controller - Wrapper for HTML5 Media API\n *\n * @mixes Tech~SouceHandlerAdditions\n * @extends Tech\n */\nvar Html5 = function (_Tech) {\n  _inherits(Html5, _Tech);\n\n  /**\n   * Create an instance of this Tech.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   *\n   * @param {Component~ReadyCallback} ready\n   *        Callback function to call when the `HTML5` Tech is ready.\n   */\n  function Html5(options, ready) {\n    _classCallCheck(this, Html5);\n\n    var _this = _possibleConstructorReturn(this, _Tech.call(this, options, ready));\n\n    var source = options.source;\n    var crossoriginTracks = false;\n\n    // Set the source if one is provided\n    // 1) Check if the source is new (if not, we want to keep the original so playback isn't interrupted)\n    // 2) Check to see if the network state of the tag was failed at init, and if so, reset the source\n    // anyway so the error gets fired.\n    if (source && (_this.el_.currentSrc !== source.src || options.tag && options.tag.initNetworkState_ === 3)) {\n      _this.setSource(source);\n    } else {\n      _this.handleLateInit_(_this.el_);\n    }\n\n    if (_this.el_.hasChildNodes()) {\n\n      var nodes = _this.el_.childNodes;\n      var nodesLength = nodes.length;\n      var removeNodes = [];\n\n      while (nodesLength--) {\n        var node = nodes[nodesLength];\n        var nodeName = node.nodeName.toLowerCase();\n\n        if (nodeName === 'track') {\n          if (!_this.featuresNativeTextTracks) {\n            // Empty video tag tracks so the built-in player doesn't use them also.\n            // This may not be fast enough to stop HTML5 browsers from reading the tags\n            // so we'll need to turn off any default tracks if we're manually doing\n            // captions and subtitles. videoElement.textTracks\n            removeNodes.push(node);\n          } else {\n            // store HTMLTrackElement and TextTrack to remote list\n            _this.remoteTextTrackEls().addTrackElement_(node);\n            _this.remoteTextTracks().addTrack_(node.track);\n            if (!crossoriginTracks && !_this.el_.hasAttribute('crossorigin') && Url.isCrossOrigin(node.src)) {\n              crossoriginTracks = true;\n            }\n          }\n        }\n      }\n\n      for (var i = 0; i < removeNodes.length; i++) {\n        _this.el_.removeChild(removeNodes[i]);\n      }\n    }\n\n    // TODO: add text tracks into this list\n    var trackTypes = ['audio', 'video'];\n\n    // ProxyNative Video/Audio Track\n    trackTypes.forEach(function (type) {\n      var elTracks = _this.el()[type + 'Tracks'];\n      var techTracks = _this[type + 'Tracks']();\n      var capitalType = (0, _toTitleCase2['default'])(type);\n\n      if (!_this['featuresNative' + capitalType + 'Tracks'] || !elTracks || !elTracks.addEventListener) {\n        return;\n      }\n\n      _this['handle' + capitalType + 'TrackChange_'] = function (e) {\n        techTracks.trigger({\n          type: 'change',\n          target: techTracks,\n          currentTarget: techTracks,\n          srcElement: techTracks\n        });\n      };\n\n      _this['handle' + capitalType + 'TrackAdd_'] = function (e) {\n        return techTracks.addTrack(e.track);\n      };\n      _this['handle' + capitalType + 'TrackRemove_'] = function (e) {\n        return techTracks.removeTrack(e.track);\n      };\n\n      elTracks.addEventListener('change', _this['handle' + capitalType + 'TrackChange_']);\n      elTracks.addEventListener('addtrack', _this['handle' + capitalType + 'TrackAdd_']);\n      elTracks.addEventListener('removetrack', _this['handle' + capitalType + 'TrackRemove_']);\n      _this['removeOld' + capitalType + 'Tracks_'] = function (e) {\n        return _this.removeOldTracks_(techTracks, elTracks);\n      };\n\n      // Remove (native) tracks that are not used anymore\n      _this.on('loadstart', _this['removeOld' + capitalType + 'Tracks_']);\n    });\n\n    if (_this.featuresNativeTextTracks) {\n      if (crossoriginTracks) {\n        _log2['default'].warn((0, _tsml2['default'])(_templateObject));\n      }\n\n      _this.handleTextTrackChange_ = Fn.bind(_this, _this.handleTextTrackChange);\n      _this.handleTextTrackAdd_ = Fn.bind(_this, _this.handleTextTrackAdd);\n      _this.handleTextTrackRemove_ = Fn.bind(_this, _this.handleTextTrackRemove);\n      _this.proxyNativeTextTracks_();\n    }\n\n    // Determine if native controls should be used\n    // Our goal should be to get the custom controls on mobile solid everywhere\n    // so we can remove this all together. Right now this will block custom\n    // controls on touch enabled laptops like the Chrome Pixel\n    if ((browser.TOUCH_ENABLED || browser.IS_IPHONE || browser.IS_NATIVE_ANDROID) && options.nativeControlsForTouch === true) {\n      _this.setControls(true);\n    }\n\n    // on iOS, we want to proxy `webkitbeginfullscreen` and `webkitendfullscreen`\n    // into a `fullscreenchange` event\n    _this.proxyWebkitFullscreen_();\n\n    _this.triggerReady();\n    return _this;\n  }\n\n  /**\n   * Dispose of `HTML5` media element and remove all tracks.\n   */\n\n\n  Html5.prototype.dispose = function dispose() {\n    var _this2 = this;\n\n    // Un-ProxyNativeTracks\n    ['audio', 'video', 'text'].forEach(function (type) {\n      var capitalType = (0, _toTitleCase2['default'])(type);\n      var tl = _this2.el_[type + 'Tracks'];\n\n      if (tl && tl.removeEventListener) {\n        tl.removeEventListener('change', _this2['handle' + capitalType + 'TrackChange_']);\n        tl.removeEventListener('addtrack', _this2['handle' + capitalType + 'TrackAdd_']);\n        tl.removeEventListener('removetrack', _this2['handle' + capitalType + 'TrackRemove_']);\n      }\n\n      // Stop removing old text tracks\n      if (tl) {\n        _this2.off('loadstart', _this2['removeOld' + capitalType + 'Tracks_']);\n      }\n    });\n\n    Html5.disposeMediaElement(this.el_);\n    // tech will handle clearing of the emulated track list\n    _Tech.prototype.dispose.call(this);\n  };\n\n  /**\n   * Create the `Html5` Tech's DOM element.\n   *\n   * @return {Element}\n   *         The element that gets created.\n   */\n\n\n  Html5.prototype.createEl = function createEl() {\n    var el = this.options_.tag;\n\n    // Check if this browser supports moving the element into the box.\n    // On the iPhone video will break if you move the element,\n    // So we have to create a brand new element.\n    if (!el || this.movingMediaElementInDOM === false) {\n\n      // If the original tag is still there, clone and remove it.\n      if (el) {\n        var clone = el.cloneNode(true);\n\n        el.parentNode.insertBefore(clone, el);\n        Html5.disposeMediaElement(el);\n        el = clone;\n      } else {\n        el = _document2['default'].createElement('video');\n\n        // determine if native controls should be used\n        var tagAttributes = this.options_.tag && Dom.getElAttributes(this.options_.tag);\n        var attributes = (0, _mergeOptions2['default'])({}, tagAttributes);\n\n        if (!browser.TOUCH_ENABLED || this.options_.nativeControlsForTouch !== true) {\n          delete attributes.controls;\n        }\n\n        Dom.setElAttributes(el, (0, _obj.assign)(attributes, {\n          id: this.options_.techId,\n          'class': 'vjs-tech'\n        }));\n      }\n\n      el.playerId = this.options_.playerId;\n    }\n\n    // Update specific tag settings, in case they were overridden\n    var settingsAttrs = ['autoplay', 'preload', 'loop', 'muted'];\n\n    for (var i = settingsAttrs.length - 1; i >= 0; i--) {\n      var attr = settingsAttrs[i];\n      var overwriteAttrs = {};\n\n      if (typeof this.options_[attr] !== 'undefined') {\n        overwriteAttrs[attr] = this.options_[attr];\n      }\n      Dom.setElAttributes(el, overwriteAttrs);\n    }\n\n    return el;\n  };\n\n  /**\n   * This will be triggered if the loadstart event has already fired, before videojs was\n   * ready. Two known examples of when this can happen are:\n   * 1. If we're loading the playback object after it has started loading\n   * 2. The media is already playing the (often with autoplay on) then\n   *\n   * This function will fire another loadstart so that videojs can catchup.\n   *\n   * @fires Tech#loadstart\n   *\n   * @return {undefined}\n   *         returns nothing.\n   */\n\n\n  Html5.prototype.handleLateInit_ = function handleLateInit_(el) {\n    var _this3 = this;\n\n    if (el.networkState === 0 || el.networkState === 3) {\n      // The video element hasn't started loading the source yet\n      // or didn't find a source\n      return;\n    }\n\n    if (el.readyState === 0) {\n      var _ret = function () {\n        // NetworkState is set synchronously BUT loadstart is fired at the\n        // end of the current stack, usually before setInterval(fn, 0).\n        // So at this point we know loadstart may have already fired or is\n        // about to fire, and either way the player hasn't seen it yet.\n        // We don't want to fire loadstart prematurely here and cause a\n        // double loadstart so we'll wait and see if it happens between now\n        // and the next loop, and fire it if not.\n        // HOWEVER, we also want to make sure it fires before loadedmetadata\n        // which could also happen between now and the next loop, so we'll\n        // watch for that also.\n        var loadstartFired = false;\n        var setLoadstartFired = function setLoadstartFired() {\n          loadstartFired = true;\n        };\n\n        _this3.on('loadstart', setLoadstartFired);\n\n        var triggerLoadstart = function triggerLoadstart() {\n          // We did miss the original loadstart. Make sure the player\n          // sees loadstart before loadedmetadata\n          if (!loadstartFired) {\n            this.trigger('loadstart');\n          }\n        };\n\n        _this3.on('loadedmetadata', triggerLoadstart);\n\n        _this3.ready(function () {\n          this.off('loadstart', setLoadstartFired);\n          this.off('loadedmetadata', triggerLoadstart);\n\n          if (!loadstartFired) {\n            // We did miss the original native loadstart. Fire it now.\n            this.trigger('loadstart');\n          }\n        });\n\n        return {\n          v: void 0\n        };\n      }();\n\n      if ((typeof _ret === 'undefined' ? 'undefined' : _typeof(_ret)) === \"object\") return _ret.v;\n    }\n\n    // From here on we know that loadstart already fired and we missed it.\n    // The other readyState events aren't as much of a problem if we double\n    // them, so not going to go to as much trouble as loadstart to prevent\n    // that unless we find reason to.\n    var eventsToTrigger = ['loadstart'];\n\n    // loadedmetadata: newly equal to HAVE_METADATA (1) or greater\n    eventsToTrigger.push('loadedmetadata');\n\n    // loadeddata: newly increased to HAVE_CURRENT_DATA (2) or greater\n    if (el.readyState >= 2) {\n      eventsToTrigger.push('loadeddata');\n    }\n\n    // canplay: newly increased to HAVE_FUTURE_DATA (3) or greater\n    if (el.readyState >= 3) {\n      eventsToTrigger.push('canplay');\n    }\n\n    // canplaythrough: newly equal to HAVE_ENOUGH_DATA (4)\n    if (el.readyState >= 4) {\n      eventsToTrigger.push('canplaythrough');\n    }\n\n    // We still need to give the player time to add event listeners\n    this.ready(function () {\n      eventsToTrigger.forEach(function (type) {\n        this.trigger(type);\n      }, this);\n    });\n  };\n\n  /**\n   * Add event listeners to native text track events. This adds the native text tracks\n   * to our emulated {@link TextTrackList}.\n   */\n\n\n  Html5.prototype.proxyNativeTextTracks_ = function proxyNativeTextTracks_() {\n    var tt = this.el().textTracks;\n\n    if (tt) {\n      // Add tracks - if player is initialised after DOM loaded, textTracks\n      // will not trigger addtrack\n      for (var i = 0; i < tt.length; i++) {\n        this.textTracks().addTrack_(tt[i]);\n      }\n\n      if (tt.addEventListener) {\n        tt.addEventListener('change', this.handleTextTrackChange_);\n        tt.addEventListener('addtrack', this.handleTextTrackAdd_);\n        tt.addEventListener('removetrack', this.handleTextTrackRemove_);\n      }\n\n      // Remove (native) texttracks that are not used anymore\n      this.on('loadstart', this.removeOldTextTracks_);\n    }\n  };\n\n  /**\n   * Handle any {@link TextTrackList} `change` event.\n   *\n   * @param {EventTarget~Event} e\n   *        The `change` event that caused this to run.\n   *\n   * @listens TextTrackList#change\n   */\n\n\n  Html5.prototype.handleTextTrackChange = function handleTextTrackChange(e) {\n    var tt = this.textTracks();\n\n    this.textTracks().trigger({\n      type: 'change',\n      target: tt,\n      currentTarget: tt,\n      srcElement: tt\n    });\n  };\n\n  /**\n   * Handle any {@link TextTrackList} `addtrack` event.\n   *\n   * @param {EventTarget~Event} e\n   *        The `addtrack` event that caused this to run.\n   *\n   * @listens TextTrackList#addtrack\n   */\n\n\n  Html5.prototype.handleTextTrackAdd = function handleTextTrackAdd(e) {\n    this.textTracks().addTrack_(e.track);\n  };\n\n  /**\n   * Handle any {@link TextTrackList} `removetrack` event.\n   *\n   * @param {EventTarget~Event} e\n   *        The `removetrack` event that caused this to run.\n   *\n   * @listens TextTrackList#removetrack\n   */\n\n\n  Html5.prototype.handleTextTrackRemove = function handleTextTrackRemove(e) {\n    this.textTracks().removeTrack_(e.track);\n  };\n\n  /**\n   * This function removes any {@link AudioTrack}s, {@link VideoTrack}s, or\n   * {@link TextTrack}s that are not in the media elements TrackList.\n   *\n   * @param {TrackList} techTracks\n   *        HTML5 Tech's TrackList to search through\n   *\n   * @param {TrackList} elTracks\n   *        HTML5 media elements TrackList to search trough.\n   *\n   * @private\n   */\n\n\n  Html5.prototype.removeOldTracks_ = function removeOldTracks_(techTracks, elTracks) {\n    // This will loop over the techTracks and check if they are still used by the HTML5 media element\n    // If not, they will be removed from the emulated list\n    var removeTracks = [];\n\n    if (!elTracks) {\n      return;\n    }\n\n    for (var i = 0; i < techTracks.length; i++) {\n      var techTrack = techTracks[i];\n      var found = false;\n\n      for (var j = 0; j < elTracks.length; j++) {\n        if (elTracks[j] === techTrack) {\n          found = true;\n          break;\n        }\n      }\n\n      if (!found) {\n        removeTracks.push(techTrack);\n      }\n    }\n\n    for (var _i = 0; _i < removeTracks.length; _i++) {\n      var _track = removeTracks[_i];\n\n      techTracks.removeTrack_(_track);\n    }\n  };\n\n  /**\n   * Remove {@link TextTrack}s that dont exist in the native track list from our\n   * emulated {@link TextTrackList}.\n   *\n   * @listens Tech#loadstart\n   */\n\n\n  Html5.prototype.removeOldTextTracks_ = function removeOldTextTracks_(e) {\n    var techTracks = this.textTracks();\n    var elTracks = this.el().textTracks;\n\n    this.removeOldTracks_(techTracks, elTracks);\n  };\n\n  /**\n   * Called by {@link Player#play} to play using the `Html5` `Tech`.\n   */\n\n\n  Html5.prototype.play = function play() {\n    var playPromise = this.el_.play();\n\n    // Catch/silence error when a pause interrupts a play request\n    // on browsers which return a promise\n    if (playPromise !== undefined && typeof playPromise.then === 'function') {\n      playPromise.then(null, function (e) {});\n    }\n  };\n\n  /**\n   * Set current time for the `HTML5` tech.\n   *\n   * @param {number} seconds\n   *        Set the current time of the media to this.\n   */\n\n\n  Html5.prototype.setCurrentTime = function setCurrentTime(seconds) {\n    try {\n      this.el_.currentTime = seconds;\n    } catch (e) {\n      (0, _log2['default'])(e, 'Video is not ready. (Video.js)');\n      // this.warning(VideoJS.warnings.videoNotReady);\n    }\n  };\n\n  /**\n   * Get the current duration of the HTML5 media element.\n   *\n   * @return {number}\n   *         The duration of the media or 0 if there is no duration.\n   */\n\n\n  Html5.prototype.duration = function duration() {\n    var _this4 = this;\n\n    // Android Chrome will report duration as Infinity for VOD HLS until after\n    // playback has started, which triggers the live display erroneously.\n    // Return NaN if playback has not started and trigger a durationupdate once\n    // the duration can be reliably known.\n    if (this.el_.duration === Infinity && browser.IS_ANDROID && browser.IS_CHROME) {\n      if (this.el_.currentTime === 0) {\n        var _ret2 = function () {\n          // Wait for the first `timeupdate` with currentTime > 0 - there may be\n          // several with 0\n          var checkProgress = function checkProgress() {\n            if (_this4.el_.currentTime > 0) {\n              // Trigger durationchange for genuinely live video\n              if (_this4.el_.duration === Infinity) {\n                _this4.trigger('durationchange');\n              }\n              _this4.off('timeupdate', checkProgress);\n            }\n          };\n\n          _this4.on('timeupdate', checkProgress);\n          return {\n            v: NaN\n          };\n        }();\n\n        if ((typeof _ret2 === 'undefined' ? 'undefined' : _typeof(_ret2)) === \"object\") return _ret2.v;\n      }\n    }\n    return this.el_.duration || NaN;\n  };\n\n  /**\n   * Get the current width of the HTML5 media element.\n   *\n   * @return {number}\n   *         The width of the HTML5 media element.\n   */\n\n\n  Html5.prototype.width = function width() {\n    return this.el_.offsetWidth;\n  };\n\n  /**\n   * Get the current height of the HTML5 media element.\n   *\n   * @return {number}\n   *         The heigth of the HTML5 media element.\n   */\n\n\n  Html5.prototype.height = function height() {\n    return this.el_.offsetHeight;\n  };\n\n  /**\n   * Proxy iOS `webkitbeginfullscreen` and `webkitendfullscreen` into\n   * `fullscreenchange` event.\n   *\n   * @private\n   * @fires fullscreenchange\n   * @listens webkitendfullscreen\n   * @listens webkitbeginfullscreen\n   * @listens webkitbeginfullscreen\n   */\n\n\n  Html5.prototype.proxyWebkitFullscreen_ = function proxyWebkitFullscreen_() {\n    var _this5 = this;\n\n    if (!('webkitDisplayingFullscreen' in this.el_)) {\n      return;\n    }\n\n    var endFn = function endFn() {\n      this.trigger('fullscreenchange', { isFullscreen: false });\n    };\n\n    var beginFn = function beginFn() {\n      this.one('webkitendfullscreen', endFn);\n\n      this.trigger('fullscreenchange', { isFullscreen: true });\n    };\n\n    this.on('webkitbeginfullscreen', beginFn);\n    this.on('dispose', function () {\n      _this5.off('webkitbeginfullscreen', beginFn);\n      _this5.off('webkitendfullscreen', endFn);\n    });\n  };\n\n  /**\n   * Check if fullscreen is supported on the current playback device.\n   *\n   * @return {boolean}\n   *         - True if fullscreen is supported.\n   *         - False if fullscreen is not supported.\n   */\n\n\n  Html5.prototype.supportsFullScreen = function supportsFullScreen() {\n    if (typeof this.el_.webkitEnterFullScreen === 'function') {\n      var userAgent = _window2['default'].navigator && _window2['default'].navigator.userAgent || '';\n\n      // Seems to be broken in Chromium/Chrome && Safari in Leopard\n      if (/Android/.test(userAgent) || !/Chrome|Mac OS X 10.5/.test(userAgent)) {\n        return true;\n      }\n    }\n    return false;\n  };\n\n  /**\n   * Request that the `HTML5` Tech enter fullscreen.\n   */\n\n\n  Html5.prototype.enterFullScreen = function enterFullScreen() {\n    var video = this.el_;\n\n    if (video.paused && video.networkState <= video.HAVE_METADATA) {\n      // attempt to prime the video element for programmatic access\n      // this isn't necessary on the desktop but shouldn't hurt\n      this.el_.play();\n\n      // playing and pausing synchronously during the transition to fullscreen\n      // can get iOS ~6.1 devices into a play/pause loop\n      this.setTimeout(function () {\n        video.pause();\n        video.webkitEnterFullScreen();\n      }, 0);\n    } else {\n      video.webkitEnterFullScreen();\n    }\n  };\n\n  /**\n   * Request that the `HTML5` Tech exit fullscreen.\n   */\n\n\n  Html5.prototype.exitFullScreen = function exitFullScreen() {\n    this.el_.webkitExitFullScreen();\n  };\n\n  /**\n   * A getter/setter for the `Html5` Tech's source object.\n   * > Note: Please use {@link Html5#setSource}\n   *\n   * @param {Tech~SourceObject} [src]\n   *        The source object you want to set on the `HTML5` techs element.\n   *\n   * @return {Tech~SourceObject|undefined}\n   *         - The current source object when a source is not passed in.\n   *         - undefined when setting\n   *\n   * @deprecated Since version 5.\n   */\n\n\n  Html5.prototype.src = function src(_src) {\n    if (_src === undefined) {\n      return this.el_.src;\n    }\n\n    // Setting src through `src` instead of `setSrc` will be deprecated\n    this.setSrc(_src);\n  };\n\n  /**\n   * Reset the tech by removing all sources and then calling\n   * {@link Html5.resetMediaElement}.\n   */\n\n\n  Html5.prototype.reset = function reset() {\n    Html5.resetMediaElement(this.el_);\n  };\n\n  /**\n   * Get the current source on the `HTML5` Tech. Falls back to returning the source from\n   * the HTML5 media element.\n   *\n   * @return {Tech~SourceObject}\n   *         The current source object from the HTML5 tech. With a fallback to the\n   *         elements source.\n   */\n\n\n  Html5.prototype.currentSrc = function currentSrc() {\n    if (this.currentSource_) {\n      return this.currentSource_.src;\n    }\n    return this.el_.currentSrc;\n  };\n\n  /**\n   * Set controls attribute for the HTML5 media Element.\n   *\n   * @param {string} val\n   *        Value to set the controls attribute to\n   */\n\n\n  Html5.prototype.setControls = function setControls(val) {\n    this.el_.controls = !!val;\n  };\n\n  /**\n   * Create and returns a remote {@link TextTrack} object.\n   *\n   * @param {string} kind\n   *        `TextTrack` kind (subtitles, captions, descriptions, chapters, or metadata)\n   *\n   * @param {string} [label]\n   *        Label to identify the text track\n   *\n   * @param {string} [language]\n   *        Two letter language abbreviation\n   *\n   * @return {TextTrack}\n   *         The TextTrack that gets created.\n   */\n\n\n  Html5.prototype.addTextTrack = function addTextTrack(kind, label, language) {\n    if (!this.featuresNativeTextTracks) {\n      return _Tech.prototype.addTextTrack.call(this, kind, label, language);\n    }\n\n    return this.el_.addTextTrack(kind, label, language);\n  };\n\n  /**\n   * Creates either native TextTrack or an emulated TextTrack depending\n   * on the value of `featuresNativeTextTracks`\n   *\n   * @param {Object} options\n   *        The object should contain the options to intialize the TextTrack with.\n   *\n   * @param {string} [options.kind]\n   *        `TextTrack` kind (subtitles, captions, descriptions, chapters, or metadata).\n   *\n   * @param {string} [options.label].\n   *        Label to identify the text track\n   *\n   * @param {string} [options.language]\n   *        Two letter language abbreviation.\n   *\n   * @param {boolean} [options.default]\n   *        Default this track to on.\n   *\n   * @param {string} [options.id]\n   *        The internal id to assign this track.\n   *\n   * @param {string} [options.src]\n   *        A source url for the track.\n   *\n   * @return {HTMLTrackElement}\n   *         The track element that gets created.\n   */\n\n\n  Html5.prototype.createRemoteTextTrack = function createRemoteTextTrack(options) {\n    if (!this.featuresNativeTextTracks) {\n      return _Tech.prototype.createRemoteTextTrack.call(this, options);\n    }\n    var htmlTrackElement = _document2['default'].createElement('track');\n\n    if (options.kind) {\n      htmlTrackElement.kind = options.kind;\n    }\n    if (options.label) {\n      htmlTrackElement.label = options.label;\n    }\n    if (options.language || options.srclang) {\n      htmlTrackElement.srclang = options.language || options.srclang;\n    }\n    if (options['default']) {\n      htmlTrackElement['default'] = options['default'];\n    }\n    if (options.id) {\n      htmlTrackElement.id = options.id;\n    }\n    if (options.src) {\n      htmlTrackElement.src = options.src;\n    }\n\n    return htmlTrackElement;\n  };\n\n  /**\n   * Creates a remote text track object and returns an html track element.\n   *\n   * @param {Object} options The object should contain values for\n   * kind, language, label, and src (location of the WebVTT file)\n   * @param {Boolean} [manualCleanup=true] if set to false, the TextTrack will be\n   * automatically removed from the video element whenever the source changes\n   * @return {HTMLTrackElement} An Html Track Element.\n   * This can be an emulated {@link HTMLTrackElement} or a native one.\n   * @deprecated The default value of the \"manualCleanup\" parameter will default\n   * to \"false\" in upcoming versions of Video.js\n   */\n\n\n  Html5.prototype.addRemoteTextTrack = function addRemoteTextTrack(options, manualCleanup) {\n    var htmlTrackElement = _Tech.prototype.addRemoteTextTrack.call(this, options, manualCleanup);\n\n    if (this.featuresNativeTextTracks) {\n      this.el().appendChild(htmlTrackElement);\n    }\n\n    return htmlTrackElement;\n  };\n\n  /**\n   * Remove remote `TextTrack` from `TextTrackList` object\n   *\n   * @param {TextTrack} track\n   *        `TextTrack` object to remove\n   */\n\n\n  Html5.prototype.removeRemoteTextTrack = function removeRemoteTextTrack(track) {\n    _Tech.prototype.removeRemoteTextTrack.call(this, track);\n\n    if (this.featuresNativeTextTracks) {\n      var tracks = this.$$('track');\n\n      var i = tracks.length;\n\n      while (i--) {\n        if (track === tracks[i] || track === tracks[i].track) {\n          this.el().removeChild(tracks[i]);\n        }\n      }\n    }\n  };\n\n  return Html5;\n}(_tech2['default']);\n\n/* HTML5 Support Testing ---------------------------------------------------- */\n\n/**\n * Element for testing browser HTML5 media capabilities\n *\n * @type {Element}\n * @constant\n * @private\n */\n\n\nHtml5.TEST_VID = _document2['default'].createElement('video');\nvar track = _document2['default'].createElement('track');\n\ntrack.kind = 'captions';\ntrack.srclang = 'en';\ntrack.label = 'English';\nHtml5.TEST_VID.appendChild(track);\n\n/**\n * Check if HTML5 media is supported by this browser/device.\n *\n * @return {boolean}\n *         - True if HTML5 media is supported.\n *         - False if HTML5 media is not supported.\n */\nHtml5.isSupported = function () {\n  // IE9 with no Media Player is a LIAR! (#984)\n  try {\n    Html5.TEST_VID.volume = 0.5;\n  } catch (e) {\n    return false;\n  }\n\n  return !!Html5.TEST_VID.canPlayType;\n};\n\n/**\n * Check if the volume can be changed in this browser/device.\n * Volume cannot be changed in a lot of mobile devices.\n * Specifically, it can't be changed from 1 on iOS.\n *\n * @return {boolean}\n *         - True if volume can be controlled\n *         - False otherwise\n */\nHtml5.canControlVolume = function () {\n  // IE will error if Windows Media Player not installed #3315\n  try {\n    var volume = Html5.TEST_VID.volume;\n\n    Html5.TEST_VID.volume = volume / 2 + 0.1;\n    return volume !== Html5.TEST_VID.volume;\n  } catch (e) {\n    return false;\n  }\n};\n\n/**\n * Check if the playback rate can be changed in this browser/device.\n *\n * @return {boolean}\n *         - True if playback rate can be controlled\n *         - False otherwise\n */\nHtml5.canControlPlaybackRate = function () {\n  // Playback rate API is implemented in Android Chrome, but doesn't do anything\n  // https://github.com/videojs/video.js/issues/3180\n  if (browser.IS_ANDROID && browser.IS_CHROME) {\n    return false;\n  }\n  // IE will error if Windows Media Player not installed #3315\n  try {\n    var playbackRate = Html5.TEST_VID.playbackRate;\n\n    Html5.TEST_VID.playbackRate = playbackRate / 2 + 0.1;\n    return playbackRate !== Html5.TEST_VID.playbackRate;\n  } catch (e) {\n    return false;\n  }\n};\n\n/**\n * Check to see if native `TextTrack`s are supported by this browser/device.\n *\n * @return {boolean}\n *         - True if native `TextTrack`s are supported.\n *         - False otherwise\n */\nHtml5.supportsNativeTextTracks = function () {\n  return browser.IS_ANY_SAFARI;\n};\n\n/**\n * Check to see if native `VideoTrack`s are supported by this browser/device\n *\n * @return {boolean}\n *        - True if native `VideoTrack`s are supported.\n *        - False otherwise\n */\nHtml5.supportsNativeVideoTracks = function () {\n  var supportsVideoTracks = !!Html5.TEST_VID.videoTracks;\n\n  return supportsVideoTracks;\n};\n\n/**\n * Check to see if native `AudioTrack`s are supported by this browser/device\n *\n * @return {boolean}\n *        - True if native `AudioTrack`s are supported.\n *        - False otherwise\n */\nHtml5.supportsNativeAudioTracks = function () {\n  var supportsAudioTracks = !!Html5.TEST_VID.audioTracks;\n\n  return supportsAudioTracks;\n};\n\n/**\n * An array of events available on the Html5 tech.\n *\n * @private\n * @type {Array}\n */\nHtml5.Events = ['loadstart', 'suspend', 'abort', 'error', 'emptied', 'stalled', 'loadedmetadata', 'loadeddata', 'canplay', 'canplaythrough', 'playing', 'waiting', 'seeking', 'seeked', 'ended', 'durationchange', 'timeupdate', 'progress', 'play', 'pause', 'ratechange', 'volumechange'];\n\n/**\n * Boolean indicating whether the `Tech` supports volume control.\n *\n * @type {boolean}\n * @default {@link Html5.canControlVolume}\n */\nHtml5.prototype.featuresVolumeControl = Html5.canControlVolume();\n\n/**\n * Boolean indicating whether the `Tech` supports changing the speed at which the media\n * plays. Examples:\n *   - Set player to play 2x (twice) as fast\n *   - Set player to play 0.5x (half) as fast\n *\n * @type {boolean}\n * @default {@link Html5.canControlPlaybackRate}\n */\nHtml5.prototype.featuresPlaybackRate = Html5.canControlPlaybackRate();\n\n/**\n * Boolean indicating whether the `HTML5` tech currently supports the media element\n * moving in the DOM. iOS breaks if you move the media element, so this is set this to\n * false there. Everywhere else this should be true.\n *\n * @type {boolean}\n * @default\n */\nHtml5.prototype.movingMediaElementInDOM = !browser.IS_IOS;\n\n// TODO: Previous comment: No longer appears to be used. Can probably be removed.\n//       Is this true?\n/**\n * Boolean indicating whether the `HTML5` tech currently supports automatic media resize\n * when going into fullscreen.\n *\n * @type {boolean}\n * @default\n */\nHtml5.prototype.featuresFullscreenResize = true;\n\n/**\n * Boolean indicating whether the `HTML5` tech currently supports the progress event.\n * If this is false, manual `progress` events will be triggred instead.\n *\n * @type {boolean}\n * @default\n */\nHtml5.prototype.featuresProgressEvents = true;\n\n/**\n * Boolean indicating whether the `HTML5` tech currently supports the timeupdate event.\n * If this is false, manual `timeupdate` events will be triggred instead.\n *\n * @default\n */\nHtml5.prototype.featuresTimeupdateEvents = true;\n\n/**\n * Boolean indicating whether the `HTML5` tech currently supports native `TextTrack`s.\n *\n * @type {boolean}\n * @default {@link Html5.supportsNativeTextTracks}\n */\nHtml5.prototype.featuresNativeTextTracks = Html5.supportsNativeTextTracks();\n\n/**\n * Boolean indicating whether the `HTML5` tech currently supports native `VideoTrack`s.\n *\n * @type {boolean}\n * @default {@link Html5.supportsNativeVideoTracks}\n */\nHtml5.prototype.featuresNativeVideoTracks = Html5.supportsNativeVideoTracks();\n\n/**\n * Boolean indicating whether the `HTML5` tech currently supports native `AudioTrack`s.\n *\n * @type {boolean}\n * @default {@link Html5.supportsNativeAudioTracks}\n */\nHtml5.prototype.featuresNativeAudioTracks = Html5.supportsNativeAudioTracks();\n\n// HTML5 Feature detection and Device Fixes --------------------------------- //\nvar canPlayType = void 0;\nvar mpegurlRE = /^application\\/(?:x-|vnd\\.apple\\.)mpegurl/i;\nvar mp4RE = /^video\\/mp4/i;\n\nHtml5.patchCanPlayType = function () {\n  // Android 4.0 and above can play HLS to some extent but it reports being unable to do so\n  if (browser.ANDROID_VERSION >= 4.0 && !browser.IS_FIREFOX) {\n    if (!canPlayType) {\n      canPlayType = Html5.TEST_VID.constructor.prototype.canPlayType;\n    }\n\n    Html5.TEST_VID.constructor.prototype.canPlayType = function (type) {\n      if (type && mpegurlRE.test(type)) {\n        return 'maybe';\n      }\n      return canPlayType.call(this, type);\n    };\n  }\n\n  // Override Android 2.2 and less canPlayType method which is broken\n  if (browser.IS_OLD_ANDROID) {\n    if (!canPlayType) {\n      canPlayType = Html5.TEST_VID.constructor.prototype.canPlayType;\n    }\n\n    Html5.TEST_VID.constructor.prototype.canPlayType = function (type) {\n      if (type && mp4RE.test(type)) {\n        return 'maybe';\n      }\n      return canPlayType.call(this, type);\n    };\n  }\n};\n\nHtml5.unpatchCanPlayType = function () {\n  var r = Html5.TEST_VID.constructor.prototype.canPlayType;\n\n  Html5.TEST_VID.constructor.prototype.canPlayType = canPlayType;\n  canPlayType = null;\n  return r;\n};\n\n// by default, patch the media element\nHtml5.patchCanPlayType();\n\nHtml5.disposeMediaElement = function (el) {\n  if (!el) {\n    return;\n  }\n\n  if (el.parentNode) {\n    el.parentNode.removeChild(el);\n  }\n\n  // remove any child track or source nodes to prevent their loading\n  while (el.hasChildNodes()) {\n    el.removeChild(el.firstChild);\n  }\n\n  // remove any src reference. not setting `src=''` because that causes a warning\n  // in firefox\n  el.removeAttribute('src');\n\n  // force the media element to update its loading state by calling load()\n  // however IE on Windows 7N has a bug that throws an error so need a try/catch (#793)\n  if (typeof el.load === 'function') {\n    // wrapping in an iife so it's not deoptimized (#1060#discussion_r10324473)\n    (function () {\n      try {\n        el.load();\n      } catch (e) {\n        // not supported\n      }\n    })();\n  }\n};\n\nHtml5.resetMediaElement = function (el) {\n  if (!el) {\n    return;\n  }\n\n  var sources = el.querySelectorAll('source');\n  var i = sources.length;\n\n  while (i--) {\n    el.removeChild(sources[i]);\n  }\n\n  // remove any src reference.\n  // not setting `src=''` because that throws an error\n  el.removeAttribute('src');\n\n  if (typeof el.load === 'function') {\n    // wrapping in an iife so it's not deoptimized (#1060#discussion_r10324473)\n    (function () {\n      try {\n        el.load();\n      } catch (e) {\n        // satisfy linter\n      }\n    })();\n  }\n};\n\n/* Native HTML5 element property wrapping ----------------------------------- */\n// Wrap native properties with a getter\n[\n/**\n * Get the value of `paused` from the media element. `paused` indicates whether the media element\n * is currently paused or not.\n *\n * @method Html5.prototype.paused\n * @return {boolean}\n *         The value of `paused` from the media element.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-paused}\n */\n'paused',\n\n/**\n * Get the value of `currentTime` from the media element. `currentTime` indicates\n * the current second that the media is at in playback.\n *\n * @method Html5.prototype.currentTime\n * @return {number}\n *         The value of `currentTime` from the media element.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-currenttime}\n */\n'currentTime',\n\n/**\n * Get the value of `buffered` from the media element. `buffered` is a `TimeRange`\n * object that represents the parts of the media that are already downloaded and\n * available for playback.\n *\n * @method Html5.prototype.buffered\n * @return {TimeRange}\n *         The value of `buffered` from the media element.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-buffered}\n */\n'buffered',\n\n/**\n * Get the value of `volume` from the media element. `volume` indicates\n * the current playback volume of audio for a media. `volume` will be a value from 0\n * (silent) to 1 (loudest and default).\n *\n * @method Html5.prototype.volume\n * @return {number}\n *         The value of `volume` from the media element. Value will be between 0-1.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-a-volume}\n */\n'volume',\n\n/**\n * Get the value of `muted` from the media element. `muted` indicates\n * that the volume for the media should be set to silent. This does not actually change\n * the `volume` attribute.\n *\n * @method Html5.prototype.muted\n * @return {boolean}\n *         - True if the value of `volume` should be ignored and the audio set to silent.\n *         - False if the value of `volume` should be used.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-muted}\n */\n'muted',\n\n/**\n * Get the value of `poster` from the media element. `poster` indicates\n * that the url of an image file that can/will be shown when no media data is available.\n *\n * @method Html5.prototype.poster\n * @return {string}\n *         The value of `poster` from the media element. Value will be a url to an\n *         image.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#attr-video-poster}\n */\n'poster',\n\n/**\n * Get the value of `preload` from the media element. `preload` indicates\n * what should download before the media is interacted with. It can have the following\n * values:\n * - none: nothing should be downloaded\n * - metadata: poster and the first few frames of the media may be downloaded to get\n *   media dimensions and other metadata\n * - auto: allow the media and metadata for the media to be downloaded before\n *    interaction\n *\n * @method Html5.prototype.preload\n * @return {string}\n *         The value of `preload` from the media element. Will be 'none', 'metadata',\n *         or 'auto'.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#attr-media-preload}\n */\n'preload',\n\n/**\n * Get the value of `autoplay` from the media element. `autoplay` indicates\n * that the media should start to play as soon as the page is ready.\n *\n * @method Html5.prototype.autoplay\n * @return {boolean}\n *         - The value of `autoplay` from the media element.\n *         - True indicates that the media should start as soon as the page loads.\n *         - False indicates that the media should not start as soon as the page loads.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#attr-media-autoplay}\n */\n'autoplay',\n\n/**\n * Get the value of `controls` from the media element. `controls` indicates\n * whether the native media controls should be shown or hidden.\n *\n * @method Html5.prototype.controls\n * @return {boolean}\n *         - The value of `controls` from the media element.\n *         - True indicates that native controls should be showing.\n *         - False indicates that native controls should be hidden.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#attr-media-controls}\n */\n'controls',\n\n/**\n * Get the value of `loop` from the media element. `loop` indicates\n * that the media should return to the start of the media and continue playing once\n * it reaches the end.\n *\n * @method Html5.prototype.loop\n * @return {boolean}\n *         - The value of `loop` from the media element.\n *         - True indicates that playback should seek back to start once\n *           the end of a media is reached.\n *         - False indicates that playback should not loop back to the start when the\n *           end of the media is reached.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#attr-media-loop}\n */\n'loop',\n\n/**\n * Get the value of the `error` from the media element. `error` indicates any\n * MediaError that may have occured during playback. If error returns null there is no\n * current error.\n *\n * @method Html5.prototype.error\n * @return {MediaError|null}\n *         The value of `error` from the media element. Will be `MediaError` if there\n *         is a current error and null otherwise.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-error}\n */\n'error',\n\n/**\n * Get the value of `seeking` from the media element. `seeking` indicates whether the\n * media is currently seeking to a new position or not.\n *\n * @method Html5.prototype.seeking\n * @return {boolean}\n *         - The value of `seeking` from the media element.\n *         - True indicates that the media is currently seeking to a new position.\n *         - Flase indicates that the media is not seeking to a new position at this time.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-seeking}\n */\n'seeking',\n\n/**\n * Get the value of `seekable` from the media element. `seekable` returns a\n * `TimeRange` object indicating ranges of time that can currently be `seeked` to.\n *\n * @method Html5.prototype.seekable\n * @return {TimeRange}\n *         The value of `seekable` from the media element. A `TimeRange` object\n *         indicating the current ranges of time that can be seeked to.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-seekable}\n */\n'seekable',\n\n/**\n * Get the value of `ended` from the media element. `ended` indicates whether\n * the media has reached the end or not.\n *\n * @method Html5.prototype.ended\n * @return {boolean}\n *         - The value of `ended` from the media element.\n *         - True indicates that the media has ended.\n *         - False indicates that the media has not ended.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-ended}\n */\n'ended',\n\n/**\n * Get the value of `defaultMuted` from the media element. `defaultMuted` indicates\n * whether the media should start muted or not. Only changes the default state of the\n * media. `muted` and `defaultMuted` can have different values. `muted` indicates the\n * current state.\n *\n * @method Html5.prototype.defaultMuted\n * @return {boolean}\n *         - The value of `defaultMuted` from the media element.\n *         - True indicates that the media should start muted.\n *         - False indicates that the media should not start muted\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-defaultmuted}\n */\n'defaultMuted',\n\n/**\n * Get the value of `playbackRate` from the media element. `playbackRate` indicates\n * the rate at which the media is currently playing back. Examples:\n *   - if playbackRate is set to 2, media will play twice as fast.\n *   - if playbackRate is set to 0.5, media will play half as fast.\n *\n * @method Html5.prototype.playbackRate\n * @return {number}\n *         The value of `playbackRate` from the media element. A number indicating\n *         the current playback speed of the media, where 1 is normal speed.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-playbackrate}\n */\n'playbackRate',\n\n/**\n * Get the value of `played` from the media element. `played` returns a `TimeRange`\n * object representing points in the media timeline that have been played.\n *\n * @method Html5.prototype.played\n * @return {TimeRange}\n *         The value of `played` from the media element. A `TimeRange` object indicating\n *         the ranges of time that have been played.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-played}\n */\n'played',\n\n/**\n * Get the value of `networkState` from the media element. `networkState` indicates\n * the current network state. It returns an enumeration from the following list:\n * - 0: NETWORK_EMPTY\n * - 1: NEWORK_IDLE\n * - 2: NETWORK_LOADING\n * - 3: NETWORK_NO_SOURCE\n *\n * @method Html5.prototype.networkState\n * @return {number}\n *         The value of `networkState` from the media element. This will be a number\n *         from the list in the description.\n *\n * @see [Spec] {@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-networkstate}\n */\n'networkState',\n\n/**\n * Get the value of `readyState` from the media element. `readyState` indicates\n * the current state of the media element. It returns an enumeration from the\n * following list:\n * - 0: HAVE_NOTHING\n * - 1: HAVE_METADATA\n * - 2: HAVE_CURRENT_DATA\n * - 3: HAVE_FUTURE_DATA\n * - 4: HAVE_ENOUGH_DATA\n *\n * @method Html5.prototype.readyState\n * @return {number}\n *         The value of `readyState` from the media element. This will be a number\n *         from the list in the description.\n *\n * @see [Spec] {@link https://www.w3.org/TR/html5/embedded-content-0.html#ready-states}\n */\n'readyState',\n\n/**\n * Get the value of `videoWidth` from the video element. `videoWidth` indicates\n * the current width of the video in css pixels.\n *\n * @method Html5.prototype.videoWidth\n * @return {number}\n *         The value of `videoWidth` from the video element. This will be a number\n *         in css pixels.\n *\n * @see [Spec] {@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-video-videowidth}\n */\n'videoWidth',\n\n/**\n * Get the value of `videoHeight` from the video element. `videoHeigth` indicates\n * the current height of the video in css pixels.\n *\n * @method Html5.prototype.videoHeight\n * @return {number}\n *         The value of `videoHeight` from the video element. This will be a number\n *         in css pixels.\n *\n * @see [Spec] {@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-video-videowidth}\n */\n'videoHeight'].forEach(function (prop) {\n  Html5.prototype[prop] = function () {\n    return this.el_[prop];\n  };\n});\n\n// Wrap native properties with a setter in this format:\n// set + toTitleCase(name)\n[\n/**\n * Set the value of `volume` on the media element. `volume` indicates the current\n * audio level as a percentage in decimal form. This means that 1 is 100%, 0.5 is 50%, and\n * so on.\n *\n * @method Html5.prototype.setVolume\n * @param {number} percentAsDecimal\n *        The volume percent as a decimal. Valid range is from 0-1.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-a-volume}\n */\n'volume',\n\n/**\n * Set the value of `muted` on the media element. `muted` indicates the current\n * audio level should be silent.\n *\n * @method Html5.prototype.setMuted\n * @param {boolean} muted\n *        - True if the audio should be set to silent\n *        - False otherwise\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-muted}\n */\n'muted',\n\n/**\n * Set the value of `src` on the media element. `src` indicates the current\n * {@link Tech~SourceObject} for the media.\n *\n * @method Html5.prototype.setSrc\n * @param {Tech~SourceObject} src\n *        The source object to set as the current source.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-src}\n */\n'src',\n\n/**\n * Set the value of `poster` on the media element. `poster` is the url to\n * an image file that can/will be shown when no media data is available.\n *\n * @method Html5.prototype.setPoster\n * @param {string} poster\n *        The url to an image that should be used as the `poster` for the media\n *        element.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#attr-media-poster}\n */\n'poster',\n\n/**\n * Set the value of `preload` on the media element. `preload` indicates\n * what should download before the media is interacted with. It can have the following\n * values:\n * - none: nothing should be downloaded\n * - metadata: poster and the first few frames of the media may be downloaded to get\n *   media dimensions and other metadata\n * - auto: allow the media and metadata for the media to be downloaded before\n *    interaction\n *\n * @method Html5.prototype.setPreload\n * @param {string} preload\n *         The value of `preload` to set on the media element. Must be 'none', 'metadata',\n *         or 'auto'.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#attr-media-preload}\n */\n'preload',\n\n/**\n * Set the value of `autoplay` on the media element. `autoplay` indicates\n * that the media should start to play as soon as the page is ready.\n *\n * @method Html5.prototype.setAutoplay\n * @param {boolean} autoplay\n *         - True indicates that the media should start as soon as the page loads.\n *         - False indicates that the media should not start as soon as the page loads.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#attr-media-autoplay}\n */\n'autoplay',\n\n/**\n * Set the value of `loop` on the media element. `loop` indicates\n * that the media should return to the start of the media and continue playing once\n * it reaches the end.\n *\n * @method Html5.prototype.setLoop\n * @param {boolean} loop\n *         - True indicates that playback should seek back to start once\n *           the end of a media is reached.\n *         - False indicates that playback should not loop back to the start when the\n *           end of the media is reached.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#attr-media-loop}\n */\n'loop',\n\n/**\n * Set the value of `playbackRate` on the media element. `playbackRate` indicates\n * the rate at which the media should play back. Examples:\n *   - if playbackRate is set to 2, media will play twice as fast.\n *   - if playbackRate is set to 0.5, media will play half as fast.\n *\n * @method Html5.prototype.setPlaybackRate\n * @return {number}\n *         The value of `playbackRate` from the media element. A number indicating\n *         the current playback speed of the media, where 1 is normal speed.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-playbackrate}\n */\n'playbackRate'].forEach(function (prop) {\n  Html5.prototype['set' + (0, _toTitleCase2['default'])(prop)] = function (v) {\n    this.el_[prop] = v;\n  };\n});\n\n// wrap native functions with a function\n[\n/**\n * A wrapper around the media elements `pause` function. This will call the `HTML5`\n * media elements `pause` function.\n *\n * @method Html5.prototype.pause\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-pause}\n */\n'pause',\n\n/**\n * A wrapper around the media elements `load` function. This will call the `HTML5`s\n * media element `load` function.\n *\n * @method Html5.prototype.load\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-load}\n */\n'load'].forEach(function (prop) {\n  Html5.prototype[prop] = function () {\n    return this.el_[prop]();\n  };\n});\n\n_tech2['default'].withSourceHandlers(Html5);\n\n/**\n * Native source handler for Html5, simply passes the source to the media element.\n *\n * @proprety {Tech~SourceObject} source\n *        The source object\n *\n * @proprety {Html5} tech\n *        The instance of the HTML5 tech.\n */\nHtml5.nativeSourceHandler = {};\n\n/**\n * Check if the media element can play the given mime type.\n *\n * @param {string} type\n *        The mimetype to check\n *\n * @return {string}\n *         'probably', 'maybe', or '' (empty string)\n */\nHtml5.nativeSourceHandler.canPlayType = function (type) {\n  // IE9 on Windows 7 without MediaPlayer throws an error here\n  // https://github.com/videojs/video.js/issues/519\n  try {\n    return Html5.TEST_VID.canPlayType(type);\n  } catch (e) {\n    return '';\n  }\n};\n\n/**\n * Check if the media element can handle a source natively.\n *\n * @param {Tech~SourceObject} source\n *         The source object\n *\n * @param {Object} [options]\n *         Options to be passed to the tech.\n *\n * @return {string}\n *         'probably', 'maybe', or '' (empty string).\n */\nHtml5.nativeSourceHandler.canHandleSource = function (source, options) {\n\n  // If a type was provided we should rely on that\n  if (source.type) {\n    return Html5.nativeSourceHandler.canPlayType(source.type);\n\n    // If no type, fall back to checking 'video/[EXTENSION]'\n  } else if (source.src) {\n    var ext = Url.getFileExtension(source.src);\n\n    return Html5.nativeSourceHandler.canPlayType('video/' + ext);\n  }\n\n  return '';\n};\n\n/**\n * Pass the source to the native media element.\n *\n * @param {Tech~SourceObject} source\n *        The source object\n *\n * @param {Html5} tech\n *        The instance of the Html5 tech\n *\n * @param {Object} [options]\n *        The options to pass to the source\n */\nHtml5.nativeSourceHandler.handleSource = function (source, tech, options) {\n  tech.setSrc(source.src);\n};\n\n/**\n * A noop for the native dispose function, as cleanup is not needed.\n */\nHtml5.nativeSourceHandler.dispose = function () {};\n\n// Register the native source handler\nHtml5.registerSourceHandler(Html5.nativeSourceHandler);\n\n_component2['default'].registerComponent('Html5', Html5);\n_tech2['default'].registerTech('Html5', Html5);\nexports['default'] = Html5;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/video.js/es5/tech/html5.js\n ** module id = 103\n ** module chunks = 0 1\n **/","'use strict';\n\nexports.__esModule = true;\n\nvar _player = require('./player.js');\n\nvar _player2 = _interopRequireDefault(_player);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\n/**\n *\n */\n/**\n * The method for registering a video.js plugin. {@link videojs:videojs.registerPlugin].\n *\n * @param {string} name\n *        The name of the plugin that is being registered\n *\n * @param {plugins:PluginFn} init\n *        The function that gets run when a `Player` initializes.\n */\nvar plugin = function plugin(name, init) {\n  _player2['default'].prototype[name] = init;\n}; /**\n    * @file plugins.js\n    * @module plugins\n    */\nexports['default'] = plugin;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/video.js/es5/plugins.js\n ** module id = 104\n ** module chunks = 0 1\n **/","'use strict';\n\nexports.__esModule = true;\n\nvar _trackEnums = require('./track-enums');\n\nvar _track = require('./track');\n\nvar _track2 = _interopRequireDefault(_track);\n\nvar _mergeOptions = require('../utils/merge-options');\n\nvar _mergeOptions2 = _interopRequireDefault(_mergeOptions);\n\nvar _browser = require('../utils/browser.js');\n\nvar browser = _interopRequireWildcard(_browser);\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj['default'] = obj; return newObj; } }\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\n/**\n * A representation of a single `AudioTrack`. If it is part of an {@link AudioTrackList}\n * only one `AudioTrack` in the list will be enabled at a time.\n *\n * @see [Spec]{@link https://html.spec.whatwg.org/multipage/embedded-content.html#audiotrack}\n * @extends Track\n */\nvar AudioTrack = function (_Track) {\n  _inherits(AudioTrack, _Track);\n\n  /**\n   * Create an instance of this class.\n   *\n   * @param {Object} [options={}]\n   *        Object of option names and values\n   *\n   * @param {AudioTrack~Kind} [options.kind='']\n   *        A valid audio track kind\n   *\n   * @param {string} [options.id='vjs_track_' + Guid.newGUID()]\n   *        A unique id for this AudioTrack.\n   *\n   * @param {string} [options.label='']\n   *        The menu label for this track.\n   *\n   * @param {string} [options.language='']\n   *        A valid two character language code.\n   *\n   * @param {boolean} [options.enabled]\n   *        If this track is the one that is currently playing. If this track is part of\n   *        an {@link AudioTrackList}, only one {@link AudioTrack} will be enabled.\n   */\n  function AudioTrack() {\n    var _this, _ret;\n\n    var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n    _classCallCheck(this, AudioTrack);\n\n    var settings = (0, _mergeOptions2['default'])(options, {\n      kind: _trackEnums.AudioTrackKind[options.kind] || ''\n    });\n    // on IE8 this will be a document element\n    // for every other browser this will be a normal object\n    var track = (_this = _possibleConstructorReturn(this, _Track.call(this, settings)), _this);\n    var enabled = false;\n\n    if (browser.IS_IE8) {\n      for (var prop in AudioTrack.prototype) {\n        if (prop !== 'constructor') {\n          track[prop] = AudioTrack.prototype[prop];\n        }\n      }\n    }\n    /**\n     * @member {boolean} enabled\n     *         If this `AudioTrack` is enabled or not. When setting this will\n     *         fire {@link AudioTrack#enabledchange} if the state of enabled is changed.\n     *\n     * @fires VideoTrack#selectedchange\n     */\n    Object.defineProperty(track, 'enabled', {\n      get: function get() {\n        return enabled;\n      },\n      set: function set(newEnabled) {\n        // an invalid or unchanged value\n        if (typeof newEnabled !== 'boolean' || newEnabled === enabled) {\n          return;\n        }\n        enabled = newEnabled;\n\n        /**\n         * An event that fires when enabled changes on this track. This allows\n         * the AudioTrackList that holds this track to act accordingly.\n         *\n         * > Note: This is not part of the spec! Native tracks will do\n         *         this internally without an event.\n         *\n         * @event AudioTrack#enabledchange\n         * @type {EventTarget~Event}\n         */\n        this.trigger('enabledchange');\n      }\n    });\n\n    // if the user sets this track to selected then\n    // set selected to that true value otherwise\n    // we keep it false\n    if (settings.enabled) {\n      track.enabled = settings.enabled;\n    }\n    track.loaded_ = true;\n\n    return _ret = track, _possibleConstructorReturn(_this, _ret);\n  }\n\n  return AudioTrack;\n}(_track2['default']);\n\nexports['default'] = AudioTrack;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/video.js/es5/tracks/audio-track.js\n ** module id = 105\n ** module chunks = 0 1\n **/","'use strict';\n\nexports.__esModule = true;\n\nvar _trackEnums = require('./track-enums');\n\nvar _track = require('./track');\n\nvar _track2 = _interopRequireDefault(_track);\n\nvar _mergeOptions = require('../utils/merge-options');\n\nvar _mergeOptions2 = _interopRequireDefault(_mergeOptions);\n\nvar _browser = require('../utils/browser.js');\n\nvar browser = _interopRequireWildcard(_browser);\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj['default'] = obj; return newObj; } }\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\n/**\n * A representation of a single `VideoTrack`.\n *\n * @see [Spec]{@link https://html.spec.whatwg.org/multipage/embedded-content.html#videotrack}\n * @extends Track\n */\nvar VideoTrack = function (_Track) {\n  _inherits(VideoTrack, _Track);\n\n  /**\n   * Create an instance of this class.\n   *\n   * @param {Object} [options={}]\n   *        Object of option names and values\n   *\n   * @param {string} [options.kind='']\n   *        A valid {@link VideoTrack~Kind}\n   *\n   * @param {string} [options.id='vjs_track_' + Guid.newGUID()]\n   *        A unique id for this AudioTrack.\n   *\n   * @param {string} [options.label='']\n   *        The menu label for this track.\n   *\n   * @param {string} [options.language='']\n   *        A valid two character language code.\n   *\n   * @param {boolean} [options.selected]\n   *        If this track is the one that is currently playing.\n   */\n  function VideoTrack() {\n    var _this, _ret;\n\n    var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n    _classCallCheck(this, VideoTrack);\n\n    var settings = (0, _mergeOptions2['default'])(options, {\n      kind: _trackEnums.VideoTrackKind[options.kind] || ''\n    });\n\n    // on IE8 this will be a document element\n    // for every other browser this will be a normal object\n    var track = (_this = _possibleConstructorReturn(this, _Track.call(this, settings)), _this);\n    var selected = false;\n\n    if (browser.IS_IE8) {\n      for (var prop in VideoTrack.prototype) {\n        if (prop !== 'constructor') {\n          track[prop] = VideoTrack.prototype[prop];\n        }\n      }\n    }\n\n    /**\n     * @member {boolean} selected\n     *         If this `VideoTrack` is selected or not. When setting this will\n     *         fire {@link VideoTrack#selectedchange} if the state of selected changed.\n     *\n     * @fires VideoTrack#selectedchange\n     */\n    Object.defineProperty(track, 'selected', {\n      get: function get() {\n        return selected;\n      },\n      set: function set(newSelected) {\n        // an invalid or unchanged value\n        if (typeof newSelected !== 'boolean' || newSelected === selected) {\n          return;\n        }\n        selected = newSelected;\n\n        /**\n         * An event that fires when selected changes on this track. This allows\n         * the VideoTrackList that holds this track to act accordingly.\n         *\n         * > Note: This is not part of the spec! Native tracks will do\n         *         this internally without an event.\n         *\n         * @event VideoTrack#selectedchange\n         * @type {EventTarget~Event}\n         */\n        this.trigger('selectedchange');\n      }\n    });\n\n    // if the user sets this track to selected then\n    // set selected to that true value otherwise\n    // we keep it false\n    if (settings.selected) {\n      track.selected = settings.selected;\n    }\n\n    return _ret = track, _possibleConstructorReturn(_this, _ret);\n  }\n\n  return VideoTrack;\n}(_track2['default']);\n\nexports['default'] = VideoTrack;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/video.js/es5/tracks/video-track.js\n ** module id = 106\n ** module chunks = 0 1\n **/","'use strict';\n\nexports.__esModule = true;\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nvar _log = require('./utils/log');\n\nvar _log2 = _interopRequireDefault(_log);\n\nvar _obj = require('./utils/obj');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\n/*\n * @file extend.js\n *\n * A combination of node inherits and babel's inherits (after transpile).\n * Both work the same but node adds `super_` to the subClass\n * and Bable adds the superClass as __proto__. Both seem useful.\n */\nvar _inherits = function _inherits(subClass, superClass) {\n  if (typeof superClass !== 'function' && superClass !== null) {\n    throw new TypeError('Super expression must either be null or a function, not ' + (typeof superClass === 'undefined' ? 'undefined' : _typeof(superClass)));\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n\n  if (superClass) {\n    // node\n    subClass.super_ = superClass;\n  }\n};\n\n/*\n * Function for subclassing using the same inheritance that\n * videojs uses internally\n * ```js\n * var Button = videojs.getComponent('Button');\n * ```\n * ```js\n * var MyButton = videojs.extend(Button, {\n *   constructor: function(player, options) {\n *     Button.call(this, player, options);\n *   },\n *   onClick: function() {\n *     // doSomething\n *   }\n * });\n * ```\n */\nvar extendFn = function extendFn(superClass) {\n  var subClassMethods = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n  var subClass = function subClass() {\n    superClass.apply(this, arguments);\n  };\n\n  var methods = {};\n\n  if ((0, _obj.isObject)(subClassMethods)) {\n    if (typeof subClassMethods.init === 'function') {\n      _log2['default'].warn('Constructor logic via init() is deprecated; please use constructor() instead.');\n      subClassMethods.constructor = subClassMethods.init;\n    }\n    if (subClassMethods.constructor !== Object.prototype.constructor) {\n      subClass = subClassMethods.constructor;\n    }\n    methods = subClassMethods;\n  } else if (typeof subClassMethods === 'function') {\n    subClass = subClassMethods;\n  }\n\n  _inherits(subClass, superClass);\n\n  // Extend subObj's prototype with functions and other properties from props\n  for (var name in methods) {\n    if (methods.hasOwnProperty(name)) {\n      subClass.prototype[name] = methods[name];\n    }\n  }\n\n  return subClass;\n};\n\nexports['default'] = extendFn;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/video.js/es5/extend.js\n ** module id = 107\n ** module chunks = 0 1\n **/","/**\n * Basic Ad support plugin for video.js.\n *\n * Common code to support ad integrations.\n */\n(function(window, videojs, undefined) {\n'use strict';\n\nvar\n\n  VIDEO_EVENTS = videojs.getComponent('Html5').Events,\n\n  /**\n   * If ads are not playing, pauses the player at the next available\n   * opportunity. Has no effect if ads have started. This function is necessary\n   * because pausing a video element while processing a `play` event on iOS can\n   * cause the video element to continuously toggle between playing and paused\n   * states.\n   *\n   * @param {object} player The video player\n   */\n  cancelContentPlay = function(player) {\n    if (player.ads.cancelPlayTimeout) {\n      // another cancellation is already in flight, so do nothing\n      return;\n    }\n    player.ads.cancelPlayTimeout = window.setTimeout(function() {\n      // deregister the cancel timeout so subsequent cancels are scheduled\n      player.ads.cancelPlayTimeout = null;\n\n      // pause playback so ads can be handled.\n      if (!player.paused()) {\n        player.pause();\n      }\n\n      // add a contentplayback handler to resume playback when ads finish.\n      player.one('contentplayback', function() {\n        if (player.paused()) {\n          player.play();\n        }\n      });\n    }, 1);\n  },\n\n  /**\n   * Returns an object that captures the portions of player state relevant to\n   * video playback. The result of this function can be passed to\n   * restorePlayerSnapshot with a player to return the player to the state it\n   * was in when this function was invoked.\n   * @param {object} player The videojs player object\n   */\n  getPlayerSnapshot = function(player) {\n    var\n      tech = player.$('.vjs-tech'),\n      tracks = player.remoteTextTracks ? player.remoteTextTracks() : [],\n      track,\n      i,\n      suppressedTracks = [],\n      snapshot = {\n        ended: player.ended(),\n        currentSrc: player.currentSrc(),\n        src: player.src(),\n        currentTime: player.currentTime(),\n        type: player.currentType()\n      };\n\n    if (tech) {\n      snapshot.nativePoster = tech.poster;\n      snapshot.style = tech.getAttribute('style');\n    }\n\n    i = tracks.length;\n    while (i--) {\n      track = tracks[i];\n      suppressedTracks.push({\n        track: track,\n        mode: track.mode\n      });\n      track.mode = 'disabled';\n    }\n    snapshot.suppressedTracks = suppressedTracks;\n\n    return snapshot;\n  },\n\n  /**\n   * Attempts to modify the specified player so that its state is equivalent to\n   * the state of the snapshot.\n   * @param {object} snapshot - the player state to apply\n   */\n  restorePlayerSnapshot = function(player, snapshot) {\n    var\n      // the playback tech\n      tech = player.$('.vjs-tech'),\n\n      // the number of remaining attempts to restore the snapshot\n      attempts = 20,\n\n      suppressedTracks = snapshot.suppressedTracks,\n      trackSnapshot,\n      restoreTracks =  function() {\n        var i = suppressedTracks.length;\n        while (i--) {\n          trackSnapshot = suppressedTracks[i];\n          trackSnapshot.track.mode = trackSnapshot.mode;\n        }\n      },\n\n      // finish restoring the playback state\n      resume = function() {\n        var\n          ended = false,\n          updateEnded = function() {\n            ended = true;\n          };\n        player.currentTime(snapshot.currentTime);\n\n        // Resume playback if this wasn't a postroll\n        if (!snapshot.ended) {\n          player.play();\n        } else {\n          // On iOS 8.1, the \"ended\" event will not fire if you seek\n          // directly to the end of a video. To make that behavior\n          // consistent with the standard, fire a synthetic event if\n          // \"ended\" does not fire within 250ms. Note that the ended\n          // event should occur whether the browser actually has data\n          // available for that position\n          // (https://html.spec.whatwg.org/multipage/embedded-content.html#seeking),\n          // so it should not be necessary to wait for the seek to\n          // indicate completion.\n          player.ads.resumeEndedTimeout = window.setTimeout(function() {\n            if (!ended) {\n              player.play();\n            }\n            player.off('ended', updateEnded);\n            player.ads.resumeEndedTimeout = null;\n          }, 250);\n          player.on('ended', updateEnded);\n\n          // Need to clear the resume/ended timeout on dispose. If it fires\n          // after a player is disposed, an error will be thrown!\n          player.on('dispose', function() {\n            window.clearTimeout(player.ads.resumeEndedTimeout);\n          });\n        }\n      },\n\n      // determine if the video element has loaded enough of the snapshot source\n      // to be ready to apply the rest of the state\n      tryToResume = function() {\n\n        // tryToResume can either have been called through the `contentcanplay`\n        // event or fired through setTimeout.\n        // When tryToResume is called, we should make sure to clear out the other\n        // way it could've been called by removing the listener and clearing out\n        // the timeout.\n        player.off('contentcanplay', tryToResume);\n        if (player.ads.tryToResumeTimeout_) {\n          player.clearTimeout(player.ads.tryToResumeTimeout_);\n          player.ads.tryToResumeTimeout_ = null;\n        }\n\n        // Tech may have changed depending on the differences in sources of the\n        // original video and that of the ad\n        tech = player.el().querySelector('.vjs-tech');\n\n        if (tech.readyState > 1) {\n          // some browsers and media aren't \"seekable\".\n          // readyState greater than 1 allows for seeking without exceptions\n          return resume();\n        }\n\n        if (tech.seekable === undefined) {\n          // if the tech doesn't expose the seekable time ranges, try to\n          // resume playback immediately\n          return resume();\n        }\n\n        if (tech.seekable.length > 0) {\n          // if some period of the video is seekable, resume playback\n          return resume();\n        }\n\n        // delay a bit and then check again unless we're out of attempts\n        if (attempts--) {\n          window.setTimeout(tryToResume, 50);\n        } else {\n          (function() {\n            try {\n              resume();\n            } catch(e) {\n              videojs.log.warn('Failed to resume the content after an advertisement', e);\n            }\n          })();\n        }\n      },\n\n      // whether the video element has been modified since the\n      // snapshot was taken\n      srcChanged;\n\n    if (snapshot.nativePoster) {\n      tech.poster = snapshot.nativePoster;\n    }\n\n    if ('style' in snapshot) {\n      // overwrite all css style properties to restore state precisely\n      tech.setAttribute('style', snapshot.style || '');\n    }\n\n    // Determine whether the player needs to be restored to its state\n    // before ad playback began. With a custom ad display or burned-in\n    // ads, the content player state hasn't been modified and so no\n    // restoration is required\n\n    srcChanged = player.src() !== snapshot.src || player.currentSrc() !== snapshot.currentSrc;\n\n    if (srcChanged) {\n      // on ios7, fiddling with textTracks too early will cause safari to crash\n      player.one('contentloadedmetadata', restoreTracks);\n\n      // if the src changed for ad playback, reset it\n      player.src({ src: snapshot.currentSrc, type: snapshot.type });\n      // safari requires a call to `load` to pick up a changed source\n      player.load();\n      // and then resume from the snapshots time once the original src has loaded\n      // in some browsers (firefox) `canplay` may not fire correctly.\n      // Reace the `canplay` event with a timeout.\n      player.one('contentcanplay', tryToResume);\n      player.ads.tryToResumeTimeout_ = player.setTimeout(tryToResume, 2000);\n    } else if (!player.ended() || !snapshot.ended) {\n      // if we didn't change the src, just restore the tracks\n      restoreTracks();\n      // the src didn't change and this wasn't a postroll\n      // just resume playback at the current time.\n      player.play();\n    }\n  },\n\n  /**\n   * Remove the poster attribute from the video element tech, if present. When\n   * reusing a video element for multiple videos, the poster image will briefly\n   * reappear while the new source loads. Removing the attribute ahead of time\n   * prevents the poster from showing up between videos.\n   * @param {object} player The videojs player object\n   */\n  removeNativePoster = function(player) {\n    var tech = player.$('.vjs-tech');\n    if (tech) {\n      tech.removeAttribute('poster');\n    }\n  },\n\n  // ---------------------------------------------------------------------------\n  // Ad Framework\n  // ---------------------------------------------------------------------------\n\n  // default framework settings\n  defaults = {\n    // maximum amount of time in ms to wait to receive `adsready` from the ad\n    // implementation after play has been requested. Ad implementations are\n    // expected to load any dynamic libraries and make any requests to determine\n    // ad policies for a video during this time.\n    timeout: 5000,\n\n    // maximum amount of time in ms to wait for the ad implementation to start\n    // linear ad mode after `readyforpreroll` has fired. This is in addition to\n    // the standard timeout.\n    prerollTimeout: 100,\n\n    // maximum amount of time in ms to wait for the ad implementation to start\n    // linear ad mode after `contentended` has fired.\n    postrollTimeout: 100,\n\n    // when truthy, instructs the plugin to output additional information about\n    // plugin state to the video.js log. On most devices, the video.js log is\n    // the same as the developer console.\n    debug: false\n  },\n\n  adFramework = function(options) {\n    var player = this;\n    var settings = videojs.mergeOptions(defaults, options);\n    var fsmHandler;\n\n    // prefix all video element events during ad playback\n    // if the video element emits ad-related events directly,\n    // plugins that aren't ad-aware will break. prefixing allows\n    // plugins that wish to handle ad events to do so while\n    // avoiding the complexity for common usage\n    (function() {\n      var videoEvents = VIDEO_EVENTS.concat([\n        'firstplay',\n        'loadedalldata'\n      ]);\n\n      var returnTrue = function() { return true; };\n\n      var triggerEvent = function(type, event) {\n        // pretend we called stopImmediatePropagation because we want the native\n        // element events to continue propagating\n        event.isImmediatePropagationStopped = returnTrue;\n        event.cancelBubble = true;\n        event.isPropagationStopped = returnTrue;\n        player.trigger({\n          type: type + event.type,\n          state: player.ads.state,\n          originalEvent: event\n        });\n      };\n\n      player.on(videoEvents, function redispatch(event) {\n        if (player.ads.state === 'ad-playback') {\n          triggerEvent('ad', event);\n        } else if (player.ads.state === 'content-playback' && event.type === 'ended') {\n          triggerEvent('content', event);\n        } else if (player.ads.state === 'content-resuming') {\n          if (player.ads.snapshot) {\n            // the video element was recycled for ad playback\n            if (player.currentSrc() !== player.ads.snapshot.currentSrc) {\n              if (event.type === 'loadstart') {\n                return;\n              }\n              return triggerEvent('content', event);\n\n            // we ended playing postrolls and the video itself\n            // the content src is back in place\n            } else if (player.ads.snapshot.ended) {\n              if ((event.type === 'pause' ||\n                  event.type === 'ended')) {\n                // after loading a video, the natural state is to not be started\n                // in this case, it actually has, so, we do it manually\n                player.addClass('vjs-has-started');\n                // let `pause` and `ended` events through, naturally\n                return;\n              }\n              // prefix all other events in content-resuming with `content`\n              return triggerEvent('content', event);\n            }\n          }\n          if (event.type !== 'playing') {\n            triggerEvent('content', event);\n          }\n        }\n      });\n    })();\n\n    // We now auto-play when an ad gets loaded if we're playing ads in the same video element as the content.\n    // The problem is that in IE11, we cannot play in addurationchange but in iOS8, we cannot play from adcanplay.\n    // This will allow ad-integrations from needing to do this themselves.\n    player.on(['addurationchange', 'adcanplay'], function() {\n      if (player.currentSrc() === player.ads.snapshot.currentSrc) {\n        return;\n      }\n\n      player.play();\n    });\n\n    // replace the ad initializer with the ad namespace\n    player.ads = {\n      state: 'content-set',\n\n      // Call this when an ad response has been received and there are\n      // linear ads ready to be played.\n      startLinearAdMode: function() {\n        if (player.ads.state === 'preroll?' ||\n            player.ads.state === 'content-playback' ||\n            player.ads.state === 'postroll?') {\n          player.trigger('adstart');\n        }\n      },\n\n      // Call this when a linear ad pod has finished playing.\n      endLinearAdMode: function() {\n        if (player.ads.state === 'ad-playback') {\n          player.trigger('adend');\n        }\n      },\n\n      // Call this when an ad response has been received but there are no\n      // linear ads to be played (i.e. no ads available, or overlays).\n      // This has no effect if we are already in a linear ad mode.  Always\n      // use endLinearAdMode() to exit from linear ad-playback state.\n      skipLinearAdMode: function() {\n        if (player.ads.state !== 'ad-playback') {\n          player.trigger('adskip');\n        }\n      }\n    };\n\n    fsmHandler = function(event) {\n      // Ad Playback State Machine\n      var fsm = {\n        'content-set': {\n          events: {\n            'adscanceled': function() {\n              this.state = 'content-playback';\n            },\n            'adsready': function() {\n              this.state = 'ads-ready';\n            },\n            'play': function() {\n              this.state = 'ads-ready?';\n              cancelContentPlay(player);\n              // remove the poster so it doesn't flash between videos\n              removeNativePoster(player);\n            },\n            'adserror': function() {\n              this.state = 'content-playback';\n            },\n            'adskip': function() {\n              this.state = 'content-playback';\n            }\n          }\n        },\n        'ads-ready': {\n          events: {\n            'play': function() {\n              this.state = 'preroll?';\n              cancelContentPlay(player);\n            },\n            'adskip': function() {\n              this.state = 'content-playback';\n            },\n            'adserror': function() {\n              this.state = 'content-playback';\n            }\n          }\n        },\n        'preroll?': {\n          enter: function() {\n            // change class to show that we're waiting on ads\n            player.addClass('vjs-ad-loading');\n            // schedule an adtimeout event to fire if we waited too long\n            player.ads.adTimeoutTimeout = window.setTimeout(function() {\n              player.trigger('adtimeout');\n            }, settings.prerollTimeout);\n            // signal to ad plugin that it's their opportunity to play a preroll\n            player.trigger('readyforpreroll');\n          },\n          leave: function() {\n            window.clearTimeout(player.ads.adTimeoutTimeout);\n            player.removeClass('vjs-ad-loading');\n          },\n          events: {\n            'play': function() {\n              cancelContentPlay(player);\n            },\n            'adstart': function() {\n              this.state = 'ad-playback';\n            },\n            'adskip': function() {\n              this.state = 'content-playback';\n            },\n            'adtimeout': function() {\n              this.state = 'content-playback';\n            },\n            'adserror': function() {\n              this.state = 'content-playback';\n            }\n          }\n        },\n        'ads-ready?': {\n          enter: function() {\n            player.addClass('vjs-ad-loading');\n            player.ads.adTimeoutTimeout = window.setTimeout(function() {\n              player.trigger('adtimeout');\n            }, settings.timeout);\n          },\n          leave: function() {\n            window.clearTimeout(player.ads.adTimeoutTimeout);\n            player.removeClass('vjs-ad-loading');\n          },\n          events: {\n            'play': function() {\n              cancelContentPlay(player);\n            },\n            'adscanceled': function() {\n              this.state = 'content-playback';\n            },\n            'adsready': function() {\n              this.state = 'preroll?';\n            },\n            'adskip': function() {\n              this.state = 'content-playback';\n            },\n            'adtimeout': function() {\n              this.state = 'content-playback';\n            },\n            'adserror': function() {\n              this.state = 'content-playback';\n            }\n          }\n        },\n        'ad-playback': {\n          enter: function() {\n            // capture current player state snapshot (playing, currentTime, src)\n            this.snapshot = getPlayerSnapshot(player);\n\n            // add css to the element to indicate and ad is playing.\n            player.addClass('vjs-ad-playing');\n\n            // remove the poster so it doesn't flash between ads\n            removeNativePoster(player);\n\n            // We no longer need to supress play events once an ad is playing.\n            // Clear it if we were.\n            if (player.ads.cancelPlayTimeout) {\n              window.clearTimeout(player.ads.cancelPlayTimeout);\n              player.ads.cancelPlayTimeout = null;\n            }\n          },\n          leave: function() {\n            player.removeClass('vjs-ad-playing');\n            restorePlayerSnapshot(player, this.snapshot);\n            // trigger 'adend' as a consistent notification\n            // event that we're exiting ad-playback.\n            if (player.ads.triggerevent !== 'adend') {\n              player.trigger('adend');\n            }\n          },\n          events: {\n            'adend': function() {\n              this.state = 'content-resuming';\n            },\n            'adserror': function() {\n              this.state = 'content-resuming';\n            }\n          }\n        },\n        'content-resuming': {\n          enter: function() {\n            if (this.snapshot.ended) {\n              window.clearTimeout(player.ads._fireEndedTimeout);\n              // in some cases, ads are played in a swf or another video element\n              // so we do not get an ended event in this state automatically.\n              // If we don't get an ended event we can use, we need to trigger\n              // one ourselves or else we won't actually ever end the current video.\n              player.ads._fireEndedTimeout = window.setTimeout(function() {\n                player.trigger('ended');\n              }, 1000);\n            }\n          },\n          leave: function() {\n            window.clearTimeout(player.ads._fireEndedTimeout);\n          },\n          events: {\n            'contentupdate': function() {\n              this.state = 'content-set';\n            },\n            contentresumed: function() {\n              this.state = 'content-playback';\n            },\n            'playing': function() {\n              this.state = 'content-playback';\n            },\n            'ended': function() {\n              this.state = 'content-playback';\n            }\n          }\n        },\n        'postroll?': {\n          enter: function() {\n            this.snapshot = getPlayerSnapshot(player);\n\n            player.addClass('vjs-ad-loading');\n\n            player.ads.adTimeoutTimeout = window.setTimeout(function() {\n              player.trigger('adtimeout');\n            }, settings.postrollTimeout);\n          },\n          leave: function() {\n            window.clearTimeout(player.ads.adTimeoutTimeout);\n            player.removeClass('vjs-ad-loading');\n          },\n          events: {\n            'adstart': function() {\n              this.state = 'ad-playback';\n            },\n            'adskip': function() {\n              this.state = 'content-resuming';\n              window.setTimeout(function() {\n                player.trigger('ended');\n              }, 1);\n            },\n            'adtimeout': function() {\n              this.state = 'content-resuming';\n              window.setTimeout(function() {\n                player.trigger('ended');\n              }, 1);\n            },\n            'adserror': function() {\n              this.state = 'content-resuming';\n              window.setTimeout(function() {\n                player.trigger('ended');\n              }, 1);\n            }\n          }\n        },\n        'content-playback': {\n          enter: function() {\n            // make sure that any cancelPlayTimeout is cleared\n            if (player.ads.cancelPlayTimeout) {\n              window.clearTimeout(player.ads.cancelPlayTimeout);\n              player.ads.cancelPlayTimeout = null;\n            }\n            // this will cause content to start if a user initiated\n            // 'play' event was canceled earlier.\n            player.trigger({\n              type: 'contentplayback',\n              triggerevent: player.ads.triggerevent\n            });\n          },\n          events: {\n            // in the case of a timeout, adsready might come in late.\n            'adsready': function() {\n              player.trigger('readyforpreroll');\n            },\n            'adstart': function() {\n              this.state = 'ad-playback';\n            },\n            'contentupdate': function() {\n              if (player.paused()) {\n                this.state = 'content-set';\n              } else {\n                this.state = 'ads-ready?';\n              }\n            },\n            'contentended': function() {\n              this.state = 'postroll?';\n            }\n          }\n        }\n      };\n\n      (function(state) {\n        var noop = function() {};\n\n        // process the current event with a noop default handler\n        ((fsm[state].events || {})[event.type] || noop).apply(player.ads);\n\n        // check whether the state has changed\n        if (state !== player.ads.state) {\n\n          // record the event that caused the state transition\n          player.ads.triggerevent = event.type;\n\n          // execute leave/enter callbacks if present\n          (fsm[state].leave || noop).apply(player.ads);\n          (fsm[player.ads.state].enter || noop).apply(player.ads);\n\n          // output debug logging\n          if (settings.debug) {\n            videojs.log('ads', player.ads.triggerevent + ' triggered: ' + state + ' -> ' + player.ads.state);\n          }\n        }\n\n      })(player.ads.state);\n\n    };\n\n    // register for the events we're interested in\n    player.on(VIDEO_EVENTS.concat([\n      // events emitted by ad plugin\n      'adtimeout',\n      'contentupdate',\n      'contentplaying',\n      'contentended',\n      'contentresumed',\n\n      // events emitted by third party ad implementors\n      'adsready',\n      'adserror',\n      'adscanceled',\n      'adstart',  // startLinearAdMode()\n      'adend',    // endLinearAdMode()\n      'adskip'    // skipLinearAdMode()\n    ]), fsmHandler);\n\n    // keep track of the current content source\n    // if you want to change the src of the video without triggering\n    // the ad workflow to restart, you can update this variable before\n    // modifying the player's source\n    player.ads.contentSrc = player.currentSrc();\n\n    // implement 'contentupdate' event.\n    (function(){\n      var\n        // check if a new src has been set, if so, trigger contentupdate\n        checkSrc = function() {\n          var src;\n          if (player.ads.state !== 'ad-playback') {\n            src = player.currentSrc();\n            if (src !== player.ads.contentSrc) {\n              player.trigger({\n                type: 'contentupdate',\n                oldValue: player.ads.contentSrc,\n                newValue: src\n              });\n              player.ads.contentSrc = src;\n            }\n          }\n        };\n      // loadstart reliably indicates a new src has been set\n      player.on('loadstart', checkSrc);\n      // check immediately in case we missed the loadstart\n      window.setTimeout(checkSrc, 1);\n    })();\n\n    // kick off the fsm\n    if (!player.paused()) {\n      // simulate a play event if we're autoplaying\n      fsmHandler({type:'play'});\n    }\n\n  };\n\n  // register the ad plugin framework\n  videojs.plugin('ads', adFramework);\n\n})(window, videojs);\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/videojs-contrib-ads/src/videojs.ads.js\n ** module id = 108\n ** module chunks = 0 1\n **/","/**\n * Copyright 2014 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * IMA SDK integration plugin for Video.js. For more information see\n * https://www.github.com/googleads/videojs-ima\n */\n\n(function(vjs) {\n  'use strict';\n  var extend = function(obj) {\n    var arg;\n    var index;\n    var key;\n    for (index = 1; index < arguments.length; index++) {\n      arg = arguments[index];\n      for (key in arg) {\n        if (arg.hasOwnProperty(key)) {\n          obj[key] = arg[key];\n        }\n      }\n    }\n    return obj;\n  };\n\n  var ima_defaults = {\n    debug: false,\n    timeout: 5000,\n    prerollTimeout: 100,\n    adLabel: 'Advertisement',\n    showControlsForJSAds: true\n  };\n\n  var init = function(options, readyCallback) {\n    this.ima = new ImaPlugin(this, options, readyCallback);\n  };\n\n  var ImaPlugin = function(player, options, readyCallback) {\n    this.player = player;\n\n    /**\n     * Assigns the unique id and class names to the given element as well as the style class\n     * @param element\n     * @param controlName\n     * @private\n     */\n    var assignControlAttributes_ = function(element, controlName) {\n      element.id = this.controlPrefix + controlName;\n      element.className = this.controlPrefix + controlName + ' ' + controlName;\n    }.bind(this);\n\n    /**\n     * Returns a regular expression to test a string for the given className\n     * @param className\n     * @returns {RegExp}\n     * @private\n     */\n    var getClassRegexp_ = function(className){\n      // Matches on\n      // (beginning of string OR NOT word char)\n      // classname\n      // (negative lookahead word char OR end of string)\n      return new RegExp('(^|[^A-Za-z-])' + className + '((?![A-Za-z-])|$)', 'gi');\n    };\n\n    /**\n     * Adds a class to the given element if it doesn't already have the class\n     * @param element\n     * @param classToAdd\n     * @private\n     */\n    var addClass_ = function(element, classToAdd){\n      if(getClassRegexp_(classToAdd).test(element.className)){\n        return element;\n      }\n\n      return element.className = element.className.trim() + ' ' + classToAdd;\n    };\n\n    /**\n     * Removes a class from the given element if it has the given class\n     * @param element\n     * @param classToRemove\n     * @private\n     */\n    var removeClass_ = function(element, classToRemove){\n      var classRegexp = getClassRegexp_(classToRemove);\n\n      if(!classRegexp.test(element.className)){\n        return element;\n      }\n\n      return element.className = element.className.trim().replace(classRegexp, '');\n    };\n\n    /**\n     * Creates the ad container passed to the IMA SDK.\n     * @private\n     */\n    var createAdContainer_ = function() {\n      // The adContainerDiv is the DOM of the element that will house\n      // the ads and ad controls.\n      this.vjsControls = this.player.getChild('controlBar');\n      this.adContainerDiv =\n          this.vjsControls.el().parentNode.appendChild(\n              document.createElement('div'));\n      assignControlAttributes_(this.adContainerDiv, 'ima-ad-container');\n      this.adContainerDiv.style.position = \"absolute\";\n      this.adContainerDiv.style.zIndex = 1111;\n      this.adContainerDiv.addEventListener(\n          'mouseenter',\n          showAdControls_,\n          false);\n      this.adContainerDiv.addEventListener(\n          'mouseleave',\n          hideAdControls_,\n          false);\n      createControls_();\n      this.adDisplayContainer =\n          new google.ima.AdDisplayContainer(this.adContainerDiv, this.contentPlayer);\n    }.bind(this);\n\n    /**\n     * Creates the controls for the ad.\n     * @private\n     */\n    var createControls_ = function() {\n      this.controlsDiv = document.createElement('div');\n      assignControlAttributes_(this.controlsDiv, 'ima-controls-div');\n      this.controlsDiv.style.width = '100%';\n      this.countdownDiv = document.createElement('div');\n      assignControlAttributes_(this.countdownDiv, 'ima-countdown-div');\n      this.countdownDiv.innerHTML = this.settings.adLabel;\n      this.countdownDiv.style.display = this.showCountdown ? 'block' : 'none';\n      this.seekBarDiv = document.createElement('div');\n      assignControlAttributes_(this.seekBarDiv, 'ima-seek-bar-div');\n      this.seekBarDiv.style.width = '100%';\n      this.progressDiv = document.createElement('div');\n      assignControlAttributes_(this.progressDiv, 'ima-progress-div');\n      this.playPauseDiv = document.createElement('div');\n      assignControlAttributes_(this.playPauseDiv, 'ima-play-pause-div');\n      addClass_(this.playPauseDiv, 'ima-playing');\n      this.playPauseDiv.addEventListener(\n          'click',\n          onAdPlayPauseClick_,\n          false);\n      this.muteDiv = document.createElement('div');\n      assignControlAttributes_(this.muteDiv, 'ima-mute-div');\n      addClass_(this.muteDiv, 'ima-non-muted');\n      this.muteDiv.addEventListener(\n          'click',\n          onAdMuteClick_,\n          false);\n      this.sliderDiv = document.createElement('div');\n      assignControlAttributes_(this.sliderDiv, 'ima-slider-div');\n      this.sliderDiv.addEventListener(\n          'mousedown',\n          onAdVolumeSliderMouseDown_,\n          false);\n      this.sliderLevelDiv = document.createElement('div');\n      assignControlAttributes_(this.sliderLevelDiv, 'ima-slider-level-div');\n      this.fullscreenDiv = document.createElement('div');\n      assignControlAttributes_(this.fullscreenDiv, 'ima-fullscreen-div');\n      addClass_(this.fullscreenDiv, 'ima-non-fullscreen');\n      this.fullscreenDiv.addEventListener(\n          'click',\n          onAdFullscreenClick_,\n          false);\n      this.adContainerDiv.appendChild(this.controlsDiv);\n      this.controlsDiv.appendChild(this.countdownDiv);\n      this.controlsDiv.appendChild(this.seekBarDiv);\n      this.controlsDiv.appendChild(this.playPauseDiv);\n      this.controlsDiv.appendChild(this.muteDiv);\n      this.controlsDiv.appendChild(this.sliderDiv);\n      this.controlsDiv.appendChild(this.fullscreenDiv);\n      this.seekBarDiv.appendChild(this.progressDiv);\n      this.sliderDiv.appendChild(this.sliderLevelDiv);\n    }.bind(this);\n\n    /**\n     * Initializes the AdDisplayContainer. On mobile, this must be done as a\n     * result of user action.\n     */\n    this.initializeAdDisplayContainer = function() {\n      this.adDisplayContainerInitialized = true;\n      this.adDisplayContainer.initialize();\n    }.bind(this);\n\n    /**\n     * Creates the AdsRequest and request ads through the AdsLoader.\n     */\n    this.requestAds = function() {\n      if (!this.adDisplayContainerInitialized) {\n        this.adDisplayContainer.initialize();\n      }\n      var adsRequest = new google.ima.AdsRequest();\n      if (this.settings.adTagUrl) {\n        adsRequest.adTagUrl = this.settings.adTagUrl;\n      } else {\n        adsRequest.adsResponse = this.settings.adsResponse;\n      }\n      if (this.settings.forceNonLinearFullSlot) {\n        adsRequest.forceNonLinearFullSlot = true;\n      }\n\n      adsRequest.linearAdSlotWidth = this.getPlayerWidth();\n      adsRequest.linearAdSlotHeight = this.getPlayerHeight();\n      adsRequest.nonLinearAdSlotWidth =\n          this.settings.nonLinearWidth || this.getPlayerWidth();\n      adsRequest.nonLinearAdSlotHeight =\n          this.settings.nonLinearHeight || (this.getPlayerHeight() / 3);\n\n      this.adsLoader.requestAds(adsRequest);\n    }.bind(this);\n\n    /**\n     * Listener for the ADS_MANAGER_LOADED event. Creates the AdsManager,\n     * sets up event listeners, and triggers the 'adsready' event for\n     * videojs-ads-contrib.\n     * @private\n     */\n    var onAdsManagerLoaded_ = function(adsManagerLoadedEvent) {\n      this.adsManager = adsManagerLoadedEvent.getAdsManager(\n          this.contentPlayheadTracker, this.adsRenderingSettings);\n\n      this.adsManager.addEventListener(\n          google.ima.AdErrorEvent.Type.AD_ERROR,\n          onAdError_);\n      this.adsManager.addEventListener(\n          google.ima.AdEvent.Type.AD_BREAK_READY,\n          onAdBreakReady_);\n      this.adsManager.addEventListener(\n          google.ima.AdEvent.Type.CONTENT_PAUSE_REQUESTED,\n          this.onContentPauseRequested_);\n      this.adsManager.addEventListener(\n          google.ima.AdEvent.Type.CONTENT_RESUME_REQUESTED,\n          this.onContentResumeRequested_);\n      this.adsManager.addEventListener(\n          google.ima.AdEvent.Type.ALL_ADS_COMPLETED,\n          onAllAdsCompleted_);\n\n      this.adsManager.addEventListener(\n          google.ima.AdEvent.Type.LOADED,\n          onAdLoaded_);\n      this.adsManager.addEventListener(\n          google.ima.AdEvent.Type.STARTED,\n          onAdStarted_);\n      this.adsManager.addEventListener(\n          google.ima.AdEvent.Type.CLICK,\n          onAdPlayPauseClick_);\n      this.adsManager.addEventListener(\n          google.ima.AdEvent.Type.COMPLETE,\n          this.onAdComplete_);\n      this.adsManager.addEventListener(\n          google.ima.AdEvent.Type.SKIPPED,\n          this.onAdComplete_);\n\n      if (!this.autoPlayAdBreaks) {\n        try {\n          var initWidth = this.getPlayerWidth();\n          var initHeight = this.getPlayerHeight();\n          this.adsManagerDimensions.width = initWidth;\n          this.adsManagerDimensions.height = initHeight;\n          this.adsManager.init(\n              initWidth,\n              initHeight,\n              google.ima.ViewMode.NORMAL);\n          this.adsManager.setVolume(this.player.muted() ? 0 : this.player.volume());\n        } catch (adError) {\n          onAdError_(adError);\n        }\n      }\n\n      this.player.trigger('adsready');\n    }.bind(this);\n\n    /**\n     * DEPRECATED: Use startFromReadyCallback\n     * Start ad playback, or content video playback in the absence of a\n     * pre-roll.\n     */\n    this.start = function() {\n      window.console.log(\n          'WARNING: player.ima.start is deprecated. Use ' +\n              'player.ima.startFromReadyCallback instead.');\n    };\n\n    /**\n     * Start ad playback, or content video playback in the absence of a\n     * pre-roll. **NOTE**: This method only needs to be called if you provide\n     * your own readyCallback as the second parameter to player.ima(). If you\n     * only provide options and do not provide your own readyCallback,\n     * **DO NOT** call this method. If you do provide your own readyCallback,\n     * you should call this method in the last line of that callback. For more\n     * info, see this method's usage in our advanced and playlist examples.\n     */\n    this.startFromReadyCallback = function() {\n      if (this.autoPlayAdBreaks) {\n        try {\n          this.adsManager.init(\n              this.getPlayerWidth(),\n              this.getPlayerHeight(),\n              google.ima.ViewMode.NORMAL);\n          this.adsManager.setVolume(this.player.muted() ? 0 : this.player.volume());\n          this.adsManager.start();\n        } catch (adError) {\n          onAdError_(adError);\n        }\n      }\n    }.bind(this);\n\n    /**\n     * Listener for errors fired by the AdsLoader.\n     * @param {google.ima.AdErrorEvent} event The error event thrown by the\n     *     AdsLoader. See\n     *     https://developers.google.com/interactive-media-ads/docs/sdks/html5/v3/apis#ima.AdError.Type\n     * @private\n     */\n    var onAdsLoaderError_ = function(event) {\n      window.console.log('AdsLoader error: ' + event.getError());\n      this.adContainerDiv.style.display = 'none';\n      if (this.adsManager) {\n        this.adsManager.destroy();\n      }\n      this.player.trigger({type: 'adserror', data: { AdError: event.getError(), AdErrorEvent: event }});\n    }.bind(this);\n\n    /**\n     * Listener for errors thrown by the AdsManager.\n     * @param {google.ima.AdErrorEvent} adErrorEvent The error event thrown by\n     *     the AdsManager.\n     * @private\n     */\n    var onAdError_ = function(adErrorEvent) {\n      var errorMessage = adErrorEvent.getError !== undefined ? adErrorEvent.getError() : adErrorEvent.stack;\n      window.console.log('Ad error: ' + errorMessage);\n      this.vjsControls.show();\n      this.adsManager.destroy();\n      this.adContainerDiv.style.display = 'none';\n      this.player.trigger({ type: 'adserror', data: { AdError: errorMessage, AdErrorEvent: adErrorEvent }});\n    }.bind(this);\n\n    /**\n     * Listener for AD_BREAK_READY. Passes event on to publisher's listener.\n     * @param {google.ima.AdEvent} adEvent AdEvent thrown by the AdsManager.\n     * @private\n     */\n    var onAdBreakReady_ = function(adEvent) {\n      this.adBreakReadyListener(adEvent);\n    }.bind(this);\n\n    /**\n     * Called by publishers in manual ad break playback mode to start an ad\n     * break.\n     */\n    this.playAdBreak = function() {\n      if (!this.autoPlayAdBreaks) {\n        this.adsManager.start();\n      }\n    }.bind(this);\n\n    /**\n     * Pauses the content video and displays the ad container so ads can play.\n     * @param {google.ima.AdEvent} adEvent The AdEvent thrown by the AdsManager.\n     * @private\n     */\n    this.onContentPauseRequested_ = function(adEvent) {\n      this.adsActive = true;\n      this.adPlaying = true;\n      this.contentSource = this.player.currentSrc();\n      this.player.off('ended', this.localContentEndedListener);\n      if (adEvent.getAd().getAdPodInfo().getPodIndex() != -1) {\n        // Skip this call for post-roll ads\n        this.player.ads.startLinearAdMode();\n      }\n      this.adContainerDiv.style.display = 'block';\n\n      var contentType = adEvent.getAd().getContentType();\n      if ((contentType === 'application/javascript') && !this.settings.showControlsForJSAds) {\n        this.controlsDiv.style.display = 'none';\n      } else {\n        this.controlsDiv.style.display = 'block';\n      }\n\n      this.vjsControls.hide();\n      showPlayButton();\n      this.player.pause();\n    }.bind(this);\n\n    /**\n     * Resumes content video and hides the ad container.\n     * @param {google.ima.AdEvent} adEvent The AdEvent thrown by the AdsManager.\n     * @private\n     */\n    this.onContentResumeRequested_ = function(adEvent) {\n      this.adsActive = false;\n      this.adPlaying = false;\n      this.player.on('ended', this.localContentEndedListener);\n      if (this.currentAd == null || // hide for post-roll only playlist\n          this.currentAd.isLinear()) { // don't hide for non-linear ads\n        this.adContainerDiv.style.display = 'none';\n      }\n      this.vjsControls.show();\n      if (!this.currentAd) {\n        // Something went wrong playing the ad\n        this.player.ads.endLinearAdMode();\n      } else if (!this.contentComplete &&\n          // Don't exit linear mode after post-roll or content will auto-replay\n          this.currentAd.getAdPodInfo().getPodIndex() != -1 ) {\n        this.player.ads.endLinearAdMode();\n      }\n      this.countdownDiv.innerHTML = '';\n    }.bind(this);\n\n    /**\n     * Records that ads have completed and calls contentAndAdsEndedListeners\n     * if content is also complete.\n     * @param {google.ima.AdEvent} adEvent The AdEvent thrown by the AdsManager.\n     * @private\n     */\n    var onAllAdsCompleted_ = function(adEvent) {\n      this.allAdsCompleted = true;\n      this.adContainerDiv.style.display = 'none';\n      if (this.contentComplete == true) {\n        if (this.contentPlayer.src != this.contentSource) {\n          this.player.src(this.contentSource);\n        }\n        for (var index in this.contentAndAdsEndedListeners) {\n          this.contentAndAdsEndedListeners[index]();\n        }\n      }\n    }.bind(this);\n\n    /**\n     * Starts the content video when a non-linear ad is loaded.\n     * @param {google.ima.AdEvent} adEvent The AdEvent thrown by the AdsManager.\n     * @private\n     */\n   var onAdLoaded_ = function(adEvent) {\n      if (!adEvent.getAd().isLinear()) {\n        this.player.play();\n      }\n    }.bind(this);\n\n    /**\n     * Starts the interval timer to check the current ad time when an ad starts\n     * playing.\n     * @param {google.ima.AdEvent} adEvent The AdEvent thrown by the AdsManager.\n     * @private\n     */\n    var onAdStarted_ = function(adEvent) {\n      this.currentAd = adEvent.getAd();\n      if (this.currentAd.isLinear()) {\n        this.adTrackingTimer = setInterval(\n            onAdPlayheadTrackerInterval_, 250);\n        // Don't bump container when controls are shown\n        removeClass_(this.adContainerDiv, 'bumpable-ima-ad-container');\n      } else {\n        // Bump container when controls are shown\n       addClass_(this.adContainerDiv, 'bumpable-ima-ad-container');\n      }\n    }.bind(this);\n\n    /**\n     * Clears the interval timer for current ad time when an ad completes.\n     * @param {google.ima.AdEvent} adEvent The AdEvent thrown by the AdsManager.\n     * @private\n     */\n    this.onAdComplete_ = function(adEvent) {\n      if (this.currentAd.isLinear()) {\n        clearInterval(this.adTrackingTimer);\n      }\n    }.bind(this);\n\n    /**\n     * Gets the current time and duration of the ad and calls the method to\n     * update the ad UI.\n     * @private\n     */\n    var onAdPlayheadTrackerInterval_ = function() {\n      var remainingTime = this.adsManager.getRemainingTime();\n      var duration =  this.currentAd.getDuration();\n      var currentTime = duration - remainingTime;\n      currentTime = currentTime > 0 ? currentTime : 0;\n      var isPod = false;\n      var totalAds = 0;\n      var adPosition;\n      if (this.currentAd.getAdPodInfo()) {\n        isPod = true;\n        adPosition = this.currentAd.getAdPodInfo().getAdPosition();\n        totalAds = this.currentAd.getAdPodInfo().getTotalAds();\n      }\n\n      // Update countdown timer data\n      var remainingMinutes = Math.floor(remainingTime / 60);\n      var remainingSeconds = Math.floor(remainingTime % 60);\n      if (remainingSeconds.toString().length < 2) {\n        remainingSeconds = '0' + remainingSeconds;\n      }\n      var podCount = ': ';\n      if (isPod && (totalAds > 1)) {\n        podCount = ' (' + adPosition + ' of ' + totalAds + '): ';\n      }\n      this.countdownDiv.innerHTML =\n          this.settings.adLabel + podCount +\n          remainingMinutes + ':' + remainingSeconds;\n\n      // Update UI\n      var playProgressRatio = currentTime / duration;\n      var playProgressPercent = playProgressRatio * 100;\n      this.progressDiv.style.width = playProgressPercent + '%';\n    }.bind(this);\n\n    this.getPlayerWidth = function() {\n      var retVal = parseInt(getComputedStyle(this.player.el()).width, 10) ||\n          this.player.width();\n      return retVal;\n    }.bind(this);\n\n    this.getPlayerHeight = function() {\n      var retVal = parseInt(getComputedStyle(this.player.el()).height, 10) ||\n          this.player.height();\n      return retVal;\n    }.bind(this);\n\n    /**\n     * Hides the ad controls on mouseout.\n     * @private\n     */\n    var hideAdControls_ = function() {\n      this.controlsDiv.style.height = '14px';\n      this.playPauseDiv.style.display = 'none';\n      this.muteDiv.style.display = 'none';\n      this.sliderDiv.style.display = 'none';\n      this.fullscreenDiv.style.display = 'none';\n    }.bind(this);\n\n    /**\n     * Shows ad controls on mouseover.\n     * @private\n     */\n    var showAdControls_ = function() {\n      this.controlsDiv.style.height = '37px';\n      this.playPauseDiv.style.display = 'block';\n      this.muteDiv.style.display = 'block';\n      this.sliderDiv.style.display = 'block';\n      this.fullscreenDiv.style.display = 'block';\n    }.bind(this);\n\n    /**\n     * Show pause and hide play button\n     */\n    var showPauseButton = function() {\n      addClass_(this.playPauseDiv, 'ima-paused');\n      removeClass_(this.playPauseDiv, 'ima-playing');\n    }.bind(this);\n\n    /**\n     * Show play and hide pause button\n     */\n    var showPlayButton = function() {\n      addClass_(this.playPauseDiv, 'ima-playing');\n      removeClass_(this.playPauseDiv, 'ima-paused');\n    }.bind(this);\n\n    /**\n     * Listener for clicks on the play/pause button during ad playback.\n     * @private\n     */\n    var onAdPlayPauseClick_ = function() {\n      if (this.adPlaying) {\n        showPauseButton();\n        this.adsManager.pause();\n        this.adPlaying = false;\n      } else {\n        showPlayButton();\n        this.adsManager.resume();\n        this.adPlaying = true;\n      }\n    }.bind(this);\n\n    /**\n     * Listener for clicks on the mute button during ad playback.\n     * @private\n     */\n    var onAdMuteClick_ = function() {\n      if (this.adMuted) {\n        addClass_(this.muteDiv, 'ima-non-muted');\n        removeClass_(this.muteDiv, 'ima-muted');\n        this.adsManager.setVolume(1);\n        // Bubble down to content player\n        this.player.muted(false);\n        this.adMuted = false;\n        this.sliderLevelDiv.style.width = this.player.volume() * 100 + \"%\";\n      } else {\n        addClass_(this.muteDiv, 'ima-muted');\n        removeClass_(this.muteDiv, 'ima-non-muted');\n        this.adsManager.setVolume(0);\n        // Bubble down to content player\n        this.player.muted(true);\n        this.adMuted = true;\n        this.sliderLevelDiv.style.width = \"0%\";\n      }\n    }.bind(this);\n\n    /* Listener for mouse down events during ad playback. Used for volume.\n     * @private\n     */\n    var onAdVolumeSliderMouseDown_ = function() {\n       document.addEventListener('mouseup', onMouseUp_, false);\n       document.addEventListener('mousemove', onMouseMove_, false);\n    };\n\n    /* Mouse movement listener used for volume slider.\n     * @private\n     */\n    var onMouseMove_ = function(event) {\n      setVolumeSlider_(event);\n    };\n\n    /* Mouse release listener used for volume slider.\n     * @private\n     */\n    var onMouseUp_ = function(event) {\n      setVolumeSlider_(event);\n      document.removeEventListener('mousemove', onMouseMove_);\n      document.removeEventListener('mouseup', onMouseUp_);\n    };\n\n    /* Utility function to set volume and associated UI\n     * @private\n     */\n    var setVolumeSlider_ = function(event) {\n      var percent =\n          (event.clientX - this.sliderDiv.getBoundingClientRect().left) /\n              this.sliderDiv.offsetWidth;\n      percent *= 100;\n      //Bounds value 0-100 if mouse is outside slider region.\n      percent = Math.min(Math.max(percent, 0), 100);\n      this.sliderLevelDiv.style.width = percent + \"%\";\n      this.player.volume(percent / 100); //0-1\n      this.adsManager.setVolume(percent / 100);\n      if (this.player.volume() == 0) {\n        addClass_(this.muteDiv, 'ima-muted');\n        removeClass_(this.muteDiv, 'ima-non-muted');\n        this.player.muted(true);\n        this.adMuted = true;\n      }\n      else\n      {\n        addClass_(this.muteDiv, 'ima-non-muted');\n        removeClass_(this.muteDiv, 'ima-muted');\n        this.player.muted(false);\n        this.adMuted = false;\n      }\n    }.bind(this);\n\n    /**\n     * Listener for clicks on the fullscreen button during ad playback.\n     * @private\n     */\n    var onAdFullscreenClick_ = function() {\n      if (this.player.isFullscreen()) {\n        this.player.exitFullscreen();\n      } else {\n        this.player.requestFullscreen();\n      }\n    }.bind(this);\n\n    /**\n     * Listens for the video.js player to change its fullscreen status. This\n     * keeps the fullscreen-ness of the AdContainer in sync with the player.\n     * @private\n     */\n    var onFullscreenChange_ = function() {\n      if (this.player.isFullscreen()) {\n        addClass_(this.fullscreenDiv, 'ima-fullscreen');\n        removeClass_(this.fullscreenDiv, 'ima-non-fullscreen');\n        if (this.adsManager) {\n          this.adsManager.resize(\n              window.screen.width,\n              window.screen.height,\n              google.ima.ViewMode.FULLSCREEN);\n        }\n      } else {\n        addClass_(this.fullscreenDiv, 'ima-non-fullscreen');\n        removeClass_(this.fullscreenDiv, 'ima-fullscreen');\n        if (this.adsManager) {\n          this.adsManager.resize(\n              this.getPlayerWidth(),\n              this.getPlayerHeight(),\n              google.ima.ViewMode.NORMAL);\n        }\n      }\n    }.bind(this);\n\n    /**\n     * Listens for the video.js player to change its volume. This keeps the ad\n     * volume in sync with the content volume if the volume of the player is\n     * changed while content is playing\n     * @private\n     */\n    var onVolumeChange_ = function() {\n      var newVolume = this.player.muted() ? 0 : this.player.volume();\n      if (this.adsManager) {\n        this.adsManager.setVolume(newVolume);\n      }\n      // Update UI\n      if (newVolume == 0) {\n        this.adMuted = true;\n        addClass_(this.muteDiv, 'ima-muted');\n        removeClass_(this.muteDiv, 'ima-non-muted');\n        this.sliderLevelDiv.style.width = '0%';\n      } else {\n        this.adMuted = false;\n        addClass_(this.muteDiv, 'ima-non-muted');\n        removeClass_(this.muteDiv, 'ima-muted');\n        this.sliderLevelDiv.style.width = newVolume * 100 + '%';\n      }\n    }.bind(this);\n\n    /**\n     * Seeks content to 00:00:00. This is used as an event handler for the\n     * loadedmetadata event, since seeking is not possible until that event has\n     * fired.\n     * @private\n     */\n    var seekContentToZero_ = function() {\n      this.player.off('loadedmetadata', seekContentToZero_);\n      this.player.currentTime(0);\n    }.bind(this);\n\n    /**\n     * Seeks content to 00:00:00 and starts playback. This is used as an event\n     * handler for the loadedmetadata event, since seeking is not possible until\n     * that event has fired.\n     * @private\n     */\n    var playContentFromZero_ = function() {\n      this.player.off('loadedmetadata', playContentFromZero_);\n      this.player.currentTime(0);\n      this.player.play();\n    }.bind(this);\n\n    /**\n     * Destroys the AdsManager, sets it to null, and calls contentComplete to\n     * reset correlators. Once this is done it requests ads again to keep the\n     * inventory available.\n     * @private\n     */\n    var resetIMA_ = function() {\n      this.adsActive = false;\n      this.adPlaying = false;\n      this.player.on('ended', this.localContentEndedListener);\n      if (this.currentAd && this.currentAd.isLinear()) {\n        this.adContainerDiv.style.display = 'none';\n      }\n      this.vjsControls.show();\n      this.player.ads.endLinearAdMode();\n      if (this.adTrackingTimer) {\n        // If this is called while an ad is playing, stop trying to get that\n        // ad's current time.\n        clearInterval(this.adTrackingTimer);\n      }\n      if (this.adsManager) {\n        this.adsManager.destroy();\n        this.adsManager = null;\n      }\n      if (this.adsLoader && !this.contentComplete) {\n        this.adsLoader.contentComplete();\n      }\n      this.contentComplete = false;\n      this.allAdsCompleted = false;\n    }.bind(this);\n\n    /**\n     * Ads an EventListener to the AdsManager. For a list of available events,\n     * see\n     * https://developers.google.com/interactive-media-ads/docs/sdks/html5/v3/apis#ima.AdEvent.Type\n     * @param {google.ima.AdEvent.Type} event The AdEvent.Type for which to listen.\n     * @param {function} callback The method to call when the event is fired.\n     */\n    this.addEventListener = function(event, callback) {\n      if (this.adsManager) {\n        this.adsManager.addEventListener(event, callback);\n      }\n    }.bind(this);\n\n    /**\n     * Returns the instance of the AdsManager.\n     * @return {google.ima.AdsManager} The AdsManager being used by the plugin.\n     */\n    this.getAdsManager = function() {\n      return this.adsManager;\n    }.bind(this);\n\n    /**\n     * DEPRECATED: Use setContentWithAdTag.\n     * Sets the content of the video player. You should use this method instead\n     * of setting the content src directly to ensure the proper ad tag is\n     * requested when the video content is loaded.\n     * @param {?string} contentSrc The URI for the content to be played. Leave\n     *     blank to use the existing content.\n     * @param {?string} adTag The ad tag to be requested when the content loads.\n     *     Leave blank to use the existing ad tag.\n     * @param {?boolean} playOnLoad True to play the content once it has loaded,\n     *     false to only load the content but not start playback.\n     */\n    this.setContent = function(contentSrc, adTag, playOnLoad) {\n      window.console.log(\n          'WARNING: player.ima.setContent is deprecated. Use ' +\n              'player.ima.setContentWithAdTag instead.');\n      this.setContentWithAdTag(contentSrc, adTag, playOnLoad);\n    }.bind(this);\n\n    /**\n     * Sets the content of the video player. You should use this method instead\n     * of setting the content src directly to ensure the proper ad tag is\n     * requested when the video content is loaded.\n     * @param {?string} contentSrc The URI for the content to be played. Leave\n     *     blank to use the existing content.\n     * @param {?string} adTag The ad tag to be requested when the content loads.\n     *     Leave blank to use the existing ad tag.\n     * @param {?boolean} playOnLoad True to play the content once it has loaded,\n     *     false to only load the content but not start playback.\n     */\n    this.setContentWithAdTag = function(contentSrc, adTag, playOnLoad) {\n      resetIMA_();\n      this.settings.adTagUrl = adTag ? adTag : this.settings.adTagUrl;\n      changeSource_(contentSrc, playOnLoad);\n    }.bind(this);\n\n    /**\n     * Sets the content of the video player. You should use this method instead\n     * of setting the content src directly to ensure the proper ads response is\n     * used when the video content is loaded.\n     * @param {?string} contentSrc The URI for the content to be played. Leave\n     *     blank to use the existing content.\n     * @param {?string} adsResponse The ads response to be requested when the\n     *     content loads. Leave blank to use the existing ads response.\n     * @param {?boolean} playOnLoad True to play the content once it has loaded,\n     *     false to only load the content but not start playback.\n     */\n    this.setContentWithAdsResponse = function(contentSrc, adsResponse, playOnLoad) {\n      resetIMA_();\n      this.settings.adsResponse = adsResponse ? adsResponse : this.settings.adsResponse;\n      changeSource_(contentSrc, playOnLoad);\n    }.bind(this);\n\n    /**\n     * Changes the player source.\n     * @param {?string} contentSrc The URI for the content to be played. Leave\n     *     blank to use the existing content.\n     * @param {?boolean} playOnLoad True to play the content once it has loaded,\n     *     false to only load the content but not start playback.\n     * @private\n     */\n    var changeSource_ = function(contentSrc, playOnLoad) {\n      // Only try to pause the player when initialised with a source already\n      if (!!this.player.currentSrc()) {\n        this.player.currentTime(0);\n        this.player.pause();\n      }\n      if (contentSrc) {\n        this.player.src(contentSrc);\n      }\n      if (playOnLoad) {\n        this.player.on('loadedmetadata', playContentFromZero_);\n      } else {\n        this.player.on('loadedmetadata', seekContentToZero_);\n      }\n    }.bind(this);\n\n    /**\n     * Adds a listener for the 'ended' event of the video player. This should be\n     * used instead of setting an 'ended' listener directly to ensure that the\n     * ima can do proper cleanup of the SDK before other event listeners\n     * are called.\n     * @param {function} listener The listener to be called when content completes.\n     */\n    this.addContentEndedListener = function(listener) {\n      this.contentEndedListeners.push(listener);\n    }.bind(this);\n\n    /**\n     * Adds a listener that will be called when content and all ads have\n     * finished playing.\n     * @param {function} listener The listener to be called when content and ads complete.\n     */\n    this.addContentAndAdsEndedListener = function(listener) {\n      this.contentAndAdsEndedListeners.push(listener);\n    }.bind(this);\n\n    /**\n     * Sets the listener to be called to trigger manual ad break playback.\n     * @param {function} listener The listener to be called to trigger manual ad break playback.\n     */\n    this.setAdBreakReadyListener = function(listener) {\n      this.adBreakReadyListener = listener;\n    }.bind(this);\n\n    /**\n     * Pauses the ad.\n     */\n    this.pauseAd = function() {\n      if (this.adsActive && this.adPlaying) {\n        showPauseButton();\n        this.adsManager.pause();\n        this.adPlaying = false;\n      }\n    }.bind(this);\n\n    /**\n     * Resumes the ad.\n     */\n    this.resumeAd = function() {\n      if (this.adsActive && !this.adPlaying) {\n        showPlayButton();\n        this.adsManager.resume();\n        this.adPlaying = true;\n      }\n    }.bind(this);\n\n    /**\n     * Set up intervals to check for seeking and update current video time.\n     * @private\n     */\n    var setUpPlayerIntervals_ = function() {\n      this.updateTimeIntervalHandle =\n          setInterval(updateCurrentTime_, this.seekCheckInterval);\n      this.seekCheckIntervalHandle =\n          setInterval(checkForSeeking_, this.seekCheckInterval);\n      this.resizeCheckIntervalHandle =\n          setInterval(checkForResize_, this.resizeCheckInterval);\n    }.bind(this);\n\n    /**\n     * Updates the current time of the video\n     * @private\n     */\n    var updateCurrentTime_ = function() {\n      if (!this.contentPlayheadTracker.seeking) {\n        this.contentPlayheadTracker.currentTime = this.player.currentTime();\n      }\n    }.bind(this);\n\n    /**\n     * Detects when the user is seeking through a video.\n     * This is used to prevent mid-rolls from playing while a user is seeking.\n     *\n     * There *is* a seeking property of the HTML5 video element, but it's not\n     * properly implemented on all platforms (e.g. mobile safari), so we have to\n     * check ourselves to be sure.\n     *\n     * @private\n     */\n    var checkForSeeking_ = function() {\n      var tempCurrentTime = this.player.currentTime();\n      var diff = (tempCurrentTime - this.contentPlayheadTracker.previousTime) * 1000;\n      if (Math.abs(diff) > this.seekCheckInterval + this.seekThreshold) {\n        this.contentPlayheadTracker.seeking = true;\n      } else {\n        this.contentPlayheadTracker.seeking = false;\n      }\n      this.contentPlayheadTracker.previousTime = this.player.currentTime();\n    }.bind(this);\n\n    /**\n     * Detects when the player is resized (for fluid support) and resizes the\n     * ads manager to match.\n     *\n     * @private\n     */\n    var checkForResize_ = function() {\n      var currentWidth = this.getPlayerWidth();\n      var currentHeight = this.getPlayerHeight();\n\n      if (this.adsManager && (currentWidth != this.adsManagerDimensions.width ||\n          currentHeight != this.adsManagerDimensions.height)) {\n        this.adsManagerDimensions.width = currentWidth;\n        this.adsManagerDimensions.height = currentHeight;\n        this.adsManager.resize(currentWidth, currentHeight, google.ima.ViewMode.NORMAL);\n      }\n    }.bind(this);\n\n    /**\n     * Changes the flag to show or hide the ad countdown timer.\n     *\n     * @param {boolean} showCountdownIn Show or hide the countdown timer.\n     */\n    this.setShowCountdown = function(showCountdownIn) {\n      this.showCountdown = showCountdownIn;\n      this.countdownDiv.style.display = this.showCountdown ? 'block' : 'none';\n    }.bind(this);\n\n    /**\n     * Current plugin version.\n     */\n    this.VERSION = '0.2.0';\n\n    /**\n     * Stores user-provided settings.\n     */\n    this.settings;\n\n    /**\n     * Used to prefix videojs ima\n     */\n    this.controlPrefix;\n\n    /**\n     * Video element playing content.\n     */\n    this.contentPlayer;\n\n    /**\n     * Boolean flag to show or hide the ad countdown timer.\n     */\n    this.showCountdown;\n\n    /**\n     * Boolena flag to enable manual ad break playback.\n     */\n    this.autoPlayAdBreaks;\n\n    /**\n     * Video.js control bar.\n     */\n    this.vjsControls;\n\n    /**\n     * Div used as an ad container.\n     */\n    this.adContainerDiv;\n\n    /**\n     * Div used to display ad controls.\n     */\n    this.controlsDiv;\n\n    /**\n     * Div used to display ad countdown timer.\n     */\n    this.countdownDiv;\n\n    /**\n     * Div used to display add seek bar.\n     */\n    this.seekBarDiv;\n\n    /**\n     * Div used to display ad progress (in seek bar).\n     */\n    this.progressDiv;\n\n    /**\n     * Div used to display ad play/pause button.\n     */\n    this.playPauseDiv;\n\n    /**\n     * Div used to display ad mute button.\n     */\n    this.muteDiv;\n\n    /**\n     * Div used by the volume slider.\n     */\n    this.sliderDiv;\n\n    /**\n     * Volume slider level visuals\n     */\n    this.sliderLevelDiv;\n\n    /**\n     * Div used to display ad fullscreen button.\n     */\n    this.fullscreenDiv;\n\n    /**\n     * IMA SDK AdDisplayContainer.\n     */\n    this.adDisplayContainer;\n\n    /**\n     * True if the AdDisplayContainer has been initialized. False otherwise.\n     */\n    this.adDisplayContainerInitialized = false;\n\n    /**\n     * IMA SDK AdsLoader\n     */\n    this.adsLoader;\n\n    /**\n     * IMA SDK AdsManager\n     */\n    this.adsManager;\n\n    /**\n     * IMA SDK AdsRenderingSettings.\n     */\n    this.adsRenderingSettings = null;\n\n    /**\n     * Ad tag URL. Should return VAST, VMAP, or ad rules.\n     */\n    this.adTagUrl;\n\n    /**\n     * VAST, VMAP, or ad rules response. Used in lieu of fetching a response\n     * from an ad tag URL.\n     */\n    this.adsResponse;\n\n    /**\n     * Current IMA SDK Ad.\n     */\n    this.currentAd;\n\n    /**\n     * Timer used to track content progress.\n     */\n    this.contentTrackingTimer;\n\n    /**\n     * Timer used to track ad progress.\n     */\n    this.adTrackingTimer;\n\n    /**\n     * True if ads are currently displayed, false otherwise.\n     * True regardless of ad pause state if an ad is currently being displayed.\n     */\n    this.adsActive = false;\n\n    /**\n     * True if ad is currently playing, false if ad is paused or ads are not\n     * currently displayed.\n     */\n    this.adPlaying = false;\n\n    /**\n     * True if the ad is muted, false otherwise.\n     */\n    this.adMuted = false;\n\n    /**\n     * True if our content video has completed, false otherwise.\n     */\n    this.contentComplete = false;\n\n    /**\n     * True if ALL_ADS_COMPLETED has fired, false until then.\n     */\n     this.allAdsCompleted = false;\n\n    /**\n     * Handle to interval that repeatedly updates current time.\n     */\n    this.updateTimeIntervalHandle;\n\n    /**\n     * Handle to interval that repeatedly checks for seeking.\n     */\n    this.seekCheckIntervalHandle;\n\n    /**\n     * Interval (ms) on which to check if the user is seeking through the\n     * content.\n     */\n    this.seekCheckInterval = 1000;\n\n    /**\n     * Handle to interval that repeatedly checks for player resize.\n     */\n    this.resizeCheckIntervalHandle;\n\n    /**\n     * Interval (ms) to check for player resize for fluid support.\n     */\n    this.resizeCheckInterval = 250;\n\n    /**\n     * Threshold by which to judge user seeking. We check every 1000 ms to see\n     * if the user is seeking. In order for us to decide that they are *not*\n     * seeking, the content video playhead must only change by 900-1100 ms\n     * between checks. Any greater change and we assume the user is seeking\n     * through the video.\n     */\n    this.seekThreshold = 100;\n\n    /**\n     * Stores data for the content playhead tracker.\n     */\n    this.contentPlayheadTracker = {\n      currentTime: 0,\n      previousTime: 0,\n      seeking: false,\n      duration: 0\n    };\n\n    /**\n     * Stores data for the ad playhead tracker.\n     */\n    this.adPlayheadTracker = {\n      currentTime: 0,\n      duration: 0,\n      isPod: false,\n      adPosition: 0,\n      totalAds: 0\n    };\n\n    /**\n     * Stores the dimensions for the ads manager.\n     */\n    this.adsManagerDimensions = {\n      width: 0,\n      height: 0\n    };\n\n    /**\n     * Content ended listeners passed by the publisher to the plugin. Publishers\n     * should allow the plugin to handle content ended to ensure proper support\n     * of custom ad playback.\n     */\n    this.contentEndedListeners = [];\n\n    /**\n     * Content and ads ended listeners passed by the publisher to the plugin.\n     * These will be called when the plugin detects that content *and all\n     * ads* have completed. This differs from the contentEndedListeners in that\n     * contentEndedListeners will fire between content ending and a post-roll\n     * playing, whereas the contentAndAdsEndedListeners will fire after the\n     * post-roll completes.\n     */\n    this.contentAndAdsEndedListeners = [];\n\n     /**\n      * Listener to be called to trigger manual ad break playback.\n      */\n    this.adBreakReadyListener = undefined;\n\n    /**\n     * Stores the content source so we can re-populate it manually after a\n     * post-roll on iOS.\n     */\n    this.contentSource = '';\n\n    /**\n     * Local content ended listener for contentComplete.\n     */\n    this.localContentEndedListener = function() {\n      if (this.adsLoader && !this.contentComplete) {\n        this.adsLoader.contentComplete();\n        this.contentComplete = true;\n      }\n      for (var index in this.contentEndedListeners) {\n        this.contentEndedListeners[index]();\n      }\n      if (this.allAdsCompleted) {\n        for (var index in this.contentAndAdsEndedListeners) {\n          this.contentAndAdsEndedListeners[index]();\n        }\n      }\n      clearInterval(this.updateTimeIntervalHandle);\n      clearInterval(this.seekCheckIntervalHandle);\n      clearInterval(this.resizeCheckIntervalHandle);\n      if(this.player.el()) {\n        this.player.one('play', setUpPlayerIntervals_);\n      }\n    }.bind(this);\n\n    this.playerDisposedListener = function(){\n      this.contentEndedListeners, this.contentAndAdsEndedListeners = [], [];\n      this.contentComplete = true;\n      this.player.off('ended', this.localContentEndedListener);\n\n      // Bug fix: https://github.com/googleads/videojs-ima/issues/306\n      if (this.player.ads.adTimeoutTimeout) {\n        clearTimeout(this.player.ads.adTimeoutTimeout);\n      }\n\n      var intervalsToClear = [this.updateTimeIntervalHandle, this.seekCheckIntervalHandle,\n        this.adTrackingTimer, this.resizeCheckIntervalHandle];\n      for (var index in intervalsToClear) {\n        var interval = intervalsToClear[index];\n        if (interval) {\n          clearInterval(interval);\n        }\n      }\n      if (this.adsManager) {\n        this.adsManager.destroy();\n        this.adsManager = null;\n      }\n    }.bind(this);\n\n    this.settings = extend({}, ima_defaults, options || {});\n\n    // Currently this isn't used but I can see it being needed in the future, so\n    // to avoid implementation problems with later updates I'm requiring it.\n    if (!this.settings['id']) {\n      window.console.log('Error: must provide id of video.js div');\n      return;\n    }\n\n    this.controlPrefix = (this.settings.id + '_') || '';\n\n    this.contentPlayer = document.getElementById(this.settings['id'] + '_html5_api');\n    // Default showing countdown timer to true.\n    this.showCountdown = true;\n    if (this.settings['showCountdown'] == false) {\n      this.showCountdown = false;\n    }\n\n    this.autoPlayAdBreaks = true;\n    if (this.settings['autoPlayAdBreaks'] == false) {\n      this.autoPlayAdBreaks = false;\n    }\n\n    player.one('play', setUpPlayerIntervals_);\n\n    player.on('ended', this.localContentEndedListener);\n    player.on('dispose', this.playerDisposedListener);\n\n    var contrib_ads_defaults = {\n      debug: this.settings.debug,\n      timeout: this.settings.timeout,\n      prerollTimeout: this.settings.prerollTimeout\n    };\n\n    var ads_plugin_settings =\n        extend({}, contrib_ads_defaults, options['contribAdsSettings'] || {});\n\n    player.ads(ads_plugin_settings);\n\n    this.adsRenderingSettings = new google.ima.AdsRenderingSettings();\n    this.adsRenderingSettings.restoreCustomPlaybackStateOnAdBreakComplete = true;\n    if (this.settings['adsRenderingSettings']) {\n      for (var setting in this.settings['adsRenderingSettings']) {\n        this.adsRenderingSettings[setting] =\n            this.settings['adsRenderingSettings'][setting];\n      }\n    }\n\n    if (this.settings['locale']) {\n      google.ima.settings.setLocale(this.settings['locale']);\n    }\n\n    createAdContainer_();\n    this.adsLoader = new google.ima.AdsLoader(this.adDisplayContainer);\n\n    this.adsLoader.getSettings().setVpaidMode(\n        google.ima.ImaSdkSettings.VpaidMode.ENABLED);\n    if (this.settings.vpaidAllowed == false) {\n      this.adsLoader.getSettings().setVpaidMode(\n          google.ima.ImaSdkSettings.VpaidMode.DISABLED);\n    }\n    if (this.settings.vpaidMode) {\n      this.adsLoader.getSettings().setVpaidMode(this.settings.vpaidMode);\n    }\n\n    if (this.settings.locale) {\n      this.adsLoader.getSettings().setLocale(this.settings.locale);\n    }\n\n    if (this.settings.numRedirects) {\n      this.adsLoader.getSettings().setNumRedirects(this.settings.numRedirects);\n    }\n\n    this.adsLoader.getSettings().setPlayerType('videojs-ima');\n    this.adsLoader.getSettings().setPlayerVersion(this.VERSION);\n    this.adsLoader.getSettings().setAutoPlayAdBreaks(this.autoPlayAdBreaks);\n\n    this.adsLoader.addEventListener(\n      google.ima.AdsManagerLoadedEvent.Type.ADS_MANAGER_LOADED,\n      onAdsManagerLoaded_,\n      false);\n    this.adsLoader.addEventListener(\n      google.ima.AdErrorEvent.Type.AD_ERROR,\n      onAdsLoaderError_,\n      false);\n\n    if (!readyCallback) {\n      readyCallback = this.startFromReadyCallback;\n    }\n    player.on('readyforpreroll', readyCallback);\n    player.ready(function() {\n      player.on('fullscreenchange', onFullscreenChange_);\n      player.on('volumechange', onVolumeChange_);\n    });\n  };\n\n  vjs.plugin('ima', init);\n}(window.videojs));\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/videojs-ima/src/videojs.ima.js\n ** module id = 109\n ** module chunks = 0 1\n **/","/*\n* videojs-ga - v0.4.2 - 2016-11-03\n* Copyright (c) 2016 Michael Bensoussan\n* Licensed MIT\n*/\n(function() {\n  var __indexOf = [].indexOf || function(item) { for (var i = 0, l = this.length; i < l; i++) { if (i in this && this[i] === item) return i; } return -1; };\n\n  videojs.plugin('ga', function(options) {\n    var adend, adpause, adserror, adskip, adstart, adtimeout, autoLabel, dataSetupOptions, defaultsEventsToTrack, end, ended, error, eventCategory, eventLabel, eventsToTrack, firstplay, fullscreen, getCurrentTime, getCurrentValue, init, interval, isFinite, loaded, parsedOptions, pause, percentsAlreadyTracked, percentsPlayedInterval, play, playing, resize, secondsPlayed, secondsPlayedInterval, secondsPlayedMoments, seekEnd, seekStart, seeking, sendbeacon, startTimeTracking, stopTimeTracking, timeupdate, trackReplaySeconds, trackSeconds, trackingTime, volumeChange,\n      _this = this;\n    if (options == null) {\n      options = {};\n    }\n    dataSetupOptions = {};\n    if (this.options_['data-setup']) {\n      parsedOptions = JSON.parse(this.options_['data-setup']);\n      if (parsedOptions.ga) {\n        dataSetupOptions = parsedOptions.ga;\n      }\n    }\n    defaultsEventsToTrack = ['loaded', 'percentsPlayed', 'secondsPlayed', 'start', 'end', 'seek', 'play', 'pause', 'resize', 'volumeChange', 'error', 'fullscreen', 'adstart', 'adpause', 'adend', 'adskip', 'adtimeout', 'adserror'];\n    eventsToTrack = options.eventsToTrack || dataSetupOptions.eventsToTrack || defaultsEventsToTrack;\n    eventCategory = options.eventCategory || dataSetupOptions.eventCategory || 'Video';\n    autoLabel = options.autoLabel != null ? options.autoLabel : true;\n    eventLabel = options.eventLabel || dataSetupOptions.eventLabel;\n    percentsPlayedInterval = options.percentsPlayedInterval || dataSetupOptions.percentsPlayedInterval || 10;\n    secondsPlayedInterval = options.secondsPlayedInterval || dataSetupOptions.secondsPlayedInterval || 60;\n    secondsPlayedMoments = options.secondsPlayedMoments || dataSetupOptions.secondsPlayedMoments;\n    trackReplaySeconds = options.trackReplaySeconds;\n    percentsAlreadyTracked = [];\n    seekStart = seekEnd = 0;\n    seeking = false;\n    ended = false;\n    trackingTime = false;\n    secondsPlayed = 0;\n    isFinite = void 0;\n    trackSeconds = void 0;\n    interval = void 0;\n    options.debug = options.debug || false;\n    init = function() {\n      isFinite = Number.isFinite(_this.duration());\n      trackSeconds = __indexOf.call(eventsToTrack, 'secondsPlayed') >= 0 && (!isFinite || options.trackFiniteSeconds);\n      if (!eventLabel && autoLabel) {\n        eventLabel = _this.currentSrc().split('/').slice(-1)[0].replace(/\\.(\\w{3,4})(\\?.*)?$/i, '');\n      }\n      if (!isFinite && !(options.eventCategory || dataSetupOptions.eventCategory)) {\n        eventCategory = 'Stream';\n      }\n      return startTimeTracking();\n    };\n    loaded = function() {\n      init();\n      if (__indexOf.call(eventsToTrack, 'loadedmetadata') >= 0) {\n        sendbeacon('loadedmetadata', true);\n      }\n    };\n    timeupdate = function() {\n      var currentTime, duration, percent, percentPlayed, _i;\n      if (!isFinite) {\n        return;\n      }\n      currentTime = getCurrentValue();\n      duration = Math.round(this.duration());\n      percentPlayed = Math.round(currentTime / duration * 100);\n      if (percentsPlayedInterval) {\n        for (percent = _i = 0; _i <= 99; percent = _i += percentsPlayedInterval) {\n          if (percentPlayed >= percent && __indexOf.call(percentsAlreadyTracked, percent) < 0) {\n            if (__indexOf.call(eventsToTrack, 'start') >= 0 && percent === 0 && percentPlayed > 0) {\n              sendbeacon('start', true);\n            } else if (__indexOf.call(eventsToTrack, 'percentsPlayed') >= 0 && percentPlayed !== 0) {\n              sendbeacon('percent played', true, percent);\n            }\n            if (percentPlayed > 0) {\n              percentsAlreadyTracked.push(percent);\n            }\n          }\n        }\n      }\n      if (__indexOf.call(eventsToTrack, 'seek') >= 0) {\n        seekStart = seekEnd;\n        seekEnd = currentTime;\n        if (Math.abs(seekStart - seekEnd) > 1) {\n          seeking = true;\n          sendbeacon('seek start', false, seekStart);\n          sendbeacon('seek end', false, seekEnd);\n        }\n      }\n    };\n    startTimeTracking = function() {\n      var currentTime;\n      if (!trackSeconds || trackingTime) {\n        return;\n      }\n      trackingTime = true;\n      currentTime = getCurrentTime();\n      return interval = setInterval(function() {\n        if (!(getCurrentTime() > currentTime)) {\n          return;\n        }\n        secondsPlayed++;\n        if (__indexOf.call(secondsPlayedMoments, secondsPlayed) >= 0 || !(secondsPlayed % secondsPlayedInterval)) {\n          sendbeacon('seconds played', true, secondsPlayed);\n        }\n      }, 1000);\n    };\n    stopTimeTracking = function() {\n      clearInterval(interval);\n      return trackingTime = false;\n    };\n    firstplay = function() {\n      startTimeTracking();\n      if (__indexOf.call(eventsToTrack, 'start') >= 0 && !isFinite) {\n        return sendbeacon('start', true);\n      }\n    };\n    end = function() {\n      ended = true;\n      stopTimeTracking();\n      if (trackReplaySeconds) {\n        secondsPlayed = 0;\n      } else {\n        trackSeconds = false;\n      }\n      sendbeacon('end', true);\n    };\n    play = function() {\n      var currentTime;\n      startTimeTracking();\n      currentTime = getCurrentValue();\n      if (currentTime > 0 || __indexOf.call(eventsToTrack, 'start') < 0) {\n        sendbeacon('play', true, currentTime);\n      }\n      if (ended && currentTime === 0 && trackReplaySeconds) {\n        sendbeacon('start', true);\n      }\n      seeking = false;\n    };\n    playing = function() {\n      startTimeTracking();\n      seeking = false;\n    };\n    pause = function() {\n      var currentTime, duration;\n      stopTimeTracking();\n      currentTime = getCurrentValue();\n      duration = Math.round(this.duration());\n      if (currentTime !== duration && !seeking) {\n        sendbeacon('pause', false, currentTime);\n      }\n    };\n    volumeChange = function() {\n      var volume;\n      volume = this.muted() === true ? 0 : this.volume();\n      sendbeacon('volume change', false, volume);\n    };\n    resize = function() {\n      sendbeacon('resize - ' + this.width() + '*' + this.height(), true);\n    };\n    error = function() {\n      var currentTime;\n      currentTime = getCurrentValue();\n      sendbeacon('error', true, currentTime);\n    };\n    fullscreen = function() {\n      var currentTime;\n      currentTime = getCurrentValue();\n      if ((typeof this.isFullscreen === \"function\" ? this.isFullscreen() : void 0) || (typeof this.isFullScreen === \"function\" ? this.isFullScreen() : void 0)) {\n        sendbeacon('enter fullscreen', false, currentTime);\n      } else {\n        sendbeacon('exit fullscreen', false, currentTime);\n      }\n    };\n    adstart = function() {\n      stopTimeTracking();\n      if (__indexOf.call(eventsToTrack, 'adstart') >= 0) {\n        return sendbeacon('adstart', false, getCurrentValue());\n      }\n    };\n    adpause = function() {\n      return sendbeacon('adpause', false);\n    };\n    adend = function() {\n      startTimeTracking();\n      return sendbeacon('adend', true);\n    };\n    adskip = function() {\n      return sendbeacon('adskip', false);\n    };\n    adtimeout = function() {\n      return sendbeacon('adtimeout', true);\n    };\n    adserror = function(data) {\n      return sendbeacon('adserror', true, data != null ? data.AdError : void 0);\n    };\n    getCurrentValue = function() {\n      if (isFinite) {\n        return getCurrentTime();\n      } else {\n        return secondsPlayed;\n      }\n    };\n    getCurrentTime = function() {\n      return Math.round(_this.currentTime());\n    };\n    sendbeacon = function(action, nonInteraction, value) {\n      var eventFields;\n      eventFields = {\n        eventCategory: eventCategory,\n        eventAction: action,\n        nonInteraction: nonInteraction\n      };\n      if (eventLabel != null) {\n        eventFields.eventLabel = eventLabel;\n      }\n      if (value != null) {\n        eventFields.eventValue = value;\n      }\n      _this.trigger('gaEvent', eventFields);\n      if (options.sendGaEventDirectly && window.ga) {\n        ga('send', 'event', {\n          'eventCategory': eventCategory,\n          'eventAction': action,\n          'eventLabel': eventLabel,\n          'eventValue': value,\n          'nonInteraction': nonInteraction\n        });\n      }\n      if (options.debug) {\n        console.log(eventFields);\n      }\n    };\n    this.ready(function() {\n      this.on('loadedmetadata', loaded);\n      this.on('timeupdate', timeupdate);\n      this.one('firstplay', firstplay);\n      if (__indexOf.call(eventsToTrack, 'end') >= 0) {\n        this.on('ended', end);\n      }\n      if (__indexOf.call(eventsToTrack, 'play') >= 0) {\n        this.on('play', play);\n      }\n      this.on('playing', playing);\n      if (__indexOf.call(eventsToTrack, 'pause') >= 0) {\n        this.on('pause', pause);\n      }\n      if (__indexOf.call(eventsToTrack, 'volumeChange') >= 0) {\n        this.on('volumechange', volumeChange);\n      }\n      if (__indexOf.call(eventsToTrack, 'resize') >= 0) {\n        this.on('resize', resize);\n      }\n      if (__indexOf.call(eventsToTrack, 'error') >= 0) {\n        this.on('error', error);\n      }\n      if (__indexOf.call(eventsToTrack, 'fullscreen') >= 0) {\n        this.on('fullscreenchange', fullscreen);\n      }\n      if (__indexOf.call(eventsToTrack, 'adstart') >= 0) {\n        this.on('adstart', adstart);\n      }\n      if (__indexOf.call(eventsToTrack, 'adpause') >= 0) {\n        this.on('adpause', adpause);\n      }\n      if (__indexOf.call(eventsToTrack, 'adend') >= 0) {\n        this.on('adend', adend);\n      }\n      if (__indexOf.call(eventsToTrack, 'adskip') >= 0) {\n        this.on('adskip', adskip);\n      }\n      if (__indexOf.call(eventsToTrack, 'adtimeout') >= 0) {\n        this.on('adtimeout', adtimeout);\n      }\n      if (__indexOf.call(eventsToTrack, 'adserror') >= 0) {\n        return this.on('adserror', adserror);\n      }\n    });\n    return {\n      'sendbeacon': sendbeacon\n    };\n  });\n\n}).call(this);\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/videojs-ga/dist/videojs.ga.js\n ** module id = 110\n ** module chunks = 0 1\n **/","/*!\n videojs-social - v1.5.2 - 2015-09-15\n * Copyright (c) 2015 Brightcove; Licensed https://accounts.brightcove.com/en/terms-and-conditions\n */\n\n/*! videojs-endscreen - v0.0.0 - 2014-10-13\n * Copyright (c) 2014 Brightcove\n * Modified by Hany alsamman for support videojs-5\n */\n(function (window, videojs) {\n    'use strict';\n\n    /**\n     * Initialize the plugin.\n     * @param options (optional) {object} configuration for the plugin\n     */\n    var endscreen = function (options) {\n        var player = this,\n            hasAds = !!(player.ads),\n            videoFinished = false,\n            adStarted = false,\n            adFinished = false;\n\n        /**\n         * videojs-ima3 appears to be firing an `adend` event at the start of the actual video when the ad\n         * is a postroll. We can account for it by checking if start was called and then if end was called.\n         * If a postroll is being run, it will bind displaying the Overlay to `adend` instead of `ended`.\n         */\n        if (hasAds) {\n            player.on('adstart', function () {\n                adStarted = true;\n                adFinished = false;\n            });\n\n            player.on('adend', function () {\n                if (adStarted) {\n                    adFinished = true;\n                }\n            });\n        }\n\n        player.on('ended', function () {\n            if (!videoFinished && (!hasAds || (adStarted && adFinished) || (!adStarted && !adFinished))) {\n                videoFinished = true;\n            }\n\n            if (videoFinished && hasAds && !adFinished) {\n                player.on('adend', function () {\n                    player.trigger('endscreen');\n                });\n            } else if (videoFinished) {\n                player.trigger('endscreen');\n            }\n        });\n    };\n\n    // register the plugin\n    videojs.plugin('endscreen', endscreen);\n})(window, window.videojs);\n\n/*! videojs-social - v0.0.0 - 2014-5-1\n * Copyright (c) 2014 Brightcove */\n(function (window, videojs) {\n    'use strict';\n\n    // Allocate all variables to be used\n    var defaults = {\n            title: '',\n            description: '',\n            url: '',\n            deeplinking: false,\n            displayAfterVideo: false,\n            offset: '00:00:00',\n            services: {\n                facebook: true,\n                google: true,\n                twitter: true,\n                tumblr: true,\n                pinterest: true,\n                linkedin: true\n            }\n        },\n        addEvent = function (el, type, callback) {\n            if (el.addEventListener) {\n                return el.addEventListener(type, callback, false);\n            }\n\n            // IE8 is onclick, not click\n            if (!el.addEventListener && type === 'click') {\n                type = 'onclick';\n            }\n            return el.attachEvent(type, callback);\n        },\n\n        removeEvent = function (el, type, callback) {\n            if (el.removeEventListener) {\n                return el.removeEventListener(type, callback, false);\n            }\n            if (!el.removeEventListener && type === 'click') {\n                type = 'onclick';\n            }\n            return el.detachEvent(type, callback);\n        },\n\n        social,\n        SocialButton,\n        SocialOverlay;\n\n    var handleEvent = function (e) {\n        e.preventDefault();\n        window.open(\n            this.href,\n            '_blank',\n            'width=600, height=400, top=100, left=100, titlebar=yes, modal=yes, resizable=yes, toolbar=no, status=1, location=no, menubar=no, centerscreen=yes'\n        );\n    };\n\n    /**\n     * Initialize the plugin.\n     * @param options (optional) {object} configuration for the plugin\n     */\n    social = function (options) {\n\n        var settings,\n            player = this;\n\n        // Merge options with the buttons defaults\n        settings = videojs.mergeOptions(defaults, options);\n\n        // If we are being re-initialized then remove the old stuff\n        if (player.controlBar.socialButton) {\n            player.controlBar.removeChild(player.controlBar.socialButton);\n            delete player.controlBar.socialButton;\n\n            if (player.socialOverlay) {\n                player.removeChild(player.socialOverlay);\n                delete player.socialOverlay;\n            }\n        }\n\n        // Add social button to player\n        player.controlBar.socialButton = player.controlBar.addChild('socialButton', settings);\n        player.socialOverlay = player.addChild('socialOverlay', settings);\n\n        // Add tabindex\n        player.controlBar.socialButton.el().setAttribute('tabindex', '0');\n\n        if (settings.displayAfterVideo) {\n            player.endscreen();\n            player.on('endscreen', function () {\n                player.socialOverlay.enableRestartButton();\n                player.socialOverlay.show();\n            });\n        }\n    };\n\n    /*\n     * The \"Share\" control bar button\n     */\n    SocialButton = videojs.extend(videojs.getComponent('Button'), {\n        constructor: function (player, options) {\n            videojs.getComponent('Button').call(this, player, options);\n\n            // Bind touchstart for mobile browsers and prevent default\n            this.on('touchstart', function (e) {\n                player.socialOverlay.update();\n                player.socialOverlay.disableRestartButton();\n                player.socialOverlay.show();\n                e.preventDefault();\n            });\n\n            // Bind click event for desktop browsers\n            this.on('click', function () {\n                player.socialOverlay.update();\n                player.socialOverlay.disableRestartButton();\n                player.socialOverlay.show();\n            });\n\n        }\n    });\n\n    SocialButton.prototype.createEl = function () {\n        return videojs.getComponent('ClickableComponent').prototype.createEl.call(this, 'div', {\n            className: 'vjs-share-control vjs-control',\n            innerHTML: '<div class=\"vjs-control-content\"><span class=\"vjs-control-text\">Share</span></div>'\n        }, {\n            role: 'button',\n            'aria-live': 'polite',\n        });\n    };\n\n    videojs.registerComponent('SocialButton', SocialButton);\n\n    /*\n     * The overlay panel that is toggled when the SocialButton is clicked\n     */\n    SocialOverlay = videojs.extend(videojs.getComponent('Component'), {\n        constructor: function (player, options) {\n\n            var embedCode,\n                start,\n                directLinkTextBox,\n                embedCodeTextBox,\n                offsetTextBox,\n                servicesHtml,\n                service,\n                restartButton;\n\n            // If we are being recreated, then remove our old self\n            if (player.socialOverlay) {\n                player.removeChild(player.socialOverlay);\n            }\n\n            videojs.getComponent('Component').call(this, player, options);\n\n            // set the direct link and embed code\n            this.el().querySelector('.vjs-social-embed-container input').setAttribute('value', this.getEmbedCode());\n            this.el().querySelector('.vjs-social-direct-link-container input').setAttribute('value', this._getUrlWithTime());\n\n            // Setup the Restart Button\n            restartButton = this.el().querySelector('.vjs-restart');\n            addEvent(restartButton, 'click', videojs.bind(this, this._restartPlayer));\n            addEvent(restartButton, 'activate', videojs.bind(this, this._restartPlayer));\n\n            // Hide offset if deeplinking is disabled\n            if (!options.deeplinking) {\n                start = this.el().querySelector('.vjs-social-start');\n                start.className += ' vjs-hidden ';\n            }\n\n            // Hide Embed code if disabled\n            if (options.removeEmbed && options.removeEmbed === true) {\n                this.el().querySelector('.vjs-social-embed-container').className += ' vjs-hidden ';\n            }\n\n            // Hide Direct Link\n            if (options.removeDirect && options.removeDirect === true) {\n                this.el().querySelector('.vjs-social-direct-link-container').className += ' vjs-hidden ';\n            }\n\n            // Add event to select the direct link when clicked\n            directLinkTextBox = this.el().querySelector('.direct-link-textbox');\n            addEvent(directLinkTextBox, 'click', function () {\n                this.select();\n            });\n\n            // Add event to select the embed code when clicked\n            embedCodeTextBox = this.el().querySelector('.embed-code-textbox');\n            addEvent(embedCodeTextBox, 'click', function () {\n                this.select();\n            });\n\n            this.offsetTextBox = this.el().querySelector('.start-offset-textbox');\n\n            // Bind changed event to the start offset\n            //  which will update the direct and embed links on changes and show it's current state\n            addEvent(this.offsetTextBox, 'change', videojs.bind(this, this.update));\n\n            // Bind the click event of the close button to hide the social overlay\n            this.closeButton = this.el().querySelector('.vjs-social-cancel');\n\n            // Catch escape key and hide dialog when pressed\n            addEvent(this.el(), 'keydown', function (event) {\n                if (player.socialOverlay.el().display !== 'none' && event.keyCode === 27) {\n                    // Hide the overlay, return focus to social button\n                    player.socialOverlay.hide();\n                }\n            }, true);\n\n\n            this.on('click', function (event) {\n                // if we clicked in the close button, we should close the overlay,\n                // this is specifically added to enable the closeButton in IE8\n                if (event.target === this.closeButton) {\n                    player.socialOverlay.hide();\n                }\n            });\n        },\n\n        update: function () {\n            var embedCodeTextBox = this.el().querySelector('.embed-code-textbox'),\n                directLinkTextBox;\n            var options = this.options_;\n\n            if (/^\\s*(0*[1-5]*\\d|0*[1-5]*\\d:[0-5]\\d|\\d+:[0-5]\\d:[0-5]\\d)\\s*$/.test(this.offsetTextBox.value)) {\n\n                directLinkTextBox = this.el().querySelector('.direct-link-textbox');\n\n                // update the validation state\n                this.offsetTextBox.className = this.offsetTextBox.className.replace(/(^|\\s)vjs-invalid/, '');\n\n                // Compute the new direct link\n                directLinkTextBox.value = this._getUrlWithTime();\n            } else {\n                this.offsetTextBox.className += ' vjs-invalid';\n            }\n\n            // Compute the new embed code\n            embedCodeTextBox.setAttribute('value', this.getEmbedCode());\n        },\n\n        enableRestartButton: function () {\n            var restartButton = this.el().querySelector('.vjs-restart');\n            restartButton.className = restartButton.className.replace(/\\bvjs\\-hidden\\b/, '');\n        },\n\n        disableRestartButton: function () {\n            var restartButton = this.el().querySelector('.vjs-restart');\n            if (!/\\bvjs-hidden\\b/.test(restartButton.className)) {\n                restartButton.className += ' vjs-hidden';\n            }\n        },\n\n        hide: function () {\n            videojs.getComponent('Component').prototype.hide.call(this);\n            if (this.previouslyPlaying) {\n                this.player().play();\n            }\n            // Set focus back to the social button for accessibility\n            this.player().controlBar.socialButton.el().focus();\n        },\n\n        show: function () {\n            videojs.getComponent('Component').prototype.show.call(this);\n            if (!this.player().paused()) {\n                this.previouslyPlaying = true;\n                this.player().pause();\n            }\n        }\n    });\n\n    SocialOverlay.prototype.createEl = function () {\n        var player = this.player(),\n            options = this.options_;\n\n        return videojs.getComponent('Component').prototype.createEl.call(this, 'div', {\n            className: 'vjs-social-overlay vjs-hidden',\n            'tabindex': -1,\n            innerHTML: '<div class=\"vjs-social-cancel\" role=\"button\">' +\n            '<div class=\"vjs-control-text\" aria-label=\"' + player.localize('Close button') + '\">' + player.localize('Close') + '</div>' +\n            '</div>' +\n            '<form>' +\n            '<legend>' + player.localize('Share Video') + ' ' + this._getTitle() + '</legend>' +\n            '<div class=\"vjs-social-link-options\">' +\n            '<label class=\"vjs-social-start\" aria-label=\"' + player.localize('Start From') + '\">' + player.localize('Start From') + ': <input class=\"start-offset-textbox\" type=\"text\" tabindex=\"9\" title=\"The offset must be specified using the following pattern: hh:mm:ss\" placeholder=\"hh:mm:ss\" maxlength=\"10\" value=\"' + options.offset + '\" /></label>' +\n            '<div class=\"vjs-social-direct-link-container\">' +\n            '<label class=\"vjs-social-link\" aria-label=\"Read Only: Direct Link To Content\">' + player.localize('Direct Link') + ': <input class=\"direct-link-textbox\" type=\"text\" tabindex=\"8\" readonly=\"true\" /></label>' +\n            '</div>' +\n            '</div>' +\n            '<div class=\"vjs-social-embed-container\">' +\n            '<label arial-label=\"Read Only: Embed Code\">' + player.localize('Embed Code') + ': <input class=\"embed-code-textbox\" type=\"text\" tabindex=\"10\" readonly=\"true\" /></label>' +\n            '</div>' +\n            '</form>' +\n            '<button tabindex=\"0\" class=\"vjs-restart vjs-hidden\">' +\n            '<div class=\"vjs-control-content\"><span class=\"vjs-control-text\">' + player.localize('Restart') + '</span></div>' +\n            '</button>'\n        }, {\n            'aria-role': 'dialog',\n            'aria-label': player.localize('Sharing Dialog'),\n        });\n    };\n\n    /*\n     * Computes the new embed code\n     */\n    SocialOverlay.prototype.getEmbedCode = function () {\n        // Declare variables\n        var offset, offsetTextBox, playerOptions, embedCode, urlTemplate, player, options;\n\n        player = this.player();\n        options = this.options_;\n\n        // Assign converted initial options offset value\n        offset = options.deeplinking ? this._convertOffset(options.offset) : null;\n        // If we can't find the offset control we should use the options value\n        offsetTextBox = player.el().querySelector('.start-offset-textbox');\n        if (offsetTextBox && options.deeplinking) {\n            offset = this._convertOffset(offsetTextBox.value);\n        }\n        // Get the player options so we can retrieve the account_id, player_id, and embed_id\n        playerOptions = player.options_;\n\n        // encode the URL for security\n        if (playerOptions['data-embed-url']) {\n            playerOptions['data-embed-url'] = encodeURI(playerOptions['data-embed-url']);\n        }\n\n        // Fallback Url Template\n        urlTemplate = '//players.brightcove.net/{{account_id}}/{{player_id}}_{{embed_id}}/index.html{{video_id}}';\n\n        // If in iframe use its URL\n        // jshint -W116\n        if (window.parent != window) {\n            urlTemplate = window.location.href;\n        }\n        // jshint +W116\n\n        // Embed code\n        if (options.embedCode) {\n            embedCode = options.embedCode;\n        } else {\n            embedCode = '<iframe src=\\'' + urlTemplate + '{{offset}}\\' allowfullscreen frameborder=0></iframe>';\n        }\n\n        // Construct the embed code snippet. Replace values with known template params.\n        return embedCode\n            .replace('{{account_id}}', playerOptions['data-account'])\n            .replace('{{player_id}}', playerOptions['data-player'])\n            .replace('{{embed_id}}', playerOptions['data-embed'])\n            .replace('{{video_id}}', (player.mediainfo && player.mediainfo.id) ? '?videoId=' + player.mediainfo.id : '')\n            .replace('{{offset}}', offset ? '#t=' + offset : '');\n    };\n\n    /*\n     * Determines the URL to be dispayed in the share dialog\n     */\n    SocialOverlay.prototype._getUrl = function () {\n        var url,\n            options = this.options_;\n\n        // Determine the custom base url\n        // In IE8, window.parent doesn't === window, but it does == equal it.\n        // jshint -W116\n        if (options.url) {\n            url = options.url;\n        } else if (window.parent != window) {\n            url = document.referrer;\n        } else {\n            url = window.location.href;\n        }\n        // jshint +W116\n\n        return url;\n    };\n\n    SocialOverlay.prototype._getUrlWithTime = function () {\n        var options = this.options_,\n            url = this._getUrl(),\n            offset;\n\n        // Get the start offset textbox (Only include offset if deeplinking is enabled)\n        if (options.deeplinking) {\n            offset = this._convertOffset(this.el().querySelector('.start-offset-textbox').value);\n        }\n\n        // Append the offset if available\n        if (offset) {\n            url = url + '#t=' + offset;\n        }\n\n        return url;\n    };\n\n    /*\n     * Updates the title based on the media date or the custom options setting\n     */\n    SocialOverlay.prototype._getTitle = function () {\n        var playerOptions,\n            options = this.options_,\n            player = this.player(),\n            title = options.title;\n\n        // If there's no title try and find one in the options\n        if (!title) {\n\n            // Get player options\n            playerOptions = player.options_;\n\n            // Search the player options data media for a title\n            if (playerOptions['data-media'] && playerOptions['data-media'].title) {\n                title = playerOptions['data-media'].title;\n            }\n        }\n\n        return title || '';\n    };\n    /*\n     * Converts an offset from hh:mm:ss to the YouTube format of 1h27m14s\n     */\n    SocialOverlay.prototype._convertOffset = function (offset) {\n\n        var segments,\n            seconds = 0,\n            multiples = [1, 60, 3600],\n            ret = '',\n            i,\n            s;\n\n        if (offset) {\n            segments = offset.split(':');\n            if (segments.length >= 1 && segments.length <= 3) {\n                // Parse each segment into an integer to remove leading zeros and other dentritis\n                for (i = 0; i < segments.length; ++i) {\n                    s = parseInt(segments[i], 10) * multiples[segments.length - 1 - i];\n                    if (isNaN(s)) {\n                        return '';\n                    }\n                    seconds += s;\n                }\n                ret = '';\n                if (seconds >= 3600 && Math.floor(seconds / 3600) !== 0) {\n                    ret = Math.floor(seconds / 3600) + 'h';\n                    seconds = seconds % 3600;\n                }\n\n                if (seconds >= 60 && Math.floor(seconds / 60) !== 0) {\n                    ret += Math.floor(seconds / 60) + 'm';\n                    seconds = seconds % 60;\n                }\n\n                if (seconds > 0) {\n                    ret += seconds + 's';\n                }\n\n                return ret;\n\n            }\n        }\n\n        return '';\n    };\n\n    SocialOverlay.prototype._restartPlayer = function () {\n        var player = this.player();\n        player.socialOverlay.hide();\n        player.currentTime(0);\n        player.play();\n    };\n\n    videojs.registerComponent('SocialOverlay', SocialOverlay);\n\n    // register the plugin\n    videojs.plugin('social', social);\n\n    // End the closure\n})(window, window.videojs);\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/videojs-social/videojs-social.js\n ** module id = 111\n ** module chunks = 0 1\n **/","'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nvar _videoJs = require('video.js');\n\nvar _videoJs2 = _interopRequireDefault(_videoJs);\n\nvar ClickableComponent = _videoJs2['default'].getComponent('ClickableComponent');\n\n// Default options for the plugin.\nvar defaults = {\n  text: 'Download'\n};\n\n/**\n * Stack CSS class names.\n * @return {String}\n */\nvar buildCSSClass = function buildCSSClass() {\n  return 'vjs-download-button-control ' + ClickableComponent.prototype.buildCSSClass();\n};\n\n/**\n * Function to invoke when the player is ready.\n *\n * @function onPlayerReady\n * @param    {Player} player\n * @param    {Object} [options={}]\n */\nvar onPlayerReady = function onPlayerReady(player, options) {\n  player.addClass('vjs-download-button');\n\n  if (!player.controlBar.childNameIndex_.hasOwnProperty('DownloadButton')) {\n    var linkProps = {\n      className: buildCSSClass(),\n      href: player.currentSrc(),\n      title: options.text,\n      download: ''\n    };\n    var linkAttrs = {\n      'aria-live': 'polite',\n      'aria-label': options.text\n    };\n\n    player.controlBar.addChild(new ClickableComponent(undefined, {\n      el: ClickableComponent.prototype.createEl('a', linkProps, linkAttrs)\n    }));\n  }\n};\n\n/**\n * A video.js plugin.\n *\n * In the plugin function, the value of `this` is a video.js `Player`\n * instance. You cannot rely on the player being in a \"ready\" state here,\n * depending on how the plugin is invoked. This may or may not be important\n * to you; if not, remove the wait for \"ready\"!\n *\n * @function downloadButton\n * @param    {Object} [options={}]\n *           An object of options left to the plugin author to define.\n */\nvar downloadButton = function downloadButton(options) {\n  var _this = this;\n\n  this.ready(function () {\n    onPlayerReady(_this, _videoJs2['default'].mergeOptions(defaults, options));\n  });\n};\n\n// Register the plugin with video.js.\n_videoJs2['default'].plugin('downloadButton', downloadButton);\n\n// Include the version number.\ndownloadButton.VERSION = '__VERSION__';\n\nexports['default'] = downloadButton;\nmodule.exports = exports['default'];\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/videojs-download-button/es5/plugin.js\n ** module id = 112\n ** module chunks = 0 1\n **/","/**\n * videojs-contrib-hls\n * @version 4.0.2\n * @copyright 2016 Brightcove, Inc\n * @license Apache-2.0\n */\n(function(f){if(typeof exports===\"object\"&&typeof module!==\"undefined\"){module.exports=f()}else if(typeof define===\"function\"&&define.amd){define([],f)}else{var g;if(typeof window!==\"undefined\"){g=window}else if(typeof global!==\"undefined\"){g=global}else if(typeof self!==\"undefined\"){g=self}else{g=this}g.videojsContribHls = f()}})(function(){var define,module,exports;return (function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){\n/**\n * @file ad-cue-tags.js\n */\n'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\n\nvar _slicedToArray = (function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i['return']) _i['return'](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError('Invalid attempt to destructure non-iterable instance'); } }; })();\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nvar _globalWindow = require('global/window');\n\nvar _globalWindow2 = _interopRequireDefault(_globalWindow);\n\n/**\n * Searches for an ad cue that overlaps with the given mediaTime\n */\nvar findAdCue = function findAdCue(track, mediaTime) {\n  var cues = track.cues;\n\n  for (var i = 0; i < cues.length; i++) {\n    var cue = cues[i];\n\n    if (mediaTime >= cue.adStartTime && mediaTime <= cue.adEndTime) {\n      return cue;\n    }\n  }\n  return null;\n};\n\nvar updateAdCues = function updateAdCues(media, track) {\n  var offset = arguments.length <= 2 || arguments[2] === undefined ? 0 : arguments[2];\n\n  if (!media.segments) {\n    return;\n  }\n\n  var mediaTime = offset;\n  var cue = undefined;\n\n  for (var i = 0; i < media.segments.length; i++) {\n    var segment = media.segments[i];\n\n    if (!cue) {\n      // Since the cues will span for at least the segment duration, adding a fudge\n      // factor of half segment duration will prevent duplicate cues from being\n      // created when timing info is not exact (e.g. cue start time initialized\n      // at 10.006677, but next call mediaTime is 10.003332 )\n      cue = findAdCue(track, mediaTime + segment.duration / 2);\n    }\n\n    if (cue) {\n      if ('cueIn' in segment) {\n        // Found a CUE-IN so end the cue\n        cue.endTime = mediaTime;\n        cue.adEndTime = mediaTime;\n        mediaTime += segment.duration;\n        cue = null;\n        continue;\n      }\n\n      if (mediaTime < cue.endTime) {\n        // Already processed this mediaTime for this cue\n        mediaTime += segment.duration;\n        continue;\n      }\n\n      // otherwise extend cue until a CUE-IN is found\n      cue.endTime += segment.duration;\n    } else {\n      if ('cueOut' in segment) {\n        cue = new _globalWindow2['default'].VTTCue(mediaTime, mediaTime + segment.duration, segment.cueOut);\n        cue.adStartTime = mediaTime;\n        // Assumes tag format to be\n        // #EXT-X-CUE-OUT:30\n        cue.adEndTime = mediaTime + parseFloat(segment.cueOut);\n        track.addCue(cue);\n      }\n\n      if ('cueOutCont' in segment) {\n        // Entered into the middle of an ad cue\n        var adOffset = undefined;\n        var adTotal = undefined;\n\n        // Assumes tag formate to be\n        // #EXT-X-CUE-OUT-CONT:10/30\n\n        var _segment$cueOutCont$split$map = segment.cueOutCont.split('/').map(parseFloat);\n\n        var _segment$cueOutCont$split$map2 = _slicedToArray(_segment$cueOutCont$split$map, 2);\n\n        adOffset = _segment$cueOutCont$split$map2[0];\n        adTotal = _segment$cueOutCont$split$map2[1];\n\n        cue = new _globalWindow2['default'].VTTCue(mediaTime, mediaTime + segment.duration, '');\n        cue.adStartTime = mediaTime - adOffset;\n        cue.adEndTime = cue.adStartTime + adTotal;\n        track.addCue(cue);\n      }\n    }\n    mediaTime += segment.duration;\n  }\n};\n\nexports['default'] = {\n  updateAdCues: updateAdCues,\n  findAdCue: findAdCue\n};\nmodule.exports = exports['default'];\n},{\"global/window\":27}],2:[function(require,module,exports){\n/**\n * @file bin-utils.js\n */\n\n/**\n * convert a TimeRange to text\n *\n * @param {TimeRange} range the timerange to use for conversion\n * @param {Number} i the iterator on the range to convert\n */\n'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\nvar textRange = function textRange(range, i) {\n  return range.start(i) + '-' + range.end(i);\n};\n\n/**\n * format a number as hex string\n *\n * @param {Number} e The number\n * @param {Number} i the iterator\n */\nvar formatHexString = function formatHexString(e, i) {\n  var value = e.toString(16);\n\n  return '00'.substring(0, 2 - value.length) + value + (i % 2 ? ' ' : '');\n};\nvar formatAsciiString = function formatAsciiString(e) {\n  if (e >= 0x20 && e < 0x7e) {\n    return String.fromCharCode(e);\n  }\n  return '.';\n};\n\n/**\n * utils to help dump binary data to the console\n */\nvar utils = {\n  hexDump: function hexDump(data) {\n    var bytes = Array.prototype.slice.call(data);\n    var step = 16;\n    var result = '';\n    var hex = undefined;\n    var ascii = undefined;\n\n    for (var j = 0; j < bytes.length / step; j++) {\n      hex = bytes.slice(j * step, j * step + step).map(formatHexString).join('');\n      ascii = bytes.slice(j * step, j * step + step).map(formatAsciiString).join('');\n      result += hex + ' ' + ascii + '\\n';\n    }\n    return result;\n  },\n  tagDump: function tagDump(tag) {\n    return utils.hexDump(tag.bytes);\n  },\n  textRanges: function textRanges(ranges) {\n    var result = '';\n    var i = undefined;\n\n    for (i = 0; i < ranges.length; i++) {\n      result += textRange(ranges, i) + ' ';\n    }\n    return result;\n  }\n};\n\nexports['default'] = utils;\nmodule.exports = exports['default'];\n},{}],3:[function(require,module,exports){\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = {\n  GOAL_BUFFER_LENGTH: 30\n};\nmodule.exports = exports[\"default\"];\n},{}],4:[function(require,module,exports){\n(function (global){\n/**\n * @file master-playlist-controller.js\n */\n'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\n\nvar _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();\n\nvar _get = function get(_x2, _x3, _x4) { var _again = true; _function: while (_again) { var object = _x2, property = _x3, receiver = _x4; _again = false; if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { _x2 = parent; _x3 = property; _x4 = receiver; _again = true; desc = parent = undefined; continue _function; } } else if ('value' in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } } };\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== 'function' && superClass !== null) { throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar _playlistLoader = require('./playlist-loader');\n\nvar _playlistLoader2 = _interopRequireDefault(_playlistLoader);\n\nvar _segmentLoader = require('./segment-loader');\n\nvar _segmentLoader2 = _interopRequireDefault(_segmentLoader);\n\nvar _ranges = require('./ranges');\n\nvar _ranges2 = _interopRequireDefault(_ranges);\n\nvar _videoJs = (typeof window !== \"undefined\" ? window['videojs'] : typeof global !== \"undefined\" ? global['videojs'] : null);\n\nvar _videoJs2 = _interopRequireDefault(_videoJs);\n\nvar _adCueTags = require('./ad-cue-tags');\n\nvar _adCueTags2 = _interopRequireDefault(_adCueTags);\n\nvar _syncController = require('./sync-controller');\n\nvar _syncController2 = _interopRequireDefault(_syncController);\n\n// 5 minute blacklist\nvar BLACKLIST_DURATION = 5 * 60 * 1000;\nvar Hls = undefined;\n\n/**\n * determine if an object a is differnt from\n * and object b. both only having one dimensional\n * properties\n *\n * @param {Object} a object one\n * @param {Object} b object two\n * @return {Boolean} if the object has changed or not\n */\nvar objectChanged = function objectChanged(a, b) {\n  if (typeof a !== typeof b) {\n    return true;\n  }\n  // if we have a different number of elements\n  // something has changed\n  if (Object.keys(a).length !== Object.keys(b).length) {\n    return true;\n  }\n\n  for (var prop in a) {\n    if (a[prop] !== b[prop]) {\n      return true;\n    }\n  }\n  return false;\n};\n\n/**\n * Parses a codec string to retrieve the number of codecs specified,\n * the video codec and object type indicator, and the audio profile.\n *\n * @private\n */\nvar parseCodecs = function parseCodecs(codecs) {\n  var result = {\n    codecCount: 0,\n    videoCodec: null,\n    videoObjectTypeIndicator: null,\n    audioProfile: null\n  };\n  var parsed = undefined;\n\n  result.codecCount = codecs.split(',').length;\n  result.codecCount = result.codecCount || 2;\n\n  // parse the video codec\n  parsed = /(^|\\s|,)+(avc1)([^ ,]*)/i.exec(codecs);\n  if (parsed) {\n    result.videoCodec = parsed[2];\n    result.videoObjectTypeIndicator = parsed[3];\n  }\n\n  // parse the last field of the audio codec\n  result.audioProfile = /(^|\\s|,)+mp4a.[0-9A-Fa-f]+\\.([0-9A-Fa-f]+)/i.exec(codecs);\n  result.audioProfile = result.audioProfile && result.audioProfile[2];\n\n  return result;\n};\n\n/**\n * Calculates the MIME type strings for a working configuration of\n * SourceBuffers to play variant streams in a master playlist. If\n * there is no possible working configuration, an empty array will be\n * returned.\n *\n * @param master {Object} the m3u8 object for the master playlist\n * @param media {Object} the m3u8 object for the variant playlist\n * @return {Array} the MIME type strings. If the array has more than\n * one entry, the first element should be applied to the video\n * SourceBuffer and the second to the audio SourceBuffer.\n *\n * @private\n */\nvar mimeTypesForPlaylist_ = function mimeTypesForPlaylist_(master, media) {\n  var container = 'mp2t';\n  var codecs = {\n    videoCodec: 'avc1',\n    videoObjectTypeIndicator: '.4d400d',\n    audioProfile: '2'\n  };\n  var audioGroup = [];\n  var mediaAttributes = undefined;\n  var previousGroup = null;\n\n  if (!media) {\n    // not enough information, return an error\n    return [];\n  }\n  // An initialization segment means the media playlists is an iframe\n  // playlist or is using the mp4 container. We don't currently\n  // support iframe playlists, so assume this is signalling mp4\n  // fragments.\n  // the existence check for segments can be removed once\n  // https://github.com/videojs/m3u8-parser/issues/8 is closed\n  if (media.segments && media.segments.length && media.segments[0].map) {\n    container = 'mp4';\n  }\n\n  // if the codecs were explicitly specified, use them instead of the\n  // defaults\n  mediaAttributes = media.attributes || {};\n  if (mediaAttributes.CODECS) {\n    (function () {\n      var parsedCodecs = parseCodecs(mediaAttributes.CODECS);\n\n      Object.keys(parsedCodecs).forEach(function (key) {\n        codecs[key] = parsedCodecs[key] || codecs[key];\n      });\n    })();\n  }\n\n  if (master.mediaGroups.AUDIO) {\n    audioGroup = master.mediaGroups.AUDIO[mediaAttributes.AUDIO];\n  }\n\n  // if audio could be muxed or unmuxed, use mime types appropriate\n  // for both scenarios\n  for (var groupId in audioGroup) {\n    if (previousGroup && !!audioGroup[groupId].uri !== !!previousGroup.uri) {\n      // one source buffer with muxed video and audio and another for\n      // the alternate audio\n      return ['video/' + container + '; codecs=\"' + codecs.videoCodec + codecs.videoObjectTypeIndicator + ', mp4a.40.' + codecs.audioProfile + '\"', 'audio/' + container + '; codecs=\"mp4a.40.' + codecs.audioProfile + '\"'];\n    }\n    previousGroup = audioGroup[groupId];\n  }\n  // if all video and audio is unmuxed, use two single-codec mime\n  // types\n  if (previousGroup && previousGroup.uri) {\n    return ['video/' + container + '; codecs=\"' + codecs.videoCodec + codecs.videoObjectTypeIndicator + '\"', 'audio/' + container + '; codecs=\"mp4a.40.' + codecs.audioProfile + '\"'];\n  }\n\n  // all video and audio are muxed, use a dual-codec mime type\n  return ['video/' + container + '; codecs=\"' + codecs.videoCodec + codecs.videoObjectTypeIndicator + ', mp4a.40.' + codecs.audioProfile + '\"'];\n};\n\nexports.mimeTypesForPlaylist_ = mimeTypesForPlaylist_;\n/**\n * the master playlist controller controller all interactons\n * between playlists and segmentloaders. At this time this mainly\n * involves a master playlist and a series of audio playlists\n * if they are available\n *\n * @class MasterPlaylistController\n * @extends videojs.EventTarget\n */\n\nvar MasterPlaylistController = (function (_videojs$EventTarget) {\n  _inherits(MasterPlaylistController, _videojs$EventTarget);\n\n  function MasterPlaylistController(options) {\n    var _this = this;\n\n    _classCallCheck(this, MasterPlaylistController);\n\n    _get(Object.getPrototypeOf(MasterPlaylistController.prototype), 'constructor', this).call(this);\n\n    var url = options.url;\n    var withCredentials = options.withCredentials;\n    var mode = options.mode;\n    var tech = options.tech;\n    var bandwidth = options.bandwidth;\n    var externHls = options.externHls;\n    var useCueTags = options.useCueTags;\n\n    if (!url) {\n      throw new Error('A non-empty playlist URL is required');\n    }\n\n    Hls = externHls;\n\n    this.withCredentials = withCredentials;\n    this.tech_ = tech;\n    this.hls_ = tech.hls;\n    this.mode_ = mode;\n    this.useCueTags_ = useCueTags;\n    if (this.useCueTags_) {\n      this.cueTagsTrack_ = this.tech_.addTextTrack('metadata', 'ad-cues');\n      this.cueTagsTrack_.inBandMetadataTrackDispatchType = '';\n      this.tech_.textTracks().addTrack_(this.cueTagsTrack_);\n    }\n\n    this.audioTracks_ = [];\n    this.requestOptions_ = {\n      withCredentials: this.withCredentials,\n      timeout: null\n    };\n\n    this.audioGroups_ = {};\n\n    this.mediaSource = new _videoJs2['default'].MediaSource({ mode: mode });\n    this.audioinfo_ = null;\n    this.mediaSource.on('audioinfo', this.handleAudioinfoUpdate_.bind(this));\n\n    // load the media source into the player\n    this.mediaSource.addEventListener('sourceopen', this.handleSourceOpen_.bind(this));\n\n    this.seekable_ = _videoJs2['default'].createTimeRanges();\n    this.hasPlayed_ = function () {\n      return false;\n    };\n\n    this.syncController_ = new _syncController2['default']();\n\n    var segmentLoaderOptions = {\n      hls: this.hls_,\n      mediaSource: this.mediaSource,\n      currentTime: this.tech_.currentTime.bind(this.tech_),\n      seekable: function seekable() {\n        return _this.seekable();\n      },\n      seeking: function seeking() {\n        return _this.tech_.seeking();\n      },\n      setCurrentTime: function setCurrentTime(a) {\n        return _this.tech_.setCurrentTime(a);\n      },\n      hasPlayed: function hasPlayed() {\n        return _this.hasPlayed_();\n      },\n      bandwidth: bandwidth,\n      syncController: this.syncController_\n    };\n\n    // setup playlist loaders\n    this.masterPlaylistLoader_ = new _playlistLoader2['default'](url, this.hls_, this.withCredentials);\n    this.setupMasterPlaylistLoaderListeners_();\n    this.audioPlaylistLoader_ = null;\n\n    // setup segment loaders\n    // combined audio/video or just video when alternate audio track is selected\n    this.mainSegmentLoader_ = new _segmentLoader2['default'](segmentLoaderOptions);\n    // alternate audio track\n    this.audioSegmentLoader_ = new _segmentLoader2['default'](segmentLoaderOptions);\n    this.setupSegmentLoaderListeners_();\n\n    this.masterPlaylistLoader_.start();\n  }\n\n  /**\n   * Register event handlers on the master playlist loader. A helper\n   * function for construction time.\n   *\n   * @private\n   */\n\n  _createClass(MasterPlaylistController, [{\n    key: 'setupMasterPlaylistLoaderListeners_',\n    value: function setupMasterPlaylistLoaderListeners_() {\n      var _this2 = this;\n\n      this.masterPlaylistLoader_.on('loadedmetadata', function () {\n        var media = _this2.masterPlaylistLoader_.media();\n        var requestTimeout = _this2.masterPlaylistLoader_.targetDuration * 1.5 * 1000;\n\n        _this2.requestOptions_.timeout = requestTimeout;\n\n        // if this isn't a live video and preload permits, start\n        // downloading segments\n        if (media.endList && _this2.tech_.preload() !== 'none') {\n          _this2.mainSegmentLoader_.playlist(media, _this2.requestOptions_);\n          _this2.mainSegmentLoader_.load();\n        }\n\n        _this2.fillAudioTracks_();\n        _this2.setupAudio();\n\n        try {\n          _this2.setupSourceBuffers_();\n        } catch (e) {\n          _videoJs2['default'].log.warn('Failed to create SourceBuffers', e);\n          return _this2.mediaSource.endOfStream('decode');\n        }\n        _this2.setupFirstPlay();\n\n        _this2.trigger('audioupdate');\n        _this2.trigger('selectedinitialmedia');\n      });\n\n      this.masterPlaylistLoader_.on('loadedplaylist', function () {\n        var updatedPlaylist = _this2.masterPlaylistLoader_.media();\n\n        if (!updatedPlaylist) {\n          // select the initial variant\n          _this2.initialMedia_ = _this2.selectPlaylist();\n          _this2.masterPlaylistLoader_.media(_this2.initialMedia_);\n          return;\n        }\n\n        if (_this2.useCueTags_) {\n          _this2.updateAdCues_(updatedPlaylist);\n        }\n\n        // TODO: Create a new event on the PlaylistLoader that signals\n        // that the segments have changed in some way and use that to\n        // update the SegmentLoader instead of doing it twice here and\n        // on `mediachange`\n        _this2.mainSegmentLoader_.playlist(updatedPlaylist, _this2.requestOptions_);\n        _this2.updateDuration();\n\n        if (!updatedPlaylist.endList) {\n          (function () {\n            var addSeekableRange = function addSeekableRange() {\n              var seekable = _this2.seekable();\n\n              if (seekable.length !== 0) {\n                _this2.mediaSource.addSeekableRange_(seekable.start(0), seekable.end(0));\n              }\n            };\n\n            if (_this2.duration() !== Infinity) {\n              (function () {\n                var onDurationchange = function onDurationchange() {\n                  if (_this2.duration() === Infinity) {\n                    addSeekableRange();\n                  } else {\n                    _this2.tech_.one('durationchange', onDurationchange);\n                  }\n                };\n\n                _this2.tech_.one('durationchange', onDurationchange);\n              })();\n            } else {\n              addSeekableRange();\n            }\n          })();\n        }\n      });\n\n      this.masterPlaylistLoader_.on('error', function () {\n        _this2.blacklistCurrentPlaylist(_this2.masterPlaylistLoader_.error);\n      });\n\n      this.masterPlaylistLoader_.on('mediachanging', function () {\n        _this2.mainSegmentLoader_.abort();\n        _this2.mainSegmentLoader_.pause();\n      });\n\n      this.masterPlaylistLoader_.on('mediachange', function () {\n        var media = _this2.masterPlaylistLoader_.media();\n        var requestTimeout = _this2.masterPlaylistLoader_.targetDuration * 1.5 * 1000;\n        var activeAudioGroup = undefined;\n        var activeTrack = undefined;\n\n        // If we don't have any more available playlists, we don't want to\n        // timeout the request.\n        if (_this2.masterPlaylistLoader_.isLowestEnabledRendition_()) {\n          _this2.requestOptions_.timeout = 0;\n        } else {\n          _this2.requestOptions_.timeout = requestTimeout;\n        }\n\n        // TODO: Create a new event on the PlaylistLoader that signals\n        // that the segments have changed in some way and use that to\n        // update the SegmentLoader instead of doing it twice here and\n        // on `loadedplaylist`\n        _this2.mainSegmentLoader_.playlist(media, _this2.requestOptions_);\n        _this2.mainSegmentLoader_.load();\n\n        // if the audio group has changed, a new audio track has to be\n        // enabled\n        activeAudioGroup = _this2.activeAudioGroup();\n        activeTrack = activeAudioGroup.filter(function (track) {\n          return track.enabled;\n        })[0];\n        if (!activeTrack) {\n          _this2.setupAudio();\n          _this2.trigger('audioupdate');\n        }\n\n        _this2.tech_.trigger({\n          type: 'mediachange',\n          bubbles: true\n        });\n      });\n    }\n\n    /**\n     * Register event handlers on the segment loaders. A helper function\n     * for construction time.\n     *\n     * @private\n     */\n  }, {\n    key: 'setupSegmentLoaderListeners_',\n    value: function setupSegmentLoaderListeners_() {\n      var _this3 = this;\n\n      this.mainSegmentLoader_.on('progress', function () {\n        // figure out what stream the next segment should be downloaded from\n        // with the updated bandwidth information\n        _this3.masterPlaylistLoader_.media(_this3.selectPlaylist());\n\n        _this3.trigger('progress');\n      });\n\n      this.mainSegmentLoader_.on('error', function () {\n        _this3.blacklistCurrentPlaylist(_this3.mainSegmentLoader_.error());\n      });\n\n      this.mainSegmentLoader_.on('syncinfoupdate', function () {\n        _this3.onSyncInfoUpdate_();\n      });\n\n      this.audioSegmentLoader_.on('syncinfoupdate', function () {\n        _this3.onSyncInfoUpdate_();\n      });\n\n      this.audioSegmentLoader_.on('error', function () {\n        _videoJs2['default'].log.warn('Problem encountered with the current alternate audio track' + '. Switching back to default.');\n        _this3.audioSegmentLoader_.abort();\n        _this3.audioPlaylistLoader_ = null;\n        _this3.setupAudio();\n      });\n    }\n  }, {\n    key: 'handleAudioinfoUpdate_',\n    value: function handleAudioinfoUpdate_(event) {\n      if (Hls.supportsAudioInfoChange_() || !this.audioInfo_ || !objectChanged(this.audioInfo_, event.info)) {\n        this.audioInfo_ = event.info;\n        return;\n      }\n\n      var error = 'had different audio properties (channels, sample rate, etc.) ' + 'or changed in some other way.  This behavior is currently ' + 'unsupported in Firefox 48 and below due to an issue: \\n\\n' + 'https://bugzilla.mozilla.org/show_bug.cgi?id=1247138\\n\\n';\n\n      var enabledIndex = this.activeAudioGroup().map(function (track) {\n        return track.enabled;\n      }).indexOf(true);\n      var enabledTrack = this.activeAudioGroup()[enabledIndex];\n      var defaultTrack = this.activeAudioGroup().filter(function (track) {\n        return track.properties_ && track.properties_['default'];\n      })[0];\n\n      // they did not switch audiotracks\n      // blacklist the current playlist\n      if (!this.audioPlaylistLoader_) {\n        error = 'The rendition that we tried to switch to ' + error + 'Unfortunately that means we will have to blacklist ' + 'the current playlist and switch to another. Sorry!';\n        this.blacklistCurrentPlaylist();\n      } else {\n        error = 'The audio track \\'' + enabledTrack.label + '\\' that we tried to ' + ('switch to ' + error + ' Unfortunately this means we will have to ') + ('return you to the main track \\'' + defaultTrack.label + '\\'. Sorry!');\n        defaultTrack.enabled = true;\n        this.activeAudioGroup().splice(enabledIndex, 1);\n        this.trigger('audioupdate');\n      }\n\n      _videoJs2['default'].log.warn(error);\n      this.setupAudio();\n    }\n\n    /**\n     * get the total number of media requests from the `audiosegmentloader_`\n     * and the `mainSegmentLoader_`\n     *\n     * @private\n     */\n  }, {\n    key: 'mediaRequests_',\n    value: function mediaRequests_() {\n      return this.audioSegmentLoader_.mediaRequests + this.mainSegmentLoader_.mediaRequests;\n    }\n\n    /**\n     * get the total time that media requests have spent trnasfering\n     * from the `audiosegmentloader_` and the `mainSegmentLoader_`\n     *\n     * @private\n     */\n  }, {\n    key: 'mediaTransferDuration_',\n    value: function mediaTransferDuration_() {\n      return this.audioSegmentLoader_.mediaTransferDuration + this.mainSegmentLoader_.mediaTransferDuration;\n    }\n\n    /**\n     * get the total number of bytes transfered during media requests\n     * from the `audiosegmentloader_` and the `mainSegmentLoader_`\n     *\n     * @private\n     */\n  }, {\n    key: 'mediaBytesTransferred_',\n    value: function mediaBytesTransferred_() {\n      return this.audioSegmentLoader_.mediaBytesTransferred + this.mainSegmentLoader_.mediaBytesTransferred;\n    }\n  }, {\n    key: 'mediaSecondsLoaded_',\n    value: function mediaSecondsLoaded_() {\n      return Math.max(this.audioSegmentLoader_.mediaSecondsLoaded + this.mainSegmentLoader_.mediaSecondsLoaded);\n    }\n\n    /**\n     * fill our internal list of HlsAudioTracks with data from\n     * the master playlist or use a default\n     *\n     * @private\n     */\n  }, {\n    key: 'fillAudioTracks_',\n    value: function fillAudioTracks_() {\n      var master = this.master();\n      var mediaGroups = master.mediaGroups || {};\n\n      // force a default if we have none or we are not\n      // in html5 mode (the only mode to support more than one\n      // audio track)\n      if (!mediaGroups || !mediaGroups.AUDIO || Object.keys(mediaGroups.AUDIO).length === 0 || this.mode_ !== 'html5') {\n        // \"main\" audio group, track name \"default\"\n        mediaGroups.AUDIO = { main: { 'default': { 'default': true } } };\n      }\n\n      for (var mediaGroup in mediaGroups.AUDIO) {\n        if (!this.audioGroups_[mediaGroup]) {\n          this.audioGroups_[mediaGroup] = [];\n        }\n\n        for (var label in mediaGroups.AUDIO[mediaGroup]) {\n          var properties = mediaGroups.AUDIO[mediaGroup][label];\n          var track = new _videoJs2['default'].AudioTrack({\n            id: label,\n            kind: properties['default'] ? 'main' : 'alternative',\n            enabled: false,\n            language: properties.language,\n            label: label\n          });\n\n          track.properties_ = properties;\n          this.audioGroups_[mediaGroup].push(track);\n        }\n      }\n\n      // enable the default active track\n      (this.activeAudioGroup().filter(function (audioTrack) {\n        return audioTrack.properties_['default'];\n      })[0] || this.activeAudioGroup()[0]).enabled = true;\n    }\n\n    /**\n     * Call load on our SegmentLoaders\n     */\n  }, {\n    key: 'load',\n    value: function load() {\n      this.mainSegmentLoader_.load();\n      if (this.audioPlaylistLoader_) {\n        this.audioSegmentLoader_.load();\n      }\n    }\n\n    /**\n     * Returns the audio group for the currently active primary\n     * media playlist.\n     */\n  }, {\n    key: 'activeAudioGroup',\n    value: function activeAudioGroup() {\n      var videoPlaylist = this.masterPlaylistLoader_.media();\n      var result = undefined;\n\n      if (videoPlaylist.attributes && videoPlaylist.attributes.AUDIO) {\n        result = this.audioGroups_[videoPlaylist.attributes.AUDIO];\n      }\n\n      return result || this.audioGroups_.main;\n    }\n\n    /**\n     * Determine the correct audio rendition based on the active\n     * AudioTrack and initialize a PlaylistLoader and SegmentLoader if\n     * necessary. This method is called once automatically before\n     * playback begins to enable the default audio track and should be\n     * invoked again if the track is changed.\n     */\n  }, {\n    key: 'setupAudio',\n    value: function setupAudio() {\n      var _this4 = this;\n\n      // determine whether seperate loaders are required for the audio\n      // rendition\n      var audioGroup = this.activeAudioGroup();\n      var track = audioGroup.filter(function (audioTrack) {\n        return audioTrack.enabled;\n      })[0];\n\n      if (!track) {\n        track = audioGroup.filter(function (audioTrack) {\n          return audioTrack.properties_['default'];\n        })[0] || audioGroup[0];\n        track.enabled = true;\n      }\n\n      // stop playlist and segment loading for audio\n      if (this.audioPlaylistLoader_) {\n        this.audioPlaylistLoader_.dispose();\n        this.audioPlaylistLoader_ = null;\n      }\n      this.audioSegmentLoader_.pause();\n\n      if (!track.properties_.resolvedUri) {\n        this.mainSegmentLoader_.resetEverything();\n        return;\n      }\n      this.audioSegmentLoader_.resetEverything();\n\n      // startup playlist and segment loaders for the enabled audio\n      // track\n      this.audioPlaylistLoader_ = new _playlistLoader2['default'](track.properties_.resolvedUri, this.hls_, this.withCredentials);\n      this.audioPlaylistLoader_.start();\n\n      this.audioPlaylistLoader_.on('loadedmetadata', function () {\n        var audioPlaylist = _this4.audioPlaylistLoader_.media();\n\n        _this4.audioSegmentLoader_.playlist(audioPlaylist, _this4.requestOptions_);\n\n        // if the video is already playing, or if this isn't a live video and preload\n        // permits, start downloading segments\n        if (!_this4.tech_.paused() || audioPlaylist.endList && _this4.tech_.preload() !== 'none') {\n          _this4.audioSegmentLoader_.load();\n        }\n\n        if (!audioPlaylist.endList) {\n          _this4.audioPlaylistLoader_.trigger('firstplay');\n        }\n      });\n\n      this.audioPlaylistLoader_.on('loadedplaylist', function () {\n        var updatedPlaylist = undefined;\n\n        if (_this4.audioPlaylistLoader_) {\n          updatedPlaylist = _this4.audioPlaylistLoader_.media();\n        }\n\n        if (!updatedPlaylist) {\n          // only one playlist to select\n          _this4.audioPlaylistLoader_.media(_this4.audioPlaylistLoader_.playlists.master.playlists[0]);\n          return;\n        }\n\n        _this4.audioSegmentLoader_.playlist(updatedPlaylist, _this4.requestOptions_);\n      });\n\n      this.audioPlaylistLoader_.on('error', function () {\n        _videoJs2['default'].log.warn('Problem encountered loading the alternate audio track' + '. Switching back to default.');\n        _this4.audioSegmentLoader_.abort();\n        _this4.setupAudio();\n      });\n    }\n\n    /**\n     * Re-tune playback quality level for the current player\n     * conditions. This method may perform destructive actions, like\n     * removing already buffered content, to readjust the currently\n     * active playlist quickly.\n     *\n     * @private\n     */\n  }, {\n    key: 'fastQualityChange_',\n    value: function fastQualityChange_() {\n      var media = this.selectPlaylist();\n\n      if (media !== this.masterPlaylistLoader_.media()) {\n        this.masterPlaylistLoader_.media(media);\n\n        this.mainSegmentLoader_.resetLoader();\n        if (this.audiosegmentloader_) {\n          this.audioSegmentLoader_.resetLoader();\n        }\n      }\n    }\n\n    /**\n     * Begin playback.\n     */\n  }, {\n    key: 'play',\n    value: function play() {\n      if (this.setupFirstPlay()) {\n        return;\n      }\n\n      if (this.tech_.ended()) {\n        this.tech_.setCurrentTime(0);\n      }\n\n      if (this.hasPlayed_()) {\n        this.load();\n      }\n\n      // if the viewer has paused and we fell out of the live window,\n      // seek forward to the earliest available position\n      if (this.tech_.duration() === Infinity) {\n        if (this.tech_.currentTime() < this.tech_.seekable().start(0)) {\n          return this.tech_.setCurrentTime(this.tech_.seekable().start(0));\n        }\n      }\n    }\n\n    /**\n     * Seek to the latest media position if this is a live video and the\n     * player and video are loaded and initialized.\n     */\n  }, {\n    key: 'setupFirstPlay',\n    value: function setupFirstPlay() {\n      var seekable = undefined;\n      var media = this.masterPlaylistLoader_.media();\n\n      // check that everything is ready to begin buffering in the live\n      // scenario\n      // 1) the active media playlist is available\n      if (media &&\n      // 2) the player is not paused\n      !this.tech_.paused() &&\n      // 3) the player has not started playing\n      !this.hasPlayed_()) {\n\n        // when the video is a live stream\n        if (!media.endList) {\n          this.trigger('firstplay');\n\n          // seek to the latest media position for live videos\n          seekable = this.seekable();\n          if (seekable.length) {\n            this.tech_.setCurrentTime(seekable.end(0));\n          }\n        }\n        this.hasPlayed_ = function () {\n          return true;\n        };\n        // now that we are ready, load the segment\n        this.load();\n        return true;\n      }\n      return false;\n    }\n\n    /**\n     * handle the sourceopen event on the MediaSource\n     *\n     * @private\n     */\n  }, {\n    key: 'handleSourceOpen_',\n    value: function handleSourceOpen_() {\n      // Only attempt to create the source buffer if none already exist.\n      // handleSourceOpen is also called when we are \"re-opening\" a source buffer\n      // after `endOfStream` has been called (in response to a seek for instance)\n      try {\n        this.setupSourceBuffers_();\n      } catch (e) {\n        _videoJs2['default'].log.warn('Failed to create Source Buffers', e);\n        return this.mediaSource.endOfStream('decode');\n      }\n\n      // if autoplay is enabled, begin playback. This is duplicative of\n      // code in video.js but is required because play() must be invoked\n      // *after* the media source has opened.\n      if (this.tech_.autoplay()) {\n        this.tech_.play();\n      }\n\n      this.trigger('sourceopen');\n    }\n\n    /**\n     * Blacklists a playlist when an error occurs for a set amount of time\n     * making it unavailable for selection by the rendition selection algorithm\n     * and then forces a new playlist (rendition) selection.\n     *\n     * @param {Object=} error an optional error that may include the playlist\n     * to blacklist\n     */\n  }, {\n    key: 'blacklistCurrentPlaylist',\n    value: function blacklistCurrentPlaylist() {\n      var error = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];\n\n      var currentPlaylist = undefined;\n      var nextPlaylist = undefined;\n\n      // If the `error` was generated by the playlist loader, it will contain\n      // the playlist we were trying to load (but failed) and that should be\n      // blacklisted instead of the currently selected playlist which is likely\n      // out-of-date in this scenario\n      currentPlaylist = error.playlist || this.masterPlaylistLoader_.media();\n\n      // If there is no current playlist, then an error occurred while we were\n      // trying to load the master OR while we were disposing of the tech\n      if (!currentPlaylist) {\n        this.error = error;\n        return this.mediaSource.endOfStream('network');\n      }\n\n      // Blacklist this playlist\n      currentPlaylist.excludeUntil = Date.now() + BLACKLIST_DURATION;\n\n      // Select a new playlist\n      nextPlaylist = this.selectPlaylist();\n\n      if (nextPlaylist) {\n        _videoJs2['default'].log.warn('Problem encountered with the current ' + 'HLS playlist. Switching to another playlist.');\n\n        return this.masterPlaylistLoader_.media(nextPlaylist);\n      }\n      _videoJs2['default'].log.warn('Problem encountered with the current ' + 'HLS playlist. No suitable alternatives found.');\n      // We have no more playlists we can select so we must fail\n      this.error = error;\n      return this.mediaSource.endOfStream('network');\n    }\n\n    /**\n     * Pause all segment loaders\n     */\n  }, {\n    key: 'pauseLoading',\n    value: function pauseLoading() {\n      this.mainSegmentLoader_.pause();\n      if (this.audioPlaylistLoader_) {\n        this.audioSegmentLoader_.pause();\n      }\n    }\n\n    /**\n     * set the current time on all segment loaders\n     *\n     * @param {TimeRange} currentTime the current time to set\n     * @return {TimeRange} the current time\n     */\n  }, {\n    key: 'setCurrentTime',\n    value: function setCurrentTime(currentTime) {\n      var buffered = _ranges2['default'].findRange(this.tech_.buffered(), currentTime);\n\n      if (!(this.masterPlaylistLoader_ && this.masterPlaylistLoader_.media())) {\n        // return immediately if the metadata is not ready yet\n        return 0;\n      }\n\n      // it's clearly an edge-case but don't thrown an error if asked to\n      // seek within an empty playlist\n      if (!this.masterPlaylistLoader_.media().segments) {\n        return 0;\n      }\n\n      // if the seek location is already buffered, continue buffering as\n      // usual\n      if (buffered && buffered.length) {\n        return currentTime;\n      }\n\n      // cancel outstanding requests so we begin buffering at the new\n      // location\n      this.mainSegmentLoader_.resetEverything();\n      this.mainSegmentLoader_.abort();\n      if (this.audioPlaylistLoader_) {\n        this.audioSegmentLoader_.resetEverything();\n        this.audioSegmentLoader_.abort();\n      }\n\n      if (!this.tech_.paused()) {\n        this.mainSegmentLoader_.load();\n        if (this.audioPlaylistLoader_) {\n          this.audioSegmentLoader_.load();\n        }\n      }\n    }\n\n    /**\n     * get the current duration\n     *\n     * @return {TimeRange} the duration\n     */\n  }, {\n    key: 'duration',\n    value: function duration() {\n      if (!this.masterPlaylistLoader_) {\n        return 0;\n      }\n\n      if (this.mediaSource) {\n        return this.mediaSource.duration;\n      }\n\n      return Hls.Playlist.duration(this.masterPlaylistLoader_.media());\n    }\n\n    /**\n     * check the seekable range\n     *\n     * @return {TimeRange} the seekable range\n     */\n  }, {\n    key: 'seekable',\n    value: function seekable() {\n      return this.seekable_;\n    }\n  }, {\n    key: 'onSyncInfoUpdate_',\n    value: function onSyncInfoUpdate_() {\n      var media = undefined;\n      var mainSeekable = undefined;\n      var audioSeekable = undefined;\n\n      if (!this.masterPlaylistLoader_) {\n        return;\n      }\n\n      media = this.masterPlaylistLoader_.media();\n\n      if (!media) {\n        return;\n      }\n\n      mainSeekable = Hls.Playlist.seekable(media);\n      if (mainSeekable.length === 0) {\n        return;\n      }\n\n      if (this.audioPlaylistLoader_) {\n        audioSeekable = Hls.Playlist.seekable(this.audioPlaylistLoader_.media());\n        if (audioSeekable.length === 0) {\n          return;\n        }\n      }\n\n      if (!audioSeekable) {\n        // seekable has been calculated based on buffering video data so it\n        // can be returned directly\n        this.seekable_ = mainSeekable;\n        return;\n      }\n\n      this.seekable_ = _videoJs2['default'].createTimeRanges([[audioSeekable.start(0) > mainSeekable.start(0) ? audioSeekable.start(0) : mainSeekable.start(0), audioSeekable.end(0) < mainSeekable.end(0) ? audioSeekable.end(0) : mainSeekable.end(0)]]);\n    }\n\n    /**\n     * Update the player duration\n     */\n  }, {\n    key: 'updateDuration',\n    value: function updateDuration() {\n      var _this5 = this;\n\n      var oldDuration = this.mediaSource.duration;\n      var newDuration = Hls.Playlist.duration(this.masterPlaylistLoader_.media());\n      var buffered = this.tech_.buffered();\n      var setDuration = function setDuration() {\n        _this5.mediaSource.duration = newDuration;\n        _this5.tech_.trigger('durationchange');\n\n        _this5.mediaSource.removeEventListener('sourceopen', setDuration);\n      };\n\n      if (buffered.length > 0) {\n        newDuration = Math.max(newDuration, buffered.end(buffered.length - 1));\n      }\n\n      // if the duration has changed, invalidate the cached value\n      if (oldDuration !== newDuration) {\n        // update the duration\n        if (this.mediaSource.readyState !== 'open') {\n          this.mediaSource.addEventListener('sourceopen', setDuration);\n        } else {\n          setDuration();\n        }\n      }\n    }\n\n    /**\n     * dispose of the MasterPlaylistController and everything\n     * that it controls\n     */\n  }, {\n    key: 'dispose',\n    value: function dispose() {\n      this.masterPlaylistLoader_.dispose();\n      this.mainSegmentLoader_.dispose();\n\n      if (this.audioPlaylistLoader_) {\n        this.audioPlaylistLoader_.dispose();\n      }\n      this.audioSegmentLoader_.dispose();\n    }\n\n    /**\n     * return the master playlist object if we have one\n     *\n     * @return {Object} the master playlist object that we parsed\n     */\n  }, {\n    key: 'master',\n    value: function master() {\n      return this.masterPlaylistLoader_.master;\n    }\n\n    /**\n     * return the currently selected playlist\n     *\n     * @return {Object} the currently selected playlist object that we parsed\n     */\n  }, {\n    key: 'media',\n    value: function media() {\n      // playlist loader will not return media if it has not been fully loaded\n      return this.masterPlaylistLoader_.media() || this.initialMedia_;\n    }\n\n    /**\n     * setup our internal source buffers on our segment Loaders\n     *\n     * @private\n     */\n  }, {\n    key: 'setupSourceBuffers_',\n    value: function setupSourceBuffers_() {\n      var media = this.masterPlaylistLoader_.media();\n      var mimeTypes = undefined;\n\n      // wait until a media playlist is available and the Media Source is\n      // attached\n      if (!media || this.mediaSource.readyState !== 'open') {\n        return;\n      }\n\n      mimeTypes = mimeTypesForPlaylist_(this.masterPlaylistLoader_.master, media);\n      if (mimeTypes.length < 1) {\n        this.error = 'No compatible SourceBuffer configuration for the variant stream:' + media.resolvedUri;\n        return this.mediaSource.endOfStream('decode');\n      }\n      this.mainSegmentLoader_.mimeType(mimeTypes[0]);\n      if (mimeTypes[1]) {\n        this.audioSegmentLoader_.mimeType(mimeTypes[1]);\n      }\n\n      // exclude any incompatible variant streams from future playlist\n      // selection\n      this.excludeIncompatibleVariants_(media);\n    }\n\n    /**\n     * Blacklist playlists that are known to be codec or\n     * stream-incompatible with the SourceBuffer configuration. For\n     * instance, Media Source Extensions would cause the video element to\n     * stall waiting for video data if you switched from a variant with\n     * video and audio to an audio-only one.\n     *\n     * @param {Object} media a media playlist compatible with the current\n     * set of SourceBuffers. Variants in the current master playlist that\n     * do not appear to have compatible codec or stream configurations\n     * will be excluded from the default playlist selection algorithm\n     * indefinitely.\n     * @private\n     */\n  }, {\n    key: 'excludeIncompatibleVariants_',\n    value: function excludeIncompatibleVariants_(media) {\n      var master = this.masterPlaylistLoader_.master;\n      var codecCount = 2;\n      var videoCodec = null;\n      var audioProfile = null;\n      var codecs = undefined;\n\n      if (media.attributes && media.attributes.CODECS) {\n        codecs = parseCodecs(media.attributes.CODECS);\n        videoCodec = codecs.videoCodec;\n        audioProfile = codecs.audioProfile;\n        codecCount = codecs.codecCount;\n      }\n      master.playlists.forEach(function (variant) {\n        var variantCodecs = {\n          codecCount: 2,\n          videoCodec: null,\n          audioProfile: null\n        };\n\n        if (variant.attributes && variant.attributes.CODECS) {\n          var codecString = variant.attributes.CODECS;\n\n          variantCodecs = parseCodecs(codecString);\n          if (window.MediaSource && window.MediaSource.isTypeSupported && !window.MediaSource.isTypeSupported('video/mp4; codecs=\"' + codecString + '\"')) {\n            variant.excludeUntil = Infinity;\n          }\n        }\n\n        // if the streams differ in the presence or absence of audio or\n        // video, they are incompatible\n        if (variantCodecs.codecCount !== codecCount) {\n          variant.excludeUntil = Infinity;\n        }\n\n        // if h.264 is specified on the current playlist, some flavor of\n        // it must be specified on all compatible variants\n        if (variantCodecs.videoCodec !== videoCodec) {\n          variant.excludeUntil = Infinity;\n        }\n        // HE-AAC (\"mp4a.40.5\") is incompatible with all other versions of\n        // AAC audio in Chrome 46. Don't mix the two.\n        if (variantCodecs.audioProfile === '5' && audioProfile !== '5' || audioProfile === '5' && variantCodecs.audioProfile !== '5') {\n          variant.excludeUntil = Infinity;\n        }\n      });\n    }\n  }, {\n    key: 'updateAdCues_',\n    value: function updateAdCues_(media) {\n      var offset = 0;\n      var seekable = this.seekable();\n\n      if (seekable.length) {\n        offset = seekable.start(0);\n      }\n\n      _adCueTags2['default'].updateAdCues(media, this.cueTagsTrack_, offset);\n    }\n  }]);\n\n  return MasterPlaylistController;\n})(_videoJs2['default'].EventTarget);\n\nexports.MasterPlaylistController = MasterPlaylistController;\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n},{\"./ad-cue-tags\":1,\"./playlist-loader\":6,\"./ranges\":8,\"./segment-loader\":12,\"./sync-controller\":15}],5:[function(require,module,exports){\n(function (global){\n/**\n * @file playback-watcher.js\n */\n'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\n\nvar _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }\n\nvar _ranges = require('./ranges');\n\nvar _ranges2 = _interopRequireDefault(_ranges);\n\nvar _videoJs = (typeof window !== \"undefined\" ? window['videojs'] : typeof global !== \"undefined\" ? global['videojs'] : null);\n\nvar _videoJs2 = _interopRequireDefault(_videoJs);\n\n// Set of events that reset the playback-watcher time check logic and clear the timeout\nvar timerCancelEvents = ['seeking', 'seeked', 'pause', 'playing', 'error'];\n\n/**\n * @class PlaybackWatcher\n */\n\nvar PlaybackWatcher = (function () {\n  /**\n   * Represents an PlaybackWatcher object.\n   * @constructor\n   * @param {object} options an object that includes the tech and settings\n   */\n\n  function PlaybackWatcher(options) {\n    var _this = this;\n\n    _classCallCheck(this, PlaybackWatcher);\n\n    this.tech_ = options.tech;\n    this.seekable = options.seekable;\n\n    this.consecutiveUpdates = 0;\n    this.lastRecordedTime = null;\n    this.timer_ = null;\n    this.checkCurrentTimeTimeout_ = null;\n\n    if (options.debug) {\n      this.logger_ = _videoJs2['default'].log.bind(_videoJs2['default'], 'playback-watcher ->');\n    }\n    this.logger_('initialize');\n\n    var waitingHandler = function waitingHandler() {\n      return _this.waiting_();\n    };\n    var cancelTimerHandler = function cancelTimerHandler() {\n      return _this.cancelTimer_();\n    };\n\n    this.tech_.on('waiting', waitingHandler);\n    this.tech_.on(timerCancelEvents, cancelTimerHandler);\n    this.monitorCurrentTime_();\n\n    // Define the dispose function to clean up our events\n    this.dispose = function () {\n      _this.logger_('dispose');\n      _this.tech_.off('waiting', waitingHandler);\n      _this.tech_.off(timerCancelEvents, cancelTimerHandler);\n      if (_this.checkCurrentTimeTimeout_) {\n        clearTimeout(_this.checkCurrentTimeTimeout_);\n      }\n      _this.cancelTimer_();\n    };\n  }\n\n  /**\n   * Periodically check current time to see if playback stopped\n   *\n   * @private\n   */\n\n  _createClass(PlaybackWatcher, [{\n    key: 'monitorCurrentTime_',\n    value: function monitorCurrentTime_() {\n      this.checkCurrentTime_();\n\n      if (this.checkCurrentTimeTimeout_) {\n        clearTimeout(this.checkCurrentTimeTimeout_);\n      }\n\n      // 42 = 24 fps // 250 is what Webkit uses // FF uses 15\n      this.checkCurrentTimeTimeout_ = setTimeout(this.monitorCurrentTime_.bind(this), 250);\n    }\n\n    /**\n     * The purpose of this function is to emulate the \"waiting\" event on\n     * browsers that do not emit it when they are waiting for more\n     * data to continue playback\n     *\n     * @private\n     */\n  }, {\n    key: 'checkCurrentTime_',\n    value: function checkCurrentTime_() {\n      if (this.tech_.paused() || this.tech_.seeking()) {\n        return;\n      }\n\n      var currentTime = this.tech_.currentTime();\n\n      if (this.consecutiveUpdates >= 5 && currentTime === this.lastRecordedTime) {\n        this.consecutiveUpdates++;\n        this.waiting_();\n      } else if (currentTime === this.lastRecordedTime) {\n        this.consecutiveUpdates++;\n      } else {\n        this.consecutiveUpdates = 0;\n        this.lastRecordedTime = currentTime;\n      }\n    }\n\n    /**\n     * Cancels any pending timers and resets the 'timeupdate' mechanism\n     * designed to detect that we are stalled\n     *\n     * @private\n     */\n  }, {\n    key: 'cancelTimer_',\n    value: function cancelTimer_() {\n      this.consecutiveUpdates = 0;\n\n      if (this.timer_) {\n        this.logger_('cancelTimer_');\n        clearTimeout(this.timer_);\n      }\n\n      this.timer_ = null;\n    }\n\n    /**\n     * Handler for situations when we determine the player is waiting\n     *\n     * @private\n     */\n  }, {\n    key: 'waiting_',\n    value: function waiting_() {\n      var seekable = this.seekable();\n      var currentTime = this.tech_.currentTime();\n\n      if (this.tech_.seeking() || this.timer_ !== null) {\n        return;\n      }\n\n      if (this.fellOutOfLiveWindow_(seekable, currentTime)) {\n        var livePoint = seekable.end(seekable.length - 1);\n\n        this.logger_('Fell out of live window at time ' + currentTime + '. Seeking to ' + ('live point (seekable end) ' + livePoint));\n        this.cancelTimer_();\n        this.tech_.setCurrentTime(livePoint);\n\n        return;\n      }\n\n      var buffered = this.tech_.buffered();\n      var nextRange = _ranges2['default'].findNextRange(buffered, currentTime);\n\n      if (this.videoUnderflow_(nextRange, buffered, currentTime)) {\n        // Even though the video underflowed and was stuck in a gap, the audio overplayed\n        // the gap, leading currentTime into a buffered range. Seeking to currentTime\n        // allows the video to catch up to the audio position without losing any audio\n        // (only suffering ~3 seconds of frozen video and a pause in audio playback).\n        this.cancelTimer_();\n        this.tech_.setCurrentTime(currentTime);\n        return;\n      }\n\n      // check for gap\n      if (nextRange.length > 0) {\n        var difference = nextRange.start(0) - currentTime;\n\n        this.logger_('Stopped at ' + currentTime + ', setting timer for ' + difference + ', seeking ' + ('to ' + nextRange.start(0)));\n\n        this.timer_ = setTimeout(this.skipTheGap_.bind(this), difference * 1000, currentTime);\n      }\n    }\n  }, {\n    key: 'fellOutOfLiveWindow_',\n    value: function fellOutOfLiveWindow_(seekable, currentTime) {\n      if (seekable.length &&\n      // can't fall before 0 and 0 seekable start identifies VOD stream\n      seekable.start(0) > 0 && currentTime < seekable.start(0)) {\n        return true;\n      }\n\n      return false;\n    }\n  }, {\n    key: 'videoUnderflow_',\n    value: function videoUnderflow_(nextRange, buffered, currentTime) {\n      if (nextRange.length === 0) {\n        // Even if there is no available next range, there is still a possibility we are\n        // stuck in a gap due to video underflow.\n        var gap = this.gapFromVideoUnderflow_(buffered, currentTime);\n\n        if (gap) {\n          this.logger_('Encountered a gap in video from ' + gap.start + ' to ' + gap.end + '. ' + ('Seeking to current time ' + currentTime));\n\n          return true;\n        }\n      }\n\n      return false;\n    }\n\n    /**\n     * Timer callback. If playback still has not proceeded, then we seek\n     * to the start of the next buffered region.\n     *\n     * @private\n     */\n  }, {\n    key: 'skipTheGap_',\n    value: function skipTheGap_(scheduledCurrentTime) {\n      var buffered = this.tech_.buffered();\n      var currentTime = this.tech_.currentTime();\n      var nextRange = _ranges2['default'].findNextRange(buffered, currentTime);\n\n      this.cancelTimer_();\n\n      if (nextRange.length === 0 || currentTime !== scheduledCurrentTime) {\n        return;\n      }\n\n      this.logger_('skipTheGap_:', 'currentTime:', currentTime, 'scheduled currentTime:', scheduledCurrentTime, 'nextRange start:', nextRange.start(0));\n\n      // only seek if we still have not played\n      this.tech_.setCurrentTime(nextRange.start(0) + _ranges2['default'].TIME_FUDGE_FACTOR);\n    }\n  }, {\n    key: 'gapFromVideoUnderflow_',\n    value: function gapFromVideoUnderflow_(buffered, currentTime) {\n      // At least in Chrome, if there is a gap in the video buffer, the audio will continue\n      // playing for ~3 seconds after the video gap starts. This is done to account for\n      // video buffer underflow/underrun (note that this is not done when there is audio\n      // buffer underflow/underrun -- in that case the video will stop as soon as it\n      // encounters the gap, as audio stalls are more noticeable/jarring to a user than\n      // video stalls). The player's time will reflect the playthrough of audio, so the\n      // time will appear as if we are in a buffered region, even if we are stuck in a\n      // \"gap.\"\n      //\n      // Example:\n      // video buffer:   0 => 10.1, 10.2 => 20\n      // audio buffer:   0 => 20\n      // overall buffer: 0 => 10.1, 10.2 => 20\n      // current time: 13\n      //\n      // Chrome's video froze at 10 seconds, where the video buffer encountered the gap,\n      // however, the audio continued playing until it reached ~3 seconds past the gap\n      // (13 seconds), at which point it stops as well. Since current time is past the\n      // gap, findNextRange will return no ranges.\n      //\n      // To check for this issue, we see if there is a gap that starts somewhere within\n      // a 3 second range (3 seconds +/- 1 second) back from our current time.\n      var gaps = _ranges2['default'].findGaps(buffered);\n\n      for (var i = 0; i < gaps.length; i++) {\n        var start = gaps.start(i);\n        var end = gaps.end(i);\n\n        // gap is starts no more than 4 seconds back\n        if (currentTime - start < 4 && currentTime - start > 2) {\n          return {\n            start: start,\n            end: end\n          };\n        }\n      }\n\n      return null;\n    }\n\n    /**\n     * A debugging logger noop that is set to console.log only if debugging\n     * is enabled globally\n     *\n     * @private\n     */\n  }, {\n    key: 'logger_',\n    value: function logger_() {}\n  }]);\n\n  return PlaybackWatcher;\n})();\n\nexports['default'] = PlaybackWatcher;\nmodule.exports = exports['default'];\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n},{\"./ranges\":8}],6:[function(require,module,exports){\n(function (global){\n/**\n * @file playlist-loader.js\n *\n * A state machine that manages the loading, caching, and updating of\n * M3U8 playlists.\n *\n */\n'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nvar _resolveUrl = require('./resolve-url');\n\nvar _resolveUrl2 = _interopRequireDefault(_resolveUrl);\n\nvar _videoJs = (typeof window !== \"undefined\" ? window['videojs'] : typeof global !== \"undefined\" ? global['videojs'] : null);\n\nvar _stream = require('./stream');\n\nvar _stream2 = _interopRequireDefault(_stream);\n\nvar _m3u8Parser = require('m3u8-parser');\n\nvar _m3u8Parser2 = _interopRequireDefault(_m3u8Parser);\n\nvar _globalWindow = require('global/window');\n\nvar _globalWindow2 = _interopRequireDefault(_globalWindow);\n\n/**\n  * Returns a new array of segments that is the result of merging\n  * properties from an older list of segments onto an updated\n  * list. No properties on the updated playlist will be overridden.\n  *\n  * @param {Array} original the outdated list of segments\n  * @param {Array} update the updated list of segments\n  * @param {Number=} offset the index of the first update\n  * segment in the original segment list. For non-live playlists,\n  * this should always be zero and does not need to be\n  * specified. For live playlists, it should be the difference\n  * between the media sequence numbers in the original and updated\n  * playlists.\n  * @return a list of merged segment objects\n  */\nvar updateSegments = function updateSegments(original, update, offset) {\n  var result = update.slice();\n  var length = undefined;\n  var i = undefined;\n\n  offset = offset || 0;\n  length = Math.min(original.length, update.length + offset);\n\n  for (i = offset; i < length; i++) {\n    result[i - offset] = (0, _videoJs.mergeOptions)(original[i], result[i - offset]);\n  }\n  return result;\n};\n\n/**\n  * Returns a new master playlist that is the result of merging an\n  * updated media playlist into the original version. If the\n  * updated media playlist does not match any of the playlist\n  * entries in the original master playlist, null is returned.\n  *\n  * @param {Object} master a parsed master M3U8 object\n  * @param {Object} media a parsed media M3U8 object\n  * @return {Object} a new object that represents the original\n  * master playlist with the updated media playlist merged in, or\n  * null if the merge produced no change.\n  */\nvar updateMaster = function updateMaster(master, media) {\n  var changed = false;\n  var result = (0, _videoJs.mergeOptions)(master, {});\n  var i = master.playlists.length;\n  var playlist = undefined;\n  var segment = undefined;\n  var j = undefined;\n\n  while (i--) {\n    playlist = result.playlists[i];\n    if (playlist.uri === media.uri) {\n      // consider the playlist unchanged if the number of segments\n      // are equal and the media sequence number is unchanged\n      if (playlist.segments && media.segments && playlist.segments.length === media.segments.length && playlist.mediaSequence === media.mediaSequence) {\n        continue;\n      }\n\n      result.playlists[i] = (0, _videoJs.mergeOptions)(playlist, media);\n      result.playlists[media.uri] = result.playlists[i];\n\n      // if the update could overlap existing segment information,\n      // merge the two lists\n      if (playlist.segments) {\n        result.playlists[i].segments = updateSegments(playlist.segments, media.segments, media.mediaSequence - playlist.mediaSequence);\n      }\n      // resolve any missing segment and key URIs\n      j = 0;\n      if (result.playlists[i].segments) {\n        j = result.playlists[i].segments.length;\n      }\n      while (j--) {\n        segment = result.playlists[i].segments[j];\n        if (!segment.resolvedUri) {\n          segment.resolvedUri = (0, _resolveUrl2['default'])(playlist.resolvedUri, segment.uri);\n        }\n        if (segment.key && !segment.key.resolvedUri) {\n          segment.key.resolvedUri = (0, _resolveUrl2['default'])(playlist.resolvedUri, segment.key.uri);\n        }\n        if (segment.map && !segment.map.resolvedUri) {\n          segment.map.resolvedUri = (0, _resolveUrl2['default'])(playlist.resolvedUri, segment.map.uri);\n        }\n      }\n      changed = true;\n    }\n  }\n  return changed ? result : null;\n};\n\n/**\n * Load a playlist from a remote loacation\n *\n * @class PlaylistLoader\n * @extends Stream\n * @param {String} srcUrl the url to start with\n * @param {Boolean} withCredentials the withCredentials xhr option\n * @constructor\n */\nvar PlaylistLoader = function PlaylistLoader(srcUrl, hls, withCredentials) {\n  var _this = this;\n\n  /* eslint-disable consistent-this */\n  var loader = this;\n  /* eslint-enable consistent-this */\n  var dispose = undefined;\n  var mediaUpdateTimeout = undefined;\n  var request = undefined;\n  var playlistRequestError = undefined;\n  var haveMetadata = undefined;\n\n  PlaylistLoader.prototype.constructor.call(this);\n\n  this.hls_ = hls;\n\n  if (!srcUrl) {\n    throw new Error('A non-empty playlist URL is required');\n  }\n\n  playlistRequestError = function (xhr, url, startingState) {\n    loader.setBandwidth(request || xhr);\n\n    // any in-flight request is now finished\n    request = null;\n\n    if (startingState) {\n      loader.state = startingState;\n    }\n\n    loader.error = {\n      playlist: loader.master.playlists[url],\n      status: xhr.status,\n      message: 'HLS playlist request error at URL: ' + url,\n      responseText: xhr.responseText,\n      code: xhr.status >= 500 ? 4 : 2\n    };\n\n    loader.trigger('error');\n  };\n\n  // update the playlist loader's state in response to a new or\n  // updated playlist.\n  haveMetadata = function (xhr, url) {\n    var parser = undefined;\n    var refreshDelay = undefined;\n    var update = undefined;\n\n    loader.setBandwidth(request || xhr);\n\n    // any in-flight request is now finished\n    request = null;\n\n    loader.state = 'HAVE_METADATA';\n\n    parser = new _m3u8Parser2['default'].Parser();\n    parser.push(xhr.responseText);\n    parser.end();\n    parser.manifest.uri = url;\n\n    // merge this playlist into the master\n    update = updateMaster(loader.master, parser.manifest);\n    refreshDelay = (parser.manifest.targetDuration || 10) * 1000;\n    loader.targetDuration = parser.manifest.targetDuration;\n    if (update) {\n      loader.master = update;\n      loader.media_ = loader.master.playlists[parser.manifest.uri];\n    } else {\n      // if the playlist is unchanged since the last reload,\n      // try again after half the target duration\n      refreshDelay /= 2;\n    }\n\n    // refresh live playlists after a target duration passes\n    if (!loader.media().endList) {\n      _globalWindow2['default'].clearTimeout(mediaUpdateTimeout);\n      mediaUpdateTimeout = _globalWindow2['default'].setTimeout(function () {\n        loader.trigger('mediaupdatetimeout');\n      }, refreshDelay);\n    }\n\n    loader.trigger('loadedplaylist');\n  };\n\n  // initialize the loader state\n  loader.state = 'HAVE_NOTHING';\n\n  // capture the prototype dispose function\n  dispose = this.dispose;\n\n  /**\n   * Abort any outstanding work and clean up.\n   */\n  loader.dispose = function () {\n    loader.stopRequest();\n    _globalWindow2['default'].clearTimeout(mediaUpdateTimeout);\n    dispose.call(this);\n  };\n\n  loader.stopRequest = function () {\n    if (request) {\n      var oldRequest = request;\n\n      request = null;\n      oldRequest.onreadystatechange = null;\n      oldRequest.abort();\n    }\n  };\n\n  /**\n   * Returns the number of enabled playlists on the master playlist object\n   *\n   * @return {Number} number of eneabled playlists\n   */\n  loader.enabledPlaylists_ = function () {\n    return loader.master.playlists.filter(function (element, index, array) {\n      return !element.excludeUntil || element.excludeUntil <= Date.now();\n    }).length;\n  };\n\n  /**\n   * Returns whether the current playlist is the lowest rendition\n   *\n   * @return {Boolean} true if on lowest rendition\n   */\n  loader.isLowestEnabledRendition_ = function () {\n    var media = loader.media();\n\n    if (!media || !media.attributes) {\n      return false;\n    }\n\n    var currentBandwidth = loader.media().attributes.BANDWIDTH || 0;\n\n    return !(loader.master.playlists.filter(function (playlist) {\n      var enabled = typeof playlist.excludeUntil === 'undefined' || playlist.excludeUntil <= Date.now();\n\n      if (!enabled) {\n        return false;\n      }\n\n      var bandwidth = 0;\n\n      if (playlist && playlist.attributes) {\n        bandwidth = playlist.attributes.BANDWIDTH;\n      }\n      return bandwidth <= currentBandwidth;\n    }).length > 1);\n  };\n\n  /**\n   * When called without any arguments, returns the currently\n   * active media playlist. When called with a single argument,\n   * triggers the playlist loader to asynchronously switch to the\n   * specified media playlist. Calling this method while the\n   * loader is in the HAVE_NOTHING causes an error to be emitted\n   * but otherwise has no effect.\n   *\n   * @param {Object=} playlis tthe parsed media playlist\n   * object to switch to\n   * @return {Playlist} the current loaded media\n   */\n  loader.media = function (playlist) {\n    var startingState = loader.state;\n    var mediaChange = undefined;\n\n    // getter\n    if (!playlist) {\n      return loader.media_;\n    }\n\n    // setter\n    if (loader.state === 'HAVE_NOTHING') {\n      throw new Error('Cannot switch media playlist from ' + loader.state);\n    }\n\n    // find the playlist object if the target playlist has been\n    // specified by URI\n    if (typeof playlist === 'string') {\n      if (!loader.master.playlists[playlist]) {\n        throw new Error('Unknown playlist URI: ' + playlist);\n      }\n      playlist = loader.master.playlists[playlist];\n    }\n\n    mediaChange = !loader.media_ || playlist.uri !== loader.media_.uri;\n\n    // switch to fully loaded playlists immediately\n    if (loader.master.playlists[playlist.uri].endList) {\n      // abort outstanding playlist requests\n      if (request) {\n        request.onreadystatechange = null;\n        request.abort();\n        request = null;\n      }\n      loader.state = 'HAVE_METADATA';\n      loader.media_ = playlist;\n\n      // trigger media change if the active media has been updated\n      if (mediaChange) {\n        loader.trigger('mediachanging');\n        loader.trigger('mediachange');\n      }\n      return;\n    }\n\n    // switching to the active playlist is a no-op\n    if (!mediaChange) {\n      return;\n    }\n\n    loader.state = 'SWITCHING_MEDIA';\n\n    // there is already an outstanding playlist request\n    if (request) {\n      if ((0, _resolveUrl2['default'])(loader.master.uri, playlist.uri) === request.url) {\n        // requesting to switch to the same playlist multiple times\n        // has no effect after the first\n        return;\n      }\n      request.onreadystatechange = null;\n      request.abort();\n      request = null;\n    }\n\n    // request the new playlist\n    if (this.media_) {\n      this.trigger('mediachanging');\n    }\n    request = this.hls_.xhr({\n      uri: (0, _resolveUrl2['default'])(loader.master.uri, playlist.uri),\n      withCredentials: withCredentials\n    }, function (error, req) {\n      // disposed\n      if (!request) {\n        return;\n      }\n\n      if (error) {\n        return playlistRequestError(request, playlist.uri, startingState);\n      }\n\n      haveMetadata(req, playlist.uri);\n\n      // fire loadedmetadata the first time a media playlist is loaded\n      if (startingState === 'HAVE_MASTER') {\n        loader.trigger('loadedmetadata');\n      } else {\n        loader.trigger('mediachange');\n      }\n    });\n  };\n\n  /**\n   * set the bandwidth on an xhr to the bandwidth on the playlist\n   */\n  loader.setBandwidth = function (xhr) {\n    loader.bandwidth = xhr.bandwidth;\n  };\n\n  // live playlist staleness timeout\n  loader.on('mediaupdatetimeout', function () {\n    if (loader.state !== 'HAVE_METADATA') {\n      // only refresh the media playlist if no other activity is going on\n      return;\n    }\n\n    loader.state = 'HAVE_CURRENT_METADATA';\n    request = this.hls_.xhr({\n      uri: (0, _resolveUrl2['default'])(loader.master.uri, loader.media().uri),\n      withCredentials: withCredentials\n    }, function (error, req) {\n      // disposed\n      if (!request) {\n        return;\n      }\n\n      if (error) {\n        return playlistRequestError(request, loader.media().uri);\n      }\n      haveMetadata(request, loader.media().uri);\n    });\n  });\n\n  // setup initial sync info\n  loader.on('firstplay', function () {\n    var playlist = loader.media();\n\n    if (playlist) {\n      playlist.syncInfo = {\n        mediaSequence: playlist.mediaSequence,\n        time: 0\n      };\n    }\n  });\n\n  /**\n   * pause loading of the playlist\n   */\n  loader.pause = function () {\n    loader.stopRequest();\n    _globalWindow2['default'].clearTimeout(mediaUpdateTimeout);\n  };\n\n  /**\n   * start loading of the playlist\n   */\n  loader.load = function () {\n    if (loader.started) {\n      if (!loader.media().endList) {\n        loader.trigger('mediaupdatetimeout');\n      } else {\n        loader.trigger('loadedplaylist');\n      }\n    } else {\n      loader.start();\n    }\n  };\n\n  /**\n   * start loading of the playlist\n   */\n  loader.start = function () {\n    loader.started = true;\n\n    // request the specified URL\n    request = _this.hls_.xhr({\n      uri: srcUrl,\n      withCredentials: withCredentials\n    }, function (error, req) {\n      var parser = undefined;\n      var playlist = undefined;\n      var i = undefined;\n\n      // disposed\n      if (!request) {\n        return;\n      }\n\n      // clear the loader's request reference\n      request = null;\n\n      if (error) {\n        loader.error = {\n          status: req.status,\n          message: 'HLS playlist request error at URL: ' + srcUrl,\n          responseText: req.responseText,\n          // MEDIA_ERR_NETWORK\n          code: 2\n        };\n        return loader.trigger('error');\n      }\n\n      parser = new _m3u8Parser2['default'].Parser();\n      parser.push(req.responseText);\n      parser.end();\n\n      loader.state = 'HAVE_MASTER';\n\n      parser.manifest.uri = srcUrl;\n\n      // loaded a master playlist\n      if (parser.manifest.playlists) {\n        loader.master = parser.manifest;\n\n        // setup by-URI lookups and resolve media playlist URIs\n        i = loader.master.playlists.length;\n        while (i--) {\n          playlist = loader.master.playlists[i];\n          loader.master.playlists[playlist.uri] = playlist;\n          playlist.resolvedUri = (0, _resolveUrl2['default'])(loader.master.uri, playlist.uri);\n        }\n\n        // resolve any media group URIs\n        for (var groupKey in loader.master.mediaGroups.AUDIO) {\n          for (var labelKey in loader.master.mediaGroups.AUDIO[groupKey]) {\n            var alternateAudio = loader.master.mediaGroups.AUDIO[groupKey][labelKey];\n\n            if (alternateAudio.uri) {\n              alternateAudio.resolvedUri = (0, _resolveUrl2['default'])(loader.master.uri, alternateAudio.uri);\n            }\n          }\n        }\n\n        loader.trigger('loadedplaylist');\n        if (!request) {\n          // no media playlist was specifically selected so start\n          // from the first listed one\n          loader.media(parser.manifest.playlists[0]);\n        }\n        return;\n      }\n\n      // loaded a media playlist\n      // infer a master playlist if none was previously requested\n      loader.master = {\n        mediaGroups: {\n          'AUDIO': {},\n          'VIDEO': {},\n          'CLOSED-CAPTIONS': {},\n          'SUBTITLES': {}\n        },\n        uri: _globalWindow2['default'].location.href,\n        playlists: [{\n          uri: srcUrl\n        }]\n      };\n      loader.master.playlists[srcUrl] = loader.master.playlists[0];\n      loader.master.playlists[0].resolvedUri = srcUrl;\n      haveMetadata(req, srcUrl);\n      return loader.trigger('loadedmetadata');\n    });\n  };\n};\n\nPlaylistLoader.prototype = new _stream2['default']();\n\nexports['default'] = PlaylistLoader;\nmodule.exports = exports['default'];\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n},{\"./resolve-url\":11,\"./stream\":14,\"global/window\":27,\"m3u8-parser\":64}],7:[function(require,module,exports){\n(function (global){\n/**\n * @file playlist.js\n *\n * Playlist related utilities.\n */\n'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nvar _videoJs = (typeof window !== \"undefined\" ? window['videojs'] : typeof global !== \"undefined\" ? global['videojs'] : null);\n\nvar _globalWindow = require('global/window');\n\nvar _globalWindow2 = _interopRequireDefault(_globalWindow);\n\nvar Playlist = {\n  /**\n   * The number of segments that are unsafe to start playback at in\n   * a live stream. Changing this value can cause playback stalls.\n   * See HTTP Live Streaming, \"Playing the Media Playlist File\"\n   * https://tools.ietf.org/html/draft-pantos-http-live-streaming-18#section-6.3.3\n   */\n  UNSAFE_LIVE_SEGMENTS: 3\n};\n\n/**\n * walk backward until we find a duration we can use\n * or return a failure\n *\n * @param {Playlist} playlist the playlist to walk through\n * @param {Number} endSequence the mediaSequence to stop walking on\n */\n\nvar backwardDuration = function backwardDuration(playlist, endSequence) {\n  var result = 0;\n  var i = endSequence - playlist.mediaSequence;\n  // if a start time is available for segment immediately following\n  // the interval, use it\n  var segment = playlist.segments[i];\n\n  // Walk backward until we find the latest segment with timeline\n  // information that is earlier than endSequence\n  if (segment) {\n    if (typeof segment.start !== 'undefined') {\n      return { result: segment.start, precise: true };\n    }\n    if (typeof segment.end !== 'undefined') {\n      return {\n        result: segment.end - segment.duration,\n        precise: true\n      };\n    }\n  }\n  while (i--) {\n    segment = playlist.segments[i];\n    if (typeof segment.end !== 'undefined') {\n      return { result: result + segment.end, precise: true };\n    }\n\n    result += segment.duration;\n\n    if (typeof segment.start !== 'undefined') {\n      return { result: result + segment.start, precise: true };\n    }\n  }\n  return { result: result, precise: false };\n};\n\n/**\n * walk forward until we find a duration we can use\n * or return a failure\n *\n * @param {Playlist} playlist the playlist to walk through\n * @param {Number} endSequence the mediaSequence to stop walking on\n */\nvar forwardDuration = function forwardDuration(playlist, endSequence) {\n  var result = 0;\n  var segment = undefined;\n  var i = endSequence - playlist.mediaSequence;\n  // Walk forward until we find the earliest segment with timeline\n  // information\n\n  for (; i < playlist.segments.length; i++) {\n    segment = playlist.segments[i];\n    if (typeof segment.start !== 'undefined') {\n      return {\n        result: segment.start - result,\n        precise: true\n      };\n    }\n\n    result += segment.duration;\n\n    if (typeof segment.end !== 'undefined') {\n      return {\n        result: segment.end - result,\n        precise: true\n      };\n    }\n  }\n  // indicate we didn't find a useful duration estimate\n  return { result: -1, precise: false };\n};\n\n/**\n  * Calculate the media duration from the segments associated with a\n  * playlist. The duration of a subinterval of the available segments\n  * may be calculated by specifying an end index.\n  *\n  * @param {Object} playlist a media playlist object\n  * @param {Number=} endSequence an exclusive upper boundary\n  * for the playlist.  Defaults to playlist length.\n  * @param {Number} expired the amount of time that has dropped\n  * off the front of the playlist in a live scenario\n  * @return {Number} the duration between the first available segment\n  * and end index.\n  */\nvar intervalDuration = function intervalDuration(playlist, endSequence, expired) {\n  var backward = undefined;\n  var forward = undefined;\n\n  if (typeof endSequence === 'undefined') {\n    endSequence = playlist.mediaSequence + playlist.segments.length;\n  }\n\n  if (endSequence < playlist.mediaSequence) {\n    return 0;\n  }\n\n  // do a backward walk to estimate the duration\n  backward = backwardDuration(playlist, endSequence);\n  if (backward.precise) {\n    // if we were able to base our duration estimate on timing\n    // information provided directly from the Media Source, return\n    // it\n    return backward.result;\n  }\n\n  // walk forward to see if a precise duration estimate can be made\n  // that way\n  forward = forwardDuration(playlist, endSequence);\n  if (forward.precise) {\n    // we found a segment that has been buffered and so it's\n    // position is known precisely\n    return forward.result;\n  }\n\n  // return the less-precise, playlist-based duration estimate\n  return backward.result + expired;\n};\n\n/**\n  * Calculates the duration of a playlist. If a start and end index\n  * are specified, the duration will be for the subset of the media\n  * timeline between those two indices. The total duration for live\n  * playlists is always Infinity.\n  *\n  * @param {Object} playlist a media playlist object\n  * @param {Number=} endSequence an exclusive upper\n  * boundary for the playlist. Defaults to the playlist media\n  * sequence number plus its length.\n  * @param {Number=} expired the amount of time that has\n  * dropped off the front of the playlist in a live scenario\n  * @return {Number} the duration between the start index and end\n  * index.\n  */\nvar duration = function duration(playlist, endSequence, expired) {\n  if (!playlist) {\n    return 0;\n  }\n\n  if (typeof expired !== 'number') {\n    expired = 0;\n  }\n\n  // if a slice of the total duration is not requested, use\n  // playlist-level duration indicators when they're present\n  if (typeof endSequence === 'undefined') {\n    // if present, use the duration specified in the playlist\n    if (playlist.totalDuration) {\n      return playlist.totalDuration;\n    }\n\n    // duration should be Infinity for live playlists\n    if (!playlist.endList) {\n      return _globalWindow2['default'].Infinity;\n    }\n  }\n\n  // calculate the total duration based on the segment durations\n  return intervalDuration(playlist, endSequence, expired);\n};\n\nexports.duration = duration;\n/**\n  * Calculate the time between two indexes in the current playlist\n  * neight the start- nor the end-index need to be within the current\n  * playlist in which case, the targetDuration of the playlist is used\n  * to approximate the durations of the segments\n  *\n  * @param {Object} playlist a media playlist object\n  * @param {Number} startIndex\n  * @param {Number} endIndex\n  * @return {Number} the number of seconds between startIndex and endIndex\n  */\nvar sumDurations = function sumDurations(playlist, startIndex, endIndex) {\n  var durations = 0;\n\n  if (startIndex > endIndex) {\n    var _ref = [endIndex, startIndex];\n    startIndex = _ref[0];\n    endIndex = _ref[1];\n  }\n\n  if (startIndex < 0) {\n    for (var i = startIndex; i < Math.min(0, endIndex); i++) {\n      durations += playlist.targetDuration;\n    }\n    startIndex = 0;\n  }\n\n  for (var i = startIndex; i < endIndex; i++) {\n    durations += playlist.segments[i].duration;\n  }\n\n  return durations;\n};\n\nexports.sumDurations = sumDurations;\n/**\n * Returns an array with two sync points. The first being an expired sync point, which is\n * the most recent segment with timing sync data that has fallen off the playlist. The\n * second is a segment sync point, which is the first segment that has timing sync data in\n * the current playlist.\n *\n * @param {Object} playlist a media playlist object\n * @returns {Object} an object containing the two sync points\n * @returns {Object.expiredSync|null} sync point data from an expired segment\n * @returns {Object.segmentSync|null} sync point data from a segment in the playlist\n * @function getPlaylistSyncPoints\n */\nvar getPlaylistSyncPoints = function getPlaylistSyncPoints(playlist) {\n  if (!playlist || !playlist.segments) {\n    return [null, null];\n  }\n\n  var expiredSync = playlist.syncInfo || null;\n\n  var segmentSync = null;\n\n  // Find the first segment with timing information\n  for (var i = 0, l = playlist.segments.length; i < l; i++) {\n    var segment = playlist.segments[i];\n\n    if (typeof segment.start !== 'undefined') {\n      segmentSync = {\n        mediaSequence: playlist.mediaSequence + i,\n        time: segment.start\n      };\n      break;\n    }\n  }\n\n  return { expiredSync: expiredSync, segmentSync: segmentSync };\n};\n\n/**\n * Calculates the amount of time expired from the playlist based on the provided\n * sync points.\n *\n * @param {Object} playlist a media playlist object\n * @param {Object|null} expiredSync sync point representing most recent segment with\n *                                  timing sync data that has fallen off the playlist\n * @param {Object|null} segmentSync sync point representing the first segment that has\n *                                  timing sync data in the playlist\n * @returns {Number} the amount of time expired from the playlist\n * @function calculateExpiredTime\n */\nvar calculateExpiredTime = function calculateExpiredTime(playlist, expiredSync, segmentSync) {\n  // If we have both an expired sync point and a segment sync point\n  // determine which sync point is closest to the start of the playlist\n  // so the minimal amount of timing estimation is done.\n  if (expiredSync && segmentSync) {\n    var expiredDiff = expiredSync.mediaSequence - playlist.mediaSequence;\n    var segmentDiff = segmentSync.mediaSequence - playlist.mediaSequence;\n    var syncIndex = undefined;\n    var syncTime = undefined;\n\n    if (Math.abs(expiredDiff) > Math.abs(segmentDiff)) {\n      syncIndex = segmentDiff;\n      syncTime = -segmentSync.time;\n    } else {\n      syncIndex = expiredDiff;\n      syncTime = expiredSync.time;\n    }\n\n    return Math.abs(syncTime + sumDurations(playlist, syncIndex, 0));\n  }\n\n  // We only have an expired sync point, so base expired time on the expired sync point\n  // and estimate the time from that sync point to the start of the playlist.\n  if (expiredSync) {\n    var syncIndex = expiredSync.mediaSequence - playlist.mediaSequence;\n\n    return expiredSync.time + sumDurations(playlist, syncIndex, 0);\n  }\n\n  // We only have a segment sync point, so base expired time on the first segment we have\n  // sync point data for and estimate the time from that media index to the start of the\n  // playlist.\n  if (segmentSync) {\n    var syncIndex = segmentSync.mediaSequence - playlist.mediaSequence;\n\n    return segmentSync.time - sumDurations(playlist, syncIndex, 0);\n  }\n};\n\n/**\n  * Calculates the interval of time that is currently seekable in a\n  * playlist. The returned time ranges are relative to the earliest\n  * moment in the specified playlist that is still available. A full\n  * seekable implementation for live streams would need to offset\n  * these values by the duration of content that has expired from the\n  * stream.\n  *\n  * @param {Object} playlist a media playlist object\n  * dropped off the front of the playlist in a live scenario\n  * @return {TimeRanges} the periods of time that are valid targets\n  * for seeking\n  */\nvar seekable = function seekable(playlist) {\n  // without segments, there are no seekable ranges\n  if (!playlist || !playlist.segments) {\n    return (0, _videoJs.createTimeRange)();\n  }\n  // when the playlist is complete, the entire duration is seekable\n  if (playlist.endList) {\n    return (0, _videoJs.createTimeRange)(0, duration(playlist));\n  }\n\n  var _getPlaylistSyncPoints = getPlaylistSyncPoints(playlist);\n\n  var expiredSync = _getPlaylistSyncPoints.expiredSync;\n  var segmentSync = _getPlaylistSyncPoints.segmentSync;\n\n  // We have no sync information for this playlist so we can't create a seekable range\n  if (!expiredSync && !segmentSync) {\n    return (0, _videoJs.createTimeRange)();\n  }\n\n  var expired = calculateExpiredTime(playlist, expiredSync, segmentSync);\n\n  // live playlists should not expose three segment durations worth\n  // of content from the end of the playlist\n  // https://tools.ietf.org/html/draft-pantos-http-live-streaming-16#section-6.3.3\n  var start = expired;\n  var endSequence = Math.max(0, playlist.segments.length - Playlist.UNSAFE_LIVE_SEGMENTS);\n  var end = intervalDuration(playlist, playlist.mediaSequence + endSequence, expired);\n\n  return (0, _videoJs.createTimeRange)(start, end);\n};\n\nexports.seekable = seekable;\nvar isWholeNumber = function isWholeNumber(num) {\n  return num - Math.floor(num) === 0;\n};\n\nvar roundSignificantDigit = function roundSignificantDigit(increment, num) {\n  // If we have a whole number, just add 1 to it\n  if (isWholeNumber(num)) {\n    return num + increment * 0.1;\n  }\n\n  var numDecimalDigits = num.toString().split('.')[1].length;\n\n  for (var i = 1; i <= numDecimalDigits; i++) {\n    var scale = Math.pow(10, i);\n    var temp = num * scale;\n\n    if (isWholeNumber(temp) || i === numDecimalDigits) {\n      return (temp + increment) / scale;\n    }\n  }\n};\n\nvar ceilLeastSignificantDigit = roundSignificantDigit.bind(null, 1);\nvar floorLeastSignificantDigit = roundSignificantDigit.bind(null, -1);\n\n/**\n * Determine the index and estimated starting time of the segment that\n * contains a specified playback position in a media playlist.\n *\n * @param {Object} playlist the media playlist to query\n * @param {Number} currentTime The number of seconds since the earliest\n * possible position to determine the containing segment for\n * @param {Number} startIndex\n * @param {Number} startTime\n * @return {Object}\n */\nvar getMediaInfoForTime_ = function getMediaInfoForTime_(playlist, currentTime, startIndex, startTime) {\n  var i = undefined;\n  var segment = undefined;\n  var numSegments = playlist.segments.length;\n\n  var time = currentTime - startTime;\n\n  if (time < 0) {\n    // Walk backward from startIndex in the playlist, adding durations\n    // until we find a segment that contains `time` and return it\n    if (startIndex > 0) {\n      for (i = startIndex - 1; i >= 0; i--) {\n        segment = playlist.segments[i];\n        time += floorLeastSignificantDigit(segment.duration);\n        if (time > 0) {\n          return {\n            mediaIndex: i,\n            startTime: startTime - sumDurations(playlist, startIndex, i)\n          };\n        }\n      }\n    }\n    // We were unable to find a good segment within the playlist\n    // so select the first segment\n    return {\n      mediaIndex: 0,\n      startTime: currentTime\n    };\n  }\n\n  // When startIndex is negative, we first walk forward to first segment\n  // adding target durations. If we \"run out of time\" before getting to\n  // the first segment, return the first segment\n  if (startIndex < 0) {\n    for (i = startIndex; i < 0; i++) {\n      time -= playlist.targetDuration;\n      if (time < 0) {\n        return {\n          mediaIndex: 0,\n          startTime: currentTime\n        };\n      }\n    }\n    startIndex = 0;\n  }\n\n  // Walk forward from startIndex in the playlist, subtracting durations\n  // until we find a segment that contains `time` and return it\n  for (i = startIndex; i < numSegments; i++) {\n    segment = playlist.segments[i];\n    time -= ceilLeastSignificantDigit(segment.duration);\n    if (time < 0) {\n      return {\n        mediaIndex: i,\n        startTime: startTime + sumDurations(playlist, startIndex, i)\n      };\n    }\n  }\n\n  // We are out of possible candidates so load the last one...\n  return {\n    mediaIndex: numSegments - 1,\n    startTime: currentTime\n  };\n};\n\nexports.getMediaInfoForTime_ = getMediaInfoForTime_;\nPlaylist.duration = duration;\nPlaylist.seekable = seekable;\nPlaylist.getMediaInfoForTime_ = getMediaInfoForTime_;\n\n// exports\nexports['default'] = Playlist;\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n},{\"global/window\":27}],8:[function(require,module,exports){\n(function (global){\n/**\n * ranges\n *\n * Utilities for working with TimeRanges.\n *\n */\n\n'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\n\nvar _slicedToArray = (function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i['return']) _i['return'](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError('Invalid attempt to destructure non-iterable instance'); } }; })();\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nvar _videoJs = (typeof window !== \"undefined\" ? window['videojs'] : typeof global !== \"undefined\" ? global['videojs'] : null);\n\nvar _videoJs2 = _interopRequireDefault(_videoJs);\n\n// Fudge factor to account for TimeRanges rounding\nvar TIME_FUDGE_FACTOR = 1 / 30;\n\n/**\n * Clamps a value to within a range\n * @param {Number} num - the value to clamp\n * @param {Number} start - the start of the range to clamp within, inclusive\n * @param {Number} end - the end of the range to clamp within, inclusive\n * @return {Number}\n */\nvar clamp = function clamp(num, _ref) {\n  var _ref2 = _slicedToArray(_ref, 2);\n\n  var start = _ref2[0];\n  var end = _ref2[1];\n\n  return Math.min(Math.max(start, num), end);\n};\nvar filterRanges = function filterRanges(timeRanges, predicate) {\n  var results = [];\n  var i = undefined;\n\n  if (timeRanges && timeRanges.length) {\n    // Search for ranges that match the predicate\n    for (i = 0; i < timeRanges.length; i++) {\n      if (predicate(timeRanges.start(i), timeRanges.end(i))) {\n        results.push([timeRanges.start(i), timeRanges.end(i)]);\n      }\n    }\n  }\n\n  return _videoJs2['default'].createTimeRanges(results);\n};\n\n/**\n * Attempts to find the buffered TimeRange that contains the specified\n * time.\n * @param {TimeRanges} buffered - the TimeRanges object to query\n * @param {number} time  - the time to filter on.\n * @returns {TimeRanges} a new TimeRanges object\n */\nvar findRange = function findRange(buffered, time) {\n  return filterRanges(buffered, function (start, end) {\n    return start - TIME_FUDGE_FACTOR <= time && end + TIME_FUDGE_FACTOR >= time;\n  });\n};\n\n/**\n * Returns the TimeRanges that begin later than the specified time.\n * @param {TimeRanges} timeRanges - the TimeRanges object to query\n * @param {number} time - the time to filter on.\n * @returns {TimeRanges} a new TimeRanges object.\n */\nvar findNextRange = function findNextRange(timeRanges, time) {\n  return filterRanges(timeRanges, function (start) {\n    return start - TIME_FUDGE_FACTOR >= time;\n  });\n};\n\n/**\n * Returns gaps within a list of TimeRanges\n * @param {TimeRanges} buffered - the TimeRanges object\n * @return {TimeRanges} a TimeRanges object of gaps\n */\nvar findGaps = function findGaps(buffered) {\n  if (buffered.length < 2) {\n    return _videoJs2['default'].createTimeRanges();\n  }\n\n  var ranges = [];\n\n  for (var i = 1; i < buffered.length; i++) {\n    var start = buffered.end(i - 1);\n    var end = buffered.start(i);\n\n    ranges.push([start, end]);\n  }\n\n  return _videoJs2['default'].createTimeRanges(ranges);\n};\n\n/**\n * Search for a likely end time for the segment that was just appened\n * based on the state of the `buffered` property before and after the\n * append. If we fin only one such uncommon end-point return it.\n * @param {TimeRanges} original - the buffered time ranges before the update\n * @param {TimeRanges} update - the buffered time ranges after the update\n * @returns {Number|null} the end time added between `original` and `update`,\n * or null if one cannot be unambiguously determined.\n */\nvar findSoleUncommonTimeRangesEnd = function findSoleUncommonTimeRangesEnd(original, update) {\n  var i = undefined;\n  var start = undefined;\n  var end = undefined;\n  var result = [];\n  var edges = [];\n\n  // In order to qualify as a possible candidate, the end point must:\n  //  1) Not have already existed in the `original` ranges\n  //  2) Not result from the shrinking of a range that already existed\n  //     in the `original` ranges\n  //  3) Not be contained inside of a range that existed in `original`\n  var overlapsCurrentEnd = function overlapsCurrentEnd(span) {\n    return span[0] <= end && span[1] >= end;\n  };\n\n  if (original) {\n    // Save all the edges in the `original` TimeRanges object\n    for (i = 0; i < original.length; i++) {\n      start = original.start(i);\n      end = original.end(i);\n\n      edges.push([start, end]);\n    }\n  }\n\n  if (update) {\n    // Save any end-points in `update` that are not in the `original`\n    // TimeRanges object\n    for (i = 0; i < update.length; i++) {\n      start = update.start(i);\n      end = update.end(i);\n\n      if (edges.some(overlapsCurrentEnd)) {\n        continue;\n      }\n\n      // at this point it must be a unique non-shrinking end edge\n      result.push(end);\n    }\n  }\n\n  // we err on the side of caution and return null if didn't find\n  // exactly *one* differing end edge in the search above\n  if (result.length !== 1) {\n    return null;\n  }\n\n  return result[0];\n};\n\n/**\n * Calculate the intersection of two TimeRanges\n * @param {TimeRanges} bufferA\n * @param {TimeRanges} bufferB\n * @returns {TimeRanges} The interesection of `bufferA` with `bufferB`\n */\nvar bufferIntersection = function bufferIntersection(bufferA, bufferB) {\n  var start = null;\n  var end = null;\n  var arity = 0;\n  var extents = [];\n  var ranges = [];\n\n  if (!bufferA || !bufferA.length || !bufferB || !bufferB.length) {\n    return _videoJs2['default'].createTimeRange();\n  }\n\n  // Handle the case where we have both buffers and create an\n  // intersection of the two\n  var count = bufferA.length;\n\n  // A) Gather up all start and end times\n  while (count--) {\n    extents.push({ time: bufferA.start(count), type: 'start' });\n    extents.push({ time: bufferA.end(count), type: 'end' });\n  }\n  count = bufferB.length;\n  while (count--) {\n    extents.push({ time: bufferB.start(count), type: 'start' });\n    extents.push({ time: bufferB.end(count), type: 'end' });\n  }\n  // B) Sort them by time\n  extents.sort(function (a, b) {\n    return a.time - b.time;\n  });\n\n  // C) Go along one by one incrementing arity for start and decrementing\n  //    arity for ends\n  for (count = 0; count < extents.length; count++) {\n    if (extents[count].type === 'start') {\n      arity++;\n\n      // D) If arity is ever incremented to 2 we are entering an\n      //    overlapping range\n      if (arity === 2) {\n        start = extents[count].time;\n      }\n    } else if (extents[count].type === 'end') {\n      arity--;\n\n      // E) If arity is ever decremented to 1 we leaving an\n      //    overlapping range\n      if (arity === 1) {\n        end = extents[count].time;\n      }\n    }\n\n    // F) Record overlapping ranges\n    if (start !== null && end !== null) {\n      ranges.push([start, end]);\n      start = null;\n      end = null;\n    }\n  }\n\n  return _videoJs2['default'].createTimeRanges(ranges);\n};\n\n/**\n * Calculates the percentage of `segmentRange` that overlaps the\n * `buffered` time ranges.\n * @param {TimeRanges} segmentRange - the time range that the segment\n * covers adjusted according to currentTime\n * @param {TimeRanges} referenceRange - the original time range that the\n * segment covers\n * @param {Number} currentTime - time in seconds where the current playback\n * is at\n * @param {TimeRanges} buffered - the currently buffered time ranges\n * @returns {Number} percent of the segment currently buffered\n */\nvar calculateBufferedPercent = function calculateBufferedPercent(adjustedRange, referenceRange, currentTime, buffered) {\n  var referenceDuration = referenceRange.end(0) - referenceRange.start(0);\n  var adjustedDuration = adjustedRange.end(0) - adjustedRange.start(0);\n  var bufferMissingFromAdjusted = referenceDuration - adjustedDuration;\n  var adjustedIntersection = bufferIntersection(adjustedRange, buffered);\n  var referenceIntersection = bufferIntersection(referenceRange, buffered);\n  var adjustedOverlap = 0;\n  var referenceOverlap = 0;\n\n  var count = adjustedIntersection.length;\n\n  while (count--) {\n    adjustedOverlap += adjustedIntersection.end(count) - adjustedIntersection.start(count);\n\n    // If the current overlap segment starts at currentTime, then increase the\n    // overlap duration so that it actually starts at the beginning of referenceRange\n    // by including the difference between the two Range's durations\n    // This is a work around for the way Flash has no buffer before currentTime\n    if (adjustedIntersection.start(count) === currentTime) {\n      adjustedOverlap += bufferMissingFromAdjusted;\n    }\n  }\n\n  count = referenceIntersection.length;\n\n  while (count--) {\n    referenceOverlap += referenceIntersection.end(count) - referenceIntersection.start(count);\n  }\n\n  // Use whichever value is larger for the percentage-buffered since that value\n  // is likely more accurate because the only way\n  return Math.max(adjustedOverlap, referenceOverlap) / referenceDuration * 100;\n};\n\n/**\n * Return the amount of a range specified by the startOfSegment and segmentDuration\n * overlaps the current buffered content.\n *\n * @param {Number} startOfSegment - the time where the segment begins\n * @param {Number} segmentDuration - the duration of the segment in seconds\n * @param {Number} currentTime - time in seconds where the current playback\n * is at\n * @param {TimeRanges} buffered - the state of the buffer\n * @returns {Number} percentage of the segment's time range that is\n * already in `buffered`\n */\nvar getSegmentBufferedPercent = function getSegmentBufferedPercent(startOfSegment, segmentDuration, currentTime, buffered) {\n  var endOfSegment = startOfSegment + segmentDuration;\n\n  // The entire time range of the segment\n  var originalSegmentRange = _videoJs2['default'].createTimeRanges([[startOfSegment, endOfSegment]]);\n\n  // The adjusted segment time range that is setup such that it starts\n  // no earlier than currentTime\n  // Flash has no notion of a back-buffer so adjustedSegmentRange adjusts\n  // for that and the function will still return 100% if a only half of a\n  // segment is actually in the buffer as long as the currentTime is also\n  // half-way through the segment\n  var adjustedSegmentRange = _videoJs2['default'].createTimeRanges([[clamp(startOfSegment, [currentTime, endOfSegment]), endOfSegment]]);\n\n  // This condition happens when the currentTime is beyond the segment's\n  // end time\n  if (adjustedSegmentRange.start(0) === adjustedSegmentRange.end(0)) {\n    return 0;\n  }\n\n  var percent = calculateBufferedPercent(adjustedSegmentRange, originalSegmentRange, currentTime, buffered);\n\n  // If the segment is reported as having a zero duration, return 0%\n  // since it is likely that we will need to fetch the segment\n  if (isNaN(percent) || percent === Infinity || percent === -Infinity) {\n    return 0;\n  }\n\n  return percent;\n};\n\nexports['default'] = {\n  findRange: findRange,\n  findNextRange: findNextRange,\n  findGaps: findGaps,\n  findSoleUncommonTimeRangesEnd: findSoleUncommonTimeRangesEnd,\n  getSegmentBufferedPercent: getSegmentBufferedPercent,\n  TIME_FUDGE_FACTOR: TIME_FUDGE_FACTOR\n};\nmodule.exports = exports['default'];\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n},{}],9:[function(require,module,exports){\n(function (global){\n'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nvar _videoJs = (typeof window !== \"undefined\" ? window['videojs'] : typeof global !== \"undefined\" ? global['videojs'] : null);\n\nvar _videoJs2 = _interopRequireDefault(_videoJs);\n\nvar defaultOptions = {\n  errorInterval: 30,\n  getSource: function getSource(next) {\n    var tech = this.tech({ IWillNotUseThisInPlugins: true });\n    var sourceObj = tech.currentSource_;\n\n    return next(sourceObj);\n  }\n};\n\n/**\n * Main entry point for the plugin\n *\n * @param {Player} player a reference to a videojs Player instance\n * @param {Object} [options] an object with plugin options\n * @private\n */\nvar initPlugin = function initPlugin(player, options) {\n  var lastCalled = 0;\n  var seekTo = 0;\n  var localOptions = _videoJs2['default'].mergeOptions(defaultOptions, options);\n\n  /**\n   * Player modifications to perform that must wait until `loadedmetadata`\n   * has been triggered\n   *\n   * @private\n   */\n  var loadedMetadataHandler = function loadedMetadataHandler() {\n    if (seekTo) {\n      player.currentTime(seekTo);\n    }\n  };\n\n  /**\n   * Set the source on the player element, play, and seek if necessary\n   *\n   * @param {Object} sourceObj An object specifying the source url and mime-type to play\n   * @private\n   */\n  var setSource = function setSource(sourceObj) {\n    if (sourceObj === null || sourceObj === undefined) {\n      return;\n    }\n    seekTo = player.duration() !== Infinity && player.currentTime() || 0;\n\n    player.one('loadedmetadata', loadedMetadataHandler);\n\n    player.src(sourceObj);\n    player.play();\n  };\n\n  /**\n   * Attempt to get a source from either the built-in getSource function\n   * or a custom function provided via the options\n   *\n   * @private\n   */\n  var errorHandler = function errorHandler() {\n    // Do not attempt to reload the source if a source-reload occurred before\n    // 'errorInterval' time has elapsed since the last source-reload\n    if (Date.now() - lastCalled < localOptions.errorInterval * 1000) {\n      return;\n    }\n\n    if (!localOptions.getSource || typeof localOptions.getSource !== 'function') {\n      _videoJs2['default'].log.error('ERROR: reloadSourceOnError - The option getSource must be a function!');\n      return;\n    }\n    lastCalled = Date.now();\n\n    return localOptions.getSource.call(player, setSource);\n  };\n\n  /**\n   * Unbind any event handlers that were bound by the plugin\n   *\n   * @private\n   */\n  var cleanupEvents = function cleanupEvents() {\n    player.off('loadedmetadata', loadedMetadataHandler);\n    player.off('error', errorHandler);\n    player.off('dispose', cleanupEvents);\n  };\n\n  /**\n   * Cleanup before re-initializing the plugin\n   *\n   * @param {Object} [newOptions] an object with plugin options\n   * @private\n   */\n  var reinitPlugin = function reinitPlugin(newOptions) {\n    cleanupEvents();\n    initPlugin(player, newOptions);\n  };\n\n  player.on('error', errorHandler);\n  player.on('dispose', cleanupEvents);\n\n  // Overwrite the plugin function so that we can correctly cleanup before\n  // initializing the plugin\n  player.reloadSourceOnError = reinitPlugin;\n};\n\n/**\n * Reload the source when an error is detected as long as there\n * wasn't an error previously within the last 30 seconds\n *\n * @param {Object} [options] an object with plugin options\n */\nvar reloadSourceOnError = function reloadSourceOnError(options) {\n  initPlugin(this, options);\n};\n\nexports['default'] = reloadSourceOnError;\nmodule.exports = exports['default'];\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n},{}],10:[function(require,module,exports){\n/**\n * Enable/disable playlist function. It is intended to have the first two\n * arguments partially-applied in order to create the final per-playlist\n * function.\n *\n * @param {PlaylistLoader} playlist - The rendition or media-playlist\n * @param {Function} changePlaylistFn - A function to be called after a\n * playlist's enabled-state has been changed. Will NOT be called if a\n * playlist's enabled-state is unchanged\n * @param {Boolean=} enable - Value to set the playlist enabled-state to\n * or if undefined returns the current enabled-state for the playlist\n * @return {Boolean} The current enabled-state of the playlist\n */\n'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }\n\nvar enableFunction = function enableFunction(playlist, changePlaylistFn, enable) {\n  var currentlyEnabled = typeof playlist.excludeUntil === 'undefined' || playlist.excludeUntil <= Date.now();\n\n  if (typeof enable === 'undefined') {\n    return currentlyEnabled;\n  }\n\n  if (enable !== currentlyEnabled) {\n    if (enable) {\n      delete playlist.excludeUntil;\n    } else {\n      playlist.excludeUntil = Infinity;\n    }\n\n    // Ensure the outside world knows about our changes\n    changePlaylistFn();\n  }\n\n  return enable;\n};\n\n/**\n * The representation object encapsulates the publicly visible information\n * in a media playlist along with a setter/getter-type function (enabled)\n * for changing the enabled-state of a particular playlist entry\n *\n * @class Representation\n */\n\nvar Representation = function Representation(hlsHandler, playlist, id) {\n  _classCallCheck(this, Representation);\n\n  // Get a reference to a bound version of fastQualityChange_\n  var fastChangeFunction = hlsHandler.masterPlaylistController_.fastQualityChange_.bind(hlsHandler.masterPlaylistController_);\n\n  // Carefully descend into the playlist's attributes since most\n  // properties are optional\n  if (playlist.attributes) {\n    var attributes = playlist.attributes;\n\n    if (attributes.RESOLUTION) {\n      var resolution = attributes.RESOLUTION;\n\n      this.width = resolution.width;\n      this.height = resolution.height;\n    }\n\n    this.bandwidth = attributes.BANDWIDTH;\n  }\n\n  // The id is simply the ordinality of the media playlist\n  // within the master playlist\n  this.id = id;\n\n  // Partially-apply the enableFunction to create a playlist-\n  // specific variant\n  this.enabled = enableFunction.bind(this, playlist, fastChangeFunction);\n}\n\n/**\n * A mixin function that adds the `representations` api to an instance\n * of the HlsHandler class\n * @param {HlsHandler} hlsHandler - An instance of HlsHandler to add the\n * representation API into\n */\n;\n\nvar renditionSelectionMixin = function renditionSelectionMixin(hlsHandler) {\n  var playlists = hlsHandler.playlists;\n\n  // Add a single API-specific function to the HlsHandler instance\n  hlsHandler.representations = function () {\n    return playlists.master.playlists.map(function (e, i) {\n      return new Representation(hlsHandler, e, i);\n    });\n  };\n};\n\nexports['default'] = renditionSelectionMixin;\nmodule.exports = exports['default'];\n},{}],11:[function(require,module,exports){\n/**\n * @file resolve-url.js\n */\n\n'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nvar _urlToolkit = require('url-toolkit');\n\nvar _urlToolkit2 = _interopRequireDefault(_urlToolkit);\n\nvar _globalWindow = require('global/window');\n\nvar _globalWindow2 = _interopRequireDefault(_globalWindow);\n\nvar resolveUrl = function resolveUrl(baseURL, relativeURL) {\n  // return early if we don't need to resolve\n  if (/^[a-z]+:/i.test(relativeURL)) {\n    return relativeURL;\n  }\n\n  // if the base URL is relative then combine with the current location\n  if (!/\\/\\//i.test(baseURL)) {\n    baseURL = _urlToolkit2['default'].buildAbsoluteURL(_globalWindow2['default'].location.href, baseURL);\n  }\n\n  return _urlToolkit2['default'].buildAbsoluteURL(baseURL, relativeURL);\n};\n\nexports['default'] = resolveUrl;\nmodule.exports = exports['default'];\n},{\"global/window\":27,\"url-toolkit\":90}],12:[function(require,module,exports){\n(function (global){\n/**\n * @file segment-loader.js\n */\n'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\n\nvar _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();\n\nvar _get = function get(_x2, _x3, _x4) { var _again = true; _function: while (_again) { var object = _x2, property = _x3, receiver = _x4; _again = false; if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { _x2 = parent; _x3 = property; _x4 = receiver; _again = true; desc = parent = undefined; continue _function; } } else if ('value' in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } } };\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== 'function' && superClass !== null) { throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar _playlist = require('./playlist');\n\nvar _videoJs = (typeof window !== \"undefined\" ? window['videojs'] : typeof global !== \"undefined\" ? global['videojs'] : null);\n\nvar _videoJs2 = _interopRequireDefault(_videoJs);\n\nvar _sourceUpdater = require('./source-updater');\n\nvar _sourceUpdater2 = _interopRequireDefault(_sourceUpdater);\n\nvar _aesDecrypter = require('aes-decrypter');\n\nvar _config = require('./config');\n\nvar _config2 = _interopRequireDefault(_config);\n\nvar _globalWindow = require('global/window');\n\nvar _globalWindow2 = _interopRequireDefault(_globalWindow);\n\n// in ms\nvar CHECK_BUFFER_DELAY = 500;\nvar c = 'console';\n\n// temporary, switchable debug logging\nvar log = function log() {\n  if (_globalWindow2['default'].logit) {\n    _globalWindow2['default'][c].log.apply(_globalWindow2['default'][c], arguments);\n  }\n};\n\n/**\n * Determines if we should call endOfStream on the media source based\n * on the state of the buffer or if appened segment was the final\n * segment in the playlist.\n *\n * @param {Object} playlist a media playlist object\n * @param {Object} mediaSource the MediaSource object\n * @param {Number} segmentIndex the index of segment we last appended\n * @returns {Boolean} do we need to call endOfStream on the MediaSource\n */\nvar detectEndOfStream = function detectEndOfStream(playlist, mediaSource, segmentIndex) {\n  if (!playlist) {\n    return false;\n  }\n\n  var segments = playlist.segments;\n\n  // determine a few boolean values to help make the branch below easier\n  // to read\n  var appendedLastSegment = segmentIndex === segments.length;\n\n  // if we've buffered to the end of the video, we need to call endOfStream\n  // so that MediaSources can trigger the `ended` event when it runs out of\n  // buffered data instead of waiting for me\n  return playlist.endList && mediaSource.readyState === 'open' && appendedLastSegment;\n};\n\n/**\n * Turns segment byterange into a string suitable for use in\n * HTTP Range requests\n */\nvar byterangeStr = function byterangeStr(byterange) {\n  var byterangeStart = undefined;\n  var byterangeEnd = undefined;\n\n  // `byterangeEnd` is one less than `offset + length` because the HTTP range\n  // header uses inclusive ranges\n  byterangeEnd = byterange.offset + byterange.length - 1;\n  byterangeStart = byterange.offset;\n  return 'bytes=' + byterangeStart + '-' + byterangeEnd;\n};\n\n/**\n * Defines headers for use in the xhr request for a particular segment.\n */\nvar segmentXhrHeaders = function segmentXhrHeaders(segment) {\n  var headers = {};\n\n  if ('byterange' in segment) {\n    headers.Range = byterangeStr(segment.byterange);\n  }\n  return headers;\n};\n\n/**\n * Returns a unique string identifier for a media initialization\n * segment.\n */\nvar initSegmentId = function initSegmentId(initSegment) {\n  var byterange = initSegment.byterange || {\n    length: Infinity,\n    offset: 0\n  };\n\n  return [byterange.length, byterange.offset, initSegment.resolvedUri].join(',');\n};\n\n/**\n * An object that manages segment loading and appending.\n *\n * @class SegmentLoader\n * @param {Object} options required and optional options\n * @extends videojs.EventTarget\n */\n\nvar SegmentLoader = (function (_videojs$EventTarget) {\n  _inherits(SegmentLoader, _videojs$EventTarget);\n\n  function SegmentLoader(options) {\n    var _this = this;\n\n    _classCallCheck(this, SegmentLoader);\n\n    _get(Object.getPrototypeOf(SegmentLoader.prototype), 'constructor', this).call(this);\n    var settings = undefined;\n\n    // check pre-conditions\n    if (!options) {\n      throw new TypeError('Initialization options are required');\n    }\n    if (typeof options.currentTime !== 'function') {\n      throw new TypeError('No currentTime getter specified');\n    }\n    if (!options.mediaSource) {\n      throw new TypeError('No MediaSource specified');\n    }\n    settings = _videoJs2['default'].mergeOptions(_videoJs2['default'].options.hls, options);\n\n    // public properties\n    this.state = 'INIT';\n    this.bandwidth = settings.bandwidth;\n    this.throughput = { rate: 0, count: 0 };\n    this.roundTrip = NaN;\n    this.resetStats_();\n    this.mediaIndex = null;\n\n    // private settings\n    this.hasPlayed_ = settings.hasPlayed;\n    this.currentTime_ = settings.currentTime;\n    this.seekable_ = settings.seekable;\n    this.seeking_ = settings.seeking;\n    this.setCurrentTime_ = settings.setCurrentTime;\n    this.mediaSource_ = settings.mediaSource;\n    this.hls_ = settings.hls;\n\n    // private instance variables\n    this.checkBufferTimeout_ = null;\n    this.error_ = void 0;\n    this.currentTimeline_ = -1;\n    this.xhr_ = null;\n    this.pendingSegment_ = null;\n    this.mimeType_ = null;\n    this.sourceUpdater_ = null;\n    this.xhrOptions_ = null;\n\n    // Fragmented mp4 playback\n    this.activeInitSegmentId_ = null;\n    this.initSegments_ = {};\n\n    // Manages the tracking and generation of sync-points, mappings\n    // between a time in the display time and a segment index within\n    // a playlist\n    this.syncController_ = settings.syncController;\n    this.syncPoint_ = {\n      segmentIndex: 0,\n      time: 0\n    };\n\n    this.syncController_.on('syncinfoupdate', function () {\n      return _this.trigger('syncinfoupdate');\n    });\n\n    // ...for determining the fetch location\n    this.fetchAtBuffer_ = false;\n  }\n\n  /**\n   * reset all of our media stats\n   *\n   * @private\n   */\n\n  _createClass(SegmentLoader, [{\n    key: 'resetStats_',\n    value: function resetStats_() {\n      this.mediaBytesTransferred = 0;\n      this.mediaRequests = 0;\n      this.mediaTransferDuration = 0;\n      this.mediaSecondsLoaded = 0;\n    }\n\n    /**\n     * dispose of the SegmentLoader and reset to the default state\n     */\n  }, {\n    key: 'dispose',\n    value: function dispose() {\n      this.state = 'DISPOSED';\n      this.abort_();\n      if (this.sourceUpdater_) {\n        this.sourceUpdater_.dispose();\n      }\n      this.resetStats_();\n    }\n\n    /**\n     * abort anything that is currently doing on with the SegmentLoader\n     * and reset to a default state\n     */\n  }, {\n    key: 'abort',\n    value: function abort() {\n\n      if (this.state !== 'WAITING') {\n        if (this.pendingSegment_) {\n          this.pendingSegment_ = null;\n        }\n        return;\n      }\n\n      this.abort_();\n\n      // don't wait for buffer check timeouts to begin fetching the\n      // next segment\n      if (!this.paused()) {\n        this.state = 'READY';\n        this.fillBuffer_();\n      }\n    }\n\n    /**\n     * set an error on the segment loader and null out any pending segements\n     *\n     * @param {Error} error the error to set on the SegmentLoader\n     * @return {Error} the error that was set or that is currently set\n     */\n  }, {\n    key: 'error',\n    value: function error(_error) {\n      if (typeof _error !== 'undefined') {\n        this.error_ = _error;\n      }\n\n      this.pendingSegment_ = null;\n      return this.error_;\n    }\n\n    /**\n     * load a playlist and start to fill the buffer\n     */\n  }, {\n    key: 'load',\n    value: function load() {\n      // un-pause\n      this.monitorBuffer_();\n\n      // if we don't have a playlist yet, keep waiting for one to be\n      // specified\n      if (!this.playlist_) {\n        return;\n      }\n\n      // not sure if this is the best place for this\n      this.syncController_.setDateTimeMapping(this.playlist_);\n\n      // if all the configuration is ready, initialize and begin loading\n      if (this.state === 'INIT' && this.mimeType_) {\n        return this.init_();\n      }\n\n      // if we're in the middle of processing a segment already, don't\n      // kick off an additional segment request\n      if (!this.sourceUpdater_ || this.state !== 'READY' && this.state !== 'INIT') {\n        return;\n      }\n\n      this.state = 'READY';\n      this.fillBuffer_();\n    }\n\n    /**\n     * set a playlist on the segment loader\n     *\n     * @param {PlaylistLoader} media the playlist to set on the segment loader\n     */\n  }, {\n    key: 'playlist',\n    value: function playlist(newPlaylist) {\n      var options = arguments.length <= 1 || arguments[1] === undefined ? {} : arguments[1];\n\n      if (!newPlaylist) {\n        return;\n      }\n\n      var oldPlaylist = this.playlist_;\n      var segmentInfo = this.pendingSegment_;\n\n      if (this.mediaIndex !== null) {\n        // We reloaded the same playlist so we are in a live scenario\n        // and we will likely need to adjust the mediaIndex\n        if (oldPlaylist && oldPlaylist.uri === newPlaylist.uri) {\n          var mediaSequenceDiff = newPlaylist.mediaSequence - oldPlaylist.mediaSequence;\n\n          this.mediaIndex -= mediaSequenceDiff;\n\n          if (segmentInfo && !segmentInfo.isSyncRequest) {\n            segmentInfo.mediaIndex -= mediaSequenceDiff;\n          }\n\n          this.syncController_.saveExpiredSegmentInfo(oldPlaylist, newPlaylist);\n        } else {\n          // We must \"resync\" the fetcher when we switch renditions\n          this.resyncLoader();\n        }\n      } else if (!this.hasPlayed_()) {\n        newPlaylist.syncInfo = {\n          mediaSequence: newPlaylist.mediaSequence,\n          time: 0\n        };\n        this.trigger('syncinfoupdate');\n      }\n\n      this.playlist_ = newPlaylist;\n      this.xhrOptions_ = options;\n\n      // if we were unpaused but waiting for a playlist, start\n      // buffering now\n      if (this.mimeType_ && this.state === 'INIT' && !this.paused()) {\n        return this.init_();\n      }\n    }\n\n    /**\n     * Prevent the loader from fetching additional segments. If there\n     * is a segment request outstanding, it will finish processing\n     * before the loader halts. A segment loader can be unpaused by\n     * calling load().\n     */\n  }, {\n    key: 'pause',\n    value: function pause() {\n      if (this.checkBufferTimeout_) {\n        _globalWindow2['default'].clearTimeout(this.checkBufferTimeout_);\n\n        this.checkBufferTimeout_ = null;\n      }\n    }\n\n    /**\n     * Returns whether the segment loader is fetching additional\n     * segments when given the opportunity. This property can be\n     * modified through calls to pause() and load().\n     */\n  }, {\n    key: 'paused',\n    value: function paused() {\n      return this.checkBufferTimeout_ === null;\n    }\n\n    /**\n     * create/set the following mimetype on the SourceBuffer through a\n     * SourceUpdater\n     *\n     * @param {String} mimeType the mime type string to use\n     */\n  }, {\n    key: 'mimeType',\n    value: function mimeType(_mimeType) {\n      if (this.mimeType_) {\n        return;\n      }\n\n      this.mimeType_ = _mimeType;\n      // if we were unpaused but waiting for a sourceUpdater, start\n      // buffering now\n      if (this.playlist_ && this.state === 'INIT' && !this.paused()) {\n        this.init_();\n      }\n    }\n\n    /**\n     * As long as the SegmentLoader is in the READY state, periodically\n     * invoke fillBuffer_().\n     *\n     * @private\n     */\n  }, {\n    key: 'monitorBuffer_',\n    value: function monitorBuffer_() {\n      if (this.state === 'READY') {\n        this.fillBuffer_();\n      }\n\n      if (this.checkBufferTimeout_) {\n        _globalWindow2['default'].clearTimeout(this.checkBufferTimeout_);\n      }\n\n      this.checkBufferTimeout_ = _globalWindow2['default'].setTimeout(this.monitorBuffer_.bind(this), CHECK_BUFFER_DELAY);\n    }\n\n    /**\n     * The segment loader has no recourse except to fetch a segment in the\n     * current playlist and use the internal timestamps in that segment to\n     * generate a syncPoint. This function returns a good candidate index\n     * for that process.\n     *\n     * @param {Object} playlist - the playlist object to look for a\n     * @returns {Number} An index of a segment from the playlist to load\n     */\n  }, {\n    key: 'getSyncSegmentCandidate_',\n    value: function getSyncSegmentCandidate_(playlist) {\n      var _this2 = this;\n\n      if (this.currentTimeline_ === -1) {\n        return 0;\n      }\n\n      var segmentIndexArray = playlist.segments.map(function (s, i) {\n        return {\n          timeline: s.timeline,\n          segmentIndex: i\n        };\n      }).filter(function (s) {\n        return s.timeline === _this2.currentTimeline_;\n      });\n\n      if (segmentIndexArray.length) {\n        return segmentIndexArray[Math.min(segmentIndexArray.length - 1, 1)].segmentIndex;\n      }\n\n      return Math.max(playlist.segments.length - 1, 0);\n    }\n\n    /**\n     * Determines what segment request should be made, given current playback\n     * state.\n     *\n     * @param {TimeRanges} buffered - the state of the buffer\n     * @param {Object} playlist - the playlist object to fetch segments from\n     * @param {Number} mediaIndex - the previous mediaIndex fetched or null\n     * @param {Boolean} hasPlayed - a flag indicating whether we have played or not\n     * @param {Number} currentTime - the playback position in seconds\n     * @param {Object} syncPoint - a segment info object that describes the\n     * @returns {Object} a segment request object that describes the segment to load\n     */\n  }, {\n    key: 'checkBuffer_',\n    value: function checkBuffer_(buffered, playlist, mediaIndex, hasPlayed, currentTime, syncPoint) {\n      var lastBufferedEnd = 0;\n      var startOfSegment = undefined;\n\n      if (buffered.length) {\n        lastBufferedEnd = buffered.end(buffered.length - 1);\n      }\n\n      var bufferedTime = Math.max(0, lastBufferedEnd - currentTime);\n\n      if (!playlist.segments.length) {\n        return null;\n      }\n\n      log('cB_', 'mediaIndex:', mediaIndex, 'hasPlayed:', hasPlayed, 'currentTime:', currentTime, 'syncPoint:', syncPoint, 'fetchAtBuffer:', this.fetchAtBuffer_);\n      log('cB_ 2', 'bufferedTime:', bufferedTime);\n\n      // if there is plenty of content buffered, and the video has\n      // been played before relax for awhile\n      if (bufferedTime >= _config2['default'].GOAL_BUFFER_LENGTH) {\n        return null;\n      }\n\n      // if the video has not yet played once, and we already have\n      // one segment downloaded do nothing\n      if (!hasPlayed && bufferedTime >= 1) {\n        return null;\n      }\n\n      // When the syncPoint is null, there is no way of determining a good\n      // conservative segment index to fetch from\n      // The best thing to do here is to get the kind of sync-point data by\n      // making a request\n      if (syncPoint === null) {\n        mediaIndex = this.getSyncSegmentCandidate_(playlist);\n        log('getSync', mediaIndex);\n        return this.generateSegmentInfo_(playlist, mediaIndex, null, true);\n      }\n\n      // Under normal playback conditions fetching is a simple walk forward\n      if (mediaIndex !== null) {\n        log('++', mediaIndex + 1);\n        var segment = playlist.segments[mediaIndex];\n\n        if (segment && segment.end) {\n          startOfSegment = segment.end;\n        } else {\n          startOfSegment = lastBufferedEnd;\n        }\n        return this.generateSegmentInfo_(playlist, mediaIndex + 1, startOfSegment, false);\n      }\n\n      // There is a sync-point but the lack of a mediaIndex indicates that\n      // we need to make a good conservative guess about which segment to\n      // fetch\n      if (this.fetchAtBuffer_) {\n        // Find the segment containing the end of the buffer\n        var mediaSourceInfo = (0, _playlist.getMediaInfoForTime_)(playlist, lastBufferedEnd, syncPoint.segmentIndex, syncPoint.time);\n\n        mediaIndex = mediaSourceInfo.mediaIndex;\n        startOfSegment = mediaSourceInfo.startTime;\n      } else {\n        // Find the segment containing currentTime\n        var mediaSourceInfo = (0, _playlist.getMediaInfoForTime_)(playlist, currentTime, syncPoint.segmentIndex, syncPoint.time);\n\n        mediaIndex = mediaSourceInfo.mediaIndex;\n        startOfSegment = mediaSourceInfo.startTime;\n      }\n      log('gMIFT', mediaIndex, 'sos', startOfSegment);\n      return this.generateSegmentInfo_(playlist, mediaIndex, startOfSegment, false);\n    }\n  }, {\n    key: 'generateSegmentInfo_',\n    value: function generateSegmentInfo_(playlist, mediaIndex, startOfSegment, isSyncRequest) {\n      if (mediaIndex < 0 || mediaIndex >= playlist.segments.length) {\n        return null;\n      }\n\n      var segment = playlist.segments[mediaIndex];\n\n      return {\n        // resolve the segment URL relative to the playlist\n        uri: segment.resolvedUri,\n        // the segment's mediaIndex at the time it was requested\n        mediaIndex: mediaIndex,\n        // whether or not to update the SegmentLoader's state with this\n        // segment's mediaIndex\n        isSyncRequest: isSyncRequest,\n        startOfSegment: startOfSegment,\n        // the segment's playlist\n        playlist: playlist,\n        // unencrypted bytes of the segment\n        bytes: null,\n        // when a key is defined for this segment, the encrypted bytes\n        encryptedBytes: null,\n        // The target timestampOffset for this segment when we append it\n        // to the source buffer\n        timestampOffset: null,\n        // The timeline that the segment is in\n        timeline: segment.timeline,\n        // The expected duration of the segment in seconds\n        duration: segment.duration\n      };\n    }\n\n    /**\n     * abort all pending xhr requests and null any pending segements\n     *\n     * @private\n     */\n  }, {\n    key: 'abort_',\n    value: function abort_() {\n      if (this.xhr_) {\n        this.xhr_.abort();\n      }\n\n      // clear out the segment being processed\n      this.pendingSegment_ = null;\n    }\n\n    /**\n     * Once all the starting parameters have been specified, begin\n     * operation. This method should only be invoked from the INIT\n     * state.\n     *\n     * @private\n     */\n  }, {\n    key: 'init_',\n    value: function init_() {\n      this.state = 'READY';\n      this.sourceUpdater_ = new _sourceUpdater2['default'](this.mediaSource_, this.mimeType_);\n      this.resetEverything();\n      return this.fillBuffer_();\n    }\n\n    /**\n     * fill the buffer with segements unless the\n     * sourceBuffers are currently updating\n     *\n     * @private\n     */\n  }, {\n    key: 'fillBuffer_',\n    value: function fillBuffer_() {\n      if (this.sourceUpdater_.updating()) {\n        return;\n      }\n\n      if (!this.syncPoint_) {\n        this.syncPoint_ = this.syncController_.getSyncPoint(this.playlist_, this.mediaSource_.duration, this.currentTimeline_);\n      }\n\n      // see if we need to begin loading immediately\n      var segmentInfo = this.checkBuffer_(this.sourceUpdater_.buffered(), this.playlist_, this.mediaIndex, this.hasPlayed_(), this.currentTime_(), this.syncPoint_);\n\n      if (!segmentInfo) {\n        return;\n      }\n\n      var isEndOfStream = detectEndOfStream(this.playlist_, this.mediaSource_, segmentInfo.mediaIndex);\n\n      if (isEndOfStream) {\n        this.mediaSource_.endOfStream();\n        return;\n      }\n\n      if (segmentInfo.mediaIndex === this.playlist_.segments.length - 1 && this.mediaSource_.readyState === 'ended' && !this.seeking_()) {\n        return;\n      }\n\n      // We will need to change timestampOffset of the sourceBuffer if either of\n      // the following conditions are true:\n      // - The segment.timeline !== this.currentTimeline\n      //   (we are crossing a discontinuity somehow)\n      // - The \"timestampOffset\" for the start of this segment is less than\n      //   the currently set timestampOffset\n      if (segmentInfo.timeline !== this.currentTimeline_ || segmentInfo.startOfSegment !== null && segmentInfo.startOfSegment < this.sourceUpdater_.timestampOffset()) {\n        this.syncController_.reset();\n        segmentInfo.timestampOffset = segmentInfo.startOfSegment;\n      }\n\n      this.currentTimeline_ = segmentInfo.timeline;\n      this.loadSegment_(segmentInfo);\n    }\n\n    /**\n     * trim the back buffer so we only remove content\n     * on segment boundaries\n     *\n     * @private\n     *\n     * @param {Object} segmentInfo - the current segment\n     * @returns {Number} removeToTime - the end point in time, in seconds\n     * that the the buffer should be trimmed.\n     */\n  }, {\n    key: 'trimBuffer_',\n    value: function trimBuffer_(segmentInfo) {\n      var seekable = this.seekable_();\n      var currentTime = this.currentTime_();\n      var removeToTime = undefined;\n\n      // Chrome has a hard limit of 150mb of\n      // buffer and a very conservative \"garbage collector\"\n      // We manually clear out the old buffer to ensure\n      // we don't trigger the QuotaExceeded error\n      // on the source buffer during subsequent appends\n\n      // If we have a seekable range use that as the limit for what can be removed safely\n      // otherwise remove anything older than 1 minute before the current play head\n      if (seekable.length && seekable.start(0) > 0 && seekable.start(0) < currentTime) {\n        return seekable.start(0);\n      }\n\n      removeToTime = currentTime - 60;\n\n      return removeToTime;\n    }\n\n    /**\n     * load a specific segment from a request into the buffer\n     *\n     * @private\n     */\n  }, {\n    key: 'loadSegment_',\n    value: function loadSegment_(segmentInfo) {\n      var segment = undefined;\n      var keyXhr = undefined;\n      var initSegmentXhr = undefined;\n      var segmentXhr = undefined;\n      var removeToTime = 0;\n\n      removeToTime = this.trimBuffer_(segmentInfo);\n\n      if (removeToTime > 0) {\n        this.sourceUpdater_.remove(0, removeToTime);\n      }\n\n      segment = segmentInfo.playlist.segments[segmentInfo.mediaIndex];\n\n      // optionally, request the decryption key\n      if (segment.key) {\n        var keyRequestOptions = _videoJs2['default'].mergeOptions(this.xhrOptions_, {\n          uri: segment.key.resolvedUri,\n          responseType: 'arraybuffer'\n        });\n\n        keyXhr = this.hls_.xhr(keyRequestOptions, this.handleResponse_.bind(this));\n      }\n\n      // optionally, request the associated media init segment\n      if (segment.map && !this.initSegments_[initSegmentId(segment.map)]) {\n        var initSegmentOptions = _videoJs2['default'].mergeOptions(this.xhrOptions_, {\n          uri: segment.map.resolvedUri,\n          responseType: 'arraybuffer',\n          headers: segmentXhrHeaders(segment.map)\n        });\n\n        initSegmentXhr = this.hls_.xhr(initSegmentOptions, this.handleResponse_.bind(this));\n      }\n      this.pendingSegment_ = segmentInfo;\n\n      var segmentRequestOptions = _videoJs2['default'].mergeOptions(this.xhrOptions_, {\n        uri: segmentInfo.uri,\n        responseType: 'arraybuffer',\n        headers: segmentXhrHeaders(segment)\n      });\n\n      segmentXhr = this.hls_.xhr(segmentRequestOptions, this.handleResponse_.bind(this));\n\n      this.xhr_ = {\n        keyXhr: keyXhr,\n        initSegmentXhr: initSegmentXhr,\n        segmentXhr: segmentXhr,\n        abort: function abort() {\n          if (this.segmentXhr) {\n            // Prevent error handler from running.\n            this.segmentXhr.onreadystatechange = null;\n            this.segmentXhr.abort();\n            this.segmentXhr = null;\n          }\n          if (this.initSegmentXhr) {\n            // Prevent error handler from running.\n            this.initSegmentXhr.onreadystatechange = null;\n            this.initSegmentXhr.abort();\n            this.initSegmentXhr = null;\n          }\n          if (this.keyXhr) {\n            // Prevent error handler from running.\n            this.keyXhr.onreadystatechange = null;\n            this.keyXhr.abort();\n            this.keyXhr = null;\n          }\n        }\n      };\n\n      this.state = 'WAITING';\n    }\n\n    /**\n     * triggered when a segment response is received\n     *\n     * @private\n     */\n  }, {\n    key: 'handleResponse_',\n    value: function handleResponse_(error, request) {\n      var segmentInfo = undefined;\n      var segment = undefined;\n      var view = undefined;\n\n      // timeout of previously aborted request\n      if (!this.xhr_ || request !== this.xhr_.segmentXhr && request !== this.xhr_.keyXhr && request !== this.xhr_.initSegmentXhr) {\n        return;\n      }\n\n      segmentInfo = this.pendingSegment_;\n      segment = segmentInfo.playlist.segments[segmentInfo.mediaIndex];\n\n      // if a request times out, reset bandwidth tracking\n      if (request.timedout) {\n        this.abort_();\n        this.bandwidth = 1;\n        this.roundTrip = NaN;\n        this.state = 'READY';\n        return this.trigger('progress');\n      }\n\n      // trigger an event for other errors\n      if (!request.aborted && error) {\n        // abort will clear xhr_\n        var keyXhrRequest = this.xhr_.keyXhr;\n\n        this.abort_();\n        this.error({\n          status: request.status,\n          message: request === keyXhrRequest ? 'HLS key request error at URL: ' + segment.key.uri : 'HLS segment request error at URL: ' + segmentInfo.uri,\n          code: 2,\n          xhr: request\n        });\n        this.state = 'READY';\n        this.pause();\n        return this.trigger('error');\n      }\n\n      // stop processing if the request was aborted\n      if (!request.response) {\n        this.abort_();\n        return;\n      }\n\n      if (request === this.xhr_.segmentXhr) {\n        // the segment request is no longer outstanding\n        this.xhr_.segmentXhr = null;\n        segmentInfo.startOfAppend = Date.now();\n\n        // calculate the download bandwidth based on segment request\n        this.roundTrip = request.roundTripTime;\n        this.bandwidth = request.bandwidth;\n        this.mediaBytesTransferred += request.bytesReceived || 0;\n        this.mediaRequests += 1;\n        this.mediaTransferDuration += request.roundTripTime || 0;\n\n        if (segment.key) {\n          segmentInfo.encryptedBytes = new Uint8Array(request.response);\n        } else {\n          segmentInfo.bytes = new Uint8Array(request.response);\n        }\n      }\n\n      if (request === this.xhr_.keyXhr) {\n        // the key request is no longer outstanding\n        this.xhr_.keyXhr = null;\n\n        if (request.response.byteLength !== 16) {\n          this.abort_();\n          this.error({\n            status: request.status,\n            message: 'Invalid HLS key at URL: ' + segment.key.uri,\n            code: 2,\n            xhr: request\n          });\n          this.state = 'READY';\n          this.pause();\n          return this.trigger('error');\n        }\n\n        view = new DataView(request.response);\n        segment.key.bytes = new Uint32Array([view.getUint32(0), view.getUint32(4), view.getUint32(8), view.getUint32(12)]);\n\n        // if the media sequence is greater than 2^32, the IV will be incorrect\n        // assuming 10s segments, that would be about 1300 years\n        segment.key.iv = segment.key.iv || new Uint32Array([0, 0, 0, segmentInfo.mediaIndex + segmentInfo.playlist.mediaSequence]);\n      }\n\n      if (request === this.xhr_.initSegmentXhr) {\n        // the init segment request is no longer outstanding\n        this.xhr_.initSegmentXhr = null;\n        segment.map.bytes = new Uint8Array(request.response);\n        this.initSegments_[initSegmentId(segment.map)] = segment.map;\n      }\n\n      if (!this.xhr_.segmentXhr && !this.xhr_.keyXhr && !this.xhr_.initSegmentXhr) {\n        this.xhr_ = null;\n        this.processResponse_();\n      }\n    }\n\n    /**\n     * Delete all the buffered data and reset the SegmentLoader\n     */\n  }, {\n    key: 'resetEverything',\n    value: function resetEverything() {\n      this.resetLoader();\n      this.remove(0, Infinity);\n    }\n\n    /**\n     * Force the SegmentLoader to resync and start loading around the currentTime instead\n     * of starting at the end of the buffer\n     *\n     * Useful for fast quality changes\n     */\n  }, {\n    key: 'resetLoader',\n    value: function resetLoader() {\n      this.fetchAtBuffer_ = false;\n      this.resyncLoader();\n    }\n\n    /**\n     * Force the SegmentLoader to restart synchronization and make a conservative guess\n     * before returning to the simple walk-forward method\n     */\n  }, {\n    key: 'resyncLoader',\n    value: function resyncLoader() {\n      this.mediaIndex = null;\n      this.syncPoint_ = null;\n    }\n\n    /**\n     * Remove any data in the source buffer between start and end times\n     * @param {Number} start - the start time of the region to remove from the buffer\n     * @param {Number} end - the end time of the region to remove from the buffer\n     */\n  }, {\n    key: 'remove',\n    value: function remove(start, end) {\n      if (this.sourceUpdater_) {\n        this.sourceUpdater_.remove(start, end);\n      }\n    }\n\n    /**\n     * Decrypt the segment that is being loaded if necessary\n     *\n     * @private\n     */\n  }, {\n    key: 'processResponse_',\n    value: function processResponse_() {\n      if (!this.pendingSegment_) {\n        this.state = 'READY';\n        return;\n      }\n\n      this.state = 'DECRYPTING';\n\n      var segmentInfo = this.pendingSegment_;\n      var segment = segmentInfo.playlist.segments[segmentInfo.mediaIndex];\n\n      if (segment.key) {\n        // this is an encrypted segment\n        // incrementally decrypt the segment\n        /* eslint-disable no-new, handle-callback-err */\n        new _aesDecrypter.Decrypter(segmentInfo.encryptedBytes, segment.key.bytes, segment.key.iv, (function (err, bytes) {\n          // err always null\n          segmentInfo.bytes = bytes;\n          this.handleSegment_();\n        }).bind(this));\n        /* eslint-enable */\n      } else {\n          this.handleSegment_();\n        }\n    }\n\n    /**\n     * append a decrypted segement to the SourceBuffer through a SourceUpdater\n     *\n     * @private\n     */\n  }, {\n    key: 'handleSegment_',\n    value: function handleSegment_() {\n      var _this3 = this;\n\n      if (!this.pendingSegment_) {\n        this.state = 'READY';\n        return;\n      }\n\n      this.state = 'APPENDING';\n\n      var segmentInfo = this.pendingSegment_;\n      var segment = segmentInfo.playlist.segments[segmentInfo.mediaIndex];\n\n      this.syncController_.probeSegmentInfo(segmentInfo);\n\n      if (segmentInfo.isSyncRequest) {\n        this.pendingSegment_ = null;\n        this.state = 'READY';\n        return;\n      }\n\n      if (segmentInfo.timestampOffset !== null && segmentInfo.timestampOffset !== this.sourceUpdater_.timestampOffset()) {\n        this.sourceUpdater_.timestampOffset(segmentInfo.timestampOffset);\n      }\n\n      // if the media initialization segment is changing, append it\n      // before the content segment\n      if (segment.map) {\n        (function () {\n          var initId = initSegmentId(segment.map);\n\n          if (!_this3.activeInitSegmentId_ || _this3.activeInitSegmentId_ !== initId) {\n            var initSegment = _this3.initSegments_[initId];\n\n            _this3.sourceUpdater_.appendBuffer(initSegment.bytes, function () {\n              _this3.activeInitSegmentId_ = initId;\n            });\n          }\n        })();\n      }\n\n      segmentInfo.byteLength = segmentInfo.bytes.byteLength;\n      if (typeof segment.start === 'number' && typeof segment.end === 'number') {\n        this.mediaSecondsLoaded += segment.end - segment.start;\n      } else {\n        this.mediaSecondsLoaded += segment.duration;\n      }\n\n      this.sourceUpdater_.appendBuffer(segmentInfo.bytes, this.handleUpdateEnd_.bind(this));\n    }\n\n    /**\n     * callback to run when appendBuffer is finished. detects if we are\n     * in a good state to do things with the data we got, or if we need\n     * to wait for more\n     *\n     * @private\n     */\n  }, {\n    key: 'handleUpdateEnd_',\n    value: function handleUpdateEnd_() {\n      if (!this.pendingSegment_) {\n        this.state = 'READY';\n        if (!this.paused()) {\n          this.fillBuffer_();\n        }\n        return;\n      }\n\n      var segmentInfo = this.pendingSegment_;\n\n      this.pendingSegment_ = null;\n      this.recordThroughput_(segmentInfo);\n\n      log('handleUpdateEnd_');\n\n      if (!segmentInfo.isSyncRequest) {\n        this.mediaIndex = segmentInfo.mediaIndex;\n        this.fetchAtBuffer_ = true;\n      }\n\n      var currentMediaIndex = segmentInfo.mediaIndex;\n\n      currentMediaIndex += segmentInfo.playlist.mediaSequence - this.playlist_.mediaSequence;\n\n      // any time an update finishes and the last segment is in the\n      // buffer, end the stream. this ensures the \"ended\" event will\n      // fire if playback reaches that point.\n      var isEndOfStream = detectEndOfStream(segmentInfo.playlist, this.mediaSource_, currentMediaIndex + 1);\n\n      if (isEndOfStream) {\n        this.mediaSource_.endOfStream();\n      }\n\n      this.state = 'READY';\n      this.trigger('progress');\n\n      if (!this.paused()) {\n        this.fillBuffer_();\n      }\n    }\n\n    /**\n     * Records the current throughput of the decrypt, transmux, and append\n     * portion of the semgment pipeline. `throughput.rate` is a the cumulative\n     * moving average of the throughput. `throughput.count` is the number of\n     * data points in the average.\n     *\n     * @private\n     * @param {Object} segmentInfo the object returned by loadSegment\n     */\n  }, {\n    key: 'recordThroughput_',\n    value: function recordThroughput_(segmentInfo) {\n      var rate = this.throughput.rate;\n      // Add one to the time to ensure that we don't accidentally attempt to divide\n      // by zero in the case where the throughput is ridiculously high\n      var segmentProcessingTime = Date.now() - segmentInfo.startOfAppend + 1;\n      // Multiply by 8000 to convert from bytes/millisecond to bits/second\n      var segmentProcessingThroughput = Math.floor(segmentInfo.byteLength / segmentProcessingTime * 8 * 1000);\n\n      // This is just a cumulative moving average calculation:\n      //   newAvg = oldAvg + (sample - oldAvg) / (sampleCount + 1)\n      this.throughput.rate += (segmentProcessingThroughput - rate) / ++this.throughput.count;\n    }\n  }]);\n\n  return SegmentLoader;\n})(_videoJs2['default'].EventTarget);\n\nexports['default'] = SegmentLoader;\nmodule.exports = exports['default'];\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n},{\"./config\":3,\"./playlist\":7,\"./source-updater\":13,\"aes-decrypter\":20,\"global/window\":27}],13:[function(require,module,exports){\n(function (global){\n/**\n * @file source-updater.js\n */\n'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\n\nvar _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }\n\nvar _videoJs = (typeof window !== \"undefined\" ? window['videojs'] : typeof global !== \"undefined\" ? global['videojs'] : null);\n\nvar _videoJs2 = _interopRequireDefault(_videoJs);\n\n/**\n * A queue of callbacks to be serialized and applied when a\n * MediaSource and its associated SourceBuffers are not in the\n * updating state. It is used by the segment loader to update the\n * underlying SourceBuffers when new data is loaded, for instance.\n *\n * @class SourceUpdater\n * @param {MediaSource} mediaSource the MediaSource to create the\n * SourceBuffer from\n * @param {String} mimeType the desired MIME type of the underlying\n * SourceBuffer\n */\n\nvar SourceUpdater = (function () {\n  function SourceUpdater(mediaSource, mimeType) {\n    var _this = this;\n\n    _classCallCheck(this, SourceUpdater);\n\n    var createSourceBuffer = function createSourceBuffer() {\n      _this.sourceBuffer_ = mediaSource.addSourceBuffer(mimeType);\n\n      // run completion handlers and process callbacks as updateend\n      // events fire\n      _this.onUpdateendCallback_ = function () {\n        var pendingCallback = _this.pendingCallback_;\n\n        _this.pendingCallback_ = null;\n\n        if (pendingCallback) {\n          pendingCallback();\n        }\n\n        _this.runCallback_();\n      };\n\n      _this.sourceBuffer_.addEventListener('updateend', _this.onUpdateendCallback_);\n\n      _this.runCallback_();\n    };\n\n    this.callbacks_ = [];\n    this.pendingCallback_ = null;\n    this.timestampOffset_ = 0;\n    this.mediaSource = mediaSource;\n\n    if (mediaSource.readyState === 'closed') {\n      mediaSource.addEventListener('sourceopen', createSourceBuffer);\n    } else {\n      createSourceBuffer();\n    }\n  }\n\n  /**\n   * Aborts the current segment and resets the segment parser.\n   *\n   * @param {Function} done function to call when done\n   * @see http://w3c.github.io/media-source/#widl-SourceBuffer-abort-void\n   */\n\n  _createClass(SourceUpdater, [{\n    key: 'abort',\n    value: function abort(done) {\n      var _this2 = this;\n\n      this.queueCallback_(function () {\n        _this2.sourceBuffer_.abort();\n      }, done);\n    }\n\n    /**\n     * Queue an update to append an ArrayBuffer.\n     *\n     * @param {ArrayBuffer} bytes\n     * @param {Function} done the function to call when done\n     * @see http://www.w3.org/TR/media-source/#widl-SourceBuffer-appendBuffer-void-ArrayBuffer-data\n     */\n  }, {\n    key: 'appendBuffer',\n    value: function appendBuffer(bytes, done) {\n      var _this3 = this;\n\n      this.queueCallback_(function () {\n        _this3.sourceBuffer_.appendBuffer(bytes);\n      }, done);\n    }\n\n    /**\n     * Indicates what TimeRanges are buffered in the managed SourceBuffer.\n     *\n     * @see http://www.w3.org/TR/media-source/#widl-SourceBuffer-buffered\n     */\n  }, {\n    key: 'buffered',\n    value: function buffered() {\n      if (!this.sourceBuffer_) {\n        return _videoJs2['default'].createTimeRanges();\n      }\n      return this.sourceBuffer_.buffered;\n    }\n\n    /**\n     * Queue an update to set the duration.\n     *\n     * @param {Double} duration what to set the duration to\n     * @see http://www.w3.org/TR/media-source/#widl-MediaSource-duration\n     */\n  }, {\n    key: 'duration',\n    value: function duration(_duration) {\n      var _this4 = this;\n\n      this.queueCallback_(function () {\n        _this4.sourceBuffer_.duration = _duration;\n      });\n    }\n\n    /**\n     * Queue an update to remove a time range from the buffer.\n     *\n     * @param {Number} start where to start the removal\n     * @param {Number} end where to end the removal\n     * @see http://www.w3.org/TR/media-source/#widl-SourceBuffer-remove-void-double-start-unrestricted-double-end\n     */\n  }, {\n    key: 'remove',\n    value: function remove(start, end) {\n      var _this5 = this;\n\n      this.queueCallback_(function () {\n        _this5.sourceBuffer_.remove(start, end);\n      });\n    }\n\n    /**\n     * wether the underlying sourceBuffer is updating or not\n     *\n     * @return {Boolean} the updating status of the SourceBuffer\n     */\n  }, {\n    key: 'updating',\n    value: function updating() {\n      return !this.sourceBuffer_ || this.sourceBuffer_.updating;\n    }\n\n    /**\n     * Set/get the timestampoffset on the SourceBuffer\n     *\n     * @return {Number} the timestamp offset\n     */\n  }, {\n    key: 'timestampOffset',\n    value: function timestampOffset(offset) {\n      var _this6 = this;\n\n      if (typeof offset !== 'undefined') {\n        this.queueCallback_(function () {\n          _this6.sourceBuffer_.timestampOffset = offset;\n        });\n        this.timestampOffset_ = offset;\n      }\n      return this.timestampOffset_;\n    }\n\n    /**\n     * que a callback to run\n     */\n  }, {\n    key: 'queueCallback_',\n    value: function queueCallback_(callback, done) {\n      this.callbacks_.push([callback.bind(this), done]);\n      this.runCallback_();\n    }\n\n    /**\n     * run a queued callback\n     */\n  }, {\n    key: 'runCallback_',\n    value: function runCallback_() {\n      var callbacks = undefined;\n\n      if (this.sourceBuffer_ && !this.sourceBuffer_.updating && this.callbacks_.length) {\n        callbacks = this.callbacks_.shift();\n        this.pendingCallback_ = callbacks[1];\n        callbacks[0]();\n      }\n    }\n\n    /**\n     * dispose of the source updater and the underlying sourceBuffer\n     */\n  }, {\n    key: 'dispose',\n    value: function dispose() {\n      this.sourceBuffer_.removeEventListener('updateend', this.onUpdateendCallback_);\n      if (this.sourceBuffer_ && this.mediaSource.readyState === 'open') {\n        this.sourceBuffer_.abort();\n      }\n    }\n  }]);\n\n  return SourceUpdater;\n})();\n\nexports['default'] = SourceUpdater;\nmodule.exports = exports['default'];\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n},{}],14:[function(require,module,exports){\n/**\n * @file stream.js\n */\n/**\n * A lightweight readable stream implemention that handles event dispatching.\n *\n * @class Stream\n */\n'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\n\nvar _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }\n\nvar Stream = (function () {\n  function Stream() {\n    _classCallCheck(this, Stream);\n\n    this.listeners = {};\n  }\n\n  /**\n   * Add a listener for a specified event type.\n   *\n   * @param {String} type the event name\n   * @param {Function} listener the callback to be invoked when an event of\n   * the specified type occurs\n   */\n\n  _createClass(Stream, [{\n    key: 'on',\n    value: function on(type, listener) {\n      if (!this.listeners[type]) {\n        this.listeners[type] = [];\n      }\n      this.listeners[type].push(listener);\n    }\n\n    /**\n     * Remove a listener for a specified event type.\n     *\n     * @param {String} type the event name\n     * @param {Function} listener  a function previously registered for this\n     * type of event through `on`\n     * @return {Boolean} if we could turn it off or not\n     */\n  }, {\n    key: 'off',\n    value: function off(type, listener) {\n      var index = undefined;\n\n      if (!this.listeners[type]) {\n        return false;\n      }\n      index = this.listeners[type].indexOf(listener);\n      this.listeners[type].splice(index, 1);\n      return index > -1;\n    }\n\n    /**\n     * Trigger an event of the specified type on this stream. Any additional\n     * arguments to this function are passed as parameters to event listeners.\n     *\n     * @param {String} type the event name\n     */\n  }, {\n    key: 'trigger',\n    value: function trigger(type) {\n      var callbacks = undefined;\n      var i = undefined;\n      var length = undefined;\n      var args = undefined;\n\n      callbacks = this.listeners[type];\n      if (!callbacks) {\n        return;\n      }\n      // Slicing the arguments on every invocation of this method\n      // can add a significant amount of overhead. Avoid the\n      // intermediate object creation for the common case of a\n      // single callback argument\n      if (arguments.length === 2) {\n        length = callbacks.length;\n        for (i = 0; i < length; ++i) {\n          callbacks[i].call(this, arguments[1]);\n        }\n      } else {\n        args = Array.prototype.slice.call(arguments, 1);\n        length = callbacks.length;\n        for (i = 0; i < length; ++i) {\n          callbacks[i].apply(this, args);\n        }\n      }\n    }\n\n    /**\n     * Destroys the stream and cleans up.\n     */\n  }, {\n    key: 'dispose',\n    value: function dispose() {\n      this.listeners = {};\n    }\n\n    /**\n     * Forwards all `data` events on this stream to the destination stream. The\n     * destination stream should provide a method `push` to receive the data\n     * events as they arrive.\n     *\n     * @param {Stream} destination the stream that will receive all `data` events\n     * @see http://nodejs.org/api/stream.html#stream_readable_pipe_destination_options\n     */\n  }, {\n    key: 'pipe',\n    value: function pipe(destination) {\n      this.on('data', function (data) {\n        destination.push(data);\n      });\n    }\n  }]);\n\n  return Stream;\n})();\n\nexports['default'] = Stream;\nmodule.exports = exports['default'];\n},{}],15:[function(require,module,exports){\n(function (global){\n/**\n * @file sync-controller.js\n */\n\n'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\n\nvar _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();\n\nvar _get = function get(_x, _x2, _x3) { var _again = true; _function: while (_again) { var object = _x, property = _x2, receiver = _x3; _again = false; if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { _x = parent; _x2 = property; _x3 = receiver; _again = true; desc = parent = undefined; continue _function; } } else if ('value' in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } } };\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== 'function' && superClass !== null) { throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar _muxJsLibMp4Probe = require('mux.js/lib/mp4/probe');\n\nvar _muxJsLibMp4Probe2 = _interopRequireDefault(_muxJsLibMp4Probe);\n\nvar _muxJsLibToolsTsInspectorJs = require('mux.js/lib/tools/ts-inspector.js');\n\nvar _playlist = require('./playlist');\n\nvar _videoJs = (typeof window !== \"undefined\" ? window['videojs'] : typeof global !== \"undefined\" ? global['videojs'] : null);\n\nvar _videoJs2 = _interopRequireDefault(_videoJs);\n\nvar c = 'console';\n// temporary, switchable debug logging\nvar log = function log() {\n  if (window.logit) {\n    window[c].log.apply(window[c], arguments);\n  }\n};\n\nvar syncPointStrategies = [\n// Stategy \"VOD\": Handle the VOD-case where the sync-point is *always*\n//                the equivalence display-time 0 === segment-index 0\n{\n  name: 'VOD',\n  run: function run(syncController, playlist, duration, currentTimeline) {\n    if (duration !== Infinity) {\n      var syncPoint = {\n        time: 0,\n        segmentIndex: 0\n      };\n\n      return syncPoint;\n    }\n    return null;\n  }\n},\n// Stategy \"ProgramDateTime\": We have a program-date-time tag in this playlist\n{\n  name: 'ProgramDateTime',\n  run: function run(syncController, playlist, duration, currentTimeline) {\n    if (syncController.datetimeToDisplayTime && playlist.dateTimeObject) {\n      var playlistTime = playlist.dateTimeObject.getTime() / 1000;\n      var playlistStart = playlistTime + syncController.datetimeToDisplayTime;\n      var syncPoint = {\n        time: playlistStart,\n        segmentIndex: 0\n      };\n\n      return syncPoint;\n    }\n    return null;\n  }\n},\n// Stategy \"Segment\": We have a known time mapping for a timeline and a\n//                    segment in the current timeline with timing data\n{\n  name: 'Segment',\n  run: function run(syncController, playlist, duration, currentTimeline) {\n    var segments = playlist.segments;\n\n    for (var i = segments.length - 1; i >= 0; i--) {\n      var segment = segments[i];\n\n      if (segment.timeline === currentTimeline && typeof segment.start !== 'undefined') {\n        var syncPoint = {\n          time: segment.start,\n          segmentIndex: i\n        };\n\n        return syncPoint;\n      }\n    }\n    return null;\n  }\n},\n\n// Stategy \"Discontinuity\": We have a discontinuity with a known\n//                          display-time\n{\n  name: 'Discontinuity',\n  run: function run(syncController, playlist, duration, currentTimeline) {\n    if (playlist.discontinuityStarts.length) {\n      for (var i = 0; i < playlist.discontinuityStarts.length; i++) {\n        var segmentIndex = playlist.discontinuityStarts[i];\n        var discontinuity = playlist.discontinuitySequence + i + 1;\n\n        if (syncController.discontinuities[discontinuity]) {\n          var syncPoint = {\n            time: syncController.discontinuities[discontinuity].time,\n            segmentIndex: segmentIndex\n          };\n\n          return syncPoint;\n        }\n      }\n    }\n    return null;\n  }\n},\n// Stategy \"Playlist\": We have a playlist with a known mapping of\n//                     segment index to display time\n{\n  name: 'Playlist',\n  run: function run(syncController, playlist, duration, currentTimeline) {\n    if (playlist.syncInfo) {\n      var syncPoint = {\n        time: playlist.syncInfo.time,\n        segmentIndex: playlist.syncInfo.mediaSequence - playlist.mediaSequence\n      };\n\n      return syncPoint;\n    }\n    return null;\n  }\n}];\n\nexports.syncPointStrategies = syncPointStrategies;\n\nvar SyncController = (function (_videojs$EventTarget) {\n  _inherits(SyncController, _videojs$EventTarget);\n\n  function SyncController() {\n    _classCallCheck(this, SyncController);\n\n    _get(Object.getPrototypeOf(SyncController.prototype), 'constructor', this).call(this);\n    // Segment Loader state variables...\n    // ...for synching across variants\n    this.inspectCache_ = undefined;\n\n    // ...for synching across variants\n    this.timelines = [];\n    this.discontinuities = [];\n    this.datetimeToDisplayTime = null;\n  }\n\n  /**\n   * Find a sync-point for the playlist specified\n   *\n   * A sync-point is defined as a known mapping from display-time to\n   * a segment-index in the current playlist.\n   *\n   * @param {Playlist} media - The playlist that needs a sync-point\n   * @param {Number} duration - Duration of the MediaSource (Infinite if playing a live source)\n   * @param {Number} currentTimeline - The last timeline from which a segment was loaded\n   * @returns {Object} - A sync-point object\n   */\n\n  _createClass(SyncController, [{\n    key: 'getSyncPoint',\n    value: function getSyncPoint(playlist, duration, currentTimeline) {\n      // Try to find a sync-point in by utilizing various strategies...\n      for (var i = 0; i < syncPointStrategies.length; i++) {\n        var strategy = syncPointStrategies[i];\n        var syncPoint = strategy.run(this, playlist, duration, currentTimeline);\n\n        if (syncPoint) {\n          log('syncPoint found via <' + strategy.name + '>:', syncPoint);\n          return syncPoint;\n        }\n      }\n      // Otherwise, signal that we need to attempt to get a sync-point\n      // manually by fetching a segment in the playlist and constructing\n      // a sync-point from that information\n      return null;\n    }\n\n    /**\n     * Save any meta-data present on the segments when segments leave\n     * the live window to the playlist to allow for synchronization at the\n     * playlist level later.\n     *\n     * @param {Playlist} oldPlaylist - The previous active playlist\n     * @param {Playlist} newPlaylist - The updated and most current playlist\n     */\n  }, {\n    key: 'saveExpiredSegmentInfo',\n    value: function saveExpiredSegmentInfo(oldPlaylist, newPlaylist) {\n      var mediaSequenceDiff = newPlaylist.mediaSequence - oldPlaylist.mediaSequence;\n\n      // When a segment expires from the playlist and it has a start time\n      // save that information as a possible sync-point reference in future\n      for (var i = mediaSequenceDiff - 1; i >= 0; i--) {\n        var lastRemovedSegment = oldPlaylist.segments[i];\n\n        if (typeof lastRemovedSegment.start !== 'undefined') {\n          newPlaylist.syncInfo = {\n            mediaSequence: oldPlaylist.mediaSequence + i,\n            time: lastRemovedSegment.start\n          };\n          log('playlist sync:', newPlaylist.syncInfo);\n          this.trigger('syncinfoupdate');\n          break;\n        }\n      }\n    }\n\n    /**\n     * Save the mapping from playlist's ProgramDateTime to display. This should\n     * only ever happen once at the start of playback.\n     *\n     * @param {Playlist} playlist - The currently active playlist\n     */\n  }, {\n    key: 'setDateTimeMapping',\n    value: function setDateTimeMapping(playlist) {\n      if (!this.datetimeToDisplayTime && playlist.dateTimeObject) {\n        var playlistTimestamp = playlist.dateTimeObject.getTime() / 1000;\n\n        this.datetimeToDisplayTime = -playlistTimestamp;\n      }\n    }\n\n    /**\n     * Reset the state of the inspection cache when we do a rendition\n     * switch\n     */\n  }, {\n    key: 'reset',\n    value: function reset() {\n      this.inspectCache_ = undefined;\n    }\n\n    /**\n     * Probe or inspect a fmp4 or an mpeg2-ts segment to determine the start\n     * and end of the segment in it's internal \"media time\". Used to generate\n     * mappings from that internal \"media time\" to the display time that is\n     * shown on the player.\n     *\n     * @param {SegmentInfo} segmentInfo - The current active request information\n     */\n  }, {\n    key: 'probeSegmentInfo',\n    value: function probeSegmentInfo(segmentInfo) {\n      var segment = segmentInfo.playlist.segments[segmentInfo.mediaIndex];\n      var timingInfo = undefined;\n\n      if (segment.map) {\n        timingInfo = this.probeMp4Segment_(segmentInfo);\n      } else {\n        timingInfo = this.probeTsSegment_(segmentInfo);\n      }\n\n      if (timingInfo) {\n        if (this.calculateSegmentTimeMapping_(segmentInfo, timingInfo)) {\n          this.saveDiscontinuitySyncInfo_(segmentInfo);\n        }\n      }\n    }\n\n    /**\n     * Probe an fmp4 or an mpeg2-ts segment to determine the start of the segment\n     * in it's internal \"media time\".\n     *\n     * @private\n     * @param {SegmentInfo} segmentInfo - The current active request information\n     * @return {object} The start and end time of the current segment in \"media time\"\n     */\n  }, {\n    key: 'probeMp4Segment_',\n    value: function probeMp4Segment_(segmentInfo) {\n      var segment = segmentInfo.playlist.segments[segmentInfo.mediaIndex];\n      var timescales = _muxJsLibMp4Probe2['default'].timescale(segment.map.bytes);\n      var startTime = _muxJsLibMp4Probe2['default'].startTime(timescales, segmentInfo.bytes);\n\n      if (segmentInfo.timestampOffset !== null) {\n        segmentInfo.timestampOffset -= startTime;\n      }\n\n      return {\n        start: startTime,\n        end: startTime + segment.duration\n      };\n    }\n\n    /**\n     * Probe an mpeg2-ts segment to determine the start and end of the segment\n     * in it's internal \"media time\".\n     *\n     * @private\n     * @param {SegmentInfo} segmentInfo - The current active request information\n     * @return {object} The start and end time of the current segment in \"media time\"\n     */\n  }, {\n    key: 'probeTsSegment_',\n    value: function probeTsSegment_(segmentInfo) {\n      var timeInfo = (0, _muxJsLibToolsTsInspectorJs.inspect)(segmentInfo.bytes, this.inspectCache_);\n      var segmentStartTime = undefined;\n      var segmentEndTime = undefined;\n\n      if (!timeInfo) {\n        return null;\n      }\n\n      if (timeInfo.video && timeInfo.video.length === 2) {\n        this.inspectCache_ = timeInfo.video[1].dts;\n        segmentStartTime = timeInfo.video[0].dtsTime;\n        segmentEndTime = timeInfo.video[1].dtsTime;\n      } else if (timeInfo.audio && timeInfo.audio.length === 2) {\n        this.inspectCache_ = timeInfo.audio[1].dts;\n        segmentStartTime = timeInfo.audio[0].dtsTime;\n        segmentEndTime = timeInfo.audio[1].dtsTime;\n      }\n\n      return {\n        start: segmentStartTime,\n        end: segmentEndTime\n      };\n    }\n\n    /**\n     * Use the \"media time\" for a segment to generate a mapping to \"display time\" and\n     * save that display time to the segment.\n     *\n     * @private\n     * @param {SegmentInfo} segmentInfo - The current active request information\n     * @param {object} timingInfo - The start and end time of the current segment in \"media time\"\n     */\n  }, {\n    key: 'calculateSegmentTimeMapping_',\n    value: function calculateSegmentTimeMapping_(segmentInfo, timingInfo) {\n      var segment = segmentInfo.playlist.segments[segmentInfo.mediaIndex];\n      var mappingObj = this.timelines[segmentInfo.timeline];\n\n      if (segmentInfo.timestampOffset !== null) {\n        log('tsO:', segmentInfo.timestampOffset);\n\n        mappingObj = {\n          time: segmentInfo.timestampOffset,\n          mapping: segmentInfo.timestampOffset - timingInfo.start\n        };\n        this.timelines[segmentInfo.timeline] = mappingObj;\n\n        segment.start = segmentInfo.timestampOffset;\n        segment.end = timingInfo.end + mappingObj.mapping;\n      } else if (mappingObj) {\n        segment.start = timingInfo.start + mappingObj.mapping;\n        segment.end = timingInfo.end + mappingObj.mapping;\n      } else {\n        return false;\n      }\n      this.trigger('syncinfoupdate');\n      return true;\n    }\n\n    /**\n     * Each time we have discontinuity in the playlist, attempt to calculate the location\n     * in display of the start of the discontinuity and save that. We also save an accuracy\n     * value so that we save values with the most accuracy (closest to 0.)\n     *\n     * @private\n     * @param {SegmentInfo} segmentInfo - The current active request information\n     */\n  }, {\n    key: 'saveDiscontinuitySyncInfo_',\n    value: function saveDiscontinuitySyncInfo_(segmentInfo) {\n      var playlist = segmentInfo.playlist;\n      var segment = playlist.segments[segmentInfo.mediaIndex];\n\n      // If the current segment is a discontinuity then we know exactly where\n      // the start of the range and it's accuracy is 0 (greater accuracy values\n      // mean more approximation)\n      if (segment.discontinuity) {\n        this.discontinuities[segment.timeline] = {\n          time: segment.start,\n          accuracy: 0\n        };\n      } else if (playlist.discontinuityStarts.length) {\n        // Search for future discontinuities that we can provide better timing\n        // information for and save that information for sync purposes\n        for (var i = 0; i < playlist.discontinuityStarts.length; i++) {\n          var segmentIndex = playlist.discontinuityStarts[i];\n          var discontinuity = playlist.discontinuitySequence + i + 1;\n          var accuracy = segmentIndex - segmentInfo.mediaIndex;\n\n          if (accuracy > 0 && (!this.discontinuities[discontinuity] || this.discontinuities[discontinuity].accuracy > accuracy)) {\n\n            this.discontinuities[discontinuity] = {\n              time: segment.end + (0, _playlist.sumDurations)(playlist, segmentInfo.mediaIndex + 1, segmentIndex),\n              accuracy: accuracy\n            };\n          }\n        }\n      }\n    }\n  }]);\n\n  return SyncController;\n})(_videoJs2['default'].EventTarget);\n\nexports['default'] = SyncController;\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n},{\"./playlist\":7,\"mux.js/lib/mp4/probe\":85,\"mux.js/lib/tools/ts-inspector.js\":87}],16:[function(require,module,exports){\n(function (global){\n/**\n * @file xhr.js\n */\n\n/**\n * A wrapper for videojs.xhr that tracks bandwidth.\n *\n * @param {Object} options options for the XHR\n * @param {Function} callback the callback to call when done\n * @return {Request} the xhr request that is going to be made\n */\n'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\n\nvar _videoJs = (typeof window !== \"undefined\" ? window['videojs'] : typeof global !== \"undefined\" ? global['videojs'] : null);\n\nvar xhrFactory = function xhrFactory() {\n  var xhr = function XhrFunction(options, callback) {\n    // Add a default timeout for all hls requests\n    options = (0, _videoJs.mergeOptions)({\n      timeout: 45e3\n    }, options);\n\n    // Allow an optional user-specified function to modify the option\n    // object before we construct the xhr request\n    if (XhrFunction.beforeRequest && typeof XhrFunction.beforeRequest === 'function') {\n      var newOptions = XhrFunction.beforeRequest(options);\n\n      if (newOptions) {\n        options = newOptions;\n      }\n    }\n\n    var request = (0, _videoJs.xhr)(options, function (error, response) {\n      if (!error && request.response) {\n        request.responseTime = Date.now();\n        request.roundTripTime = request.responseTime - request.requestTime;\n        request.bytesReceived = request.response.byteLength || request.response.length;\n        if (!request.bandwidth) {\n          request.bandwidth = Math.floor(request.bytesReceived / request.roundTripTime * 8 * 1000);\n        }\n      }\n\n      // videojs.xhr now uses a specific code\n      // on the error object to signal that a request has\n      // timed out errors of setting a boolean on the request object\n      if (error || request.timedout) {\n        request.timedout = request.timedout || error.code === 'ETIMEDOUT';\n      } else {\n        request.timedout = false;\n      }\n\n      // videojs.xhr no longer considers status codes outside of 200 and 0\n      // (for file uris) to be errors, but the old XHR did, so emulate that\n      // behavior. Status 206 may be used in response to byterange requests.\n      if (!error && response.statusCode !== 200 && response.statusCode !== 206 && response.statusCode !== 0) {\n        error = new Error('XHR Failed with a response of: ' + (request && (request.response || request.responseText)));\n      }\n\n      callback(error, request);\n    });\n\n    request.requestTime = Date.now();\n    return request;\n  };\n\n  return xhr;\n};\n\nexports['default'] = xhrFactory;\nmodule.exports = exports['default'];\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n},{}],17:[function(require,module,exports){\n/**\n * @file aes.js\n *\n * This file contains an adaptation of the AES decryption algorithm\n * from the Standford Javascript Cryptography Library. That work is\n * covered by the following copyright and permissions notice:\n *\n * Copyright 2009-2010 Emily Stark, Mike Hamburg, Dan Boneh.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are\n * met:\n *\n * 1. Redistributions of source code must retain the above copyright\n *    notice, this list of conditions and the following disclaimer.\n *\n * 2. Redistributions in binary form must reproduce the above\n *    copyright notice, this list of conditions and the following\n *    disclaimer in the documentation and/or other materials provided\n *    with the distribution.\n *\n * THIS SOFTWARE IS PROVIDED BY THE AUTHORS ``AS IS'' AND ANY EXPRESS OR\n * IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n * DISCLAIMED. IN NO EVENT SHALL <COPYRIGHT HOLDER> OR CONTRIBUTORS BE\n * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR\n * BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n * WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE\n * OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN\n * IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n *\n * The views and conclusions contained in the software and documentation\n * are those of the authors and should not be interpreted as representing\n * official policies, either expressed or implied, of the authors.\n */\n\n/**\n * Expand the S-box tables.\n *\n * @private\n */\n'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\n\nvar _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }\n\nvar precompute = function precompute() {\n  var tables = [[[], [], [], [], []], [[], [], [], [], []]];\n  var encTable = tables[0];\n  var decTable = tables[1];\n  var sbox = encTable[4];\n  var sboxInv = decTable[4];\n  var i = undefined;\n  var x = undefined;\n  var xInv = undefined;\n  var d = [];\n  var th = [];\n  var x2 = undefined;\n  var x4 = undefined;\n  var x8 = undefined;\n  var s = undefined;\n  var tEnc = undefined;\n  var tDec = undefined;\n\n  // Compute double and third tables\n  for (i = 0; i < 256; i++) {\n    th[(d[i] = i << 1 ^ (i >> 7) * 283) ^ i] = i;\n  }\n\n  for (x = xInv = 0; !sbox[x]; x ^= x2 || 1, xInv = th[xInv] || 1) {\n    // Compute sbox\n    s = xInv ^ xInv << 1 ^ xInv << 2 ^ xInv << 3 ^ xInv << 4;\n    s = s >> 8 ^ s & 255 ^ 99;\n    sbox[x] = s;\n    sboxInv[s] = x;\n\n    // Compute MixColumns\n    x8 = d[x4 = d[x2 = d[x]]];\n    tDec = x8 * 0x1010101 ^ x4 * 0x10001 ^ x2 * 0x101 ^ x * 0x1010100;\n    tEnc = d[s] * 0x101 ^ s * 0x1010100;\n\n    for (i = 0; i < 4; i++) {\n      encTable[i][x] = tEnc = tEnc << 24 ^ tEnc >>> 8;\n      decTable[i][s] = tDec = tDec << 24 ^ tDec >>> 8;\n    }\n  }\n\n  // Compactify. Considerable speedup on Firefox.\n  for (i = 0; i < 5; i++) {\n    encTable[i] = encTable[i].slice(0);\n    decTable[i] = decTable[i].slice(0);\n  }\n  return tables;\n};\nvar aesTables = null;\n\n/**\n * Schedule out an AES key for both encryption and decryption. This\n * is a low-level class. Use a cipher mode to do bulk encryption.\n *\n * @class AES\n * @param key {Array} The key as an array of 4, 6 or 8 words.\n */\n\nvar AES = (function () {\n  function AES(key) {\n    _classCallCheck(this, AES);\n\n    /**\n     * The expanded S-box and inverse S-box tables. These will be computed\n     * on the client so that we don't have to send them down the wire.\n     *\n     * There are two tables, _tables[0] is for encryption and\n     * _tables[1] is for decryption.\n     *\n     * The first 4 sub-tables are the expanded S-box with MixColumns. The\n     * last (_tables[01][4]) is the S-box itself.\n     *\n     * @private\n     */\n    // if we have yet to precompute the S-box tables\n    // do so now\n    if (!aesTables) {\n      aesTables = precompute();\n    }\n    // then make a copy of that object for use\n    this._tables = [[aesTables[0][0].slice(), aesTables[0][1].slice(), aesTables[0][2].slice(), aesTables[0][3].slice(), aesTables[0][4].slice()], [aesTables[1][0].slice(), aesTables[1][1].slice(), aesTables[1][2].slice(), aesTables[1][3].slice(), aesTables[1][4].slice()]];\n    var i = undefined;\n    var j = undefined;\n    var tmp = undefined;\n    var encKey = undefined;\n    var decKey = undefined;\n    var sbox = this._tables[0][4];\n    var decTable = this._tables[1];\n    var keyLen = key.length;\n    var rcon = 1;\n\n    if (keyLen !== 4 && keyLen !== 6 && keyLen !== 8) {\n      throw new Error('Invalid aes key size');\n    }\n\n    encKey = key.slice(0);\n    decKey = [];\n    this._key = [encKey, decKey];\n\n    // schedule encryption keys\n    for (i = keyLen; i < 4 * keyLen + 28; i++) {\n      tmp = encKey[i - 1];\n\n      // apply sbox\n      if (i % keyLen === 0 || keyLen === 8 && i % keyLen === 4) {\n        tmp = sbox[tmp >>> 24] << 24 ^ sbox[tmp >> 16 & 255] << 16 ^ sbox[tmp >> 8 & 255] << 8 ^ sbox[tmp & 255];\n\n        // shift rows and add rcon\n        if (i % keyLen === 0) {\n          tmp = tmp << 8 ^ tmp >>> 24 ^ rcon << 24;\n          rcon = rcon << 1 ^ (rcon >> 7) * 283;\n        }\n      }\n\n      encKey[i] = encKey[i - keyLen] ^ tmp;\n    }\n\n    // schedule decryption keys\n    for (j = 0; i; j++, i--) {\n      tmp = encKey[j & 3 ? i : i - 4];\n      if (i <= 4 || j < 4) {\n        decKey[j] = tmp;\n      } else {\n        decKey[j] = decTable[0][sbox[tmp >>> 24]] ^ decTable[1][sbox[tmp >> 16 & 255]] ^ decTable[2][sbox[tmp >> 8 & 255]] ^ decTable[3][sbox[tmp & 255]];\n      }\n    }\n  }\n\n  /**\n   * Decrypt 16 bytes, specified as four 32-bit words.\n   *\n   * @param {Number} encrypted0 the first word to decrypt\n   * @param {Number} encrypted1 the second word to decrypt\n   * @param {Number} encrypted2 the third word to decrypt\n   * @param {Number} encrypted3 the fourth word to decrypt\n   * @param {Int32Array} out the array to write the decrypted words\n   * into\n   * @param {Number} offset the offset into the output array to start\n   * writing results\n   * @return {Array} The plaintext.\n   */\n\n  _createClass(AES, [{\n    key: 'decrypt',\n    value: function decrypt(encrypted0, encrypted1, encrypted2, encrypted3, out, offset) {\n      var key = this._key[1];\n      // state variables a,b,c,d are loaded with pre-whitened data\n      var a = encrypted0 ^ key[0];\n      var b = encrypted3 ^ key[1];\n      var c = encrypted2 ^ key[2];\n      var d = encrypted1 ^ key[3];\n      var a2 = undefined;\n      var b2 = undefined;\n      var c2 = undefined;\n\n      // key.length === 2 ?\n      var nInnerRounds = key.length / 4 - 2;\n      var i = undefined;\n      var kIndex = 4;\n      var table = this._tables[1];\n\n      // load up the tables\n      var table0 = table[0];\n      var table1 = table[1];\n      var table2 = table[2];\n      var table3 = table[3];\n      var sbox = table[4];\n\n      // Inner rounds. Cribbed from OpenSSL.\n      for (i = 0; i < nInnerRounds; i++) {\n        a2 = table0[a >>> 24] ^ table1[b >> 16 & 255] ^ table2[c >> 8 & 255] ^ table3[d & 255] ^ key[kIndex];\n        b2 = table0[b >>> 24] ^ table1[c >> 16 & 255] ^ table2[d >> 8 & 255] ^ table3[a & 255] ^ key[kIndex + 1];\n        c2 = table0[c >>> 24] ^ table1[d >> 16 & 255] ^ table2[a >> 8 & 255] ^ table3[b & 255] ^ key[kIndex + 2];\n        d = table0[d >>> 24] ^ table1[a >> 16 & 255] ^ table2[b >> 8 & 255] ^ table3[c & 255] ^ key[kIndex + 3];\n        kIndex += 4;\n        a = a2;b = b2;c = c2;\n      }\n\n      // Last round.\n      for (i = 0; i < 4; i++) {\n        out[(3 & -i) + offset] = sbox[a >>> 24] << 24 ^ sbox[b >> 16 & 255] << 16 ^ sbox[c >> 8 & 255] << 8 ^ sbox[d & 255] ^ key[kIndex++];\n        a2 = a;a = b;b = c;c = d;d = a2;\n      }\n    }\n  }]);\n\n  return AES;\n})();\n\nexports['default'] = AES;\nmodule.exports = exports['default'];\n},{}],18:[function(require,module,exports){\n/**\n * @file async-stream.js\n */\n'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\n\nvar _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();\n\nvar _get = function get(_x, _x2, _x3) { var _again = true; _function: while (_again) { var object = _x, property = _x2, receiver = _x3; _again = false; if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { _x = parent; _x2 = property; _x3 = receiver; _again = true; desc = parent = undefined; continue _function; } } else if ('value' in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } } };\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== 'function' && superClass !== null) { throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar _stream = require('./stream');\n\nvar _stream2 = _interopRequireDefault(_stream);\n\n/**\n * A wrapper around the Stream class to use setTiemout\n * and run stream \"jobs\" Asynchronously\n *\n * @class AsyncStream\n * @extends Stream\n */\n\nvar AsyncStream = (function (_Stream) {\n  _inherits(AsyncStream, _Stream);\n\n  function AsyncStream() {\n    _classCallCheck(this, AsyncStream);\n\n    _get(Object.getPrototypeOf(AsyncStream.prototype), 'constructor', this).call(this, _stream2['default']);\n    this.jobs = [];\n    this.delay = 1;\n    this.timeout_ = null;\n  }\n\n  /**\n   * process an async job\n   *\n   * @private\n   */\n\n  _createClass(AsyncStream, [{\n    key: 'processJob_',\n    value: function processJob_() {\n      this.jobs.shift()();\n      if (this.jobs.length) {\n        this.timeout_ = setTimeout(this.processJob_.bind(this), this.delay);\n      } else {\n        this.timeout_ = null;\n      }\n    }\n\n    /**\n     * push a job into the stream\n     *\n     * @param {Function} job the job to push into the stream\n     */\n  }, {\n    key: 'push',\n    value: function push(job) {\n      this.jobs.push(job);\n      if (!this.timeout_) {\n        this.timeout_ = setTimeout(this.processJob_.bind(this), this.delay);\n      }\n    }\n  }]);\n\n  return AsyncStream;\n})(_stream2['default']);\n\nexports['default'] = AsyncStream;\nmodule.exports = exports['default'];\n},{\"./stream\":21}],19:[function(require,module,exports){\n/**\n * @file decrypter.js\n *\n * An asynchronous implementation of AES-128 CBC decryption with\n * PKCS#7 padding.\n */\n\n'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\n\nvar _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }\n\nvar _aes = require('./aes');\n\nvar _aes2 = _interopRequireDefault(_aes);\n\nvar _asyncStream = require('./async-stream');\n\nvar _asyncStream2 = _interopRequireDefault(_asyncStream);\n\nvar _pkcs7 = require('pkcs7');\n\n/**\n * Convert network-order (big-endian) bytes into their little-endian\n * representation.\n */\nvar ntoh = function ntoh(word) {\n  return word << 24 | (word & 0xff00) << 8 | (word & 0xff0000) >> 8 | word >>> 24;\n};\n\n/**\n * Decrypt bytes using AES-128 with CBC and PKCS#7 padding.\n *\n * @param {Uint8Array} encrypted the encrypted bytes\n * @param {Uint32Array} key the bytes of the decryption key\n * @param {Uint32Array} initVector the initialization vector (IV) to\n * use for the first round of CBC.\n * @return {Uint8Array} the decrypted bytes\n *\n * @see http://en.wikipedia.org/wiki/Advanced_Encryption_Standard\n * @see http://en.wikipedia.org/wiki/Block_cipher_mode_of_operation#Cipher_Block_Chaining_.28CBC.29\n * @see https://tools.ietf.org/html/rfc2315\n */\nvar decrypt = function decrypt(encrypted, key, initVector) {\n  // word-level access to the encrypted bytes\n  var encrypted32 = new Int32Array(encrypted.buffer, encrypted.byteOffset, encrypted.byteLength >> 2);\n\n  var decipher = new _aes2['default'](Array.prototype.slice.call(key));\n\n  // byte and word-level access for the decrypted output\n  var decrypted = new Uint8Array(encrypted.byteLength);\n  var decrypted32 = new Int32Array(decrypted.buffer);\n\n  // temporary variables for working with the IV, encrypted, and\n  // decrypted data\n  var init0 = undefined;\n  var init1 = undefined;\n  var init2 = undefined;\n  var init3 = undefined;\n  var encrypted0 = undefined;\n  var encrypted1 = undefined;\n  var encrypted2 = undefined;\n  var encrypted3 = undefined;\n\n  // iteration variable\n  var wordIx = undefined;\n\n  // pull out the words of the IV to ensure we don't modify the\n  // passed-in reference and easier access\n  init0 = initVector[0];\n  init1 = initVector[1];\n  init2 = initVector[2];\n  init3 = initVector[3];\n\n  // decrypt four word sequences, applying cipher-block chaining (CBC)\n  // to each decrypted block\n  for (wordIx = 0; wordIx < encrypted32.length; wordIx += 4) {\n    // convert big-endian (network order) words into little-endian\n    // (javascript order)\n    encrypted0 = ntoh(encrypted32[wordIx]);\n    encrypted1 = ntoh(encrypted32[wordIx + 1]);\n    encrypted2 = ntoh(encrypted32[wordIx + 2]);\n    encrypted3 = ntoh(encrypted32[wordIx + 3]);\n\n    // decrypt the block\n    decipher.decrypt(encrypted0, encrypted1, encrypted2, encrypted3, decrypted32, wordIx);\n\n    // XOR with the IV, and restore network byte-order to obtain the\n    // plaintext\n    decrypted32[wordIx] = ntoh(decrypted32[wordIx] ^ init0);\n    decrypted32[wordIx + 1] = ntoh(decrypted32[wordIx + 1] ^ init1);\n    decrypted32[wordIx + 2] = ntoh(decrypted32[wordIx + 2] ^ init2);\n    decrypted32[wordIx + 3] = ntoh(decrypted32[wordIx + 3] ^ init3);\n\n    // setup the IV for the next round\n    init0 = encrypted0;\n    init1 = encrypted1;\n    init2 = encrypted2;\n    init3 = encrypted3;\n  }\n\n  return decrypted;\n};\n\nexports.decrypt = decrypt;\n/**\n * The `Decrypter` class that manages decryption of AES\n * data through `AsyncStream` objects and the `decrypt`\n * function\n *\n * @param {Uint8Array} encrypted the encrypted bytes\n * @param {Uint32Array} key the bytes of the decryption key\n * @param {Uint32Array} initVector the initialization vector (IV) to\n * @param {Function} done the function to run when done\n * @class Decrypter\n */\n\nvar Decrypter = (function () {\n  function Decrypter(encrypted, key, initVector, done) {\n    _classCallCheck(this, Decrypter);\n\n    var step = Decrypter.STEP;\n    var encrypted32 = new Int32Array(encrypted.buffer);\n    var decrypted = new Uint8Array(encrypted.byteLength);\n    var i = 0;\n\n    this.asyncStream_ = new _asyncStream2['default']();\n\n    // split up the encryption job and do the individual chunks asynchronously\n    this.asyncStream_.push(this.decryptChunk_(encrypted32.subarray(i, i + step), key, initVector, decrypted));\n    for (i = step; i < encrypted32.length; i += step) {\n      initVector = new Uint32Array([ntoh(encrypted32[i - 4]), ntoh(encrypted32[i - 3]), ntoh(encrypted32[i - 2]), ntoh(encrypted32[i - 1])]);\n      this.asyncStream_.push(this.decryptChunk_(encrypted32.subarray(i, i + step), key, initVector, decrypted));\n    }\n    // invoke the done() callback when everything is finished\n    this.asyncStream_.push(function () {\n      // remove pkcs#7 padding from the decrypted bytes\n      done(null, (0, _pkcs7.unpad)(decrypted));\n    });\n  }\n\n  /**\n   * a getter for step the maximum number of bytes to process at one time\n   *\n   * @return {Number} the value of step 32000\n   */\n\n  _createClass(Decrypter, [{\n    key: 'decryptChunk_',\n\n    /**\n     * @private\n     */\n    value: function decryptChunk_(encrypted, key, initVector, decrypted) {\n      return function () {\n        var bytes = decrypt(encrypted, key, initVector);\n\n        decrypted.set(bytes, encrypted.byteOffset);\n      };\n    }\n  }], [{\n    key: 'STEP',\n    get: function get() {\n      // 4 * 8000;\n      return 32000;\n    }\n  }]);\n\n  return Decrypter;\n})();\n\nexports.Decrypter = Decrypter;\nexports['default'] = {\n  Decrypter: Decrypter,\n  decrypt: decrypt\n};\n},{\"./aes\":17,\"./async-stream\":18,\"pkcs7\":23}],20:[function(require,module,exports){\n/**\n * @file index.js\n *\n * Index module to easily import the primary components of AES-128\n * decryption. Like this:\n *\n * ```js\n * import {Decrypter, decrypt, AsyncStream} from 'aes-decrypter';\n * ```\n */\n'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nvar _decrypter = require('./decrypter');\n\nvar _asyncStream = require('./async-stream');\n\nvar _asyncStream2 = _interopRequireDefault(_asyncStream);\n\nexports['default'] = {\n  decrypt: _decrypter.decrypt,\n  Decrypter: _decrypter.Decrypter,\n  AsyncStream: _asyncStream2['default']\n};\nmodule.exports = exports['default'];\n},{\"./async-stream\":18,\"./decrypter\":19}],21:[function(require,module,exports){\narguments[4][14][0].apply(exports,arguments)\n},{\"dup\":14}],22:[function(require,module,exports){\n/*\n * pkcs7.pad\n * https://github.com/brightcove/pkcs7\n *\n * Copyright (c) 2014 Brightcove\n * Licensed under the apache2 license.\n */\n\n'use strict';\n\nvar PADDING;\n\n/**\n * Returns a new Uint8Array that is padded with PKCS#7 padding.\n * @param plaintext {Uint8Array} the input bytes before encryption\n * @return {Uint8Array} the padded bytes\n * @see http://tools.ietf.org/html/rfc5652\n */\nmodule.exports = function pad(plaintext) {\n  var padding = PADDING[(plaintext.byteLength % 16) || 0],\n      result = new Uint8Array(plaintext.byteLength + padding.length);\n  result.set(plaintext);\n  result.set(padding, plaintext.byteLength);\n  return result;\n};\n\n// pre-define the padding values\nPADDING = [\n  [16, 16, 16, 16,\n   16, 16, 16, 16,\n   16, 16, 16, 16,\n   16, 16, 16, 16],\n\n  [15, 15, 15, 15,\n   15, 15, 15, 15,\n   15, 15, 15, 15,\n   15, 15, 15],\n\n  [14, 14, 14, 14,\n   14, 14, 14, 14,\n   14, 14, 14, 14,\n   14, 14],\n\n  [13, 13, 13, 13,\n   13, 13, 13, 13,\n   13, 13, 13, 13,\n   13],\n\n  [12, 12, 12, 12,\n   12, 12, 12, 12,\n   12, 12, 12, 12],\n\n  [11, 11, 11, 11,\n   11, 11, 11, 11,\n   11, 11, 11],\n\n  [10, 10, 10, 10,\n   10, 10, 10, 10,\n   10, 10],\n\n  [9, 9, 9, 9,\n   9, 9, 9, 9,\n   9],\n\n  [8, 8, 8, 8,\n   8, 8, 8, 8],\n\n  [7, 7, 7, 7,\n   7, 7, 7],\n\n  [6, 6, 6, 6,\n   6, 6],\n\n  [5, 5, 5, 5,\n   5],\n\n  [4, 4, 4, 4],\n\n  [3, 3, 3],\n\n  [2, 2],\n\n  [1]\n];\n\n},{}],23:[function(require,module,exports){\n/*\n * pkcs7\n * https://github.com/brightcove/pkcs7\n *\n * Copyright (c) 2014 Brightcove\n * Licensed under the apache2 license.\n */\n\n'use strict';\n\nexports.pad = require('./pad.js');\nexports.unpad = require('./unpad.js');\n\n},{\"./pad.js\":22,\"./unpad.js\":24}],24:[function(require,module,exports){\n/*\n * pkcs7.unpad\n * https://github.com/brightcove/pkcs7\n *\n * Copyright (c) 2014 Brightcove\n * Licensed under the apache2 license.\n */\n\n'use strict';\n\n/**\n * Returns the subarray of a Uint8Array without PKCS#7 padding.\n * @param padded {Uint8Array} unencrypted bytes that have been padded\n * @return {Uint8Array} the unpadded bytes\n * @see http://tools.ietf.org/html/rfc5652\n */\nmodule.exports = function unpad(padded) {\n  return padded.subarray(0, padded.byteLength - padded[padded.byteLength - 1]);\n};\n\n},{}],25:[function(require,module,exports){\n\n},{}],26:[function(require,module,exports){\n(function (global){\nvar topLevel = typeof global !== 'undefined' ? global :\n    typeof window !== 'undefined' ? window : {}\nvar minDoc = require('min-document');\n\nif (typeof document !== 'undefined') {\n    module.exports = document;\n} else {\n    var doccy = topLevel['__GLOBAL_DOCUMENT_CACHE@4'];\n\n    if (!doccy) {\n        doccy = topLevel['__GLOBAL_DOCUMENT_CACHE@4'] = minDoc;\n    }\n\n    module.exports = doccy;\n}\n\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n},{\"min-document\":25}],27:[function(require,module,exports){\n(function (global){\nif (typeof window !== \"undefined\") {\n    module.exports = window;\n} else if (typeof global !== \"undefined\") {\n    module.exports = global;\n} else if (typeof self !== \"undefined\"){\n    module.exports = self;\n} else {\n    module.exports = {};\n}\n\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n},{}],28:[function(require,module,exports){\n/** Used as the `TypeError` message for \"Functions\" methods. */\nvar FUNC_ERROR_TEXT = 'Expected a function';\n\n/* Native method references for those with the same name as other `lodash` methods. */\nvar nativeMax = Math.max;\n\n/**\n * Creates a function that invokes `func` with the `this` binding of the\n * created function and arguments from `start` and beyond provided as an array.\n *\n * **Note:** This method is based on the [rest parameter](https://developer.mozilla.org/Web/JavaScript/Reference/Functions/rest_parameters).\n *\n * @static\n * @memberOf _\n * @category Function\n * @param {Function} func The function to apply a rest parameter to.\n * @param {number} [start=func.length-1] The start position of the rest parameter.\n * @returns {Function} Returns the new function.\n * @example\n *\n * var say = _.restParam(function(what, names) {\n *   return what + ' ' + _.initial(names).join(', ') +\n *     (_.size(names) > 1 ? ', & ' : '') + _.last(names);\n * });\n *\n * say('hello', 'fred', 'barney', 'pebbles');\n * // => 'hello fred, barney, & pebbles'\n */\nfunction restParam(func, start) {\n  if (typeof func != 'function') {\n    throw new TypeError(FUNC_ERROR_TEXT);\n  }\n  start = nativeMax(start === undefined ? (func.length - 1) : (+start || 0), 0);\n  return function() {\n    var args = arguments,\n        index = -1,\n        length = nativeMax(args.length - start, 0),\n        rest = Array(length);\n\n    while (++index < length) {\n      rest[index] = args[start + index];\n    }\n    switch (start) {\n      case 0: return func.call(this, rest);\n      case 1: return func.call(this, args[0], rest);\n      case 2: return func.call(this, args[0], args[1], rest);\n    }\n    var otherArgs = Array(start + 1);\n    index = -1;\n    while (++index < start) {\n      otherArgs[index] = args[index];\n    }\n    otherArgs[start] = rest;\n    return func.apply(this, otherArgs);\n  };\n}\n\nmodule.exports = restParam;\n\n},{}],29:[function(require,module,exports){\n/**\n * Copies the values of `source` to `array`.\n *\n * @private\n * @param {Array} source The array to copy values from.\n * @param {Array} [array=[]] The array to copy values to.\n * @returns {Array} Returns `array`.\n */\nfunction arrayCopy(source, array) {\n  var index = -1,\n      length = source.length;\n\n  array || (array = Array(length));\n  while (++index < length) {\n    array[index] = source[index];\n  }\n  return array;\n}\n\nmodule.exports = arrayCopy;\n\n},{}],30:[function(require,module,exports){\n/**\n * A specialized version of `_.forEach` for arrays without support for callback\n * shorthands and `this` binding.\n *\n * @private\n * @param {Array} array The array to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns `array`.\n */\nfunction arrayEach(array, iteratee) {\n  var index = -1,\n      length = array.length;\n\n  while (++index < length) {\n    if (iteratee(array[index], index, array) === false) {\n      break;\n    }\n  }\n  return array;\n}\n\nmodule.exports = arrayEach;\n\n},{}],31:[function(require,module,exports){\n/**\n * Copies properties of `source` to `object`.\n *\n * @private\n * @param {Object} source The object to copy properties from.\n * @param {Array} props The property names to copy.\n * @param {Object} [object={}] The object to copy properties to.\n * @returns {Object} Returns `object`.\n */\nfunction baseCopy(source, props, object) {\n  object || (object = {});\n\n  var index = -1,\n      length = props.length;\n\n  while (++index < length) {\n    var key = props[index];\n    object[key] = source[key];\n  }\n  return object;\n}\n\nmodule.exports = baseCopy;\n\n},{}],32:[function(require,module,exports){\nvar createBaseFor = require('./createBaseFor');\n\n/**\n * The base implementation of `baseForIn` and `baseForOwn` which iterates\n * over `object` properties returned by `keysFunc` invoking `iteratee` for\n * each property. Iteratee functions may exit iteration early by explicitly\n * returning `false`.\n *\n * @private\n * @param {Object} object The object to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @param {Function} keysFunc The function to get the keys of `object`.\n * @returns {Object} Returns `object`.\n */\nvar baseFor = createBaseFor();\n\nmodule.exports = baseFor;\n\n},{\"./createBaseFor\":39}],33:[function(require,module,exports){\nvar baseFor = require('./baseFor'),\n    keysIn = require('../object/keysIn');\n\n/**\n * The base implementation of `_.forIn` without support for callback\n * shorthands and `this` binding.\n *\n * @private\n * @param {Object} object The object to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Object} Returns `object`.\n */\nfunction baseForIn(object, iteratee) {\n  return baseFor(object, iteratee, keysIn);\n}\n\nmodule.exports = baseForIn;\n\n},{\"../object/keysIn\":60,\"./baseFor\":32}],34:[function(require,module,exports){\nvar arrayEach = require('./arrayEach'),\n    baseMergeDeep = require('./baseMergeDeep'),\n    isArray = require('../lang/isArray'),\n    isArrayLike = require('./isArrayLike'),\n    isObject = require('../lang/isObject'),\n    isObjectLike = require('./isObjectLike'),\n    isTypedArray = require('../lang/isTypedArray'),\n    keys = require('../object/keys');\n\n/**\n * The base implementation of `_.merge` without support for argument juggling,\n * multiple sources, and `this` binding `customizer` functions.\n *\n * @private\n * @param {Object} object The destination object.\n * @param {Object} source The source object.\n * @param {Function} [customizer] The function to customize merged values.\n * @param {Array} [stackA=[]] Tracks traversed source objects.\n * @param {Array} [stackB=[]] Associates values with source counterparts.\n * @returns {Object} Returns `object`.\n */\nfunction baseMerge(object, source, customizer, stackA, stackB) {\n  if (!isObject(object)) {\n    return object;\n  }\n  var isSrcArr = isArrayLike(source) && (isArray(source) || isTypedArray(source)),\n      props = isSrcArr ? undefined : keys(source);\n\n  arrayEach(props || source, function(srcValue, key) {\n    if (props) {\n      key = srcValue;\n      srcValue = source[key];\n    }\n    if (isObjectLike(srcValue)) {\n      stackA || (stackA = []);\n      stackB || (stackB = []);\n      baseMergeDeep(object, source, key, baseMerge, customizer, stackA, stackB);\n    }\n    else {\n      var value = object[key],\n          result = customizer ? customizer(value, srcValue, key, object, source) : undefined,\n          isCommon = result === undefined;\n\n      if (isCommon) {\n        result = srcValue;\n      }\n      if ((result !== undefined || (isSrcArr && !(key in object))) &&\n          (isCommon || (result === result ? (result !== value) : (value === value)))) {\n        object[key] = result;\n      }\n    }\n  });\n  return object;\n}\n\nmodule.exports = baseMerge;\n\n},{\"../lang/isArray\":51,\"../lang/isObject\":54,\"../lang/isTypedArray\":57,\"../object/keys\":59,\"./arrayEach\":30,\"./baseMergeDeep\":35,\"./isArrayLike\":42,\"./isObjectLike\":47}],35:[function(require,module,exports){\nvar arrayCopy = require('./arrayCopy'),\n    isArguments = require('../lang/isArguments'),\n    isArray = require('../lang/isArray'),\n    isArrayLike = require('./isArrayLike'),\n    isPlainObject = require('../lang/isPlainObject'),\n    isTypedArray = require('../lang/isTypedArray'),\n    toPlainObject = require('../lang/toPlainObject');\n\n/**\n * A specialized version of `baseMerge` for arrays and objects which performs\n * deep merges and tracks traversed objects enabling objects with circular\n * references to be merged.\n *\n * @private\n * @param {Object} object The destination object.\n * @param {Object} source The source object.\n * @param {string} key The key of the value to merge.\n * @param {Function} mergeFunc The function to merge values.\n * @param {Function} [customizer] The function to customize merged values.\n * @param {Array} [stackA=[]] Tracks traversed source objects.\n * @param {Array} [stackB=[]] Associates values with source counterparts.\n * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n */\nfunction baseMergeDeep(object, source, key, mergeFunc, customizer, stackA, stackB) {\n  var length = stackA.length,\n      srcValue = source[key];\n\n  while (length--) {\n    if (stackA[length] == srcValue) {\n      object[key] = stackB[length];\n      return;\n    }\n  }\n  var value = object[key],\n      result = customizer ? customizer(value, srcValue, key, object, source) : undefined,\n      isCommon = result === undefined;\n\n  if (isCommon) {\n    result = srcValue;\n    if (isArrayLike(srcValue) && (isArray(srcValue) || isTypedArray(srcValue))) {\n      result = isArray(value)\n        ? value\n        : (isArrayLike(value) ? arrayCopy(value) : []);\n    }\n    else if (isPlainObject(srcValue) || isArguments(srcValue)) {\n      result = isArguments(value)\n        ? toPlainObject(value)\n        : (isPlainObject(value) ? value : {});\n    }\n    else {\n      isCommon = false;\n    }\n  }\n  // Add the source value to the stack of traversed objects and associate\n  // it with its merged value.\n  stackA.push(srcValue);\n  stackB.push(result);\n\n  if (isCommon) {\n    // Recursively merge objects and arrays (susceptible to call stack limits).\n    object[key] = mergeFunc(result, srcValue, customizer, stackA, stackB);\n  } else if (result === result ? (result !== value) : (value === value)) {\n    object[key] = result;\n  }\n}\n\nmodule.exports = baseMergeDeep;\n\n},{\"../lang/isArguments\":50,\"../lang/isArray\":51,\"../lang/isPlainObject\":55,\"../lang/isTypedArray\":57,\"../lang/toPlainObject\":58,\"./arrayCopy\":29,\"./isArrayLike\":42}],36:[function(require,module,exports){\nvar toObject = require('./toObject');\n\n/**\n * The base implementation of `_.property` without support for deep paths.\n *\n * @private\n * @param {string} key The key of the property to get.\n * @returns {Function} Returns the new function.\n */\nfunction baseProperty(key) {\n  return function(object) {\n    return object == null ? undefined : toObject(object)[key];\n  };\n}\n\nmodule.exports = baseProperty;\n\n},{\"./toObject\":49}],37:[function(require,module,exports){\nvar identity = require('../utility/identity');\n\n/**\n * A specialized version of `baseCallback` which only supports `this` binding\n * and specifying the number of arguments to provide to `func`.\n *\n * @private\n * @param {Function} func The function to bind.\n * @param {*} thisArg The `this` binding of `func`.\n * @param {number} [argCount] The number of arguments to provide to `func`.\n * @returns {Function} Returns the callback.\n */\nfunction bindCallback(func, thisArg, argCount) {\n  if (typeof func != 'function') {\n    return identity;\n  }\n  if (thisArg === undefined) {\n    return func;\n  }\n  switch (argCount) {\n    case 1: return function(value) {\n      return func.call(thisArg, value);\n    };\n    case 3: return function(value, index, collection) {\n      return func.call(thisArg, value, index, collection);\n    };\n    case 4: return function(accumulator, value, index, collection) {\n      return func.call(thisArg, accumulator, value, index, collection);\n    };\n    case 5: return function(value, other, key, object, source) {\n      return func.call(thisArg, value, other, key, object, source);\n    };\n  }\n  return function() {\n    return func.apply(thisArg, arguments);\n  };\n}\n\nmodule.exports = bindCallback;\n\n},{\"../utility/identity\":63}],38:[function(require,module,exports){\nvar bindCallback = require('./bindCallback'),\n    isIterateeCall = require('./isIterateeCall'),\n    restParam = require('../function/restParam');\n\n/**\n * Creates a `_.assign`, `_.defaults`, or `_.merge` function.\n *\n * @private\n * @param {Function} assigner The function to assign values.\n * @returns {Function} Returns the new assigner function.\n */\nfunction createAssigner(assigner) {\n  return restParam(function(object, sources) {\n    var index = -1,\n        length = object == null ? 0 : sources.length,\n        customizer = length > 2 ? sources[length - 2] : undefined,\n        guard = length > 2 ? sources[2] : undefined,\n        thisArg = length > 1 ? sources[length - 1] : undefined;\n\n    if (typeof customizer == 'function') {\n      customizer = bindCallback(customizer, thisArg, 5);\n      length -= 2;\n    } else {\n      customizer = typeof thisArg == 'function' ? thisArg : undefined;\n      length -= (customizer ? 1 : 0);\n    }\n    if (guard && isIterateeCall(sources[0], sources[1], guard)) {\n      customizer = length < 3 ? undefined : customizer;\n      length = 1;\n    }\n    while (++index < length) {\n      var source = sources[index];\n      if (source) {\n        assigner(object, source, customizer);\n      }\n    }\n    return object;\n  });\n}\n\nmodule.exports = createAssigner;\n\n},{\"../function/restParam\":28,\"./bindCallback\":37,\"./isIterateeCall\":45}],39:[function(require,module,exports){\nvar toObject = require('./toObject');\n\n/**\n * Creates a base function for `_.forIn` or `_.forInRight`.\n *\n * @private\n * @param {boolean} [fromRight] Specify iterating from right to left.\n * @returns {Function} Returns the new base function.\n */\nfunction createBaseFor(fromRight) {\n  return function(object, iteratee, keysFunc) {\n    var iterable = toObject(object),\n        props = keysFunc(object),\n        length = props.length,\n        index = fromRight ? length : -1;\n\n    while ((fromRight ? index-- : ++index < length)) {\n      var key = props[index];\n      if (iteratee(iterable[key], key, iterable) === false) {\n        break;\n      }\n    }\n    return object;\n  };\n}\n\nmodule.exports = createBaseFor;\n\n},{\"./toObject\":49}],40:[function(require,module,exports){\nvar baseProperty = require('./baseProperty');\n\n/**\n * Gets the \"length\" property value of `object`.\n *\n * **Note:** This function is used to avoid a [JIT bug](https://bugs.webkit.org/show_bug.cgi?id=142792)\n * that affects Safari on at least iOS 8.1-8.3 ARM64.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {*} Returns the \"length\" value.\n */\nvar getLength = baseProperty('length');\n\nmodule.exports = getLength;\n\n},{\"./baseProperty\":36}],41:[function(require,module,exports){\nvar isNative = require('../lang/isNative');\n\n/**\n * Gets the native function at `key` of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {string} key The key of the method to get.\n * @returns {*} Returns the function if it's native, else `undefined`.\n */\nfunction getNative(object, key) {\n  var value = object == null ? undefined : object[key];\n  return isNative(value) ? value : undefined;\n}\n\nmodule.exports = getNative;\n\n},{\"../lang/isNative\":53}],42:[function(require,module,exports){\nvar getLength = require('./getLength'),\n    isLength = require('./isLength');\n\n/**\n * Checks if `value` is array-like.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is array-like, else `false`.\n */\nfunction isArrayLike(value) {\n  return value != null && isLength(getLength(value));\n}\n\nmodule.exports = isArrayLike;\n\n},{\"./getLength\":40,\"./isLength\":46}],43:[function(require,module,exports){\n/**\n * Checks if `value` is a host object in IE < 9.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a host object, else `false`.\n */\nvar isHostObject = (function() {\n  try {\n    Object({ 'toString': 0 } + '');\n  } catch(e) {\n    return function() { return false; };\n  }\n  return function(value) {\n    // IE < 9 presents many host objects as `Object` objects that can coerce\n    // to strings despite having improperly defined `toString` methods.\n    return typeof value.toString != 'function' && typeof (value + '') == 'string';\n  };\n}());\n\nmodule.exports = isHostObject;\n\n},{}],44:[function(require,module,exports){\n/** Used to detect unsigned integer values. */\nvar reIsUint = /^\\d+$/;\n\n/**\n * Used as the [maximum length](http://ecma-international.org/ecma-262/6.0/#sec-number.max_safe_integer)\n * of an array-like value.\n */\nvar MAX_SAFE_INTEGER = 9007199254740991;\n\n/**\n * Checks if `value` is a valid array-like index.\n *\n * @private\n * @param {*} value The value to check.\n * @param {number} [length=MAX_SAFE_INTEGER] The upper bounds of a valid index.\n * @returns {boolean} Returns `true` if `value` is a valid index, else `false`.\n */\nfunction isIndex(value, length) {\n  value = (typeof value == 'number' || reIsUint.test(value)) ? +value : -1;\n  length = length == null ? MAX_SAFE_INTEGER : length;\n  return value > -1 && value % 1 == 0 && value < length;\n}\n\nmodule.exports = isIndex;\n\n},{}],45:[function(require,module,exports){\nvar isArrayLike = require('./isArrayLike'),\n    isIndex = require('./isIndex'),\n    isObject = require('../lang/isObject');\n\n/**\n * Checks if the provided arguments are from an iteratee call.\n *\n * @private\n * @param {*} value The potential iteratee value argument.\n * @param {*} index The potential iteratee index or key argument.\n * @param {*} object The potential iteratee object argument.\n * @returns {boolean} Returns `true` if the arguments are from an iteratee call, else `false`.\n */\nfunction isIterateeCall(value, index, object) {\n  if (!isObject(object)) {\n    return false;\n  }\n  var type = typeof index;\n  if (type == 'number'\n      ? (isArrayLike(object) && isIndex(index, object.length))\n      : (type == 'string' && index in object)) {\n    var other = object[index];\n    return value === value ? (value === other) : (other !== other);\n  }\n  return false;\n}\n\nmodule.exports = isIterateeCall;\n\n},{\"../lang/isObject\":54,\"./isArrayLike\":42,\"./isIndex\":44}],46:[function(require,module,exports){\n/**\n * Used as the [maximum length](http://ecma-international.org/ecma-262/6.0/#sec-number.max_safe_integer)\n * of an array-like value.\n */\nvar MAX_SAFE_INTEGER = 9007199254740991;\n\n/**\n * Checks if `value` is a valid array-like length.\n *\n * **Note:** This function is based on [`ToLength`](http://ecma-international.org/ecma-262/6.0/#sec-tolength).\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.\n */\nfunction isLength(value) {\n  return typeof value == 'number' && value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;\n}\n\nmodule.exports = isLength;\n\n},{}],47:[function(require,module,exports){\n/**\n * Checks if `value` is object-like.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n */\nfunction isObjectLike(value) {\n  return !!value && typeof value == 'object';\n}\n\nmodule.exports = isObjectLike;\n\n},{}],48:[function(require,module,exports){\nvar isArguments = require('../lang/isArguments'),\n    isArray = require('../lang/isArray'),\n    isIndex = require('./isIndex'),\n    isLength = require('./isLength'),\n    isString = require('../lang/isString'),\n    keysIn = require('../object/keysIn');\n\n/** Used for native method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * A fallback implementation of `Object.keys` which creates an array of the\n * own enumerable property names of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n */\nfunction shimKeys(object) {\n  var props = keysIn(object),\n      propsLength = props.length,\n      length = propsLength && object.length;\n\n  var allowIndexes = !!length && isLength(length) &&\n    (isArray(object) || isArguments(object) || isString(object));\n\n  var index = -1,\n      result = [];\n\n  while (++index < propsLength) {\n    var key = props[index];\n    if ((allowIndexes && isIndex(key, length)) || hasOwnProperty.call(object, key)) {\n      result.push(key);\n    }\n  }\n  return result;\n}\n\nmodule.exports = shimKeys;\n\n},{\"../lang/isArguments\":50,\"../lang/isArray\":51,\"../lang/isString\":56,\"../object/keysIn\":60,\"./isIndex\":44,\"./isLength\":46}],49:[function(require,module,exports){\nvar isObject = require('../lang/isObject'),\n    isString = require('../lang/isString'),\n    support = require('../support');\n\n/**\n * Converts `value` to an object if it's not one.\n *\n * @private\n * @param {*} value The value to process.\n * @returns {Object} Returns the object.\n */\nfunction toObject(value) {\n  if (support.unindexedChars && isString(value)) {\n    var index = -1,\n        length = value.length,\n        result = Object(value);\n\n    while (++index < length) {\n      result[index] = value.charAt(index);\n    }\n    return result;\n  }\n  return isObject(value) ? value : Object(value);\n}\n\nmodule.exports = toObject;\n\n},{\"../lang/isObject\":54,\"../lang/isString\":56,\"../support\":62}],50:[function(require,module,exports){\nvar isArrayLike = require('../internal/isArrayLike'),\n    isObjectLike = require('../internal/isObjectLike');\n\n/** Used for native method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/** Native method references. */\nvar propertyIsEnumerable = objectProto.propertyIsEnumerable;\n\n/**\n * Checks if `value` is classified as an `arguments` object.\n *\n * @static\n * @memberOf _\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n * @example\n *\n * _.isArguments(function() { return arguments; }());\n * // => true\n *\n * _.isArguments([1, 2, 3]);\n * // => false\n */\nfunction isArguments(value) {\n  return isObjectLike(value) && isArrayLike(value) &&\n    hasOwnProperty.call(value, 'callee') && !propertyIsEnumerable.call(value, 'callee');\n}\n\nmodule.exports = isArguments;\n\n},{\"../internal/isArrayLike\":42,\"../internal/isObjectLike\":47}],51:[function(require,module,exports){\nvar getNative = require('../internal/getNative'),\n    isLength = require('../internal/isLength'),\n    isObjectLike = require('../internal/isObjectLike');\n\n/** `Object#toString` result references. */\nvar arrayTag = '[object Array]';\n\n/** Used for native method references. */\nvar objectProto = Object.prototype;\n\n/**\n * Used to resolve the [`toStringTag`](http://ecma-international.org/ecma-262/6.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar objToString = objectProto.toString;\n\n/* Native method references for those with the same name as other `lodash` methods. */\nvar nativeIsArray = getNative(Array, 'isArray');\n\n/**\n * Checks if `value` is classified as an `Array` object.\n *\n * @static\n * @memberOf _\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n * @example\n *\n * _.isArray([1, 2, 3]);\n * // => true\n *\n * _.isArray(function() { return arguments; }());\n * // => false\n */\nvar isArray = nativeIsArray || function(value) {\n  return isObjectLike(value) && isLength(value.length) && objToString.call(value) == arrayTag;\n};\n\nmodule.exports = isArray;\n\n},{\"../internal/getNative\":41,\"../internal/isLength\":46,\"../internal/isObjectLike\":47}],52:[function(require,module,exports){\nvar isObject = require('./isObject');\n\n/** `Object#toString` result references. */\nvar funcTag = '[object Function]';\n\n/** Used for native method references. */\nvar objectProto = Object.prototype;\n\n/**\n * Used to resolve the [`toStringTag`](http://ecma-international.org/ecma-262/6.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar objToString = objectProto.toString;\n\n/**\n * Checks if `value` is classified as a `Function` object.\n *\n * @static\n * @memberOf _\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n * @example\n *\n * _.isFunction(_);\n * // => true\n *\n * _.isFunction(/abc/);\n * // => false\n */\nfunction isFunction(value) {\n  // The use of `Object#toString` avoids issues with the `typeof` operator\n  // in older versions of Chrome and Safari which return 'function' for regexes\n  // and Safari 8 which returns 'object' for typed array constructors.\n  return isObject(value) && objToString.call(value) == funcTag;\n}\n\nmodule.exports = isFunction;\n\n},{\"./isObject\":54}],53:[function(require,module,exports){\nvar isFunction = require('./isFunction'),\n    isHostObject = require('../internal/isHostObject'),\n    isObjectLike = require('../internal/isObjectLike');\n\n/** Used to detect host constructors (Safari > 5). */\nvar reIsHostCtor = /^\\[object .+?Constructor\\]$/;\n\n/** Used for native method references. */\nvar objectProto = Object.prototype;\n\n/** Used to resolve the decompiled source of functions. */\nvar fnToString = Function.prototype.toString;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/** Used to detect if a method is native. */\nvar reIsNative = RegExp('^' +\n  fnToString.call(hasOwnProperty).replace(/[\\\\^$.*+?()[\\]{}|]/g, '\\\\$&')\n  .replace(/hasOwnProperty|(function).*?(?=\\\\\\()| for .+?(?=\\\\\\])/g, '$1.*?') + '$'\n);\n\n/**\n * Checks if `value` is a native function.\n *\n * @static\n * @memberOf _\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a native function, else `false`.\n * @example\n *\n * _.isNative(Array.prototype.push);\n * // => true\n *\n * _.isNative(_);\n * // => false\n */\nfunction isNative(value) {\n  if (value == null) {\n    return false;\n  }\n  if (isFunction(value)) {\n    return reIsNative.test(fnToString.call(value));\n  }\n  return isObjectLike(value) && (isHostObject(value) ? reIsNative : reIsHostCtor).test(value);\n}\n\nmodule.exports = isNative;\n\n},{\"../internal/isHostObject\":43,\"../internal/isObjectLike\":47,\"./isFunction\":52}],54:[function(require,module,exports){\n/**\n * Checks if `value` is the [language type](https://es5.github.io/#x8) of `Object`.\n * (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n *\n * @static\n * @memberOf _\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n * @example\n *\n * _.isObject({});\n * // => true\n *\n * _.isObject([1, 2, 3]);\n * // => true\n *\n * _.isObject(1);\n * // => false\n */\nfunction isObject(value) {\n  // Avoid a V8 JIT bug in Chrome 19-20.\n  // See https://code.google.com/p/v8/issues/detail?id=2291 for more details.\n  var type = typeof value;\n  return !!value && (type == 'object' || type == 'function');\n}\n\nmodule.exports = isObject;\n\n},{}],55:[function(require,module,exports){\nvar baseForIn = require('../internal/baseForIn'),\n    isArguments = require('./isArguments'),\n    isHostObject = require('../internal/isHostObject'),\n    isObjectLike = require('../internal/isObjectLike'),\n    support = require('../support');\n\n/** `Object#toString` result references. */\nvar objectTag = '[object Object]';\n\n/** Used for native method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Used to resolve the [`toStringTag`](http://ecma-international.org/ecma-262/6.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar objToString = objectProto.toString;\n\n/**\n * Checks if `value` is a plain object, that is, an object created by the\n * `Object` constructor or one with a `[[Prototype]]` of `null`.\n *\n * **Note:** This method assumes objects created by the `Object` constructor\n * have no inherited enumerable properties.\n *\n * @static\n * @memberOf _\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a plain object, else `false`.\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n * }\n *\n * _.isPlainObject(new Foo);\n * // => false\n *\n * _.isPlainObject([1, 2, 3]);\n * // => false\n *\n * _.isPlainObject({ 'x': 0, 'y': 0 });\n * // => true\n *\n * _.isPlainObject(Object.create(null));\n * // => true\n */\nfunction isPlainObject(value) {\n  var Ctor;\n\n  // Exit early for non `Object` objects.\n  if (!(isObjectLike(value) && objToString.call(value) == objectTag && !isHostObject(value) && !isArguments(value)) ||\n      (!hasOwnProperty.call(value, 'constructor') && (Ctor = value.constructor, typeof Ctor == 'function' && !(Ctor instanceof Ctor)))) {\n    return false;\n  }\n  // IE < 9 iterates inherited properties before own properties. If the first\n  // iterated property is an object's own property then there are no inherited\n  // enumerable properties.\n  var result;\n  if (support.ownLast) {\n    baseForIn(value, function(subValue, key, object) {\n      result = hasOwnProperty.call(object, key);\n      return false;\n    });\n    return result !== false;\n  }\n  // In most environments an object's own properties are iterated before\n  // its inherited properties. If the last iterated property is an object's\n  // own property then there are no inherited enumerable properties.\n  baseForIn(value, function(subValue, key) {\n    result = key;\n  });\n  return result === undefined || hasOwnProperty.call(value, result);\n}\n\nmodule.exports = isPlainObject;\n\n},{\"../internal/baseForIn\":33,\"../internal/isHostObject\":43,\"../internal/isObjectLike\":47,\"../support\":62,\"./isArguments\":50}],56:[function(require,module,exports){\nvar isObjectLike = require('../internal/isObjectLike');\n\n/** `Object#toString` result references. */\nvar stringTag = '[object String]';\n\n/** Used for native method references. */\nvar objectProto = Object.prototype;\n\n/**\n * Used to resolve the [`toStringTag`](http://ecma-international.org/ecma-262/6.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar objToString = objectProto.toString;\n\n/**\n * Checks if `value` is classified as a `String` primitive or object.\n *\n * @static\n * @memberOf _\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n * @example\n *\n * _.isString('abc');\n * // => true\n *\n * _.isString(1);\n * // => false\n */\nfunction isString(value) {\n  return typeof value == 'string' || (isObjectLike(value) && objToString.call(value) == stringTag);\n}\n\nmodule.exports = isString;\n\n},{\"../internal/isObjectLike\":47}],57:[function(require,module,exports){\nvar isLength = require('../internal/isLength'),\n    isObjectLike = require('../internal/isObjectLike');\n\n/** `Object#toString` result references. */\nvar argsTag = '[object Arguments]',\n    arrayTag = '[object Array]',\n    boolTag = '[object Boolean]',\n    dateTag = '[object Date]',\n    errorTag = '[object Error]',\n    funcTag = '[object Function]',\n    mapTag = '[object Map]',\n    numberTag = '[object Number]',\n    objectTag = '[object Object]',\n    regexpTag = '[object RegExp]',\n    setTag = '[object Set]',\n    stringTag = '[object String]',\n    weakMapTag = '[object WeakMap]';\n\nvar arrayBufferTag = '[object ArrayBuffer]',\n    float32Tag = '[object Float32Array]',\n    float64Tag = '[object Float64Array]',\n    int8Tag = '[object Int8Array]',\n    int16Tag = '[object Int16Array]',\n    int32Tag = '[object Int32Array]',\n    uint8Tag = '[object Uint8Array]',\n    uint8ClampedTag = '[object Uint8ClampedArray]',\n    uint16Tag = '[object Uint16Array]',\n    uint32Tag = '[object Uint32Array]';\n\n/** Used to identify `toStringTag` values of typed arrays. */\nvar typedArrayTags = {};\ntypedArrayTags[float32Tag] = typedArrayTags[float64Tag] =\ntypedArrayTags[int8Tag] = typedArrayTags[int16Tag] =\ntypedArrayTags[int32Tag] = typedArrayTags[uint8Tag] =\ntypedArrayTags[uint8ClampedTag] = typedArrayTags[uint16Tag] =\ntypedArrayTags[uint32Tag] = true;\ntypedArrayTags[argsTag] = typedArrayTags[arrayTag] =\ntypedArrayTags[arrayBufferTag] = typedArrayTags[boolTag] =\ntypedArrayTags[dateTag] = typedArrayTags[errorTag] =\ntypedArrayTags[funcTag] = typedArrayTags[mapTag] =\ntypedArrayTags[numberTag] = typedArrayTags[objectTag] =\ntypedArrayTags[regexpTag] = typedArrayTags[setTag] =\ntypedArrayTags[stringTag] = typedArrayTags[weakMapTag] = false;\n\n/** Used for native method references. */\nvar objectProto = Object.prototype;\n\n/**\n * Used to resolve the [`toStringTag`](http://ecma-international.org/ecma-262/6.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar objToString = objectProto.toString;\n\n/**\n * Checks if `value` is classified as a typed array.\n *\n * @static\n * @memberOf _\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n * @example\n *\n * _.isTypedArray(new Uint8Array);\n * // => true\n *\n * _.isTypedArray([]);\n * // => false\n */\nfunction isTypedArray(value) {\n  return isObjectLike(value) && isLength(value.length) && !!typedArrayTags[objToString.call(value)];\n}\n\nmodule.exports = isTypedArray;\n\n},{\"../internal/isLength\":46,\"../internal/isObjectLike\":47}],58:[function(require,module,exports){\nvar baseCopy = require('../internal/baseCopy'),\n    keysIn = require('../object/keysIn');\n\n/**\n * Converts `value` to a plain object flattening inherited enumerable\n * properties of `value` to own properties of the plain object.\n *\n * @static\n * @memberOf _\n * @category Lang\n * @param {*} value The value to convert.\n * @returns {Object} Returns the converted plain object.\n * @example\n *\n * function Foo() {\n *   this.b = 2;\n * }\n *\n * Foo.prototype.c = 3;\n *\n * _.assign({ 'a': 1 }, new Foo);\n * // => { 'a': 1, 'b': 2 }\n *\n * _.assign({ 'a': 1 }, _.toPlainObject(new Foo));\n * // => { 'a': 1, 'b': 2, 'c': 3 }\n */\nfunction toPlainObject(value) {\n  return baseCopy(value, keysIn(value));\n}\n\nmodule.exports = toPlainObject;\n\n},{\"../internal/baseCopy\":31,\"../object/keysIn\":60}],59:[function(require,module,exports){\nvar getNative = require('../internal/getNative'),\n    isArrayLike = require('../internal/isArrayLike'),\n    isObject = require('../lang/isObject'),\n    shimKeys = require('../internal/shimKeys'),\n    support = require('../support');\n\n/* Native method references for those with the same name as other `lodash` methods. */\nvar nativeKeys = getNative(Object, 'keys');\n\n/**\n * Creates an array of the own enumerable property names of `object`.\n *\n * **Note:** Non-object values are coerced to objects. See the\n * [ES spec](http://ecma-international.org/ecma-262/6.0/#sec-object.keys)\n * for more details.\n *\n * @static\n * @memberOf _\n * @category Object\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n *   this.b = 2;\n * }\n *\n * Foo.prototype.c = 3;\n *\n * _.keys(new Foo);\n * // => ['a', 'b'] (iteration order is not guaranteed)\n *\n * _.keys('hi');\n * // => ['0', '1']\n */\nvar keys = !nativeKeys ? shimKeys : function(object) {\n  var Ctor = object == null ? undefined : object.constructor;\n  if ((typeof Ctor == 'function' && Ctor.prototype === object) ||\n      (typeof object == 'function' ? support.enumPrototypes : isArrayLike(object))) {\n    return shimKeys(object);\n  }\n  return isObject(object) ? nativeKeys(object) : [];\n};\n\nmodule.exports = keys;\n\n},{\"../internal/getNative\":41,\"../internal/isArrayLike\":42,\"../internal/shimKeys\":48,\"../lang/isObject\":54,\"../support\":62}],60:[function(require,module,exports){\nvar arrayEach = require('../internal/arrayEach'),\n    isArguments = require('../lang/isArguments'),\n    isArray = require('../lang/isArray'),\n    isFunction = require('../lang/isFunction'),\n    isIndex = require('../internal/isIndex'),\n    isLength = require('../internal/isLength'),\n    isObject = require('../lang/isObject'),\n    isString = require('../lang/isString'),\n    support = require('../support');\n\n/** `Object#toString` result references. */\nvar arrayTag = '[object Array]',\n    boolTag = '[object Boolean]',\n    dateTag = '[object Date]',\n    errorTag = '[object Error]',\n    funcTag = '[object Function]',\n    numberTag = '[object Number]',\n    objectTag = '[object Object]',\n    regexpTag = '[object RegExp]',\n    stringTag = '[object String]';\n\n/** Used to fix the JScript `[[DontEnum]]` bug. */\nvar shadowProps = [\n  'constructor', 'hasOwnProperty', 'isPrototypeOf', 'propertyIsEnumerable',\n  'toLocaleString', 'toString', 'valueOf'\n];\n\n/** Used for native method references. */\nvar errorProto = Error.prototype,\n    objectProto = Object.prototype,\n    stringProto = String.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Used to resolve the [`toStringTag`](http://ecma-international.org/ecma-262/6.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar objToString = objectProto.toString;\n\n/** Used to avoid iterating over non-enumerable properties in IE < 9. */\nvar nonEnumProps = {};\nnonEnumProps[arrayTag] = nonEnumProps[dateTag] = nonEnumProps[numberTag] = { 'constructor': true, 'toLocaleString': true, 'toString': true, 'valueOf': true };\nnonEnumProps[boolTag] = nonEnumProps[stringTag] = { 'constructor': true, 'toString': true, 'valueOf': true };\nnonEnumProps[errorTag] = nonEnumProps[funcTag] = nonEnumProps[regexpTag] = { 'constructor': true, 'toString': true };\nnonEnumProps[objectTag] = { 'constructor': true };\n\narrayEach(shadowProps, function(key) {\n  for (var tag in nonEnumProps) {\n    if (hasOwnProperty.call(nonEnumProps, tag)) {\n      var props = nonEnumProps[tag];\n      props[key] = hasOwnProperty.call(props, key);\n    }\n  }\n});\n\n/**\n * Creates an array of the own and inherited enumerable property names of `object`.\n *\n * **Note:** Non-object values are coerced to objects.\n *\n * @static\n * @memberOf _\n * @category Object\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n *   this.b = 2;\n * }\n *\n * Foo.prototype.c = 3;\n *\n * _.keysIn(new Foo);\n * // => ['a', 'b', 'c'] (iteration order is not guaranteed)\n */\nfunction keysIn(object) {\n  if (object == null) {\n    return [];\n  }\n  if (!isObject(object)) {\n    object = Object(object);\n  }\n  var length = object.length;\n\n  length = (length && isLength(length) &&\n    (isArray(object) || isArguments(object) || isString(object)) && length) || 0;\n\n  var Ctor = object.constructor,\n      index = -1,\n      proto = (isFunction(Ctor) && Ctor.prototype) || objectProto,\n      isProto = proto === object,\n      result = Array(length),\n      skipIndexes = length > 0,\n      skipErrorProps = support.enumErrorProps && (object === errorProto || object instanceof Error),\n      skipProto = support.enumPrototypes && isFunction(object);\n\n  while (++index < length) {\n    result[index] = (index + '');\n  }\n  // lodash skips the `constructor` property when it infers it's iterating\n  // over a `prototype` object because IE < 9 can't set the `[[Enumerable]]`\n  // attribute of an existing property and the `constructor` property of a\n  // prototype defaults to non-enumerable.\n  for (var key in object) {\n    if (!(skipProto && key == 'prototype') &&\n        !(skipErrorProps && (key == 'message' || key == 'name')) &&\n        !(skipIndexes && isIndex(key, length)) &&\n        !(key == 'constructor' && (isProto || !hasOwnProperty.call(object, key)))) {\n      result.push(key);\n    }\n  }\n  if (support.nonEnumShadows && object !== objectProto) {\n    var tag = object === stringProto ? stringTag : (object === errorProto ? errorTag : objToString.call(object)),\n        nonEnums = nonEnumProps[tag] || nonEnumProps[objectTag];\n\n    if (tag == objectTag) {\n      proto = objectProto;\n    }\n    length = shadowProps.length;\n    while (length--) {\n      key = shadowProps[length];\n      var nonEnum = nonEnums[key];\n      if (!(isProto && nonEnum) &&\n          (nonEnum ? hasOwnProperty.call(object, key) : object[key] !== proto[key])) {\n        result.push(key);\n      }\n    }\n  }\n  return result;\n}\n\nmodule.exports = keysIn;\n\n},{\"../internal/arrayEach\":30,\"../internal/isIndex\":44,\"../internal/isLength\":46,\"../lang/isArguments\":50,\"../lang/isArray\":51,\"../lang/isFunction\":52,\"../lang/isObject\":54,\"../lang/isString\":56,\"../support\":62}],61:[function(require,module,exports){\nvar baseMerge = require('../internal/baseMerge'),\n    createAssigner = require('../internal/createAssigner');\n\n/**\n * Recursively merges own enumerable properties of the source object(s), that\n * don't resolve to `undefined` into the destination object. Subsequent sources\n * overwrite property assignments of previous sources. If `customizer` is\n * provided it's invoked to produce the merged values of the destination and\n * source properties. If `customizer` returns `undefined` merging is handled\n * by the method instead. The `customizer` is bound to `thisArg` and invoked\n * with five arguments: (objectValue, sourceValue, key, object, source).\n *\n * @static\n * @memberOf _\n * @category Object\n * @param {Object} object The destination object.\n * @param {...Object} [sources] The source objects.\n * @param {Function} [customizer] The function to customize assigned values.\n * @param {*} [thisArg] The `this` binding of `customizer`.\n * @returns {Object} Returns `object`.\n * @example\n *\n * var users = {\n *   'data': [{ 'user': 'barney' }, { 'user': 'fred' }]\n * };\n *\n * var ages = {\n *   'data': [{ 'age': 36 }, { 'age': 40 }]\n * };\n *\n * _.merge(users, ages);\n * // => { 'data': [{ 'user': 'barney', 'age': 36 }, { 'user': 'fred', 'age': 40 }] }\n *\n * // using a customizer callback\n * var object = {\n *   'fruits': ['apple'],\n *   'vegetables': ['beet']\n * };\n *\n * var other = {\n *   'fruits': ['banana'],\n *   'vegetables': ['carrot']\n * };\n *\n * _.merge(object, other, function(a, b) {\n *   if (_.isArray(a)) {\n *     return a.concat(b);\n *   }\n * });\n * // => { 'fruits': ['apple', 'banana'], 'vegetables': ['beet', 'carrot'] }\n */\nvar merge = createAssigner(baseMerge);\n\nmodule.exports = merge;\n\n},{\"../internal/baseMerge\":34,\"../internal/createAssigner\":38}],62:[function(require,module,exports){\n/** Used for native method references. */\nvar arrayProto = Array.prototype,\n    errorProto = Error.prototype,\n    objectProto = Object.prototype;\n\n/** Native method references. */\nvar propertyIsEnumerable = objectProto.propertyIsEnumerable,\n    splice = arrayProto.splice;\n\n/**\n * An object environment feature flags.\n *\n * @static\n * @memberOf _\n * @type Object\n */\nvar support = {};\n\n(function(x) {\n  var Ctor = function() { this.x = x; },\n      object = { '0': x, 'length': x },\n      props = [];\n\n  Ctor.prototype = { 'valueOf': x, 'y': x };\n  for (var key in new Ctor) { props.push(key); }\n\n  /**\n   * Detect if `name` or `message` properties of `Error.prototype` are\n   * enumerable by default (IE < 9, Safari < 5.1).\n   *\n   * @memberOf _.support\n   * @type boolean\n   */\n  support.enumErrorProps = propertyIsEnumerable.call(errorProto, 'message') ||\n    propertyIsEnumerable.call(errorProto, 'name');\n\n  /**\n   * Detect if `prototype` properties are enumerable by default.\n   *\n   * Firefox < 3.6, Opera > 9.50 - Opera < 11.60, and Safari < 5.1\n   * (if the prototype or a property on the prototype has been set)\n   * incorrectly set the `[[Enumerable]]` value of a function's `prototype`\n   * property to `true`.\n   *\n   * @memberOf _.support\n   * @type boolean\n   */\n  support.enumPrototypes = propertyIsEnumerable.call(Ctor, 'prototype');\n\n  /**\n   * Detect if properties shadowing those on `Object.prototype` are non-enumerable.\n   *\n   * In IE < 9 an object's own properties, shadowing non-enumerable ones,\n   * are made non-enumerable as well (a.k.a the JScript `[[DontEnum]]` bug).\n   *\n   * @memberOf _.support\n   * @type boolean\n   */\n  support.nonEnumShadows = !/valueOf/.test(props);\n\n  /**\n   * Detect if own properties are iterated after inherited properties (IE < 9).\n   *\n   * @memberOf _.support\n   * @type boolean\n   */\n  support.ownLast = props[0] != 'x';\n\n  /**\n   * Detect if `Array#shift` and `Array#splice` augment array-like objects\n   * correctly.\n   *\n   * Firefox < 10, compatibility modes of IE 8, and IE < 9 have buggy Array\n   * `shift()` and `splice()` functions that fail to remove the last element,\n   * `value[0]`, of array-like objects even though the \"length\" property is\n   * set to `0`. The `shift()` method is buggy in compatibility modes of IE 8,\n   * while `splice()` is buggy regardless of mode in IE < 9.\n   *\n   * @memberOf _.support\n   * @type boolean\n   */\n  support.spliceObjects = (splice.call(object, 0, 1), !object[0]);\n\n  /**\n   * Detect lack of support for accessing string characters by index.\n   *\n   * IE < 8 can't access characters by index. IE 8 can only access characters\n   * by index on string literals, not string objects.\n   *\n   * @memberOf _.support\n   * @type boolean\n   */\n  support.unindexedChars = ('x'[0] + Object('x')[0]) != 'xx';\n}(1, 0));\n\nmodule.exports = support;\n\n},{}],63:[function(require,module,exports){\n/**\n * This method returns the first argument provided to it.\n *\n * @static\n * @memberOf _\n * @category Utility\n * @param {*} value Any value.\n * @returns {*} Returns `value`.\n * @example\n *\n * var object = { 'user': 'fred' };\n *\n * _.identity(object) === object;\n * // => true\n */\nfunction identity(value) {\n  return value;\n}\n\nmodule.exports = identity;\n\n},{}],64:[function(require,module,exports){\n/**\n * @file m3u8/index.js\n *\n * Utilities for parsing M3U8 files. If the entire manifest is available,\n * `Parser` will create an object representation with enough detail for managing\n * playback. `ParseStream` and `LineStream` are lower-level parsing primitives\n * that do not assume the entirety of the manifest is ready and expose a\n * ReadableStream-like interface.\n */\n\n'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nvar _lineStream = require('./line-stream');\n\nvar _lineStream2 = _interopRequireDefault(_lineStream);\n\nvar _parseStream = require('./parse-stream');\n\nvar _parseStream2 = _interopRequireDefault(_parseStream);\n\nvar _parser = require('./parser');\n\nvar _parser2 = _interopRequireDefault(_parser);\n\nexports['default'] = {\n  LineStream: _lineStream2['default'],\n  ParseStream: _parseStream2['default'],\n  Parser: _parser2['default']\n};\nmodule.exports = exports['default'];\n},{\"./line-stream\":65,\"./parse-stream\":66,\"./parser\":67}],65:[function(require,module,exports){\n/**\n * @file m3u8/line-stream.js\n */\n'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\n\nvar _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();\n\nvar _get = function get(_x, _x2, _x3) { var _again = true; _function: while (_again) { var object = _x, property = _x2, receiver = _x3; _again = false; if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { _x = parent; _x2 = property; _x3 = receiver; _again = true; desc = parent = undefined; continue _function; } } else if ('value' in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } } };\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== 'function' && superClass !== null) { throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar _stream = require('./stream');\n\nvar _stream2 = _interopRequireDefault(_stream);\n\n/**\n * A stream that buffers string input and generates a `data` event for each\n * line.\n *\n * @class LineStream\n * @extends Stream\n */\n\nvar LineStream = (function (_Stream) {\n  _inherits(LineStream, _Stream);\n\n  function LineStream() {\n    _classCallCheck(this, LineStream);\n\n    _get(Object.getPrototypeOf(LineStream.prototype), 'constructor', this).call(this);\n    this.buffer = '';\n  }\n\n  /**\n   * Add new data to be parsed.\n   *\n   * @param {String} data the text to process\n   */\n\n  _createClass(LineStream, [{\n    key: 'push',\n    value: function push(data) {\n      var nextNewline = undefined;\n\n      this.buffer += data;\n      nextNewline = this.buffer.indexOf('\\n');\n\n      for (; nextNewline > -1; nextNewline = this.buffer.indexOf('\\n')) {\n        this.trigger('data', this.buffer.substring(0, nextNewline));\n        this.buffer = this.buffer.substring(nextNewline + 1);\n      }\n    }\n  }]);\n\n  return LineStream;\n})(_stream2['default']);\n\nexports['default'] = LineStream;\nmodule.exports = exports['default'];\n},{\"./stream\":68}],66:[function(require,module,exports){\n/**\n * @file m3u8/parse-stream.js\n */\n'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\n\nvar _slicedToArray = (function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i['return']) _i['return'](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError('Invalid attempt to destructure non-iterable instance'); } }; })();\n\nvar _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();\n\nvar _get = function get(_x, _x2, _x3) { var _again = true; _function: while (_again) { var object = _x, property = _x2, receiver = _x3; _again = false; if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { _x = parent; _x2 = property; _x3 = receiver; _again = true; desc = parent = undefined; continue _function; } } else if ('value' in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } } };\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== 'function' && superClass !== null) { throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar _stream = require('./stream');\n\nvar _stream2 = _interopRequireDefault(_stream);\n\n/**\n * \"forgiving\" attribute list psuedo-grammar:\n * attributes -> keyvalue (',' keyvalue)*\n * keyvalue   -> key '=' value\n * key        -> [^=]*\n * value      -> '\"' [^\"]* '\"' | [^,]*\n */\nvar attributeSeparator = function attributeSeparator() {\n  var key = '[^=]*';\n  var value = '\"[^\"]*\"|[^,]*';\n  var keyvalue = '(?:' + key + ')=(?:' + value + ')';\n\n  return new RegExp('(?:^|,)(' + keyvalue + ')');\n};\n\n/**\n * Parse attributes from a line given the seperator\n *\n * @param {String} attributes the attibute line to parse\n */\nvar parseAttributes = function parseAttributes(attributes) {\n  // split the string using attributes as the separator\n  var attrs = attributes.split(attributeSeparator());\n  var i = attrs.length;\n  var result = {};\n  var attr = undefined;\n\n  while (i--) {\n    // filter out unmatched portions of the string\n    if (attrs[i] === '') {\n      continue;\n    }\n\n    // split the key and value\n    attr = /([^=]*)=(.*)/.exec(attrs[i]).slice(1);\n    // trim whitespace and remove optional quotes around the value\n    attr[0] = attr[0].replace(/^\\s+|\\s+$/g, '');\n    attr[1] = attr[1].replace(/^\\s+|\\s+$/g, '');\n    attr[1] = attr[1].replace(/^['\"](.*)['\"]$/g, '$1');\n    result[attr[0]] = attr[1];\n  }\n  return result;\n};\n\n/**\n * A line-level M3U8 parser event stream. It expects to receive input one\n * line at a time and performs a context-free parse of its contents. A stream\n * interpretation of a manifest can be useful if the manifest is expected to\n * be too large to fit comfortably into memory or the entirety of the input\n * is not immediately available. Otherwise, it's probably much easier to work\n * with a regular `Parser` object.\n *\n * Produces `data` events with an object that captures the parser's\n * interpretation of the input. That object has a property `tag` that is one\n * of `uri`, `comment`, or `tag`. URIs only have a single additional\n * property, `line`, which captures the entirety of the input without\n * interpretation. Comments similarly have a single additional property\n * `text` which is the input without the leading `#`.\n *\n * Tags always have a property `tagType` which is the lower-cased version of\n * the M3U8 directive without the `#EXT` or `#EXT-X-` prefix. For instance,\n * `#EXT-X-MEDIA-SEQUENCE` becomes `media-sequence` when parsed. Unrecognized\n * tags are given the tag type `unknown` and a single additional property\n * `data` with the remainder of the input.\n *\n * @class ParseStream\n * @extends Stream\n */\n\nvar ParseStream = (function (_Stream) {\n  _inherits(ParseStream, _Stream);\n\n  function ParseStream() {\n    _classCallCheck(this, ParseStream);\n\n    _get(Object.getPrototypeOf(ParseStream.prototype), 'constructor', this).call(this);\n  }\n\n  /**\n   * Parses an additional line of input.\n   *\n   * @param {String} line a single line of an M3U8 file to parse\n   */\n\n  _createClass(ParseStream, [{\n    key: 'push',\n    value: function push(line) {\n      var match = undefined;\n      var event = undefined;\n\n      // strip whitespace\n      line = line.replace(/^[\\u0000\\s]+|[\\u0000\\s]+$/g, '');\n      if (line.length === 0) {\n        // ignore empty lines\n        return;\n      }\n\n      // URIs\n      if (line[0] !== '#') {\n        this.trigger('data', {\n          type: 'uri',\n          uri: line\n        });\n        return;\n      }\n\n      // Comments\n      if (line.indexOf('#EXT') !== 0) {\n        this.trigger('data', {\n          type: 'comment',\n          text: line.slice(1)\n        });\n        return;\n      }\n\n      // strip off any carriage returns here so the regex matching\n      // doesn't have to account for them.\n      line = line.replace('\\r', '');\n\n      // Tags\n      match = /^#EXTM3U/.exec(line);\n      if (match) {\n        this.trigger('data', {\n          type: 'tag',\n          tagType: 'm3u'\n        });\n        return;\n      }\n      match = /^#EXTINF:?([0-9\\.]*)?,?(.*)?$/.exec(line);\n      if (match) {\n        event = {\n          type: 'tag',\n          tagType: 'inf'\n        };\n        if (match[1]) {\n          event.duration = parseFloat(match[1]);\n        }\n        if (match[2]) {\n          event.title = match[2];\n        }\n        this.trigger('data', event);\n        return;\n      }\n      match = /^#EXT-X-TARGETDURATION:?([0-9.]*)?/.exec(line);\n      if (match) {\n        event = {\n          type: 'tag',\n          tagType: 'targetduration'\n        };\n        if (match[1]) {\n          event.duration = parseInt(match[1], 10);\n        }\n        this.trigger('data', event);\n        return;\n      }\n      match = /^#ZEN-TOTAL-DURATION:?([0-9.]*)?/.exec(line);\n      if (match) {\n        event = {\n          type: 'tag',\n          tagType: 'totalduration'\n        };\n        if (match[1]) {\n          event.duration = parseInt(match[1], 10);\n        }\n        this.trigger('data', event);\n        return;\n      }\n      match = /^#EXT-X-VERSION:?([0-9.]*)?/.exec(line);\n      if (match) {\n        event = {\n          type: 'tag',\n          tagType: 'version'\n        };\n        if (match[1]) {\n          event.version = parseInt(match[1], 10);\n        }\n        this.trigger('data', event);\n        return;\n      }\n      match = /^#EXT-X-MEDIA-SEQUENCE:?(\\-?[0-9.]*)?/.exec(line);\n      if (match) {\n        event = {\n          type: 'tag',\n          tagType: 'media-sequence'\n        };\n        if (match[1]) {\n          event.number = parseInt(match[1], 10);\n        }\n        this.trigger('data', event);\n        return;\n      }\n      match = /^#EXT-X-DISCONTINUITY-SEQUENCE:?(\\-?[0-9.]*)?/.exec(line);\n      if (match) {\n        event = {\n          type: 'tag',\n          tagType: 'discontinuity-sequence'\n        };\n        if (match[1]) {\n          event.number = parseInt(match[1], 10);\n        }\n        this.trigger('data', event);\n        return;\n      }\n      match = /^#EXT-X-PLAYLIST-TYPE:?(.*)?$/.exec(line);\n      if (match) {\n        event = {\n          type: 'tag',\n          tagType: 'playlist-type'\n        };\n        if (match[1]) {\n          event.playlistType = match[1];\n        }\n        this.trigger('data', event);\n        return;\n      }\n      match = /^#EXT-X-BYTERANGE:?([0-9.]*)?@?([0-9.]*)?/.exec(line);\n      if (match) {\n        event = {\n          type: 'tag',\n          tagType: 'byterange'\n        };\n        if (match[1]) {\n          event.length = parseInt(match[1], 10);\n        }\n        if (match[2]) {\n          event.offset = parseInt(match[2], 10);\n        }\n        this.trigger('data', event);\n        return;\n      }\n      match = /^#EXT-X-ALLOW-CACHE:?(YES|NO)?/.exec(line);\n      if (match) {\n        event = {\n          type: 'tag',\n          tagType: 'allow-cache'\n        };\n        if (match[1]) {\n          event.allowed = !/NO/.test(match[1]);\n        }\n        this.trigger('data', event);\n        return;\n      }\n      match = /^#EXT-X-MAP:?(.*)$/.exec(line);\n      if (match) {\n        event = {\n          type: 'tag',\n          tagType: 'map'\n        };\n\n        if (match[1]) {\n          var attributes = parseAttributes(match[1]);\n\n          if (attributes.URI) {\n            event.uri = attributes.URI;\n          }\n          if (attributes.BYTERANGE) {\n            var _attributes$BYTERANGE$split = attributes.BYTERANGE.split('@');\n\n            var _attributes$BYTERANGE$split2 = _slicedToArray(_attributes$BYTERANGE$split, 2);\n\n            var _length = _attributes$BYTERANGE$split2[0];\n            var offset = _attributes$BYTERANGE$split2[1];\n\n            event.byterange = {};\n            if (_length) {\n              event.byterange.length = parseInt(_length, 10);\n            }\n            if (offset) {\n              event.byterange.offset = parseInt(offset, 10);\n            }\n          }\n        }\n\n        this.trigger('data', event);\n        return;\n      }\n      match = /^#EXT-X-STREAM-INF:?(.*)$/.exec(line);\n      if (match) {\n        event = {\n          type: 'tag',\n          tagType: 'stream-inf'\n        };\n        if (match[1]) {\n          event.attributes = parseAttributes(match[1]);\n\n          if (event.attributes.RESOLUTION) {\n            var split = event.attributes.RESOLUTION.split('x');\n            var resolution = {};\n\n            if (split[0]) {\n              resolution.width = parseInt(split[0], 10);\n            }\n            if (split[1]) {\n              resolution.height = parseInt(split[1], 10);\n            }\n            event.attributes.RESOLUTION = resolution;\n          }\n          if (event.attributes.BANDWIDTH) {\n            event.attributes.BANDWIDTH = parseInt(event.attributes.BANDWIDTH, 10);\n          }\n          if (event.attributes['PROGRAM-ID']) {\n            event.attributes['PROGRAM-ID'] = parseInt(event.attributes['PROGRAM-ID'], 10);\n          }\n        }\n        this.trigger('data', event);\n        return;\n      }\n      match = /^#EXT-X-MEDIA:?(.*)$/.exec(line);\n      if (match) {\n        event = {\n          type: 'tag',\n          tagType: 'media'\n        };\n        if (match[1]) {\n          event.attributes = parseAttributes(match[1]);\n        }\n        this.trigger('data', event);\n        return;\n      }\n      match = /^#EXT-X-ENDLIST/.exec(line);\n      if (match) {\n        this.trigger('data', {\n          type: 'tag',\n          tagType: 'endlist'\n        });\n        return;\n      }\n      match = /^#EXT-X-DISCONTINUITY/.exec(line);\n      if (match) {\n        this.trigger('data', {\n          type: 'tag',\n          tagType: 'discontinuity'\n        });\n        return;\n      }\n      match = /^#EXT-X-PROGRAM-DATE-TIME:?(.*)$/.exec(line);\n      if (match) {\n        event = {\n          type: 'tag',\n          tagType: 'program-date-time'\n        };\n        if (match[1]) {\n          event.dateTimeString = match[1];\n          event.dateTimeObject = new Date(match[1]);\n        }\n        this.trigger('data', event);\n        return;\n      }\n      match = /^#EXT-X-KEY:?(.*)$/.exec(line);\n      if (match) {\n        event = {\n          type: 'tag',\n          tagType: 'key'\n        };\n        if (match[1]) {\n          event.attributes = parseAttributes(match[1]);\n          // parse the IV string into a Uint32Array\n          if (event.attributes.IV) {\n            if (event.attributes.IV.substring(0, 2).toLowerCase() === '0x') {\n              event.attributes.IV = event.attributes.IV.substring(2);\n            }\n\n            event.attributes.IV = event.attributes.IV.match(/.{8}/g);\n            event.attributes.IV[0] = parseInt(event.attributes.IV[0], 16);\n            event.attributes.IV[1] = parseInt(event.attributes.IV[1], 16);\n            event.attributes.IV[2] = parseInt(event.attributes.IV[2], 16);\n            event.attributes.IV[3] = parseInt(event.attributes.IV[3], 16);\n            event.attributes.IV = new Uint32Array(event.attributes.IV);\n          }\n        }\n        this.trigger('data', event);\n        return;\n      }\n      match = /^#EXT-X-CUE-OUT-CONT:?(.*)?$/.exec(line);\n      if (match) {\n        event = {\n          type: 'tag',\n          tagType: 'cue-out-cont'\n        };\n        if (match[1]) {\n          event.data = match[1];\n        } else {\n          event.data = '';\n        }\n        this.trigger('data', event);\n        return;\n      }\n      match = /^#EXT-X-CUE-OUT:?(.*)?$/.exec(line);\n      if (match) {\n        event = {\n          type: 'tag',\n          tagType: 'cue-out'\n        };\n        if (match[1]) {\n          event.data = match[1];\n        } else {\n          event.data = '';\n        }\n        this.trigger('data', event);\n        return;\n      }\n      match = /^#EXT-X-CUE-IN:?(.*)?$/.exec(line);\n      if (match) {\n        event = {\n          type: 'tag',\n          tagType: 'cue-in'\n        };\n        if (match[1]) {\n          event.data = match[1];\n        } else {\n          event.data = '';\n        }\n        this.trigger('data', event);\n        return;\n      }\n\n      // unknown tag type\n      this.trigger('data', {\n        type: 'tag',\n        data: line.slice(4)\n      });\n    }\n  }]);\n\n  return ParseStream;\n})(_stream2['default']);\n\nexports['default'] = ParseStream;\nmodule.exports = exports['default'];\n},{\"./stream\":68}],67:[function(require,module,exports){\n/**\n * @file m3u8/parser.js\n */\n'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\n\nvar _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();\n\nvar _get = function get(_x, _x2, _x3) { var _again = true; _function: while (_again) { var object = _x, property = _x2, receiver = _x3; _again = false; if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { _x = parent; _x2 = property; _x3 = receiver; _again = true; desc = parent = undefined; continue _function; } } else if ('value' in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } } };\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== 'function' && superClass !== null) { throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar _stream = require('./stream');\n\nvar _stream2 = _interopRequireDefault(_stream);\n\nvar _lineStream = require('./line-stream');\n\nvar _lineStream2 = _interopRequireDefault(_lineStream);\n\nvar _parseStream = require('./parse-stream');\n\nvar _parseStream2 = _interopRequireDefault(_parseStream);\n\nvar _lodashCompatObjectMerge = require('lodash-compat/object/merge');\n\nvar _lodashCompatObjectMerge2 = _interopRequireDefault(_lodashCompatObjectMerge);\n\n/**\n * A parser for M3U8 files. The current interpretation of the input is\n * exposed as a property `manifest` on parser objects. It's just two lines to\n * create and parse a manifest once you have the contents available as a string:\n *\n * ```js\n * var parser = new m3u8.Parser();\n * parser.push(xhr.responseText);\n * ```\n *\n * New input can later be applied to update the manifest object by calling\n * `push` again.\n *\n * The parser attempts to create a usable manifest object even if the\n * underlying input is somewhat nonsensical. It emits `info` and `warning`\n * events during the parse if it encounters input that seems invalid or\n * requires some property of the manifest object to be defaulted.\n *\n * @class Parser\n * @extends Stream\n */\n\nvar Parser = (function (_Stream) {\n  _inherits(Parser, _Stream);\n\n  function Parser() {\n    _classCallCheck(this, Parser);\n\n    _get(Object.getPrototypeOf(Parser.prototype), 'constructor', this).call(this);\n    this.lineStream = new _lineStream2['default']();\n    this.parseStream = new _parseStream2['default']();\n    this.lineStream.pipe(this.parseStream);\n    /* eslint-disable consistent-this */\n    var self = this;\n    /* eslint-enable consistent-this */\n    var uris = [];\n    var currentUri = {};\n    // if specified, the active EXT-X-MAP definition\n    var currentMap = undefined;\n    // if specified, the active decryption key\n    var _key = undefined;\n    var noop = function noop() {};\n    var defaultMediaGroups = {\n      'AUDIO': {},\n      'VIDEO': {},\n      'CLOSED-CAPTIONS': {},\n      'SUBTITLES': {}\n    };\n    // group segments into numbered timelines delineated by discontinuities\n    var currentTimeline = 0;\n\n    // the manifest is empty until the parse stream begins delivering data\n    this.manifest = {\n      allowCache: true,\n      discontinuityStarts: []\n    };\n\n    // update the manifest with the m3u8 entry from the parse stream\n    this.parseStream.on('data', function (entry) {\n      var mediaGroup = undefined;\n      var rendition = undefined;\n\n      ({\n        tag: function tag() {\n          // switch based on the tag type\n          (({\n            'allow-cache': function allowCache() {\n              this.manifest.allowCache = entry.allowed;\n              if (!('allowed' in entry)) {\n                this.trigger('info', {\n                  message: 'defaulting allowCache to YES'\n                });\n                this.manifest.allowCache = true;\n              }\n            },\n            byterange: function byterange() {\n              var byterange = {};\n\n              if ('length' in entry) {\n                currentUri.byterange = byterange;\n                byterange.length = entry.length;\n\n                if (!('offset' in entry)) {\n                  this.trigger('info', {\n                    message: 'defaulting offset to zero'\n                  });\n                  entry.offset = 0;\n                }\n              }\n              if ('offset' in entry) {\n                currentUri.byterange = byterange;\n                byterange.offset = entry.offset;\n              }\n            },\n            endlist: function endlist() {\n              this.manifest.endList = true;\n            },\n            inf: function inf() {\n              if (!('mediaSequence' in this.manifest)) {\n                this.manifest.mediaSequence = 0;\n                this.trigger('info', {\n                  message: 'defaulting media sequence to zero'\n                });\n              }\n              if (!('discontinuitySequence' in this.manifest)) {\n                this.manifest.discontinuitySequence = 0;\n                this.trigger('info', {\n                  message: 'defaulting discontinuity sequence to zero'\n                });\n              }\n              if (entry.duration > 0) {\n                currentUri.duration = entry.duration;\n              }\n\n              if (entry.duration === 0) {\n                currentUri.duration = 0.01;\n                this.trigger('info', {\n                  message: 'updating zero segment duration to a small value'\n                });\n              }\n\n              this.manifest.segments = uris;\n            },\n            key: function key() {\n              if (!entry.attributes) {\n                this.trigger('warn', {\n                  message: 'ignoring key declaration without attribute list'\n                });\n                return;\n              }\n              // clear the active encryption key\n              if (entry.attributes.METHOD === 'NONE') {\n                _key = null;\n                return;\n              }\n              if (!entry.attributes.URI) {\n                this.trigger('warn', {\n                  message: 'ignoring key declaration without URI'\n                });\n                return;\n              }\n              if (!entry.attributes.METHOD) {\n                this.trigger('warn', {\n                  message: 'defaulting key method to AES-128'\n                });\n              }\n\n              // setup an encryption key for upcoming segments\n              _key = {\n                method: entry.attributes.METHOD || 'AES-128',\n                uri: entry.attributes.URI\n              };\n\n              if (typeof entry.attributes.IV !== 'undefined') {\n                _key.iv = entry.attributes.IV;\n              }\n            },\n            'media-sequence': function mediaSequence() {\n              if (!isFinite(entry.number)) {\n                this.trigger('warn', {\n                  message: 'ignoring invalid media sequence: ' + entry.number\n                });\n                return;\n              }\n              this.manifest.mediaSequence = entry.number;\n            },\n            'discontinuity-sequence': function discontinuitySequence() {\n              if (!isFinite(entry.number)) {\n                this.trigger('warn', {\n                  message: 'ignoring invalid discontinuity sequence: ' + entry.number\n                });\n                return;\n              }\n              this.manifest.discontinuitySequence = entry.number;\n              currentTimeline = entry.number;\n            },\n            'playlist-type': function playlistType() {\n              if (!/VOD|EVENT/.test(entry.playlistType)) {\n                this.trigger('warn', {\n                  message: 'ignoring unknown playlist type: ' + entry.playlist\n                });\n                return;\n              }\n              this.manifest.playlistType = entry.playlistType;\n            },\n            map: function map() {\n              currentMap = {};\n              if (entry.uri) {\n                currentMap.uri = entry.uri;\n              }\n              if (entry.byterange) {\n                currentMap.byterange = entry.byterange;\n              }\n            },\n            'stream-inf': function streamInf() {\n              this.manifest.playlists = uris;\n              this.manifest.mediaGroups = this.manifest.mediaGroups || defaultMediaGroups;\n\n              if (!entry.attributes) {\n                this.trigger('warn', {\n                  message: 'ignoring empty stream-inf attributes'\n                });\n                return;\n              }\n\n              if (!currentUri.attributes) {\n                currentUri.attributes = {};\n              }\n              currentUri.attributes = (0, _lodashCompatObjectMerge2['default'])(currentUri.attributes, entry.attributes);\n            },\n            media: function media() {\n              this.manifest.mediaGroups = this.manifest.mediaGroups || defaultMediaGroups;\n\n              if (!(entry.attributes && entry.attributes.TYPE && entry.attributes['GROUP-ID'] && entry.attributes.NAME)) {\n                this.trigger('warn', {\n                  message: 'ignoring incomplete or missing media group'\n                });\n                return;\n              }\n\n              // find the media group, creating defaults as necessary\n              var mediaGroupType = this.manifest.mediaGroups[entry.attributes.TYPE];\n\n              mediaGroupType[entry.attributes['GROUP-ID']] = mediaGroupType[entry.attributes['GROUP-ID']] || {};\n              mediaGroup = mediaGroupType[entry.attributes['GROUP-ID']];\n\n              // collect the rendition metadata\n              rendition = {\n                'default': /yes/i.test(entry.attributes.DEFAULT)\n              };\n              if (rendition['default']) {\n                rendition.autoselect = true;\n              } else {\n                rendition.autoselect = /yes/i.test(entry.attributes.AUTOSELECT);\n              }\n              if (entry.attributes.LANGUAGE) {\n                rendition.language = entry.attributes.LANGUAGE;\n              }\n              if (entry.attributes.URI) {\n                rendition.uri = entry.attributes.URI;\n              }\n              if (entry.attributes['INSTREAM-ID']) {\n                rendition.instreamId = entry.attributes['INSTREAM-ID'];\n              }\n\n              // insert the new rendition\n              mediaGroup[entry.attributes.NAME] = rendition;\n            },\n            discontinuity: function discontinuity() {\n              currentTimeline += 1;\n              currentUri.discontinuity = true;\n              this.manifest.discontinuityStarts.push(uris.length);\n            },\n            'program-date-time': function programDateTime() {\n              this.manifest.dateTimeString = entry.dateTimeString;\n              this.manifest.dateTimeObject = entry.dateTimeObject;\n            },\n            targetduration: function targetduration() {\n              if (!isFinite(entry.duration) || entry.duration < 0) {\n                this.trigger('warn', {\n                  message: 'ignoring invalid target duration: ' + entry.duration\n                });\n                return;\n              }\n              this.manifest.targetDuration = entry.duration;\n            },\n            totalduration: function totalduration() {\n              if (!isFinite(entry.duration) || entry.duration < 0) {\n                this.trigger('warn', {\n                  message: 'ignoring invalid total duration: ' + entry.duration\n                });\n                return;\n              }\n              this.manifest.totalDuration = entry.duration;\n            },\n            'cue-out': function cueOut() {\n              currentUri.cueOut = entry.data;\n            },\n            'cue-out-cont': function cueOutCont() {\n              currentUri.cueOutCont = entry.data;\n            },\n            'cue-in': function cueIn() {\n              currentUri.cueIn = entry.data;\n            }\n          })[entry.tagType] || noop).call(self);\n        },\n        uri: function uri() {\n          currentUri.uri = entry.uri;\n          uris.push(currentUri);\n\n          // if no explicit duration was declared, use the target duration\n          if (this.manifest.targetDuration && !('duration' in currentUri)) {\n            this.trigger('warn', {\n              message: 'defaulting segment duration to the target duration'\n            });\n            currentUri.duration = this.manifest.targetDuration;\n          }\n          // annotate with encryption information, if necessary\n          if (_key) {\n            currentUri.key = _key;\n          }\n          currentUri.timeline = currentTimeline;\n          // annotate with initialization segment information, if necessary\n          if (currentMap) {\n            currentUri.map = currentMap;\n          }\n\n          // prepare for the next URI\n          currentUri = {};\n        },\n        comment: function comment() {\n          // comments are not important for playback\n        }\n      })[entry.type].call(self);\n    });\n  }\n\n  /**\n   * Parse the input string and update the manifest object.\n   *\n   * @param {String} chunk a potentially incomplete portion of the manifest\n   */\n\n  _createClass(Parser, [{\n    key: 'push',\n    value: function push(chunk) {\n      this.lineStream.push(chunk);\n    }\n\n    /**\n     * Flush any remaining input. This can be handy if the last line of an M3U8\n     * manifest did not contain a trailing newline but the file has been\n     * completely received.\n     */\n  }, {\n    key: 'end',\n    value: function end() {\n      // flush any buffered input\n      this.lineStream.push('\\n');\n    }\n  }]);\n\n  return Parser;\n})(_stream2['default']);\n\nexports['default'] = Parser;\nmodule.exports = exports['default'];\n},{\"./line-stream\":65,\"./parse-stream\":66,\"./stream\":68,\"lodash-compat/object/merge\":61}],68:[function(require,module,exports){\narguments[4][14][0].apply(exports,arguments)\n},{\"dup\":14}],69:[function(require,module,exports){\n/**\n * mux.js\n *\n * Copyright (c) 2016 Brightcove\n * All rights reserved.\n *\n * A stream-based aac to mp4 converter. This utility can be used to\n * deliver mp4s to a SourceBuffer on platforms that support native\n * Media Source Extensions.\n */\n'use strict';\nvar Stream = require('../utils/stream.js');\n\n// Constants\nvar AacStream;\n\n/**\n * Splits an incoming stream of binary data into ADTS and ID3 Frames.\n */\n\nAacStream = function() {\n  var\n    everything = new Uint8Array(),\n    timeStamp = 0;\n\n  AacStream.prototype.init.call(this);\n\n  this.setTimestamp = function(timestamp) {\n    timeStamp = timestamp;\n  };\n\n  this.parseId3TagSize = function(header, byteIndex) {\n    var\n      returnSize = (header[byteIndex + 6] << 21) |\n                   (header[byteIndex + 7] << 14) |\n                   (header[byteIndex + 8] << 7) |\n                   (header[byteIndex + 9]),\n      flags = header[byteIndex + 5],\n      footerPresent = (flags & 16) >> 4;\n\n    if (footerPresent) {\n      return returnSize + 20;\n    }\n    return returnSize + 10;\n  };\n\n  this.parseAdtsSize = function(header, byteIndex) {\n    var\n      lowThree = (header[byteIndex + 5] & 0xE0) >> 5,\n      middle = header[byteIndex + 4] << 3,\n      highTwo = header[byteIndex + 3] & 0x3 << 11;\n\n    return (highTwo | middle) | lowThree;\n  };\n\n  this.push = function(bytes) {\n    var\n      frameSize = 0,\n      byteIndex = 0,\n      bytesLeft,\n      chunk,\n      packet,\n      tempLength;\n\n    // If there are bytes remaining from the last segment, prepend them to the\n    // bytes that were pushed in\n    if (everything.length) {\n      tempLength = everything.length;\n      everything = new Uint8Array(bytes.byteLength + tempLength);\n      everything.set(everything.subarray(0, tempLength));\n      everything.set(bytes, tempLength);\n    } else {\n      everything = bytes;\n    }\n\n    while (everything.length - byteIndex >= 3) {\n      if ((everything[byteIndex] === 'I'.charCodeAt(0)) &&\n          (everything[byteIndex + 1] === 'D'.charCodeAt(0)) &&\n          (everything[byteIndex + 2] === '3'.charCodeAt(0))) {\n\n        // Exit early because we don't have enough to parse\n        // the ID3 tag header\n        if (everything.length - byteIndex < 10) {\n          break;\n        }\n\n        // check framesize\n        frameSize = this.parseId3TagSize(everything, byteIndex);\n\n        // Exit early if we don't have enough in the buffer\n        // to emit a full packet\n        if (frameSize > everything.length) {\n          break;\n        }\n        chunk = {\n          type: 'timed-metadata',\n          data: everything.subarray(byteIndex, byteIndex + frameSize)\n        };\n        this.trigger('data', chunk);\n        byteIndex += frameSize;\n        continue;\n      } else if ((everything[byteIndex] & 0xff === 0xff) &&\n                 ((everything[byteIndex + 1] & 0xf0) === 0xf0)) {\n\n        // Exit early because we don't have enough to parse\n        // the ADTS frame header\n        if (everything.length - byteIndex < 7) {\n          break;\n        }\n\n        frameSize = this.parseAdtsSize(everything, byteIndex);\n\n        // Exit early if we don't have enough in the buffer\n        // to emit a full packet\n        if (frameSize > everything.length) {\n          break;\n        }\n\n        packet = {\n          type: 'audio',\n          data: everything.subarray(byteIndex, byteIndex + frameSize),\n          pts: timeStamp,\n          dts: timeStamp\n        };\n        this.trigger('data', packet);\n        byteIndex += frameSize;\n        continue;\n      }\n      byteIndex++;\n    }\n    bytesLeft = everything.length - byteIndex;\n\n    if (bytesLeft > 0) {\n      everything = everything.subarray(byteIndex);\n    } else {\n      everything = new Uint8Array();\n    }\n  };\n};\n\nAacStream.prototype = new Stream();\n\nmodule.exports = AacStream;\n\n},{\"../utils/stream.js\":89}],70:[function(require,module,exports){\n/**\n * mux.js\n *\n * Copyright (c) 2016 Brightcove\n * All rights reserved.\n *\n * Utilities to detect basic properties and metadata about Aac data.\n */\n'use strict';\n\nvar ADTS_SAMPLING_FREQUENCIES = [\n  96000,\n  88200,\n  64000,\n  48000,\n  44100,\n  32000,\n  24000,\n  22050,\n  16000,\n  12000,\n  11025,\n  8000,\n  7350\n];\n\nvar parseSyncSafeInteger = function(data) {\n  return (data[0] << 21) |\n          (data[1] << 14) |\n          (data[2] << 7) |\n          (data[3]);\n};\n\n// return a percent-encoded representation of the specified byte range\n// @see http://en.wikipedia.org/wiki/Percent-encoding\nvar percentEncode = function(bytes, start, end) {\n  var i, result = '';\n  for (i = start; i < end; i++) {\n    result += '%' + ('00' + bytes[i].toString(16)).slice(-2);\n  }\n  return result;\n};\n\n// return the string representation of the specified byte range,\n// interpreted as ISO-8859-1.\nvar parseIso88591 = function(bytes, start, end) {\n  return unescape(percentEncode(bytes, start, end)); // jshint ignore:line\n};\n\nvar parseId3TagSize = function(header, byteIndex) {\n  var\n    returnSize = (header[byteIndex + 6] << 21) |\n                 (header[byteIndex + 7] << 14) |\n                 (header[byteIndex + 8] << 7) |\n                 (header[byteIndex + 9]),\n    flags = header[byteIndex + 5],\n    footerPresent = (flags & 16) >> 4;\n\n  if (footerPresent) {\n    return returnSize + 20;\n  }\n  return returnSize + 10;\n};\n\nvar parseAdtsSize = function(header, byteIndex) {\n  var\n    lowThree = (header[byteIndex + 5] & 0xE0) >> 5,\n    middle = header[byteIndex + 4] << 3,\n    highTwo = header[byteIndex + 3] & 0x3 << 11;\n\n  return (highTwo | middle) | lowThree;\n};\n\nvar parseType = function(header, byteIndex) {\n  if ((header[byteIndex] === 'I'.charCodeAt(0)) &&\n      (header[byteIndex + 1] === 'D'.charCodeAt(0)) &&\n      (header[byteIndex + 2] === '3'.charCodeAt(0))) {\n    return 'timed-metadata';\n  } else if ((header[byteIndex] & 0xff === 0xff) &&\n             ((header[byteIndex + 1] & 0xf0) === 0xf0)) {\n    return 'audio';\n  }\n  return null;\n};\n\nvar parseSampleRate = function(packet) {\n  var i = 0;\n\n  while (i + 5 < packet.length) {\n    if (packet[i] !== 0xFF || (packet[i + 1] & 0xF6) !== 0xF0) {\n      // If a valid header was not found,  jump one forward and attempt to\n      // find a valid ADTS header starting at the next byte\n      i++;\n      continue;\n    }\n    return ADTS_SAMPLING_FREQUENCIES[(packet[i + 2] & 0x3c) >>> 2];\n  }\n\n  return null;\n};\n\nvar parseAacTimestamp = function(packet) {\n  var frameStart, frameSize, frame, frameHeader;\n\n  // find the start of the first frame and the end of the tag\n  frameStart = 10;\n  if (packet[5] & 0x40) {\n    // advance the frame start past the extended header\n    frameStart += 4; // header size field\n    frameStart += parseSyncSafeInteger(packet.subarray(10, 14));\n  }\n\n  // parse one or more ID3 frames\n  // http://id3.org/id3v2.3.0#ID3v2_frame_overview\n  do {\n    // determine the number of bytes in this frame\n    frameSize = parseSyncSafeInteger(packet.subarray(frameStart + 4, frameStart + 8));\n    if (frameSize < 1) {\n      return null;\n    }\n    frameHeader = String.fromCharCode(packet[frameStart],\n                                      packet[frameStart + 1],\n                                      packet[frameStart + 2],\n                                      packet[frameStart + 3]);\n\n    if (frameHeader === 'PRIV') {\n      frame = packet.subarray(frameStart + 10, frameStart + frameSize + 10);\n\n      for (var i = 0; i < frame.byteLength; i++) {\n        if (frame[i] === 0) {\n          var owner = parseIso88591(frame, 0, i);\n          if (owner === 'com.apple.streaming.transportStreamTimestamp') {\n            var d = frame.subarray(i + 1);\n            var size = ((d[3] & 0x01)  << 30) |\n                       (d[4]  << 22) |\n                       (d[5] << 14) |\n                       (d[6] << 6) |\n                       (d[7] >>> 2);\n            size *= 4;\n            size += d[7] & 0x03;\n\n            return size;\n          }\n          break;\n        }\n      }\n    }\n\n    frameStart += 10; // advance past the frame header\n    frameStart += frameSize; // advance past the frame body\n  } while (frameStart < packet.byteLength);\n  return null;\n};\n\nmodule.exports = {\n  parseId3TagSize: parseId3TagSize,\n  parseAdtsSize: parseAdtsSize,\n  parseType: parseType,\n  parseSampleRate: parseSampleRate,\n  parseAacTimestamp: parseAacTimestamp\n};\n\n},{}],71:[function(require,module,exports){\n'use strict';\n\nvar Stream = require('../utils/stream.js');\n\nvar AdtsStream;\n\nvar\n  ADTS_SAMPLING_FREQUENCIES = [\n    96000,\n    88200,\n    64000,\n    48000,\n    44100,\n    32000,\n    24000,\n    22050,\n    16000,\n    12000,\n    11025,\n    8000,\n    7350\n  ];\n\n/*\n * Accepts a ElementaryStream and emits data events with parsed\n * AAC Audio Frames of the individual packets. Input audio in ADTS\n * format is unpacked and re-emitted as AAC frames.\n *\n * @see http://wiki.multimedia.cx/index.php?title=ADTS\n * @see http://wiki.multimedia.cx/?title=Understanding_AAC\n */\nAdtsStream = function() {\n  var buffer;\n\n  AdtsStream.prototype.init.call(this);\n\n  this.push = function(packet) {\n    var\n      i = 0,\n      frameNum = 0,\n      frameLength,\n      protectionSkipBytes,\n      frameEnd,\n      oldBuffer,\n      sampleCount,\n      adtsFrameDuration;\n\n    if (packet.type !== 'audio') {\n      // ignore non-audio data\n      return;\n    }\n\n    // Prepend any data in the buffer to the input data so that we can parse\n    // aac frames the cross a PES packet boundary\n    if (buffer) {\n      oldBuffer = buffer;\n      buffer = new Uint8Array(oldBuffer.byteLength + packet.data.byteLength);\n      buffer.set(oldBuffer);\n      buffer.set(packet.data, oldBuffer.byteLength);\n    } else {\n      buffer = packet.data;\n    }\n\n    // unpack any ADTS frames which have been fully received\n    // for details on the ADTS header, see http://wiki.multimedia.cx/index.php?title=ADTS\n    while (i + 5 < buffer.length) {\n\n      // Loook for the start of an ADTS header..\n      if (buffer[i] !== 0xFF || (buffer[i + 1] & 0xF6) !== 0xF0) {\n        // If a valid header was not found,  jump one forward and attempt to\n        // find a valid ADTS header starting at the next byte\n        i++;\n        continue;\n      }\n\n      // The protection skip bit tells us if we have 2 bytes of CRC data at the\n      // end of the ADTS header\n      protectionSkipBytes = (~buffer[i + 1] & 0x01) * 2;\n\n      // Frame length is a 13 bit integer starting 16 bits from the\n      // end of the sync sequence\n      frameLength = ((buffer[i + 3] & 0x03) << 11) |\n        (buffer[i + 4] << 3) |\n        ((buffer[i + 5] & 0xe0) >> 5);\n\n      sampleCount = ((buffer[i + 6] & 0x03) + 1) * 1024;\n      adtsFrameDuration = (sampleCount * 90000) /\n        ADTS_SAMPLING_FREQUENCIES[(buffer[i + 2] & 0x3c) >>> 2];\n\n      frameEnd = i + frameLength;\n\n      // If we don't have enough data to actually finish this ADTS frame, return\n      // and wait for more data\n      if (buffer.byteLength < frameEnd) {\n        return;\n      }\n\n      // Otherwise, deliver the complete AAC frame\n      this.trigger('data', {\n        pts: packet.pts + (frameNum * adtsFrameDuration),\n        dts: packet.dts + (frameNum * adtsFrameDuration),\n        sampleCount: sampleCount,\n        audioobjecttype: ((buffer[i + 2] >>> 6) & 0x03) + 1,\n        channelcount: ((buffer[i + 2] & 1) << 2) |\n          ((buffer[i + 3] & 0xc0) >>> 6),\n        samplerate: ADTS_SAMPLING_FREQUENCIES[(buffer[i + 2] & 0x3c) >>> 2],\n        samplingfrequencyindex: (buffer[i + 2] & 0x3c) >>> 2,\n        // assume ISO/IEC 14496-12 AudioSampleEntry default of 16\n        samplesize: 16,\n        data: buffer.subarray(i + 7 + protectionSkipBytes, frameEnd)\n      });\n\n      // If the buffer is empty, clear it and return\n      if (buffer.byteLength === frameEnd) {\n        buffer = undefined;\n        return;\n      }\n\n      frameNum++;\n\n      // Remove the finished frame from the buffer and start the process again\n      buffer = buffer.subarray(frameEnd);\n    }\n  };\n  this.flush = function() {\n    this.trigger('done');\n  };\n};\n\nAdtsStream.prototype = new Stream();\n\nmodule.exports = AdtsStream;\n\n},{\"../utils/stream.js\":89}],72:[function(require,module,exports){\n'use strict';\n\nvar Stream = require('../utils/stream.js');\nvar ExpGolomb = require('../utils/exp-golomb.js');\n\nvar H264Stream, NalByteStream;\nvar PROFILES_WITH_OPTIONAL_SPS_DATA;\n\n/**\n * Accepts a NAL unit byte stream and unpacks the embedded NAL units.\n */\nNalByteStream = function() {\n  var\n    syncPoint = 0,\n    i,\n    buffer;\n  NalByteStream.prototype.init.call(this);\n\n  this.push = function(data) {\n    var swapBuffer;\n\n    if (!buffer) {\n      buffer = data.data;\n    } else {\n      swapBuffer = new Uint8Array(buffer.byteLength + data.data.byteLength);\n      swapBuffer.set(buffer);\n      swapBuffer.set(data.data, buffer.byteLength);\n      buffer = swapBuffer;\n    }\n\n    // Rec. ITU-T H.264, Annex B\n    // scan for NAL unit boundaries\n\n    // a match looks like this:\n    // 0 0 1 .. NAL .. 0 0 1\n    // ^ sync point        ^ i\n    // or this:\n    // 0 0 1 .. NAL .. 0 0 0\n    // ^ sync point        ^ i\n\n    // advance the sync point to a NAL start, if necessary\n    for (; syncPoint < buffer.byteLength - 3; syncPoint++) {\n      if (buffer[syncPoint + 2] === 1) {\n        // the sync point is properly aligned\n        i = syncPoint + 5;\n        break;\n      }\n    }\n\n    while (i < buffer.byteLength) {\n      // look at the current byte to determine if we've hit the end of\n      // a NAL unit boundary\n      switch (buffer[i]) {\n      case 0:\n        // skip past non-sync sequences\n        if (buffer[i - 1] !== 0) {\n          i += 2;\n          break;\n        } else if (buffer[i - 2] !== 0) {\n          i++;\n          break;\n        }\n\n        // deliver the NAL unit if it isn't empty\n        if (syncPoint + 3 !== i - 2) {\n          this.trigger('data', buffer.subarray(syncPoint + 3, i - 2));\n        }\n\n        // drop trailing zeroes\n        do {\n          i++;\n        } while (buffer[i] !== 1 && i < buffer.length);\n        syncPoint = i - 2;\n        i += 3;\n        break;\n      case 1:\n        // skip past non-sync sequences\n        if (buffer[i - 1] !== 0 ||\n            buffer[i - 2] !== 0) {\n          i += 3;\n          break;\n        }\n\n        // deliver the NAL unit\n        this.trigger('data', buffer.subarray(syncPoint + 3, i - 2));\n        syncPoint = i - 2;\n        i += 3;\n        break;\n      default:\n        // the current byte isn't a one or zero, so it cannot be part\n        // of a sync sequence\n        i += 3;\n        break;\n      }\n    }\n    // filter out the NAL units that were delivered\n    buffer = buffer.subarray(syncPoint);\n    i -= syncPoint;\n    syncPoint = 0;\n  };\n\n  this.flush = function() {\n    // deliver the last buffered NAL unit\n    if (buffer && buffer.byteLength > 3) {\n      this.trigger('data', buffer.subarray(syncPoint + 3));\n    }\n    // reset the stream state\n    buffer = null;\n    syncPoint = 0;\n    this.trigger('done');\n  };\n};\nNalByteStream.prototype = new Stream();\n\n// values of profile_idc that indicate additional fields are included in the SPS\n// see Recommendation ITU-T H.264 (4/2013),\n// 7.3.2.1.1 Sequence parameter set data syntax\nPROFILES_WITH_OPTIONAL_SPS_DATA = {\n  100: true,\n  110: true,\n  122: true,\n  244: true,\n  44: true,\n  83: true,\n  86: true,\n  118: true,\n  128: true,\n  138: true,\n  139: true,\n  134: true\n};\n\n/**\n * Accepts input from a ElementaryStream and produces H.264 NAL unit data\n * events.\n */\nH264Stream = function() {\n  var\n    nalByteStream = new NalByteStream(),\n    self,\n    trackId,\n    currentPts,\n    currentDts,\n\n    discardEmulationPreventionBytes,\n    readSequenceParameterSet,\n    skipScalingList;\n\n  H264Stream.prototype.init.call(this);\n  self = this;\n\n  this.push = function(packet) {\n    if (packet.type !== 'video') {\n      return;\n    }\n    trackId = packet.trackId;\n    currentPts = packet.pts;\n    currentDts = packet.dts;\n\n    nalByteStream.push(packet);\n  };\n\n  nalByteStream.on('data', function(data) {\n    var\n      event = {\n        trackId: trackId,\n        pts: currentPts,\n        dts: currentDts,\n        data: data\n      };\n\n    switch (data[0] & 0x1f) {\n    case 0x05:\n      event.nalUnitType = 'slice_layer_without_partitioning_rbsp_idr';\n      break;\n    case 0x06:\n      event.nalUnitType = 'sei_rbsp';\n      event.escapedRBSP = discardEmulationPreventionBytes(data.subarray(1));\n      break;\n    case 0x07:\n      event.nalUnitType = 'seq_parameter_set_rbsp';\n      event.escapedRBSP = discardEmulationPreventionBytes(data.subarray(1));\n      event.config = readSequenceParameterSet(event.escapedRBSP);\n      break;\n    case 0x08:\n      event.nalUnitType = 'pic_parameter_set_rbsp';\n      break;\n    case 0x09:\n      event.nalUnitType = 'access_unit_delimiter_rbsp';\n      break;\n\n    default:\n      break;\n    }\n    self.trigger('data', event);\n  });\n  nalByteStream.on('done', function() {\n    self.trigger('done');\n  });\n\n  this.flush = function() {\n    nalByteStream.flush();\n  };\n\n  /**\n   * Advance the ExpGolomb decoder past a scaling list. The scaling\n   * list is optionally transmitted as part of a sequence parameter\n   * set and is not relevant to transmuxing.\n   * @param count {number} the number of entries in this scaling list\n   * @param expGolombDecoder {object} an ExpGolomb pointed to the\n   * start of a scaling list\n   * @see Recommendation ITU-T H.264, Section 7.3.2.1.1.1\n   */\n  skipScalingList = function(count, expGolombDecoder) {\n    var\n      lastScale = 8,\n      nextScale = 8,\n      j,\n      deltaScale;\n\n    for (j = 0; j < count; j++) {\n      if (nextScale !== 0) {\n        deltaScale = expGolombDecoder.readExpGolomb();\n        nextScale = (lastScale + deltaScale + 256) % 256;\n      }\n\n      lastScale = (nextScale === 0) ? lastScale : nextScale;\n    }\n  };\n\n  /**\n   * Expunge any \"Emulation Prevention\" bytes from a \"Raw Byte\n   * Sequence Payload\"\n   * @param data {Uint8Array} the bytes of a RBSP from a NAL\n   * unit\n   * @return {Uint8Array} the RBSP without any Emulation\n   * Prevention Bytes\n   */\n  discardEmulationPreventionBytes = function(data) {\n    var\n      length = data.byteLength,\n      emulationPreventionBytesPositions = [],\n      i = 1,\n      newLength, newData;\n\n    // Find all `Emulation Prevention Bytes`\n    while (i < length - 2) {\n      if (data[i] === 0 && data[i + 1] === 0 && data[i + 2] === 0x03) {\n        emulationPreventionBytesPositions.push(i + 2);\n        i += 2;\n      } else {\n        i++;\n      }\n    }\n\n    // If no Emulation Prevention Bytes were found just return the original\n    // array\n    if (emulationPreventionBytesPositions.length === 0) {\n      return data;\n    }\n\n    // Create a new array to hold the NAL unit data\n    newLength = length - emulationPreventionBytesPositions.length;\n    newData = new Uint8Array(newLength);\n    var sourceIndex = 0;\n\n    for (i = 0; i < newLength; sourceIndex++, i++) {\n      if (sourceIndex === emulationPreventionBytesPositions[0]) {\n        // Skip this byte\n        sourceIndex++;\n        // Remove this position index\n        emulationPreventionBytesPositions.shift();\n      }\n      newData[i] = data[sourceIndex];\n    }\n\n    return newData;\n  };\n\n  /**\n   * Read a sequence parameter set and return some interesting video\n   * properties. A sequence parameter set is the H264 metadata that\n   * describes the properties of upcoming video frames.\n   * @param data {Uint8Array} the bytes of a sequence parameter set\n   * @return {object} an object with configuration parsed from the\n   * sequence parameter set, including the dimensions of the\n   * associated video frames.\n   */\n  readSequenceParameterSet = function(data) {\n    var\n      frameCropLeftOffset = 0,\n      frameCropRightOffset = 0,\n      frameCropTopOffset = 0,\n      frameCropBottomOffset = 0,\n      sarScale = 1,\n      expGolombDecoder, profileIdc, levelIdc, profileCompatibility,\n      chromaFormatIdc, picOrderCntType,\n      numRefFramesInPicOrderCntCycle, picWidthInMbsMinus1,\n      picHeightInMapUnitsMinus1,\n      frameMbsOnlyFlag,\n      scalingListCount,\n      sarRatio,\n      aspectRatioIdc,\n      i;\n\n    expGolombDecoder = new ExpGolomb(data);\n    profileIdc = expGolombDecoder.readUnsignedByte(); // profile_idc\n    profileCompatibility = expGolombDecoder.readUnsignedByte(); // constraint_set[0-5]_flag\n    levelIdc = expGolombDecoder.readUnsignedByte(); // level_idc u(8)\n    expGolombDecoder.skipUnsignedExpGolomb(); // seq_parameter_set_id\n\n    // some profiles have more optional data we don't need\n    if (PROFILES_WITH_OPTIONAL_SPS_DATA[profileIdc]) {\n      chromaFormatIdc = expGolombDecoder.readUnsignedExpGolomb();\n      if (chromaFormatIdc === 3) {\n        expGolombDecoder.skipBits(1); // separate_colour_plane_flag\n      }\n      expGolombDecoder.skipUnsignedExpGolomb(); // bit_depth_luma_minus8\n      expGolombDecoder.skipUnsignedExpGolomb(); // bit_depth_chroma_minus8\n      expGolombDecoder.skipBits(1); // qpprime_y_zero_transform_bypass_flag\n      if (expGolombDecoder.readBoolean()) { // seq_scaling_matrix_present_flag\n        scalingListCount = (chromaFormatIdc !== 3) ? 8 : 12;\n        for (i = 0; i < scalingListCount; i++) {\n          if (expGolombDecoder.readBoolean()) { // seq_scaling_list_present_flag[ i ]\n            if (i < 6) {\n              skipScalingList(16, expGolombDecoder);\n            } else {\n              skipScalingList(64, expGolombDecoder);\n            }\n          }\n        }\n      }\n    }\n\n    expGolombDecoder.skipUnsignedExpGolomb(); // log2_max_frame_num_minus4\n    picOrderCntType = expGolombDecoder.readUnsignedExpGolomb();\n\n    if (picOrderCntType === 0) {\n      expGolombDecoder.readUnsignedExpGolomb(); // log2_max_pic_order_cnt_lsb_minus4\n    } else if (picOrderCntType === 1) {\n      expGolombDecoder.skipBits(1); // delta_pic_order_always_zero_flag\n      expGolombDecoder.skipExpGolomb(); // offset_for_non_ref_pic\n      expGolombDecoder.skipExpGolomb(); // offset_for_top_to_bottom_field\n      numRefFramesInPicOrderCntCycle = expGolombDecoder.readUnsignedExpGolomb();\n      for (i = 0; i < numRefFramesInPicOrderCntCycle; i++) {\n        expGolombDecoder.skipExpGolomb(); // offset_for_ref_frame[ i ]\n      }\n    }\n\n    expGolombDecoder.skipUnsignedExpGolomb(); // max_num_ref_frames\n    expGolombDecoder.skipBits(1); // gaps_in_frame_num_value_allowed_flag\n\n    picWidthInMbsMinus1 = expGolombDecoder.readUnsignedExpGolomb();\n    picHeightInMapUnitsMinus1 = expGolombDecoder.readUnsignedExpGolomb();\n\n    frameMbsOnlyFlag = expGolombDecoder.readBits(1);\n    if (frameMbsOnlyFlag === 0) {\n      expGolombDecoder.skipBits(1); // mb_adaptive_frame_field_flag\n    }\n\n    expGolombDecoder.skipBits(1); // direct_8x8_inference_flag\n    if (expGolombDecoder.readBoolean()) { // frame_cropping_flag\n      frameCropLeftOffset = expGolombDecoder.readUnsignedExpGolomb();\n      frameCropRightOffset = expGolombDecoder.readUnsignedExpGolomb();\n      frameCropTopOffset = expGolombDecoder.readUnsignedExpGolomb();\n      frameCropBottomOffset = expGolombDecoder.readUnsignedExpGolomb();\n    }\n    if (expGolombDecoder.readBoolean()) {\n      // vui_parameters_present_flag\n      if (expGolombDecoder.readBoolean()) {\n        // aspect_ratio_info_present_flag\n        aspectRatioIdc = expGolombDecoder.readUnsignedByte();\n        switch (aspectRatioIdc) {\n          case 1: sarRatio = [1, 1]; break;\n          case 2: sarRatio = [12, 11]; break;\n          case 3: sarRatio = [10, 11]; break;\n          case 4: sarRatio = [16, 11]; break;\n          case 5: sarRatio = [40, 33]; break;\n          case 6: sarRatio = [24, 11]; break;\n          case 7: sarRatio = [20, 11]; break;\n          case 8: sarRatio = [32, 11]; break;\n          case 9: sarRatio = [80, 33]; break;\n          case 10: sarRatio = [18, 11]; break;\n          case 11: sarRatio = [15, 11]; break;\n          case 12: sarRatio = [64, 33]; break;\n          case 13: sarRatio = [160, 99]; break;\n          case 14: sarRatio = [4, 3]; break;\n          case 15: sarRatio = [3, 2]; break;\n          case 16: sarRatio = [2, 1]; break;\n          case 255: {\n            sarRatio = [expGolombDecoder.readUnsignedByte() << 8 |\n                        expGolombDecoder.readUnsignedByte(),\n                        expGolombDecoder.readUnsignedByte() << 8 |\n                        expGolombDecoder.readUnsignedByte() ];\n            break;\n          }\n        }\n        if (sarRatio) {\n          sarScale = sarRatio[0] / sarRatio[1];\n        }\n      }\n    }\n    return {\n      profileIdc: profileIdc,\n      levelIdc: levelIdc,\n      profileCompatibility: profileCompatibility,\n      width: Math.ceil((((picWidthInMbsMinus1 + 1) * 16) - frameCropLeftOffset * 2 - frameCropRightOffset * 2) * sarScale),\n      height: ((2 - frameMbsOnlyFlag) * (picHeightInMapUnitsMinus1 + 1) * 16) - (frameCropTopOffset * 2) - (frameCropBottomOffset * 2)\n    };\n  };\n\n};\nH264Stream.prototype = new Stream();\n\nmodule.exports = {\n  H264Stream: H264Stream,\n  NalByteStream: NalByteStream\n};\n\n},{\"../utils/exp-golomb.js\":88,\"../utils/stream.js\":89}],73:[function(require,module,exports){\n'use strict';\n\nvar Stream = require('../utils/stream.js');\n\n/**\n * The final stage of the transmuxer that emits the flv tags\n * for audio, video, and metadata. Also tranlates in time and\n * outputs caption data and id3 cues.\n */\nvar CoalesceStream = function(options) {\n  // Number of Tracks per output segment\n  // If greater than 1, we combine multiple\n  // tracks into a single segment\n  this.numberOfTracks = 0;\n  this.metadataStream = options.metadataStream;\n\n  this.videoTags = [];\n  this.audioTags = [];\n  this.videoTrack = null;\n  this.audioTrack = null;\n  this.pendingCaptions = [];\n  this.pendingMetadata = [];\n  this.pendingTracks = 0;\n  this.processedTracks = 0;\n\n  CoalesceStream.prototype.init.call(this);\n\n  // Take output from multiple\n  this.push = function(output) {\n    // buffer incoming captions until the associated video segment\n    // finishes\n    if (output.text) {\n      return this.pendingCaptions.push(output);\n    }\n    // buffer incoming id3 tags until the final flush\n    if (output.frames) {\n      return this.pendingMetadata.push(output);\n    }\n\n    if (output.track.type === 'video') {\n      this.videoTrack = output.track;\n      this.videoTags = output.tags;\n      this.pendingTracks++;\n    }\n    if (output.track.type === 'audio') {\n      this.audioTrack = output.track;\n      this.audioTags = output.tags;\n      this.pendingTracks++;\n    }\n  };\n};\n\nCoalesceStream.prototype = new Stream();\nCoalesceStream.prototype.flush = function(flushSource) {\n  var\n    id3,\n    caption,\n    i,\n    timelineStartPts,\n    event = {\n      tags: {},\n      captions: [],\n      metadata: []\n    };\n\n  if (this.pendingTracks < this.numberOfTracks) {\n    if (flushSource !== 'VideoSegmentStream' &&\n        flushSource !== 'AudioSegmentStream') {\n      // Return because we haven't received a flush from a data-generating\n      // portion of the segment (meaning that we have only recieved meta-data\n      // or captions.)\n      return;\n    } else if (this.pendingTracks === 0) {\n      // In the case where we receive a flush without any data having been\n      // received we consider it an emitted track for the purposes of coalescing\n      // `done` events.\n      // We do this for the case where there is an audio and video track in the\n      // segment but no audio data. (seen in several playlists with alternate\n      // audio tracks and no audio present in the main TS segments.)\n      this.processedTracks++;\n\n      if (this.processedTracks < this.numberOfTracks) {\n        return;\n      }\n    }\n  }\n\n  this.processedTracks += this.pendingTracks;\n  this.pendingTracks = 0;\n\n  if (this.processedTracks < this.numberOfTracks) {\n    return;\n  }\n\n  if (this.videoTrack) {\n    timelineStartPts = this.videoTrack.timelineStartInfo.pts;\n  } else if (this.audioTrack) {\n    timelineStartPts = this.audioTrack.timelineStartInfo.pts;\n  }\n\n  event.tags.videoTags = this.videoTags;\n  event.tags.audioTags = this.audioTags;\n\n  // Translate caption PTS times into second offsets into the\n  // video timeline for the segment\n  for (i = 0; i < this.pendingCaptions.length; i++) {\n    caption = this.pendingCaptions[i];\n    caption.startTime = caption.startPts - timelineStartPts;\n    caption.startTime /= 90e3;\n    caption.endTime = caption.endPts - timelineStartPts;\n    caption.endTime /= 90e3;\n    event.captions.push(caption);\n  }\n\n  // Translate ID3 frame PTS times into second offsets into the\n  // video timeline for the segment\n  for (i = 0; i < this.pendingMetadata.length; i++) {\n    id3 = this.pendingMetadata[i];\n    id3.cueTime = id3.pts - timelineStartPts;\n    id3.cueTime /= 90e3;\n    event.metadata.push(id3);\n  }\n  // We add this to every single emitted segment even though we only need\n  // it for the first\n  event.metadata.dispatchType = this.metadataStream.dispatchType;\n\n  // Reset stream state\n  this.videoTrack = null;\n  this.audioTrack = null;\n  this.videoTags = [];\n  this.audioTags = [];\n  this.pendingCaptions.length = 0;\n  this.pendingMetadata.length = 0;\n  this.pendingTracks = 0;\n  this.processedTracks = 0;\n\n  // Emit the final segment\n  this.trigger('data', event);\n\n  this.trigger('done');\n};\n\nmodule.exports = CoalesceStream;\n\n},{\"../utils/stream.js\":89}],74:[function(require,module,exports){\n/**\n * An object that stores the bytes of an FLV tag and methods for\n * querying and manipulating that data.\n * @see http://download.macromedia.com/f4v/video_file_format_spec_v10_1.pdf\n */\n'use strict';\n\nvar FlvTag;\n\n// (type:uint, extraData:Boolean = false) extends ByteArray\nFlvTag = function(type, extraData) {\n  var\n    // Counter if this is a metadata tag, nal start marker if this is a video\n    // tag. unused if this is an audio tag\n    adHoc = 0, // :uint\n\n    // The default size is 16kb but this is not enough to hold iframe\n    // data and the resizing algorithm costs a bit so we create a larger\n    // starting buffer for video tags\n    bufferStartSize = 16384,\n\n    // checks whether the FLV tag has enough capacity to accept the proposed\n    // write and re-allocates the internal buffers if necessary\n    prepareWrite = function(flv, count) {\n      var\n        bytes,\n        minLength = flv.position + count;\n      if (minLength < flv.bytes.byteLength) {\n        // there's enough capacity so do nothing\n        return;\n      }\n\n      // allocate a new buffer and copy over the data that will not be modified\n      bytes = new Uint8Array(minLength * 2);\n      bytes.set(flv.bytes.subarray(0, flv.position), 0);\n      flv.bytes = bytes;\n      flv.view = new DataView(flv.bytes.buffer);\n    },\n\n    // commonly used metadata properties\n    widthBytes = FlvTag.widthBytes || new Uint8Array('width'.length),\n    heightBytes = FlvTag.heightBytes || new Uint8Array('height'.length),\n    videocodecidBytes = FlvTag.videocodecidBytes || new Uint8Array('videocodecid'.length),\n    i;\n\n  if (!FlvTag.widthBytes) {\n    // calculating the bytes of common metadata names ahead of time makes the\n    // corresponding writes faster because we don't have to loop over the\n    // characters\n    // re-test with test/perf.html if you're planning on changing this\n    for (i = 0; i < 'width'.length; i++) {\n      widthBytes[i] = 'width'.charCodeAt(i);\n    }\n    for (i = 0; i < 'height'.length; i++) {\n      heightBytes[i] = 'height'.charCodeAt(i);\n    }\n    for (i = 0; i < 'videocodecid'.length; i++) {\n      videocodecidBytes[i] = 'videocodecid'.charCodeAt(i);\n    }\n\n    FlvTag.widthBytes = widthBytes;\n    FlvTag.heightBytes = heightBytes;\n    FlvTag.videocodecidBytes = videocodecidBytes;\n  }\n\n  this.keyFrame = false; // :Boolean\n\n  switch (type) {\n  case FlvTag.VIDEO_TAG:\n    this.length = 16;\n    // Start the buffer at 256k\n    bufferStartSize *= 6;\n    break;\n  case FlvTag.AUDIO_TAG:\n    this.length = 13;\n    this.keyFrame = true;\n    break;\n  case FlvTag.METADATA_TAG:\n    this.length = 29;\n    this.keyFrame = true;\n    break;\n  default:\n    throw new Error('Unknown FLV tag type');\n  }\n\n  this.bytes = new Uint8Array(bufferStartSize);\n  this.view = new DataView(this.bytes.buffer);\n  this.bytes[0] = type;\n  this.position = this.length;\n  this.keyFrame = extraData; // Defaults to false\n\n  // presentation timestamp\n  this.pts = 0;\n  // decoder timestamp\n  this.dts = 0;\n\n  // ByteArray#writeBytes(bytes:ByteArray, offset:uint = 0, length:uint = 0)\n  this.writeBytes = function(bytes, offset, length) {\n    var\n      start = offset || 0,\n      end;\n    length = length || bytes.byteLength;\n    end = start + length;\n\n    prepareWrite(this, length);\n    this.bytes.set(bytes.subarray(start, end), this.position);\n\n    this.position += length;\n    this.length = Math.max(this.length, this.position);\n  };\n\n  // ByteArray#writeByte(value:int):void\n  this.writeByte = function(byte) {\n    prepareWrite(this, 1);\n    this.bytes[this.position] = byte;\n    this.position++;\n    this.length = Math.max(this.length, this.position);\n  };\n\n  // ByteArray#writeShort(value:int):void\n  this.writeShort = function(short) {\n    prepareWrite(this, 2);\n    this.view.setUint16(this.position, short);\n    this.position += 2;\n    this.length = Math.max(this.length, this.position);\n  };\n\n  // Negative index into array\n  // (pos:uint):int\n  this.negIndex = function(pos) {\n    return this.bytes[this.length - pos];\n  };\n\n  // The functions below ONLY work when this[0] == VIDEO_TAG.\n  // We are not going to check for that because we dont want the overhead\n  // (nal:ByteArray = null):int\n  this.nalUnitSize = function() {\n    if (adHoc === 0) {\n      return 0;\n    }\n\n    return this.length - (adHoc + 4);\n  };\n\n  this.startNalUnit = function() {\n    // remember position and add 4 bytes\n    if (adHoc > 0) {\n      throw new Error('Attempted to create new NAL wihout closing the old one');\n    }\n\n    // reserve 4 bytes for nal unit size\n    adHoc = this.length;\n    this.length += 4;\n    this.position = this.length;\n  };\n\n  // (nal:ByteArray = null):void\n  this.endNalUnit = function(nalContainer) {\n    var\n      nalStart, // :uint\n      nalLength; // :uint\n\n    // Rewind to the marker and write the size\n    if (this.length === adHoc + 4) {\n      // we started a nal unit, but didnt write one, so roll back the 4 byte size value\n      this.length -= 4;\n    } else if (adHoc > 0) {\n      nalStart = adHoc + 4;\n      nalLength = this.length - nalStart;\n\n      this.position = adHoc;\n      this.view.setUint32(this.position, nalLength);\n      this.position = this.length;\n\n      if (nalContainer) {\n        // Add the tag to the NAL unit\n        nalContainer.push(this.bytes.subarray(nalStart, nalStart + nalLength));\n      }\n    }\n\n    adHoc = 0;\n  };\n\n  /**\n   * Write out a 64-bit floating point valued metadata property. This method is\n   * called frequently during a typical parse and needs to be fast.\n   */\n  // (key:String, val:Number):void\n  this.writeMetaDataDouble = function(key, val) {\n    var i;\n    prepareWrite(this, 2 + key.length + 9);\n\n    // write size of property name\n    this.view.setUint16(this.position, key.length);\n    this.position += 2;\n\n    // this next part looks terrible but it improves parser throughput by\n    // 10kB/s in my testing\n\n    // write property name\n    if (key === 'width') {\n      this.bytes.set(widthBytes, this.position);\n      this.position += 5;\n    } else if (key === 'height') {\n      this.bytes.set(heightBytes, this.position);\n      this.position += 6;\n    } else if (key === 'videocodecid') {\n      this.bytes.set(videocodecidBytes, this.position);\n      this.position += 12;\n    } else {\n      for (i = 0; i < key.length; i++) {\n        this.bytes[this.position] = key.charCodeAt(i);\n        this.position++;\n      }\n    }\n\n    // skip null byte\n    this.position++;\n\n    // write property value\n    this.view.setFloat64(this.position, val);\n    this.position += 8;\n\n    // update flv tag length\n    this.length = Math.max(this.length, this.position);\n    ++adHoc;\n  };\n\n  // (key:String, val:Boolean):void\n  this.writeMetaDataBoolean = function(key, val) {\n    var i;\n    prepareWrite(this, 2);\n    this.view.setUint16(this.position, key.length);\n    this.position += 2;\n    for (i = 0; i < key.length; i++) {\n      // if key.charCodeAt(i) >= 255, handle error\n      prepareWrite(this, 1);\n      this.bytes[this.position] = key.charCodeAt(i);\n      this.position++;\n    }\n    prepareWrite(this, 2);\n    this.view.setUint8(this.position, 0x01);\n    this.position++;\n    this.view.setUint8(this.position, val ? 0x01 : 0x00);\n    this.position++;\n    this.length = Math.max(this.length, this.position);\n    ++adHoc;\n  };\n\n  // ():ByteArray\n  this.finalize = function() {\n    var\n      dtsDelta, // :int\n      len; // :int\n\n    switch (this.bytes[0]) {\n      // Video Data\n    case FlvTag.VIDEO_TAG:\n       // We only support AVC, 1 = key frame (for AVC, a seekable\n       // frame), 2 = inter frame (for AVC, a non-seekable frame)\n      this.bytes[11] = ((this.keyFrame || extraData) ? 0x10 : 0x20) | 0x07;\n      this.bytes[12] = extraData ?  0x00 : 0x01;\n\n      dtsDelta = this.pts - this.dts;\n      this.bytes[13] = (dtsDelta & 0x00FF0000) >>> 16;\n      this.bytes[14] = (dtsDelta & 0x0000FF00) >>>  8;\n      this.bytes[15] = (dtsDelta & 0x000000FF) >>>  0;\n      break;\n\n    case FlvTag.AUDIO_TAG:\n      this.bytes[11] = 0xAF; // 44 kHz, 16-bit stereo\n      this.bytes[12] = extraData ? 0x00 : 0x01;\n      break;\n\n    case FlvTag.METADATA_TAG:\n      this.position = 11;\n      this.view.setUint8(this.position, 0x02); // String type\n      this.position++;\n      this.view.setUint16(this.position, 0x0A); // 10 Bytes\n      this.position += 2;\n      // set \"onMetaData\"\n      this.bytes.set([0x6f, 0x6e, 0x4d, 0x65,\n                      0x74, 0x61, 0x44, 0x61,\n                      0x74, 0x61], this.position);\n      this.position += 10;\n      this.bytes[this.position] = 0x08; // Array type\n      this.position++;\n      this.view.setUint32(this.position, adHoc);\n      this.position = this.length;\n      this.bytes.set([0, 0, 9], this.position);\n      this.position += 3; // End Data Tag\n      this.length = this.position;\n      break;\n    }\n\n    len = this.length - 11;\n\n    // write the DataSize field\n    this.bytes[ 1] = (len & 0x00FF0000) >>> 16;\n    this.bytes[ 2] = (len & 0x0000FF00) >>>  8;\n    this.bytes[ 3] = (len & 0x000000FF) >>>  0;\n    // write the Timestamp\n    this.bytes[ 4] = (this.dts & 0x00FF0000) >>> 16;\n    this.bytes[ 5] = (this.dts & 0x0000FF00) >>>  8;\n    this.bytes[ 6] = (this.dts & 0x000000FF) >>>  0;\n    this.bytes[ 7] = (this.dts & 0xFF000000) >>> 24;\n    // write the StreamID\n    this.bytes[ 8] = 0;\n    this.bytes[ 9] = 0;\n    this.bytes[10] = 0;\n\n    // Sometimes we're at the end of the view and have one slot to write a\n    // uint32, so, prepareWrite of count 4, since, view is uint8\n    prepareWrite(this, 4);\n    this.view.setUint32(this.length, this.length);\n    this.length += 4;\n    this.position += 4;\n\n    // trim down the byte buffer to what is actually being used\n    this.bytes = this.bytes.subarray(0, this.length);\n    this.frameTime = FlvTag.frameTime(this.bytes);\n    // if bytes.bytelength isn't equal to this.length, handle error\n    return this;\n  };\n};\n\nFlvTag.AUDIO_TAG = 0x08; // == 8, :uint\nFlvTag.VIDEO_TAG = 0x09; // == 9, :uint\nFlvTag.METADATA_TAG = 0x12; // == 18, :uint\n\n// (tag:ByteArray):Boolean {\nFlvTag.isAudioFrame = function(tag) {\n  return FlvTag.AUDIO_TAG === tag[0];\n};\n\n// (tag:ByteArray):Boolean {\nFlvTag.isVideoFrame = function(tag) {\n  return FlvTag.VIDEO_TAG === tag[0];\n};\n\n// (tag:ByteArray):Boolean {\nFlvTag.isMetaData = function(tag) {\n  return FlvTag.METADATA_TAG === tag[0];\n};\n\n// (tag:ByteArray):Boolean {\nFlvTag.isKeyFrame = function(tag) {\n  if (FlvTag.isVideoFrame(tag)) {\n    return tag[11] === 0x17;\n  }\n\n  if (FlvTag.isAudioFrame(tag)) {\n    return true;\n  }\n\n  if (FlvTag.isMetaData(tag)) {\n    return true;\n  }\n\n  return false;\n};\n\n// (tag:ByteArray):uint {\nFlvTag.frameTime = function(tag) {\n  var pts = tag[ 4] << 16; // :uint\n  pts |= tag[ 5] <<  8;\n  pts |= tag[ 6] <<  0;\n  pts |= tag[ 7] << 24;\n  return pts;\n};\n\nmodule.exports = FlvTag;\n\n},{}],75:[function(require,module,exports){\nmodule.exports = {\n  tag: require('./flv-tag'),\n  Transmuxer: require('./transmuxer')\n};\n\n},{\"./flv-tag\":74,\"./transmuxer\":76}],76:[function(require,module,exports){\n'use strict';\n\nvar Stream = require('../utils/stream.js');\nvar FlvTag = require('./flv-tag.js');\nvar m2ts = require('../m2ts/m2ts.js');\nvar AdtsStream = require('../codecs/adts.js');\nvar H264Stream = require('../codecs/h264').H264Stream;\nvar CoalesceStream = require('./coalesce-stream.js');\n\nvar\n  Transmuxer,\n  VideoSegmentStream,\n  AudioSegmentStream,\n  collectTimelineInfo,\n  metaDataTag,\n  extraDataTag;\n\n/**\n * Store information about the start and end of the tracka and the\n * duration for each frame/sample we process in order to calculate\n * the baseMediaDecodeTime\n */\ncollectTimelineInfo = function(track, data) {\n  if (typeof data.pts === 'number') {\n    if (track.timelineStartInfo.pts === undefined) {\n      track.timelineStartInfo.pts = data.pts;\n    } else {\n      track.timelineStartInfo.pts =\n        Math.min(track.timelineStartInfo.pts, data.pts);\n    }\n  }\n\n  if (typeof data.dts === 'number') {\n    if (track.timelineStartInfo.dts === undefined) {\n      track.timelineStartInfo.dts = data.dts;\n    } else {\n      track.timelineStartInfo.dts =\n        Math.min(track.timelineStartInfo.dts, data.dts);\n    }\n  }\n};\n\nmetaDataTag = function(track, pts) {\n  var\n    tag = new FlvTag(FlvTag.METADATA_TAG); // :FlvTag\n\n  tag.dts = pts;\n  tag.pts = pts;\n\n  tag.writeMetaDataDouble('videocodecid', 7);\n  tag.writeMetaDataDouble('width', track.width);\n  tag.writeMetaDataDouble('height', track.height);\n\n  return tag;\n};\n\nextraDataTag = function(track, pts) {\n  var\n    i,\n    tag = new FlvTag(FlvTag.VIDEO_TAG, true);\n\n  tag.dts = pts;\n  tag.pts = pts;\n\n  tag.writeByte(0x01);// version\n  tag.writeByte(track.profileIdc);// profile\n  tag.writeByte(track.profileCompatibility);// compatibility\n  tag.writeByte(track.levelIdc);// level\n  tag.writeByte(0xFC | 0x03); // reserved (6 bits), NULA length size - 1 (2 bits)\n  tag.writeByte(0xE0 | 0x01); // reserved (3 bits), num of SPS (5 bits)\n  tag.writeShort(track.sps[0].length); // data of SPS\n  tag.writeBytes(track.sps[0]); // SPS\n\n  tag.writeByte(track.pps.length); // num of PPS (will there ever be more that 1 PPS?)\n  for (i = 0; i < track.pps.length; ++i) {\n    tag.writeShort(track.pps[i].length); // 2 bytes for length of PPS\n    tag.writeBytes(track.pps[i]); // data of PPS\n  }\n\n  return tag;\n};\n\n/**\n * Constructs a single-track, media segment from AAC data\n * events. The output of this stream can be fed to flash.\n */\nAudioSegmentStream = function(track) {\n  var\n    adtsFrames = [],\n    oldExtraData;\n\n  AudioSegmentStream.prototype.init.call(this);\n\n  this.push = function(data) {\n    collectTimelineInfo(track, data);\n\n    if (track && track.channelcount === undefined) {\n      track.audioobjecttype = data.audioobjecttype;\n      track.channelcount = data.channelcount;\n      track.samplerate = data.samplerate;\n      track.samplingfrequencyindex = data.samplingfrequencyindex;\n      track.samplesize = data.samplesize;\n      track.extraData = (track.audioobjecttype << 11) |\n                        (track.samplingfrequencyindex << 7) |\n                        (track.channelcount << 3);\n    }\n\n    data.pts = Math.round(data.pts / 90);\n    data.dts = Math.round(data.dts / 90);\n\n    // buffer audio data until end() is called\n    adtsFrames.push(data);\n  };\n\n  this.flush = function() {\n    var currentFrame, adtsFrame, lastMetaPts, tags = [];\n    // return early if no audio data has been observed\n    if (adtsFrames.length === 0) {\n      this.trigger('done', 'AudioSegmentStream');\n      return;\n    }\n\n    lastMetaPts = -Infinity;\n\n    while (adtsFrames.length) {\n      currentFrame = adtsFrames.shift();\n\n      // write out metadata tags every 1 second so that the decoder\n      // is re-initialized quickly after seeking into a different\n      // audio configuration\n      if (track.extraData !== oldExtraData || currentFrame.pts - lastMetaPts >= 1000) {\n       adtsFrame = new FlvTag(FlvTag.METADATA_TAG);\n        adtsFrame.pts = currentFrame.pts;\n        adtsFrame.dts = currentFrame.dts;\n\n        // AAC is always 10\n        adtsFrame.writeMetaDataDouble('audiocodecid', 10);\n        adtsFrame.writeMetaDataBoolean('stereo', track.channelcount === 2);\n        adtsFrame.writeMetaDataDouble('audiosamplerate', track.samplerate);\n        // Is AAC always 16 bit?\n        adtsFrame.writeMetaDataDouble('audiosamplesize', 16);\n\n        tags.push(adtsFrame);\n\n        oldExtraData = track.extraData;\n\n        adtsFrame = new FlvTag(FlvTag.AUDIO_TAG, true);\n        // For audio, DTS is always the same as PTS. We want to set the DTS\n        // however so we can compare with video DTS to determine approximate\n        // packet order\n        adtsFrame.pts = currentFrame.pts;\n        adtsFrame.dts = currentFrame.dts;\n\n        adtsFrame.view.setUint16(adtsFrame.position, track.extraData);\n        adtsFrame.position += 2;\n        adtsFrame.length = Math.max(adtsFrame.length, adtsFrame.position);\n\n        tags.push(adtsFrame);\n\n        lastMetaPts = currentFrame.pts;\n      }\n      adtsFrame = new FlvTag(FlvTag.AUDIO_TAG);\n      adtsFrame.pts = currentFrame.pts;\n      adtsFrame.dts = currentFrame.dts;\n\n      adtsFrame.writeBytes(currentFrame.data);\n\n      tags.push(adtsFrame);\n    }\n\n    oldExtraData = null;\n    this.trigger('data', {track: track, tags: tags});\n\n    this.trigger('done', 'AudioSegmentStream');\n  };\n};\nAudioSegmentStream.prototype = new Stream();\n\n/**\n * Store FlvTags for the h264 stream\n * @param track {object} track metadata configuration\n */\nVideoSegmentStream = function(track) {\n  var\n    nalUnits = [],\n    config,\n    h264Frame;\n  VideoSegmentStream.prototype.init.call(this);\n\n  this.finishFrame = function(tags, frame) {\n    if (!frame) {\n      return;\n    }\n    // Check if keyframe and the length of tags.\n    // This makes sure we write metadata on the first frame of a segment.\n    if (config && track && track.newMetadata &&\n        (frame.keyFrame || tags.length === 0)) {\n      // Push extra data on every IDR frame in case we did a stream change + seek\n      tags.push(metaDataTag(config, frame.dts));\n      tags.push(extraDataTag(track, frame.dts));\n      track.newMetadata = false;\n    }\n\n    frame.endNalUnit();\n    tags.push(frame);\n    h264Frame = null;\n  };\n\n  this.push = function(data) {\n    collectTimelineInfo(track, data);\n\n    data.pts = Math.round(data.pts / 90);\n    data.dts = Math.round(data.dts / 90);\n\n    // buffer video until flush() is called\n    nalUnits.push(data);\n  };\n\n  this.flush = function() {\n    var\n      currentNal,\n      tags = [];\n\n    // Throw away nalUnits at the start of the byte stream until we find\n    // the first AUD\n    while (nalUnits.length) {\n      if (nalUnits[0].nalUnitType === 'access_unit_delimiter_rbsp') {\n        break;\n      }\n      nalUnits.shift();\n    }\n\n    // return early if no video data has been observed\n    if (nalUnits.length === 0) {\n      this.trigger('done', 'VideoSegmentStream');\n      return;\n    }\n\n    while (nalUnits.length) {\n      currentNal = nalUnits.shift();\n\n      // record the track config\n      if (currentNal.nalUnitType === 'seq_parameter_set_rbsp') {\n        track.newMetadata = true;\n        config = currentNal.config;\n        track.width = config.width;\n        track.height = config.height;\n        track.sps = [currentNal.data];\n        track.profileIdc = config.profileIdc;\n        track.levelIdc = config.levelIdc;\n        track.profileCompatibility = config.profileCompatibility;\n        h264Frame.endNalUnit();\n      } else if (currentNal.nalUnitType === 'pic_parameter_set_rbsp') {\n        track.newMetadata = true;\n        track.pps = [currentNal.data];\n        h264Frame.endNalUnit();\n      } else if (currentNal.nalUnitType === 'access_unit_delimiter_rbsp') {\n        if (h264Frame) {\n          this.finishFrame(tags, h264Frame);\n        }\n        h264Frame = new FlvTag(FlvTag.VIDEO_TAG);\n        h264Frame.pts = currentNal.pts;\n        h264Frame.dts = currentNal.dts;\n      } else {\n        if (currentNal.nalUnitType === 'slice_layer_without_partitioning_rbsp_idr') {\n          // the current sample is a key frame\n          h264Frame.keyFrame = true;\n        }\n        h264Frame.endNalUnit();\n      }\n      h264Frame.startNalUnit();\n      h264Frame.writeBytes(currentNal.data);\n    }\n    if (h264Frame) {\n      this.finishFrame(tags, h264Frame);\n    }\n\n    this.trigger('data', {track: track, tags: tags});\n\n    // Continue with the flush process now\n    this.trigger('done', 'VideoSegmentStream');\n  };\n};\n\nVideoSegmentStream.prototype = new Stream();\n\n/**\n * An object that incrementally transmuxes MPEG2 Trasport Stream\n * chunks into an FLV.\n */\nTransmuxer = function(options) {\n  var\n    self = this,\n\n    packetStream, parseStream, elementaryStream,\n    videoTimestampRolloverStream, audioTimestampRolloverStream,\n    timedMetadataTimestampRolloverStream,\n    adtsStream, h264Stream,\n    videoSegmentStream, audioSegmentStream, captionStream,\n    coalesceStream;\n\n  Transmuxer.prototype.init.call(this);\n\n  options = options || {};\n\n  // expose the metadata stream\n  this.metadataStream = new m2ts.MetadataStream();\n\n  options.metadataStream = this.metadataStream;\n\n  // set up the parsing pipeline\n  packetStream = new m2ts.TransportPacketStream();\n  parseStream = new m2ts.TransportParseStream();\n  elementaryStream = new m2ts.ElementaryStream();\n  videoTimestampRolloverStream = new m2ts.TimestampRolloverStream('video');\n  audioTimestampRolloverStream = new m2ts.TimestampRolloverStream('audio');\n  timedMetadataTimestampRolloverStream = new m2ts.TimestampRolloverStream('timed-metadata');\n\n  adtsStream = new AdtsStream();\n  h264Stream = new H264Stream();\n  coalesceStream = new CoalesceStream(options);\n\n  // disassemble MPEG2-TS packets into elementary streams\n  packetStream\n    .pipe(parseStream)\n    .pipe(elementaryStream);\n\n  // !!THIS ORDER IS IMPORTANT!!\n  // demux the streams\n  elementaryStream\n    .pipe(videoTimestampRolloverStream)\n    .pipe(h264Stream);\n  elementaryStream\n    .pipe(audioTimestampRolloverStream)\n    .pipe(adtsStream);\n\n  elementaryStream\n    .pipe(timedMetadataTimestampRolloverStream)\n    .pipe(this.metadataStream)\n    .pipe(coalesceStream);\n  // if CEA-708 parsing is available, hook up a caption stream\n  captionStream = new m2ts.CaptionStream();\n  h264Stream.pipe(captionStream)\n    .pipe(coalesceStream);\n\n  // hook up the segment streams once track metadata is delivered\n  elementaryStream.on('data', function(data) {\n    var i, videoTrack, audioTrack;\n\n    if (data.type === 'metadata') {\n      i = data.tracks.length;\n\n      // scan the tracks listed in the metadata\n      while (i--) {\n        if (data.tracks[i].type === 'video') {\n          videoTrack = data.tracks[i];\n        } else if (data.tracks[i].type === 'audio') {\n          audioTrack = data.tracks[i];\n        }\n      }\n\n      // hook up the video segment stream to the first track with h264 data\n      if (videoTrack && !videoSegmentStream) {\n        coalesceStream.numberOfTracks++;\n        videoSegmentStream = new VideoSegmentStream(videoTrack);\n\n        // Set up the final part of the video pipeline\n        h264Stream\n          .pipe(videoSegmentStream)\n          .pipe(coalesceStream);\n      }\n\n      if (audioTrack && !audioSegmentStream) {\n        // hook up the audio segment stream to the first track with aac data\n        coalesceStream.numberOfTracks++;\n        audioSegmentStream = new AudioSegmentStream(audioTrack);\n\n        // Set up the final part of the audio pipeline\n        adtsStream\n          .pipe(audioSegmentStream)\n          .pipe(coalesceStream);\n      }\n    }\n  });\n\n  // feed incoming data to the front of the parsing pipeline\n  this.push = function(data) {\n    packetStream.push(data);\n  };\n\n  // flush any buffered data\n  this.flush = function() {\n    // Start at the top of the pipeline and flush all pending work\n    packetStream.flush();\n  };\n\n  // Re-emit any data coming from the coalesce stream to the outside world\n  coalesceStream.on('data', function(event) {\n    self.trigger('data', event);\n  });\n\n  // Let the consumer know we have finished flushing the entire pipeline\n  coalesceStream.on('done', function() {\n    self.trigger('done');\n  });\n\n  // For information on the FLV format, see\n  // http://download.macromedia.com/f4v/video_file_format_spec_v10_1.pdf.\n  // Technically, this function returns the header and a metadata FLV tag\n  // if duration is greater than zero\n  // duration in seconds\n  // @return {object} the bytes of the FLV header as a Uint8Array\n  this.getFlvHeader = function(duration, audio, video) { // :ByteArray {\n    var\n      headBytes = new Uint8Array(3 + 1 + 1 + 4),\n      head = new DataView(headBytes.buffer),\n      metadata,\n      result,\n      metadataLength;\n\n    // default arguments\n    duration = duration || 0;\n    audio = audio === undefined ? true : audio;\n    video = video === undefined ? true : video;\n\n    // signature\n    head.setUint8(0, 0x46); // 'F'\n    head.setUint8(1, 0x4c); // 'L'\n    head.setUint8(2, 0x56); // 'V'\n\n    // version\n    head.setUint8(3, 0x01);\n\n    // flags\n    head.setUint8(4, (audio ? 0x04 : 0x00) | (video ? 0x01 : 0x00));\n\n    // data offset, should be 9 for FLV v1\n    head.setUint32(5, headBytes.byteLength);\n\n    // init the first FLV tag\n    if (duration <= 0) {\n      // no duration available so just write the first field of the first\n      // FLV tag\n      result = new Uint8Array(headBytes.byteLength + 4);\n      result.set(headBytes);\n      result.set([0, 0, 0, 0], headBytes.byteLength);\n      return result;\n    }\n\n    // write out the duration metadata tag\n    metadata = new FlvTag(FlvTag.METADATA_TAG);\n    metadata.pts = metadata.dts = 0;\n    metadata.writeMetaDataDouble('duration', duration);\n    metadataLength = metadata.finalize().length;\n    result = new Uint8Array(headBytes.byteLength + metadataLength);\n    result.set(headBytes);\n    result.set(head.byteLength, metadataLength);\n\n    return result;\n  };\n};\nTransmuxer.prototype = new Stream();\n\n// forward compatibility\nmodule.exports = Transmuxer;\n\n},{\"../codecs/adts.js\":71,\"../codecs/h264\":72,\"../m2ts/m2ts.js\":78,\"../utils/stream.js\":89,\"./coalesce-stream.js\":73,\"./flv-tag.js\":74}],77:[function(require,module,exports){\n/**\n * mux.js\n *\n * Copyright (c) 2015 Brightcove\n * All rights reserved.\n *\n * Reads in-band caption information from a video elementary\n * stream. Captions must follow the CEA-708 standard for injection\n * into an MPEG-2 transport streams.\n * @see https://en.wikipedia.org/wiki/CEA-708\n */\n\n'use strict';\n\n// -----------------\n// Link To Transport\n// -----------------\n\n// Supplemental enhancement information (SEI) NAL units have a\n// payload type field to indicate how they are to be\n// interpreted. CEAS-708 caption content is always transmitted with\n// payload type 0x04.\nvar USER_DATA_REGISTERED_ITU_T_T35 = 4,\n    RBSP_TRAILING_BITS = 128,\n    Stream = require('../utils/stream');\n\n/**\n  * Parse a supplemental enhancement information (SEI) NAL unit.\n  * Stops parsing once a message of type ITU T T35 has been found.\n  *\n  * @param bytes {Uint8Array} the bytes of a SEI NAL unit\n  * @return {object} the parsed SEI payload\n  * @see Rec. ITU-T H.264, 7.3.2.3.1\n  */\nvar parseSei = function(bytes) {\n  var\n    i = 0,\n    result = {\n      payloadType: -1,\n      payloadSize: 0\n    },\n    payloadType = 0,\n    payloadSize = 0;\n\n  // go through the sei_rbsp parsing each each individual sei_message\n  while (i < bytes.byteLength) {\n    // stop once we have hit the end of the sei_rbsp\n    if (bytes[i] === RBSP_TRAILING_BITS) {\n      break;\n    }\n\n    // Parse payload type\n    while (bytes[i] === 0xFF) {\n      payloadType += 255;\n      i++;\n    }\n    payloadType += bytes[i++];\n\n    // Parse payload size\n    while (bytes[i] === 0xFF) {\n      payloadSize += 255;\n      i++;\n    }\n    payloadSize += bytes[i++];\n\n    // this sei_message is a 608/708 caption so save it and break\n    // there can only ever be one caption message in a frame's sei\n    if (!result.payload && payloadType === USER_DATA_REGISTERED_ITU_T_T35) {\n      result.payloadType = payloadType;\n      result.payloadSize = payloadSize;\n      result.payload = bytes.subarray(i, i + payloadSize);\n      break;\n    }\n\n    // skip the payload and parse the next message\n    i += payloadSize;\n    payloadType = 0;\n    payloadSize = 0;\n  }\n\n  return result;\n};\n\n// see ANSI/SCTE 128-1 (2013), section 8.1\nvar parseUserData = function(sei) {\n  // itu_t_t35_contry_code must be 181 (United States) for\n  // captions\n  if (sei.payload[0] !== 181) {\n    return null;\n  }\n\n  // itu_t_t35_provider_code should be 49 (ATSC) for captions\n  if (((sei.payload[1] << 8) | sei.payload[2]) !== 49) {\n    return null;\n  }\n\n  // the user_identifier should be \"GA94\" to indicate ATSC1 data\n  if (String.fromCharCode(sei.payload[3],\n                          sei.payload[4],\n                          sei.payload[5],\n                          sei.payload[6]) !== 'GA94') {\n    return null;\n  }\n\n  // finally, user_data_type_code should be 0x03 for caption data\n  if (sei.payload[7] !== 0x03) {\n    return null;\n  }\n\n  // return the user_data_type_structure and strip the trailing\n  // marker bits\n  return sei.payload.subarray(8, sei.payload.length - 1);\n};\n\n// see CEA-708-D, section 4.4\nvar parseCaptionPackets = function(pts, userData) {\n  var results = [], i, count, offset, data;\n\n  // if this is just filler, return immediately\n  if (!(userData[0] & 0x40)) {\n    return results;\n  }\n\n  // parse out the cc_data_1 and cc_data_2 fields\n  count = userData[0] & 0x1f;\n  for (i = 0; i < count; i++) {\n    offset = i * 3;\n    data = {\n      type: userData[offset + 2] & 0x03,\n      pts: pts\n    };\n\n    // capture cc data when cc_valid is 1\n    if (userData[offset + 2] & 0x04) {\n      data.ccData = (userData[offset + 3] << 8) | userData[offset + 4];\n      results.push(data);\n    }\n  }\n  return results;\n};\n\nvar CaptionStream = function() {\n  CaptionStream.prototype.init.call(this);\n\n  this.captionPackets_ = [];\n\n  this.field1_ = new Cea608Stream(); // eslint-disable-line no-use-before-define\n\n  // forward data and done events from field1_ to this CaptionStream\n  this.field1_.on('data', this.trigger.bind(this, 'data'));\n  this.field1_.on('done', this.trigger.bind(this, 'done'));\n};\nCaptionStream.prototype = new Stream();\nCaptionStream.prototype.push = function(event) {\n  var sei, userData;\n\n  // only examine SEI NALs\n  if (event.nalUnitType !== 'sei_rbsp') {\n    return;\n  }\n\n  // parse the sei\n  sei = parseSei(event.escapedRBSP);\n\n  // ignore everything but user_data_registered_itu_t_t35\n  if (sei.payloadType !== USER_DATA_REGISTERED_ITU_T_T35) {\n    return;\n  }\n\n  // parse out the user data payload\n  userData = parseUserData(sei);\n\n  // ignore unrecognized userData\n  if (!userData) {\n    return;\n  }\n\n  // parse out CC data packets and save them for later\n  this.captionPackets_ = this.captionPackets_.concat(parseCaptionPackets(event.pts, userData));\n};\n\nCaptionStream.prototype.flush = function() {\n  // make sure we actually parsed captions before proceeding\n  if (!this.captionPackets_.length) {\n    this.field1_.flush();\n    return;\n  }\n\n  // In Chrome, the Array#sort function is not stable so add a\n  // presortIndex that we can use to ensure we get a stable-sort\n  this.captionPackets_.forEach(function(elem, idx) {\n    elem.presortIndex = idx;\n  });\n\n  // sort caption byte-pairs based on their PTS values\n  this.captionPackets_.sort(function(a, b) {\n    if (a.pts === b.pts) {\n      return a.presortIndex - b.presortIndex;\n    }\n    return a.pts - b.pts;\n  });\n\n  // Push each caption into Cea608Stream\n  this.captionPackets_.forEach(this.field1_.push, this.field1_);\n\n  this.captionPackets_.length = 0;\n  this.field1_.flush();\n  return;\n};\n// ----------------------\n// Session to Application\n// ----------------------\n\nvar BASIC_CHARACTER_TRANSLATION = {\n  0x2a: 0xe1,\n  0x5c: 0xe9,\n  0x5e: 0xed,\n  0x5f: 0xf3,\n  0x60: 0xfa,\n  0x7b: 0xe7,\n  0x7c: 0xf7,\n  0x7d: 0xd1,\n  0x7e: 0xf1,\n  0x7f: 0x2588\n};\n\nvar getCharFromCode = function(code) {\n  if (code === null) {\n    return '';\n  }\n  code = BASIC_CHARACTER_TRANSLATION[code] || code;\n  return String.fromCharCode(code);\n};\n\n// Constants for the byte codes recognized by Cea608Stream. This\n// list is not exhaustive. For a more comprehensive listing and\n// semantics see\n// http://www.gpo.gov/fdsys/pkg/CFR-2010-title47-vol1/pdf/CFR-2010-title47-vol1-sec15-119.pdf\nvar PADDING                    = 0x0000,\n\n    // Pop-on Mode\n    RESUME_CAPTION_LOADING     = 0x1420,\n    END_OF_CAPTION             = 0x142f,\n\n    // Roll-up Mode\n    ROLL_UP_2_ROWS             = 0x1425,\n    ROLL_UP_3_ROWS             = 0x1426,\n    ROLL_UP_4_ROWS             = 0x1427,\n    CARRIAGE_RETURN            = 0x142d,\n    // Erasure\n    BACKSPACE                  = 0x1421,\n    ERASE_DISPLAYED_MEMORY     = 0x142c,\n    ERASE_NON_DISPLAYED_MEMORY = 0x142e;\n\n// the index of the last row in a CEA-608 display buffer\nvar BOTTOM_ROW = 14;\n// CEA-608 captions are rendered onto a 34x15 matrix of character\n// cells. The \"bottom\" row is the last element in the outer array.\nvar createDisplayBuffer = function() {\n  var result = [], i = BOTTOM_ROW + 1;\n  while (i--) {\n    result.push('');\n  }\n  return result;\n};\n\nvar Cea608Stream = function() {\n  Cea608Stream.prototype.init.call(this);\n\n  this.mode_ = 'popOn';\n  // When in roll-up mode, the index of the last row that will\n  // actually display captions. If a caption is shifted to a row\n  // with a lower index than this, it is cleared from the display\n  // buffer\n  this.topRow_ = 0;\n  this.startPts_ = 0;\n  this.displayed_ = createDisplayBuffer();\n  this.nonDisplayed_ = createDisplayBuffer();\n  this.lastControlCode_ = null;\n\n  this.push = function(packet) {\n    // Ignore other channels\n    if (packet.type !== 0) {\n      return;\n    }\n    var data, swap, char0, char1;\n    // remove the parity bits\n    data = packet.ccData & 0x7f7f;\n\n    // ignore duplicate control codes\n    if (data === this.lastControlCode_) {\n      this.lastControlCode_ = null;\n      return;\n    }\n\n    // Store control codes\n    if ((data & 0xf000) === 0x1000) {\n      this.lastControlCode_ = data;\n    } else {\n      this.lastControlCode_ = null;\n    }\n\n    switch (data) {\n    case PADDING:\n      break;\n    case RESUME_CAPTION_LOADING:\n      this.mode_ = 'popOn';\n      break;\n    case END_OF_CAPTION:\n      // if a caption was being displayed, it's gone now\n      this.flushDisplayed(packet.pts);\n\n      // flip memory\n      swap = this.displayed_;\n      this.displayed_ = this.nonDisplayed_;\n      this.nonDisplayed_ = swap;\n\n      // start measuring the time to display the caption\n      this.startPts_ = packet.pts;\n      break;\n\n    case ROLL_UP_2_ROWS:\n      this.topRow_ = BOTTOM_ROW - 1;\n      this.mode_ = 'rollUp';\n      break;\n    case ROLL_UP_3_ROWS:\n      this.topRow_ = BOTTOM_ROW - 2;\n      this.mode_ = 'rollUp';\n      break;\n    case ROLL_UP_4_ROWS:\n      this.topRow_ = BOTTOM_ROW - 3;\n      this.mode_ = 'rollUp';\n      break;\n    case CARRIAGE_RETURN:\n      this.flushDisplayed(packet.pts);\n      this.shiftRowsUp_();\n      this.startPts_ = packet.pts;\n      break;\n\n    case BACKSPACE:\n      if (this.mode_ === 'popOn') {\n        this.nonDisplayed_[BOTTOM_ROW] = this.nonDisplayed_[BOTTOM_ROW].slice(0, -1);\n      } else {\n        this.displayed_[BOTTOM_ROW] = this.displayed_[BOTTOM_ROW].slice(0, -1);\n      }\n      break;\n    case ERASE_DISPLAYED_MEMORY:\n      this.flushDisplayed(packet.pts);\n      this.displayed_ = createDisplayBuffer();\n      break;\n    case ERASE_NON_DISPLAYED_MEMORY:\n      this.nonDisplayed_ = createDisplayBuffer();\n      break;\n    default:\n      char0 = data >>> 8;\n      char1 = data & 0xff;\n\n      // Look for a Channel 1 Preamble Address Code\n      if (char0 >= 0x10 && char0 <= 0x17 &&\n          char1 >= 0x40 && char1 <= 0x7F &&\n          (char0 !== 0x10 || char1 < 0x60)) {\n        // Follow Safari's lead and replace the PAC with a space\n        char0 = 0x20;\n        // we only want one space so make the second character null\n        // which will get become '' in getCharFromCode\n        char1 = null;\n      }\n\n      // Look for special character sets\n      if ((char0 === 0x11 || char0 === 0x19) &&\n          (char1 >= 0x30 && char1 <= 0x3F)) {\n        // Put in eigth note and space\n        char0 = 0x266A;\n        char1 = '';\n      }\n\n      // ignore unsupported control codes\n      if ((char0 & 0xf0) === 0x10) {\n        return;\n      }\n\n      // character handling is dependent on the current mode\n      this[this.mode_](packet.pts, char0, char1);\n      break;\n    }\n  };\n};\nCea608Stream.prototype = new Stream();\n// Trigger a cue point that captures the current state of the\n// display buffer\nCea608Stream.prototype.flushDisplayed = function(pts) {\n  var content = this.displayed_\n    // remove spaces from the start and end of the string\n    .map(function(row) {\n      return row.trim();\n    })\n    // remove empty rows\n    .filter(function(row) {\n      return row.length;\n    })\n    // combine all text rows to display in one cue\n    .join('\\n');\n\n  if (content.length) {\n    this.trigger('data', {\n      startPts: this.startPts_,\n      endPts: pts,\n      text: content\n    });\n  }\n};\n\n// Mode Implementations\nCea608Stream.prototype.popOn = function(pts, char0, char1) {\n  var baseRow = this.nonDisplayed_[BOTTOM_ROW];\n\n  // buffer characters\n  baseRow += getCharFromCode(char0);\n  baseRow += getCharFromCode(char1);\n  this.nonDisplayed_[BOTTOM_ROW] = baseRow;\n};\n\nCea608Stream.prototype.rollUp = function(pts, char0, char1) {\n  var baseRow = this.displayed_[BOTTOM_ROW];\n  if (baseRow === '') {\n    // we're starting to buffer new display input, so flush out the\n    // current display\n    this.flushDisplayed(pts);\n\n    this.startPts_ = pts;\n  }\n\n  baseRow += getCharFromCode(char0);\n  baseRow += getCharFromCode(char1);\n\n  this.displayed_[BOTTOM_ROW] = baseRow;\n};\nCea608Stream.prototype.shiftRowsUp_ = function() {\n  var i;\n  // clear out inactive rows\n  for (i = 0; i < this.topRow_; i++) {\n    this.displayed_[i] = '';\n  }\n  // shift displayed rows up\n  for (i = this.topRow_; i < BOTTOM_ROW; i++) {\n    this.displayed_[i] = this.displayed_[i + 1];\n  }\n  // clear out the bottom row\n  this.displayed_[BOTTOM_ROW] = '';\n};\n\n// exports\nmodule.exports = {\n  CaptionStream: CaptionStream,\n  Cea608Stream: Cea608Stream\n};\n\n},{\"../utils/stream\":89}],78:[function(require,module,exports){\n/**\n * mux.js\n *\n * Copyright (c) 2015 Brightcove\n * All rights reserved.\n *\n * A stream-based mp2t to mp4 converter. This utility can be used to\n * deliver mp4s to a SourceBuffer on platforms that support native\n * Media Source Extensions.\n */\n'use strict';\nvar Stream = require('../utils/stream.js'),\n  CaptionStream = require('./caption-stream'),\n  StreamTypes = require('./stream-types'),\n  TimestampRolloverStream = require('./timestamp-rollover-stream').TimestampRolloverStream;\n\nvar m2tsStreamTypes = require('./stream-types.js');\n\n// object types\nvar TransportPacketStream, TransportParseStream, ElementaryStream;\n\n// constants\nvar\n  MP2T_PACKET_LENGTH = 188, // bytes\n  SYNC_BYTE = 0x47;\n\n/**\n * Splits an incoming stream of binary data into MPEG-2 Transport\n * Stream packets.\n */\nTransportPacketStream = function() {\n  var\n    buffer = new Uint8Array(MP2T_PACKET_LENGTH),\n    bytesInBuffer = 0;\n\n  TransportPacketStream.prototype.init.call(this);\n\n   // Deliver new bytes to the stream.\n\n  this.push = function(bytes) {\n    var\n      startIndex = 0,\n      endIndex = MP2T_PACKET_LENGTH,\n      everything;\n\n    // If there are bytes remaining from the last segment, prepend them to the\n    // bytes that were pushed in\n    if (bytesInBuffer) {\n      everything = new Uint8Array(bytes.byteLength + bytesInBuffer);\n      everything.set(buffer.subarray(0, bytesInBuffer));\n      everything.set(bytes, bytesInBuffer);\n      bytesInBuffer = 0;\n    } else {\n      everything = bytes;\n    }\n\n    // While we have enough data for a packet\n    while (endIndex < everything.byteLength) {\n      // Look for a pair of start and end sync bytes in the data..\n      if (everything[startIndex] === SYNC_BYTE && everything[endIndex] === SYNC_BYTE) {\n        // We found a packet so emit it and jump one whole packet forward in\n        // the stream\n        this.trigger('data', everything.subarray(startIndex, endIndex));\n        startIndex += MP2T_PACKET_LENGTH;\n        endIndex += MP2T_PACKET_LENGTH;\n        continue;\n      }\n      // If we get here, we have somehow become de-synchronized and we need to step\n      // forward one byte at a time until we find a pair of sync bytes that denote\n      // a packet\n      startIndex++;\n      endIndex++;\n    }\n\n    // If there was some data left over at the end of the segment that couldn't\n    // possibly be a whole packet, keep it because it might be the start of a packet\n    // that continues in the next segment\n    if (startIndex < everything.byteLength) {\n      buffer.set(everything.subarray(startIndex), 0);\n      bytesInBuffer = everything.byteLength - startIndex;\n    }\n  };\n\n  this.flush = function() {\n    // If the buffer contains a whole packet when we are being flushed, emit it\n    // and empty the buffer. Otherwise hold onto the data because it may be\n    // important for decoding the next segment\n    if (bytesInBuffer === MP2T_PACKET_LENGTH && buffer[0] === SYNC_BYTE) {\n      this.trigger('data', buffer);\n      bytesInBuffer = 0;\n    }\n    this.trigger('done');\n  };\n};\nTransportPacketStream.prototype = new Stream();\n\n/**\n * Accepts an MP2T TransportPacketStream and emits data events with parsed\n * forms of the individual transport stream packets.\n */\nTransportParseStream = function() {\n  var parsePsi, parsePat, parsePmt, self;\n  TransportParseStream.prototype.init.call(this);\n  self = this;\n\n  this.packetsWaitingForPmt = [];\n  this.programMapTable = undefined;\n\n  parsePsi = function(payload, psi) {\n    var offset = 0;\n\n    // PSI packets may be split into multiple sections and those\n    // sections may be split into multiple packets. If a PSI\n    // section starts in this packet, the payload_unit_start_indicator\n    // will be true and the first byte of the payload will indicate\n    // the offset from the current position to the start of the\n    // section.\n    if (psi.payloadUnitStartIndicator) {\n      offset += payload[offset] + 1;\n    }\n\n    if (psi.type === 'pat') {\n      parsePat(payload.subarray(offset), psi);\n    } else {\n      parsePmt(payload.subarray(offset), psi);\n    }\n  };\n\n  parsePat = function(payload, pat) {\n    pat.section_number = payload[7]; // eslint-disable-line camelcase\n    pat.last_section_number = payload[8]; // eslint-disable-line camelcase\n\n    // skip the PSI header and parse the first PMT entry\n    self.pmtPid = (payload[10] & 0x1F) << 8 | payload[11];\n    pat.pmtPid = self.pmtPid;\n  };\n\n  /**\n   * Parse out the relevant fields of a Program Map Table (PMT).\n   * @param payload {Uint8Array} the PMT-specific portion of an MP2T\n   * packet. The first byte in this array should be the table_id\n   * field.\n   * @param pmt {object} the object that should be decorated with\n   * fields parsed from the PMT.\n   */\n  parsePmt = function(payload, pmt) {\n    var sectionLength, tableEnd, programInfoLength, offset;\n\n    // PMTs can be sent ahead of the time when they should actually\n    // take effect. We don't believe this should ever be the case\n    // for HLS but we'll ignore \"forward\" PMT declarations if we see\n    // them. Future PMT declarations have the current_next_indicator\n    // set to zero.\n    if (!(payload[5] & 0x01)) {\n      return;\n    }\n\n    // overwrite any existing program map table\n    self.programMapTable = {};\n\n    // the mapping table ends at the end of the current section\n    sectionLength = (payload[1] & 0x0f) << 8 | payload[2];\n    tableEnd = 3 + sectionLength - 4;\n\n    // to determine where the table is, we have to figure out how\n    // long the program info descriptors are\n    programInfoLength = (payload[10] & 0x0f) << 8 | payload[11];\n\n    // advance the offset to the first entry in the mapping table\n    offset = 12 + programInfoLength;\n    while (offset < tableEnd) {\n      // add an entry that maps the elementary_pid to the stream_type\n      self.programMapTable[(payload[offset + 1] & 0x1F) << 8 | payload[offset + 2]] = payload[offset];\n\n      // move to the next table entry\n      // skip past the elementary stream descriptors, if present\n      offset += ((payload[offset + 3] & 0x0F) << 8 | payload[offset + 4]) + 5;\n    }\n\n    // record the map on the packet as well\n    pmt.programMapTable = self.programMapTable;\n\n    // if there are any packets waiting for a PMT to be found, process them now\n    while (self.packetsWaitingForPmt.length) {\n      self.processPes_.apply(self, self.packetsWaitingForPmt.shift());\n    }\n  };\n\n  /**\n   * Deliver a new MP2T packet to the stream.\n   */\n  this.push = function(packet) {\n    var\n      result = {},\n      offset = 4;\n\n    result.payloadUnitStartIndicator = !!(packet[1] & 0x40);\n\n    // pid is a 13-bit field starting at the last bit of packet[1]\n    result.pid = packet[1] & 0x1f;\n    result.pid <<= 8;\n    result.pid |= packet[2];\n\n    // if an adaption field is present, its length is specified by the\n    // fifth byte of the TS packet header. The adaptation field is\n    // used to add stuffing to PES packets that don't fill a complete\n    // TS packet, and to specify some forms of timing and control data\n    // that we do not currently use.\n    if (((packet[3] & 0x30) >>> 4) > 0x01) {\n      offset += packet[offset] + 1;\n    }\n\n    // parse the rest of the packet based on the type\n    if (result.pid === 0) {\n      result.type = 'pat';\n      parsePsi(packet.subarray(offset), result);\n      this.trigger('data', result);\n    } else if (result.pid === this.pmtPid) {\n      result.type = 'pmt';\n      parsePsi(packet.subarray(offset), result);\n      this.trigger('data', result);\n    } else if (this.programMapTable === undefined) {\n      // When we have not seen a PMT yet, defer further processing of\n      // PES packets until one has been parsed\n      this.packetsWaitingForPmt.push([packet, offset, result]);\n    } else {\n      this.processPes_(packet, offset, result);\n    }\n  };\n\n  this.processPes_ = function(packet, offset, result) {\n    result.streamType = this.programMapTable[result.pid];\n    result.type = 'pes';\n    result.data = packet.subarray(offset);\n\n    this.trigger('data', result);\n  };\n\n};\nTransportParseStream.prototype = new Stream();\nTransportParseStream.STREAM_TYPES  = {\n  h264: 0x1b,\n  adts: 0x0f\n};\n\n/**\n * Reconsistutes program elementary stream (PES) packets from parsed\n * transport stream packets. That is, if you pipe an\n * mp2t.TransportParseStream into a mp2t.ElementaryStream, the output\n * events will be events which capture the bytes for individual PES\n * packets plus relevant metadata that has been extracted from the\n * container.\n */\nElementaryStream = function() {\n  var\n    self = this,\n    // PES packet fragments\n    video = {\n      data: [],\n      size: 0\n    },\n    audio = {\n      data: [],\n      size: 0\n    },\n    timedMetadata = {\n      data: [],\n      size: 0\n    },\n    parsePes = function(payload, pes) {\n      var ptsDtsFlags;\n\n      // find out if this packets starts a new keyframe\n      pes.dataAlignmentIndicator = (payload[6] & 0x04) !== 0;\n      // PES packets may be annotated with a PTS value, or a PTS value\n      // and a DTS value. Determine what combination of values is\n      // available to work with.\n      ptsDtsFlags = payload[7];\n\n      // PTS and DTS are normally stored as a 33-bit number.  Javascript\n      // performs all bitwise operations on 32-bit integers but javascript\n      // supports a much greater range (52-bits) of integer using standard\n      // mathematical operations.\n      // We construct a 31-bit value using bitwise operators over the 31\n      // most significant bits and then multiply by 4 (equal to a left-shift\n      // of 2) before we add the final 2 least significant bits of the\n      // timestamp (equal to an OR.)\n      if (ptsDtsFlags & 0xC0) {\n        // the PTS and DTS are not written out directly. For information\n        // on how they are encoded, see\n        // http://dvd.sourceforge.net/dvdinfo/pes-hdr.html\n        pes.pts = (payload[9] & 0x0E) << 27 |\n          (payload[10] & 0xFF) << 20 |\n          (payload[11] & 0xFE) << 12 |\n          (payload[12] & 0xFF) <<  5 |\n          (payload[13] & 0xFE) >>>  3;\n        pes.pts *= 4; // Left shift by 2\n        pes.pts += (payload[13] & 0x06) >>> 1; // OR by the two LSBs\n        pes.dts = pes.pts;\n        if (ptsDtsFlags & 0x40) {\n          pes.dts = (payload[14] & 0x0E) << 27 |\n            (payload[15] & 0xFF) << 20 |\n            (payload[16] & 0xFE) << 12 |\n            (payload[17] & 0xFF) << 5 |\n            (payload[18] & 0xFE) >>> 3;\n          pes.dts *= 4; // Left shift by 2\n          pes.dts += (payload[18] & 0x06) >>> 1; // OR by the two LSBs\n        }\n      }\n      // the data section starts immediately after the PES header.\n      // pes_header_data_length specifies the number of header bytes\n      // that follow the last byte of the field.\n      pes.data = payload.subarray(9 + payload[8]);\n    },\n    flushStream = function(stream, type) {\n      var\n        packetData = new Uint8Array(stream.size),\n        event = {\n          type: type\n        },\n        i = 0,\n        fragment;\n\n      // do nothing if there is no buffered data\n      if (!stream.data.length) {\n        return;\n      }\n      event.trackId = stream.data[0].pid;\n\n      // reassemble the packet\n      while (stream.data.length) {\n        fragment = stream.data.shift();\n\n        packetData.set(fragment.data, i);\n        i += fragment.data.byteLength;\n      }\n\n      // parse assembled packet's PES header\n      parsePes(packetData, event);\n\n      stream.size = 0;\n\n      self.trigger('data', event);\n    };\n\n  ElementaryStream.prototype.init.call(this);\n\n  this.push = function(data) {\n    ({\n      pat: function() {\n        // we have to wait for the PMT to arrive as well before we\n        // have any meaningful metadata\n      },\n      pes: function() {\n        var stream, streamType;\n\n        switch (data.streamType) {\n        case StreamTypes.H264_STREAM_TYPE:\n        case m2tsStreamTypes.H264_STREAM_TYPE:\n          stream = video;\n          streamType = 'video';\n          break;\n        case StreamTypes.ADTS_STREAM_TYPE:\n          stream = audio;\n          streamType = 'audio';\n          break;\n        case StreamTypes.METADATA_STREAM_TYPE:\n          stream = timedMetadata;\n          streamType = 'timed-metadata';\n          break;\n        default:\n          // ignore unknown stream types\n          return;\n        }\n\n        // if a new packet is starting, we can flush the completed\n        // packet\n        if (data.payloadUnitStartIndicator) {\n          flushStream(stream, streamType);\n        }\n\n        // buffer this fragment until we are sure we've received the\n        // complete payload\n        stream.data.push(data);\n        stream.size += data.data.byteLength;\n      },\n      pmt: function() {\n        var\n          event = {\n            type: 'metadata',\n            tracks: []\n          },\n          programMapTable = data.programMapTable,\n          k,\n          track;\n\n        // translate streams to tracks\n        for (k in programMapTable) {\n          if (programMapTable.hasOwnProperty(k)) {\n            track = {\n              timelineStartInfo: {\n                baseMediaDecodeTime: 0\n              }\n            };\n            track.id = +k;\n            if (programMapTable[k] === m2tsStreamTypes.H264_STREAM_TYPE) {\n              track.codec = 'avc';\n              track.type = 'video';\n            } else if (programMapTable[k] === m2tsStreamTypes.ADTS_STREAM_TYPE) {\n              track.codec = 'adts';\n              track.type = 'audio';\n            }\n            event.tracks.push(track);\n          }\n        }\n        self.trigger('data', event);\n      }\n    })[data.type]();\n  };\n\n  /**\n   * Flush any remaining input. Video PES packets may be of variable\n   * length. Normally, the start of a new video packet can trigger the\n   * finalization of the previous packet. That is not possible if no\n   * more video is forthcoming, however. In that case, some other\n   * mechanism (like the end of the file) has to be employed. When it is\n   * clear that no additional data is forthcoming, calling this method\n   * will flush the buffered packets.\n   */\n  this.flush = function() {\n    // !!THIS ORDER IS IMPORTANT!!\n    // video first then audio\n    flushStream(video, 'video');\n    flushStream(audio, 'audio');\n    flushStream(timedMetadata, 'timed-metadata');\n    this.trigger('done');\n  };\n};\nElementaryStream.prototype = new Stream();\n\nvar m2ts = {\n  PAT_PID: 0x0000,\n  MP2T_PACKET_LENGTH: MP2T_PACKET_LENGTH,\n  TransportPacketStream: TransportPacketStream,\n  TransportParseStream: TransportParseStream,\n  ElementaryStream: ElementaryStream,\n  TimestampRolloverStream: TimestampRolloverStream,\n  CaptionStream: CaptionStream.CaptionStream,\n  Cea608Stream: CaptionStream.Cea608Stream,\n  MetadataStream: require('./metadata-stream')\n};\n\nfor (var type in StreamTypes) {\n  if (StreamTypes.hasOwnProperty(type)) {\n    m2ts[type] = StreamTypes[type];\n  }\n}\n\nmodule.exports = m2ts;\n\n},{\"../utils/stream.js\":89,\"./caption-stream\":77,\"./metadata-stream\":79,\"./stream-types\":81,\"./stream-types.js\":81,\"./timestamp-rollover-stream\":82}],79:[function(require,module,exports){\n/**\n * Accepts program elementary stream (PES) data events and parses out\n * ID3 metadata from them, if present.\n * @see http://id3.org/id3v2.3.0\n */\n'use strict';\nvar\n  Stream = require('../utils/stream'),\n  StreamTypes = require('./stream-types'),\n  // return a percent-encoded representation of the specified byte range\n  // @see http://en.wikipedia.org/wiki/Percent-encoding\n  percentEncode = function(bytes, start, end) {\n    var i, result = '';\n    for (i = start; i < end; i++) {\n      result += '%' + ('00' + bytes[i].toString(16)).slice(-2);\n    }\n    return result;\n  },\n  // return the string representation of the specified byte range,\n  // interpreted as UTf-8.\n  parseUtf8 = function(bytes, start, end) {\n    return decodeURIComponent(percentEncode(bytes, start, end));\n  },\n  // return the string representation of the specified byte range,\n  // interpreted as ISO-8859-1.\n  parseIso88591 = function(bytes, start, end) {\n    return unescape(percentEncode(bytes, start, end)); // jshint ignore:line\n  },\n  parseSyncSafeInteger = function(data) {\n    return (data[0] << 21) |\n            (data[1] << 14) |\n            (data[2] << 7) |\n            (data[3]);\n  },\n  tagParsers = {\n    TXXX: function(tag) {\n      var i;\n      if (tag.data[0] !== 3) {\n        // ignore frames with unrecognized character encodings\n        return;\n      }\n\n      for (i = 1; i < tag.data.length; i++) {\n        if (tag.data[i] === 0) {\n          // parse the text fields\n          tag.description = parseUtf8(tag.data, 1, i);\n          // do not include the null terminator in the tag value\n          tag.value = parseUtf8(tag.data, i + 1, tag.data.length - 1);\n          break;\n        }\n      }\n      tag.data = tag.value;\n    },\n    WXXX: function(tag) {\n      var i;\n      if (tag.data[0] !== 3) {\n        // ignore frames with unrecognized character encodings\n        return;\n      }\n\n      for (i = 1; i < tag.data.length; i++) {\n        if (tag.data[i] === 0) {\n          // parse the description and URL fields\n          tag.description = parseUtf8(tag.data, 1, i);\n          tag.url = parseUtf8(tag.data, i + 1, tag.data.length);\n          break;\n        }\n      }\n    },\n    PRIV: function(tag) {\n      var i;\n\n      for (i = 0; i < tag.data.length; i++) {\n        if (tag.data[i] === 0) {\n          // parse the description and URL fields\n          tag.owner = parseIso88591(tag.data, 0, i);\n          break;\n        }\n      }\n      tag.privateData = tag.data.subarray(i + 1);\n      tag.data = tag.privateData;\n    }\n  },\n  MetadataStream;\n\nMetadataStream = function(options) {\n  var\n    settings = {\n      debug: !!(options && options.debug),\n\n      // the bytes of the program-level descriptor field in MP2T\n      // see ISO/IEC 13818-1:2013 (E), section 2.6 \"Program and\n      // program element descriptors\"\n      descriptor: options && options.descriptor\n    },\n    // the total size in bytes of the ID3 tag being parsed\n    tagSize = 0,\n    // tag data that is not complete enough to be parsed\n    buffer = [],\n    // the total number of bytes currently in the buffer\n    bufferSize = 0,\n    i;\n\n  MetadataStream.prototype.init.call(this);\n\n  // calculate the text track in-band metadata track dispatch type\n  // https://html.spec.whatwg.org/multipage/embedded-content.html#steps-to-expose-a-media-resource-specific-text-track\n  this.dispatchType = StreamTypes.METADATA_STREAM_TYPE.toString(16);\n  if (settings.descriptor) {\n    for (i = 0; i < settings.descriptor.length; i++) {\n      this.dispatchType += ('00' + settings.descriptor[i].toString(16)).slice(-2);\n    }\n  }\n\n  this.push = function(chunk) {\n    var tag, frameStart, frameSize, frame, i, frameHeader;\n    if (chunk.type !== 'timed-metadata') {\n      return;\n    }\n\n    // if data_alignment_indicator is set in the PES header,\n    // we must have the start of a new ID3 tag. Assume anything\n    // remaining in the buffer was malformed and throw it out\n    if (chunk.dataAlignmentIndicator) {\n      bufferSize = 0;\n      buffer.length = 0;\n    }\n\n    // ignore events that don't look like ID3 data\n    if (buffer.length === 0 &&\n        (chunk.data.length < 10 ||\n          chunk.data[0] !== 'I'.charCodeAt(0) ||\n          chunk.data[1] !== 'D'.charCodeAt(0) ||\n          chunk.data[2] !== '3'.charCodeAt(0))) {\n      if (settings.debug) {\n        // eslint-disable-next-line no-console\n        console.log('Skipping unrecognized metadata packet');\n      }\n      return;\n    }\n\n    // add this chunk to the data we've collected so far\n\n    buffer.push(chunk);\n    bufferSize += chunk.data.byteLength;\n\n    // grab the size of the entire frame from the ID3 header\n    if (buffer.length === 1) {\n      // the frame size is transmitted as a 28-bit integer in the\n      // last four bytes of the ID3 header.\n      // The most significant bit of each byte is dropped and the\n      // results concatenated to recover the actual value.\n      tagSize = parseSyncSafeInteger(chunk.data.subarray(6, 10));\n\n      // ID3 reports the tag size excluding the header but it's more\n      // convenient for our comparisons to include it\n      tagSize += 10;\n    }\n\n    // if the entire frame has not arrived, wait for more data\n    if (bufferSize < tagSize) {\n      return;\n    }\n\n    // collect the entire frame so it can be parsed\n    tag = {\n      data: new Uint8Array(tagSize),\n      frames: [],\n      pts: buffer[0].pts,\n      dts: buffer[0].dts\n    };\n    for (i = 0; i < tagSize;) {\n      tag.data.set(buffer[0].data.subarray(0, tagSize - i), i);\n      i += buffer[0].data.byteLength;\n      bufferSize -= buffer[0].data.byteLength;\n      buffer.shift();\n    }\n\n    // find the start of the first frame and the end of the tag\n    frameStart = 10;\n    if (tag.data[5] & 0x40) {\n      // advance the frame start past the extended header\n      frameStart += 4; // header size field\n      frameStart += parseSyncSafeInteger(tag.data.subarray(10, 14));\n\n      // clip any padding off the end\n      tagSize -= parseSyncSafeInteger(tag.data.subarray(16, 20));\n    }\n\n    // parse one or more ID3 frames\n    // http://id3.org/id3v2.3.0#ID3v2_frame_overview\n    do {\n      // determine the number of bytes in this frame\n      frameSize = parseSyncSafeInteger(tag.data.subarray(frameStart + 4, frameStart + 8));\n      if (frameSize < 1) {\n         // eslint-disable-next-line no-console\n        return console.log('Malformed ID3 frame encountered. Skipping metadata parsing.');\n      }\n      frameHeader = String.fromCharCode(tag.data[frameStart],\n                                        tag.data[frameStart + 1],\n                                        tag.data[frameStart + 2],\n                                        tag.data[frameStart + 3]);\n\n\n      frame = {\n        id: frameHeader,\n        data: tag.data.subarray(frameStart + 10, frameStart + frameSize + 10)\n      };\n      frame.key = frame.id;\n      if (tagParsers[frame.id]) {\n        tagParsers[frame.id](frame);\n\n        // handle the special PRIV frame used to indicate the start\n        // time for raw AAC data\n        if (frame.owner === 'com.apple.streaming.transportStreamTimestamp') {\n          var\n            d = frame.data,\n            size = ((d[3] & 0x01)  << 30) |\n                   (d[4]  << 22) |\n                   (d[5] << 14) |\n                   (d[6] << 6) |\n                   (d[7] >>> 2);\n\n          size *= 4;\n          size += d[7] & 0x03;\n          frame.timeStamp = size;\n          // in raw AAC, all subsequent data will be timestamped based\n          // on the value of this frame\n          // we couldn't have known the appropriate pts and dts before\n          // parsing this ID3 tag so set those values now\n          if (tag.pts === undefined && tag.dts === undefined) {\n            tag.pts = frame.timeStamp;\n            tag.dts = frame.timeStamp;\n          }\n          this.trigger('timestamp', frame);\n        }\n      }\n      tag.frames.push(frame);\n\n      frameStart += 10; // advance past the frame header\n      frameStart += frameSize; // advance past the frame body\n    } while (frameStart < tagSize);\n    this.trigger('data', tag);\n  };\n};\nMetadataStream.prototype = new Stream();\n\nmodule.exports = MetadataStream;\n\n},{\"../utils/stream\":89,\"./stream-types\":81}],80:[function(require,module,exports){\n/**\n * mux.js\n *\n * Copyright (c) 2016 Brightcove\n * All rights reserved.\n *\n * Utilities to detect basic properties and metadata about TS Segments.\n */\n'use strict';\n\nvar StreamTypes = require('./stream-types.js');\n\nvar parsePid = function(packet) {\n  var pid = packet[1] & 0x1f;\n  pid <<= 8;\n  pid |= packet[2];\n  return pid;\n};\n\nvar parsePayloadUnitStartIndicator = function(packet) {\n  return !!(packet[1] & 0x40);\n};\n\nvar parseAdaptionField = function(packet) {\n  var offset = 0;\n  // if an adaption field is present, its length is specified by the\n  // fifth byte of the TS packet header. The adaptation field is\n  // used to add stuffing to PES packets that don't fill a complete\n  // TS packet, and to specify some forms of timing and control data\n  // that we do not currently use.\n  if (((packet[3] & 0x30) >>> 4) > 0x01) {\n    offset += packet[4] + 1;\n  }\n  return offset;\n};\n\nvar parseType = function(packet, pmtPid) {\n  var pid = parsePid(packet);\n  if (pid === 0) {\n    return 'pat';\n  } else if (pid === pmtPid) {\n    return 'pmt';\n  } else if (pmtPid) {\n    return 'pes';\n  }\n  return null;\n};\n\nvar parsePat = function(packet) {\n  var pusi = parsePayloadUnitStartIndicator(packet);\n  var offset = 4 + parseAdaptionField(packet);\n\n  if (pusi) {\n    offset += packet[offset] + 1;\n  }\n\n  return (packet[offset + 10] & 0x1f) << 8 | packet[offset + 11];\n};\n\nvar parsePmt = function(packet) {\n  var programMapTable = {};\n  var pusi = parsePayloadUnitStartIndicator(packet);\n  var payloadOffset = 4 + parseAdaptionField(packet);\n\n  if (pusi) {\n    payloadOffset += packet[payloadOffset] + 1;\n  }\n\n  // PMTs can be sent ahead of the time when they should actually\n  // take effect. We don't believe this should ever be the case\n  // for HLS but we'll ignore \"forward\" PMT declarations if we see\n  // them. Future PMT declarations have the current_next_indicator\n  // set to zero.\n  if (!(packet[payloadOffset + 5] & 0x01)) {\n    return;\n  }\n\n  var sectionLength, tableEnd, programInfoLength;\n  // the mapping table ends at the end of the current section\n  sectionLength = (packet[payloadOffset + 1] & 0x0f) << 8 | packet[payloadOffset + 2];\n  tableEnd = 3 + sectionLength - 4;\n\n  // to determine where the table is, we have to figure out how\n  // long the program info descriptors are\n  programInfoLength = (packet[payloadOffset + 10] & 0x0f) << 8 | packet[payloadOffset + 11];\n\n  // advance the offset to the first entry in the mapping table\n  var offset = 12 + programInfoLength;\n  while (offset < tableEnd) {\n    var i = payloadOffset + offset;\n    // add an entry that maps the elementary_pid to the stream_type\n    programMapTable[(packet[i + 1] & 0x1F) << 8 | packet[i + 2]] = packet[i];\n\n    // move to the next table entry\n    // skip past the elementary stream descriptors, if present\n    offset += ((packet[i + 3] & 0x0F) << 8 | packet[i + 4]) + 5;\n  }\n  return programMapTable;\n};\n\nvar parsePesType = function(packet, programMapTable) {\n  var pid = parsePid(packet);\n  var type = programMapTable[pid];\n  switch (type) {\n    case StreamTypes.H264_STREAM_TYPE:\n      return 'video';\n    case StreamTypes.ADTS_STREAM_TYPE:\n      return 'audio';\n    case StreamTypes.METADATA_STREAM_TYPE:\n      return 'timed-metadata';\n    default:\n      return null;\n  }\n};\n\nvar parsePesTime = function(packet) {\n  var pusi = parsePayloadUnitStartIndicator(packet);\n  if (!pusi) {\n    return null;\n  }\n\n  var offset = 4 + parseAdaptionField(packet);\n\n  var pes = {};\n  var ptsDtsFlags;\n\n  // PES packets may be annotated with a PTS value, or a PTS value\n  // and a DTS value. Determine what combination of values is\n  // available to work with.\n  ptsDtsFlags = packet[offset + 7];\n\n  // PTS and DTS are normally stored as a 33-bit number.  Javascript\n  // performs all bitwise operations on 32-bit integers but javascript\n  // supports a much greater range (52-bits) of integer using standard\n  // mathematical operations.\n  // We construct a 31-bit value using bitwise operators over the 31\n  // most significant bits and then multiply by 4 (equal to a left-shift\n  // of 2) before we add the final 2 least significant bits of the\n  // timestamp (equal to an OR.)\n  if (ptsDtsFlags & 0xC0) {\n    // the PTS and DTS are not written out directly. For information\n    // on how they are encoded, see\n    // http://dvd.sourceforge.net/dvdinfo/pes-hdr.html\n    pes.pts = (packet[offset + 9] & 0x0E) << 27 |\n      (packet[offset + 10] & 0xFF) << 20 |\n      (packet[offset + 11] & 0xFE) << 12 |\n      (packet[offset + 12] & 0xFF) <<  5 |\n      (packet[offset + 13] & 0xFE) >>>  3;\n    pes.pts *= 4; // Left shift by 2\n    pes.pts += (packet[offset + 13] & 0x06) >>> 1; // OR by the two LSBs\n    pes.dts = pes.pts;\n    if (ptsDtsFlags & 0x40) {\n      pes.dts = (packet[offset + 14] & 0x0E) << 27 |\n        (packet[offset + 15] & 0xFF) << 20 |\n        (packet[offset + 16] & 0xFE) << 12 |\n        (packet[offset + 17] & 0xFF) << 5 |\n        (packet[offset + 18] & 0xFE) >>> 3;\n      pes.dts *= 4; // Left shift by 2\n      pes.dts += (packet[offset + 18] & 0x06) >>> 1; // OR by the two LSBs\n    }\n  }\n  return pes;\n};\n\nvar parseNalUnitType = function(type) {\n  switch (type) {\n    case 0x05:\n      return 'slice_layer_without_partitioning_rbsp_idr';\n    case 0x06:\n      return 'sei_rbsp';\n    case 0x07:\n      return 'seq_parameter_set_rbsp';\n    case 0x08:\n      return 'pic_parameter_set_rbsp';\n    case 0x09:\n      return 'access_unit_delimiter_rbsp';\n    default:\n      return null;\n  }\n};\n\nvar videoPacketContainsKeyFrame = function(packet) {\n  var offset = 4 + parseAdaptionField(packet);\n  var frameBuffer = packet.subarray(offset);\n  var frameI = 0;\n  var frameSyncPoint = 0;\n  var foundKeyFrame = false;\n  var nalType;\n\n  // advance the sync point to a NAL start, if necessary\n  for (; frameSyncPoint < frameBuffer.byteLength - 3; frameSyncPoint++) {\n    if (frameBuffer[frameSyncPoint + 2] === 1) {\n      // the sync point is properly aligned\n      frameI = frameSyncPoint + 5;\n      break;\n    }\n  }\n\n  while (frameI < frameBuffer.byteLength) {\n    // look at the current byte to determine if we've hit the end of\n    // a NAL unit boundary\n    switch (frameBuffer[frameI]) {\n    case 0:\n      // skip past non-sync sequences\n      if (frameBuffer[frameI - 1] !== 0) {\n        frameI += 2;\n        break;\n      } else if (frameBuffer[frameI - 2] !== 0) {\n        frameI++;\n        break;\n      }\n\n      if (frameSyncPoint + 3 !== frameI - 2) {\n        nalType = parseNalUnitType(frameBuffer[frameSyncPoint + 3] & 0x1f);\n        if (nalType === 'slice_layer_without_partitioning_rbsp_idr') {\n          foundKeyFrame = true;\n        }\n      }\n\n      // drop trailing zeroes\n      do {\n        frameI++;\n      } while (frameBuffer[frameI] !== 1 && frameI < frameBuffer.length);\n      frameSyncPoint = frameI - 2;\n      frameI += 3;\n      break;\n    case 1:\n      // skip past non-sync sequences\n      if (frameBuffer[frameI - 1] !== 0 ||\n          frameBuffer[frameI - 2] !== 0) {\n        frameI += 3;\n        break;\n      }\n\n      nalType = parseNalUnitType(frameBuffer[frameSyncPoint + 3] & 0x1f);\n      if (nalType === 'slice_layer_without_partitioning_rbsp_idr') {\n        foundKeyFrame = true;\n      }\n      frameSyncPoint = frameI - 2;\n      frameI += 3;\n      break;\n    default:\n      // the current byte isn't a one or zero, so it cannot be part\n      // of a sync sequence\n      frameI += 3;\n      break;\n    }\n  }\n  frameBuffer = frameBuffer.subarray(frameSyncPoint);\n  frameI -= frameSyncPoint;\n  frameSyncPoint = 0;\n  // parse the final nal\n  if (frameBuffer && frameBuffer.byteLength > 3) {\n    nalType = parseNalUnitType(frameBuffer[frameSyncPoint + 3] & 0x1f);\n    if (nalType === 'slice_layer_without_partitioning_rbsp_idr') {\n      foundKeyFrame = true;\n    }\n  }\n\n  return foundKeyFrame;\n};\n\n\nmodule.exports = {\n  parseType: parseType,\n  parsePat: parsePat,\n  parsePmt: parsePmt,\n  parsePayloadUnitStartIndicator: parsePayloadUnitStartIndicator,\n  parsePesType: parsePesType,\n  parsePesTime: parsePesTime,\n  videoPacketContainsKeyFrame: videoPacketContainsKeyFrame\n};\n\n},{\"./stream-types.js\":81}],81:[function(require,module,exports){\n'use strict';\n\nmodule.exports = {\n  H264_STREAM_TYPE: 0x1B,\n  ADTS_STREAM_TYPE: 0x0F,\n  METADATA_STREAM_TYPE: 0x15\n};\n\n},{}],82:[function(require,module,exports){\n/**\n * mux.js\n *\n * Copyright (c) 2016 Brightcove\n * All rights reserved.\n *\n * Accepts program elementary stream (PES) data events and corrects\n * decode and presentation time stamps to account for a rollover\n * of the 33 bit value.\n */\n\n'use strict';\n\nvar Stream = require('../utils/stream');\n\nvar MAX_TS = 8589934592;\n\nvar RO_THRESH = 4294967296;\n\nvar handleRollover = function(value, reference) {\n  var direction = 1;\n\n  if (value > reference) {\n    // If the current timestamp value is greater than our reference timestamp and we detect a\n    // timestamp rollover, this means the roll over is happening in the opposite direction.\n    // Example scenario: Enter a long stream/video just after a rollover occurred. The reference\n    // point will be set to a small number, e.g. 1. The user then seeks backwards over the\n    // rollover point. In loading this segment, the timestamp values will be very large,\n    // e.g. 2^33 - 1. Since this comes before the data we loaded previously, we want to adjust\n    // the time stamp to be `value - 2^33`.\n    direction = -1;\n  }\n\n  // Note: A seek forwards or back that is greater than the RO_THRESH (2^32, ~13 hours) will\n  // cause an incorrect adjustment.\n  while (Math.abs(reference - value) > RO_THRESH) {\n    value += (direction * MAX_TS);\n  }\n\n  return value;\n};\n\nvar TimestampRolloverStream = function(type) {\n  var lastDTS, referenceDTS;\n\n  TimestampRolloverStream.prototype.init.call(this);\n\n  this.type_ = type;\n\n  this.push = function(data) {\n    if (data.type !== this.type_) {\n      return;\n    }\n\n    if (referenceDTS === undefined) {\n      referenceDTS = data.dts;\n    }\n\n    data.dts = handleRollover(data.dts, referenceDTS);\n    data.pts = handleRollover(data.pts, referenceDTS);\n\n    lastDTS = data.dts;\n\n    this.trigger('data', data);\n  };\n\n  this.flush = function() {\n    referenceDTS = lastDTS;\n    this.trigger('done');\n  };\n\n};\n\nTimestampRolloverStream.prototype = new Stream();\n\nmodule.exports = {\n  TimestampRolloverStream: TimestampRolloverStream,\n  handleRollover: handleRollover\n};\n\n},{\"../utils/stream\":89}],83:[function(require,module,exports){\nmodule.exports = {\n  generator: require('./mp4-generator'),\n  Transmuxer: require('./transmuxer').Transmuxer,\n  AudioSegmentStream: require('./transmuxer').AudioSegmentStream,\n  VideoSegmentStream: require('./transmuxer').VideoSegmentStream\n};\n\n},{\"./mp4-generator\":84,\"./transmuxer\":86}],84:[function(require,module,exports){\n/**\n * mux.js\n *\n * Copyright (c) 2015 Brightcove\n * All rights reserved.\n *\n * Functions that generate fragmented MP4s suitable for use with Media\n * Source Extensions.\n */\n'use strict';\n\nvar UINT32_MAX = Math.pow(2, 32) - 1;\n\nvar box, dinf, esds, ftyp, mdat, mfhd, minf, moof, moov, mvex, mvhd,\n    trak, tkhd, mdia, mdhd, hdlr, sdtp, stbl, stsd, traf, trex,\n    trun, types, MAJOR_BRAND, MINOR_VERSION, AVC1_BRAND, VIDEO_HDLR,\n    AUDIO_HDLR, HDLR_TYPES, VMHD, SMHD, DREF, STCO, STSC, STSZ, STTS;\n\n// pre-calculate constants\n(function() {\n  var i;\n  types = {\n    avc1: [], // codingname\n    avcC: [],\n    btrt: [],\n    dinf: [],\n    dref: [],\n    esds: [],\n    ftyp: [],\n    hdlr: [],\n    mdat: [],\n    mdhd: [],\n    mdia: [],\n    mfhd: [],\n    minf: [],\n    moof: [],\n    moov: [],\n    mp4a: [], // codingname\n    mvex: [],\n    mvhd: [],\n    sdtp: [],\n    smhd: [],\n    stbl: [],\n    stco: [],\n    stsc: [],\n    stsd: [],\n    stsz: [],\n    stts: [],\n    styp: [],\n    tfdt: [],\n    tfhd: [],\n    traf: [],\n    trak: [],\n    trun: [],\n    trex: [],\n    tkhd: [],\n    vmhd: []\n  };\n\n  // In environments where Uint8Array is undefined (e.g., IE8), skip set up so that we\n  // don't throw an error\n  if (typeof Uint8Array === 'undefined') {\n    return;\n  }\n\n  for (i in types) {\n    if (types.hasOwnProperty(i)) {\n      types[i] = [\n        i.charCodeAt(0),\n        i.charCodeAt(1),\n        i.charCodeAt(2),\n        i.charCodeAt(3)\n      ];\n    }\n  }\n\n  MAJOR_BRAND = new Uint8Array([\n    'i'.charCodeAt(0),\n    's'.charCodeAt(0),\n    'o'.charCodeAt(0),\n    'm'.charCodeAt(0)\n  ]);\n  AVC1_BRAND = new Uint8Array([\n    'a'.charCodeAt(0),\n    'v'.charCodeAt(0),\n    'c'.charCodeAt(0),\n    '1'.charCodeAt(0)\n  ]);\n  MINOR_VERSION = new Uint8Array([0, 0, 0, 1]);\n  VIDEO_HDLR = new Uint8Array([\n    0x00, // version 0\n    0x00, 0x00, 0x00, // flags\n    0x00, 0x00, 0x00, 0x00, // pre_defined\n    0x76, 0x69, 0x64, 0x65, // handler_type: 'vide'\n    0x00, 0x00, 0x00, 0x00, // reserved\n    0x00, 0x00, 0x00, 0x00, // reserved\n    0x00, 0x00, 0x00, 0x00, // reserved\n    0x56, 0x69, 0x64, 0x65,\n    0x6f, 0x48, 0x61, 0x6e,\n    0x64, 0x6c, 0x65, 0x72, 0x00 // name: 'VideoHandler'\n  ]);\n  AUDIO_HDLR = new Uint8Array([\n    0x00, // version 0\n    0x00, 0x00, 0x00, // flags\n    0x00, 0x00, 0x00, 0x00, // pre_defined\n    0x73, 0x6f, 0x75, 0x6e, // handler_type: 'soun'\n    0x00, 0x00, 0x00, 0x00, // reserved\n    0x00, 0x00, 0x00, 0x00, // reserved\n    0x00, 0x00, 0x00, 0x00, // reserved\n    0x53, 0x6f, 0x75, 0x6e,\n    0x64, 0x48, 0x61, 0x6e,\n    0x64, 0x6c, 0x65, 0x72, 0x00 // name: 'SoundHandler'\n  ]);\n  HDLR_TYPES = {\n    video: VIDEO_HDLR,\n    audio: AUDIO_HDLR\n  };\n  DREF = new Uint8Array([\n    0x00, // version 0\n    0x00, 0x00, 0x00, // flags\n    0x00, 0x00, 0x00, 0x01, // entry_count\n    0x00, 0x00, 0x00, 0x0c, // entry_size\n    0x75, 0x72, 0x6c, 0x20, // 'url' type\n    0x00, // version 0\n    0x00, 0x00, 0x01 // entry_flags\n  ]);\n  SMHD = new Uint8Array([\n    0x00,             // version\n    0x00, 0x00, 0x00, // flags\n    0x00, 0x00,       // balance, 0 means centered\n    0x00, 0x00        // reserved\n  ]);\n  STCO = new Uint8Array([\n    0x00, // version\n    0x00, 0x00, 0x00, // flags\n    0x00, 0x00, 0x00, 0x00 // entry_count\n  ]);\n  STSC = STCO;\n  STSZ = new Uint8Array([\n    0x00, // version\n    0x00, 0x00, 0x00, // flags\n    0x00, 0x00, 0x00, 0x00, // sample_size\n    0x00, 0x00, 0x00, 0x00 // sample_count\n  ]);\n  STTS = STCO;\n  VMHD = new Uint8Array([\n    0x00, // version\n    0x00, 0x00, 0x01, // flags\n    0x00, 0x00, // graphicsmode\n    0x00, 0x00,\n    0x00, 0x00,\n    0x00, 0x00 // opcolor\n  ]);\n}());\n\nbox = function(type) {\n  var\n    payload = [],\n    size = 0,\n    i,\n    result,\n    view;\n\n  for (i = 1; i < arguments.length; i++) {\n    payload.push(arguments[i]);\n  }\n\n  i = payload.length;\n\n  // calculate the total size we need to allocate\n  while (i--) {\n    size += payload[i].byteLength;\n  }\n  result = new Uint8Array(size + 8);\n  view = new DataView(result.buffer, result.byteOffset, result.byteLength);\n  view.setUint32(0, result.byteLength);\n  result.set(type, 4);\n\n  // copy the payload into the result\n  for (i = 0, size = 8; i < payload.length; i++) {\n    result.set(payload[i], size);\n    size += payload[i].byteLength;\n  }\n  return result;\n};\n\ndinf = function() {\n  return box(types.dinf, box(types.dref, DREF));\n};\n\nesds = function(track) {\n  return box(types.esds, new Uint8Array([\n    0x00, // version\n    0x00, 0x00, 0x00, // flags\n\n    // ES_Descriptor\n    0x03, // tag, ES_DescrTag\n    0x19, // length\n    0x00, 0x00, // ES_ID\n    0x00, // streamDependenceFlag, URL_flag, reserved, streamPriority\n\n    // DecoderConfigDescriptor\n    0x04, // tag, DecoderConfigDescrTag\n    0x11, // length\n    0x40, // object type\n    0x15,  // streamType\n    0x00, 0x06, 0x00, // bufferSizeDB\n    0x00, 0x00, 0xda, 0xc0, // maxBitrate\n    0x00, 0x00, 0xda, 0xc0, // avgBitrate\n\n    // DecoderSpecificInfo\n    0x05, // tag, DecoderSpecificInfoTag\n    0x02, // length\n    // ISO/IEC 14496-3, AudioSpecificConfig\n    // for samplingFrequencyIndex see ISO/IEC 13818-7:2006, 8.1.3.2.2, Table 35\n    (track.audioobjecttype << 3) | (track.samplingfrequencyindex >>> 1),\n    (track.samplingfrequencyindex << 7) | (track.channelcount << 3),\n    0x06, 0x01, 0x02 // GASpecificConfig\n  ]));\n};\n\nftyp = function() {\n  return box(types.ftyp, MAJOR_BRAND, MINOR_VERSION, MAJOR_BRAND, AVC1_BRAND);\n};\n\nhdlr = function(type) {\n  return box(types.hdlr, HDLR_TYPES[type]);\n};\nmdat = function(data) {\n  return box(types.mdat, data);\n};\nmdhd = function(track) {\n  var result = new Uint8Array([\n    0x00,                   // version 0\n    0x00, 0x00, 0x00,       // flags\n    0x00, 0x00, 0x00, 0x02, // creation_time\n    0x00, 0x00, 0x00, 0x03, // modification_time\n    0x00, 0x01, 0x5f, 0x90, // timescale, 90,000 \"ticks\" per second\n\n    (track.duration >>> 24) & 0xFF,\n    (track.duration >>> 16) & 0xFF,\n    (track.duration >>>  8) & 0xFF,\n    track.duration & 0xFF,  // duration\n    0x55, 0xc4,             // 'und' language (undetermined)\n    0x00, 0x00\n  ]);\n\n  // Use the sample rate from the track metadata, when it is\n  // defined. The sample rate can be parsed out of an ADTS header, for\n  // instance.\n  if (track.samplerate) {\n    result[12] = (track.samplerate >>> 24) & 0xFF;\n    result[13] = (track.samplerate >>> 16) & 0xFF;\n    result[14] = (track.samplerate >>>  8) & 0xFF;\n    result[15] = (track.samplerate)        & 0xFF;\n  }\n\n  return box(types.mdhd, result);\n};\nmdia = function(track) {\n  return box(types.mdia, mdhd(track), hdlr(track.type), minf(track));\n};\nmfhd = function(sequenceNumber) {\n  return box(types.mfhd, new Uint8Array([\n    0x00,\n    0x00, 0x00, 0x00, // flags\n    (sequenceNumber & 0xFF000000) >> 24,\n    (sequenceNumber & 0xFF0000) >> 16,\n    (sequenceNumber & 0xFF00) >> 8,\n    sequenceNumber & 0xFF // sequence_number\n  ]));\n};\nminf = function(track) {\n  return box(types.minf,\n             track.type === 'video' ? box(types.vmhd, VMHD) : box(types.smhd, SMHD),\n             dinf(),\n             stbl(track));\n};\nmoof = function(sequenceNumber, tracks) {\n  var\n    trackFragments = [],\n    i = tracks.length;\n  // build traf boxes for each track fragment\n  while (i--) {\n    trackFragments[i] = traf(tracks[i]);\n  }\n  return box.apply(null, [\n    types.moof,\n    mfhd(sequenceNumber)\n  ].concat(trackFragments));\n};\n/**\n * Returns a movie box.\n * @param tracks {array} the tracks associated with this movie\n * @see ISO/IEC 14496-12:2012(E), section 8.2.1\n */\nmoov = function(tracks) {\n  var\n    i = tracks.length,\n    boxes = [];\n\n  while (i--) {\n    boxes[i] = trak(tracks[i]);\n  }\n\n  return box.apply(null, [types.moov, mvhd(0xffffffff)].concat(boxes).concat(mvex(tracks)));\n};\nmvex = function(tracks) {\n  var\n    i = tracks.length,\n    boxes = [];\n\n  while (i--) {\n    boxes[i] = trex(tracks[i]);\n  }\n  return box.apply(null, [types.mvex].concat(boxes));\n};\nmvhd = function(duration) {\n  var\n    bytes = new Uint8Array([\n      0x00, // version 0\n      0x00, 0x00, 0x00, // flags\n      0x00, 0x00, 0x00, 0x01, // creation_time\n      0x00, 0x00, 0x00, 0x02, // modification_time\n      0x00, 0x01, 0x5f, 0x90, // timescale, 90,000 \"ticks\" per second\n      (duration & 0xFF000000) >> 24,\n      (duration & 0xFF0000) >> 16,\n      (duration & 0xFF00) >> 8,\n      duration & 0xFF, // duration\n      0x00, 0x01, 0x00, 0x00, // 1.0 rate\n      0x01, 0x00, // 1.0 volume\n      0x00, 0x00, // reserved\n      0x00, 0x00, 0x00, 0x00, // reserved\n      0x00, 0x00, 0x00, 0x00, // reserved\n      0x00, 0x01, 0x00, 0x00,\n      0x00, 0x00, 0x00, 0x00,\n      0x00, 0x00, 0x00, 0x00,\n      0x00, 0x00, 0x00, 0x00,\n      0x00, 0x01, 0x00, 0x00,\n      0x00, 0x00, 0x00, 0x00,\n      0x00, 0x00, 0x00, 0x00,\n      0x00, 0x00, 0x00, 0x00,\n      0x40, 0x00, 0x00, 0x00, // transformation: unity matrix\n      0x00, 0x00, 0x00, 0x00,\n      0x00, 0x00, 0x00, 0x00,\n      0x00, 0x00, 0x00, 0x00,\n      0x00, 0x00, 0x00, 0x00,\n      0x00, 0x00, 0x00, 0x00,\n      0x00, 0x00, 0x00, 0x00, // pre_defined\n      0xff, 0xff, 0xff, 0xff // next_track_ID\n    ]);\n  return box(types.mvhd, bytes);\n};\n\nsdtp = function(track) {\n  var\n    samples = track.samples || [],\n    bytes = new Uint8Array(4 + samples.length),\n    flags,\n    i;\n\n  // leave the full box header (4 bytes) all zero\n\n  // write the sample table\n  for (i = 0; i < samples.length; i++) {\n    flags = samples[i].flags;\n\n    bytes[i + 4] = (flags.dependsOn << 4) |\n      (flags.isDependedOn << 2) |\n      (flags.hasRedundancy);\n  }\n\n  return box(types.sdtp,\n             bytes);\n};\n\nstbl = function(track) {\n  return box(types.stbl,\n             stsd(track),\n             box(types.stts, STTS),\n             box(types.stsc, STSC),\n             box(types.stsz, STSZ),\n             box(types.stco, STCO));\n};\n\n(function() {\n  var videoSample, audioSample;\n\n  stsd = function(track) {\n\n    return box(types.stsd, new Uint8Array([\n      0x00, // version 0\n      0x00, 0x00, 0x00, // flags\n      0x00, 0x00, 0x00, 0x01\n    ]), track.type === 'video' ? videoSample(track) : audioSample(track));\n  };\n\n  videoSample = function(track) {\n    var\n      sps = track.sps || [],\n      pps = track.pps || [],\n      sequenceParameterSets = [],\n      pictureParameterSets = [],\n      i;\n\n    // assemble the SPSs\n    for (i = 0; i < sps.length; i++) {\n      sequenceParameterSets.push((sps[i].byteLength & 0xFF00) >>> 8);\n      sequenceParameterSets.push((sps[i].byteLength & 0xFF)); // sequenceParameterSetLength\n      sequenceParameterSets = sequenceParameterSets.concat(Array.prototype.slice.call(sps[i])); // SPS\n    }\n\n    // assemble the PPSs\n    for (i = 0; i < pps.length; i++) {\n      pictureParameterSets.push((pps[i].byteLength & 0xFF00) >>> 8);\n      pictureParameterSets.push((pps[i].byteLength & 0xFF));\n      pictureParameterSets = pictureParameterSets.concat(Array.prototype.slice.call(pps[i]));\n    }\n\n    return box(types.avc1, new Uint8Array([\n      0x00, 0x00, 0x00,\n      0x00, 0x00, 0x00, // reserved\n      0x00, 0x01, // data_reference_index\n      0x00, 0x00, // pre_defined\n      0x00, 0x00, // reserved\n      0x00, 0x00, 0x00, 0x00,\n      0x00, 0x00, 0x00, 0x00,\n      0x00, 0x00, 0x00, 0x00, // pre_defined\n      (track.width & 0xff00) >> 8,\n      track.width & 0xff, // width\n      (track.height & 0xff00) >> 8,\n      track.height & 0xff, // height\n      0x00, 0x48, 0x00, 0x00, // horizresolution\n      0x00, 0x48, 0x00, 0x00, // vertresolution\n      0x00, 0x00, 0x00, 0x00, // reserved\n      0x00, 0x01, // frame_count\n      0x13,\n      0x76, 0x69, 0x64, 0x65,\n      0x6f, 0x6a, 0x73, 0x2d,\n      0x63, 0x6f, 0x6e, 0x74,\n      0x72, 0x69, 0x62, 0x2d,\n      0x68, 0x6c, 0x73, 0x00,\n      0x00, 0x00, 0x00, 0x00,\n      0x00, 0x00, 0x00, 0x00,\n      0x00, 0x00, 0x00, // compressorname\n      0x00, 0x18, // depth = 24\n      0x11, 0x11 // pre_defined = -1\n    ]), box(types.avcC, new Uint8Array([\n      0x01, // configurationVersion\n      track.profileIdc, // AVCProfileIndication\n      track.profileCompatibility, // profile_compatibility\n      track.levelIdc, // AVCLevelIndication\n      0xff // lengthSizeMinusOne, hard-coded to 4 bytes\n    ].concat([\n      sps.length // numOfSequenceParameterSets\n    ]).concat(sequenceParameterSets).concat([\n      pps.length // numOfPictureParameterSets\n    ]).concat(pictureParameterSets))), // \"PPS\"\n            box(types.btrt, new Uint8Array([\n              0x00, 0x1c, 0x9c, 0x80, // bufferSizeDB\n              0x00, 0x2d, 0xc6, 0xc0, // maxBitrate\n              0x00, 0x2d, 0xc6, 0xc0\n            ])) // avgBitrate\n              );\n  };\n\n  audioSample = function(track) {\n    return box(types.mp4a, new Uint8Array([\n\n      // SampleEntry, ISO/IEC 14496-12\n      0x00, 0x00, 0x00,\n      0x00, 0x00, 0x00, // reserved\n      0x00, 0x01, // data_reference_index\n\n      // AudioSampleEntry, ISO/IEC 14496-12\n      0x00, 0x00, 0x00, 0x00, // reserved\n      0x00, 0x00, 0x00, 0x00, // reserved\n      (track.channelcount & 0xff00) >> 8,\n      (track.channelcount & 0xff), // channelcount\n\n      (track.samplesize & 0xff00) >> 8,\n      (track.samplesize & 0xff), // samplesize\n      0x00, 0x00, // pre_defined\n      0x00, 0x00, // reserved\n\n      (track.samplerate & 0xff00) >> 8,\n      (track.samplerate & 0xff),\n      0x00, 0x00 // samplerate, 16.16\n\n      // MP4AudioSampleEntry, ISO/IEC 14496-14\n    ]), esds(track));\n  };\n}());\n\ntkhd = function(track) {\n  var result = new Uint8Array([\n    0x00, // version 0\n    0x00, 0x00, 0x07, // flags\n    0x00, 0x00, 0x00, 0x00, // creation_time\n    0x00, 0x00, 0x00, 0x00, // modification_time\n    (track.id & 0xFF000000) >> 24,\n    (track.id & 0xFF0000) >> 16,\n    (track.id & 0xFF00) >> 8,\n    track.id & 0xFF, // track_ID\n    0x00, 0x00, 0x00, 0x00, // reserved\n    (track.duration & 0xFF000000) >> 24,\n    (track.duration & 0xFF0000) >> 16,\n    (track.duration & 0xFF00) >> 8,\n    track.duration & 0xFF, // duration\n    0x00, 0x00, 0x00, 0x00,\n    0x00, 0x00, 0x00, 0x00, // reserved\n    0x00, 0x00, // layer\n    0x00, 0x00, // alternate_group\n    0x01, 0x00, // non-audio track volume\n    0x00, 0x00, // reserved\n    0x00, 0x01, 0x00, 0x00,\n    0x00, 0x00, 0x00, 0x00,\n    0x00, 0x00, 0x00, 0x00,\n    0x00, 0x00, 0x00, 0x00,\n    0x00, 0x01, 0x00, 0x00,\n    0x00, 0x00, 0x00, 0x00,\n    0x00, 0x00, 0x00, 0x00,\n    0x00, 0x00, 0x00, 0x00,\n    0x40, 0x00, 0x00, 0x00, // transformation: unity matrix\n    (track.width & 0xFF00) >> 8,\n    track.width & 0xFF,\n    0x00, 0x00, // width\n    (track.height & 0xFF00) >> 8,\n    track.height & 0xFF,\n    0x00, 0x00 // height\n  ]);\n\n  return box(types.tkhd, result);\n};\n\n/**\n * Generate a track fragment (traf) box. A traf box collects metadata\n * about tracks in a movie fragment (moof) box.\n */\ntraf = function(track) {\n  var trackFragmentHeader, trackFragmentDecodeTime, trackFragmentRun,\n      sampleDependencyTable, dataOffset,\n      upperWordBaseMediaDecodeTime, lowerWordBaseMediaDecodeTime;\n\n  trackFragmentHeader = box(types.tfhd, new Uint8Array([\n    0x00, // version 0\n    0x00, 0x00, 0x3a, // flags\n    (track.id & 0xFF000000) >> 24,\n    (track.id & 0xFF0000) >> 16,\n    (track.id & 0xFF00) >> 8,\n    (track.id & 0xFF), // track_ID\n    0x00, 0x00, 0x00, 0x01, // sample_description_index\n    0x00, 0x00, 0x00, 0x00, // default_sample_duration\n    0x00, 0x00, 0x00, 0x00, // default_sample_size\n    0x00, 0x00, 0x00, 0x00  // default_sample_flags\n  ]));\n\n  upperWordBaseMediaDecodeTime = Math.floor(track.baseMediaDecodeTime / (UINT32_MAX + 1));\n  lowerWordBaseMediaDecodeTime = Math.floor(track.baseMediaDecodeTime % (UINT32_MAX + 1));\n\n  trackFragmentDecodeTime = box(types.tfdt, new Uint8Array([\n    0x01, // version 1\n    0x00, 0x00, 0x00, // flags\n    // baseMediaDecodeTime\n    (upperWordBaseMediaDecodeTime >>> 24) & 0xFF,\n    (upperWordBaseMediaDecodeTime >>> 16) & 0xFF,\n    (upperWordBaseMediaDecodeTime >>>  8) & 0xFF,\n    upperWordBaseMediaDecodeTime & 0xFF,\n    (lowerWordBaseMediaDecodeTime >>> 24) & 0xFF,\n    (lowerWordBaseMediaDecodeTime >>> 16) & 0xFF,\n    (lowerWordBaseMediaDecodeTime >>>  8) & 0xFF,\n    lowerWordBaseMediaDecodeTime & 0xFF\n  ]));\n\n  // the data offset specifies the number of bytes from the start of\n  // the containing moof to the first payload byte of the associated\n  // mdat\n  dataOffset = (32 + // tfhd\n                20 + // tfdt\n                8 +  // traf header\n                16 + // mfhd\n                8 +  // moof header\n                8);  // mdat header\n\n  // audio tracks require less metadata\n  if (track.type === 'audio') {\n    trackFragmentRun = trun(track, dataOffset);\n    return box(types.traf,\n               trackFragmentHeader,\n               trackFragmentDecodeTime,\n               trackFragmentRun);\n  }\n\n  // video tracks should contain an independent and disposable samples\n  // box (sdtp)\n  // generate one and adjust offsets to match\n  sampleDependencyTable = sdtp(track);\n  trackFragmentRun = trun(track,\n                          sampleDependencyTable.length + dataOffset);\n  return box(types.traf,\n             trackFragmentHeader,\n             trackFragmentDecodeTime,\n             trackFragmentRun,\n             sampleDependencyTable);\n};\n\n/**\n * Generate a track box.\n * @param track {object} a track definition\n * @return {Uint8Array} the track box\n */\ntrak = function(track) {\n  track.duration = track.duration || 0xffffffff;\n  return box(types.trak,\n             tkhd(track),\n             mdia(track));\n};\n\ntrex = function(track) {\n  var result = new Uint8Array([\n    0x00, // version 0\n    0x00, 0x00, 0x00, // flags\n    (track.id & 0xFF000000) >> 24,\n    (track.id & 0xFF0000) >> 16,\n    (track.id & 0xFF00) >> 8,\n    (track.id & 0xFF), // track_ID\n    0x00, 0x00, 0x00, 0x01, // default_sample_description_index\n    0x00, 0x00, 0x00, 0x00, // default_sample_duration\n    0x00, 0x00, 0x00, 0x00, // default_sample_size\n    0x00, 0x01, 0x00, 0x01 // default_sample_flags\n  ]);\n  // the last two bytes of default_sample_flags is the sample\n  // degradation priority, a hint about the importance of this sample\n  // relative to others. Lower the degradation priority for all sample\n  // types other than video.\n  if (track.type !== 'video') {\n    result[result.length - 1] = 0x00;\n  }\n\n  return box(types.trex, result);\n};\n\n(function() {\n  var audioTrun, videoTrun, trunHeader;\n\n  // This method assumes all samples are uniform. That is, if a\n  // duration is present for the first sample, it will be present for\n  // all subsequent samples.\n  // see ISO/IEC 14496-12:2012, Section 8.8.8.1\n  trunHeader = function(samples, offset) {\n    var durationPresent = 0, sizePresent = 0,\n        flagsPresent = 0, compositionTimeOffset = 0;\n\n    // trun flag constants\n    if (samples.length) {\n      if (samples[0].duration !== undefined) {\n        durationPresent = 0x1;\n      }\n      if (samples[0].size !== undefined) {\n        sizePresent = 0x2;\n      }\n      if (samples[0].flags !== undefined) {\n        flagsPresent = 0x4;\n      }\n      if (samples[0].compositionTimeOffset !== undefined) {\n        compositionTimeOffset = 0x8;\n      }\n    }\n\n    return [\n      0x00, // version 0\n      0x00,\n      durationPresent | sizePresent | flagsPresent | compositionTimeOffset,\n      0x01, // flags\n      (samples.length & 0xFF000000) >>> 24,\n      (samples.length & 0xFF0000) >>> 16,\n      (samples.length & 0xFF00) >>> 8,\n      samples.length & 0xFF, // sample_count\n      (offset & 0xFF000000) >>> 24,\n      (offset & 0xFF0000) >>> 16,\n      (offset & 0xFF00) >>> 8,\n      offset & 0xFF // data_offset\n    ];\n  };\n\n  videoTrun = function(track, offset) {\n    var bytes, samples, sample, i;\n\n    samples = track.samples || [];\n    offset += 8 + 12 + (16 * samples.length);\n\n    bytes = trunHeader(samples, offset);\n\n    for (i = 0; i < samples.length; i++) {\n      sample = samples[i];\n      bytes = bytes.concat([\n        (sample.duration & 0xFF000000) >>> 24,\n        (sample.duration & 0xFF0000) >>> 16,\n        (sample.duration & 0xFF00) >>> 8,\n        sample.duration & 0xFF, // sample_duration\n        (sample.size & 0xFF000000) >>> 24,\n        (sample.size & 0xFF0000) >>> 16,\n        (sample.size & 0xFF00) >>> 8,\n        sample.size & 0xFF, // sample_size\n        (sample.flags.isLeading << 2) | sample.flags.dependsOn,\n        (sample.flags.isDependedOn << 6) |\n          (sample.flags.hasRedundancy << 4) |\n          (sample.flags.paddingValue << 1) |\n          sample.flags.isNonSyncSample,\n        sample.flags.degradationPriority & 0xF0 << 8,\n        sample.flags.degradationPriority & 0x0F, // sample_flags\n        (sample.compositionTimeOffset & 0xFF000000) >>> 24,\n        (sample.compositionTimeOffset & 0xFF0000) >>> 16,\n        (sample.compositionTimeOffset & 0xFF00) >>> 8,\n        sample.compositionTimeOffset & 0xFF // sample_composition_time_offset\n      ]);\n    }\n    return box(types.trun, new Uint8Array(bytes));\n  };\n\n  audioTrun = function(track, offset) {\n    var bytes, samples, sample, i;\n\n    samples = track.samples || [];\n    offset += 8 + 12 + (8 * samples.length);\n\n    bytes = trunHeader(samples, offset);\n\n    for (i = 0; i < samples.length; i++) {\n      sample = samples[i];\n      bytes = bytes.concat([\n        (sample.duration & 0xFF000000) >>> 24,\n        (sample.duration & 0xFF0000) >>> 16,\n        (sample.duration & 0xFF00) >>> 8,\n        sample.duration & 0xFF, // sample_duration\n        (sample.size & 0xFF000000) >>> 24,\n        (sample.size & 0xFF0000) >>> 16,\n        (sample.size & 0xFF00) >>> 8,\n        sample.size & 0xFF]); // sample_size\n    }\n\n    return box(types.trun, new Uint8Array(bytes));\n  };\n\n  trun = function(track, offset) {\n    if (track.type === 'audio') {\n      return audioTrun(track, offset);\n    }\n\n    return videoTrun(track, offset);\n  };\n}());\n\nmodule.exports = {\n  ftyp: ftyp,\n  mdat: mdat,\n  moof: moof,\n  moov: moov,\n  initSegment: function(tracks) {\n    var\n      fileType = ftyp(),\n      movie = moov(tracks),\n      result;\n\n    result = new Uint8Array(fileType.byteLength + movie.byteLength);\n    result.set(fileType);\n    result.set(movie, fileType.byteLength);\n    return result;\n  }\n};\n\n},{}],85:[function(require,module,exports){\n/**\n * mux.js\n *\n * Copyright (c) 2015 Brightcove\n * All rights reserved.\n *\n * Utilities to detect basic properties and metadata about MP4s.\n */\n'use strict';\n\nvar findBox, parseType, timescale, startTime;\n\n// Find the data for a box specified by its path\nfindBox = function(data, path) {\n  var results = [],\n      i, size, type, end, subresults;\n\n  if (!path.length) {\n    // short-circuit the search for empty paths\n    return null;\n  }\n\n  for (i = 0; i < data.byteLength;) {\n    size  = data[i]     << 24;\n    size |= data[i + 1] << 16;\n    size |= data[i + 2] << 8;\n    size |= data[i + 3];\n\n    type = parseType(data.subarray(i + 4, i + 8));\n\n    end = size > 1 ? i + size : data.byteLength;\n\n    if (type === path[0]) {\n      if (path.length === 1) {\n        // this is the end of the path and we've found the box we were\n        // looking for\n        results.push(data.subarray(i + 8, end));\n      } else {\n        // recursively search for the next box along the path\n        subresults = findBox(data.subarray(i + 8, end), path.slice(1));\n        if (subresults.length) {\n          results = results.concat(subresults);\n        }\n      }\n    }\n    i = end;\n  }\n\n  // we've finished searching all of data\n  return results;\n};\n\n/**\n * Returns the string representation of an ASCII encoded four byte buffer.\n * @param buffer {Uint8Array} a four-byte buffer to translate\n * @return {string} the corresponding string\n */\nparseType = function(buffer) {\n  var result = '';\n  result += String.fromCharCode(buffer[0]);\n  result += String.fromCharCode(buffer[1]);\n  result += String.fromCharCode(buffer[2]);\n  result += String.fromCharCode(buffer[3]);\n  return result;\n};\n\n/**\n * Parses an MP4 initialization segment and extracts the timescale\n * values for any declared tracks. Timescale values indicate the\n * number of clock ticks per second to assume for time-based values\n * elsewhere in the MP4.\n *\n * To determine the start time of an MP4, you need two pieces of\n * information: the timescale unit and the earliest base media decode\n * time. Multiple timescales can be specified within an MP4 but the\n * base media decode time is always expressed in the timescale from\n * the media header box for the track:\n * ```\n * moov > trak > mdia > mdhd.timescale\n * ```\n * @param init {Uint8Array} the bytes of the init segment\n * @return {object} a hash of track ids to timescale values or null if\n * the init segment is malformed.\n */\ntimescale = function(init) {\n  var\n    result = {},\n    traks = findBox(init, ['moov', 'trak']);\n\n  // mdhd timescale\n  return traks.reduce(function(result, trak) {\n    var tkhd, version, index, id, mdhd;\n\n    tkhd = findBox(trak, ['tkhd'])[0];\n    if (!tkhd) {\n      return null;\n    }\n    version = tkhd[0];\n    index = version === 0 ? 12 : 20;\n    id = tkhd[index]     << 24 |\n         tkhd[index + 1] << 16 |\n         tkhd[index + 2] <<  8 |\n         tkhd[index + 3];\n\n    mdhd = findBox(trak, ['mdia', 'mdhd'])[0];\n    if (!mdhd) {\n      return null;\n    }\n    version = mdhd[0];\n    index = version === 0 ? 12 : 20;\n    result[id] = mdhd[index]     << 24 |\n                 mdhd[index + 1] << 16 |\n                 mdhd[index + 2] <<  8 |\n                 mdhd[index + 3];\n    return result;\n  }, result);\n};\n\n/**\n * Determine the base media decode start time, in seconds, for an MP4\n * fragment. If multiple fragments are specified, the earliest time is\n * returned.\n *\n * The base media decode time can be parsed from track fragment\n * metadata:\n * ```\n * moof > traf > tfdt.baseMediaDecodeTime\n * ```\n * It requires the timescale value from the mdhd to interpret.\n *\n * @param timescale {object} a hash of track ids to timescale values.\n * @return {number} the earliest base media decode start time for the\n * fragment, in seconds\n */\nstartTime = function(timescale, fragment) {\n  var trafs, baseTimes, result;\n\n  // we need info from two childrend of each track fragment box\n  trafs = findBox(fragment, ['moof', 'traf']);\n\n  // determine the start times for each track\n  baseTimes = [].concat.apply([], trafs.map(function(traf) {\n    return findBox(traf, ['tfhd']).map(function(tfhd) {\n      var id, scale, baseTime;\n\n      // get the track id from the tfhd\n      id = tfhd[4] << 24 |\n           tfhd[5] << 16 |\n           tfhd[6] << 8 |\n           tfhd[7];\n      // assume a 90kHz clock if no timescale was specified\n      scale = timescale[id] || 90e3;\n\n      // get the base media decode time from the tfdt\n      baseTime = findBox(traf, ['tfdt']).map(function(tfdt) {\n        var version, result;\n\n        version = tfdt[0];\n        result = tfdt[4] << 24 |\n                 tfdt[5] << 16 |\n                 tfdt[6] <<  8 |\n                 tfdt[7];\n        if (version ===  1) {\n          result *= Math.pow(2, 32);\n          result += tfdt[8]  << 24 |\n                    tfdt[9]  << 16 |\n                    tfdt[10] <<  8 |\n                    tfdt[11];\n        }\n        return result;\n      })[0];\n      baseTime = baseTime || Infinity;\n\n      // convert base time to seconds\n      return baseTime / scale;\n    });\n  }));\n\n  // return the minimum\n  result = Math.min.apply(null, baseTimes);\n  return isFinite(result) ? result : 0;\n};\n\nmodule.exports = {\n  parseType: parseType,\n  timescale: timescale,\n  startTime: startTime\n};\n\n},{}],86:[function(require,module,exports){\n/**\n * mux.js\n *\n * Copyright (c) 2015 Brightcove\n * All rights reserved.\n *\n * A stream-based mp2t to mp4 converter. This utility can be used to\n * deliver mp4s to a SourceBuffer on platforms that support native\n * Media Source Extensions.\n */\n'use strict';\n\nvar Stream = require('../utils/stream.js');\nvar mp4 = require('./mp4-generator.js');\nvar m2ts = require('../m2ts/m2ts.js');\nvar AdtsStream = require('../codecs/adts.js');\nvar H264Stream = require('../codecs/h264').H264Stream;\nvar AacStream = require('../aac');\n\n// constants\nvar AUDIO_PROPERTIES = [\n  'audioobjecttype',\n  'channelcount',\n  'samplerate',\n  'samplingfrequencyindex',\n  'samplesize'\n];\n\nvar VIDEO_PROPERTIES = [\n  'width',\n  'height',\n  'profileIdc',\n  'levelIdc',\n  'profileCompatibility'\n];\n\n// object types\nvar VideoSegmentStream, AudioSegmentStream, Transmuxer, CoalesceStream;\n\n// Helper functions\nvar\n  createDefaultSample,\n  isLikelyAacData,\n  collectDtsInfo,\n  clearDtsInfo,\n  calculateTrackBaseMediaDecodeTime,\n  arrayEquals,\n  sumFrameByteLengths;\n\n/**\n * Default sample object\n * see ISO/IEC 14496-12:2012, section 8.6.4.3\n */\ncreateDefaultSample = function() {\n  return {\n    size: 0,\n    flags: {\n      isLeading: 0,\n      dependsOn: 1,\n      isDependedOn: 0,\n      hasRedundancy: 0,\n      degradationPriority: 0\n    }\n  };\n};\n\nisLikelyAacData = function(data) {\n  if ((data[0] === 'I'.charCodeAt(0)) &&\n      (data[1] === 'D'.charCodeAt(0)) &&\n      (data[2] === '3'.charCodeAt(0))) {\n    return true;\n  }\n  return false;\n};\n\n/**\n * Compare two arrays (even typed) for same-ness\n */\narrayEquals = function(a, b) {\n  var\n    i;\n\n  if (a.length !== b.length) {\n    return false;\n  }\n\n  // compare the value of each element in the array\n  for (i = 0; i < a.length; i++) {\n    if (a[i] !== b[i]) {\n      return false;\n    }\n  }\n\n  return true;\n};\n\n/**\n * Sum the `byteLength` properties of the data in each AAC frame\n */\nsumFrameByteLengths = function(array) {\n  var\n    i,\n    currentObj,\n    sum = 0;\n\n  // sum the byteLength's all each nal unit in the frame\n  for (i = 0; i < array.length; i++) {\n    currentObj = array[i];\n    sum += currentObj.data.byteLength;\n  }\n\n  return sum;\n};\n\n/**\n * Constructs a single-track, ISO BMFF media segment from AAC data\n * events. The output of this stream can be fed to a SourceBuffer\n * configured with a suitable initialization segment.\n */\nAudioSegmentStream = function(track) {\n  var\n    adtsFrames = [],\n    sequenceNumber = 0,\n    earliestAllowedDts = 0;\n\n  AudioSegmentStream.prototype.init.call(this);\n\n  this.push = function(data) {\n    collectDtsInfo(track, data);\n\n    if (track) {\n      AUDIO_PROPERTIES.forEach(function(prop) {\n        track[prop] = data[prop];\n      });\n    }\n\n    // buffer audio data until end() is called\n    adtsFrames.push(data);\n  };\n\n  this.setEarliestDts = function(earliestDts) {\n    earliestAllowedDts = earliestDts - track.timelineStartInfo.baseMediaDecodeTime;\n  };\n\n  this.flush = function() {\n    var\n      frames,\n      moof,\n      mdat,\n      boxes;\n\n    // return early if no audio data has been observed\n    if (adtsFrames.length === 0) {\n      this.trigger('done', 'AudioSegmentStream');\n      return;\n    }\n\n    frames = this.trimAdtsFramesByEarliestDts_(adtsFrames);\n\n    // we have to build the index from byte locations to\n    // samples (that is, adts frames) in the audio data\n    track.samples = this.generateSampleTable_(frames);\n\n    // concatenate the audio data to constuct the mdat\n    mdat = mp4.mdat(this.concatenateFrameData_(frames));\n\n    adtsFrames = [];\n\n    calculateTrackBaseMediaDecodeTime(track);\n    moof = mp4.moof(sequenceNumber, [track]);\n    boxes = new Uint8Array(moof.byteLength + mdat.byteLength);\n\n    // bump the sequence number for next time\n    sequenceNumber++;\n\n    boxes.set(moof);\n    boxes.set(mdat, moof.byteLength);\n\n    clearDtsInfo(track);\n\n    this.trigger('data', {track: track, boxes: boxes});\n    this.trigger('done', 'AudioSegmentStream');\n  };\n\n  // If the audio segment extends before the earliest allowed dts\n  // value, remove AAC frames until starts at or after the earliest\n  // allowed DTS so that we don't end up with a negative baseMedia-\n  // DecodeTime for the audio track\n  this.trimAdtsFramesByEarliestDts_ = function(adtsFrames) {\n    if (track.minSegmentDts >= earliestAllowedDts) {\n      return adtsFrames;\n    }\n\n    // We will need to recalculate the earliest segment Dts\n    track.minSegmentDts = Infinity;\n\n    return adtsFrames.filter(function(currentFrame) {\n      // If this is an allowed frame, keep it and record it's Dts\n      if (currentFrame.dts >= earliestAllowedDts) {\n        track.minSegmentDts = Math.min(track.minSegmentDts, currentFrame.dts);\n        track.minSegmentPts = track.minSegmentDts;\n        return true;\n      }\n      // Otherwise, discard it\n      return false;\n    });\n  };\n\n  // generate the track's raw mdat data from an array of frames\n  this.generateSampleTable_ = function(frames) {\n    var\n      i,\n      currentFrame,\n      samples = [];\n\n    for (i = 0; i < frames.length; i++) {\n      currentFrame = frames[i];\n      samples.push({\n        size: currentFrame.data.byteLength,\n        duration: 1024 // For AAC audio, all samples contain 1024 samples\n      });\n    }\n    return samples;\n  };\n\n  // generate the track's sample table from an array of frames\n  this.concatenateFrameData_ = function(frames) {\n    var\n      i,\n      currentFrame,\n      dataOffset = 0,\n      data = new Uint8Array(sumFrameByteLengths(frames));\n\n    for (i = 0; i < frames.length; i++) {\n      currentFrame = frames[i];\n\n      data.set(currentFrame.data, dataOffset);\n      dataOffset += currentFrame.data.byteLength;\n    }\n    return data;\n  };\n};\n\nAudioSegmentStream.prototype = new Stream();\n\n/**\n * Constructs a single-track, ISO BMFF media segment from H264 data\n * events. The output of this stream can be fed to a SourceBuffer\n * configured with a suitable initialization segment.\n * @param track {object} track metadata configuration\n */\nVideoSegmentStream = function(track) {\n  var\n    sequenceNumber = 0,\n    nalUnits = [],\n    config,\n    pps;\n\n  VideoSegmentStream.prototype.init.call(this);\n\n  delete track.minPTS;\n\n  this.gopCache_ = [];\n\n  this.push = function(nalUnit) {\n    collectDtsInfo(track, nalUnit);\n\n    // record the track config\n    if (nalUnit.nalUnitType === 'seq_parameter_set_rbsp' && !config) {\n      config = nalUnit.config;\n      track.sps = [nalUnit.data];\n\n      VIDEO_PROPERTIES.forEach(function(prop) {\n        track[prop] = config[prop];\n      }, this);\n    }\n\n    if (nalUnit.nalUnitType === 'pic_parameter_set_rbsp' &&\n        !pps) {\n      pps = nalUnit.data;\n      track.pps = [nalUnit.data];\n    }\n\n    // buffer video until flush() is called\n    nalUnits.push(nalUnit);\n  };\n\n  this.flush = function() {\n    var\n      frames,\n      gopForFusion,\n      gops,\n      moof,\n      mdat,\n      boxes;\n\n    // Throw away nalUnits at the start of the byte stream until\n    // we find the first AUD\n    while (nalUnits.length) {\n      if (nalUnits[0].nalUnitType === 'access_unit_delimiter_rbsp') {\n        break;\n      }\n      nalUnits.shift();\n    }\n\n    // Return early if no video data has been observed\n    if (nalUnits.length === 0) {\n      this.resetStream_();\n      this.trigger('done', 'VideoSegmentStream');\n      return;\n    }\n\n    // Organize the raw nal-units into arrays that represent\n    // higher-level constructs such as frames and gops\n    // (group-of-pictures)\n    frames = this.groupNalsIntoFrames_(nalUnits);\n    gops = this.groupFramesIntoGops_(frames);\n\n    // If the first frame of this fragment is not a keyframe we have\n    // a problem since MSE (on Chrome) requires a leading keyframe.\n    //\n    // We have two approaches to repairing this situation:\n    // 1) GOP-FUSION:\n    //    This is where we keep track of the GOPS (group-of-pictures)\n    //    from previous fragments and attempt to find one that we can\n    //    prepend to the current fragment in order to create a valid\n    //    fragment.\n    // 2) KEYFRAME-PULLING:\n    //    Here we search for the first keyframe in the fragment and\n    //    throw away all the frames between the start of the fragment\n    //    and that keyframe. We then extend the duration and pull the\n    //    PTS of the keyframe forward so that it covers the time range\n    //    of the frames that were disposed of.\n    //\n    // #1 is far prefereable over #2 which can cause \"stuttering\" but\n    // requires more things to be just right.\n    if (!gops[0][0].keyFrame) {\n      // Search for a gop for fusion from our gopCache\n      gopForFusion = this.getGopForFusion_(nalUnits[0], track);\n\n      if (gopForFusion) {\n        gops.unshift(gopForFusion);\n        // Adjust Gops' metadata to account for the inclusion of the\n        // new gop at the beginning\n        gops.byteLength += gopForFusion.byteLength;\n        gops.nalCount += gopForFusion.nalCount;\n        gops.pts = gopForFusion.pts;\n        gops.dts = gopForFusion.dts;\n        gops.duration += gopForFusion.duration;\n      } else {\n        // If we didn't find a candidate gop fall back to keyrame-pulling\n        gops = this.extendFirstKeyFrame_(gops);\n      }\n    }\n    collectDtsInfo(track, gops);\n\n    // First, we have to build the index from byte locations to\n    // samples (that is, frames) in the video data\n    track.samples = this.generateSampleTable_(gops);\n\n    // Concatenate the video data and construct the mdat\n    mdat = mp4.mdat(this.concatenateNalData_(gops));\n\n    // save all the nals in the last GOP into the gop cache\n    this.gopCache_.unshift({\n      gop: gops.pop(),\n      pps: track.pps,\n      sps: track.sps\n    });\n\n    // Keep a maximum of 6 GOPs in the cache\n    this.gopCache_.length = Math.min(6, this.gopCache_.length);\n\n    // Clear nalUnits\n    nalUnits = [];\n\n    calculateTrackBaseMediaDecodeTime(track);\n\n    this.trigger('timelineStartInfo', track.timelineStartInfo);\n\n    moof = mp4.moof(sequenceNumber, [track]);\n\n    // it would be great to allocate this array up front instead of\n    // throwing away hundreds of media segment fragments\n    boxes = new Uint8Array(moof.byteLength + mdat.byteLength);\n\n    // Bump the sequence number for next time\n    sequenceNumber++;\n\n    boxes.set(moof);\n    boxes.set(mdat, moof.byteLength);\n\n    this.trigger('data', {track: track, boxes: boxes});\n\n    this.resetStream_();\n\n    // Continue with the flush process now\n    this.trigger('done', 'VideoSegmentStream');\n  };\n\n  this.resetStream_ = function() {\n    clearDtsInfo(track);\n\n    // reset config and pps because they may differ across segments\n    // for instance, when we are rendition switching\n    config = undefined;\n    pps = undefined;\n  };\n\n  // Search for a candidate Gop for gop-fusion from the gop cache and\n  // return it or return null if no good candidate was found\n  this.getGopForFusion_ = function(nalUnit) {\n    var\n      halfSecond = 45000, // Half-a-second in a 90khz clock\n      allowableOverlap = 10000, // About 3 frames @ 30fps\n      nearestDistance = Infinity,\n      dtsDistance,\n      nearestGopObj,\n      currentGop,\n      currentGopObj,\n      i;\n\n    // Search for the GOP nearest to the beginning of this nal unit\n    for (i = 0; i < this.gopCache_.length; i++) {\n      currentGopObj = this.gopCache_[i];\n      currentGop = currentGopObj.gop;\n\n      // Reject Gops with different SPS or PPS\n      if (!(track.pps && arrayEquals(track.pps[0], currentGopObj.pps[0])) ||\n          !(track.sps && arrayEquals(track.sps[0], currentGopObj.sps[0]))) {\n        continue;\n      }\n\n      // Reject Gops that would require a negative baseMediaDecodeTime\n      if (currentGop.dts < track.timelineStartInfo.dts) {\n        continue;\n      }\n\n      // The distance between the end of the gop and the start of the nalUnit\n      dtsDistance = (nalUnit.dts - currentGop.dts) - currentGop.duration;\n\n      // Only consider GOPS that start before the nal unit and end within\n      // a half-second of the nal unit\n      if (dtsDistance >= -allowableOverlap &&\n          dtsDistance <= halfSecond) {\n\n        // Always use the closest GOP we found if there is more than\n        // one candidate\n        if (!nearestGopObj ||\n            nearestDistance > dtsDistance) {\n          nearestGopObj = currentGopObj;\n          nearestDistance = dtsDistance;\n        }\n      }\n    }\n\n    if (nearestGopObj) {\n      return nearestGopObj.gop;\n    }\n    return null;\n  };\n\n  this.extendFirstKeyFrame_ = function(gops) {\n    var currentGop;\n\n    if (!gops[0][0].keyFrame) {\n      // Remove the first GOP\n      currentGop = gops.shift();\n\n      gops.byteLength -=  currentGop.byteLength;\n      gops.nalCount -= currentGop.nalCount;\n\n      // Extend the first frame of what is now the\n      // first gop to cover the time period of the\n      // frames we just removed\n      gops[0][0].dts = currentGop.dts;\n      gops[0][0].pts = currentGop.pts;\n      gops[0][0].duration += currentGop.duration;\n    }\n\n    return gops;\n  };\n\n  // Convert an array of nal units into an array of frames with each frame being\n  // composed of the nal units that make up that frame\n  // Also keep track of cummulative data about the frame from the nal units such\n  // as the frame duration, starting pts, etc.\n  this.groupNalsIntoFrames_ = function(nalUnits) {\n    var\n      i,\n      currentNal,\n      currentFrame = [],\n      frames = [];\n\n    currentFrame.byteLength = 0;\n\n    for (i = 0; i < nalUnits.length; i++) {\n      currentNal = nalUnits[i];\n\n      // Split on 'aud'-type nal units\n      if (currentNal.nalUnitType === 'access_unit_delimiter_rbsp') {\n        // Since the very first nal unit is expected to be an AUD\n        // only push to the frames array when currentFrame is not empty\n        if (currentFrame.length) {\n          currentFrame.duration = currentNal.dts - currentFrame.dts;\n          frames.push(currentFrame);\n        }\n        currentFrame = [currentNal];\n        currentFrame.byteLength = currentNal.data.byteLength;\n        currentFrame.pts = currentNal.pts;\n        currentFrame.dts = currentNal.dts;\n      } else {\n        // Specifically flag key frames for ease of use later\n        if (currentNal.nalUnitType === 'slice_layer_without_partitioning_rbsp_idr') {\n          currentFrame.keyFrame = true;\n        }\n        currentFrame.duration = currentNal.dts - currentFrame.dts;\n        currentFrame.byteLength += currentNal.data.byteLength;\n        currentFrame.push(currentNal);\n      }\n    }\n\n    // For the last frame, use the duration of the previous frame if we\n    // have nothing better to go on\n    if (frames.length &&\n        (!currentFrame.duration ||\n         currentFrame.duration <= 0)) {\n      currentFrame.duration = frames[frames.length - 1].duration;\n    }\n\n    // Push the final frame\n    frames.push(currentFrame);\n    return frames;\n  };\n\n  // Convert an array of frames into an array of Gop with each Gop being composed\n  // of the frames that make up that Gop\n  // Also keep track of cummulative data about the Gop from the frames such as the\n  // Gop duration, starting pts, etc.\n  this.groupFramesIntoGops_ = function(frames) {\n    var\n      i,\n      currentFrame,\n      currentGop = [],\n      gops = [];\n\n    // We must pre-set some of the values on the Gop since we\n    // keep running totals of these values\n    currentGop.byteLength = 0;\n    currentGop.nalCount = 0;\n    currentGop.duration = 0;\n    currentGop.pts = frames[0].pts;\n    currentGop.dts = frames[0].dts;\n\n    // store some metadata about all the Gops\n    gops.byteLength = 0;\n    gops.nalCount = 0;\n    gops.duration = 0;\n    gops.pts = frames[0].pts;\n    gops.dts = frames[0].dts;\n\n    for (i = 0; i < frames.length; i++) {\n      currentFrame = frames[i];\n\n      if (currentFrame.keyFrame) {\n        // Since the very first frame is expected to be an keyframe\n        // only push to the gops array when currentGop is not empty\n        if (currentGop.length) {\n          gops.push(currentGop);\n          gops.byteLength += currentGop.byteLength;\n          gops.nalCount += currentGop.nalCount;\n          gops.duration += currentGop.duration;\n        }\n\n        currentGop = [currentFrame];\n        currentGop.nalCount = currentFrame.length;\n        currentGop.byteLength = currentFrame.byteLength;\n        currentGop.pts = currentFrame.pts;\n        currentGop.dts = currentFrame.dts;\n        currentGop.duration = currentFrame.duration;\n      } else {\n        currentGop.duration += currentFrame.duration;\n        currentGop.nalCount += currentFrame.length;\n        currentGop.byteLength += currentFrame.byteLength;\n        currentGop.push(currentFrame);\n      }\n    }\n\n    if (gops.length && currentGop.duration <= 0) {\n      currentGop.duration = gops[gops.length - 1].duration;\n    }\n    gops.byteLength += currentGop.byteLength;\n    gops.nalCount += currentGop.nalCount;\n    gops.duration += currentGop.duration;\n\n    // push the final Gop\n    gops.push(currentGop);\n    return gops;\n  };\n\n  // generate the track's sample table from an array of gops\n  this.generateSampleTable_ = function(gops, baseDataOffset) {\n    var\n      h, i,\n      sample,\n      currentGop,\n      currentFrame,\n      dataOffset = baseDataOffset || 0,\n      samples = [];\n\n    for (h = 0; h < gops.length; h++) {\n      currentGop = gops[h];\n\n      for (i = 0; i < currentGop.length; i++) {\n        currentFrame = currentGop[i];\n\n        sample = createDefaultSample();\n\n        sample.dataOffset = dataOffset;\n        sample.compositionTimeOffset = currentFrame.pts - currentFrame.dts;\n        sample.duration = currentFrame.duration;\n        sample.size = 4 * currentFrame.length; // Space for nal unit size\n        sample.size += currentFrame.byteLength;\n\n        if (currentFrame.keyFrame) {\n          sample.flags.dependsOn = 2;\n        }\n\n        dataOffset += sample.size;\n\n        samples.push(sample);\n      }\n    }\n    return samples;\n  };\n\n  // generate the track's raw mdat data from an array of gops\n  this.concatenateNalData_ = function(gops) {\n    var\n      h, i, j,\n      currentGop,\n      currentFrame,\n      currentNal,\n      dataOffset = 0,\n      nalsByteLength = gops.byteLength,\n      numberOfNals = gops.nalCount,\n      totalByteLength = nalsByteLength + 4 * numberOfNals,\n      data = new Uint8Array(totalByteLength),\n      view = new DataView(data.buffer);\n\n    // For each Gop..\n    for (h = 0; h < gops.length; h++) {\n      currentGop = gops[h];\n\n      // For each Frame..\n      for (i = 0; i < currentGop.length; i++) {\n        currentFrame = currentGop[i];\n\n        // For each NAL..\n        for (j = 0; j < currentFrame.length; j++) {\n          currentNal = currentFrame[j];\n\n          view.setUint32(dataOffset, currentNal.data.byteLength);\n          dataOffset += 4;\n          data.set(currentNal.data, dataOffset);\n          dataOffset += currentNal.data.byteLength;\n        }\n      }\n    }\n    return data;\n  };\n};\n\nVideoSegmentStream.prototype = new Stream();\n\n/**\n * Store information about the start and end of the track and the\n * duration for each frame/sample we process in order to calculate\n * the baseMediaDecodeTime\n */\ncollectDtsInfo = function(track, data) {\n  if (typeof data.pts === 'number') {\n    if (track.timelineStartInfo.pts === undefined) {\n      track.timelineStartInfo.pts = data.pts;\n    }\n\n    if (track.minSegmentPts === undefined) {\n      track.minSegmentPts = data.pts;\n    } else {\n      track.minSegmentPts = Math.min(track.minSegmentPts, data.pts);\n    }\n\n    if (track.maxSegmentPts === undefined) {\n      track.maxSegmentPts = data.pts;\n    } else {\n      track.maxSegmentPts = Math.max(track.maxSegmentPts, data.pts);\n    }\n  }\n\n  if (typeof data.dts === 'number') {\n    if (track.timelineStartInfo.dts === undefined) {\n      track.timelineStartInfo.dts = data.dts;\n    }\n\n    if (track.minSegmentDts === undefined) {\n      track.minSegmentDts = data.dts;\n    } else {\n      track.minSegmentDts = Math.min(track.minSegmentDts, data.dts);\n    }\n\n    if (track.maxSegmentDts === undefined) {\n      track.maxSegmentDts = data.dts;\n    } else {\n      track.maxSegmentDts = Math.max(track.maxSegmentDts, data.dts);\n    }\n  }\n};\n\n/**\n * Clear values used to calculate the baseMediaDecodeTime between\n * tracks\n */\nclearDtsInfo = function(track) {\n  delete track.minSegmentDts;\n  delete track.maxSegmentDts;\n  delete track.minSegmentPts;\n  delete track.maxSegmentPts;\n};\n\n/**\n * Calculate the track's baseMediaDecodeTime based on the earliest\n * DTS the transmuxer has ever seen and the minimum DTS for the\n * current track\n */\ncalculateTrackBaseMediaDecodeTime = function(track) {\n  var\n    oneSecondInTS = 90000, // 90kHz clock\n    scale,\n    // Calculate the distance, in time, that this segment starts from the start\n    // of the timeline (earliest time seen since the transmuxer initialized)\n    timeSinceStartOfTimeline = track.minSegmentDts - track.timelineStartInfo.dts;\n\n  // track.timelineStartInfo.baseMediaDecodeTime is the location, in time, where\n  // we want the start of the first segment to be placed\n  track.baseMediaDecodeTime = track.timelineStartInfo.baseMediaDecodeTime;\n\n  // Add to that the distance this segment is from the very first\n  track.baseMediaDecodeTime += timeSinceStartOfTimeline;\n\n  // baseMediaDecodeTime must not become negative\n  track.baseMediaDecodeTime = Math.max(0, track.baseMediaDecodeTime);\n\n  if (track.type === 'audio') {\n    // Audio has a different clock equal to the sampling_rate so we need to\n    // scale the PTS values into the clock rate of the track\n    scale = track.samplerate / oneSecondInTS;\n    track.baseMediaDecodeTime *= scale;\n    track.baseMediaDecodeTime = Math.floor(track.baseMediaDecodeTime);\n  }\n};\n\n/**\n * A Stream that can combine multiple streams (ie. audio & video)\n * into a single output segment for MSE. Also supports audio-only\n * and video-only streams.\n */\nCoalesceStream = function(options, metadataStream) {\n  // Number of Tracks per output segment\n  // If greater than 1, we combine multiple\n  // tracks into a single segment\n  this.numberOfTracks = 0;\n  this.metadataStream = metadataStream;\n\n  if (typeof options.remux !== 'undefined') {\n    this.remuxTracks = !!options.remux;\n  } else {\n    this.remuxTracks = true;\n  }\n\n  this.pendingTracks = [];\n  this.videoTrack = null;\n  this.pendingBoxes = [];\n  this.pendingCaptions = [];\n  this.pendingMetadata = [];\n  this.pendingBytes = 0;\n  this.emittedTracks = 0;\n\n  CoalesceStream.prototype.init.call(this);\n\n  // Take output from multiple\n  this.push = function(output) {\n    // buffer incoming captions until the associated video segment\n    // finishes\n    if (output.text) {\n      return this.pendingCaptions.push(output);\n    }\n    // buffer incoming id3 tags until the final flush\n    if (output.frames) {\n      return this.pendingMetadata.push(output);\n    }\n\n    // Add this track to the list of pending tracks and store\n    // important information required for the construction of\n    // the final segment\n    this.pendingTracks.push(output.track);\n    this.pendingBoxes.push(output.boxes);\n    this.pendingBytes += output.boxes.byteLength;\n\n    if (output.track.type === 'video') {\n      this.videoTrack = output.track;\n    }\n    if (output.track.type === 'audio') {\n      this.audioTrack = output.track;\n    }\n  };\n};\n\nCoalesceStream.prototype = new Stream();\nCoalesceStream.prototype.flush = function(flushSource) {\n  var\n    offset = 0,\n    event = {\n      captions: [],\n      metadata: [],\n      info: {}\n    },\n    caption,\n    id3,\n    initSegment,\n    timelineStartPts = 0,\n    i;\n\n  if (this.pendingTracks.length < this.numberOfTracks) {\n    if (flushSource !== 'VideoSegmentStream' &&\n        flushSource !== 'AudioSegmentStream') {\n      // Return because we haven't received a flush from a data-generating\n      // portion of the segment (meaning that we have only recieved meta-data\n      // or captions.)\n      return;\n    } else if (this.remuxTracks) {\n      // Return until we have enough tracks from the pipeline to remux (if we\n      // are remuxing audio and video into a single MP4)\n      return;\n    } else if (this.pendingTracks.length === 0) {\n      // In the case where we receive a flush without any data having been\n      // received we consider it an emitted track for the purposes of coalescing\n      // `done` events.\n      // We do this for the case where there is an audio and video track in the\n      // segment but no audio data. (seen in several playlists with alternate\n      // audio tracks and no audio present in the main TS segments.)\n      this.emittedTracks++;\n\n      if (this.emittedTracks >= this.numberOfTracks) {\n        this.trigger('done');\n        this.emittedTracks = 0;\n      }\n      return;\n    }\n  }\n\n  if (this.videoTrack) {\n    timelineStartPts = this.videoTrack.timelineStartInfo.pts;\n    VIDEO_PROPERTIES.forEach(function(prop) {\n      event.info[prop] = this.videoTrack[prop];\n    }, this);\n  } else if (this.audioTrack) {\n    timelineStartPts = this.audioTrack.timelineStartInfo.pts;\n    AUDIO_PROPERTIES.forEach(function(prop) {\n      event.info[prop] = this.audioTrack[prop];\n    }, this);\n  }\n\n  if (this.pendingTracks.length === 1) {\n    event.type = this.pendingTracks[0].type;\n  } else {\n    event.type = 'combined';\n  }\n\n  this.emittedTracks += this.pendingTracks.length;\n\n  initSegment = mp4.initSegment(this.pendingTracks);\n\n  // Create a new typed array to hold the init segment\n  event.initSegment = new Uint8Array(initSegment.byteLength);\n\n  // Create an init segment containing a moov\n  // and track definitions\n  event.initSegment.set(initSegment);\n\n  // Create a new typed array to hold the moof+mdats\n  event.data = new Uint8Array(this.pendingBytes);\n\n  // Append each moof+mdat (one per track) together\n  for (i = 0; i < this.pendingBoxes.length; i++) {\n    event.data.set(this.pendingBoxes[i], offset);\n    offset += this.pendingBoxes[i].byteLength;\n  }\n\n  // Translate caption PTS times into second offsets into the\n  // video timeline for the segment\n  for (i = 0; i < this.pendingCaptions.length; i++) {\n    caption = this.pendingCaptions[i];\n    caption.startTime = (caption.startPts - timelineStartPts);\n    caption.startTime /= 90e3;\n    caption.endTime = (caption.endPts - timelineStartPts);\n    caption.endTime /= 90e3;\n    event.captions.push(caption);\n  }\n\n  // Translate ID3 frame PTS times into second offsets into the\n  // video timeline for the segment\n  for (i = 0; i < this.pendingMetadata.length; i++) {\n    id3 = this.pendingMetadata[i];\n    id3.cueTime = (id3.pts - timelineStartPts);\n    id3.cueTime /= 90e3;\n    event.metadata.push(id3);\n  }\n  // We add this to every single emitted segment even though we only need\n  // it for the first\n  event.metadata.dispatchType = this.metadataStream.dispatchType;\n\n  // Reset stream state\n  this.pendingTracks.length = 0;\n  this.videoTrack = null;\n  this.pendingBoxes.length = 0;\n  this.pendingCaptions.length = 0;\n  this.pendingBytes = 0;\n  this.pendingMetadata.length = 0;\n\n  // Emit the built segment\n  this.trigger('data', event);\n\n  // Only emit `done` if all tracks have been flushed and emitted\n  if (this.emittedTracks >= this.numberOfTracks) {\n    this.trigger('done');\n    this.emittedTracks = 0;\n  }\n};\n/**\n * A Stream that expects MP2T binary data as input and produces\n * corresponding media segments, suitable for use with Media Source\n * Extension (MSE) implementations that support the ISO BMFF byte\n * stream format, like Chrome.\n */\nTransmuxer = function(options) {\n  var\n    self = this,\n    hasFlushed = true,\n    videoTrack,\n    audioTrack;\n\n  Transmuxer.prototype.init.call(this);\n\n  options = options || {};\n  this.baseMediaDecodeTime = options.baseMediaDecodeTime || 0;\n  this.transmuxPipeline_ = {};\n\n  this.setupAacPipeline = function() {\n    var pipeline = {};\n    this.transmuxPipeline_ = pipeline;\n\n    pipeline.type = 'aac';\n    pipeline.metadataStream = new m2ts.MetadataStream();\n\n    // set up the parsing pipeline\n    pipeline.aacStream = new AacStream();\n    pipeline.audioTimestampRolloverStream = new m2ts.TimestampRolloverStream('audio');\n    pipeline.timedMetadataTimestampRolloverStream = new m2ts.TimestampRolloverStream('timed-metadata');\n    pipeline.adtsStream = new AdtsStream();\n    pipeline.coalesceStream = new CoalesceStream(options, pipeline.metadataStream);\n    pipeline.headOfPipeline = pipeline.aacStream;\n\n    pipeline.aacStream\n      .pipe(pipeline.audioTimestampRolloverStream)\n      .pipe(pipeline.adtsStream);\n    pipeline.aacStream\n      .pipe(pipeline.timedMetadataTimestampRolloverStream)\n      .pipe(pipeline.metadataStream)\n      .pipe(pipeline.coalesceStream);\n\n    pipeline.metadataStream.on('timestamp', function(frame) {\n      pipeline.aacStream.setTimestamp(frame.timeStamp);\n    });\n\n    pipeline.aacStream.on('data', function(data) {\n      if (data.type === 'timed-metadata' && !pipeline.audioSegmentStream) {\n        audioTrack = audioTrack || {\n          timelineStartInfo: {\n            baseMediaDecodeTime: self.baseMediaDecodeTime\n          },\n          codec: 'adts',\n          type: 'audio'\n        };\n        // hook up the audio segment stream to the first track with aac data\n        pipeline.coalesceStream.numberOfTracks++;\n        pipeline.audioSegmentStream = new AudioSegmentStream(audioTrack);\n        // Set up the final part of the audio pipeline\n        pipeline.adtsStream\n          .pipe(pipeline.audioSegmentStream)\n          .pipe(pipeline.coalesceStream);\n      }\n    });\n\n    // Re-emit any data coming from the coalesce stream to the outside world\n    pipeline.coalesceStream.on('data', this.trigger.bind(this, 'data'));\n    // Let the consumer know we have finished flushing the entire pipeline\n    pipeline.coalesceStream.on('done', this.trigger.bind(this, 'done'));\n  };\n\n  this.setupTsPipeline = function() {\n    var pipeline = {};\n    this.transmuxPipeline_ = pipeline;\n\n    pipeline.type = 'ts';\n    pipeline.metadataStream = new m2ts.MetadataStream();\n\n    // set up the parsing pipeline\n    pipeline.packetStream = new m2ts.TransportPacketStream();\n    pipeline.parseStream = new m2ts.TransportParseStream();\n    pipeline.elementaryStream = new m2ts.ElementaryStream();\n    pipeline.videoTimestampRolloverStream = new m2ts.TimestampRolloverStream('video');\n    pipeline.audioTimestampRolloverStream = new m2ts.TimestampRolloverStream('audio');\n    pipeline.timedMetadataTimestampRolloverStream = new m2ts.TimestampRolloverStream('timed-metadata');\n    pipeline.adtsStream = new AdtsStream();\n    pipeline.h264Stream = new H264Stream();\n    pipeline.captionStream = new m2ts.CaptionStream();\n    pipeline.coalesceStream = new CoalesceStream(options, pipeline.metadataStream);\n    pipeline.headOfPipeline = pipeline.packetStream;\n\n    // disassemble MPEG2-TS packets into elementary streams\n    pipeline.packetStream\n      .pipe(pipeline.parseStream)\n      .pipe(pipeline.elementaryStream);\n\n    // !!THIS ORDER IS IMPORTANT!!\n    // demux the streams\n    pipeline.elementaryStream\n      .pipe(pipeline.videoTimestampRolloverStream)\n      .pipe(pipeline.h264Stream);\n    pipeline.elementaryStream\n      .pipe(pipeline.audioTimestampRolloverStream)\n      .pipe(pipeline.adtsStream);\n\n    pipeline.elementaryStream\n      .pipe(pipeline.timedMetadataTimestampRolloverStream)\n      .pipe(pipeline.metadataStream)\n      .pipe(pipeline.coalesceStream);\n\n    // Hook up CEA-608/708 caption stream\n    pipeline.h264Stream.pipe(pipeline.captionStream)\n      .pipe(pipeline.coalesceStream);\n\n    pipeline.elementaryStream.on('data', function(data) {\n      var i;\n\n      if (data.type === 'metadata') {\n        i = data.tracks.length;\n\n        // scan the tracks listed in the metadata\n        while (i--) {\n          if (!videoTrack && data.tracks[i].type === 'video') {\n            videoTrack = data.tracks[i];\n            videoTrack.timelineStartInfo.baseMediaDecodeTime = self.baseMediaDecodeTime;\n          } else if (!audioTrack && data.tracks[i].type === 'audio') {\n            audioTrack = data.tracks[i];\n            audioTrack.timelineStartInfo.baseMediaDecodeTime = self.baseMediaDecodeTime;\n          }\n        }\n\n        // hook up the video segment stream to the first track with h264 data\n        if (videoTrack && !pipeline.videoSegmentStream) {\n          pipeline.coalesceStream.numberOfTracks++;\n          pipeline.videoSegmentStream = new VideoSegmentStream(videoTrack);\n\n          pipeline.videoSegmentStream.on('timelineStartInfo', function(timelineStartInfo) {\n          // When video emits timelineStartInfo data after a flush, we forward that\n          // info to the AudioSegmentStream, if it exists, because video timeline\n          // data takes precedence.\n            if (audioTrack) {\n              audioTrack.timelineStartInfo = timelineStartInfo;\n              // On the first segment we trim AAC frames that exist before the\n              // very earliest DTS we have seen in video because Chrome will\n              // interpret any video track with a baseMediaDecodeTime that is\n              // non-zero as a gap.\n              pipeline.audioSegmentStream.setEarliestDts(timelineStartInfo.dts);\n            }\n          });\n\n          // Set up the final part of the video pipeline\n          pipeline.h264Stream\n            .pipe(pipeline.videoSegmentStream)\n            .pipe(pipeline.coalesceStream);\n        }\n\n        if (audioTrack && !pipeline.audioSegmentStream) {\n          // hook up the audio segment stream to the first track with aac data\n          pipeline.coalesceStream.numberOfTracks++;\n          pipeline.audioSegmentStream = new AudioSegmentStream(audioTrack);\n\n          // Set up the final part of the audio pipeline\n          pipeline.adtsStream\n            .pipe(pipeline.audioSegmentStream)\n            .pipe(pipeline.coalesceStream);\n        }\n      }\n    });\n\n    // Re-emit any data coming from the coalesce stream to the outside world\n    pipeline.coalesceStream.on('data', this.trigger.bind(this, 'data'));\n    // Let the consumer know we have finished flushing the entire pipeline\n    pipeline.coalesceStream.on('done', this.trigger.bind(this, 'done'));\n  };\n\n  // hook up the segment streams once track metadata is delivered\n  this.setBaseMediaDecodeTime = function(baseMediaDecodeTime) {\n    var pipeline = this.transmuxPipeline_;\n\n    this.baseMediaDecodeTime = baseMediaDecodeTime;\n    if (audioTrack) {\n      audioTrack.timelineStartInfo.dts = undefined;\n      audioTrack.timelineStartInfo.pts = undefined;\n      clearDtsInfo(audioTrack);\n      audioTrack.timelineStartInfo.baseMediaDecodeTime = baseMediaDecodeTime;\n    }\n    if (videoTrack) {\n      if (pipeline.videoSegmentStream) {\n        pipeline.videoSegmentStream.gopCache_ = [];\n      }\n      videoTrack.timelineStartInfo.dts = undefined;\n      videoTrack.timelineStartInfo.pts = undefined;\n      clearDtsInfo(videoTrack);\n      videoTrack.timelineStartInfo.baseMediaDecodeTime = baseMediaDecodeTime;\n    }\n  };\n\n  // feed incoming data to the front of the parsing pipeline\n  this.push = function(data) {\n    if (hasFlushed) {\n      var isAac = isLikelyAacData(data);\n\n      if (isAac && this.transmuxPipeline_.type !== 'aac') {\n        this.setupAacPipeline();\n      } else if (!isAac && this.transmuxPipeline_.type !== 'ts') {\n        this.setupTsPipeline();\n      }\n      hasFlushed = false;\n    }\n    this.transmuxPipeline_.headOfPipeline.push(data);\n  };\n\n  // flush any buffered data\n  this.flush = function() {\n      hasFlushed = true;\n    // Start at the top of the pipeline and flush all pending work\n    this.transmuxPipeline_.headOfPipeline.flush();\n  };\n};\nTransmuxer.prototype = new Stream();\n\nmodule.exports = {\n  Transmuxer: Transmuxer,\n  VideoSegmentStream: VideoSegmentStream,\n  AudioSegmentStream: AudioSegmentStream,\n  AUDIO_PROPERTIES: AUDIO_PROPERTIES,\n  VIDEO_PROPERTIES: VIDEO_PROPERTIES\n};\n\n},{\"../aac\":69,\"../codecs/adts.js\":71,\"../codecs/h264\":72,\"../m2ts/m2ts.js\":78,\"../utils/stream.js\":89,\"./mp4-generator.js\":84}],87:[function(require,module,exports){\n/**\n * mux.js\n *\n * Copyright (c) 2016 Brightcove\n * All rights reserved.\n *\n * Parse mpeg2 transport stream packets to extract basic timing information\n */\n'use strict';\n\nvar StreamTypes = require('../m2ts/stream-types.js');\nvar handleRollover = require('../m2ts/timestamp-rollover-stream.js').handleRollover;\nvar probe = {};\nprobe.ts = require('../m2ts/probe.js');\nprobe.aac = require('../aac/probe.js');\n\n\nvar\n  PES_TIMESCALE = 90000,\n  MP2T_PACKET_LENGTH = 188, // bytes\n  SYNC_BYTE = 0x47;\n\nvar isLikelyAacData = function(data) {\n  if ((data[0] === 'I'.charCodeAt(0)) &&\n      (data[1] === 'D'.charCodeAt(0)) &&\n      (data[2] === '3'.charCodeAt(0))) {\n    return true;\n  }\n  return false;\n};\n\n/**\n * walks through segment data looking for pat and pmt packets to parse out\n * program map table information\n */\nvar parsePsi_ = function(bytes, pmt) {\n  var\n    startIndex = 0,\n    endIndex = MP2T_PACKET_LENGTH,\n    packet, type;\n\n  while (endIndex < bytes.byteLength) {\n    // Look for a pair of start and end sync bytes in the data..\n    if (bytes[startIndex] === SYNC_BYTE && bytes[endIndex] === SYNC_BYTE) {\n      // We found a packet\n      packet = bytes.subarray(startIndex, endIndex);\n      type = probe.ts.parseType(packet, pmt.pid);\n\n      switch (type) {\n        case 'pat':\n          if (!pmt.pid) {\n            pmt.pid = probe.ts.parsePat(packet);\n          }\n          break;\n        case 'pmt':\n          if (!pmt.table) {\n            pmt.table = probe.ts.parsePmt(packet);\n          }\n          break;\n        default:\n          break;\n      }\n\n      // Found the pat and pmt, we can stop walking the segment\n      if (pmt.pid && pmt.table) {\n        return;\n      }\n\n      startIndex += MP2T_PACKET_LENGTH;\n      endIndex += MP2T_PACKET_LENGTH;\n      continue;\n    }\n\n    // If we get here, we have somehow become de-synchronized and we need to step\n    // forward one byte at a time until we find a pair of sync bytes that denote\n    // a packet\n    startIndex++;\n    endIndex++;\n  }\n};\n\n/**\n * walks through the segment data from the start and end to get timing information\n * for the first and last audio pes packets\n */\nvar parseAudioPes_ = function(bytes, pmt, result) {\n  var\n    startIndex = 0,\n    endIndex = MP2T_PACKET_LENGTH,\n    packet, type, pesType, pusi, parsed;\n\n  var endLoop = false;\n\n  // Start walking from start of segment to get first audio packet\n  while (endIndex < bytes.byteLength) {\n    // Look for a pair of start and end sync bytes in the data..\n    if (bytes[startIndex] === SYNC_BYTE && bytes[endIndex] === SYNC_BYTE) {\n      // We found a packet\n      packet = bytes.subarray(startIndex, endIndex);\n      type = probe.ts.parseType(packet, pmt.pid);\n\n      switch (type) {\n        case 'pes':\n          pesType = probe.ts.parsePesType(packet, pmt.table);\n          pusi = probe.ts.parsePayloadUnitStartIndicator(packet);\n          if (pesType === 'audio' && pusi) {\n            parsed = probe.ts.parsePesTime(packet);\n            parsed.type = 'audio';\n            result.audio.push(parsed);\n            endLoop = true;\n          }\n          break;\n        default:\n          break;\n      }\n\n      if (endLoop) {\n        break;\n      }\n\n      startIndex += MP2T_PACKET_LENGTH;\n      endIndex += MP2T_PACKET_LENGTH;\n      continue;\n    }\n\n    // If we get here, we have somehow become de-synchronized and we need to step\n    // forward one byte at a time until we find a pair of sync bytes that denote\n    // a packet\n    startIndex++;\n    endIndex++;\n  }\n\n  // Start walking from end of segment to get last audio packet\n  endIndex = bytes.byteLength;\n  startIndex = endIndex - MP2T_PACKET_LENGTH;\n  endLoop = false;\n  while (startIndex >= 0) {\n    // Look for a pair of start and end sync bytes in the data..\n    if (bytes[startIndex] === SYNC_BYTE && bytes[endIndex] === SYNC_BYTE) {\n      // We found a packet\n      packet = bytes.subarray(startIndex, endIndex);\n      type = probe.ts.parseType(packet, pmt.pid);\n\n      switch (type) {\n        case 'pes':\n          pesType = probe.ts.parsePesType(packet, pmt.table);\n          pusi = probe.ts.parsePayloadUnitStartIndicator(packet);\n          if (pesType === 'audio' && pusi) {\n            parsed = probe.ts.parsePesTime(packet);\n            parsed.type = 'audio';\n            result.audio.push(parsed);\n            endLoop = true;\n          }\n          break;\n        default:\n          break;\n      }\n\n      if (endLoop) {\n        break;\n      }\n\n      startIndex -= MP2T_PACKET_LENGTH;\n      endIndex -= MP2T_PACKET_LENGTH;\n      continue;\n    }\n\n    // If we get here, we have somehow become de-synchronized and we need to step\n    // forward one byte at a time until we find a pair of sync bytes that denote\n    // a packet\n    startIndex--;\n    endIndex--;\n  }\n};\n\n/**\n * walks through the segment data from the start and end to get timing information\n * for the first and last video pes packets as well as timing information for the first\n * key frame.\n */\nvar parseVideoPes_ = function(bytes, pmt, result) {\n  var\n    startIndex = 0,\n    endIndex = MP2T_PACKET_LENGTH,\n    packet, type, pesType, pusi, parsed, frame, i, pes;\n\n  var endLoop = false;\n\n  var currentFrame = {\n    data: [],\n    size: 0\n  };\n\n  // Start walking from start of segment to get first video packet\n  while (endIndex < bytes.byteLength) {\n    // Look for a pair of start and end sync bytes in the data..\n    if (bytes[startIndex] === SYNC_BYTE && bytes[endIndex] === SYNC_BYTE) {\n      // We found a packet\n      packet = bytes.subarray(startIndex, endIndex);\n      type = probe.ts.parseType(packet, pmt.pid);\n\n      switch (type) {\n        case 'pes':\n          pesType = probe.ts.parsePesType(packet, pmt.table);\n          pusi = probe.ts.parsePayloadUnitStartIndicator(packet);\n          if (pesType === 'video') {\n            if (pusi && !endLoop) {\n              parsed = probe.ts.parsePesTime(packet);\n              parsed.type = 'video';\n              result.video.push(parsed);\n              endLoop = true;\n            }\n            if (!result.firstKeyFrame) {\n              if (pusi) {\n                if (currentFrame.size !== 0) {\n                  frame = new Uint8Array(currentFrame.size);\n                  i = 0;\n                  while (currentFrame.data.length) {\n                    pes = currentFrame.data.shift();\n                    frame.set(pes, i);\n                    i += pes.byteLength;\n                  }\n                  if (probe.ts.videoPacketContainsKeyFrame(frame)) {\n                    result.firstKeyFrame = probe.ts.parsePesTime(frame);\n                    result.firstKeyFrame.type = 'video';\n                  }\n                  currentFrame.size = 0;\n                }\n              }\n              currentFrame.data.push(packet);\n              currentFrame.size += packet.byteLength;\n            }\n          }\n          break;\n        default:\n          break;\n      }\n\n      if (endLoop && result.firstKeyFrame) {\n        break;\n      }\n\n      startIndex += MP2T_PACKET_LENGTH;\n      endIndex += MP2T_PACKET_LENGTH;\n      continue;\n    }\n\n    // If we get here, we have somehow become de-synchronized and we need to step\n    // forward one byte at a time until we find a pair of sync bytes that denote\n    // a packet\n    startIndex++;\n    endIndex++;\n  }\n\n  // Start walking from end of segment to get last video packet\n  endIndex = bytes.byteLength;\n  startIndex = endIndex - MP2T_PACKET_LENGTH;\n  endLoop = false;\n  while (startIndex >= 0) {\n    // Look for a pair of start and end sync bytes in the data..\n    if (bytes[startIndex] === SYNC_BYTE && bytes[endIndex] === SYNC_BYTE) {\n      // We found a packet\n      packet = bytes.subarray(startIndex, endIndex);\n      type = probe.ts.parseType(packet, pmt.pid);\n\n      switch (type) {\n        case 'pes':\n          pesType = probe.ts.parsePesType(packet, pmt.table);\n          pusi = probe.ts.parsePayloadUnitStartIndicator(packet);\n          if (pesType === 'video' && pusi) {\n              parsed = probe.ts.parsePesTime(packet);\n              parsed.type = 'video';\n              result.video.push(parsed);\n            endLoop = true;\n          }\n          break;\n        default:\n          break;\n      }\n\n      if (endLoop) {\n        break;\n      }\n\n      startIndex -= MP2T_PACKET_LENGTH;\n      endIndex -= MP2T_PACKET_LENGTH;\n      continue;\n    }\n\n    // If we get here, we have somehow become de-synchronized and we need to step\n    // forward one byte at a time until we find a pair of sync bytes that denote\n    // a packet\n    startIndex--;\n    endIndex--;\n  }\n};\n\n/**\n * Adjusts the timestamp information for the segment to account for\n * rollover and convert to seconds based on pes packet timescale (90khz clock)\n */\nvar adjustTimestamp_ = function(segmentInfo, baseTimestamp) {\n  if (segmentInfo.audio && segmentInfo.audio.length) {\n    var audioBaseTimestamp = baseTimestamp;\n    if (typeof audioBaseTimestamp === 'undefined') {\n      audioBaseTimestamp = segmentInfo.audio[0].dts;\n    }\n    segmentInfo.audio.forEach(function(info) {\n      info.dts = handleRollover(info.dts, audioBaseTimestamp);\n      info.pts = handleRollover(info.pts, audioBaseTimestamp);\n      // time in seconds\n      info.dtsTime = info.dts / PES_TIMESCALE;\n      info.ptsTime = info.pts / PES_TIMESCALE;\n    });\n  }\n\n  if (segmentInfo.video && segmentInfo.video.length) {\n    var videoBaseTimestamp = baseTimestamp;\n    if (typeof videoBaseTimestamp === 'undefined') {\n      videoBaseTimestamp = segmentInfo.video[0].dts;\n    }\n    segmentInfo.video.forEach(function(info) {\n      info.dts = handleRollover(info.dts, videoBaseTimestamp);\n      info.pts = handleRollover(info.pts, videoBaseTimestamp);\n      // time in seconds\n      info.dtsTime = info.dts / PES_TIMESCALE;\n      info.ptsTime = info.pts / PES_TIMESCALE;\n    });\n    if (segmentInfo.firstKeyFrame) {\n      var frame = segmentInfo.firstKeyFrame;\n      frame.dts = handleRollover(frame.dts, videoBaseTimestamp);\n      frame.pts = handleRollover(frame.pts, videoBaseTimestamp);\n      // time in seconds\n      frame.dtsTime = frame.dts / PES_TIMESCALE;\n      frame.ptsTime = frame.dts / PES_TIMESCALE;\n    }\n  }\n};\n\n/**\n * inspects the aac data stream for start and end time information\n */\nvar inspectAac_ = function(bytes) {\n  var\n    endLoop = false,\n    audioCount = 0,\n    sampleRate = null,\n    timestamp = null,\n    frameSize = 0,\n    byteIndex = 0,\n    packet;\n\n  while (bytes.length - byteIndex >= 3) {\n    var type = probe.aac.parseType(bytes, byteIndex);\n    switch (type) {\n      case 'timed-metadata':\n        // Exit early because we don't have enough to parse\n        // the ID3 tag header\n        if (bytes.length - byteIndex < 10) {\n          endLoop = true;\n          break;\n        }\n\n        frameSize = probe.aac.parseId3TagSize(bytes, byteIndex);\n\n        // Exit early if we don't have enough in the buffer\n        // to emit a full packet\n        if (frameSize > bytes.length) {\n          endLoop = true;\n          break;\n        }\n        if (timestamp === null) {\n          packet = bytes.subarray(byteIndex, byteIndex + frameSize);\n          timestamp = probe.aac.parseAacTimestamp(packet);\n        }\n        byteIndex += frameSize;\n        break;\n      case 'audio':\n        // Exit early because we don't have enough to parse\n        // the ADTS frame header\n        if (bytes.length - byteIndex < 7) {\n          endLoop = true;\n          break;\n        }\n\n        frameSize = probe.aac.parseAdtsSize(bytes, byteIndex);\n\n        // Exit early if we don't have enough in the buffer\n        // to emit a full packet\n        if (frameSize > bytes.length) {\n          endLoop = true;\n          break;\n        }\n        if (sampleRate === null) {\n          packet = bytes.subarray(byteIndex, byteIndex + frameSize);\n          sampleRate = probe.aac.parseSampleRate(packet);\n        }\n        audioCount++;\n        byteIndex += frameSize;\n        break;\n      default:\n        byteIndex++;\n        break;\n    }\n    if (endLoop) {\n      return null;\n    }\n  }\n  if (sampleRate === null || timestamp === null) {\n    return null;\n  }\n\n  var audioTimescale = PES_TIMESCALE / sampleRate;\n\n  var result = {\n    audio: [\n      {\n        type: 'audio',\n        dts: timestamp,\n        pts: timestamp\n      },\n      {\n        type: 'audio',\n        dts: timestamp + (audioCount * 1024 * audioTimescale),\n        pts: timestamp + (audioCount * 1024 * audioTimescale)\n      }\n    ]\n  };\n\n  return result;\n};\n\n/**\n * inspects the transport stream segment data for start and end time information\n * of the audio and video tracks (when present) as well as the first key frame's\n * start time.\n */\nvar inspectTs_ = function(bytes) {\n  var pmt = {\n    pid: null,\n    table: null\n  };\n\n  var result = {};\n\n  parsePsi_(bytes, pmt);\n\n  for (var pid in pmt.table) {\n    if (pmt.table.hasOwnProperty(pid)) {\n      var type = pmt.table[pid];\n      switch (type) {\n        case StreamTypes.H264_STREAM_TYPE:\n          result.video = [];\n          parseVideoPes_(bytes, pmt, result);\n          if (result.video.length === 0) {\n            delete result.video;\n          }\n          break;\n        case StreamTypes.ADTS_STREAM_TYPE:\n          result.audio = [];\n          parseAudioPes_(bytes, pmt, result);\n          if (result.audio.length === 0) {\n            delete result.audio;\n          }\n          break;\n        default:\n          break;\n      }\n    }\n  }\n  return result;\n};\n\n/**\n * Inspects segment byte data and returns an object with start and end timing information\n *\n * @param {Uint8Array} bytes The segment byte data\n * @param {Number} baseTimestamp Relative reference timestamp used when adjusting frame\n *  timestamps for rollover. This value must be in 90khz clock.\n * @return {Object} Object containing start and end frame timing info of segment.\n */\nvar inspect = function(bytes, baseTimestamp) {\n  var isAacData = isLikelyAacData(bytes);\n\n  var result;\n\n  if (isAacData) {\n    result = inspectAac_(bytes);\n  } else {\n    result = inspectTs_(bytes);\n  }\n\n  if (!result || (!result.audio && !result.video)) {\n    return null;\n  }\n\n  adjustTimestamp_(result, baseTimestamp);\n\n  return result;\n};\n\nmodule.exports = {\n  inspect: inspect\n};\n\n},{\"../aac/probe.js\":70,\"../m2ts/probe.js\":80,\"../m2ts/stream-types.js\":81,\"../m2ts/timestamp-rollover-stream.js\":82}],88:[function(require,module,exports){\n'use strict';\n\nvar ExpGolomb;\n\n/**\n * Parser for exponential Golomb codes, a variable-bitwidth number encoding\n * scheme used by h264.\n */\nExpGolomb = function(workingData) {\n  var\n    // the number of bytes left to examine in workingData\n    workingBytesAvailable = workingData.byteLength,\n\n    // the current word being examined\n    workingWord = 0, // :uint\n\n    // the number of bits left to examine in the current word\n    workingBitsAvailable = 0; // :uint;\n\n  // ():uint\n  this.length = function() {\n    return (8 * workingBytesAvailable);\n  };\n\n  // ():uint\n  this.bitsAvailable = function() {\n    return (8 * workingBytesAvailable) + workingBitsAvailable;\n  };\n\n  // ():void\n  this.loadWord = function() {\n    var\n      position = workingData.byteLength - workingBytesAvailable,\n      workingBytes = new Uint8Array(4),\n      availableBytes = Math.min(4, workingBytesAvailable);\n\n    if (availableBytes === 0) {\n      throw new Error('no bytes available');\n    }\n\n    workingBytes.set(workingData.subarray(position,\n                                          position + availableBytes));\n    workingWord = new DataView(workingBytes.buffer).getUint32(0);\n\n    // track the amount of workingData that has been processed\n    workingBitsAvailable = availableBytes * 8;\n    workingBytesAvailable -= availableBytes;\n  };\n\n  // (count:int):void\n  this.skipBits = function(count) {\n    var skipBytes; // :int\n    if (workingBitsAvailable > count) {\n      workingWord          <<= count;\n      workingBitsAvailable -= count;\n    } else {\n      count -= workingBitsAvailable;\n      skipBytes = Math.floor(count / 8);\n\n      count -= (skipBytes * 8);\n      workingBytesAvailable -= skipBytes;\n\n      this.loadWord();\n\n      workingWord <<= count;\n      workingBitsAvailable -= count;\n    }\n  };\n\n  // (size:int):uint\n  this.readBits = function(size) {\n    var\n      bits = Math.min(workingBitsAvailable, size), // :uint\n      valu = workingWord >>> (32 - bits); // :uint\n    // if size > 31, handle error\n    workingBitsAvailable -= bits;\n    if (workingBitsAvailable > 0) {\n      workingWord <<= bits;\n    } else if (workingBytesAvailable > 0) {\n      this.loadWord();\n    }\n\n    bits = size - bits;\n    if (bits > 0) {\n      return valu << bits | this.readBits(bits);\n    }\n    return valu;\n  };\n\n  // ():uint\n  this.skipLeadingZeros = function() {\n    var leadingZeroCount; // :uint\n    for (leadingZeroCount = 0; leadingZeroCount < workingBitsAvailable; ++leadingZeroCount) {\n      if ((workingWord & (0x80000000 >>> leadingZeroCount)) !== 0) {\n        // the first bit of working word is 1\n        workingWord <<= leadingZeroCount;\n        workingBitsAvailable -= leadingZeroCount;\n        return leadingZeroCount;\n      }\n    }\n\n    // we exhausted workingWord and still have not found a 1\n    this.loadWord();\n    return leadingZeroCount + this.skipLeadingZeros();\n  };\n\n  // ():void\n  this.skipUnsignedExpGolomb = function() {\n    this.skipBits(1 + this.skipLeadingZeros());\n  };\n\n  // ():void\n  this.skipExpGolomb = function() {\n    this.skipBits(1 + this.skipLeadingZeros());\n  };\n\n  // ():uint\n  this.readUnsignedExpGolomb = function() {\n    var clz = this.skipLeadingZeros(); // :uint\n    return this.readBits(clz + 1) - 1;\n  };\n\n  // ():int\n  this.readExpGolomb = function() {\n    var valu = this.readUnsignedExpGolomb(); // :int\n    if (0x01 & valu) {\n      // the number is odd if the low order bit is set\n      return (1 + valu) >>> 1; // add 1 to make it even, and divide by 2\n    }\n    return -1 * (valu >>> 1); // divide by two then make it negative\n  };\n\n  // Some convenience functions\n  // :Boolean\n  this.readBoolean = function() {\n    return this.readBits(1) === 1;\n  };\n\n  // ():int\n  this.readUnsignedByte = function() {\n    return this.readBits(8);\n  };\n\n  this.loadWord();\n};\n\nmodule.exports = ExpGolomb;\n\n},{}],89:[function(require,module,exports){\n/**\n * mux.js\n *\n * Copyright (c) 2014 Brightcove\n * All rights reserved.\n *\n * A lightweight readable stream implemention that handles event dispatching.\n * Objects that inherit from streams should call init in their constructors.\n */\n'use strict';\n\nvar Stream = function() {\n  this.init = function() {\n    var listeners = {};\n    /**\n     * Add a listener for a specified event type.\n     * @param type {string} the event name\n     * @param listener {function} the callback to be invoked when an event of\n     * the specified type occurs\n     */\n    this.on = function(type, listener) {\n      if (!listeners[type]) {\n        listeners[type] = [];\n      }\n      listeners[type] = listeners[type].concat(listener);\n    };\n    /**\n     * Remove a listener for a specified event type.\n     * @param type {string} the event name\n     * @param listener {function} a function previously registered for this\n     * type of event through `on`\n     */\n    this.off = function(type, listener) {\n      var index;\n      if (!listeners[type]) {\n        return false;\n      }\n      index = listeners[type].indexOf(listener);\n      listeners[type] = listeners[type].slice();\n      listeners[type].splice(index, 1);\n      return index > -1;\n    };\n    /**\n     * Trigger an event of the specified type on this stream. Any additional\n     * arguments to this function are passed as parameters to event listeners.\n     * @param type {string} the event name\n     */\n    this.trigger = function(type) {\n      var callbacks, i, length, args;\n      callbacks = listeners[type];\n      if (!callbacks) {\n        return;\n      }\n      // Slicing the arguments on every invocation of this method\n      // can add a significant amount of overhead. Avoid the\n      // intermediate object creation for the common case of a\n      // single callback argument\n      if (arguments.length === 2) {\n        length = callbacks.length;\n        for (i = 0; i < length; ++i) {\n          callbacks[i].call(this, arguments[1]);\n        }\n      } else {\n        args = [];\n        i = arguments.length;\n        for (i = 1; i < arguments.length; ++i) {\n          args.push(arguments[i]);\n        }\n        length = callbacks.length;\n        for (i = 0; i < length; ++i) {\n          callbacks[i].apply(this, args);\n        }\n      }\n    };\n    /**\n     * Destroys the stream and cleans up.\n     */\n    this.dispose = function() {\n      listeners = {};\n    };\n  };\n};\n\n/**\n * Forwards all `data` events on this stream to the destination stream. The\n * destination stream should provide a method `push` to receive the data\n * events as they arrive.\n * @param destination {stream} the stream that will receive all `data` events\n * @param autoFlush {boolean} if false, we will not call `flush` on the destination\n *                            when the current stream emits a 'done' event\n * @see http://nodejs.org/api/stream.html#stream_readable_pipe_destination_options\n */\nStream.prototype.pipe = function(destination) {\n  this.on('data', function(data) {\n    destination.push(data);\n  });\n\n  this.on('done', function(flushSource) {\n    destination.flush(flushSource);\n  });\n\n  return destination;\n};\n\n// Default stream functions that are expected to be overridden to perform\n// actual work. These are provided by the prototype as a sort of no-op\n// implementation so that we don't have to check for their existence in the\n// `pipe` function above.\nStream.prototype.push = function(data) {\n  this.trigger('data', data);\n};\n\nStream.prototype.flush = function(flushSource) {\n  this.trigger('done', flushSource);\n};\n\nmodule.exports = Stream;\n\n},{}],90:[function(require,module,exports){\n/* jshint ignore:start */\r\n(function(root) { \r\n/* jshint ignore:end */\r\n  var URLToolkit = {\r\n    // build an absolute URL from a relative one using the provided baseURL\r\n    // if relativeURL is an absolute URL it will be returned as is.\r\n    buildAbsoluteURL: function(baseURL, relativeURL) {\r\n      // remove any remaining space and CRLF\r\n      relativeURL = relativeURL.trim();\r\n      if (/^[a-z]+:/i.test(relativeURL)) {\r\n        // complete url, not relative\r\n        return relativeURL;\r\n      }\r\n\r\n      var relativeURLQuery = null;\r\n      var relativeURLHash = null;\r\n\r\n      var relativeURLHashSplit = /^([^#]*)(.*)$/.exec(relativeURL);\r\n      if (relativeURLHashSplit) {\r\n        relativeURLHash = relativeURLHashSplit[2];\r\n        relativeURL = relativeURLHashSplit[1];\r\n      }\r\n      var relativeURLQuerySplit = /^([^\\?]*)(.*)$/.exec(relativeURL);\r\n      if (relativeURLQuerySplit) {\r\n        relativeURLQuery = relativeURLQuerySplit[2];\r\n        relativeURL = relativeURLQuerySplit[1];\r\n      }\r\n\r\n      var baseURLHashSplit = /^([^#]*)(.*)$/.exec(baseURL);\r\n      if (baseURLHashSplit) {\r\n        baseURL = baseURLHashSplit[1];\r\n      }\r\n      var baseURLQuerySplit = /^([^\\?]*)(.*)$/.exec(baseURL);\r\n      if (baseURLQuerySplit) {\r\n        baseURL = baseURLQuerySplit[1];\r\n      }\r\n\r\n      var baseURLDomainSplit = /^(([a-z]+:)?\\/\\/[a-z0-9\\.\\-_~]+(:[0-9]+)?)?(\\/.*)$/i.exec(baseURL);\r\n      if (!baseURLDomainSplit) {\r\n        throw new Error('Error trying to parse base URL.');\r\n      }\r\n      \r\n      // e.g. 'http:', 'https:', ''\r\n      var baseURLProtocol = baseURLDomainSplit[2] || '';\r\n      // e.g. 'http://example.com', '//example.com', ''\r\n      var baseURLProtocolDomain = baseURLDomainSplit[1] || '';\r\n      // e.g. '/a/b/c/playlist.m3u8'\r\n      var baseURLPath = baseURLDomainSplit[4];\r\n\r\n      var builtURL = null;\r\n      if (/^\\/\\//.test(relativeURL)) {\r\n        // relative url starts wth '//' so copy protocol (which may be '' if baseUrl didn't provide one)\r\n        builtURL = baseURLProtocol+'//'+URLToolkit.buildAbsolutePath('', relativeURL.substring(2));\r\n      }\r\n      else if (/^\\//.test(relativeURL)) {\r\n        // relative url starts with '/' so start from root of domain\r\n        builtURL = baseURLProtocolDomain+'/'+URLToolkit.buildAbsolutePath('', relativeURL.substring(1));\r\n      }\r\n      else {\r\n        builtURL = URLToolkit.buildAbsolutePath(baseURLProtocolDomain+baseURLPath, relativeURL);\r\n      }\r\n\r\n      // put the query and hash parts back\r\n      if (relativeURLQuery) {\r\n        builtURL += relativeURLQuery;\r\n      }\r\n      if (relativeURLHash) {\r\n        builtURL += relativeURLHash;\r\n      }\r\n      return builtURL;\r\n    },\r\n\r\n    // build an absolute path using the provided basePath\r\n    // adapted from https://developer.mozilla.org/en-US/docs/Web/API/document/cookie#Using_relative_URLs_in_the_path_parameter\r\n    // this does not handle the case where relativePath is \"/\" or \"//\". These cases should be handled outside this.\r\n    buildAbsolutePath: function(basePath, relativePath) {\r\n      var sRelPath = relativePath;\r\n      var nUpLn, sDir = '', sPath = basePath.replace(/[^\\/]*$/, sRelPath.replace(/(\\/|^)(?:\\.?\\/+)+/g, '$1'));\r\n      for (var nEnd, nStart = 0; nEnd = sPath.indexOf('/../', nStart), nEnd > -1; nStart = nEnd + nUpLn) {\r\n        nUpLn = /^\\/(?:\\.\\.\\/)*/.exec(sPath.slice(nEnd))[0].length;\r\n        sDir = (sDir + sPath.substring(nStart, nEnd)).replace(new RegExp('(?:\\\\\\/+[^\\\\\\/]*){0,' + ((nUpLn - 1) / 3) + '}$'), '/');\r\n      }\r\n      return sDir + sPath.substr(nStart);\r\n    }\r\n  };\r\n\r\n/* jshint ignore:start */\r\n  if(typeof exports === 'object' && typeof module === 'object')\r\n    module.exports = URLToolkit;\r\n  else if(typeof define === 'function' && define.amd)\r\n    define([], function() { return URLToolkit; });\r\n  else if(typeof exports === 'object')\r\n    exports[\"URLToolkit\"] = URLToolkit;\r\n  else\r\n    root[\"URLToolkit\"] = URLToolkit;\r\n})(this);\r\n/* jshint ignore:end */\r\n\n},{}],91:[function(require,module,exports){\n(function (global){\n/**\n * @file add-text-track-data.js\n */\n'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nvar _globalWindow = require('global/window');\n\nvar _globalWindow2 = _interopRequireDefault(_globalWindow);\n\nvar _videoJs = (typeof window !== \"undefined\" ? window['videojs'] : typeof global !== \"undefined\" ? global['videojs'] : null);\n\nvar _videoJs2 = _interopRequireDefault(_videoJs);\n\n/**\n * Define properties on a cue for backwards compatability,\n * but warn the user that the way that they are using it\n * is depricated and will be removed at a later date.\n *\n * @param {Cue} cue the cue to add the properties on\n * @private\n */\nvar deprecateOldCue = function deprecateOldCue(cue) {\n  Object.defineProperties(cue.frame, {\n    id: {\n      get: function get() {\n        _videoJs2['default'].log.warn('cue.frame.id is deprecated. Use cue.value.key instead.');\n        return cue.value.key;\n      }\n    },\n    value: {\n      get: function get() {\n        _videoJs2['default'].log.warn('cue.frame.value is deprecated. Use cue.value.data instead.');\n        return cue.value.data;\n      }\n    },\n    privateData: {\n      get: function get() {\n        _videoJs2['default'].log.warn('cue.frame.privateData is deprecated. Use cue.value.data instead.');\n        return cue.value.data;\n      }\n    }\n  });\n};\n\nvar durationOfVideo = function durationOfVideo(duration) {\n  var dur = undefined;\n\n  if (isNaN(duration) || Math.abs(duration) === Infinity) {\n    dur = Number.MAX_VALUE;\n  } else {\n    dur = duration;\n  }\n  return dur;\n};\n/**\n * Add text track data to a source handler given the captions and\n * metadata from the buffer.\n *\n * @param {Object} sourceHandler the flash or virtual source buffer\n * @param {Array} captionArray an array of caption data\n * @param {Array} cue an array of meta data\n * @private\n */\nvar addTextTrackData = function addTextTrackData(sourceHandler, captionArray, metadataArray) {\n  var Cue = _globalWindow2['default'].WebKitDataCue || _globalWindow2['default'].VTTCue;\n\n  if (captionArray) {\n    captionArray.forEach(function (caption) {\n      this.inbandTextTrack_.addCue(new Cue(caption.startTime + this.timestampOffset, caption.endTime + this.timestampOffset, caption.text));\n    }, sourceHandler);\n  }\n\n  if (metadataArray) {\n    var videoDuration = durationOfVideo(sourceHandler.mediaSource_.duration);\n\n    metadataArray.forEach(function (metadata) {\n      var time = metadata.cueTime + this.timestampOffset;\n\n      metadata.frames.forEach(function (frame) {\n        var cue = new Cue(time, time, frame.value || frame.url || frame.data || '');\n\n        cue.frame = frame;\n        cue.value = frame;\n        deprecateOldCue(cue);\n\n        this.metadataTrack_.addCue(cue);\n      }, this);\n    }, sourceHandler);\n\n    // Updating the metadeta cues so that\n    // the endTime of each cue is the startTime of the next cue\n    // the endTime of last cue is the duration of the video\n    if (sourceHandler.metadataTrack_ && sourceHandler.metadataTrack_.cues && sourceHandler.metadataTrack_.cues.length) {\n      var cues = sourceHandler.metadataTrack_.cues;\n      var cuesArray = [];\n\n      for (var j = 0; j < cues.length; j++) {\n        cuesArray.push(cues[j]);\n      }\n      cuesArray.sort(function (first, second) {\n        return first.startTime - second.startTime;\n      });\n\n      for (var i = 0; i < cuesArray.length - 1; i++) {\n        if (cuesArray[i].endTime !== cuesArray[i + 1].startTime) {\n          cuesArray[i].endTime = cuesArray[i + 1].startTime;\n        }\n      }\n      cuesArray[cuesArray.length - 1].endTime = videoDuration;\n    }\n  }\n};\n\nexports['default'] = {\n  addTextTrackData: addTextTrackData,\n  durationOfVideo: durationOfVideo\n};\nmodule.exports = exports['default'];\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n},{\"global/window\":27}],92:[function(require,module,exports){\n/**\n * Remove the text track from the player if one with matching kind and\n * label properties already exists on the player\n *\n * @param {Object} player the video.js player object\n * @param {String} kind to be considered the text track's `kind` must match\n * @param {String} label to be considered the text track's `label` must match\n * @private\n */\n'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\nvar removeExistingTrack = function removeExistingTrack(player, kind, label) {\n  var tracks = player.remoteTextTracks() || [];\n\n  for (var i = 0; i < tracks.length; i++) {\n    var track = tracks[i];\n\n    if (track.kind === kind && track.label === label) {\n      player.removeRemoteTextTrack(track);\n    }\n  }\n};\n\nexports.removeExistingTrack = removeExistingTrack;\n/**\n * Cleaup text tracks on video.js if they exist\n *\n * @param {Object} player the video.js player object\n * @private\n */\nvar cleanupTextTracks = function cleanupTextTracks(player) {\n  removeExistingTrack(player, 'captions', 'cc1');\n  removeExistingTrack(player, 'metadata', 'Timed Metadata');\n};\nexports.cleanupTextTracks = cleanupTextTracks;\n},{}],93:[function(require,module,exports){\n/**\n * @file codec-utils.js\n */\n\n/**\n * Check if a codec string refers to an audio codec.\n *\n * @param {String} codec codec string to check\n * @return {Boolean} if this is an audio codec\n * @private\n */\n'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\nvar isAudioCodec = function isAudioCodec(codec) {\n  return (/mp4a\\.\\d+.\\d+/i.test(codec)\n  );\n};\n\n/**\n * Check if a codec string refers to a video codec.\n *\n * @param {String} codec codec string to check\n * @return {Boolean} if this is a video codec\n * @private\n */\nvar isVideoCodec = function isVideoCodec(codec) {\n  return (/avc1\\.[\\da-f]+/i.test(codec)\n  );\n};\n\n/**\n * Parse a content type header into a type and parameters\n * object\n *\n * @param {String} type the content type header\n * @return {Object} the parsed content-type\n * @private\n */\nvar parseContentType = function parseContentType(type) {\n  var object = { type: '', parameters: {} };\n  var parameters = type.trim().split(';');\n\n  // first parameter should always be content-type\n  object.type = parameters.shift().trim();\n  parameters.forEach(function (parameter) {\n    var pair = parameter.trim().split('=');\n\n    if (pair.length > 1) {\n      var _name = pair[0].replace(/\"/g, '').trim();\n      var value = pair[1].replace(/\"/g, '').trim();\n\n      object.parameters[_name] = value;\n    }\n  });\n\n  return object;\n};\n\nexports['default'] = {\n  isAudioCodec: isAudioCodec,\n  parseContentType: parseContentType,\n  isVideoCodec: isVideoCodec\n};\nmodule.exports = exports['default'];\n},{}],94:[function(require,module,exports){\n/**\n * @file create-text-tracks-if-necessary.js\n */\n'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\n\nvar _cleanupTextTracks = require('./cleanup-text-tracks');\n\n/**\n * Create text tracks on video.js if they exist on a segment.\n *\n * @param {Object} sourceBuffer the VSB or FSB\n * @param {Object} mediaSource the HTML or Flash media source\n * @param {Object} segment the segment that may contain the text track\n * @private\n */\nvar createTextTracksIfNecessary = function createTextTracksIfNecessary(sourceBuffer, mediaSource, segment) {\n  var player = mediaSource.player_;\n\n  // create an in-band caption track if one is present in the segment\n  if (segment.captions && segment.captions.length && !sourceBuffer.inbandTextTrack_) {\n    (0, _cleanupTextTracks.removeExistingTrack)(player, 'captions', 'cc1');\n    sourceBuffer.inbandTextTrack_ = player.addRemoteTextTrack({\n      kind: 'captions',\n      label: 'cc1'\n    }, false).track;\n  }\n\n  if (segment.metadata && segment.metadata.length && !sourceBuffer.metadataTrack_) {\n    (0, _cleanupTextTracks.removeExistingTrack)(player, 'metadata', 'Timed Metadata', true);\n    sourceBuffer.metadataTrack_ = player.addRemoteTextTrack({\n      kind: 'metadata',\n      label: 'Timed Metadata'\n    }, false).track;\n    sourceBuffer.metadataTrack_.inBandMetadataTrackDispatchType = segment.metadata.dispatchType;\n  }\n};\n\nexports['default'] = createTextTracksIfNecessary;\nmodule.exports = exports['default'];\n},{\"./cleanup-text-tracks\":92}],95:[function(require,module,exports){\n/**\n * @file flash-constants.js\n */\n/**\n * The maximum size in bytes for append operations to the video.js\n * SWF. Calling through to Flash blocks and can be expensive so\n * we chunk data and pass through 4KB at a time, yielding to the\n * browser between chunks. This gives a theoretical maximum rate of\n * 1MB/s into Flash. Any higher and we begin to drop frames and UI\n * responsiveness suffers.\n *\n * @private\n */\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nvar flashConstants = {\n  // times in milliseconds\n  TIME_BETWEEN_CHUNKS: 4,\n  BYTES_PER_CHUNK: 4096\n};\n\nexports[\"default\"] = flashConstants;\nmodule.exports = exports[\"default\"];\n},{}],96:[function(require,module,exports){\n(function (global){\n/**\n * @file flash-media-source.js\n */\n'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\n\nvar _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();\n\nvar _get = function get(_x, _x2, _x3) { var _again = true; _function: while (_again) { var object = _x, property = _x2, receiver = _x3; _again = false; if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { _x = parent; _x2 = property; _x3 = receiver; _again = true; desc = parent = undefined; continue _function; } } else if ('value' in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } } };\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== 'function' && superClass !== null) { throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar _globalDocument = require('global/document');\n\nvar _globalDocument2 = _interopRequireDefault(_globalDocument);\n\nvar _videoJs = (typeof window !== \"undefined\" ? window['videojs'] : typeof global !== \"undefined\" ? global['videojs'] : null);\n\nvar _videoJs2 = _interopRequireDefault(_videoJs);\n\nvar _flashSourceBuffer = require('./flash-source-buffer');\n\nvar _flashSourceBuffer2 = _interopRequireDefault(_flashSourceBuffer);\n\nvar _flashConstants = require('./flash-constants');\n\nvar _flashConstants2 = _interopRequireDefault(_flashConstants);\n\nvar _codecUtils = require('./codec-utils');\n\nvar _cleanupTextTracks = require('./cleanup-text-tracks');\n\n/**\n * A flash implmentation of HTML MediaSources and a polyfill\n * for browsers that don't support native or HTML MediaSources..\n *\n * @link https://developer.mozilla.org/en-US/docs/Web/API/MediaSource\n * @class FlashMediaSource\n * @extends videojs.EventTarget\n */\n\nvar FlashMediaSource = (function (_videojs$EventTarget) {\n  _inherits(FlashMediaSource, _videojs$EventTarget);\n\n  function FlashMediaSource() {\n    var _this = this;\n\n    _classCallCheck(this, FlashMediaSource);\n\n    _get(Object.getPrototypeOf(FlashMediaSource.prototype), 'constructor', this).call(this);\n    this.sourceBuffers = [];\n    this.readyState = 'closed';\n\n    this.on(['sourceopen', 'webkitsourceopen'], function (event) {\n      // find the swf where we will push media data\n      _this.swfObj = _globalDocument2['default'].getElementById(event.swfId);\n      _this.player_ = (0, _videoJs2['default'])(_this.swfObj.parentNode);\n      _this.tech_ = _this.swfObj.tech;\n      _this.readyState = 'open';\n\n      _this.tech_.on('seeking', function () {\n        var i = _this.sourceBuffers.length;\n\n        while (i--) {\n          _this.sourceBuffers[i].abort();\n        }\n      });\n\n      if (_this.tech_.hls) {\n        _this.tech_.hls.on('dispose', function () {\n          (0, _cleanupTextTracks.cleanupTextTracks)(_this.player_);\n        });\n      }\n\n      // trigger load events\n      if (_this.swfObj) {\n        _this.swfObj.vjs_load();\n      }\n    });\n  }\n\n  /**\n    * Set or return the presentation duration.\n    *\n    * @param {Double} value the duration of the media in seconds\n    * @param {Double} the current presentation duration\n    * @link http://www.w3.org/TR/media-source/#widl-MediaSource-duration\n    */\n\n  /**\n   * We have this function so that the html and flash interfaces\n   * are the same.\n   *\n   * @private\n   */\n\n  _createClass(FlashMediaSource, [{\n    key: 'addSeekableRange_',\n    value: function addSeekableRange_() {}\n    // intentional no-op\n\n    /**\n     * Create a new flash source buffer and add it to our flash media source.\n     *\n     * @link https://developer.mozilla.org/en-US/docs/Web/API/MediaSource/addSourceBuffer\n     * @param {String} type the content-type of the source\n     * @return {Object} the flash source buffer\n     */\n\n  }, {\n    key: 'addSourceBuffer',\n    value: function addSourceBuffer(type) {\n      var parsedType = (0, _codecUtils.parseContentType)(type);\n      var sourceBuffer = undefined;\n\n      // if this is an FLV type, we'll push data to flash\n      if (parsedType.type === 'video/mp2t') {\n        // Flash source buffers\n        sourceBuffer = new _flashSourceBuffer2['default'](this);\n      } else {\n        throw new Error('NotSupportedError (Video.js)');\n      }\n\n      this.sourceBuffers.push(sourceBuffer);\n      return sourceBuffer;\n    }\n\n    /**\n     * Signals the end of the stream.\n     *\n     * @link https://w3c.github.io/media-source/#widl-MediaSource-endOfStream-void-EndOfStreamError-error\n     * @param {String=} error Signals that a playback error\n     * has occurred. If specified, it must be either \"network\" or\n     * \"decode\".\n     */\n  }, {\n    key: 'endOfStream',\n    value: function endOfStream(error) {\n      if (error === 'network') {\n        // MEDIA_ERR_NETWORK\n        this.tech_.error(2);\n      } else if (error === 'decode') {\n        // MEDIA_ERR_DECODE\n        this.tech_.error(3);\n      }\n      if (this.readyState !== 'ended') {\n        this.readyState = 'ended';\n        this.swfObj.vjs_endOfStream();\n      }\n    }\n  }]);\n\n  return FlashMediaSource;\n})(_videoJs2['default'].EventTarget);\n\nexports['default'] = FlashMediaSource;\ntry {\n  Object.defineProperty(FlashMediaSource.prototype, 'duration', {\n    /**\n     * Return the presentation duration.\n     *\n     * @return {Double} the duration of the media in seconds\n     * @link http://www.w3.org/TR/media-source/#widl-MediaSource-duration\n     */\n    get: function get() {\n      if (!this.swfObj) {\n        return NaN;\n      }\n      // get the current duration from the SWF\n      return this.swfObj.vjs_getProperty('duration');\n    },\n    /**\n     * Set the presentation duration.\n     *\n     * @param {Double} value the duration of the media in seconds\n     * @return {Double} the duration of the media in seconds\n     * @link http://www.w3.org/TR/media-source/#widl-MediaSource-duration\n     */\n    set: function set(value) {\n      var i = undefined;\n      var oldDuration = this.swfObj.vjs_getProperty('duration');\n\n      this.swfObj.vjs_setProperty('duration', value);\n\n      if (value < oldDuration) {\n        // In MSE, this triggers the range removal algorithm which causes\n        // an update to occur\n        for (i = 0; i < this.sourceBuffers.length; i++) {\n          this.sourceBuffers[i].remove(value, oldDuration);\n        }\n      }\n\n      return value;\n    }\n  });\n} catch (e) {\n  // IE8 throws if defineProperty is called on a non-DOM node. We\n  // don't support IE8 but we shouldn't throw an error if loaded\n  // there.\n  FlashMediaSource.prototype.duration = NaN;\n}\n\nfor (var property in _flashConstants2['default']) {\n  FlashMediaSource[property] = _flashConstants2['default'][property];\n}\nmodule.exports = exports['default'];\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n},{\"./cleanup-text-tracks\":92,\"./codec-utils\":93,\"./flash-constants\":95,\"./flash-source-buffer\":97,\"global/document\":26}],97:[function(require,module,exports){\n(function (global){\n/**\n * @file flash-source-buffer.js\n */\n'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\n\nvar _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();\n\nvar _get = function get(_x, _x2, _x3) { var _again = true; _function: while (_again) { var object = _x, property = _x2, receiver = _x3; _again = false; if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { _x = parent; _x2 = property; _x3 = receiver; _again = true; desc = parent = undefined; continue _function; } } else if ('value' in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } } };\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== 'function' && superClass !== null) { throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar _globalWindow = require('global/window');\n\nvar _globalWindow2 = _interopRequireDefault(_globalWindow);\n\nvar _videoJs = (typeof window !== \"undefined\" ? window['videojs'] : typeof global !== \"undefined\" ? global['videojs'] : null);\n\nvar _videoJs2 = _interopRequireDefault(_videoJs);\n\nvar _muxJsLibFlv = require('mux.js/lib/flv');\n\nvar _muxJsLibFlv2 = _interopRequireDefault(_muxJsLibFlv);\n\nvar _removeCuesFromTrack = require('./remove-cues-from-track');\n\nvar _removeCuesFromTrack2 = _interopRequireDefault(_removeCuesFromTrack);\n\nvar _createTextTracksIfNecessary = require('./create-text-tracks-if-necessary');\n\nvar _createTextTracksIfNecessary2 = _interopRequireDefault(_createTextTracksIfNecessary);\n\nvar _addTextTrackData = require('./add-text-track-data');\n\nvar _flashConstants = require('./flash-constants');\n\nvar _flashConstants2 = _interopRequireDefault(_flashConstants);\n\n/**\n * A wrapper around the setTimeout function that uses\n * the flash constant time between ticks value.\n *\n * @param {Function} func the function callback to run\n * @private\n */\nvar scheduleTick = function scheduleTick(func) {\n  // Chrome doesn't invoke requestAnimationFrame callbacks\n  // in background tabs, so use setTimeout.\n  _globalWindow2['default'].setTimeout(func, _flashConstants2['default'].TIME_BETWEEN_CHUNKS);\n};\n\n/**\n * Round a number to a specified number of places much like\n * toFixed but return a number instead of a string representation.\n *\n * @param {Number} num A number\n * @param {Number} places The number of decimal places which to\n * round\n * @private\n */\nvar toDecimalPlaces = function toDecimalPlaces(num, places) {\n  if (typeof places !== 'number' || places < 0) {\n    places = 0;\n  }\n\n  var scale = Math.pow(10, places);\n\n  return Math.round(num * scale) / scale;\n};\n\n/**\n * A SourceBuffer implementation for Flash rather than HTML.\n *\n * @link https://developer.mozilla.org/en-US/docs/Web/API/MediaSource\n * @param {Object} mediaSource the flash media source\n * @class FlashSourceBuffer\n * @extends videojs.EventTarget\n */\n\nvar FlashSourceBuffer = (function (_videojs$EventTarget) {\n  _inherits(FlashSourceBuffer, _videojs$EventTarget);\n\n  function FlashSourceBuffer(mediaSource) {\n    var _this = this;\n\n    _classCallCheck(this, FlashSourceBuffer);\n\n    _get(Object.getPrototypeOf(FlashSourceBuffer.prototype), 'constructor', this).call(this);\n    var encodedHeader = undefined;\n\n    // Start off using the globally defined value but refine\n    // as we append data into flash\n    this.chunkSize_ = _flashConstants2['default'].BYTES_PER_CHUNK;\n\n    // byte arrays queued to be appended\n    this.buffer_ = [];\n\n    // the total number of queued bytes\n    this.bufferSize_ = 0;\n\n    // to be able to determine the correct position to seek to, we\n    // need to retain information about the mapping between the\n    // media timeline and PTS values\n    this.basePtsOffset_ = NaN;\n\n    this.mediaSource_ = mediaSource;\n\n    // indicates whether the asynchronous continuation of an operation\n    // is still being processed\n    // see https://w3c.github.io/media-source/#widl-SourceBuffer-updating\n    this.updating = false;\n    this.timestampOffset_ = 0;\n\n    // TS to FLV transmuxer\n    this.segmentParser_ = new _muxJsLibFlv2['default'].Transmuxer();\n    this.segmentParser_.on('data', this.receiveBuffer_.bind(this));\n    encodedHeader = _globalWindow2['default'].btoa(String.fromCharCode.apply(null, Array.prototype.slice.call(this.segmentParser_.getFlvHeader())));\n    this.mediaSource_.swfObj.vjs_appendBuffer(encodedHeader);\n\n    this.one('updateend', function () {\n      _this.mediaSource_.tech_.trigger('loadedmetadata');\n    });\n\n    Object.defineProperty(this, 'timestampOffset', {\n      get: function get() {\n        return this.timestampOffset_;\n      },\n      set: function set(val) {\n        if (typeof val === 'number' && val >= 0) {\n          this.timestampOffset_ = val;\n          this.segmentParser_ = new _muxJsLibFlv2['default'].Transmuxer();\n          this.segmentParser_.on('data', this.receiveBuffer_.bind(this));\n          // We have to tell flash to expect a discontinuity\n          this.mediaSource_.swfObj.vjs_discontinuity();\n          // the media <-> PTS mapping must be re-established after\n          // the discontinuity\n          this.basePtsOffset_ = NaN;\n        }\n      }\n    });\n\n    Object.defineProperty(this, 'buffered', {\n      get: function get() {\n        if (!this.mediaSource_ || !this.mediaSource_.swfObj || !('vjs_getProperty' in this.mediaSource_.swfObj)) {\n          return _videoJs2['default'].createTimeRange();\n        }\n\n        var buffered = this.mediaSource_.swfObj.vjs_getProperty('buffered');\n\n        if (buffered && buffered.length) {\n          buffered[0][0] = toDecimalPlaces(buffered[0][0], 3);\n          buffered[0][1] = toDecimalPlaces(buffered[0][1], 3);\n        }\n        return _videoJs2['default'].createTimeRanges(buffered);\n      }\n    });\n\n    // On a seek we remove all text track data since flash has no concept\n    // of a buffered-range and everything else is reset on seek\n    this.mediaSource_.player_.on('seeked', function () {\n      (0, _removeCuesFromTrack2['default'])(0, Infinity, _this.metadataTrack_);\n      (0, _removeCuesFromTrack2['default'])(0, Infinity, _this.inbandTextTrack_);\n    });\n  }\n\n  /**\n   * Append bytes to the sourcebuffers buffer, in this case we\n   * have to append it to swf object.\n   *\n   * @link https://developer.mozilla.org/en-US/docs/Web/API/SourceBuffer/appendBuffer\n   * @param {Array} bytes\n   */\n\n  _createClass(FlashSourceBuffer, [{\n    key: 'appendBuffer',\n    value: function appendBuffer(bytes) {\n      var _this2 = this;\n\n      var error = undefined;\n      var chunk = 512 * 1024;\n      var i = 0;\n\n      if (this.updating) {\n        error = new Error('SourceBuffer.append() cannot be called ' + 'while an update is in progress');\n        error.name = 'InvalidStateError';\n        error.code = 11;\n        throw error;\n      }\n\n      this.updating = true;\n      this.mediaSource_.readyState = 'open';\n      this.trigger({ type: 'update' });\n\n      // this is here to use recursion\n      var chunkInData = function chunkInData() {\n        _this2.segmentParser_.push(bytes.subarray(i, i + chunk));\n        i += chunk;\n        if (i < bytes.byteLength) {\n          scheduleTick(chunkInData);\n        } else {\n          scheduleTick(_this2.segmentParser_.flush.bind(_this2.segmentParser_));\n        }\n      };\n\n      chunkInData();\n    }\n\n    /**\n     * Reset the parser and remove any data queued to be sent to the SWF.\n     *\n     * @link https://developer.mozilla.org/en-US/docs/Web/API/SourceBuffer/abort\n     */\n  }, {\n    key: 'abort',\n    value: function abort() {\n      this.buffer_ = [];\n      this.bufferSize_ = 0;\n      this.mediaSource_.swfObj.vjs_abort();\n\n      // report any outstanding updates have ended\n      if (this.updating) {\n        this.updating = false;\n        this.trigger({ type: 'updateend' });\n      }\n    }\n\n    /**\n     * Flash cannot remove ranges already buffered in the NetStream\n     * but seeking clears the buffer entirely. For most purposes,\n     * having this operation act as a no-op is acceptable.\n     *\n     * @link https://developer.mozilla.org/en-US/docs/Web/API/SourceBuffer/remove\n     * @param {Double} start start of the section to remove\n     * @param {Double} end end of the section to remove\n     */\n  }, {\n    key: 'remove',\n    value: function remove(start, end) {\n      (0, _removeCuesFromTrack2['default'])(start, end, this.metadataTrack_);\n      (0, _removeCuesFromTrack2['default'])(start, end, this.inbandTextTrack_);\n      this.trigger({ type: 'update' });\n      this.trigger({ type: 'updateend' });\n    }\n\n    /**\n     * Receive a buffer from the flv.\n     *\n     * @param {Object} segment\n     * @private\n     */\n  }, {\n    key: 'receiveBuffer_',\n    value: function receiveBuffer_(segment) {\n      var _this3 = this;\n\n      // create an in-band caption track if one is present in the segment\n      (0, _createTextTracksIfNecessary2['default'])(this, this.mediaSource_, segment);\n      (0, _addTextTrackData.addTextTrackData)(this, segment.captions, segment.metadata);\n\n      // Do this asynchronously since convertTagsToData_ can be time consuming\n      scheduleTick(function () {\n        var flvBytes = _this3.convertTagsToData_(segment);\n\n        if (_this3.buffer_.length === 0) {\n          scheduleTick(_this3.processBuffer_.bind(_this3));\n        }\n\n        if (flvBytes) {\n          _this3.buffer_.push(flvBytes);\n          _this3.bufferSize_ += flvBytes.byteLength;\n        }\n      });\n    }\n\n    /**\n     * Append a portion of the current buffer to the SWF.\n     *\n     * @private\n     */\n  }, {\n    key: 'processBuffer_',\n    value: function processBuffer_() {\n      var chunkSize = _flashConstants2['default'].BYTES_PER_CHUNK;\n\n      if (!this.buffer_.length) {\n        if (this.updating !== false) {\n          this.updating = false;\n          this.trigger({ type: 'updateend' });\n        }\n        // do nothing if the buffer is empty\n        return;\n      }\n\n      // concatenate appends up to the max append size\n      var chunk = this.buffer_[0].subarray(0, chunkSize);\n\n      // requeue any bytes that won't make it this round\n      if (chunk.byteLength < chunkSize || this.buffer_[0].byteLength === chunkSize) {\n        this.buffer_.shift();\n      } else {\n        this.buffer_[0] = this.buffer_[0].subarray(chunkSize);\n      }\n\n      this.bufferSize_ -= chunk.byteLength;\n\n      // base64 encode the bytes\n      var binary = '';\n      var length = chunk.byteLength;\n\n      for (var i = 0; i < length; i++) {\n        binary += String.fromCharCode(chunk[i]);\n      }\n      var b64str = _globalWindow2['default'].btoa(binary);\n\n      // bypass normal ExternalInterface calls and pass xml directly\n      // IE can be slow by default\n      this.mediaSource_.swfObj.CallFunction('<invoke name=\"vjs_appendBuffer\"' + 'returntype=\"javascript\"><arguments><string>' + b64str + '</string></arguments></invoke>');\n\n      // schedule another append if necessary\n      if (this.bufferSize_ !== 0) {\n        scheduleTick(this.processBuffer_.bind(this));\n      } else {\n        this.updating = false;\n        this.trigger({ type: 'updateend' });\n      }\n    }\n\n    /**\n     * Turns an array of flv tags into a Uint8Array representing the\n     * flv data. Also removes any tags that are before the current\n     * time so that playback begins at or slightly after the right\n     * place on a seek\n     *\n     * @private\n     * @param {Object} segmentData object of segment data\n     */\n  }, {\n    key: 'convertTagsToData_',\n    value: function convertTagsToData_(segmentData) {\n      var segmentByteLength = 0;\n      var tech = this.mediaSource_.tech_;\n      var targetPts = 0;\n      var i = undefined;\n      var j = undefined;\n      var segment = undefined;\n      var filteredTags = [];\n      var tags = this.getOrderedTags_(segmentData);\n\n      // Establish the media timeline to PTS translation if we don't\n      // have one already\n      if (isNaN(this.basePtsOffset_) && tags.length) {\n        this.basePtsOffset_ = tags[0].pts;\n      }\n\n      // Trim to currentTime if it's ahead of buffered or buffered doesn't exist\n      if (tech.seeking()) {\n        targetPts = Math.max(targetPts, tech.currentTime() - this.timestampOffset);\n      }\n\n      // PTS values are represented in milliseconds\n      targetPts *= 1e3;\n      targetPts += this.basePtsOffset_;\n\n      // skip tags with a presentation time less than the seek target\n      for (i = 0; i < tags.length; i++) {\n        if (tags[i].pts >= targetPts) {\n          filteredTags.push(tags[i]);\n        }\n      }\n\n      if (filteredTags.length === 0) {\n        return;\n      }\n\n      // concatenate the bytes into a single segment\n      for (i = 0; i < filteredTags.length; i++) {\n        segmentByteLength += filteredTags[i].bytes.byteLength;\n      }\n      segment = new Uint8Array(segmentByteLength);\n      for (i = 0, j = 0; i < filteredTags.length; i++) {\n        segment.set(filteredTags[i].bytes, j);\n        j += filteredTags[i].bytes.byteLength;\n      }\n\n      return segment;\n    }\n\n    /**\n     * Assemble the FLV tags in decoder order.\n     *\n     * @private\n     * @param {Object} segmentData object of segment data\n     */\n  }, {\n    key: 'getOrderedTags_',\n    value: function getOrderedTags_(segmentData) {\n      var videoTags = segmentData.tags.videoTags;\n      var audioTags = segmentData.tags.audioTags;\n      var tag = undefined;\n      var tags = [];\n\n      while (videoTags.length || audioTags.length) {\n        if (!videoTags.length) {\n          // only audio tags remain\n          tag = audioTags.shift();\n        } else if (!audioTags.length) {\n          // only video tags remain\n          tag = videoTags.shift();\n        } else if (audioTags[0].dts < videoTags[0].dts) {\n          // audio should be decoded next\n          tag = audioTags.shift();\n        } else {\n          // video should be decoded next\n          tag = videoTags.shift();\n        }\n\n        tags.push(tag.finalize());\n      }\n\n      return tags;\n    }\n  }]);\n\n  return FlashSourceBuffer;\n})(_videoJs2['default'].EventTarget);\n\nexports['default'] = FlashSourceBuffer;\nmodule.exports = exports['default'];\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n},{\"./add-text-track-data\":91,\"./create-text-tracks-if-necessary\":94,\"./flash-constants\":95,\"./remove-cues-from-track\":99,\"global/window\":27,\"mux.js/lib/flv\":75}],98:[function(require,module,exports){\n(function (global){\n/**\n * @file html-media-source.js\n */\n'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\n\nvar _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();\n\nvar _get = function get(_x, _x2, _x3) { var _again = true; _function: while (_again) { var object = _x, property = _x2, receiver = _x3; _again = false; if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { _x = parent; _x2 = property; _x3 = receiver; _again = true; desc = parent = undefined; continue _function; } } else if ('value' in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } } };\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== 'function' && superClass !== null) { throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar _globalWindow = require('global/window');\n\nvar _globalWindow2 = _interopRequireDefault(_globalWindow);\n\nvar _globalDocument = require('global/document');\n\nvar _globalDocument2 = _interopRequireDefault(_globalDocument);\n\nvar _videoJs = (typeof window !== \"undefined\" ? window['videojs'] : typeof global !== \"undefined\" ? global['videojs'] : null);\n\nvar _videoJs2 = _interopRequireDefault(_videoJs);\n\nvar _virtualSourceBuffer = require('./virtual-source-buffer');\n\nvar _virtualSourceBuffer2 = _interopRequireDefault(_virtualSourceBuffer);\n\nvar _addTextTrackData = require('./add-text-track-data');\n\nvar _codecUtils = require('./codec-utils');\n\nvar _cleanupTextTracks = require('./cleanup-text-tracks');\n\n/**\n * Replace the old apple-style `avc1.<dd>.<dd>` codec string with the standard\n * `avc1.<hhhhhh>`\n *\n * @param {Array} codecs an array of codec strings to fix\n * @return {Array} the translated codec array\n * @private\n */\nvar translateLegacyCodecs = function translateLegacyCodecs(codecs) {\n  return codecs.map(function (codec) {\n    return codec.replace(/avc1\\.(\\d+)\\.(\\d+)/i, function (orig, profile, avcLevel) {\n      var profileHex = ('00' + Number(profile).toString(16)).slice(-2);\n      var avcLevelHex = ('00' + Number(avcLevel).toString(16)).slice(-2);\n\n      return 'avc1.' + profileHex + '00' + avcLevelHex;\n    });\n  });\n};\n\n/**\n * Our MediaSource implementation in HTML, mimics native\n * MediaSource where/if possible.\n *\n * @link https://developer.mozilla.org/en-US/docs/Web/API/MediaSource\n * @class HtmlMediaSource\n * @extends videojs.EventTarget\n */\n\nvar HtmlMediaSource = (function (_videojs$EventTarget) {\n  _inherits(HtmlMediaSource, _videojs$EventTarget);\n\n  function HtmlMediaSource() {\n    var _this = this;\n\n    _classCallCheck(this, HtmlMediaSource);\n\n    _get(Object.getPrototypeOf(HtmlMediaSource.prototype), 'constructor', this).call(this);\n    var property = undefined;\n\n    this.nativeMediaSource_ = new _globalWindow2['default'].MediaSource();\n    // delegate to the native MediaSource's methods by default\n    for (property in this.nativeMediaSource_) {\n      if (!(property in HtmlMediaSource.prototype) && typeof this.nativeMediaSource_[property] === 'function') {\n        this[property] = this.nativeMediaSource_[property].bind(this.nativeMediaSource_);\n      }\n    }\n\n    // emulate `duration` and `seekable` until seeking can be\n    // handled uniformly for live streams\n    // see https://github.com/w3c/media-source/issues/5\n    this.duration_ = NaN;\n    Object.defineProperty(this, 'duration', {\n      get: function get() {\n        if (this.duration_ === Infinity) {\n          return this.duration_;\n        }\n        return this.nativeMediaSource_.duration;\n      },\n      set: function set(duration) {\n        this.duration_ = duration;\n        if (duration !== Infinity) {\n          this.nativeMediaSource_.duration = duration;\n          return;\n        }\n      }\n    });\n    Object.defineProperty(this, 'seekable', {\n      get: function get() {\n        if (this.duration_ === Infinity) {\n          return _videoJs2['default'].createTimeRanges([[0, this.nativeMediaSource_.duration]]);\n        }\n        return this.nativeMediaSource_.seekable;\n      }\n    });\n\n    Object.defineProperty(this, 'readyState', {\n      get: function get() {\n        return this.nativeMediaSource_.readyState;\n      }\n    });\n\n    Object.defineProperty(this, 'activeSourceBuffers', {\n      get: function get() {\n        return this.activeSourceBuffers_;\n      }\n    });\n\n    // the list of virtual and native SourceBuffers created by this\n    // MediaSource\n    this.sourceBuffers = [];\n\n    this.activeSourceBuffers_ = [];\n\n    /**\n     * update the list of active source buffers based upon various\n     * imformation from HLS and video.js\n     *\n     * @private\n     */\n    this.updateActiveSourceBuffers_ = function () {\n      // Retain the reference but empty the array\n      _this.activeSourceBuffers_.length = 0;\n\n      // By default, the audio in the combined virtual source buffer is enabled\n      // and the audio-only source buffer (if it exists) is disabled.\n      var combined = false;\n      var audioOnly = true;\n\n      // TODO: maybe we can store the sourcebuffers on the track objects?\n      // safari may do something like this\n      for (var i = 0; i < _this.player_.audioTracks().length; i++) {\n        var track = _this.player_.audioTracks()[i];\n\n        if (track.enabled && track.kind !== 'main') {\n          // The enabled track is an alternate audio track so disable the audio in\n          // the combined source buffer and enable the audio-only source buffer.\n          combined = true;\n          audioOnly = false;\n          break;\n        }\n      }\n\n      // Since we currently support a max of two source buffers, add all of the source\n      // buffers (in order).\n      _this.sourceBuffers.forEach(function (sourceBuffer) {\n        /* eslinst-disable */\n        // TODO once codecs are required, we can switch to using the codecs to determine\n        //      what stream is the video stream, rather than relying on videoTracks\n        /* eslinst-enable */\n\n        sourceBuffer.appendAudioInitSegment_ = true;\n\n        if (sourceBuffer.videoCodec_ && sourceBuffer.audioCodec_) {\n          // combined\n          sourceBuffer.audioDisabled_ = combined;\n        } else if (sourceBuffer.videoCodec_ && !sourceBuffer.audioCodec_) {\n          // If the \"combined\" source buffer is video only, then we do not want\n          // disable the audio-only source buffer (this is mostly for demuxed\n          // audio and video hls)\n          sourceBuffer.audioDisabled_ = true;\n          audioOnly = false;\n        } else if (!sourceBuffer.videoCodec_ && sourceBuffer.audioCodec_) {\n          // audio only\n          sourceBuffer.audioDisabled_ = audioOnly;\n          if (audioOnly) {\n            return;\n          }\n        }\n\n        _this.activeSourceBuffers_.push(sourceBuffer);\n      });\n    };\n\n    this.onPlayerMediachange_ = function () {\n      _this.sourceBuffers.forEach(function (sourceBuffer) {\n        sourceBuffer.appendAudioInitSegment_ = true;\n      });\n    };\n\n    // Re-emit MediaSource events on the polyfill\n    ['sourceopen', 'sourceclose', 'sourceended'].forEach(function (eventName) {\n      this.nativeMediaSource_.addEventListener(eventName, this.trigger.bind(this));\n    }, this);\n\n    // capture the associated player when the MediaSource is\n    // successfully attached\n    this.on('sourceopen', function (event) {\n      // Get the player this MediaSource is attached to\n      var video = _globalDocument2['default'].querySelector('[src=\"' + _this.url_ + '\"]');\n\n      if (!video) {\n        return;\n      }\n\n      _this.player_ = (0, _videoJs2['default'])(video.parentNode);\n\n      if (_this.player_.audioTracks && _this.player_.audioTracks()) {\n        _this.player_.audioTracks().on('change', _this.updateActiveSourceBuffers_);\n        _this.player_.audioTracks().on('addtrack', _this.updateActiveSourceBuffers_);\n        _this.player_.audioTracks().on('removetrack', _this.updateActiveSourceBuffers_);\n      }\n\n      _this.player_.on('mediachange', _this.onPlayerMediachange_);\n    });\n\n    this.on('sourceended', function (event) {\n      var duration = (0, _addTextTrackData.durationOfVideo)(_this.duration);\n\n      for (var i = 0; i < _this.sourceBuffers.length; i++) {\n        var sourcebuffer = _this.sourceBuffers[i];\n        var cues = sourcebuffer.metadataTrack_ && sourcebuffer.metadataTrack_.cues;\n\n        if (cues && cues.length) {\n          cues[cues.length - 1].endTime = duration;\n        }\n      }\n    });\n\n    // explicitly terminate any WebWorkers that were created\n    // by SourceHandlers\n    this.on('sourceclose', function (event) {\n      this.sourceBuffers.forEach(function (sourceBuffer) {\n        if (sourceBuffer.transmuxer_) {\n          sourceBuffer.transmuxer_.terminate();\n        }\n      });\n\n      this.sourceBuffers.length = 0;\n      if (!this.player_) {\n        return;\n      }\n\n      (0, _cleanupTextTracks.cleanupTextTracks)(this.player_);\n\n      if (this.player_.audioTracks && this.player_.audioTracks()) {\n        this.player_.audioTracks().off('change', this.updateActiveSourceBuffers_);\n        this.player_.audioTracks().off('addtrack', this.updateActiveSourceBuffers_);\n        this.player_.audioTracks().off('removetrack', this.updateActiveSourceBuffers_);\n      }\n\n      // We can only change this if the player hasn't been disposed of yet\n      // because `off` eventually tries to use the el_ property. If it has\n      // been disposed of, then don't worry about it because there are no\n      // event handlers left to unbind anyway\n      if (this.player_.el_) {\n        this.player_.off('mediachange', this.onPlayerMediachange_);\n      }\n    });\n  }\n\n  /**\n   * Add a range that that can now be seeked to.\n   *\n   * @param {Double} start where to start the addition\n   * @param {Double} end where to end the addition\n   * @private\n   */\n\n  _createClass(HtmlMediaSource, [{\n    key: 'addSeekableRange_',\n    value: function addSeekableRange_(start, end) {\n      var error = undefined;\n\n      if (this.duration !== Infinity) {\n        error = new Error('MediaSource.addSeekableRange() can only be invoked ' + 'when the duration is Infinity');\n        error.name = 'InvalidStateError';\n        error.code = 11;\n        throw error;\n      }\n\n      if (end > this.nativeMediaSource_.duration || isNaN(this.nativeMediaSource_.duration)) {\n        this.nativeMediaSource_.duration = end;\n      }\n    }\n\n    /**\n     * Add a source buffer to the media source.\n     *\n     * @link https://developer.mozilla.org/en-US/docs/Web/API/MediaSource/addSourceBuffer\n     * @param {String} type the content-type of the content\n     * @return {Object} the created source buffer\n     */\n  }, {\n    key: 'addSourceBuffer',\n    value: function addSourceBuffer(type) {\n      var buffer = undefined;\n      var parsedType = (0, _codecUtils.parseContentType)(type);\n\n      // Create a VirtualSourceBuffer to transmux MPEG-2 transport\n      // stream segments into fragmented MP4s\n      if (/^(video|audio)\\/mp2t$/i.test(parsedType.type)) {\n        var codecs = [];\n\n        if (parsedType.parameters && parsedType.parameters.codecs) {\n          codecs = parsedType.parameters.codecs.split(',');\n          codecs = translateLegacyCodecs(codecs);\n          codecs = codecs.filter(function (codec) {\n            return (0, _codecUtils.isAudioCodec)(codec) || (0, _codecUtils.isVideoCodec)(codec);\n          });\n        }\n\n        if (codecs.length === 0) {\n          codecs = ['avc1.4d400d', 'mp4a.40.2'];\n        }\n\n        buffer = new _virtualSourceBuffer2['default'](this, codecs);\n\n        if (this.sourceBuffers.length !== 0) {\n          // If another VirtualSourceBuffer already exists, then we are creating a\n          // SourceBuffer for an alternate audio track and therefore we know that\n          // the source has both an audio and video track.\n          // That means we should trigger the manual creation of the real\n          // SourceBuffers instead of waiting for the transmuxer to return data\n          this.sourceBuffers[0].createRealSourceBuffers_();\n          buffer.createRealSourceBuffers_();\n\n          // Automatically disable the audio on the first source buffer if\n          // a second source buffer is ever created\n          this.sourceBuffers[0].audioDisabled_ = true;\n        }\n      } else {\n        // delegate to the native implementation\n        buffer = this.nativeMediaSource_.addSourceBuffer(type);\n      }\n\n      this.sourceBuffers.push(buffer);\n      return buffer;\n    }\n  }]);\n\n  return HtmlMediaSource;\n})(_videoJs2['default'].EventTarget);\n\nexports['default'] = HtmlMediaSource;\nmodule.exports = exports['default'];\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n},{\"./add-text-track-data\":91,\"./cleanup-text-tracks\":92,\"./codec-utils\":93,\"./virtual-source-buffer\":102,\"global/document\":26,\"global/window\":27}],99:[function(require,module,exports){\n/**\n * @file remove-cues-from-track.js\n */\n\n/**\n * Remove cues from a track on video.js.\n *\n * @param {Double} start start of where we should remove the cue\n * @param {Double} end end of where the we should remove the cue\n * @param {Object} track the text track to remove the cues from\n * @private\n */\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nvar removeCuesFromTrack = function removeCuesFromTrack(start, end, track) {\n  var i = undefined;\n  var cue = undefined;\n\n  if (!track) {\n    return;\n  }\n\n  if (!track.cues) {\n    return;\n  }\n\n  i = track.cues.length;\n\n  while (i--) {\n    cue = track.cues[i];\n\n    // Remove any overlapping cue\n    if (cue.startTime <= end && cue.endTime >= start) {\n      track.removeCue(cue);\n    }\n  }\n};\n\nexports[\"default\"] = removeCuesFromTrack;\nmodule.exports = exports[\"default\"];\n},{}],100:[function(require,module,exports){\n/**\n * @file transmuxer-worker.js\n */\n\n/**\n * videojs-contrib-media-sources\n *\n * Copyright (c) 2015 Brightcove\n * All rights reserved.\n *\n * Handles communication between the browser-world and the mux.js\n * transmuxer running inside of a WebWorker by exposing a simple\n * message-based interface to a Transmuxer object.\n */\n'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\n\nvar _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }\n\nvar _globalWindow = require('global/window');\n\nvar _globalWindow2 = _interopRequireDefault(_globalWindow);\n\nvar _muxJsLibMp4 = require('mux.js/lib/mp4');\n\nvar _muxJsLibMp42 = _interopRequireDefault(_muxJsLibMp4);\n\n/**\n * Re-emits tranmsuxer events by converting them into messages to the\n * world outside the worker.\n *\n * @param {Object} transmuxer the transmuxer to wire events on\n * @private\n */\nvar wireTransmuxerEvents = function wireTransmuxerEvents(transmuxer) {\n  transmuxer.on('data', function (segment) {\n    // transfer ownership of the underlying ArrayBuffer\n    // instead of doing a copy to save memory\n    // ArrayBuffers are transferable but generic TypedArrays are not\n    // @link https://developer.mozilla.org/en-US/docs/Web/API/Web_Workers_API/Using_web_workers#Passing_data_by_transferring_ownership_(transferable_objects)\n    var initArray = segment.initSegment;\n\n    segment.initSegment = {\n      data: initArray.buffer,\n      byteOffset: initArray.byteOffset,\n      byteLength: initArray.byteLength\n    };\n\n    var typedArray = segment.data;\n\n    segment.data = typedArray.buffer;\n    _globalWindow2['default'].postMessage({\n      action: 'data',\n      segment: segment,\n      byteOffset: typedArray.byteOffset,\n      byteLength: typedArray.byteLength\n    }, [segment.data]);\n  });\n\n  if (transmuxer.captionStream) {\n    transmuxer.captionStream.on('data', function (caption) {\n      _globalWindow2['default'].postMessage({\n        action: 'caption',\n        data: caption\n      });\n    });\n  }\n\n  transmuxer.on('done', function (data) {\n    _globalWindow2['default'].postMessage({ action: 'done' });\n  });\n};\n\n/**\n * All incoming messages route through this hash. If no function exists\n * to handle an incoming message, then we ignore the message.\n *\n * @class MessageHandlers\n * @param {Object} options the options to initialize with\n */\n\nvar MessageHandlers = (function () {\n  function MessageHandlers(options) {\n    _classCallCheck(this, MessageHandlers);\n\n    this.options = options || {};\n    this.init();\n  }\n\n  /**\n   * Our web wroker interface so that things can talk to mux.js\n   * that will be running in a web worker. the scope is passed to this by\n   * webworkify.\n   *\n   * @param {Object} self the scope for the web worker\n   */\n\n  /**\n   * initialize our web worker and wire all the events.\n   */\n\n  _createClass(MessageHandlers, [{\n    key: 'init',\n    value: function init() {\n      if (this.transmuxer) {\n        this.transmuxer.dispose();\n      }\n      this.transmuxer = new _muxJsLibMp42['default'].Transmuxer(this.options);\n      wireTransmuxerEvents(this.transmuxer);\n    }\n\n    /**\n     * Adds data (a ts segment) to the start of the transmuxer pipeline for\n     * processing.\n     *\n     * @param {ArrayBuffer} data data to push into the muxer\n     */\n  }, {\n    key: 'push',\n    value: function push(data) {\n      // Cast array buffer to correct type for transmuxer\n      var segment = new Uint8Array(data.data, data.byteOffset, data.byteLength);\n\n      this.transmuxer.push(segment);\n    }\n\n    /**\n     * Recreate the transmuxer so that the next segment added via `push`\n     * start with a fresh transmuxer.\n     */\n  }, {\n    key: 'reset',\n    value: function reset() {\n      this.init();\n    }\n\n    /**\n     * Set the value that will be used as the `baseMediaDecodeTime` time for the\n     * next segment pushed in. Subsequent segments will have their `baseMediaDecodeTime`\n     * set relative to the first based on the PTS values.\n     *\n     * @param {Object} data used to set the timestamp offset in the muxer\n     */\n  }, {\n    key: 'setTimestampOffset',\n    value: function setTimestampOffset(data) {\n      var timestampOffset = data.timestampOffset || 0;\n\n      this.transmuxer.setBaseMediaDecodeTime(Math.round(timestampOffset * 90000));\n    }\n\n    /**\n     * Forces the pipeline to finish processing the last segment and emit it's\n     * results.\n     *\n     * @param {Object} data event data, not really used\n     */\n  }, {\n    key: 'flush',\n    value: function flush(data) {\n      this.transmuxer.flush();\n    }\n  }]);\n\n  return MessageHandlers;\n})();\n\nvar Worker = function Worker(self) {\n  self.onmessage = function (event) {\n    if (event.data.action === 'init' && event.data.options) {\n      this.messageHandlers = new MessageHandlers(event.data.options);\n      return;\n    }\n\n    if (!this.messageHandlers) {\n      this.messageHandlers = new MessageHandlers();\n    }\n\n    if (event.data && event.data.action && event.data.action !== 'init') {\n      if (this.messageHandlers[event.data.action]) {\n        this.messageHandlers[event.data.action](event.data);\n      }\n    }\n  };\n};\n\nexports['default'] = function (self) {\n  return new Worker(self);\n};\n\nmodule.exports = exports['default'];\n},{\"global/window\":27,\"mux.js/lib/mp4\":83}],101:[function(require,module,exports){\n(function (global){\n/**\n * @file videojs-contrib-media-sources.js\n */\n'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nvar _globalWindow = require('global/window');\n\nvar _globalWindow2 = _interopRequireDefault(_globalWindow);\n\nvar _flashMediaSource = require('./flash-media-source');\n\nvar _flashMediaSource2 = _interopRequireDefault(_flashMediaSource);\n\nvar _htmlMediaSource = require('./html-media-source');\n\nvar _htmlMediaSource2 = _interopRequireDefault(_htmlMediaSource);\n\nvar _videoJs = (typeof window !== \"undefined\" ? window['videojs'] : typeof global !== \"undefined\" ? global['videojs'] : null);\n\nvar _videoJs2 = _interopRequireDefault(_videoJs);\n\nvar urlCount = 0;\n\n// ------------\n// Media Source\n// ------------\n\nvar defaults = {\n  // how to determine the MediaSource implementation to use. There\n  // are three available modes:\n  // - auto: use native MediaSources where available and Flash\n  //   everywhere else\n  // - html5: always use native MediaSources\n  // - flash: always use the Flash MediaSource polyfill\n  mode: 'auto'\n};\n\n// store references to the media sources so they can be connected\n// to a video element (a swf object)\n// TODO: can we store this somewhere local to this module?\n_videoJs2['default'].mediaSources = {};\n\n/**\n * Provide a method for a swf object to notify JS that a\n * media source is now open.\n *\n * @param {String} msObjectURL string referencing the MSE Object URL\n * @param {String} swfId the swf id\n */\nvar open = function open(msObjectURL, swfId) {\n  var mediaSource = _videoJs2['default'].mediaSources[msObjectURL];\n\n  if (mediaSource) {\n    mediaSource.trigger({ type: 'sourceopen', swfId: swfId });\n  } else {\n    throw new Error('Media Source not found (Video.js)');\n  }\n};\n\n/**\n * Check to see if the native MediaSource object exists and supports\n * an MP4 container with both H.264 video and AAC-LC audio.\n *\n * @return {Boolean} if  native media sources are supported\n */\nvar supportsNativeMediaSources = function supportsNativeMediaSources() {\n  return !!_globalWindow2['default'].MediaSource && !!_globalWindow2['default'].MediaSource.isTypeSupported && _globalWindow2['default'].MediaSource.isTypeSupported('video/mp4;codecs=\"avc1.4d400d,mp4a.40.2\"');\n};\n\n/**\n * An emulation of the MediaSource API so that we can support\n * native and non-native functionality such as flash and\n * video/mp2t videos. returns an instance of HtmlMediaSource or\n * FlashMediaSource depending on what is supported and what options\n * are passed in.\n *\n * @link https://developer.mozilla.org/en-US/docs/Web/API/MediaSource/MediaSource\n * @param {Object} options options to use during setup.\n */\nvar MediaSource = function MediaSource(options) {\n  var settings = _videoJs2['default'].mergeOptions(defaults, options);\n\n  this.MediaSource = {\n    open: open,\n    supportsNativeMediaSources: supportsNativeMediaSources\n  };\n\n  // determine whether HTML MediaSources should be used\n  if (settings.mode === 'html5' || settings.mode === 'auto' && supportsNativeMediaSources()) {\n    return new _htmlMediaSource2['default']();\n  }\n\n  // otherwise, emulate them through the SWF\n  return new _flashMediaSource2['default']();\n};\n\nexports.MediaSource = MediaSource;\nMediaSource.open = open;\nMediaSource.supportsNativeMediaSources = supportsNativeMediaSources;\n\n/**\n * A wrapper around the native URL for our MSE object\n * implementation, this object is exposed under videojs.URL\n *\n * @link https://developer.mozilla.org/en-US/docs/Web/API/URL/URL\n */\nvar URL = {\n  /**\n   * A wrapper around the native createObjectURL for our objects.\n   * This function maps a native or emulated mediaSource to a blob\n   * url so that it can be loaded into video.js\n   *\n   * @link https://developer.mozilla.org/en-US/docs/Web/API/URL/createObjectURL\n   * @param {MediaSource} object the object to create a blob url to\n   */\n  createObjectURL: function createObjectURL(object) {\n    var objectUrlPrefix = 'blob:vjs-media-source/';\n    var url = undefined;\n\n    // use the native MediaSource to generate an object URL\n    if (object instanceof _htmlMediaSource2['default']) {\n      url = _globalWindow2['default'].URL.createObjectURL(object.nativeMediaSource_);\n      object.url_ = url;\n      return url;\n    }\n    // if the object isn't an emulated MediaSource, delegate to the\n    // native implementation\n    if (!(object instanceof _flashMediaSource2['default'])) {\n      url = _globalWindow2['default'].URL.createObjectURL(object);\n      object.url_ = url;\n      return url;\n    }\n\n    // build a URL that can be used to map back to the emulated\n    // MediaSource\n    url = objectUrlPrefix + urlCount;\n\n    urlCount++;\n\n    // setup the mapping back to object\n    _videoJs2['default'].mediaSources[url] = object;\n\n    return url;\n  }\n};\n\nexports.URL = URL;\n_videoJs2['default'].MediaSource = MediaSource;\n_videoJs2['default'].URL = URL;\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n},{\"./flash-media-source\":96,\"./html-media-source\":98,\"global/window\":27}],102:[function(require,module,exports){\n(function (global){\n/**\n * @file virtual-source-buffer.js\n */\n'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\n\nvar _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();\n\nvar _get = function get(_x, _x2, _x3) { var _again = true; _function: while (_again) { var object = _x, property = _x2, receiver = _x3; _again = false; if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { _x = parent; _x2 = property; _x3 = receiver; _again = true; desc = parent = undefined; continue _function; } } else if ('value' in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } } };\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== 'function' && superClass !== null) { throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar _videoJs = (typeof window !== \"undefined\" ? window['videojs'] : typeof global !== \"undefined\" ? global['videojs'] : null);\n\nvar _videoJs2 = _interopRequireDefault(_videoJs);\n\nvar _createTextTracksIfNecessary = require('./create-text-tracks-if-necessary');\n\nvar _createTextTracksIfNecessary2 = _interopRequireDefault(_createTextTracksIfNecessary);\n\nvar _removeCuesFromTrack = require('./remove-cues-from-track');\n\nvar _removeCuesFromTrack2 = _interopRequireDefault(_removeCuesFromTrack);\n\nvar _addTextTrackData = require('./add-text-track-data');\n\nvar _webworkify = require('webworkify');\n\nvar _webworkify2 = _interopRequireDefault(_webworkify);\n\nvar _transmuxerWorker = require('./transmuxer-worker');\n\nvar _transmuxerWorker2 = _interopRequireDefault(_transmuxerWorker);\n\nvar _codecUtils = require('./codec-utils');\n\n/**\n * VirtualSourceBuffers exist so that we can transmux non native formats\n * into a native format, but keep the same api as a native source buffer.\n * It creates a transmuxer, that works in its own thread (a web worker) and\n * that transmuxer muxes the data into a native format. VirtualSourceBuffer will\n * then send all of that data to the naive sourcebuffer so that it is\n * indestinguishable from a natively supported format.\n *\n * @param {HtmlMediaSource} mediaSource the parent mediaSource\n * @param {Array} codecs array of codecs that we will be dealing with\n * @class VirtualSourceBuffer\n * @extends video.js.EventTarget\n */\n\nvar VirtualSourceBuffer = (function (_videojs$EventTarget) {\n  _inherits(VirtualSourceBuffer, _videojs$EventTarget);\n\n  function VirtualSourceBuffer(mediaSource, codecs) {\n    var _this = this;\n\n    _classCallCheck(this, VirtualSourceBuffer);\n\n    _get(Object.getPrototypeOf(VirtualSourceBuffer.prototype), 'constructor', this).call(this, _videoJs2['default'].EventTarget);\n    this.timestampOffset_ = 0;\n    this.pendingBuffers_ = [];\n    this.bufferUpdating_ = false;\n    this.mediaSource_ = mediaSource;\n    this.codecs_ = codecs;\n    this.audioCodec_ = null;\n    this.videoCodec_ = null;\n    this.audioDisabled_ = false;\n    this.appendAudioInitSegment_ = true;\n\n    var options = {\n      remux: false\n    };\n\n    this.codecs_.forEach(function (codec) {\n      if ((0, _codecUtils.isAudioCodec)(codec)) {\n        _this.audioCodec_ = codec;\n      } else if ((0, _codecUtils.isVideoCodec)(codec)) {\n        _this.videoCodec_ = codec;\n      }\n    });\n\n    // append muxed segments to their respective native buffers as\n    // soon as they are available\n    this.transmuxer_ = (0, _webworkify2['default'])(_transmuxerWorker2['default']);\n    this.transmuxer_.postMessage({ action: 'init', options: options });\n\n    this.transmuxer_.onmessage = function (event) {\n      if (event.data.action === 'data') {\n        return _this.data_(event);\n      }\n\n      if (event.data.action === 'done') {\n        return _this.done_(event);\n      }\n    };\n\n    // this timestampOffset is a property with the side-effect of resetting\n    // baseMediaDecodeTime in the transmuxer on the setter\n    Object.defineProperty(this, 'timestampOffset', {\n      get: function get() {\n        return this.timestampOffset_;\n      },\n      set: function set(val) {\n        if (typeof val === 'number' && val >= 0) {\n          this.timestampOffset_ = val;\n          this.appendAudioInitSegment_ = true;\n\n          // We have to tell the transmuxer to set the baseMediaDecodeTime to\n          // the desired timestampOffset for the next segment\n          this.transmuxer_.postMessage({\n            action: 'setTimestampOffset',\n            timestampOffset: val\n          });\n        }\n      }\n    });\n\n    // setting the append window affects both source buffers\n    Object.defineProperty(this, 'appendWindowStart', {\n      get: function get() {\n        return (this.videoBuffer_ || this.audioBuffer_).appendWindowStart;\n      },\n      set: function set(start) {\n        if (this.videoBuffer_) {\n          this.videoBuffer_.appendWindowStart = start;\n        }\n        if (this.audioBuffer_) {\n          this.audioBuffer_.appendWindowStart = start;\n        }\n      }\n    });\n\n    // this buffer is \"updating\" if either of its native buffers are\n    Object.defineProperty(this, 'updating', {\n      get: function get() {\n        return !!(this.bufferUpdating_ || !this.audioDisabled_ && this.audioBuffer_ && this.audioBuffer_.updating || this.videoBuffer_ && this.videoBuffer_.updating);\n      }\n    });\n\n    // the buffered property is the intersection of the buffered\n    // ranges of the native source buffers\n    Object.defineProperty(this, 'buffered', {\n      get: function get() {\n        var start = null;\n        var end = null;\n        var arity = 0;\n        var extents = [];\n        var ranges = [];\n\n        // neither buffer has been created yet\n        if (!this.videoBuffer_ && !this.audioBuffer_) {\n          return _videoJs2['default'].createTimeRange();\n        }\n\n        // only one buffer is configured\n        if (!this.videoBuffer_) {\n          return this.audioBuffer_.buffered;\n        }\n        if (!this.audioBuffer_) {\n          return this.videoBuffer_.buffered;\n        }\n\n        // both buffers are configured\n        if (this.audioDisabled_) {\n          return this.videoBuffer_.buffered;\n        }\n\n        // both buffers are empty\n        if (this.videoBuffer_.buffered.length === 0 && this.audioBuffer_.buffered.length === 0) {\n          return _videoJs2['default'].createTimeRange();\n        }\n\n        // Handle the case where we have both buffers and create an\n        // intersection of the two\n        var videoBuffered = this.videoBuffer_.buffered;\n        var audioBuffered = this.audioBuffer_.buffered;\n        var count = videoBuffered.length;\n\n        // A) Gather up all start and end times\n        while (count--) {\n          extents.push({ time: videoBuffered.start(count), type: 'start' });\n          extents.push({ time: videoBuffered.end(count), type: 'end' });\n        }\n        count = audioBuffered.length;\n        while (count--) {\n          extents.push({ time: audioBuffered.start(count), type: 'start' });\n          extents.push({ time: audioBuffered.end(count), type: 'end' });\n        }\n        // B) Sort them by time\n        extents.sort(function (a, b) {\n          return a.time - b.time;\n        });\n\n        // C) Go along one by one incrementing arity for start and decrementing\n        //    arity for ends\n        for (count = 0; count < extents.length; count++) {\n          if (extents[count].type === 'start') {\n            arity++;\n\n            // D) If arity is ever incremented to 2 we are entering an\n            //    overlapping range\n            if (arity === 2) {\n              start = extents[count].time;\n            }\n          } else if (extents[count].type === 'end') {\n            arity--;\n\n            // E) If arity is ever decremented to 1 we leaving an\n            //    overlapping range\n            if (arity === 1) {\n              end = extents[count].time;\n            }\n          }\n\n          // F) Record overlapping ranges\n          if (start !== null && end !== null) {\n            ranges.push([start, end]);\n            start = null;\n            end = null;\n          }\n        }\n\n        return _videoJs2['default'].createTimeRanges(ranges);\n      }\n    });\n  }\n\n  /**\n   * When we get a data event from the transmuxer\n   * we call this function and handle the data that\n   * was sent to us\n   *\n   * @private\n   * @param {Event} event the data event from the transmuxer\n   */\n\n  _createClass(VirtualSourceBuffer, [{\n    key: 'data_',\n    value: function data_(event) {\n      var segment = event.data.segment;\n\n      // Cast ArrayBuffer to TypedArray\n      segment.data = new Uint8Array(segment.data, event.data.byteOffset, event.data.byteLength);\n\n      segment.initSegment = new Uint8Array(segment.initSegment.data, segment.initSegment.byteOffset, segment.initSegment.byteLength);\n\n      (0, _createTextTracksIfNecessary2['default'])(this, this.mediaSource_, segment);\n\n      // Add the segments to the pendingBuffers array\n      this.pendingBuffers_.push(segment);\n      return;\n    }\n\n    /**\n     * When we get a done event from the transmuxer\n     * we call this function and we process all\n     * of the pending data that we have been saving in the\n     * data_ function\n     *\n     * @private\n     * @param {Event} event the done event from the transmuxer\n     */\n  }, {\n    key: 'done_',\n    value: function done_(event) {\n      // All buffers should have been flushed from the muxer\n      // start processing anything we have received\n      this.processPendingSegments_();\n      return;\n    }\n\n    /**\n     * Create our internal native audio/video source buffers and add\n     * event handlers to them with the following conditions:\n     * 1. they do not already exist on the mediaSource\n     * 2. this VSB has a codec for them\n     *\n     * @private\n     */\n  }, {\n    key: 'createRealSourceBuffers_',\n    value: function createRealSourceBuffers_() {\n      var _this2 = this;\n\n      var types = ['audio', 'video'];\n\n      types.forEach(function (type) {\n        // Don't create a SourceBuffer of this type if we don't have a\n        // codec for it\n        if (!_this2[type + 'Codec_']) {\n          return;\n        }\n\n        // Do nothing if a SourceBuffer of this type already exists\n        if (_this2[type + 'Buffer_']) {\n          return;\n        }\n\n        var buffer = null;\n\n        // If the mediasource already has a SourceBuffer for the codec\n        // use that\n        if (_this2.mediaSource_[type + 'Buffer_']) {\n          buffer = _this2.mediaSource_[type + 'Buffer_'];\n        } else {\n          buffer = _this2.mediaSource_.nativeMediaSource_.addSourceBuffer(type + '/mp4;codecs=\"' + _this2[type + 'Codec_'] + '\"');\n          _this2.mediaSource_[type + 'Buffer_'] = buffer;\n        }\n\n        _this2[type + 'Buffer_'] = buffer;\n\n        // Wire up the events to the SourceBuffer\n        ['update', 'updatestart', 'updateend'].forEach(function (event) {\n          buffer.addEventListener(event, function () {\n            // if audio is disabled\n            if (type === 'audio' && _this2.audioDisabled_) {\n              return;\n            }\n\n            var shouldTrigger = types.every(function (t) {\n              // skip checking audio's updating status if audio\n              // is not enabled\n              if (t === 'audio' && _this2.audioDisabled_) {\n                return true;\n              }\n              // if the other type if updating we don't trigger\n              if (type !== t && _this2[t + 'Buffer_'] && _this2[t + 'Buffer_'].updating) {\n                return false;\n              }\n              return true;\n            });\n\n            if (shouldTrigger) {\n              return _this2.trigger(event);\n            }\n          });\n        });\n      });\n    }\n\n    /**\n     * Emulate the native mediasource function, but our function will\n     * send all of the proposed segments to the transmuxer so that we\n     * can transmux them before we append them to our internal\n     * native source buffers in the correct format.\n     *\n     * @link https://developer.mozilla.org/en-US/docs/Web/API/SourceBuffer/appendBuffer\n     * @param {Uint8Array} segment the segment to append to the buffer\n     */\n  }, {\n    key: 'appendBuffer',\n    value: function appendBuffer(segment) {\n      // Start the internal \"updating\" state\n      this.bufferUpdating_ = true;\n\n      this.transmuxer_.postMessage({\n        action: 'push',\n        // Send the typed-array of data as an ArrayBuffer so that\n        // it can be sent as a \"Transferable\" and avoid the costly\n        // memory copy\n        data: segment.buffer,\n\n        // To recreate the original typed-array, we need information\n        // about what portion of the ArrayBuffer it was a view into\n        byteOffset: segment.byteOffset,\n        byteLength: segment.byteLength\n      }, [segment.buffer]);\n      this.transmuxer_.postMessage({ action: 'flush' });\n    }\n\n    /**\n     * Emulate the native mediasource function and remove parts\n     * of the buffer from any of our internal buffers that exist\n     *\n     * @link https://developer.mozilla.org/en-US/docs/Web/API/SourceBuffer/remove\n     * @param {Double} start position to start the remove at\n     * @param {Double} end position to end the remove at\n     */\n  }, {\n    key: 'remove',\n    value: function remove(start, end) {\n      if (this.videoBuffer_) {\n        this.videoBuffer_.remove(start, end);\n      }\n      if (this.audioBuffer_) {\n        this.audioBuffer_.remove(start, end);\n      }\n\n      // Remove Metadata Cues (id3)\n      (0, _removeCuesFromTrack2['default'])(start, end, this.metadataTrack_);\n\n      // Remove Any Captions\n      (0, _removeCuesFromTrack2['default'])(start, end, this.inbandTextTrack_);\n    }\n\n    /**\n     * Process any segments that the muxer has output\n     * Concatenate segments together based on type and append them into\n     * their respective sourceBuffers\n     *\n     * @private\n     */\n  }, {\n    key: 'processPendingSegments_',\n    value: function processPendingSegments_() {\n      var sortedSegments = {\n        video: {\n          segments: [],\n          bytes: 0\n        },\n        audio: {\n          segments: [],\n          bytes: 0\n        },\n        captions: [],\n        metadata: []\n      };\n\n      // Sort segments into separate video/audio arrays and\n      // keep track of their total byte lengths\n      sortedSegments = this.pendingBuffers_.reduce(function (segmentObj, segment) {\n        var type = segment.type;\n        var data = segment.data;\n        var initSegment = segment.initSegment;\n\n        segmentObj[type].segments.push(data);\n        segmentObj[type].bytes += data.byteLength;\n\n        segmentObj[type].initSegment = initSegment;\n\n        // Gather any captions into a single array\n        if (segment.captions) {\n          segmentObj.captions = segmentObj.captions.concat(segment.captions);\n        }\n\n        if (segment.info) {\n          segmentObj[type].info = segment.info;\n        }\n\n        // Gather any metadata into a single array\n        if (segment.metadata) {\n          segmentObj.metadata = segmentObj.metadata.concat(segment.metadata);\n        }\n\n        return segmentObj;\n      }, sortedSegments);\n\n      // Create the real source buffers if they don't exist by now since we\n      // finally are sure what tracks are contained in the source\n      if (!this.videoBuffer_ && !this.audioBuffer_) {\n        // Remove any codecs that may have been specified by default but\n        // are no longer applicable now\n        if (sortedSegments.video.bytes === 0) {\n          this.videoCodec_ = null;\n        }\n        if (sortedSegments.audio.bytes === 0) {\n          this.audioCodec_ = null;\n        }\n\n        this.createRealSourceBuffers_();\n      }\n\n      if (sortedSegments.audio.info) {\n        this.mediaSource_.trigger({ type: 'audioinfo', info: sortedSegments.audio.info });\n      }\n      if (sortedSegments.video.info) {\n        this.mediaSource_.trigger({ type: 'videoinfo', info: sortedSegments.video.info });\n      }\n\n      if (this.appendAudioInitSegment_) {\n        if (!this.audioDisabled_ && this.audioBuffer_) {\n          sortedSegments.audio.segments.unshift(sortedSegments.audio.initSegment);\n          sortedSegments.audio.bytes += sortedSegments.audio.initSegment.byteLength;\n        }\n        this.appendAudioInitSegment_ = false;\n      }\n\n      // Merge multiple video and audio segments into one and append\n      if (this.videoBuffer_) {\n        sortedSegments.video.segments.unshift(sortedSegments.video.initSegment);\n        sortedSegments.video.bytes += sortedSegments.video.initSegment.byteLength;\n        this.concatAndAppendSegments_(sortedSegments.video, this.videoBuffer_);\n        // TODO: are video tracks the only ones with text tracks?\n        (0, _addTextTrackData.addTextTrackData)(this, sortedSegments.captions, sortedSegments.metadata);\n      }\n      if (!this.audioDisabled_ && this.audioBuffer_) {\n        this.concatAndAppendSegments_(sortedSegments.audio, this.audioBuffer_);\n      }\n\n      this.pendingBuffers_.length = 0;\n\n      // We are no longer in the internal \"updating\" state\n      this.bufferUpdating_ = false;\n    }\n\n    /**\n     * Combine all segments into a single Uint8Array and then append them\n     * to the destination buffer\n     *\n     * @param {Object} segmentObj\n     * @param {SourceBuffer} destinationBuffer native source buffer to append data to\n     * @private\n     */\n  }, {\n    key: 'concatAndAppendSegments_',\n    value: function concatAndAppendSegments_(segmentObj, destinationBuffer) {\n      var offset = 0;\n      var tempBuffer = undefined;\n\n      if (segmentObj.bytes) {\n        tempBuffer = new Uint8Array(segmentObj.bytes);\n\n        // Combine the individual segments into one large typed-array\n        segmentObj.segments.forEach(function (segment) {\n          tempBuffer.set(segment, offset);\n          offset += segment.byteLength;\n        });\n\n        try {\n          destinationBuffer.appendBuffer(tempBuffer);\n        } catch (error) {\n          if (this.mediaSource_.player_) {\n            this.mediaSource_.player_.error({\n              code: -3,\n              type: 'APPEND_BUFFER_ERR'\n            });\n          }\n        }\n      }\n    }\n\n    /**\n     * Emulate the native mediasource function. abort any soureBuffer\n     * actions and throw out any un-appended data.\n     *\n     * @link https://developer.mozilla.org/en-US/docs/Web/API/SourceBuffer/abort\n     */\n  }, {\n    key: 'abort',\n    value: function abort() {\n      if (this.videoBuffer_) {\n        this.videoBuffer_.abort();\n      }\n      if (this.audioBuffer_) {\n        this.audioBuffer_.abort();\n      }\n      if (this.transmuxer_) {\n        this.transmuxer_.postMessage({ action: 'reset' });\n      }\n      this.pendingBuffers_.length = 0;\n      this.bufferUpdating_ = false;\n    }\n  }]);\n\n  return VirtualSourceBuffer;\n})(_videoJs2['default'].EventTarget);\n\nexports['default'] = VirtualSourceBuffer;\nmodule.exports = exports['default'];\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n},{\"./add-text-track-data\":91,\"./codec-utils\":93,\"./create-text-tracks-if-necessary\":94,\"./remove-cues-from-track\":99,\"./transmuxer-worker\":100,\"webworkify\":103}],103:[function(require,module,exports){\nvar bundleFn = arguments[3];\nvar sources = arguments[4];\nvar cache = arguments[5];\n\nvar stringify = JSON.stringify;\n\nmodule.exports = function (fn) {\n    var keys = [];\n    var wkey;\n    var cacheKeys = Object.keys(cache);\n    \n    for (var i = 0, l = cacheKeys.length; i < l; i++) {\n        var key = cacheKeys[i];\n        if (cache[key].exports === fn) {\n            wkey = key;\n            break;\n        }\n    }\n    \n    if (!wkey) {\n        wkey = Math.floor(Math.pow(16, 8) * Math.random()).toString(16);\n        var wcache = {};\n        for (var i = 0, l = cacheKeys.length; i < l; i++) {\n            var key = cacheKeys[i];\n            wcache[key] = key;\n        }\n        sources[wkey] = [\n            Function(['require','module','exports'], '(' + fn + ')(self)'),\n            wcache\n        ];\n    }\n    var skey = Math.floor(Math.pow(16, 8) * Math.random()).toString(16);\n    \n    var scache = {}; scache[wkey] = wkey;\n    sources[skey] = [\n        Function(['require'],'require(' + stringify(wkey) + ')(self)'),\n        scache\n    ];\n    \n    var src = '(' + bundleFn + ')({'\n        + Object.keys(sources).map(function (key) {\n            return stringify(key) + ':['\n                + sources[key][0]\n                + ',' + stringify(sources[key][1]) + ']'\n            ;\n        }).join(',')\n        + '},{},[' + stringify(skey) + '])'\n    ;\n    \n    var URL = window.URL || window.webkitURL || window.mozURL || window.msURL;\n    \n    return new Worker(URL.createObjectURL(\n        new Blob([src], { type: 'text/javascript' })\n    ));\n};\n\n},{}],104:[function(require,module,exports){\n(function (global){\n/**\n * @file videojs-contrib-hls.js\n *\n * The main file for the HLS project.\n * License: https://github.com/videojs/videojs-contrib-hls/blob/master/LICENSE\n */\n'use strict';\n\nvar _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();\n\nvar _get = function get(_x, _x2, _x3) { var _again = true; _function: while (_again) { var object = _x, property = _x2, receiver = _x3; _again = false; if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { _x = parent; _x2 = property; _x3 = receiver; _again = true; desc = parent = undefined; continue _function; } } else if ('value' in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } } };\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== 'function' && superClass !== null) { throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar _globalDocument = require('global/document');\n\nvar _globalDocument2 = _interopRequireDefault(_globalDocument);\n\nvar _playlistLoader = require('./playlist-loader');\n\nvar _playlistLoader2 = _interopRequireDefault(_playlistLoader);\n\nvar _playlist = require('./playlist');\n\nvar _playlist2 = _interopRequireDefault(_playlist);\n\nvar _xhr = require('./xhr');\n\nvar _xhr2 = _interopRequireDefault(_xhr);\n\nvar _aesDecrypter = require('aes-decrypter');\n\nvar _binUtils = require('./bin-utils');\n\nvar _binUtils2 = _interopRequireDefault(_binUtils);\n\nvar _videojsContribMediaSources = require('videojs-contrib-media-sources');\n\nvar _m3u8Parser = require('m3u8-parser');\n\nvar _m3u8Parser2 = _interopRequireDefault(_m3u8Parser);\n\nvar _videoJs = (typeof window !== \"undefined\" ? window['videojs'] : typeof global !== \"undefined\" ? global['videojs'] : null);\n\nvar _videoJs2 = _interopRequireDefault(_videoJs);\n\nvar _masterPlaylistController = require('./master-playlist-controller');\n\nvar _config = require('./config');\n\nvar _config2 = _interopRequireDefault(_config);\n\nvar _renditionMixin = require('./rendition-mixin');\n\nvar _renditionMixin2 = _interopRequireDefault(_renditionMixin);\n\nvar _globalWindow = require('global/window');\n\nvar _globalWindow2 = _interopRequireDefault(_globalWindow);\n\nvar _playbackWatcher = require('./playback-watcher');\n\nvar _playbackWatcher2 = _interopRequireDefault(_playbackWatcher);\n\nvar _reloadSourceOnError = require('./reload-source-on-error');\n\nvar _reloadSourceOnError2 = _interopRequireDefault(_reloadSourceOnError);\n\nvar Hls = {\n  PlaylistLoader: _playlistLoader2['default'],\n  Playlist: _playlist2['default'],\n  Decrypter: _aesDecrypter.Decrypter,\n  AsyncStream: _aesDecrypter.AsyncStream,\n  decrypt: _aesDecrypter.decrypt,\n  utils: _binUtils2['default'],\n  xhr: (0, _xhr2['default'])()\n};\n\nObject.defineProperty(Hls, 'GOAL_BUFFER_LENGTH', {\n  get: function get() {\n    _videoJs2['default'].log.warn('using Hls.GOAL_BUFFER_LENGTH is UNSAFE be sure ' + 'you know what you are doing');\n    return _config2['default'].GOAL_BUFFER_LENGTH;\n  },\n  set: function set(v) {\n    _videoJs2['default'].log.warn('using Hls.GOAL_BUFFER_LENGTH is UNSAFE be sure ' + 'you know what you are doing');\n    if (typeof v !== 'number' || v <= 0) {\n      _videoJs2['default'].log.warn('value passed to Hls.GOAL_BUFFER_LENGTH ' + 'must be a number and greater than 0');\n      return;\n    }\n    _config2['default'].GOAL_BUFFER_LENGTH = v;\n  }\n});\n\n// A fudge factor to apply to advertised playlist bitrates to account for\n// temporary flucations in client bandwidth\nvar BANDWIDTH_VARIANCE = 1.2;\n\n/**\n * Returns the CSS value for the specified property on an element\n * using `getComputedStyle`. Firefox has a long-standing issue where\n * getComputedStyle() may return null when running in an iframe with\n * `display: none`.\n *\n * @see https://bugzilla.mozilla.org/show_bug.cgi?id=548397\n * @param {HTMLElement} el the htmlelement to work on\n * @param {string} the proprety to get the style for\n */\nvar safeGetComputedStyle = function safeGetComputedStyle(el, property) {\n  var result = undefined;\n\n  if (!el) {\n    return '';\n  }\n\n  result = _globalWindow2['default'].getComputedStyle(el);\n  if (!result) {\n    return '';\n  }\n\n  return result[property];\n};\n\n/**\n * Chooses the appropriate media playlist based on the current\n * bandwidth estimate and the player size.\n *\n * @return {Playlist} the highest bitrate playlist less than the currently detected\n * bandwidth, accounting for some amount of bandwidth variance\n */\nHls.STANDARD_PLAYLIST_SELECTOR = function () {\n  var effectiveBitrate = undefined;\n  var sortedPlaylists = this.playlists.master.playlists.slice();\n  var bandwidthPlaylists = [];\n  var now = +new Date();\n  var i = undefined;\n  var variant = undefined;\n  var bandwidthBestVariant = undefined;\n  var resolutionPlusOne = undefined;\n  var resolutionPlusOneAttribute = undefined;\n  var resolutionBestVariant = undefined;\n  var width = undefined;\n  var height = undefined;\n\n  sortedPlaylists.sort(Hls.comparePlaylistBandwidth);\n\n  // filter out any playlists that have been excluded due to\n  // incompatible configurations or playback errors\n  sortedPlaylists = sortedPlaylists.filter(function (localVariant) {\n    if (typeof localVariant.excludeUntil !== 'undefined') {\n      return now >= localVariant.excludeUntil;\n    }\n    return true;\n  });\n\n  // filter out any variant that has greater effective bitrate\n  // than the current estimated bandwidth\n  i = sortedPlaylists.length;\n  while (i--) {\n    variant = sortedPlaylists[i];\n\n    // ignore playlists without bandwidth information\n    if (!variant.attributes || !variant.attributes.BANDWIDTH) {\n      continue;\n    }\n\n    effectiveBitrate = variant.attributes.BANDWIDTH * BANDWIDTH_VARIANCE;\n\n    if (effectiveBitrate < this.systemBandwidth) {\n      bandwidthPlaylists.push(variant);\n\n      // since the playlists are sorted in ascending order by\n      // bandwidth, the first viable variant is the best\n      if (!bandwidthBestVariant) {\n        bandwidthBestVariant = variant;\n      }\n    }\n  }\n\n  i = bandwidthPlaylists.length;\n\n  // sort variants by resolution\n  bandwidthPlaylists.sort(Hls.comparePlaylistResolution);\n\n  // forget our old variant from above,\n  // or we might choose that in high-bandwidth scenarios\n  // (this could be the lowest bitrate rendition as  we go through all of them above)\n  variant = null;\n\n  width = parseInt(safeGetComputedStyle(this.tech_.el(), 'width'), 10);\n  height = parseInt(safeGetComputedStyle(this.tech_.el(), 'height'), 10);\n\n  // iterate through the bandwidth-filtered playlists and find\n  // best rendition by player dimension\n  while (i--) {\n    variant = bandwidthPlaylists[i];\n\n    // ignore playlists without resolution information\n    if (!variant.attributes || !variant.attributes.RESOLUTION || !variant.attributes.RESOLUTION.width || !variant.attributes.RESOLUTION.height) {\n      continue;\n    }\n\n    // since the playlists are sorted, the first variant that has\n    // dimensions less than or equal to the player size is the best\n    var variantResolution = variant.attributes.RESOLUTION;\n\n    if (variantResolution.width === width && variantResolution.height === height) {\n      // if we have the exact resolution as the player use it\n      resolutionPlusOne = null;\n      resolutionBestVariant = variant;\n      break;\n    } else if (variantResolution.width < width && variantResolution.height < height) {\n      // if both dimensions are less than the player use the\n      // previous (next-largest) variant\n      break;\n    } else if (!resolutionPlusOne || variantResolution.width < resolutionPlusOneAttribute.width && variantResolution.height < resolutionPlusOneAttribute.height) {\n      // If we still haven't found a good match keep a\n      // reference to the previous variant for the next loop\n      // iteration\n\n      // By only saving variants if they are smaller than the\n      // previously saved variant, we ensure that we also pick\n      // the highest bandwidth variant that is just-larger-than\n      // the video player\n      resolutionPlusOne = variant;\n      resolutionPlusOneAttribute = resolutionPlusOne.attributes.RESOLUTION;\n    }\n  }\n\n  // fallback chain of variants\n  return resolutionPlusOne || resolutionBestVariant || bandwidthBestVariant || sortedPlaylists[0];\n};\n\n// HLS is a source handler, not a tech. Make sure attempts to use it\n// as one do not cause exceptions.\nHls.canPlaySource = function () {\n  return _videoJs2['default'].log.warn('HLS is no longer a tech. Please remove it from ' + 'your player\\'s techOrder.');\n};\n\n/**\n * Whether the browser has built-in HLS support.\n */\nHls.supportsNativeHls = (function () {\n  var video = _globalDocument2['default'].createElement('video');\n\n  // native HLS is definitely not supported if HTML5 video isn't\n  if (!_videoJs2['default'].getComponent('Html5').isSupported()) {\n    return false;\n  }\n\n  // HLS manifests can go by many mime-types\n  var canPlay = [\n  // Apple santioned\n  'application/vnd.apple.mpegurl',\n  // Apple sanctioned for backwards compatibility\n  'audio/mpegurl',\n  // Very common\n  'audio/x-mpegurl',\n  // Very common\n  'application/x-mpegurl',\n  // Included for completeness\n  'video/x-mpegurl', 'video/mpegurl', 'application/mpegurl'];\n\n  return canPlay.some(function (canItPlay) {\n    return (/maybe|probably/i.test(video.canPlayType(canItPlay))\n    );\n  });\n})();\n\n/**\n * HLS is a source handler, not a tech. Make sure attempts to use it\n * as one do not cause exceptions.\n */\nHls.isSupported = function () {\n  return _videoJs2['default'].log.warn('HLS is no longer a tech. Please remove it from ' + 'your player\\'s techOrder.');\n};\n\nvar USER_AGENT = _globalWindow2['default'].navigator && _globalWindow2['default'].navigator.userAgent || '';\n\n/**\n * Determines whether the browser supports a change in the audio configuration\n * during playback. Currently only Firefox 48 and below do not support this.\n * window.isSecureContext is a propterty that was added to window in firefox 49,\n * so we can use it to detect Firefox 49+.\n *\n * @return {Boolean} Whether the browser supports audio config change during playback\n */\nHls.supportsAudioInfoChange_ = function () {\n  if (_videoJs2['default'].browser.IS_FIREFOX) {\n    var firefoxVersionMap = /Firefox\\/([\\d.]+)/i.exec(USER_AGENT);\n    var version = parseInt(firefoxVersionMap[1], 10);\n\n    return version >= 49;\n  }\n  return true;\n};\n\nvar Component = _videoJs2['default'].getComponent('Component');\n\n/**\n * The Hls Handler object, where we orchestrate all of the parts\n * of HLS to interact with video.js\n *\n * @class HlsHandler\n * @extends videojs.Component\n * @param {Object} source the soruce object\n * @param {Tech} tech the parent tech object\n * @param {Object} options optional and required options\n */\n\nvar HlsHandler = (function (_Component) {\n  _inherits(HlsHandler, _Component);\n\n  function HlsHandler(source, tech, options) {\n    var _this = this;\n\n    _classCallCheck(this, HlsHandler);\n\n    _get(Object.getPrototypeOf(HlsHandler.prototype), 'constructor', this).call(this, tech);\n\n    // tech.player() is deprecated but setup a reference to HLS for\n    // backwards-compatibility\n    if (tech.options_ && tech.options_.playerId) {\n      var _player = (0, _videoJs2['default'])(tech.options_.playerId);\n\n      if (!_player.hasOwnProperty('hls')) {\n        Object.defineProperty(_player, 'hls', {\n          get: function get() {\n            _videoJs2['default'].log.warn('player.hls is deprecated. Use player.tech_.hls instead.');\n            return _this;\n          }\n        });\n      }\n    }\n\n    this.tech_ = tech;\n    this.source_ = source;\n    this.stats = {};\n    this.ignoreNextSeekingEvent_ = false;\n\n    // handle global & Source Handler level options\n    this.options_ = _videoJs2['default'].mergeOptions(_videoJs2['default'].options.hls || {}, options.hls);\n    this.setOptions_();\n\n    // listen for fullscreenchange events for this player so that we\n    // can adjust our quality selection quickly\n    this.on(_globalDocument2['default'], ['fullscreenchange', 'webkitfullscreenchange', 'mozfullscreenchange', 'MSFullscreenChange'], function (event) {\n      var fullscreenElement = _globalDocument2['default'].fullscreenElement || _globalDocument2['default'].webkitFullscreenElement || _globalDocument2['default'].mozFullScreenElement || _globalDocument2['default'].msFullscreenElement;\n\n      if (fullscreenElement && fullscreenElement.contains(_this.tech_.el())) {\n        _this.masterPlaylistController_.fastQualityChange_();\n      }\n    });\n\n    this.on(this.tech_, 'seeking', function () {\n      if (this.ignoreNextSeekingEvent_) {\n        this.ignoreNextSeekingEvent_ = false;\n        return;\n      }\n\n      this.setCurrentTime(this.tech_.currentTime());\n    });\n    this.on(this.tech_, 'error', function () {\n      if (this.masterPlaylistController_) {\n        this.masterPlaylistController_.pauseLoading();\n      }\n    });\n\n    this.audioTrackChange_ = function () {\n      _this.masterPlaylistController_.setupAudio();\n    };\n\n    this.on(this.tech_, 'play', this.play);\n  }\n\n  /**\n   * The Source Handler object, which informs video.js what additional\n   * MIME types are supported and sets up playback. It is registered\n   * automatically to the appropriate tech based on the capabilities of\n   * the browser it is running in. It is not necessary to use or modify\n   * this object in normal usage.\n   */\n\n  _createClass(HlsHandler, [{\n    key: 'setOptions_',\n    value: function setOptions_() {\n      var _this2 = this;\n\n      // defaults\n      this.options_.withCredentials = this.options_.withCredentials || false;\n\n      // start playlist selection at a reasonable bandwidth for\n      // broadband internet\n      // 0.5 MB/s\n      if (typeof this.options_.bandwidth !== 'number') {\n        this.options_.bandwidth = 4194304;\n      }\n\n      // grab options passed to player.src\n      ['withCredentials', 'bandwidth'].forEach(function (option) {\n        if (typeof _this2.source_[option] !== 'undefined') {\n          _this2.options_[option] = _this2.source_[option];\n        }\n      });\n\n      this.bandwidth = this.options_.bandwidth;\n    }\n\n    /**\n     * called when player.src gets called, handle a new source\n     *\n     * @param {Object} src the source object to handle\n     */\n  }, {\n    key: 'src',\n    value: function src(_src) {\n      var _this3 = this;\n\n      // do nothing if the src is falsey\n      if (!_src) {\n        return;\n      }\n      this.setOptions_();\n      // add master playlist controller options\n      this.options_.url = this.source_.src;\n      this.options_.tech = this.tech_;\n      this.options_.externHls = Hls;\n      this.masterPlaylistController_ = new _masterPlaylistController.MasterPlaylistController(this.options_);\n      this.playbackWatcher_ = new _playbackWatcher2['default'](_videoJs2['default'].mergeOptions(this.options_, {\n        seekable: function seekable() {\n          return _this3.seekable();\n        }\n      }));\n\n      // `this` in selectPlaylist should be the HlsHandler for backwards\n      // compatibility with < v2\n      this.masterPlaylistController_.selectPlaylist = this.selectPlaylist ? this.selectPlaylist.bind(this) : Hls.STANDARD_PLAYLIST_SELECTOR.bind(this);\n\n      // re-expose some internal objects for backwards compatibility with < v2\n      this.playlists = this.masterPlaylistController_.masterPlaylistLoader_;\n      this.mediaSource = this.masterPlaylistController_.mediaSource;\n\n      // Proxy assignment of some properties to the master playlist\n      // controller. Using a custom property for backwards compatibility\n      // with < v2\n      Object.defineProperties(this, {\n        selectPlaylist: {\n          get: function get() {\n            return this.masterPlaylistController_.selectPlaylist;\n          },\n          set: function set(selectPlaylist) {\n            this.masterPlaylistController_.selectPlaylist = selectPlaylist.bind(this);\n          }\n        },\n        throughput: {\n          get: function get() {\n            return this.masterPlaylistController_.mainSegmentLoader_.throughput.rate;\n          },\n          set: function set(throughput) {\n            this.masterPlaylistController_.mainSegmentLoader_.throughput.rate = throughput;\n            // By setting `count` to 1 the throughput value becomes the starting value\n            // for the cumulative average\n            this.masterPlaylistController_.mainSegmentLoader_.throughput.count = 1;\n          }\n        },\n        bandwidth: {\n          get: function get() {\n            return this.masterPlaylistController_.mainSegmentLoader_.bandwidth;\n          },\n          set: function set(bandwidth) {\n            this.masterPlaylistController_.mainSegmentLoader_.bandwidth = bandwidth;\n            // setting the bandwidth manually resets the throughput counter\n            // `count` is set to zero that current value of `rate` isn't included\n            // in the cumulative average\n            this.masterPlaylistController_.mainSegmentLoader_.throughput = { rate: 0, count: 0 };\n          }\n        },\n        /**\n         * `systemBandwidth` is a combination of two serial processes bit-rates. The first\n         * is the network bitrate provided by `bandwidth` and the second is the bitrate of\n         * the entire process after that - decryption, transmuxing, and appending - provided\n         * by `throughput`.\n         *\n         * Since the two process are serial, the overall system bandwidth is given by:\n         *   sysBandwidth = 1 / (1 / bandwidth + 1 / throughput)\n         */\n        systemBandwidth: {\n          get: function get() {\n            var invBandwidth = 1 / (this.bandwidth || 1);\n            var invThroughput = undefined;\n\n            if (this.throughput > 0) {\n              invThroughput = 1 / this.throughput;\n            } else {\n              invThroughput = 0;\n            }\n\n            var systemBitrate = Math.floor(1 / (invBandwidth + invThroughput));\n\n            return systemBitrate;\n          },\n          set: function set() {\n            _videoJs2['default'].log.error('The \"systemBandwidth\" property is read-only');\n          }\n        }\n      });\n\n      Object.defineProperties(this.stats, {\n        bandwidth: {\n          get: function get() {\n            return _this3.bandwidth || 0;\n          },\n          enumerable: true\n        },\n        mediaRequests: {\n          get: function get() {\n            return _this3.masterPlaylistController_.mediaRequests_() || 0;\n          },\n          enumerable: true\n        },\n        mediaTransferDuration: {\n          get: function get() {\n            return _this3.masterPlaylistController_.mediaTransferDuration_() || 0;\n          },\n          enumerable: true\n        },\n        mediaBytesTransferred: {\n          get: function get() {\n            return _this3.masterPlaylistController_.mediaBytesTransferred_() || 0;\n          },\n          enumerable: true\n        },\n        mediaSecondsLoaded: {\n          get: function get() {\n            return _this3.masterPlaylistController_.mediaSecondsLoaded_() || 0;\n          },\n          enumerable: true\n        }\n      });\n\n      this.tech_.one('canplay', this.masterPlaylistController_.setupFirstPlay.bind(this.masterPlaylistController_));\n\n      this.masterPlaylistController_.on('sourceopen', function () {\n        _this3.tech_.audioTracks().addEventListener('change', _this3.audioTrackChange_);\n      });\n\n      this.masterPlaylistController_.on('selectedinitialmedia', function () {\n        // Add the manual rendition mix-in to HlsHandler\n        (0, _renditionMixin2['default'])(_this3);\n      });\n\n      this.masterPlaylistController_.on('audioupdate', function () {\n        // clear current audioTracks\n        _this3.tech_.clearTracks('audio');\n        _this3.masterPlaylistController_.activeAudioGroup().forEach(function (audioTrack) {\n          _this3.tech_.audioTracks().addTrack(audioTrack);\n        });\n      });\n\n      // the bandwidth of the primary segment loader is our best\n      // estimate of overall bandwidth\n      this.on(this.masterPlaylistController_, 'progress', function () {\n        this.tech_.trigger('progress');\n      });\n\n      // In the live case, we need to ignore the very first `seeking` event since\n      // that will be the result of the seek-to-live behavior\n      this.on(this.masterPlaylistController_, 'firstplay', function () {\n        this.ignoreNextSeekingEvent_ = true;\n      });\n\n      // do nothing if the tech has been disposed already\n      // this can occur if someone sets the src in player.ready(), for instance\n      if (!this.tech_.el()) {\n        return;\n      }\n\n      this.tech_.src(_videoJs2['default'].URL.createObjectURL(this.masterPlaylistController_.mediaSource));\n    }\n\n    /**\n     * a helper for grabbing the active audio group from MasterPlaylistController\n     *\n     * @private\n     */\n  }, {\n    key: 'activeAudioGroup_',\n    value: function activeAudioGroup_() {\n      return this.masterPlaylistController_.activeAudioGroup();\n    }\n\n    /**\n     * Begin playing the video.\n     */\n  }, {\n    key: 'play',\n    value: function play() {\n      this.masterPlaylistController_.play();\n    }\n\n    /**\n     * a wrapper around the function in MasterPlaylistController\n     */\n  }, {\n    key: 'setCurrentTime',\n    value: function setCurrentTime(currentTime) {\n      this.masterPlaylistController_.setCurrentTime(currentTime);\n    }\n\n    /**\n     * a wrapper around the function in MasterPlaylistController\n     */\n  }, {\n    key: 'duration',\n    value: function duration() {\n      return this.masterPlaylistController_.duration();\n    }\n\n    /**\n     * a wrapper around the function in MasterPlaylistController\n     */\n  }, {\n    key: 'seekable',\n    value: function seekable() {\n      return this.masterPlaylistController_.seekable();\n    }\n\n    /**\n    * Abort all outstanding work and cleanup.\n    */\n  }, {\n    key: 'dispose',\n    value: function dispose() {\n      if (this.playbackWatcher_) {\n        this.playbackWatcher_.dispose();\n      }\n      if (this.masterPlaylistController_) {\n        this.masterPlaylistController_.dispose();\n      }\n      this.tech_.audioTracks().removeEventListener('change', this.audioTrackChange_);\n      _get(Object.getPrototypeOf(HlsHandler.prototype), 'dispose', this).call(this);\n    }\n  }]);\n\n  return HlsHandler;\n})(Component);\n\nvar HlsSourceHandler = function HlsSourceHandler(mode) {\n  return {\n    canHandleSource: function canHandleSource(srcObj) {\n      // this forces video.js to skip this tech/mode if its not the one we have been\n      // overriden to use, by returing that we cannot handle the source.\n      if (_videoJs2['default'].options.hls && _videoJs2['default'].options.hls.mode && _videoJs2['default'].options.hls.mode !== mode) {\n        return false;\n      }\n      return HlsSourceHandler.canPlayType(srcObj.type);\n    },\n    handleSource: function handleSource(source, tech, options) {\n      if (mode === 'flash') {\n        // We need to trigger this asynchronously to give others the chance\n        // to bind to the event when a source is set at player creation\n        tech.setTimeout(function () {\n          tech.trigger('loadstart');\n        }, 1);\n      }\n\n      var settings = _videoJs2['default'].mergeOptions(options, { hls: { mode: mode } });\n\n      tech.hls = new HlsHandler(source, tech, settings);\n\n      tech.hls.xhr = (0, _xhr2['default'])();\n      // Use a global `before` function if specified on videojs.Hls.xhr\n      // but still allow for a per-player override\n      if (_videoJs2['default'].Hls.xhr.beforeRequest) {\n        tech.hls.xhr.beforeRequest = _videoJs2['default'].Hls.xhr.beforeRequest;\n      }\n\n      tech.hls.src(source.src);\n      return tech.hls;\n    },\n    canPlayType: function canPlayType(type) {\n      if (HlsSourceHandler.canPlayType(type)) {\n        return 'maybe';\n      }\n      return '';\n    }\n  };\n};\n\n/**\n * A comparator function to sort two playlist object by bandwidth.\n *\n * @param {Object} left a media playlist object\n * @param {Object} right a media playlist object\n * @return {Number} Greater than zero if the bandwidth attribute of\n * left is greater than the corresponding attribute of right. Less\n * than zero if the bandwidth of right is greater than left and\n * exactly zero if the two are equal.\n */\nHls.comparePlaylistBandwidth = function (left, right) {\n  var leftBandwidth = undefined;\n  var rightBandwidth = undefined;\n\n  if (left.attributes && left.attributes.BANDWIDTH) {\n    leftBandwidth = left.attributes.BANDWIDTH;\n  }\n  leftBandwidth = leftBandwidth || _globalWindow2['default'].Number.MAX_VALUE;\n  if (right.attributes && right.attributes.BANDWIDTH) {\n    rightBandwidth = right.attributes.BANDWIDTH;\n  }\n  rightBandwidth = rightBandwidth || _globalWindow2['default'].Number.MAX_VALUE;\n\n  return leftBandwidth - rightBandwidth;\n};\n\n/**\n * A comparator function to sort two playlist object by resolution (width).\n * @param {Object} left a media playlist object\n * @param {Object} right a media playlist object\n * @return {Number} Greater than zero if the resolution.width attribute of\n * left is greater than the corresponding attribute of right. Less\n * than zero if the resolution.width of right is greater than left and\n * exactly zero if the two are equal.\n */\nHls.comparePlaylistResolution = function (left, right) {\n  var leftWidth = undefined;\n  var rightWidth = undefined;\n\n  if (left.attributes && left.attributes.RESOLUTION && left.attributes.RESOLUTION.width) {\n    leftWidth = left.attributes.RESOLUTION.width;\n  }\n\n  leftWidth = leftWidth || _globalWindow2['default'].Number.MAX_VALUE;\n\n  if (right.attributes && right.attributes.RESOLUTION && right.attributes.RESOLUTION.width) {\n    rightWidth = right.attributes.RESOLUTION.width;\n  }\n\n  rightWidth = rightWidth || _globalWindow2['default'].Number.MAX_VALUE;\n\n  // NOTE - Fallback to bandwidth sort as appropriate in cases where multiple renditions\n  // have the same media dimensions/ resolution\n  if (leftWidth === rightWidth && left.attributes.BANDWIDTH && right.attributes.BANDWIDTH) {\n    return left.attributes.BANDWIDTH - right.attributes.BANDWIDTH;\n  }\n  return leftWidth - rightWidth;\n};\n\nHlsSourceHandler.canPlayType = function (type) {\n  var mpegurlRE = /^(audio|video|application)\\/(x-|vnd\\.apple\\.)?mpegurl/i;\n\n  // favor native HLS support if it's available\n  if (!_videoJs2['default'].options.hls.overrideNative && Hls.supportsNativeHls) {\n    return false;\n  }\n  return mpegurlRE.test(type);\n};\n\nif (typeof _videoJs2['default'].MediaSource === 'undefined' || typeof _videoJs2['default'].URL === 'undefined') {\n  _videoJs2['default'].MediaSource = _videojsContribMediaSources.MediaSource;\n  _videoJs2['default'].URL = _videojsContribMediaSources.URL;\n}\n\n// register source handlers with the appropriate techs\nif (_videojsContribMediaSources.MediaSource.supportsNativeMediaSources()) {\n  _videoJs2['default'].getComponent('Html5').registerSourceHandler(HlsSourceHandler('html5'), 0);\n}\nif (_globalWindow2['default'].Uint8Array) {\n  _videoJs2['default'].getComponent('Flash').registerSourceHandler(HlsSourceHandler('flash'));\n}\n\n_videoJs2['default'].HlsHandler = HlsHandler;\n_videoJs2['default'].HlsSourceHandler = HlsSourceHandler;\n_videoJs2['default'].Hls = Hls;\n_videoJs2['default'].m3u8 = _m3u8Parser2['default'];\n_videoJs2['default'].registerComponent('Hls', Hls);\n_videoJs2['default'].options.hls = _videoJs2['default'].options.hls || {};\n_videoJs2['default'].plugin('reloadSourceOnError', _reloadSourceOnError2['default']);\n\nmodule.exports = {\n  Hls: Hls,\n  HlsHandler: HlsHandler,\n  HlsSourceHandler: HlsSourceHandler\n};\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n},{\"./bin-utils\":2,\"./config\":3,\"./master-playlist-controller\":4,\"./playback-watcher\":5,\"./playlist\":7,\"./playlist-loader\":6,\"./reload-source-on-error\":9,\"./rendition-mixin\":10,\"./xhr\":16,\"aes-decrypter\":20,\"global/document\":26,\"global/window\":27,\"m3u8-parser\":64,\"videojs-contrib-media-sources\":101}]},{},[104])(104)\n});\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/videojs-contrib-hls/dist/videojs-contrib-hls.js\n ** module id = 113\n ** module chunks = 0\n **/","/*! videojs-resolution-switcher - 2015-7-26\n * Copyright (c) 2016 Kasper Moskwiak\n * Modified by Pierre Kraft\n * Licensed under the Apache-2.0 license. */\n\n(function() {\n  /* jshint eqnull: true*/\n  /* global require */\n  'use strict';\n  var videojs = null;\n  if(typeof window.videojs === 'undefined' && typeof require === 'function') {\n    videojs = require('video.js');\n  } else {\n    videojs = window.videojs;\n  }\n\n  (function(window, videojs) {\n\n\n    var defaults = {},\n        videoJsResolutionSwitcher,\n        currentResolution = {}, // stores current resolution\n        menuItemsHolder = {}; // stores menuItems\n\n    function setSourcesSanitized(player, sources, label, customSourcePicker) {\n      currentResolution = {\n        label: label,\n        sources: sources\n      };\n      if(typeof customSourcePicker === 'function'){\n        return customSourcePicker(player, sources, label);\n      }\n      return player.src(sources.map(function(src) {\n        return {src: src.src, type: src.type, res: src.res};\n      }));\n    }\n\n  /*\n   * Resolution menu item\n   */\n  var MenuItem = videojs.getComponent('MenuItem');\n  var ResolutionMenuItem = videojs.extend(MenuItem, {\n    constructor: function(player, options, onClickListener, label){\n      this.onClickListener = onClickListener;\n      this.label = label;\n      // Sets this.player_, this.options_ and initializes the component\n      MenuItem.call(this, player, options);\n      this.src = options.src;\n\n      this.on('click', this.onClick);\n      this.on('touchstart', this.onClick);\n\n      if (options.initialySelected) {\n        this.showAsLabel();\n        this.selected(true);\n\n        this.addClass('vjs-selected');\n      }\n    },\n    showAsLabel: function() {\n      // Change menu button label to the label of this item if the menu button label is provided\n      if(this.label) {\n        this.label.innerHTML = this.options_.label;\n      }\n    },\n    onClick: function(customSourcePicker){\n      this.onClickListener(this);\n      // Remember player state\n      var currentTime = this.player_.currentTime();\n      var isPaused = this.player_.paused();\n      this.showAsLabel();\n\n      // add .current class\n      this.addClass('vjs-selected');\n\n      // Hide bigPlayButton\n      if(!isPaused){\n        this.player_.bigPlayButton.hide();\n      }\n      if(typeof customSourcePicker !== 'function' &&\n        typeof this.options_.customSourcePicker === 'function'){\n        customSourcePicker = this.options_.customSourcePicker;\n      }\n      // Change player source and wait for loadeddata event, then play video\n      // loadedmetadata doesn't work right now for flash.\n      // Probably because of https://github.com/videojs/video-js-swf/issues/124\n      // If player preload is 'none' and then loadeddata not fired. So, we need timeupdate event for seek handle (timeupdate doesn't work properly with flash)\n      var handleSeekEvent = 'loadeddata';\n      if(this.player_.techName_ !== 'Youtube' && this.player_.preload() === 'none' && this.player_.techName_ !== 'Flash') {\n        handleSeekEvent = 'timeupdate';\n      }\n      // videojs-contrib-ads support\n      // Change the src of the video without triggering the ad workflow to restart\n      if (this.player_.ads) {\n        // this variable should be updated before modifying the player's source\n        this.player_.ads.contentSrc = this.src[0].src;\n      }\n      // Continue playing after changing source (Safari issue)\n      this.player_.autoplay(true);\n      setSourcesSanitized(this.player_, this.src, this.options_.label, customSourcePicker).one(handleSeekEvent, function() {\n        this.player_.currentTime(currentTime);\n        this.player_.handleTechSeeked_();\n        if(!isPaused){\n          // Start playing and hide loadingSpinner (flash issue ?)\n          this.player_.play().handleTechSeeked_();\n        }\n        this.player_.trigger('resolutionchange');\n        });\n      }\n    });\n\n\n    /*\n     * Resolution menu button\n     */\n     var MenuButton = videojs.getComponent('MenuButton');\n     var ResolutionMenuButton = videojs.extend(MenuButton, {\n       constructor: function(player, options, settings, label){\n        this.sources = options.sources;\n        this.label = label;\n        this.label.innerHTML = options.initialySelectedLabel;\n        // Sets this.player_, this.options_ and initializes the component\n        MenuButton.call(this, player, options, settings);\n        this.controlText('Quality');\n\n        if(settings.dynamicLabel){\n          this.el().appendChild(label);\n        }else{\n          var staticLabel = document.createElement('span');\n          videojs.addClass(staticLabel, 'vjs-resolution-button-staticlabel');\n          this.el().appendChild(staticLabel);\n        }\n       },\n       createItems: function(){\n         var menuItems = [];\n         var labels = (this.sources && this.sources.label) || {};\n         var onClickUnselectOthers = function(clickedItem) {\n          menuItems.map(function(item) {\n            item.selected(item === clickedItem);\n            item.removeClass('vjs-selected');\n          });\n         };\n\n         for (var key in labels) {\n           if (labels.hasOwnProperty(key)) {\n            menuItems.push(new ResolutionMenuItem(\n              this.player_,\n              {\n                label: key,\n                src: labels[key],\n                initialySelected: key === this.options_.initialySelectedLabel,\n                customSourcePicker: this.options_.customSourcePicker\n              },\n              onClickUnselectOthers,\n              this.label));\n             // Store menu item for API calls\n             menuItemsHolder[key] = menuItems[menuItems.length - 1];\n            }\n         }\n         return menuItems;\n       }\n     });\n\n    /**\n     * Initialize the plugin.\n     * @param {object} [options] configuration for the plugin\n     */\n    videoJsResolutionSwitcher = function(options) {\n      var settings = videojs.mergeOptions(defaults, options),\n          player = this,\n          label = document.createElement('span'),\n          groupedSrc = {};\n\n      videojs.addClass(label, 'vjs-resolution-button-label');\n\n      /**\n       * Updates player sources or returns current source URL\n       * @param   {Array}  [src] array of sources [{src: '', type: '', label: '', res: ''}]\n       * @returns {Object|String|Array} videojs player object if used as setter or current source URL, object, or array of sources\n       */\n      player.updateSrc = function(src, _options){\n        //Return current src if src is not given\n        if(!src){ return player.src(); }\n        // Dispose old resolution menu button before adding new sources\n        if(player.controlBar.resolutionSwitcher){\n          player.controlBar.resolutionSwitcher.dispose();\n          delete player.controlBar.resolutionSwitcher;\n        }\n\n        if(_options && _options.hls){\n          player.src(src);\n          return initResolutionForHLS(player);\n        }\n\n        //Sort sources\n        src = src.sort(compareResolutions);\n        groupedSrc = bucketSources(src);\n        var choosen = chooseSrc(groupedSrc, src);\n        var menuButton = new ResolutionMenuButton(player, { sources: groupedSrc, initialySelectedLabel: choosen.label , initialySelectedRes: choosen.res , customSourcePicker: settings.customSourcePicker}, settings, label);\n        videojs.addClass(menuButton.el(), 'vjs-resolution-button');\n        player.controlBar.resolutionSwitcher = player.controlBar.el_.insertBefore(menuButton.el_, player.controlBar.getChild('fullscreenToggle').el_);\n        player.controlBar.resolutionSwitcher.dispose = function(){\n          this.parentNode.removeChild(this);\n        };\n        return setSourcesSanitized(player, choosen.sources, choosen.label);\n      };\n\n      /**\n       * Returns current resolution or sets one when label is specified\n       * @param {String}   [label]         label name\n       * @param {Function} [customSourcePicker] custom function to choose source. Takes 3 arguments: player, sources, label. Must return player object.\n       * @returns {Object}   current resolution object {label: '', sources: []} if used as getter or player object if used as setter\n       */\n      player.currentResolution = function(label, customSourcePicker){\n        if(label == null) { return currentResolution; }\n        if(menuItemsHolder[label] != null){\n          menuItemsHolder[label].onClick(customSourcePicker);\n        }\n        return player;\n      };\n\n      /**\n       * Returns grouped sources by label, resolution and type\n       * @returns {Object} grouped sources: { label: { key: [] }, res: { key: [] }, type: { key: [] } }\n       */\n      player.getGroupedSrc = function(){\n        return groupedSrc;\n      };\n\n      /**\n       * Method used for sorting list of sources\n       * @param   {Object} a - source object with res property\n       * @param   {Object} b - source object with res property\n       * @returns {Number} result of comparation\n       */\n      function compareResolutions(a, b){\n        if(!a.res || !b.res){ return 0; }\n        return (+b.res)-(+a.res);\n      }\n\n      /**\n       * Group sources by label, resolution and type\n       * @param   {Array}  src Array of sources\n       * @returns {Object} grouped sources: { label: { key: [] }, res: { key: [] }, type: { key: [] } }\n       */\n      function bucketSources(src){\n        var resolutions = {\n          label: {},\n          res: {},\n          type: {}\n        };\n        src.map(function(source) {\n          initResolutionKey(resolutions, 'label', source);\n          initResolutionKey(resolutions, 'res', source);\n          initResolutionKey(resolutions, 'type', source);\n\n          appendSourceToKey(resolutions, 'label', source);\n          appendSourceToKey(resolutions, 'res', source);\n          appendSourceToKey(resolutions, 'type', source);\n        });\n        return resolutions;\n      }\n\n      function initResolutionKey(resolutions, key, source) {\n        if(resolutions[key][source[key]] == null) {\n          resolutions[key][source[key]] = [];\n        }\n      }\n\n      function appendSourceToKey(resolutions, key, source) {\n        resolutions[key][source[key]].push(source);\n      }\n\n      /**\n       * Choose src if option.default is specified\n       * @param   {Object} groupedSrc {res: { key: [] }}\n       * @param   {Array}  src Array of sources sorted by resolution used to find high and low res\n       * @returns {Object} {res: string, sources: []}\n       */\n      function chooseSrc(groupedSrc, src){\n        var selectedRes = settings['default']; // use array access as default is a reserved keyword\n        var selectedLabel = '';\n        if (selectedRes === 'high') {\n          selectedRes = src[0].res;\n          selectedLabel = src[0].label;\n        } else if (selectedRes === 'low' || selectedRes == null || !groupedSrc.res[selectedRes]) {\n          // Select low-res if default is low or not set\n          selectedRes = src[src.length - 1].res;\n          selectedLabel = src[src.length -1].label;\n        } else if (groupedSrc.res[selectedRes]) {\n          selectedLabel = groupedSrc.res[selectedRes][0].label;\n        }\n\n        return {res: selectedRes, label: selectedLabel, sources: groupedSrc.res[selectedRes]};\n      }\n\n      function initResolutionForYt(player){\n        // Init resolution\n        player.tech_.ytPlayer.setPlaybackQuality('default');\n\n        // Capture events\n        player.tech_.ytPlayer.addEventListener('onPlaybackQualityChange', function(){\n          player.trigger('resolutionchange');\n        });\n\n        // We must wait for play event\n        player.one('play', function(){\n          var qualities = player.tech_.ytPlayer.getAvailableQualityLevels();\n          // Map youtube qualities names\n          var _yts = {\n            highres: {res: 1080, label: '1080', yt: 'highres'},\n            hd1080: {res: 1080, label: '1080', yt: 'hd1080'},\n            hd720: {res: 720, label: '720', yt: 'hd720'},\n            large: {res: 480, label: '480', yt: 'large'},\n            medium: {res: 360, label: '360', yt: 'medium'},\n            small: {res: 240, label: '240', yt: 'small'},\n            tiny: {res: 144, label: '144', yt: 'tiny'},\n            auto: {res: 0, label: 'auto', yt: 'default'}\n          };\n\n          var _sources = [];\n\n          qualities.map(function(q){\n            _sources.push({\n              src: player.src().src,\n              type: player.src().type,\n              label: _yts[q].label,\n              res: _yts[q].res,\n              _yt: _yts[q].yt\n            });\n          });\n\n          groupedSrc = bucketSources(_sources);\n\n          // Overwrite defualt sourcePicer function\n          var _customSourcePicker = function(_player, _sources, _label){\n            player.tech_.ytPlayer.setPlaybackQuality(_sources[0]._yt);\n            return player;\n          };\n\n          var choosen = {label: 'auto', res: 0, sources: groupedSrc.label.auto};\n          var menuButton = new ResolutionMenuButton(player, {\n            sources: groupedSrc,\n            initialySelectedLabel: choosen.label,\n            initialySelectedRes: choosen.res,\n            customSourcePicker: _customSourcePicker\n          }, settings, label);\n\n          menuButton.el().classList.add('vjs-resolution-button');\n          player.controlBar.resolutionSwitcher = player.controlBar.addChild(menuButton);\n        });\n      }\n\n      function initResolutionForHLS(player){\n        var hls = player.tech_.hls;\n        if(!hls) { return; }\n        // Capture events\n        player.on('mediachange', function(){\n          player.trigger('resolutionchange');\n        });\n\n        player.one('loadedmetadata', function(){\n          var playlists = hls.playlists.master.playlists;\n\n          var _sources = [{ src: 'auto', type: 'application/x-mpegURL', label: 'auto', res: 'auto'}];\n\n          playlists.map(function(value){\n            _sources.push({\n              src: value.uri,\n              type: 'application/x-mpegURL',\n              label: value.attributes.NAME || value.attributes.RESOLUTION.height,\n              res: value.attributes.RESOLUTION.height\n            });\n          });\n\n          groupedSrc = bucketSources(_sources);\n\n          var selectPlaylist =  function (selectedResolution){\n            var _selectPlaylist;\n\n            if(selectedResolution === 'auto'){\n              _selectPlaylist = videojs.HlsHandler.prototype.selectPlaylist;\n              return _selectPlaylist;\n            }\n\n            _selectPlaylist = function (){\n              return hls.playlists.master.playlists.filter(function (playlist) {\n                return playlist.attributes.RESOLUTION.height === selectedResolution;\n              })[0];\n            };\n            return _selectPlaylist;\n          };\n\n          // Overwrite defualt sourcePicer function\n          var _customSourcePicker = function(_player, _sources, _label){\n            var selectedRes = _sources[0].res;\n            hls.selectPlaylist = selectPlaylist(selectedRes);\n            return player;\n          };\n\n          var currentPlaylist = hls.playlists.media();\n          var choosen = {\n            label: 'auto',\n            res: currentPlaylist.attributes.RESOLUTION.height,\n            sources: currentPlaylist\n          };\n\n          var menuButton = new ResolutionMenuButton(player, {\n            sources: groupedSrc,\n            initialySelectedLabel: choosen.label,\n            initialySelectedRes: choosen.res,\n            customSourcePicker: _customSourcePicker\n          }, settings, label);\n\n          menuButton.el().classList.add('vjs-resolution-button');\n          player.controlBar.resolutionSwitcher = player.controlBar.addChild(menuButton);\n        });\n      }\n\n      player.ready(function(){\n        if(player.options_.sources.length > 1){\n          // tech: Html5 and Flash\n          // Create resolution switcher for videos form <source> tag inside <video>\n          player.updateSrc(player.options_.sources);\n        }\n\n        if(player.tech_.hls && player.options_.sources.length){\n          // HLS support\n          initResolutionForHLS(player);\n        }\n\n        if(player.techName_ === 'Youtube'){\n          // tech: YouTube\n          initResolutionForYt(player);\n        }\n      });\n\n    };\n\n    // register the plugin\n    videojs.plugin('videoJsResolutionSwitcher', videoJsResolutionSwitcher);\n  })(window, videojs);\n})();\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/videojs-resolution-switcher/lib/videojs-resolution-switcher.js\n ** module id = 114\n ** module chunks = 0\n **/","const google = window.google;\n\n/**\n * Creates a new player and places it to container with the specified id.\n *\n * @example\n * // Create a video player\n * var player = wjplayer({\n *  containerId: 'player-container',\n *   sources: [{\n *     src: '//vjs.zencdn.net/v/oceans.mp4',\n *     type: 'video/mp4'\n *   }]\n * );\n *\n * // Specify resolution and label of each source\n * var player = wjplayer({\n *  containerId: 'player-container',\n *  defaultQuality: 'high',\n *  // sourcesWithRes array will be passed to videojs-resolution-switcher\n *  sourcesWithRes: [\n *  {\n *    src: 'path-to-video-low-quality.m3u8',\n *    type: 'application/x-mpegURL',\n *    res: 360,\n *    label: 'SD'\n *  },\n *  {\n *    src: 'path-to-video-high-quality.m3u8',\n *    type: 'application/x-mpegURL',\n *    res: 720,\n *    label: 'HD'\n *  }]\n * });\n *\n * // Create an audio player\n *  var audioPlayer = wjplayer({\n *    containerId: 'player-container',\n *    playerType: 'audio',\n *    sources: [{\n *      src: '//vjs.zencdn.net/v/oceans.mp3',\n *      type: 'video/mp3'\n *    }]\n *  });\n *\n *  // Insert ads\n *  var player = wjplayer({\n *    containerId: 'player-container',\n *    sources: [{\n *      src: '//vjs.zencdn.net/v/oceans.mp4',\n *      type: 'video/mp4'\n *    }],\n *    ads: {\n *      adTagUrl: '//example.com/vmap.xml'\n *    }\n *  });\n *\n * @param {Object} options\n *   Configuration options.\n *\n * @param {String} options.containerId\n *   REQUIRED id of the container\n *   where player shoud be inserted (appendChild() will be used)\n *\n * @param {Array} options.sources\n *   REQUIRED IF `sourcesWithRes` IS NOT PROVIDED\n *   Array of sources to pass to player.src()\n *   @see http://docs.videojs.com/docs/api/player.html#Methodssrc\n *\n * @param {Array} options.sourcesWithRes\n *   REQUIRED IF `sources` IS NOT PROVIDED\n *   Array of sources to pass to player.updateSrc()\n *   @see https://github.com/kmoskwiak/videojs-resolution-switcher#updatesrcsource\n *\n * @param {String} options.playerId\n *   id to assign to the player element.\n *   Defaults to \"player\"\n *\n * @param {String} options.playerType\n *   \"video\" or \"audio\"\n *   Defaults to \"video\"\n *\n * @param {String|Number} options.defaultQuality\n *   \"low\", \"high\" or Number\n *   @see https://github.com/kmoskwiak/videojs-resolution-switcher#avalible-options\n *\n * @param {String} options.pathToSwf\n *   Path to flash player file (will be passed to videojs as videojs.options.flash.swf)\n *\n * @param {String} options.locale\n *  If specified, will be set as player and ads locale.\n *  This may be any ISO 639-1 (two-letter) code.\n *\n * @param {Boolean} options.autoplay\n *   Defaults to false\n *\n * @param {Boolean} options.controls\n *   Defaults to true\n *\n * @param {Boolean} options.loop\n *   The loop attribute causes the video to start over as soon as it ends.\n *   Defaults to false\n *\n * @param {String} options.preload\n *   Defaults to \"metadata\"\n *\n * @param {String} options.poster\n *   The width attribute sets the display width of the video (in pixels).\n *   This will take effect only if `options.classes` param is set\n *   (`vjs-fill` class, used by defaults, sets player width and height to 100%).\n *\n * @param {Number} options.width\n *   The height attribute sets the display height of the video (in pixels).\n *\n * @param {Number} options.height\n *   Player height\n *\n * @param {Object} options.videojs\n *   Any additilnal ptions to pass to videojs.\n *   @see  http://docs.videojs.com/docs/guides/options.html\n *\n * @param {Boolean} options.muted\n *   Indicates whether the player should be muted by default.\n *   Defaults to false\n *\n * @param {String} options.skin\n *   Skin name.\n *   Defaults to \"default\"\n *\n * @param {Array} options.classes\n *   CSS classnames to assign to the player in addition to `video-js`.\n *   By default, the following classes are used:\n *   `['vjs-default-skin',\n *   'vjs-fill',\n *   'vjs-big-play-centered']`\n *\n * @param {Boolean} options.stretch\n *   Indicates whether video should stretch to fit the container.\n *   Defaults to false\n *\n * @param {Boolean|Object} options.downloadButton\n *   Indicates whether a download button should be shown in control bar.\n * @param {String} options.downloadButton.text\n *   Button title.\n *   Defaults to \"Download\"\n *\n * @param {String} options.volumeStyle\n *   \"horizontal\" or \"vertical\".\n *   Defaults to \"vertical\"\n *\n * @param {Boolean|Object} options.panorama\n *   Used for pamoramic (360-degree) videos.\n *   Pass true or options object for videojs-panorama plugin\n *   @see https://github.com/yanwsh/videojs-panorama\n *   Defaults to false\n *\n * @param {String} options.crossorigin\n *   Used with videojs-panorama plugin.\n *   Pass \"anonymous\" to avoid cross domain issue\n *   (will work on Chrome and Firefox, not Safari)\n *   @see https://github.com/yanwsh/videojs-panorama#cross-domian-issue\n *\n * @param {Object} options.ads\n *   Settings for videojs-ima plugin.\n *   @see https://github.com/googleads/videojs-ima#additional-settings\n * @param {String} options.ads.adTagUrl\n *   Tag url. The only requried setting here.\n * @param {String} options.ads.adLabel\n *   Replaces the \"Advertisement\" text in the ad label.\n * @param {Boolean} options.ads.showControlsForJSAds\n *   Defaults to false\n *\n * @param {Object} options.share\n *   Will be passed to videojs-social plugin.\n *   @see https://github.com/Go-Promo/videojs-social for details.\n * @param {String} options.share.url\n *   This is the URL that points to your custom web page\n *   which has your video and the meta tags for sharing.\n * @param {String} options.share.embedCode\n *   Iframe embed code for sharing the video.\n *\n * @return {Object} the player object.\n */\nfunction wjplayer(options) {\n  return new WJPlayer(options);\n}\n\nclass WJPlayer {\n  constructor(options) {\n    if (!(typeof options === 'object' && options.containerId)) {\n      throw new Error('options.containerId isn\\'t specified');\n    }\n\n    this.defaults = {\n      playerId: 'player',\n      playerType: 'video',\n      sources: [],\n      sourcesWithRes: [],\n      pathToSwf: '',\n      poster: '',\n      autoplay: false,\n      controls: true,\n      loop: false,\n      muted: false,\n      preload: 'metadata',\n      volumeStyle: 'vertical',\n      stretch: false,\n      skin: 'default',\n      classes: [],\n      enableResolutionSwitcher: false\n    };\n\n    this.browser = {\n      IS_IOS: /iP(hone|ad|od)/i.test(navigator.userAgent),\n      IS_ANDROID: /Android/.test(navigator.userAgent)\n    };\n    this.browser.IS_MOBILE = this.browser.IS_IOS || this.browser.IS_ANDROID;\n\n    this.options = videojs.mergeOptions(this.defaults, options);\n\n    // will be passed to videojs\n    this.options.videojs = videojs.mergeOptions({\n      controls: this.options.controls,\n      preload: this.options.preload,\n      loop: this.options.loop,\n      poster: this.options.poster,\n      language: this.options.locale,\n      html5: {\n        hlsjsConfig: {}\n      },\n      plugins: {},\n      controlBar: {}\n    }, this.options.videojs);\n\n    this.options.classes = ['video-js'].concat(\n      Array.isArray(options.classes)\n        ? options.classes\n        : ['vjs-fill', 'vjs-big-play-centered']\n    );\n\n    if (this.options.volumeStyle === 'vertical') {\n      this.options.videojs.controlBar.volumeMenuButton = {\n        inline: false,\n        vertical: true\n      };\n    }\n\n    if (this.options.playerType === 'video'\n      && videojs.Hls\n      && (!this.browser.IS_MOBILE || this.options.sourcesWithRes.length)) {\n      this.options.enableResolutionSwitcher = true;\n      // will be passed to videoJsResolutionSwitcher plugin\n      this.options.videojs.plugins.videoJsResolutionSwitcher = {\n        default: this.options.defaultQuality,\n        dynamicLabel: true\n      };\n    }\n\n    if (this.options.ads && this.options.ads.adTagUrl && !this.browser.IS_IOS) {\n      // will be passed to ima plugin\n      this.options.ads = videojs.mergeOptions({\n        id: this.options.playerId,\n        locale: this.options.locale,\n        showControlsForJSAds: false\n      }, this.options.ads);\n    } else {\n      this.options.ads = {};\n    }\n\n    this.init();\n\n    return this.player;\n  }\n\n  init() {\n    this.createPlayer();\n\n    if (this.options.pathToSwf) {\n      videojs.options.flash.swf = this.options.pathToSwf;\n    }\n\n    if (this.options.share) {\n      videojs.addLanguage('ru', {\n        'Share Video': 'Поделиться',\n        'Direct Link': 'Прямая ссылка',\n        'Embed Code': 'Код для встраивания плеера'\n      });\n    }\n\n    // Init player\n    this.player = videojs(this.options.playerId, this.options.videojs, () => {\n      if (!!this.options.panorama && (this.player.panorama)) {\n        this.player.panorama(typeof this.options.panorama === 'object'\n          ? this.options.panorama\n          : {}\n        );\n        window.addEventListener('resize', () => {\n          const canvas = this.player.getChild('Canvas');\n          return canvas.handleResize();\n        });\n      }\n\n      // Init resolution switcher plugin\n      if (this.options.enableResolutionSwitcher && this.options.sourcesWithRes.length) {\n        this.player.updateSrc(this.options.sourcesWithRes);\n      }\n\n      // Init download button plugin\n      if (this.options.downloadButton && (this.player.downloadButton)) {\n        this.player.downloadButton(this.options.downloadButton);\n      }\n\n      // Init share plugin\n      if (this.options.share) {\n        this.player.social(this.options.share);\n      }\n\n      if (this.options.loop) {\n        this.player.loadingSpinner.hide();\n      }\n\n      // Start playback\n      if (this.options.autoplay && !this.browser.IS_MOBILE) {\n        this.play();\n      } else if (this.placeholder) {\n        this.placeholder.addEventListener('click', this.play.bind(this));\n        // not always works\n        // var startEvent = this.browser.IS_MOBILE ? 'touchstart' : 'click';\n        // this.player.one(startEvent, this.play.bind(this));\n      } else {\n        this.initAds();\n      }\n    });\n    if (typeof this.player.qualityPickerPlugin === 'function') {\n      this.player.qualityPickerPlugin({});\n    }\n  }\n\n  createPlayer() {\n    this.container = document.getElementById(this.options.containerId);\n\n    let classes = this.options.classes;\n    classes.push('vjs-' + this.options.skin + '-skin');\n\n    if (this.options.stretch) {\n      classes.push('vjs-stretch');\n    }\n\n    if (this.options.ads && this.browser.IS_MOBILE) {\n      this.placeholder = document.createElement('div');\n      this.placeholder.id = 'player-placeholder';\n      this.container.appendChild(this.placeholder);\n    }\n\n    const dumbPlayer = document.createElement(this.options.playerType);\n    dumbPlayer.id = this.options.playerId;\n    dumbPlayer.className = classes.join(' ');\n\n    if (this.options.crossorigin) {\n      dumbPlayer.setAttribute('crossorigin', this.options.crossorigin);\n    }\n\n    if (this.options.muted) {\n      dumbPlayer.setAttribute('muted', '');\n    }\n\n    this.options.sources.forEach(function(source) {\n      const contentSrc = document.createElement('source');\n      contentSrc.setAttribute('src', source.src);\n      contentSrc.setAttribute('type', source.type);\n      dumbPlayer.appendChild(contentSrc);\n    });\n\n    this.container.appendChild(dumbPlayer);\n  }\n\n  play() {\n    this.initAds();\n    this.player.play();\n    this.options.autoplay && this.player.autoplay(true);\n\n    if (this.placeholder) {\n      this.container.removeChild(this.placeholder);\n    }\n  }\n\n  initAds() {\n    if (!this.options.ads || !this.options.ads.adTagUrl || !this.player.ima) {\n      return;\n    }\n\n    this.player.ima(this.options.ads, this.adsManagerLoadedCallback.bind(this));\n    this.player.ima.initializeAdDisplayContainer();\n    this.player.ima.requestAds();\n    this.imaContainer = document.getElementById(this.options.ads.id + '_ima-ad-container');\n    this.imaContainer.style.display = 'none';\n\n    if (!this.placeholder) {\n      this.imaContainer.addEventListener('click', () => {\n        this.player.play();\n      });\n    }\n  }\n\n  adsManagerLoadedCallback() {\n    this.player.ima.addEventListener(google.ima.AdEvent.Type.ALL_ADS_COMPLETED, () => {\n      this.imaContainer.style.display = 'none';\n      this.player.removeClass('vjs-ad-playing');\n    });\n\n    this.player.ima.startFromReadyCallback();\n  }\n}\n\nexport default wjplayer;\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/wjplayer.js\n **/"],"sourceRoot":""}